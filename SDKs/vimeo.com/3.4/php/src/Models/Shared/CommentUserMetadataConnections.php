<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CommentUserMetadataConnections - The list of resource URIs related to the user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CommentUserMetadataConnections
{
    /**
     * Information about the albums created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsAlbums $albums
     */
	#[\JMS\Serializer\Annotation\SerializedName('albums')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsAlbums')]
    public CommentUserMetadataConnectionsAlbums $albums;
    
    /**
     * Information about the appearances of this user in other videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsAppearances $appearances
     */
	#[\JMS\Serializer\Annotation\SerializedName('appearances')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsAppearances')]
    public CommentUserMetadataConnectionsAppearances $appearances;
    
    /**
     * Information on the users that the current user has blocked. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsBlock $block
     */
	#[\JMS\Serializer\Annotation\SerializedName('block')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsBlock')]
    public CommentUserMetadataConnectionsBlock $block;
    
    /**
     * Information about this user's followed categories.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsCategories $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsCategories')]
    public CommentUserMetadataConnectionsCategories $categories;
    
    /**
     * Information about this user's subscribed channels.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsChannels $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsChannels')]
    public CommentUserMetadataConnectionsChannels $channels;
    
    /**
     * Information about this user's feed.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFeed $feed
     */
	#[\JMS\Serializer\Annotation\SerializedName('feed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFeed')]
    public CommentUserMetadataConnectionsFeed $feed;
    
    /**
     * Information about this user's folders.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFolders $folders
     */
	#[\JMS\Serializer\Annotation\SerializedName('folders')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFolders')]
    public CommentUserMetadataConnectionsFolders $folders;
    
    /**
     * Information about the user's followers.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFollowers $followers
     */
	#[\JMS\Serializer\Annotation\SerializedName('followers')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFollowers')]
    public CommentUserMetadataConnectionsFollowers $followers;
    
    /**
     * Information about the users that the current user is following.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFollowing $following
     */
	#[\JMS\Serializer\Annotation\SerializedName('following')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFollowing')]
    public CommentUserMetadataConnectionsFollowing $following;
    
    /**
     * Information about the groups created by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsGroups $groups
     */
	#[\JMS\Serializer\Annotation\SerializedName('groups')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsGroups')]
    public CommentUserMetadataConnectionsGroups $groups;
    
    /**
     * Information about the videos that this user has liked.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsLikes $likes
     */
	#[\JMS\Serializer\Annotation\SerializedName('likes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsLikes')]
    public CommentUserMetadataConnectionsLikes $likes;
    
    /**
     * Information about the channels that this user moderates.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsModeratedChannels $moderatedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('moderated_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsModeratedChannels')]
    public CommentUserMetadataConnectionsModeratedChannels $moderatedChannels;
    
    /**
     * Information about this user's portraits.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsPictures $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsPictures')]
    public CommentUserMetadataConnectionsPictures $pictures;
    
    /**
     * Information about this user's portfolios.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsPortfolios $portfolios
     */
	#[\JMS\Serializer\Annotation\SerializedName('portfolios')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsPortfolios')]
    public CommentUserMetadataConnectionsPortfolios $portfolios;
    
    /**
     * A collection of recommended channels for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsRecommendedChannels $recommendedChannels
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_channels')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsRecommendedChannels')]
    public CommentUserMetadataConnectionsRecommendedChannels $recommendedChannels;
    
    /**
     * A Collection of recommended users for the current user to follow. This data requires a bearer token with the `private` scope.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsRecommendedUsers $recommendedUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('recommended_users')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsRecommendedUsers')]
    public CommentUserMetadataConnectionsRecommendedUsers $recommendedUsers;
    
    /**
     * Information about the videos that have been shared with this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsShared $shared
     */
	#[\JMS\Serializer\Annotation\SerializedName('shared')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsShared')]
    public CommentUserMetadataConnectionsShared $shared;
    
    /**
     * Information about the videos uploaded by this user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsVideos $videos
     */
	#[\JMS\Serializer\Annotation\SerializedName('videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsVideos')]
    public CommentUserMetadataConnectionsVideos $videos;
    
    /**
     * Information about the videos that this user has watched.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsWatchedVideos $watchedVideos
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched_videos')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsWatchedVideos')]
    public CommentUserMetadataConnectionsWatchedVideos $watchedVideos;
    
    /**
     * Information about the videos that this user wants to watch later.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsWatchlater')]
    public CommentUserMetadataConnectionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->albums = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsAlbums();
		$this->appearances = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsAppearances();
		$this->block = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsBlock();
		$this->categories = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsCategories();
		$this->channels = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsChannels();
		$this->feed = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFeed();
		$this->folders = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFolders();
		$this->followers = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFollowers();
		$this->following = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsFollowing();
		$this->groups = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsGroups();
		$this->likes = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsLikes();
		$this->moderatedChannels = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsModeratedChannels();
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsPictures();
		$this->portfolios = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsPortfolios();
		$this->recommendedChannels = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsRecommendedChannels();
		$this->recommendedUsers = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsRecommendedUsers();
		$this->shared = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsShared();
		$this->videos = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsVideos();
		$this->watchedVideos = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsWatchedVideos();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\CommentUserMetadataConnectionsWatchlater();
	}
}
