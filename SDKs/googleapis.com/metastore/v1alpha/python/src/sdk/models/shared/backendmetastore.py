"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BackendMetastoreMetastoreTypeEnum(str, Enum):
    r"""The type of the backend metastore."""
    METASTORE_TYPE_UNSPECIFIED = 'METASTORE_TYPE_UNSPECIFIED'
    DATAPLEX = 'DATAPLEX'
    BIGQUERY = 'BIGQUERY'
    DATAPROC_METASTORE = 'DATAPROC_METASTORE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BackendMetastore:
    r"""Represents a backend metastore for the federation."""
    
    metastore_type: Optional[BackendMetastoreMetastoreTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metastoreType'), 'exclude': lambda f: f is None }})
    r"""The type of the backend metastore."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The relative resource name of the metastore that is being federated. The formats of the relative resource names for the currently supported metastores are listed below: BigQuery projects/{project_id} Dataproc Metastore projects/{project_id}/locations/{location}/services/{service_id}"""  
    