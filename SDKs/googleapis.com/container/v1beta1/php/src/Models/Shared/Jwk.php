<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Jwk - Jwk is a JSON Web Key as specified in RFC 7517
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Jwk
{
    /**
     * Algorithm.
     * 
     * @var ?string $alg
     */
	#[\JMS\Serializer\Annotation\SerializedName('alg')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $alg = null;
    
    /**
     * Used for ECDSA keys.
     * 
     * @var ?string $crv
     */
	#[\JMS\Serializer\Annotation\SerializedName('crv')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $crv = null;
    
    /**
     * Used for RSA keys.
     * 
     * @var ?string $e
     */
	#[\JMS\Serializer\Annotation\SerializedName('e')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $e = null;
    
    /**
     * Key ID.
     * 
     * @var ?string $kid
     */
	#[\JMS\Serializer\Annotation\SerializedName('kid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kid = null;
    
    /**
     * Key Type.
     * 
     * @var ?string $kty
     */
	#[\JMS\Serializer\Annotation\SerializedName('kty')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kty = null;
    
    /**
     * Used for RSA keys.
     * 
     * @var ?string $n
     */
	#[\JMS\Serializer\Annotation\SerializedName('n')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $n = null;
    
    /**
     * Permitted uses for the public keys.
     * 
     * @var ?string $use
     */
	#[\JMS\Serializer\Annotation\SerializedName('use')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $use = null;
    
    /**
     * Used for ECDSA keys.
     * 
     * @var ?string $x
     */
	#[\JMS\Serializer\Annotation\SerializedName('x')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $x = null;
    
    /**
     * Used for ECDSA keys.
     * 
     * @var ?string $y
     */
	#[\JMS\Serializer\Annotation\SerializedName('y')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $y = null;
    
	public function __construct()
	{
		$this->alg = null;
		$this->crv = null;
		$this->e = null;
		$this->kid = null;
		$this->kty = null;
		$this->n = null;
		$this->use = null;
		$this->x = null;
		$this->y = null;
	}
}
