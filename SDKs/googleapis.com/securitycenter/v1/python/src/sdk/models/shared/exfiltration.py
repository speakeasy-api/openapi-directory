"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import exfilresource as shared_exfilresource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Exfiltration:
    r"""Exfiltration represents a data exfiltration attempt of one or more sources to one or more targets. Sources represent the source of data that is exfiltrated, and Targets represents the destination the data was copied to."""
    
    sources: Optional[list[shared_exfilresource.ExfilResource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sources'), 'exclude': lambda f: f is None }})
    r"""If there are multiple sources, then the data is considered \\"joined\\" between them. For instance, BigQuery can join multiple tables, and each table would be considered a source."""  
    targets: Optional[list[shared_exfilresource.ExfilResource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targets'), 'exclude': lambda f: f is None }})
    r"""If there are multiple targets, each target would get a complete copy of the \\"joined\\" source data."""  
    