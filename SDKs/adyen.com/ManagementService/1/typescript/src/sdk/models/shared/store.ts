/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Links } from "./links";
import { StoreLocation } from "./storelocation";
import { StoreSplitConfiguration } from "./storesplitconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * The status of the store. Possible values are:
 *
 * @remarks
 *
 * - **active**. This value is assigned automatically when a store is created.
 * - **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.
 * - **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.
 */
export enum StoreStatusEnum {
  Active = "active",
  Closed = "closed",
  Inactive = "inactive",
}

/**
 * OK - the request has succeeded.
 */
export class Store extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => Links)
  links?: Links;

  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => StoreLocation)
  address?: StoreLocation;

  /**
   * The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
   *
   * @remarks
   *  If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "businessLineIds" })
  businessLineIds?: string[];

  /**
   * The description of the store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * When using the Zip payment method: The location ID that Zip has assigned to your store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalReferenceId" })
  externalReferenceId?: string;

  /**
   * The unique identifier of the store. This value is generated by Adyen.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The unique identifier of the merchant account that the store belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantId" })
  merchantId?: string;

  /**
   * The phone number of the store, including '+' and country code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  phoneNumber?: string;

  /**
   * A reference to recognize the store by. Also known as the store code.
   *
   * @remarks
   *  Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The store name shown on the shopper's bank or credit card statement and on the shopper receipt.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperStatement" })
  shopperStatement?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "splitConfiguration" })
  @Type(() => StoreSplitConfiguration)
  splitConfiguration?: StoreSplitConfiguration;

  /**
   * The status of the store. Possible values are:
   *
   * @remarks
   *
   * - **active**. This value is assigned automatically when a store is created.
   * - **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.
   * - **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: StoreStatusEnum;
}
