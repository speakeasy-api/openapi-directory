/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AvailabilityProviderTypeEnum } from "./availabilityprovidertypeenum";
import { LambdaAvailabilityProvider } from "./lambdaavailabilityprovider";
import { RedactedEwsAvailabilityProvider } from "./redactedewsavailabilityprovider";
import { Expose, Transform, Type } from "class-transformer";

/**
 * List all the <code>AvailabilityConfiguration</code>'s for the given WorkMail organization.
 */
export class AvailabilityConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DateCreated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DateModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateModified?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EwsProvider" })
  @Type(() => RedactedEwsAvailabilityProvider)
  ewsProvider?: RedactedEwsAvailabilityProvider;

  @SpeakeasyMetadata()
  @Expose({ name: "LambdaProvider" })
  @Type(() => LambdaAvailabilityProvider)
  lambdaProvider?: LambdaAvailabilityProvider;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: AvailabilityProviderTypeEnum;
}
