<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Schema
{
    /**
     * Schema's human readable description.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * Document time to live, in days. After this many days from its creation or update, any document cerated from this schema will be deleted.
     * 
     * @var ?int $documentTTL
     */
	#[\JMS\Serializer\Annotation\SerializedName('documentTTL')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $documentTTL = null;
    
    /**
     * Object describing each field in your desired schema. In this object, each property is a new object, describing the field according to: `type` (string); `sensitive` (boolean); `pii` (boolean) and; `items.type` (if field is array).
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SchemaProperties $properties
     */
	#[\JMS\Serializer\Annotation\SerializedName('properties')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SchemaProperties')]
    public SchemaProperties $properties;
    
    /**
     * Schema required fields.
     * 
     * @var array<string> $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $required;
    
    /**
     * Schema title.
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
    /**
     * Schema type.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * $vIndexed
     * 
     * @var ?array<mixed> $vIndexed
     */
	#[\JMS\Serializer\Annotation\SerializedName('v-indexed')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $vIndexed = null;
    
    /**
     * $vUnique
     * 
     * @var ?array<mixed> $vUnique
     */
	#[\JMS\Serializer\Annotation\SerializedName('v-unique')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $vUnique = null;
    
    /**
     * Schema version.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->description = "";
		$this->documentTTL = null;
		$this->properties = new \OpenAPI\OpenAPI\Models\Shared\SchemaProperties();
		$this->required = [];
		$this->title = "";
		$this->type = "";
		$this->vIndexed = null;
		$this->vUnique = null;
		$this->version = null;
	}
}
