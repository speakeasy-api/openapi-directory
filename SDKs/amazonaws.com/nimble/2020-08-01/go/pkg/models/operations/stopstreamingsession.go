// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopStreamingSessionRequestBodyVolumeRetentionModeEnum - Adds additional instructions to a streaming session stop action to either retain the EBS volumes or delete the EBS volumes.
type StopStreamingSessionRequestBodyVolumeRetentionModeEnum string

const (
	StopStreamingSessionRequestBodyVolumeRetentionModeEnumRetain StopStreamingSessionRequestBodyVolumeRetentionModeEnum = "RETAIN"
	StopStreamingSessionRequestBodyVolumeRetentionModeEnumDelete StopStreamingSessionRequestBodyVolumeRetentionModeEnum = "DELETE"
)

func (e StopStreamingSessionRequestBodyVolumeRetentionModeEnum) ToPointer() *StopStreamingSessionRequestBodyVolumeRetentionModeEnum {
	return &e
}

func (e *StopStreamingSessionRequestBodyVolumeRetentionModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RETAIN":
		fallthrough
	case "DELETE":
		*e = StopStreamingSessionRequestBodyVolumeRetentionModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StopStreamingSessionRequestBodyVolumeRetentionModeEnum: %v", v)
	}
}

type StopStreamingSessionRequestBody struct {
	// Adds additional instructions to a streaming session stop action to either retain the EBS volumes or delete the EBS volumes.
	VolumeRetentionMode *StopStreamingSessionRequestBodyVolumeRetentionModeEnum `json:"volumeRetentionMode,omitempty"`
}

type StopStreamingSessionRequest struct {
	RequestBody   StopStreamingSessionRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
	XAmzClientToken   *string `header:"style=simple,explode=false,name=X-Amz-Client-Token"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The streaming session ID for the <code>StopStreamingSessionRequest</code>.
	SessionID string `pathParam:"style=simple,explode=false,name=sessionId"`
	// The studioId for the StopStreamingSessionRequest.
	StudioID string `pathParam:"style=simple,explode=false,name=studioId"`
}

type StopStreamingSessionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerErrorException
	InternalServerErrorException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StopStreamingSessionResponse *shared.StopStreamingSessionResponse
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
