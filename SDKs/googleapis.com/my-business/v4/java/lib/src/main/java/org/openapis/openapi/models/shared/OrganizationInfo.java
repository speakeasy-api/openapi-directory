/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrganizationInfo - Additional Info stored for an organization.
 */
public class OrganizationInfo {
    /**
     * The contact number for the organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public String phoneNumber;
    public OrganizationInfo withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Represents a postal address, e.g. for postal delivery or payments addresses. Given a postal address, a postal service can deliver items to a premise, P.O. Box or similar. It is not intended to model geographical locations (roads, towns, mountains). In typical usage an address would be created via user input or from importing existing data, depending on the type of process. Advice on address input / editing: - Use an i18n-ready address widget such as https://github.com/google/libaddressinput) - Users should not be presented with UI elements for input or editing of fields outside countries where that field is used. For more guidance on how to use this schema, please see: https://support.google.com/business/answer/6397478
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalAddress")
    public PostalAddress postalAddress;
    public OrganizationInfo withPostalAddress(PostalAddress postalAddress) {
        this.postalAddress = postalAddress;
        return this;
    }
    
    /**
     * The registered domain for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registeredDomain")
    public String registeredDomain;
    public OrganizationInfo withRegisteredDomain(String registeredDomain) {
        this.registeredDomain = registeredDomain;
        return this;
    }
    
}
