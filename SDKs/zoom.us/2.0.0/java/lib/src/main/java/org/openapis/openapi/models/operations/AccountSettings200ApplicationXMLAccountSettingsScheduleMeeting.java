/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



/**
 * AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting - Account Settings: Schedule Meeting.
 */
public class AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting {
    /**
     * Determine how participants can join the audio portion of the meeting.&lt;br&gt;`both` - Telephony and VoIP.&lt;br&gt;`telephony` - Audio PSTN telephony only.&lt;br&gt;`voip` - VoIP only.&lt;br&gt;`thirdParty` - 3rd party audio conference.
     */
    
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum audioType;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withAudioType(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingAudioTypeEnum audioType) {
        this.audioType = audioType;
        return this;
    }
    
    /**
     * Only Zoom users who are signed in can join meetings.
     */
    
    public Boolean enforceLogin;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withEnforceLogin(Boolean enforceLogin) {
        this.enforceLogin = enforceLogin;
        return this;
    }
    
    /**
     * Only signed in users with a specified domain can join the meeting. 
     */
    
    public String enforceLoginDomains;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withEnforceLoginDomains(String enforceLoginDomains) {
        this.enforceLoginDomains = enforceLoginDomains;
        return this;
    }
    
    /**
     * Only signed in users with a specific domain can join meetings.
     */
    
    public Boolean enforceLoginWithDomains;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withEnforceLoginWithDomains(Boolean enforceLoginWithDomains) {
        this.enforceLoginWithDomains = enforceLoginWithDomains;
        return this;
    }
    
    /**
     * Require a password for Personal Meetings if attendees can join before host.
     */
    
    public Boolean forcePmiJbhPassword;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withForcePmiJbhPassword(Boolean forcePmiJbhPassword) {
        this.forcePmiJbhPassword = forcePmiJbhPassword;
        return this;
    }
    
    /**
     * Start meetings with the host video on.
     */
    
    public Boolean hostVideo;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withHostVideo(Boolean hostVideo) {
        this.hostVideo = hostVideo;
        return this;
    }
    
    /**
     * Allow participants to join the meeting before the host arrives.
     */
    
    public Boolean joinBeforeHost;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withJoinBeforeHost(Boolean joinBeforeHost) {
        this.joinBeforeHost = joinBeforeHost;
        return this;
    }
    
    /**
     * Account wide meeting/webinar [password requirements](https://support.zoom.us/hc/en-us/articles/360033559832-Meeting-and-webinar-passwords#h_a427384b-e383-4f80-864d-794bf0a37604).
     */
    
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement meetingPasswordRequirement;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withMeetingPasswordRequirement(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingMeetingPasswordRequirement meetingPasswordRequirement) {
        this.meetingPasswordRequirement = meetingPasswordRequirement;
        return this;
    }
    
    /**
     * Always display "Zoom Meeting" as the meeting topic.
     */
    
    public Boolean notStoreMeetingTopic;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withNotStoreMeetingTopic(Boolean notStoreMeetingTopic) {
        this.notStoreMeetingTopic = notStoreMeetingTopic;
        return this;
    }
    
    /**
     * Start meetings with the participant video on. Participants can change this setting during the meeting.
     */
    
    public Boolean participantVideo;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withParticipantVideo(Boolean participantVideo) {
        this.participantVideo = participantVideo;
        return this;
    }
    
    /**
     * Personal Meeting Setting.&lt;br&gt;&lt;br&gt;
     * `true`: Indicates that the **"Enable Personal Meeting ID"** setting is turned on. Users can choose to use personal meeting ID for their meetings. &lt;br&gt;&lt;br&gt;
     * `false`: Indicates that the **"Enable Personal Meeting ID"** setting is [turned off](https://support.zoom.us/hc/en-us/articles/201362843-Personal-meeting-ID-PMI-and-personal-link#h_aa0335c8-3b06-41bc-bc1f-a8b84ef17f2a). If this setting is disabled, meetings that were scheduled with PMI will be invalid. Scheduled meetings will need to be manually updated.
     * For Zoom Phone only:If a user has been assigned a desk phone, **"Elevate to Zoom Meeting"** on desk phone will be disabled.
     * 
     * 
     * 
     */
    
    public Boolean personalMeeting;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withPersonalMeeting(Boolean personalMeeting) {
        this.personalMeeting = personalMeeting;
        return this;
    }
    
    /**
     * Require a password for instant meetings. If you use PMI for your instant meetings, this option will be disabled. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     * 
     */
    
    public Boolean requirePasswordForInstantMeetings;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withRequirePasswordForInstantMeetings(Boolean requirePasswordForInstantMeetings) {
        this.requirePasswordForInstantMeetings = requirePasswordForInstantMeetings;
        return this;
    }
    
    /**
     * Require a password for a meeting held using Personal Meeting ID (PMI) This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     * 
     */
    
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum requirePasswordForPmiMeetings;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withRequirePasswordForPmiMeetings(AccountSettings200ApplicationXMLAccountSettingsScheduleMeetingRequirePasswordForPmiMeetingsEnum requirePasswordForPmiMeetings) {
        this.requirePasswordForPmiMeetings = requirePasswordForPmiMeetings;
        return this;
    }
    
    /**
     * Require a password for meetings which have already been scheduled
     * 
     */
    
    public Boolean requirePasswordForScheduledMeetings;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withRequirePasswordForScheduledMeetings(Boolean requirePasswordForScheduledMeetings) {
        this.requirePasswordForScheduledMeetings = requirePasswordForScheduledMeetings;
        return this;
    }
    
    /**
     * Require a password when scheduling new meetings. This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting. This setting is always enabled for free accounts and Pro accounts with a single host and cannot be modified for these accounts.
     */
    
    public Boolean requirePasswordForSchedulingNewMeetings;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withRequirePasswordForSchedulingNewMeetings(Boolean requirePasswordForSchedulingNewMeetings) {
        this.requirePasswordForSchedulingNewMeetings = requirePasswordForSchedulingNewMeetings;
        return this;
    }
    
    /**
     * Use Personal Meeting ID (PMI) when starting an instant meeting
     * 
     */
    
    public Boolean usePmiForInstantMeetings;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withUsePmiForInstantMeetings(Boolean usePmiForInstantMeetings) {
        this.usePmiForInstantMeetings = usePmiForInstantMeetings;
        return this;
    }
    
    /**
     * Use Personal Meeting ID (PMI) when scheduling a meeting
     * 
     */
    
    public Boolean usePmiForScheduledMeetings;
    public AccountSettings200ApplicationXMLAccountSettingsScheduleMeeting withUsePmiForScheduledMeetings(Boolean usePmiForScheduledMeetings) {
        this.usePmiForScheduledMeetings = usePmiForScheduledMeetings;
        return this;
    }
    
}
