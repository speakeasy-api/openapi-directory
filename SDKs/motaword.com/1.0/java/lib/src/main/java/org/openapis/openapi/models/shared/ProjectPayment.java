/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProjectPayment {
    /**
     * Last 4 digits of the credit card you are using one-time. This parameter is only required when stripe_token is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bin")
    public String bin;

    public ProjectPayment withBin(String bin) {
        this.bin = bin;
        return this;
    }
    
    /**
     * Optional with corporate accounts. Not available for others.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budget_code")
    public String budgetCode;

    public ProjectPayment withBudgetCode(String budgetCode) {
        this.budgetCode = budgetCode;
        return this;
    }
    
    /**
     * Optional. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_id")
    public Long cardId;

    public ProjectPayment withCardId(Long cardId) {
        this.cardId = cardId;
        return this;
    }
    
    /**
     * Optional. `corporate` payment method requires this.s
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_code")
    public String paymentCode;

    public ProjectPayment withPaymentCode(String paymentCode) {
        this.paymentCode = paymentCode;
        return this;
    }
    
    /**
     * Optional. Determines which method to use for payment. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin. `corporate` method follows corporate account policy automatically, either follows invoicing flow or automatically charges corporate's primary card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_method")
    public ProjectPaymentPaymentMethodEnum paymentMethod;

    public ProjectPayment withPaymentMethod(ProjectPaymentPaymentMethodEnum paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * This is required if you are using a one-time credit card. This is the token generted from frontend via Stripe SDK. If you are using a one-time card with `stripe_token`, you must also provide `bin`, last 4 digits of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stripe_token")
    public String stripeToken;

    public ProjectPayment withStripeToken(String stripeToken) {
        this.stripeToken = stripeToken;
        return this;
    }
    
    public ProjectPayment(){}
}
