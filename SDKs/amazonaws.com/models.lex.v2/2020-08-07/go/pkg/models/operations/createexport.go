// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateExportHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateExportRequestBodyFileFormatEnum - The file format of the bot or bot locale definition files.
type CreateExportRequestBodyFileFormatEnum string

const (
	CreateExportRequestBodyFileFormatEnumLexJSON CreateExportRequestBodyFileFormatEnum = "LexJson"
	CreateExportRequestBodyFileFormatEnumTsv     CreateExportRequestBodyFileFormatEnum = "TSV"
)

func (e *CreateExportRequestBodyFileFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LexJson":
		fallthrough
	case "TSV":
		*e = CreateExportRequestBodyFileFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateExportRequestBodyFileFormatEnum: %s", s)
	}
}

// CreateExportRequestBodyResourceSpecification - Provides information about the bot or bot locale that you want to export. You can specify the <code>botExportSpecification</code> or the <code>botLocaleExportSpecification</code>, but not both.
type CreateExportRequestBodyResourceSpecification struct {
	BotExportSpecification              *shared.BotExportSpecification              `json:"botExportSpecification,omitempty"`
	BotLocaleExportSpecification        *shared.BotLocaleExportSpecification        `json:"botLocaleExportSpecification,omitempty"`
	CustomVocabularyExportSpecification *shared.CustomVocabularyExportSpecification `json:"customVocabularyExportSpecification,omitempty"`
}

type CreateExportRequestBody struct {
	// The file format of the bot or bot locale definition files.
	FileFormat CreateExportRequestBodyFileFormatEnum `json:"fileFormat"`
	// An password to use to encrypt the exported archive. Using a password is optional, but you should encrypt the archive to protect the data in transit between Amazon Lex and your local computer.
	FilePassword *string `json:"filePassword,omitempty"`
	// Provides information about the bot or bot locale that you want to export. You can specify the <code>botExportSpecification</code> or the <code>botLocaleExportSpecification</code>, but not both.
	ResourceSpecification CreateExportRequestBodyResourceSpecification `json:"resourceSpecification"`
}

type CreateExportRequest struct {
	Headers CreateExportHeaders
	Request CreateExportRequestBody `request:"mediaType=application/json"`
}

type CreateExportResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateExportResponse *shared.CreateExportResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
