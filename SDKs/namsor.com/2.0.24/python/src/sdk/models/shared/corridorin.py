"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import firstlastnamegeoin as shared_firstlastnamegeoin
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CorridorIn:
    r"""Represent any transnational interaction between names (ex. remittance, communication, cross-border investment, airline travel"""
    
    first_last_name_geo_from: Optional[shared_firstlastnamegeoin.FirstLastNameGeoIn] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstLastNameGeoFrom'), 'exclude': lambda f: f is None }})  
    first_last_name_geo_to: Optional[shared_firstlastnamegeoin.FirstLastNameGeoIn] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstLastNameGeoTo'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    