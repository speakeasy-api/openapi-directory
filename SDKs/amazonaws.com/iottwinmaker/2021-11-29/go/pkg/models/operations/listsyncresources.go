// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSyncResourcesPathParams struct {
	// <p>The sync source.</p> <note> <p>Currently the only supported syncSource is <code>SITEWISE </code>.</p> </note>
	SyncSource string `pathParam:"style=simple,explode=false,name=syncSource"`
	// The ID of the workspace that contains the sync job.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type ListSyncResourcesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListSyncResourcesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListSyncResourcesRequestBody struct {
	// <p>A list of objects that filter the request.</p> <p>The following filter combinations are supported:</p> <ul> <li> <p>Filter with state</p> </li> <li> <p>Filter with ResourceType and ResourceId</p> </li> <li> <p>Filter with ResourceType and ExternalId</p> </li> </ul>
	Filters []shared.SyncResourceFilter `json:"filters,omitempty"`
	// <p>The maximum number of results to return at one time. The default is 50.</p> <p>Valid Range: Minimum value of 0. Maximum value of 200.</p>
	MaxResults *int64 `json:"maxResults,omitempty"`
	// The string that specifies the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListSyncResourcesRequest struct {
	PathParams  ListSyncResourcesPathParams
	QueryParams ListSyncResourcesQueryParams
	Headers     ListSyncResourcesHeaders
	Request     ListSyncResourcesRequestBody `request:"mediaType=application/json"`
}

type ListSyncResourcesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListSyncResourcesResponse *shared.ListSyncResourcesResponse
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
