// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HITStatusEnum string

const (
	HITStatusEnumAssignable   HITStatusEnum = "Assignable"
	HITStatusEnumUnassignable HITStatusEnum = "Unassignable"
	HITStatusEnumReviewable   HITStatusEnum = "Reviewable"
	HITStatusEnumReviewing    HITStatusEnum = "Reviewing"
	HITStatusEnumDisposed     HITStatusEnum = "Disposed"
)

func (e HITStatusEnum) ToPointer() *HITStatusEnum {
	return &e
}

func (e *HITStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Assignable":
		fallthrough
	case "Unassignable":
		fallthrough
	case "Reviewable":
		fallthrough
	case "Reviewing":
		fallthrough
	case "Disposed":
		*e = HITStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HITStatusEnum: %v", v)
	}
}
