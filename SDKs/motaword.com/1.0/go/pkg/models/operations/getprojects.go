// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetProjectsOrderByEnum
type GetProjectsOrderByEnum string

const (
	GetProjectsOrderByEnumID       GetProjectsOrderByEnum = "id"
	GetProjectsOrderByEnumStatus   GetProjectsOrderByEnum = "status"
	GetProjectsOrderByEnumDelivery GetProjectsOrderByEnum = "delivery"
	GetProjectsOrderByEnumPrice    GetProjectsOrderByEnum = "price"
)

func (e GetProjectsOrderByEnum) ToPointer() *GetProjectsOrderByEnum {
	return &e
}

func (e *GetProjectsOrderByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "status":
		fallthrough
	case "delivery":
		fallthrough
	case "price":
		*e = GetProjectsOrderByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectsOrderByEnum: %v", v)
	}
}

type GetProjectsWithEnum string

const (
	GetProjectsWithEnumClient GetProjectsWithEnum = "client"
	GetProjectsWithEnumVendor GetProjectsWithEnum = "vendor"
)

func (e GetProjectsWithEnum) ToPointer() *GetProjectsWithEnum {
	return &e
}

func (e *GetProjectsWithEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "client":
		fallthrough
	case "vendor":
		*e = GetProjectsWithEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetProjectsWithEnum: %v", v)
	}
}

type GetProjectsRequest struct {
	OrderBy   *GetProjectsOrderByEnum   `queryParam:"style=form,explode=true,name=order_by"`
	OrderType *shared.ListOrderTypeEnum `queryParam:"style=form,explode=true,name=order_type"`
	Page      *int64                    `queryParam:"style=form,explode=true,name=page"`
	PerPage   *int64                    `queryParam:"style=form,explode=true,name=per_page"`
	// Filter projects by status. Accepts multiple statuses. Possible values 'pending', 'started', 'completed'
	Status []shared.ProjectStatusEnum `queryParam:"style=form,explode=true,name=status[]"`
	// Include detailed information. Possible values 'client', 'vendor'
	With []GetProjectsWithEnum `queryParam:"style=form,explode=true,name=with[]"`
	// deprecated. use `status[]` param.
	//
	// Deprecated: this field will be removed in a future release, please migrate away from it as soon as possible.
	WithCompleted *bool `queryParam:"style=form,explode=true,name=with_completed"`
	// deprecated. use `status[]` param.
	//
	// Deprecated: this field will be removed in a future release, please migrate away from it as soon as possible.
	WithPending *bool `queryParam:"style=form,explode=true,name=with_pending"`
	// deprecated. use `status[]` param.
	//
	// Deprecated: this field will be removed in a future release, please migrate away from it as soon as possible.
	WithStarted *bool `queryParam:"style=form,explode=true,name=with_started"`
}

type GetProjectsResponse struct {
	ContentType string
	// Project list
	ProjectList *shared.ProjectList
	StatusCode  int
	RawResponse *http.Response
}
