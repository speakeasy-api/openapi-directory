/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BankAccountDetail {
    /**
     * The bank account number (without separators).
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;

    public BankAccountDetail withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The type of bank account.
     * Only applicable to bank accounts held in the USA.
     * The permitted values are: `checking`, `savings`.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountType")
    public String accountType;

    public BankAccountDetail withAccountType(String accountType) {
        this.accountType = accountType;
        return this;
    }
    
    /**
     * The name of the bank account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountName")
    public String bankAccountName;

    public BankAccountDetail withBankAccountName(String bankAccountName) {
        this.bankAccountName = bankAccountName;
        return this;
    }
    
    /**
     * The unique identifier (UUID) of the Bank Account.
     * &gt;If, during an account holder create or update request, this field is left blank (but other fields provided), a new Bank Account will be created with a procedurally-generated UUID.
     * 
     * &gt;If, during an account holder create request, a UUID is provided, the creation of the Bank Account will fail while the creation of the account holder will continue.
     * 
     * &gt;If, during an account holder update request, a UUID that is not correlated with an existing Bank Account is provided, the update of the account holder will fail.
     * 
     * &gt;If, during an account holder update request, a UUID that is correlated with an existing Bank Account is provided, the existing Bank Account will be updated.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountUUID")
    public String bankAccountUUID;

    public BankAccountDetail withBankAccountUUID(String bankAccountUUID) {
        this.bankAccountUUID = bankAccountUUID;
        return this;
    }
    
    /**
     * The bank identifier code.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankBicSwift")
    public String bankBicSwift;

    public BankAccountDetail withBankBicSwift(String bankBicSwift) {
        this.bankBicSwift = bankBicSwift;
        return this;
    }
    
    /**
     * The city in which the bank branch is located.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCity")
    public String bankCity;

    public BankAccountDetail withBankCity(String bankCity) {
        this.bankCity = bankCity;
        return this;
    }
    
    /**
     * The bank code of the banking institution with which the bank account is registered.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCode")
    public String bankCode;

    public BankAccountDetail withBankCode(String bankCode) {
        this.bankCode = bankCode;
        return this;
    }
    
    /**
     * The name of the banking institution with which the bank account is held.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankName")
    public String bankName;

    public BankAccountDetail withBankName(String bankName) {
        this.bankName = bankName;
        return this;
    }
    
    /**
     * The branch code of the branch under which the bank account is registered. The value to be specified in this parameter depends on the country of the bank account:
     * * United States - Routing number
     * * United Kingdom - Sort code
     * * Germany - Bankleitzahl
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branchCode")
    public String branchCode;

    public BankAccountDetail withBranchCode(String branchCode) {
        this.branchCode = branchCode;
        return this;
    }
    
    /**
     * The check code of the bank account.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkCode")
    public String checkCode;

    public BankAccountDetail withCheckCode(String checkCode) {
        this.checkCode = checkCode;
        return this;
    }
    
    /**
     * The two-letter country code in which the bank account is registered.
     * &gt;The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryCode")
    public String countryCode;

    public BankAccountDetail withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * The currency in which the bank account deals.
     * &gt;The permitted currency codes are defined in ISO-4217 (e.g. 'EUR').
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;

    public BankAccountDetail withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * The international bank account number.
     * &gt;The IBAN standard is defined in ISO-13616.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;

    public BankAccountDetail withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * The city of residence of the bank account owner.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerCity")
    public String ownerCity;

    public BankAccountDetail withOwnerCity(String ownerCity) {
        this.ownerCity = ownerCity;
        return this;
    }
    
    /**
     * The country code of the country of residence of the bank account owner.
     * &gt;The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerCountryCode")
    public String ownerCountryCode;

    public BankAccountDetail withOwnerCountryCode(String ownerCountryCode) {
        this.ownerCountryCode = ownerCountryCode;
        return this;
    }
    
    /**
     * The date of birth of the bank account owner.
     * The date should be in ISO-8601 format yyyy-mm-dd (e.g. 2000-01-31).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerDateOfBirth")
    public String ownerDateOfBirth;

    public BankAccountDetail withOwnerDateOfBirth(String ownerDateOfBirth) {
        this.ownerDateOfBirth = ownerDateOfBirth;
        return this;
    }
    
    /**
     * The house name or number of the residence of the bank account owner.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerHouseNumberOrName")
    public String ownerHouseNumberOrName;

    public BankAccountDetail withOwnerHouseNumberOrName(String ownerHouseNumberOrName) {
        this.ownerHouseNumberOrName = ownerHouseNumberOrName;
        return this;
    }
    
    /**
     * The name of the bank account owner.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerName")
    public String ownerName;

    public BankAccountDetail withOwnerName(String ownerName) {
        this.ownerName = ownerName;
        return this;
    }
    
    /**
     * The country code of the country of nationality of the bank account owner.
     * &gt;The permitted country codes are defined in ISO-3166-1 alpha-2 (e.g. 'NL').
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerNationality")
    public String ownerNationality;

    public BankAccountDetail withOwnerNationality(String ownerNationality) {
        this.ownerNationality = ownerNationality;
        return this;
    }
    
    /**
     * The postal code of the residence of the bank account owner.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerPostalCode")
    public String ownerPostalCode;

    public BankAccountDetail withOwnerPostalCode(String ownerPostalCode) {
        this.ownerPostalCode = ownerPostalCode;
        return this;
    }
    
    /**
     * The state of residence of the bank account owner.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerState")
    public String ownerState;

    public BankAccountDetail withOwnerState(String ownerState) {
        this.ownerState = ownerState;
        return this;
    }
    
    /**
     * The street name of the residence of the bank account owner.
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerStreet")
    public String ownerStreet;

    public BankAccountDetail withOwnerStreet(String ownerStreet) {
        this.ownerStreet = ownerStreet;
        return this;
    }
    
    /**
     * If set to true, the bank account is a primary account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryAccount")
    public Boolean primaryAccount;

    public BankAccountDetail withPrimaryAccount(Boolean primaryAccount) {
        this.primaryAccount = primaryAccount;
        return this;
    }
    
    /**
     * The tax ID number.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxId")
    public String taxId;

    public BankAccountDetail withTaxId(String taxId) {
        this.taxId = taxId;
        return this;
    }
    
    /**
     * The URL to be used for bank account verification.
     * This may be generated on bank account creation.
     * 
     * &gt;Refer to [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information) for details on field requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlForVerification")
    public String urlForVerification;

    public BankAccountDetail withUrlForVerification(String urlForVerification) {
        this.urlForVerification = urlForVerification;
        return this;
    }
    
    public BankAccountDetail(){}
}
