/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class SymbolsGetStatusSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class SymbolsGetStatusRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * The ID of the symbol (uuid of the symbol)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=symbol_id",
  })
  symbolId: string;
}

/**
 * Internal error
 */
export class SymbolsGetStatus500ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Not found
 */
export class SymbolsGetStatus404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Unauthorized
 */
export class SymbolsGetStatus403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Whether the symbol is ignored.
 */
export enum SymbolsGetStatus200ApplicationJSONStatusEnum {
  Available = "available",
  Ignored = "ignored",
  Missing = "missing",
}

/**
 * A response containing information pertaining to a symbol status
 */
export class SymbolsGetStatus200ApplicationJSON extends SpeakeasyBase {
  /**
   * The application that this symbol belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_id" })
  appId: string;

  /**
   * Whether the symbol is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: SymbolsGetStatus200ApplicationJSONStatusEnum;

  /**
   * The unique id for this symbol (uuid)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "symbol_id" })
  symbolId: string;
}

export class SymbolsGetStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  symbolsGetStatus200ApplicationJSONObject?: SymbolsGetStatus200ApplicationJSON;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  symbolsGetStatus403ApplicationJSONObject?: SymbolsGetStatus403ApplicationJSON;

  /**
   * Not found
   */
  @SpeakeasyMetadata()
  symbolsGetStatus404ApplicationJSONObject?: SymbolsGetStatus404ApplicationJSON;

  /**
   * Internal error
   */
  @SpeakeasyMetadata()
  symbolsGetStatus500ApplicationJSONObject?: SymbolsGetStatus500ApplicationJSON;
}
