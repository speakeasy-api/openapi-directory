"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import checkpointconfiguration as shared_checkpointconfiguration
from ..shared import monitoringconfiguration as shared_monitoringconfiguration
from ..shared import parallelismconfiguration as shared_parallelismconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FlinkApplicationConfiguration:
    r"""Describes configuration parameters for a Flink-based Kinesis Data Analytics application or a Studio notebook."""
    
    checkpoint_configuration: Optional[shared_checkpointconfiguration.CheckpointConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CheckpointConfiguration'), 'exclude': lambda f: f is None }})  
    monitoring_configuration: Optional[shared_monitoringconfiguration.MonitoringConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringConfiguration'), 'exclude': lambda f: f is None }})  
    parallelism_configuration: Optional[shared_parallelismconfiguration.ParallelismConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParallelismConfiguration'), 'exclude': lambda f: f is None }})  
    