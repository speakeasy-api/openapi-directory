/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BadgeExpiry } from "./badgeexpiry";
import { Expose, Transform, Type } from "class-transformer";

export class OfferingRequiredBadge extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "badgeExpiry" })
  @Type(() => BadgeExpiry)
  badgeExpiry?: BadgeExpiry;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requiresApproval" })
  requiresApproval?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class OfferingRequiredMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "level" })
  level?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}

export class OfferingRequired extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "badge" })
  @Type(() => OfferingRequiredBadge)
  badge?: OfferingRequiredBadge;

  /**
   * The identifier for a specific version of a course
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentId" })
  contentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createDefaultChannels" })
  createDefaultChannels?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "earlyCloseOffDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  earlyCloseOffDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  end?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "hasEarlyCloseOff" })
  hasEarlyCloseOff?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isReadonly" })
  isReadonly?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => OfferingRequiredMetadata)
  metadata?: OfferingRequiredMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Every time a course is republished it's assigned a new contentId. rootContentId is the first original contentId associated with a course.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rootContentId" })
  rootContentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  start: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "trailerVideoUrl" })
  trailerVideoUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "useRelativeDates" })
  useRelativeDates?: boolean;
}
