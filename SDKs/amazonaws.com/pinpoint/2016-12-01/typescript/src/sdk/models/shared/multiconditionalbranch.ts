/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SimpleCondition } from "./simplecondition";
import { Expose, Type } from "class-transformer";

/**
 * Specifies a condition to evaluate for an activity path in a journey.
 */
export class MultiConditionalBranch extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Condition" })
  @Type(() => SimpleCondition)
  condition?: SimpleCondition;

  @SpeakeasyMetadata()
  @Expose({ name: "NextActivity" })
  nextActivity?: string;
}
