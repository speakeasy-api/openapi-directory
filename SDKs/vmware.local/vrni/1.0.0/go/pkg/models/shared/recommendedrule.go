// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecommendedRuleActionEnum string

const (
	RecommendedRuleActionEnumAllow RecommendedRuleActionEnum = "ALLOW"
	RecommendedRuleActionEnumDrop  RecommendedRuleActionEnum = "DROP"
)

func (e *RecommendedRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALLOW":
		fallthrough
	case "DROP":
		*e = RecommendedRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecommendedRuleActionEnum: %s", s)
	}
}

type RecommendedRule struct {
	Action       *RecommendedRuleActionEnum `json:"action,omitempty"`
	Destinations []Reference                `json:"destinations,omitempty"`
	PortRanges   []SimplePortRange          `json:"port_ranges,omitempty"`
	Protocols    []string                   `json:"protocols,omitempty"`
	Sources      []Reference                `json:"sources,omitempty"`
}
