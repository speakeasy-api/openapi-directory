// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DfsSlatesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type DfsSlatesFormatEnum string

const (
	DfsSlatesFormatEnumXML  DfsSlatesFormatEnum = "XML"
	DfsSlatesFormatEnumJSON DfsSlatesFormatEnum = "JSON"
)

func (e DfsSlatesFormatEnum) ToPointer() *DfsSlatesFormatEnum {
	return &e
}

func (e *DfsSlatesFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = DfsSlatesFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfsSlatesFormatEnum: %v", v)
	}
}

type DfsSlatesRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format DfsSlatesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// The TournamentID of a tournament.  TournamentIDs can be found in the Tournaments API.  Valid entries are <code>58</code>, <code>61</code>, etc.
	Tournamentid string `pathParam:"style=simple,explode=false,name=tournamentid"`
}

type DfsSlatesResponse struct {
	ContentType string
	DfsSlates   []shared.DfsSlate
	StatusCode  int
	RawResponse *http.Response
}
