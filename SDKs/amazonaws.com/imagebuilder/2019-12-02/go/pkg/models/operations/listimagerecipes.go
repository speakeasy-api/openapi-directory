// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListImageRecipesRequestBodyOwnerEnum - The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers.
type ListImageRecipesRequestBodyOwnerEnum string

const (
	ListImageRecipesRequestBodyOwnerEnumSelf       ListImageRecipesRequestBodyOwnerEnum = "Self"
	ListImageRecipesRequestBodyOwnerEnumShared     ListImageRecipesRequestBodyOwnerEnum = "Shared"
	ListImageRecipesRequestBodyOwnerEnumAmazon     ListImageRecipesRequestBodyOwnerEnum = "Amazon"
	ListImageRecipesRequestBodyOwnerEnumThirdParty ListImageRecipesRequestBodyOwnerEnum = "ThirdParty"
)

func (e *ListImageRecipesRequestBodyOwnerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Self":
		fallthrough
	case "Shared":
		fallthrough
	case "Amazon":
		fallthrough
	case "ThirdParty":
		*e = ListImageRecipesRequestBodyOwnerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListImageRecipesRequestBodyOwnerEnum: %s", s)
	}
}

type ListImageRecipesRequestBody struct {
	// <p>Use the following filters to streamline results:</p> <ul> <li> <p> <code>name</code> </p> </li> <li> <p> <code>parentImage</code> </p> </li> <li> <p> <code>platform</code> </p> </li> </ul>
	Filters []shared.Filter `json:"filters,omitempty"`
	// The maximum items to return in a request.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// A token to specify where to start paginating. This is the NextToken from a previously truncated response.
	NextToken *string `json:"nextToken,omitempty"`
	// The owner defines which image recipes you want to list. By default, this request will only show image recipes owned by your account. You can use this field to specify if you want to view image recipes owned by yourself, by Amazon, or those image recipes that have been shared with you by other customers.
	Owner *ListImageRecipesRequestBodyOwnerEnum `json:"owner,omitempty"`
}

type ListImageRecipesRequest struct {
	RequestBody       ListImageRecipesRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListImageRecipesResponse struct {
	// CallRateLimitExceededException
	CallRateLimitExceededException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// ForbiddenException
	ForbiddenException interface{}
	// InvalidPaginationTokenException
	InvalidPaginationTokenException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListImageRecipesResponse *shared.ListImageRecipesResponse
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
