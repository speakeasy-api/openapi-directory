<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Container - A Docker container.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Container
{
    /**
     * Arguments passed to the entrypoint.
     * 
     * @var ?array<string> $args
     */
	#[\JMS\Serializer\Annotation\SerializedName('args')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $args = null;
    
    /**
     * If set, overrides the default ENTRYPOINT specified by the image.
     * 
     * @var ?array<string> $command
     */
	#[\JMS\Serializer\Annotation\SerializedName('command')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $command = null;
    
    /**
     * Environment variables passed to the container.
     * 
     * @var ?array<string, string> $env
     */
	#[\JMS\Serializer\Annotation\SerializedName('env')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $env = null;
    
    /**
     * Docker image defining the container. This image must be accessible by the config's service account.
     * 
     * @var ?string $image
     */
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $image = null;
    
    /**
     * If set, overrides the USER specified in the image with the given uid.
     * 
     * @var ?int $runAsUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('runAsUser')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $runAsUser = null;
    
    /**
     * If set, overrides the default DIR specified by the image.
     * 
     * @var ?string $workingDir
     */
	#[\JMS\Serializer\Annotation\SerializedName('workingDir')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workingDir = null;
    
	public function __construct()
	{
		$this->args = null;
		$this->command = null;
		$this->env = null;
		$this->image = null;
		$this->runAsUser = null;
		$this->workingDir = null;
	}
}
