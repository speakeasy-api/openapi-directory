// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type HeartbeatResponseStatusEnum string

const (
	HeartbeatResponseStatusEnumUp   HeartbeatResponseStatusEnum = "UP"
	HeartbeatResponseStatusEnumDown HeartbeatResponseStatusEnum = "DOWN"
)

func (e *HeartbeatResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UP":
		fallthrough
	case "DOWN":
		*e = HeartbeatResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HeartbeatResponseStatusEnum: %s", s)
	}
}

// HeartbeatResponse - OK
type HeartbeatResponse struct {
	Error  *Error                       `json:"error,omitempty"`
	Status *HeartbeatResponseStatusEnum `json:"status,omitempty"`
	// Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
	Timestamp *time.Time `json:"timestamp,omitempty"`
}
