/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Filters the collaborators by their affiliation. Can be one of:
 *
 * @remarks
 * \* `outside`: Outside collaborators of a project that are not a member of the project's organization.
 * \* `direct`: Collaborators with permissions to a project, regardless of organization membership status.
 * \* `all`: All collaborators the authenticated user can see.
 */
export enum ProjectsListCollaboratorsAffiliationEnum {
  Outside = "outside",
  Direct = "direct",
  All = "all",
}

export class ProjectsListCollaboratorsRequest extends SpeakeasyBase {
  /**
   * Filters the collaborators by their affiliation. Can be one of:
   *
   * @remarks
   * \* `outside`: Outside collaborators of a project that are not a member of the project's organization.
   * \* `direct`: Collaborators with permissions to a project, regardless of organization membership status.
   * \* `all`: All collaborators the authenticated user can see.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=affiliation",
  })
  affiliation?: ProjectsListCollaboratorsAffiliationEnum;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Results per page (max 100)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_id",
  })
  projectId: number;
}

/**
 * Preview header missing
 */
export class ProjectsListCollaborators415ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class ProjectsListCollaboratorsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Preview header missing
   */
  @SpeakeasyMetadata()
  projectsListCollaborators415ApplicationJSONObject?: ProjectsListCollaborators415ApplicationJSON;

  /**
   * Response
   */
  @SpeakeasyMetadata({ elemType: shared.SimpleUser })
  simpleUsers?: shared.SimpleUser[];

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
