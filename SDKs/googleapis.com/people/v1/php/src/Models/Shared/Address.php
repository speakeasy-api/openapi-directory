<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Address - A person's physical address. May be a P.O. box or street address. All fields are optional.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Address
{
    /**
     * The city of the address.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * The country of the address.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country code of the address.
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('countryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * The extended address of the address; for example, the apartment number.
     * 
     * @var ?string $extendedAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('extendedAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $extendedAddress = null;
    
    /**
     * Output only. The type of the address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
     * 
     * @var ?string $formattedType
     */
	#[\JMS\Serializer\Annotation\SerializedName('formattedType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formattedType = null;
    
    /**
     * The unstructured value of the address. If this is not set by the user it will be automatically constructed from structured values.
     * 
     * @var ?string $formattedValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('formattedValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formattedValue = null;
    
    /**
     * Metadata about a field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FieldMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FieldMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FieldMetadata $metadata = null;
    
    /**
     * The P.O. box of the address.
     * 
     * @var ?string $poBox
     */
	#[\JMS\Serializer\Annotation\SerializedName('poBox')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $poBox = null;
    
    /**
     * The postal code of the address.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * The region of the address; for example, the state or province.
     * 
     * @var ?string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
    /**
     * The street address.
     * 
     * @var ?string $streetAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('streetAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetAddress = null;
    
    /**
     * The type of the address. The type can be custom or one of these predefined values: * `home` * `work` * `other`
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->city = null;
		$this->country = null;
		$this->countryCode = null;
		$this->extendedAddress = null;
		$this->formattedType = null;
		$this->formattedValue = null;
		$this->metadata = null;
		$this->poBox = null;
		$this->postalCode = null;
		$this->region = null;
		$this->streetAddress = null;
		$this->type = null;
	}
}
