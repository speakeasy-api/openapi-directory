"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deliverytime as shared_deliverytime
from ..shared import minimumordervaluetable as shared_minimumordervaluetable
from ..shared import pickupcarrierservice as shared_pickupcarrierservice
from ..shared import price as shared_price
from ..shared import rategroup as shared_rategroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Service:
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""A boolean exposing the active status of the shipping service. Required."""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups."""  
    delivery_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryCountry'), 'exclude': lambda f: f is None }})
    r"""The CLDR territory code of the country to which the service applies. Required."""  
    delivery_time: Optional[shared_deliverytime.DeliveryTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryTime'), 'exclude': lambda f: f is None }})  
    eligibility: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eligibility'), 'exclude': lambda f: f is None }})
    r"""Eligibility for this service. Acceptable values are: - \\"`All scenarios`\\" - \\"`All scenarios except Shopping Actions`\\" - \\"`Shopping Actions`\\" """  
    minimum_order_value: Optional[shared_price.Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumOrderValue'), 'exclude': lambda f: f is None }})  
    minimum_order_value_table: Optional[shared_minimumordervaluetable.MinimumOrderValueTable] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumOrderValueTable'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Free-form name of the service. Must be unique within target account. Required."""  
    pickup_service: Optional[shared_pickupcarrierservice.PickupCarrierService] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupService'), 'exclude': lambda f: f is None }})  
    rate_groups: Optional[list[shared_rategroup.RateGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rateGroups'), 'exclude': lambda f: f is None }})
    r"""Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \\"everything else\\". The other `applicableShippingLabels` must not overlap."""  
    shipment_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipmentType'), 'exclude': lambda f: f is None }})
    r"""Type of locations this service ships orders to. Acceptable values are: - \\"`delivery`\\" - \\"`pickup`\\" """  
    