"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import playergameprojection as shared_playergameprojection
from enum import Enum
from typing import Optional

class IdpProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalariesFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class IdpProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalariesRequest:
    
    format: IdpProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalariesFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    playerid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'playerid', 'style': 'simple', 'explode': False }})
    r"""Each NFL player has a unique ID assigned by FantasyData. Player IDs can be determined by pulling player related data. Example:<code>14257</code>."""  
    season: str = dataclasses.field(metadata={'path_param': { 'field_name': 'season', 'style': 'simple', 'explode': False }})
    r"""Year of the season and the season type. If no season type is provided, then the default is regular season.
              <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
    """  
    week: str = dataclasses.field(metadata={'path_param': { 'field_name': 'week', 'style': 'simple', 'explode': False }})
    r"""Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
              Example: <code>1</code>
    """  
    

@dataclasses.dataclass
class IdpProjectedPlayerGameStatsByPlayerWInjuriesLineupsDfsSalariesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    player_game_projection: Optional[shared_playergameprojection.PlayerGameProjection] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    