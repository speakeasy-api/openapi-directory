"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsapigatewayrestapidetails as shared_awsapigatewayrestapidetails
from ..shared import awsapigatewaystagedetails as shared_awsapigatewaystagedetails
from ..shared import awsapigatewayv2apidetails as shared_awsapigatewayv2apidetails
from ..shared import awsapigatewayv2stagedetails as shared_awsapigatewayv2stagedetails
from ..shared import awsautoscalingautoscalinggroupdetails as shared_awsautoscalingautoscalinggroupdetails
from ..shared import awsautoscalinglaunchconfigurationdetails as shared_awsautoscalinglaunchconfigurationdetails
from ..shared import awsbackupbackupplandetails as shared_awsbackupbackupplandetails
from ..shared import awsbackupbackupvaultdetails as shared_awsbackupbackupvaultdetails
from ..shared import awsbackuprecoverypointdetails as shared_awsbackuprecoverypointdetails
from ..shared import awscertificatemanagercertificatedetails as shared_awscertificatemanagercertificatedetails
from ..shared import awscloudformationstackdetails as shared_awscloudformationstackdetails
from ..shared import awscloudfrontdistributiondetails as shared_awscloudfrontdistributiondetails
from ..shared import awscloudtrailtraildetails as shared_awscloudtrailtraildetails
from ..shared import awscloudwatchalarmdetails as shared_awscloudwatchalarmdetails
from ..shared import awscodebuildprojectdetails as shared_awscodebuildprojectdetails
from ..shared import awsdynamodbtabledetails as shared_awsdynamodbtabledetails
from ..shared import awsec2eipdetails as shared_awsec2eipdetails
from ..shared import awsec2instancedetails as shared_awsec2instancedetails
from ..shared import awsec2launchtemplatedetails as shared_awsec2launchtemplatedetails
from ..shared import awsec2networkacldetails as shared_awsec2networkacldetails
from ..shared import awsec2networkinterfacedetails as shared_awsec2networkinterfacedetails
from ..shared import awsec2routetabledetails as shared_awsec2routetabledetails
from ..shared import awsec2securitygroupdetails as shared_awsec2securitygroupdetails
from ..shared import awsec2subnetdetails as shared_awsec2subnetdetails
from ..shared import awsec2transitgatewaydetails as shared_awsec2transitgatewaydetails
from ..shared import awsec2volumedetails as shared_awsec2volumedetails
from ..shared import awsec2vpcdetails as shared_awsec2vpcdetails
from ..shared import awsec2vpcendpointservicedetails as shared_awsec2vpcendpointservicedetails
from ..shared import awsec2vpcpeeringconnectiondetails as shared_awsec2vpcpeeringconnectiondetails
from ..shared import awsec2vpnconnectiondetails as shared_awsec2vpnconnectiondetails
from ..shared import awsecrcontainerimagedetails as shared_awsecrcontainerimagedetails
from ..shared import awsecrrepositorydetails as shared_awsecrrepositorydetails
from ..shared import awsecsclusterdetails as shared_awsecsclusterdetails
from ..shared import awsecscontainerdetails as shared_awsecscontainerdetails
from ..shared import awsecsservicedetails as shared_awsecsservicedetails
from ..shared import awsecstaskdefinitiondetails as shared_awsecstaskdefinitiondetails
from ..shared import awsecstaskdetails as shared_awsecstaskdetails
from ..shared import awsefsaccesspointdetails as shared_awsefsaccesspointdetails
from ..shared import awseksclusterdetails as shared_awseksclusterdetails
from ..shared import awselasticbeanstalkenvironmentdetails as shared_awselasticbeanstalkenvironmentdetails
from ..shared import awselasticsearchdomaindetails as shared_awselasticsearchdomaindetails
from ..shared import awselbloadbalancerdetails as shared_awselbloadbalancerdetails
from ..shared import awselbv2loadbalancerdetails as shared_awselbv2loadbalancerdetails
from ..shared import awsiamaccesskeydetails as shared_awsiamaccesskeydetails
from ..shared import awsiamgroupdetails as shared_awsiamgroupdetails
from ..shared import awsiampolicydetails as shared_awsiampolicydetails
from ..shared import awsiamroledetails as shared_awsiamroledetails
from ..shared import awsiamuserdetails as shared_awsiamuserdetails
from ..shared import awskinesisstreamdetails as shared_awskinesisstreamdetails
from ..shared import awskmskeydetails as shared_awskmskeydetails
from ..shared import awslambdafunctiondetails as shared_awslambdafunctiondetails
from ..shared import awslambdalayerversiondetails as shared_awslambdalayerversiondetails
from ..shared import awsnetworkfirewallfirewalldetails as shared_awsnetworkfirewallfirewalldetails
from ..shared import awsnetworkfirewallfirewallpolicydetails as shared_awsnetworkfirewallfirewallpolicydetails
from ..shared import awsnetworkfirewallrulegroupdetails as shared_awsnetworkfirewallrulegroupdetails
from ..shared import awsopensearchservicedomaindetails as shared_awsopensearchservicedomaindetails
from ..shared import awsrdsdbclusterdetails as shared_awsrdsdbclusterdetails
from ..shared import awsrdsdbclustersnapshotdetails as shared_awsrdsdbclustersnapshotdetails
from ..shared import awsrdsdbinstancedetails as shared_awsrdsdbinstancedetails
from ..shared import awsrdsdbsecuritygroupdetails as shared_awsrdsdbsecuritygroupdetails
from ..shared import awsrdsdbsnapshotdetails as shared_awsrdsdbsnapshotdetails
from ..shared import awsrdseventsubscriptiondetails as shared_awsrdseventsubscriptiondetails
from ..shared import awsredshiftclusterdetails as shared_awsredshiftclusterdetails
from ..shared import awss3accountpublicaccessblockdetails as shared_awss3accountpublicaccessblockdetails
from ..shared import awss3bucketdetails as shared_awss3bucketdetails
from ..shared import awss3objectdetails as shared_awss3objectdetails
from ..shared import awssagemakernotebookinstancedetails as shared_awssagemakernotebookinstancedetails
from ..shared import awssecretsmanagersecretdetails as shared_awssecretsmanagersecretdetails
from ..shared import awssnstopicdetails as shared_awssnstopicdetails
from ..shared import awssqsqueuedetails as shared_awssqsqueuedetails
from ..shared import awsssmpatchcompliancedetails as shared_awsssmpatchcompliancedetails
from ..shared import awswafratebasedruledetails as shared_awswafratebasedruledetails
from ..shared import awswafregionalratebasedruledetails as shared_awswafregionalratebasedruledetails
from ..shared import awswafregionalruledetails as shared_awswafregionalruledetails
from ..shared import awswafregionalrulegroupdetails as shared_awswafregionalrulegroupdetails
from ..shared import awswafregionalwebacldetails as shared_awswafregionalwebacldetails
from ..shared import awswafruledetails as shared_awswafruledetails
from ..shared import awswafrulegroupdetails as shared_awswafrulegroupdetails
from ..shared import awswafv2rulegroupdetails as shared_awswafv2rulegroupdetails
from ..shared import awswafv2webacldetails as shared_awswafv2webacldetails
from ..shared import awswafwebacldetails as shared_awswafwebacldetails
from ..shared import awsxrayencryptionconfigdetails as shared_awsxrayencryptionconfigdetails
from ..shared import containerdetails as shared_containerdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceDetails:
    r"""<p>Additional details about a resource related to a finding.</p> <p>To provide the details, use the object that corresponds to the resource type. For example, if the resource type is <code>AwsEc2Instance</code>, then you use the <code>AwsEc2Instance</code> object to provide the details.</p> <p>If the type-specific object does not contain all of the fields you want to populate, then you use the <code>Other</code> object to populate those additional fields.</p> <p>You also use the <code>Other</code> object to populate the details when the selected type does not have a corresponding object.</p>"""
    
    aws_api_gateway_rest_api: Optional[shared_awsapigatewayrestapidetails.AwsAPIGatewayRestAPIDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsApiGatewayRestApi'), 'exclude': lambda f: f is None }})  
    aws_api_gateway_stage: Optional[shared_awsapigatewaystagedetails.AwsAPIGatewayStageDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsApiGatewayStage'), 'exclude': lambda f: f is None }})  
    aws_api_gateway_v2_api: Optional[shared_awsapigatewayv2apidetails.AwsAPIGatewayV2APIDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsApiGatewayV2Api'), 'exclude': lambda f: f is None }})  
    aws_api_gateway_v2_stage: Optional[shared_awsapigatewayv2stagedetails.AwsAPIGatewayV2StageDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsApiGatewayV2Stage'), 'exclude': lambda f: f is None }})  
    aws_auto_scaling_auto_scaling_group: Optional[shared_awsautoscalingautoscalinggroupdetails.AwsAutoScalingAutoScalingGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsAutoScalingAutoScalingGroup'), 'exclude': lambda f: f is None }})  
    aws_auto_scaling_launch_configuration: Optional[shared_awsautoscalinglaunchconfigurationdetails.AwsAutoScalingLaunchConfigurationDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsAutoScalingLaunchConfiguration'), 'exclude': lambda f: f is None }})  
    aws_backup_backup_plan: Optional[shared_awsbackupbackupplandetails.AwsBackupBackupPlanDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsBackupBackupPlan'), 'exclude': lambda f: f is None }})  
    aws_backup_backup_vault: Optional[shared_awsbackupbackupvaultdetails.AwsBackupBackupVaultDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsBackupBackupVault'), 'exclude': lambda f: f is None }})  
    aws_backup_recovery_point: Optional[shared_awsbackuprecoverypointdetails.AwsBackupRecoveryPointDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsBackupRecoveryPoint'), 'exclude': lambda f: f is None }})  
    aws_certificate_manager_certificate: Optional[shared_awscertificatemanagercertificatedetails.AwsCertificateManagerCertificateDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsCertificateManagerCertificate'), 'exclude': lambda f: f is None }})  
    aws_cloud_formation_stack: Optional[shared_awscloudformationstackdetails.AwsCloudFormationStackDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsCloudFormationStack'), 'exclude': lambda f: f is None }})  
    aws_cloud_front_distribution: Optional[shared_awscloudfrontdistributiondetails.AwsCloudFrontDistributionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsCloudFrontDistribution'), 'exclude': lambda f: f is None }})  
    aws_cloud_trail_trail: Optional[shared_awscloudtrailtraildetails.AwsCloudTrailTrailDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsCloudTrailTrail'), 'exclude': lambda f: f is None }})  
    aws_cloud_watch_alarm: Optional[shared_awscloudwatchalarmdetails.AwsCloudWatchAlarmDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsCloudWatchAlarm'), 'exclude': lambda f: f is None }})  
    aws_code_build_project: Optional[shared_awscodebuildprojectdetails.AwsCodeBuildProjectDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsCodeBuildProject'), 'exclude': lambda f: f is None }})  
    aws_dynamo_db_table: Optional[shared_awsdynamodbtabledetails.AwsDynamoDbTableDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsDynamoDbTable'), 'exclude': lambda f: f is None }})  
    aws_ec2_eip: Optional[shared_awsec2eipdetails.AwsEc2EipDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2Eip'), 'exclude': lambda f: f is None }})  
    aws_ec2_instance: Optional[shared_awsec2instancedetails.AwsEc2InstanceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2Instance'), 'exclude': lambda f: f is None }})  
    aws_ec2_launch_template: Optional[shared_awsec2launchtemplatedetails.AwsEc2LaunchTemplateDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2LaunchTemplate'), 'exclude': lambda f: f is None }})
    r"""Specifies the properties for creating an Amazon Elastic Compute Cloud (Amazon EC2) launch template."""  
    aws_ec2_network_acl: Optional[shared_awsec2networkacldetails.AwsEc2NetworkACLDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2NetworkAcl'), 'exclude': lambda f: f is None }})  
    aws_ec2_network_interface: Optional[shared_awsec2networkinterfacedetails.AwsEc2NetworkInterfaceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2NetworkInterface'), 'exclude': lambda f: f is None }})  
    aws_ec2_route_table: Optional[shared_awsec2routetabledetails.AwsEc2RouteTableDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2RouteTable'), 'exclude': lambda f: f is None }})  
    aws_ec2_security_group: Optional[shared_awsec2securitygroupdetails.AwsEc2SecurityGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2SecurityGroup'), 'exclude': lambda f: f is None }})  
    aws_ec2_subnet: Optional[shared_awsec2subnetdetails.AwsEc2SubnetDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2Subnet'), 'exclude': lambda f: f is None }})  
    aws_ec2_transit_gateway: Optional[shared_awsec2transitgatewaydetails.AwsEc2TransitGatewayDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2TransitGateway'), 'exclude': lambda f: f is None }})  
    aws_ec2_volume: Optional[shared_awsec2volumedetails.AwsEc2VolumeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2Volume'), 'exclude': lambda f: f is None }})  
    aws_ec2_vpc: Optional[shared_awsec2vpcdetails.AwsEc2VpcDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2Vpc'), 'exclude': lambda f: f is None }})  
    aws_ec2_vpc_endpoint_service: Optional[shared_awsec2vpcendpointservicedetails.AwsEc2VpcEndpointServiceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2VpcEndpointService'), 'exclude': lambda f: f is None }})  
    aws_ec2_vpc_peering_connection: Optional[shared_awsec2vpcpeeringconnectiondetails.AwsEc2VpcPeeringConnectionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2VpcPeeringConnection'), 'exclude': lambda f: f is None }})  
    aws_ec2_vpn_connection: Optional[shared_awsec2vpnconnectiondetails.AwsEc2VpnConnectionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEc2VpnConnection'), 'exclude': lambda f: f is None }})  
    aws_ecr_container_image: Optional[shared_awsecrcontainerimagedetails.AwsEcrContainerImageDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcrContainerImage'), 'exclude': lambda f: f is None }})  
    aws_ecr_repository: Optional[shared_awsecrrepositorydetails.AwsEcrRepositoryDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcrRepository'), 'exclude': lambda f: f is None }})  
    aws_ecs_cluster: Optional[shared_awsecsclusterdetails.AwsEcsClusterDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcsCluster'), 'exclude': lambda f: f is None }})  
    aws_ecs_container: Optional[shared_awsecscontainerdetails.AwsEcsContainerDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcsContainer'), 'exclude': lambda f: f is None }})  
    aws_ecs_service: Optional[shared_awsecsservicedetails.AwsEcsServiceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcsService'), 'exclude': lambda f: f is None }})  
    aws_ecs_task: Optional[shared_awsecstaskdetails.AwsEcsTaskDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcsTask'), 'exclude': lambda f: f is None }})  
    aws_ecs_task_definition: Optional[shared_awsecstaskdefinitiondetails.AwsEcsTaskDefinitionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEcsTaskDefinition'), 'exclude': lambda f: f is None }})  
    aws_efs_access_point: Optional[shared_awsefsaccesspointdetails.AwsEfsAccessPointDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEfsAccessPoint'), 'exclude': lambda f: f is None }})  
    aws_eks_cluster: Optional[shared_awseksclusterdetails.AwsEksClusterDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsEksCluster'), 'exclude': lambda f: f is None }})  
    aws_elastic_beanstalk_environment: Optional[shared_awselasticbeanstalkenvironmentdetails.AwsElasticBeanstalkEnvironmentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsElasticBeanstalkEnvironment'), 'exclude': lambda f: f is None }})  
    aws_elasticsearch_domain: Optional[shared_awselasticsearchdomaindetails.AwsElasticsearchDomainDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsElasticsearchDomain'), 'exclude': lambda f: f is None }})  
    aws_elb_load_balancer: Optional[shared_awselbloadbalancerdetails.AwsElbLoadBalancerDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsElbLoadBalancer'), 'exclude': lambda f: f is None }})  
    aws_elbv2_load_balancer: Optional[shared_awselbv2loadbalancerdetails.AwsElbv2LoadBalancerDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsElbv2LoadBalancer'), 'exclude': lambda f: f is None }})  
    aws_iam_access_key: Optional[shared_awsiamaccesskeydetails.AwsIamAccessKeyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsIamAccessKey'), 'exclude': lambda f: f is None }})  
    aws_iam_group: Optional[shared_awsiamgroupdetails.AwsIamGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsIamGroup'), 'exclude': lambda f: f is None }})  
    aws_iam_policy: Optional[shared_awsiampolicydetails.AwsIamPolicyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsIamPolicy'), 'exclude': lambda f: f is None }})  
    aws_iam_role: Optional[shared_awsiamroledetails.AwsIamRoleDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsIamRole'), 'exclude': lambda f: f is None }})  
    aws_iam_user: Optional[shared_awsiamuserdetails.AwsIamUserDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsIamUser'), 'exclude': lambda f: f is None }})  
    aws_kinesis_stream: Optional[shared_awskinesisstreamdetails.AwsKinesisStreamDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsKinesisStream'), 'exclude': lambda f: f is None }})  
    aws_kms_key: Optional[shared_awskmskeydetails.AwsKmsKeyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsKmsKey'), 'exclude': lambda f: f is None }})  
    aws_lambda_function: Optional[shared_awslambdafunctiondetails.AwsLambdaFunctionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsLambdaFunction'), 'exclude': lambda f: f is None }})  
    aws_lambda_layer_version: Optional[shared_awslambdalayerversiondetails.AwsLambdaLayerVersionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsLambdaLayerVersion'), 'exclude': lambda f: f is None }})  
    aws_network_firewall_firewall: Optional[shared_awsnetworkfirewallfirewalldetails.AwsNetworkFirewallFirewallDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsNetworkFirewallFirewall'), 'exclude': lambda f: f is None }})  
    aws_network_firewall_firewall_policy: Optional[shared_awsnetworkfirewallfirewallpolicydetails.AwsNetworkFirewallFirewallPolicyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsNetworkFirewallFirewallPolicy'), 'exclude': lambda f: f is None }})  
    aws_network_firewall_rule_group: Optional[shared_awsnetworkfirewallrulegroupdetails.AwsNetworkFirewallRuleGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsNetworkFirewallRuleGroup'), 'exclude': lambda f: f is None }})  
    aws_open_search_service_domain: Optional[shared_awsopensearchservicedomaindetails.AwsOpenSearchServiceDomainDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsOpenSearchServiceDomain'), 'exclude': lambda f: f is None }})  
    aws_rds_db_cluster: Optional[shared_awsrdsdbclusterdetails.AwsRdsDbClusterDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRdsDbCluster'), 'exclude': lambda f: f is None }})  
    aws_rds_db_cluster_snapshot: Optional[shared_awsrdsdbclustersnapshotdetails.AwsRdsDbClusterSnapshotDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRdsDbClusterSnapshot'), 'exclude': lambda f: f is None }})  
    aws_rds_db_instance: Optional[shared_awsrdsdbinstancedetails.AwsRdsDbInstanceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRdsDbInstance'), 'exclude': lambda f: f is None }})  
    aws_rds_db_security_group: Optional[shared_awsrdsdbsecuritygroupdetails.AwsRdsDbSecurityGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRdsDbSecurityGroup'), 'exclude': lambda f: f is None }})  
    aws_rds_db_snapshot: Optional[shared_awsrdsdbsnapshotdetails.AwsRdsDbSnapshotDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRdsDbSnapshot'), 'exclude': lambda f: f is None }})  
    aws_rds_event_subscription: Optional[shared_awsrdseventsubscriptiondetails.AwsRdsEventSubscriptionDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRdsEventSubscription'), 'exclude': lambda f: f is None }})  
    aws_redshift_cluster: Optional[shared_awsredshiftclusterdetails.AwsRedshiftClusterDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsRedshiftCluster'), 'exclude': lambda f: f is None }})  
    aws_s3_account_public_access_block: Optional[shared_awss3accountpublicaccessblockdetails.AwsS3AccountPublicAccessBlockDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsS3AccountPublicAccessBlock'), 'exclude': lambda f: f is None }})  
    aws_s3_bucket: Optional[shared_awss3bucketdetails.AwsS3BucketDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsS3Bucket'), 'exclude': lambda f: f is None }})  
    aws_s3_object: Optional[shared_awss3objectdetails.AwsS3ObjectDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsS3Object'), 'exclude': lambda f: f is None }})  
    aws_sage_maker_notebook_instance: Optional[shared_awssagemakernotebookinstancedetails.AwsSageMakerNotebookInstanceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsSageMakerNotebookInstance'), 'exclude': lambda f: f is None }})
    r"""Provides details about an Amazon SageMaker notebook instance."""  
    aws_secrets_manager_secret: Optional[shared_awssecretsmanagersecretdetails.AwsSecretsManagerSecretDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsSecretsManagerSecret'), 'exclude': lambda f: f is None }})  
    aws_sns_topic: Optional[shared_awssnstopicdetails.AwsSnsTopicDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsSnsTopic'), 'exclude': lambda f: f is None }})  
    aws_sqs_queue: Optional[shared_awssqsqueuedetails.AwsSqsQueueDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsSqsQueue'), 'exclude': lambda f: f is None }})  
    aws_ssm_patch_compliance: Optional[shared_awsssmpatchcompliancedetails.AwsSsmPatchComplianceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsSsmPatchCompliance'), 'exclude': lambda f: f is None }})  
    aws_waf_rate_based_rule: Optional[shared_awswafratebasedruledetails.AwsWafRateBasedRuleDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRateBasedRule'), 'exclude': lambda f: f is None }})  
    aws_waf_regional_rate_based_rule: Optional[shared_awswafregionalratebasedruledetails.AwsWafRegionalRateBasedRuleDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRegionalRateBasedRule'), 'exclude': lambda f: f is None }})  
    aws_waf_regional_rule: Optional[shared_awswafregionalruledetails.AwsWafRegionalRuleDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRegionalRule'), 'exclude': lambda f: f is None }})  
    aws_waf_regional_rule_group: Optional[shared_awswafregionalrulegroupdetails.AwsWafRegionalRuleGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRegionalRuleGroup'), 'exclude': lambda f: f is None }})  
    aws_waf_regional_web_acl: Optional[shared_awswafregionalwebacldetails.AwsWafRegionalWebACLDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRegionalWebAcl'), 'exclude': lambda f: f is None }})  
    aws_waf_rule: Optional[shared_awswafruledetails.AwsWafRuleDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRule'), 'exclude': lambda f: f is None }})  
    aws_waf_rule_group: Optional[shared_awswafrulegroupdetails.AwsWafRuleGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafRuleGroup'), 'exclude': lambda f: f is None }})  
    aws_wafv2_rule_group: Optional[shared_awswafv2rulegroupdetails.AwsWafv2RuleGroupDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafv2RuleGroup'), 'exclude': lambda f: f is None }})
    r"""Details about an WAFv2 rule group."""  
    aws_wafv2_web_acl: Optional[shared_awswafv2webacldetails.AwsWafv2WebACLDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafv2WebAcl'), 'exclude': lambda f: f is None }})
    r"""Details about an WAFv2 web Access Control List (ACL)."""  
    aws_waf_web_acl: Optional[shared_awswafwebacldetails.AwsWafWebACLDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsWafWebAcl'), 'exclude': lambda f: f is None }})  
    aws_xray_encryption_config: Optional[shared_awsxrayencryptionconfigdetails.AwsXrayEncryptionConfigDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsXrayEncryptionConfig'), 'exclude': lambda f: f is None }})  
    container: Optional[shared_containerdetails.ContainerDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Container'), 'exclude': lambda f: f is None }})  
    other: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Other'), 'exclude': lambda f: f is None }})  
    