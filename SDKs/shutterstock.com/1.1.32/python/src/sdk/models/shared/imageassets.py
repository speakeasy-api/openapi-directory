"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import imagesizedetails as shared_imagesizedetails
from ..shared import thumbnail as shared_thumbnail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageAssets:
    r"""Information about the assets that are part of an image"""
    
    huge_jpg: Optional[shared_imagesizedetails.ImageSizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('huge_jpg'), 'exclude': lambda f: f is None }})
    r"""Image size information"""  
    huge_thumb: Optional[shared_thumbnail.Thumbnail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('huge_thumb'), 'exclude': lambda f: f is None }})
    r"""Image thumbnail information"""  
    large_thumb: Optional[shared_thumbnail.Thumbnail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('large_thumb'), 'exclude': lambda f: f is None }})
    r"""Image thumbnail information"""  
    medium_jpg: Optional[shared_imagesizedetails.ImageSizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('medium_jpg'), 'exclude': lambda f: f is None }})
    r"""Image size information"""  
    preview: Optional[shared_thumbnail.Thumbnail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview'), 'exclude': lambda f: f is None }})
    r"""Image thumbnail information"""  
    preview_1000: Optional[shared_thumbnail.Thumbnail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview_1000'), 'exclude': lambda f: f is None }})
    r"""Image thumbnail information"""  
    preview_1500: Optional[shared_thumbnail.Thumbnail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview_1500'), 'exclude': lambda f: f is None }})
    r"""Image thumbnail information"""  
    small_jpg: Optional[shared_imagesizedetails.ImageSizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('small_jpg'), 'exclude': lambda f: f is None }})
    r"""Image size information"""  
    small_thumb: Optional[shared_thumbnail.Thumbnail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('small_thumb'), 'exclude': lambda f: f is None }})
    r"""Image thumbnail information"""  
    supersize_jpg: Optional[shared_imagesizedetails.ImageSizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supersize_jpg'), 'exclude': lambda f: f is None }})
    r"""Image size information"""  
    vector_eps: Optional[shared_imagesizedetails.ImageSizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vector_eps'), 'exclude': lambda f: f is None }})
    r"""Image size information"""  
    