// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// GETGETPredictiveScalingForecastActionEnum
type GETGETPredictiveScalingForecastActionEnum string

const (
	GETGETPredictiveScalingForecastActionEnumGetPredictiveScalingForecast GETGETPredictiveScalingForecastActionEnum = "GetPredictiveScalingForecast"
)

func (e GETGETPredictiveScalingForecastActionEnum) ToPointer() *GETGETPredictiveScalingForecastActionEnum {
	return &e
}

func (e *GETGETPredictiveScalingForecastActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetPredictiveScalingForecast":
		*e = GETGETPredictiveScalingForecastActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETPredictiveScalingForecastActionEnum: %v", v)
	}
}

// GETGETPredictiveScalingForecastVersionEnum
type GETGETPredictiveScalingForecastVersionEnum string

const (
	GETGETPredictiveScalingForecastVersionEnumTwoThousandAndEleven0101 GETGETPredictiveScalingForecastVersionEnum = "2011-01-01"
)

func (e GETGETPredictiveScalingForecastVersionEnum) ToPointer() *GETGETPredictiveScalingForecastVersionEnum {
	return &e
}

func (e *GETGETPredictiveScalingForecastVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = GETGETPredictiveScalingForecastVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETPredictiveScalingForecastVersionEnum: %v", v)
	}
}

type GETGETPredictiveScalingForecastRequest struct {
	Action GETGETPredictiveScalingForecastActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// <p>The exclusive end time of the time range for the forecast data to get. The maximum time duration between the start and end time is 30 days. </p> <p>Although this parameter can accept a date and time that is more than two days in the future, the availability of forecast data has limits. Amazon EC2 Auto Scaling only issues forecasts for periods of two days in advance.</p>
	EndTime time.Time `queryParam:"style=form,explode=true,name=EndTime"`
	// The name of the policy.
	PolicyName string `queryParam:"style=form,explode=true,name=PolicyName"`
	// The inclusive start time of the time range for the forecast data to get. At most, the date and time can be one year before the current date and time.
	StartTime         time.Time                                  `queryParam:"style=form,explode=true,name=StartTime"`
	Version           GETGETPredictiveScalingForecastVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETPredictiveScalingForecastResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
