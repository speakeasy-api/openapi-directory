"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accessibility as shared_accessibility
from ..shared import activities as shared_activities
from ..shared import business as shared_business
from ..shared import connectivity as shared_connectivity
from ..shared import families as shared_families
from ..shared import foodanddrink as shared_foodanddrink
from ..shared import guestunitfeatures as shared_guestunitfeatures
from ..shared import guestunittype as shared_guestunittype
from ..shared import healthandsafety as shared_healthandsafety
from ..shared import housekeeping as shared_housekeeping
from ..shared import livingarea as shared_livingarea
from ..shared import lodgingmetadata as shared_lodgingmetadata
from ..shared import parking as shared_parking
from ..shared import pets as shared_pets
from ..shared import policies as shared_policies
from ..shared import pools as shared_pools
from ..shared import property as shared_property
from ..shared import services as shared_services
from ..shared import transportation as shared_transportation
from ..shared import wellness as shared_wellness
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Lodging:
    r"""Lodging of a location that provides accomodations."""
    
    accessibility: Optional[shared_accessibility.Accessibility] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessibility'), 'exclude': lambda f: f is None }})
    r"""Physical adaptations made to the property in consideration of varying levels of human physical ability."""  
    activities: Optional[shared_activities.Activities] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activities'), 'exclude': lambda f: f is None }})
    r"""Amenities and features related to leisure and play."""  
    all_units: Optional[shared_guestunitfeatures.GuestUnitFeatures] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allUnits'), 'exclude': lambda f: f is None }})
    r"""Features and available amenities in the guest unit."""  
    business: Optional[shared_business.Business] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business'), 'exclude': lambda f: f is None }})
    r"""Features of the property of specific interest to the business traveler."""  
    common_living_area: Optional[shared_livingarea.LivingArea] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commonLivingArea'), 'exclude': lambda f: f is None }})
    r"""An individual room, such as kitchen, bathroom, bedroom, within a bookable guest unit."""  
    connectivity: Optional[shared_connectivity.Connectivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectivity'), 'exclude': lambda f: f is None }})
    r"""The ways in which the property provides guests with the ability to access the internet."""  
    families: Optional[shared_families.Families] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('families'), 'exclude': lambda f: f is None }})
    r"""Services and amenities for families and young guests."""  
    food_and_drink: Optional[shared_foodanddrink.FoodAndDrink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('foodAndDrink'), 'exclude': lambda f: f is None }})
    r"""Meals, snacks, and beverages available at the property."""  
    guest_units: Optional[list[shared_guestunittype.GuestUnitType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guestUnits'), 'exclude': lambda f: f is None }})
    r"""Individual GuestUnitTypes that are available in this Lodging."""  
    health_and_safety: Optional[shared_healthandsafety.HealthAndSafety] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('healthAndSafety'), 'exclude': lambda f: f is None }})
    r"""Health and safety measures implemented by the hotel during COVID-19."""  
    housekeeping: Optional[shared_housekeeping.Housekeeping] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('housekeeping'), 'exclude': lambda f: f is None }})
    r"""Conveniences provided in guest units to facilitate an easier, more comfortable stay."""  
    metadata: Optional[shared_lodgingmetadata.LodgingMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Metadata for the Lodging."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. Google identifier for this location in the form: `accounts/{account_id}/locations/{location_id}/lodging`"""  
    parking: Optional[shared_parking.Parking] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parking'), 'exclude': lambda f: f is None }})
    r"""Parking options at the property."""  
    pets: Optional[shared_pets.Pets] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pets'), 'exclude': lambda f: f is None }})
    r"""Policies regarding guest-owned animals."""  
    policies: Optional[shared_policies.Policies] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policies'), 'exclude': lambda f: f is None }})
    r"""Property rules that impact guests."""  
    pools: Optional[shared_pools.Pools] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pools'), 'exclude': lambda f: f is None }})
    r"""Swimming pool or recreational water facilities available at the hotel."""  
    property: Optional[shared_property.Property] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('property'), 'exclude': lambda f: f is None }})
    r"""General factual information about the property's physical structure and important dates."""  
    services: Optional[shared_services.Services] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services'), 'exclude': lambda f: f is None }})
    r"""Conveniences or help provided by the property to facilitate an easier, more comfortable stay."""  
    some_units: Optional[shared_guestunitfeatures.GuestUnitFeatures] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('someUnits'), 'exclude': lambda f: f is None }})
    r"""Features and available amenities in the guest unit."""  
    transportation: Optional[shared_transportation.Transportation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transportation'), 'exclude': lambda f: f is None }})
    r"""Vehicles or vehicular services facilitated or owned by the property."""  
    wellness: Optional[shared_wellness.Wellness] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wellness'), 'exclude': lambda f: f is None }})
    r"""Guest facilities at the property to promote or maintain health, beauty, and fitness."""  
    