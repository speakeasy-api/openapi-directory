// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum - Type of the errors grouped in this issue.
type GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum string

const (
	GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnumErrorTypeUnspecified     GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum = "ERROR_TYPE_UNSPECIFIED"
	GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnumApplicationNotResponding GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum = "APPLICATION_NOT_RESPONDING"
	GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnumCrash                    GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum = "CRASH"
)

func (e *GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ERROR_TYPE_UNSPECIFIED":
		fallthrough
	case "APPLICATION_NOT_RESPONDING":
		fallthrough
	case "CRASH":
		*e = GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum: %s", s)
	}
}

// GooglePlayDeveloperReportingV1beta1ErrorIssue - A group of related ErrorReports received for an app. Similar error reports are grouped together into issues with a likely identical root cause. **Please note:** this resource is currently in Alpha. There could be changes to the issue grouping that would result in similar but more recent error reports being assigned to different issues. This could also cause some issues disappearing entirely and being replaced by new ones. **Required permissions**: to access this resource, the calling user needs the _View app information (read-only)_ permission for the app.
type GooglePlayDeveloperReportingV1beta1ErrorIssue struct {
	// Cause of the issue. Depending on the type this can be either: * APPLICATION_NOT_RESPONDING: the type of ANR that occurred, e.g., 'Input dispatching timed out'. * CRASH: for Java unhandled exception errors, the type of the innermost exception that was thrown, e.g., IllegalArgumentException. For signals in native code, the signal that was raised, e.g. SIGSEGV.
	Cause *string `json:"cause,omitempty"`
	// Location where the issue happened. Depending on the type this can be either: * APPLICATION_NOT_RESPONDING: the name of the activity or service that stopped responding. * CRASH: the likely method name that caused the error.
	Location *string `json:"location,omitempty"`
	// The resource name of the issue. Format: apps/{app}/errorIssues/{issue}
	Name *string `json:"name,omitempty"`
	// Type of the errors grouped in this issue.
	Type *GooglePlayDeveloperReportingV1beta1ErrorIssueTypeEnum `json:"type,omitempty"`
}
