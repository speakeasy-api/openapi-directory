/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
 */
export enum BoxScoresDeltaVFormatEnum {
  Xml = "XML",
  Json = "JSON",
}

/**
 * The subcategory of players to include in the returned PlayerGame records. Possible values include:<br><br>
 *
 * @remarks
 * <code>all</code> Returns all players<br>
 * <code>fantasy</code> Returns traditional fantasy players (QB, RB, WR, TE, K, DST)<br>
 * <code>idp</code> Returns traditional fantasy players and IDP players.
 */
export enum BoxScoresDeltaVPlayerstoincludeEnum {
  All = "all",
  Fantasy = "fantasy",
  Idp = "idp",
}

export class BoxScoresDeltaVRequest extends SpeakeasyBase {
  /**
   * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: BoxScoresDeltaVFormatEnum;

  /**
   * Only returns player statistics that have changed in the last X minutes.  You specify how many minutes in time to go back.  Valid entries are:<br><code>1</code>,
   *
   * @remarks
   *  <code>2</code>, etc.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=minutes",
  })
  minutes: string;

  /**
   * The subcategory of players to include in the returned PlayerGame records. Possible values include:<br><br>
   *
   * @remarks
   * <code>all</code> Returns all players<br>
   * <code>fantasy</code> Returns traditional fantasy players (QB, RB, WR, TE, K, DST)<br>
   * <code>idp</code> Returns traditional fantasy players and IDP players.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=playerstoinclude",
  })
  playerstoinclude: BoxScoresDeltaVPlayerstoincludeEnum;

  /**
   * Year of the season and the season type. If no season type is provided, then the default is regular season.
   *
   * @remarks
   *           <br>Examples: <code>2015REG</code>, <code>2015PRE</code>, <code>2015POST</code>.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=season",
  })
  season: string;

  /**
   * Week of the season. Valid values are as follows: Preseason 0 to 4, Regular Season 1 to 17, Postseason 1 to 4.
   *
   * @remarks
   *           Example: <code>1</code>
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=week",
  })
  week: string;
}

export class BoxScoresDeltaVResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.BoxScoreV3 })
  boxScoreV3s?: shared.BoxScoreV3[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
