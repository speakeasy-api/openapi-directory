"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dealservingmetadatadealpausestatus as shared_dealservingmetadatadealpausestatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DealServingMetadata:
    
    alcohol_ads_allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alcoholAdsAllowed'), 'exclude': lambda f: f is None }})
    r"""True if alcohol ads are allowed for this deal (read-only). This field is only populated when querying for finalized orders using the method GetFinalizedOrderDeals"""  
    deal_pause_status: Optional[shared_dealservingmetadatadealpausestatus.DealServingMetadataDealPauseStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dealPauseStatus'), 'exclude': lambda f: f is None }})
    r"""Tracks which parties (if any) have paused a deal. The deal is considered paused if has_buyer_paused || has_seller_paused. Each of the has_buyer_paused or the has_seller_paused bits can be set independently."""  
    