// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PatchSiteRequestBodyBundleWatermarkAttachmentFile struct {
	BundleWatermarkAttachmentFile string `multipartForm:"name=bundle_watermark_attachment_file"`
	Content                       []byte `multipartForm:"content"`
}

type PatchSiteRequestBodyIcon128File struct {
	Content     []byte `multipartForm:"content"`
	Icon128File string `multipartForm:"name=icon128_file"`
}

type PatchSiteRequestBodyIcon16File struct {
	Content    []byte `multipartForm:"content"`
	Icon16File string `multipartForm:"name=icon16_file"`
}

type PatchSiteRequestBodyIcon32File struct {
	Content    []byte `multipartForm:"content"`
	Icon32File string `multipartForm:"name=icon32_file"`
}

type PatchSiteRequestBodyIcon48File struct {
	Content    []byte `multipartForm:"content"`
	Icon48File string `multipartForm:"name=icon48_file"`
}

type PatchSiteRequestBodyLogoFile struct {
	Content  []byte `multipartForm:"content"`
	LogoFile string `multipartForm:"name=logo_file"`
}

type PatchSiteRequestBody struct {
	// Id of the currently selected custom SFTP Host Key
	ActiveSftpHostKeyID *int `multipartForm:"name=active_sftp_host_key_id"`
	// Are manual Bundle names allowed?
	AllowBundleNames *bool `multipartForm:"name=allow_bundle_names"`
	// Are users allowed to configure their two factor authentication to be bypassed for FTP/SFTP/WebDAV?
	Allowed2faMethodBypassForFtpSftpDav *bool `multipartForm:"name=allowed_2fa_method_bypass_for_ftp_sftp_dav"`
	// Is SMS two factor authentication allowed?
	Allowed2faMethodSms *bool `multipartForm:"name=allowed_2fa_method_sms"`
	// Is TOTP two factor authentication allowed?
	Allowed2faMethodTotp *bool `multipartForm:"name=allowed_2fa_method_totp"`
	// Is U2F two factor authentication allowed?
	Allowed2faMethodU2f *bool `multipartForm:"name=allowed_2fa_method_u2f"`
	// Is WebAuthn two factor authentication allowed?
	Allowed2faMethodWebauthn *bool `multipartForm:"name=allowed_2fa_method_webauthn"`
	// Is yubikey two factor authentication allowed?
	Allowed2faMethodYubi *bool `multipartForm:"name=allowed_2fa_method_yubi"`
	// Comma seperated list of allowed Country codes
	AllowedCountries *string `multipartForm:"name=allowed_countries"`
	// List of allowed IP addresses
	AllowedIps *string `multipartForm:"name=allowed_ips"`
	// If false, rename conflicting files instead of asking for overwrite confirmation.  Only applies to web interface.
	AskAboutOverwrites *bool `multipartForm:"name=ask_about_overwrites"`
	// Do Bundle owners receive activity notifications?
	BundleActivityNotifications *string `multipartForm:"name=bundle_activity_notifications"`
	// Site-wide Bundle expiration in days
	BundleExpiration *int `multipartForm:"name=bundle_expiration"`
	// Do Bundles require password protection?
	BundlePasswordRequired *bool `multipartForm:"name=bundle_password_required"`
	// Do Bundle owners receive registration notification?
	BundleRegistrationNotifications *string `multipartForm:"name=bundle_registration_notifications"`
	// Do Bundles require recipients for sharing?
	BundleRequireShareRecipient *bool `multipartForm:"name=bundle_require_share_recipient"`
	// Do Bundle uploaders receive upload confirmation notifications?
	BundleUploadReceiptNotifications *string `multipartForm:"name=bundle_upload_receipt_notifications"`
	// If true, will delete the file stored in bundle_watermark_attachment
	BundleWatermarkAttachmentDelete *bool                                              `multipartForm:"name=bundle_watermark_attachment_delete"`
	BundleWatermarkAttachmentFile   *PatchSiteRequestBodyBundleWatermarkAttachmentFile `multipartForm:"file"`
	// Preview watermark settings applied to all bundle items. Uses the same keys as Behavior.value
	BundleWatermarkValue map[string]interface{} `multipartForm:"name=bundle_watermark_value,json"`
	// Page link and button color
	Color2Left *string `multipartForm:"name=color2_left"`
	// Top bar link color
	Color2Link *string `multipartForm:"name=color2_link"`
	// Page link and button color
	Color2Text *string `multipartForm:"name=color2_text"`
	// Top bar background color
	Color2Top *string `multipartForm:"name=color2_top"`
	// Top bar text color
	Color2TopText *string `multipartForm:"name=color2_top_text"`
	// Is this site using a custom namespace for users?
	CustomNamespace *bool `multipartForm:"name=custom_namespace"`
	// Number of days to keep deleted files
	DaysToRetainBackups *int `multipartForm:"name=days_to_retain_backups"`
	// Site default time zone
	DefaultTimeZone *string `multipartForm:"name=default_time_zone"`
	// Is the desktop app enabled?
	DesktopApp *bool `multipartForm:"name=desktop_app"`
	// Is desktop app session IP pinning enabled?
	DesktopAppSessionIPPinning *bool `multipartForm:"name=desktop_app_session_ip_pinning"`
	// Desktop app session lifetime (in hours)
	DesktopAppSessionLifetime *int `multipartForm:"name=desktop_app_session_lifetime"`
	// If set to true, we will begin the process of disabling 2FA on this site.
	Disable2faWithDelay *bool `multipartForm:"name=disable_2fa_with_delay"`
	// If set, Files.com will not set the CAA records required to generate future SSL certificates for this domain.
	DisableFilesCertificateGeneration *bool `multipartForm:"name=disable_files_certificate_generation"`
	// Is password reset disabled?
	DisablePasswordReset *bool `multipartForm:"name=disable_password_reset"`
	// If greater than zero, users will unable to login if they do not show activity within this number of days.
	DisableUsersFromInactivityPeriodDays *int `multipartForm:"name=disable_users_from_inactivity_period_days"`
	// Comma seperated list of disallowed Country codes
	DisallowedCountries *string `multipartForm:"name=disallowed_countries"`
	// Custom domain
	Domain *string `multipartForm:"name=domain"`
	// Send HSTS (HTTP Strict Transport Security) header when visitors access the site via a custom domain?
	DomainHstsHeader *bool `multipartForm:"name=domain_hsts_header"`
	// Letsencrypt chain to use when registering SSL Certificate for domain.
	DomainLetsencryptChain *string `multipartForm:"name=domain_letsencrypt_chain"`
	// Main email for this site
	Email *string `multipartForm:"name=email"`
	// If true, permissions for this site must be bound to a group (not a user). Otherwise, permissions must be bound to a user.
	FolderPermissionsGroupsOnly *bool `multipartForm:"name=folder_permissions_groups_only"`
	// Is FTP enabled?
	FtpEnabled *bool `multipartForm:"name=ftp_enabled"`
	// If true, will delete the file stored in icon128
	Icon128Delete *bool                            `multipartForm:"name=icon128_delete"`
	Icon128File   *PatchSiteRequestBodyIcon128File `multipartForm:"file"`
	// If true, will delete the file stored in icon16
	Icon16Delete *bool                           `multipartForm:"name=icon16_delete"`
	Icon16File   *PatchSiteRequestBodyIcon16File `multipartForm:"file"`
	// If true, will delete the file stored in icon32
	Icon32Delete *bool                           `multipartForm:"name=icon32_delete"`
	Icon32File   *PatchSiteRequestBodyIcon32File `multipartForm:"file"`
	// If true, will delete the file stored in icon48
	Icon48Delete *bool                           `multipartForm:"name=icon48_delete"`
	Icon48File   *PatchSiteRequestBodyIcon48File `multipartForm:"file"`
	// Are files protected from modification?
	ImmutableFiles *bool `multipartForm:"name=immutable_files"`
	// Include password in emails to new users?
	IncludePasswordInWelcomeEmail *bool `multipartForm:"name=include_password_in_welcome_email"`
	// Site default language
	Language *string `multipartForm:"name=language"`
	// Base DN for looking up users in LDAP server
	LdapBaseDn *string `multipartForm:"name=ldap_base_dn"`
	// Domain name that will be appended to usernames
	LdapDomain *string `multipartForm:"name=ldap_domain"`
	// Main LDAP setting: is LDAP enabled?
	LdapEnabled *bool `multipartForm:"name=ldap_enabled"`
	// Should we sync groups from LDAP server?
	LdapGroupAction *string `multipartForm:"name=ldap_group_action"`
	// Comma or newline separated list of group names (with optional wildcards) to exclude when syncing.
	LdapGroupExclusion *string `multipartForm:"name=ldap_group_exclusion"`
	// Comma or newline separated list of group names (with optional wildcards) to include when syncing.
	LdapGroupInclusion *string `multipartForm:"name=ldap_group_inclusion"`
	// LDAP host
	LdapHost *string `multipartForm:"name=ldap_host"`
	// LDAP backup host
	LdapHost2 *string `multipartForm:"name=ldap_host_2"`
	// LDAP backup host
	LdapHost3 *string `multipartForm:"name=ldap_host_3"`
	// New LDAP password.
	LdapPasswordChange *string `multipartForm:"name=ldap_password_change"`
	// Confirm new LDAP password.
	LdapPasswordChangeConfirmation *string `multipartForm:"name=ldap_password_change_confirmation"`
	// LDAP port
	LdapPort *int `multipartForm:"name=ldap_port"`
	// Use secure LDAP?
	LdapSecure *bool `multipartForm:"name=ldap_secure"`
	// LDAP type
	LdapType *string `multipartForm:"name=ldap_type"`
	// Should we sync users from LDAP server?
	LdapUserAction *string `multipartForm:"name=ldap_user_action"`
	// Comma or newline separated list of group names (with optional wildcards) - if provided, only users in these groups will be added or synced.
	LdapUserIncludeGroups *string `multipartForm:"name=ldap_user_include_groups"`
	// Username for signing in to LDAP server.
	LdapUsername *string `multipartForm:"name=ldap_username"`
	// LDAP username field
	LdapUsernameField *string `multipartForm:"name=ldap_username_field"`
	// Login help text
	LoginHelpText *string `multipartForm:"name=login_help_text"`
	// If true, will delete the file stored in logo
	LogoDelete *bool                         `multipartForm:"name=logo_delete"`
	LogoFile   *PatchSiteRequestBodyLogoFile `multipartForm:"file"`
	// Number of prior passwords to disallow
	MaxPriorPasswords *int `multipartForm:"name=max_prior_passwords"`
	// Is the mobile app enabled?
	MobileApp *bool `multipartForm:"name=mobile_app"`
	// Is mobile app session IP pinning enabled?
	MobileAppSessionIPPinning *bool `multipartForm:"name=mobile_app_session_ip_pinning"`
	// Mobile app session lifetime (in hours)
	MobileAppSessionLifetime *int `multipartForm:"name=mobile_app_session_lifetime"`
	// A message to show users when they connect via FTP or SFTP.
	MotdText *string `multipartForm:"name=motd_text"`
	// Show message to users connecting via FTP
	MotdUseForFtp *bool `multipartForm:"name=motd_use_for_ftp"`
	// Show message to users connecting via SFTP
	MotdUseForSftp *bool `multipartForm:"name=motd_use_for_sftp"`
	// Site name
	Name *string `multipartForm:"name=name"`
	// If true, groups can be manually created / modified / deleted by Site Admins. Otherwise, groups can only be managed via your SSO provider.
	NonSsoGroupsAllowed *bool `multipartForm:"name=non_sso_groups_allowed"`
	// If true, users can be manually created / modified / deleted by Site Admins. Otherwise, users can only be managed via your SSO provider.
	NonSsoUsersAllowed *bool `multipartForm:"name=non_sso_users_allowed"`
	// Allow users to use Office for the web?
	OfficeIntegrationAvailable *bool `multipartForm:"name=office_integration_available"`
	// Office integration application used to edit and view the MS Office documents
	OfficeIntegrationType *string `multipartForm:"name=office_integration_type"`
	// Use servers in the USA only?
	OptOutGlobal *bool `multipartForm:"name=opt_out_global"`
	// Notify site email of overages?
	OverageNotify *bool `multipartForm:"name=overage_notify"`
	// Shortest password length for users
	PasswordMinLength *int `multipartForm:"name=password_min_length"`
	// Require a letter in passwords?
	PasswordRequireLetter *bool `multipartForm:"name=password_require_letter"`
	// Require lower and upper case letters in passwords?
	PasswordRequireMixed *bool `multipartForm:"name=password_require_mixed"`
	// Require a number in passwords?
	PasswordRequireNumber *bool `multipartForm:"name=password_require_number"`
	// Require special characters in password?
	PasswordRequireSpecial *bool `multipartForm:"name=password_require_special"`
	// Require passwords that have not been previously breached? (see https://haveibeenpwned.com/)
	PasswordRequireUnbreached *bool `multipartForm:"name=password_require_unbreached"`
	// Require bundles' passwords, and passwords for other items (inboxes, public shares, etc.) to conform to the same requirements as users' passwords?
	PasswordRequirementsApplyToBundles *bool `multipartForm:"name=password_requirements_apply_to_bundles"`
	// Number of days password is valid
	PasswordValidityDays *int `multipartForm:"name=password_validity_days"`
	// If true, we will ensure that all internal communications with any remote server are made through the primary region of the site. This setting overrides individual remote server settings.
	PinAllRemoteServersToSiteRegion *bool `multipartForm:"name=pin_all_remote_servers_to_site_region"`
	// Reply-to email for this site
	ReplyToEmail *string `multipartForm:"name=reply_to_email"`
	// Require two-factor authentication for all users?
	Require2fa *bool `multipartForm:"name=require_2fa"`
	// What type of user is required to use two-factor authentication (when require_2fa is set to `true` for this site)?
	Require2faUserType *string `multipartForm:"name=require_2fa_user_type"`
	// Session expiry in hours
	SessionExpiry *float64 `multipartForm:"name=session_expiry"`
	// Session expiry in minutes
	SessionExpiryMinutes *int `multipartForm:"name=session_expiry_minutes"`
	// Are sessions locked to the same IP? (i.e. do users need to log in again if they change IPs?)
	SessionPinnedByIP *bool `multipartForm:"name=session_pinned_by_ip"`
	// Is SFTP enabled?
	SftpEnabled *bool `multipartForm:"name=sftp_enabled"`
	// Sftp Host Key Type
	SftpHostKeyType *string `multipartForm:"name=sftp_host_key_type"`
	// Are Insecure Ciphers allowed for SFTP?  Note:  Settting TLS Disabled -> True will always allow insecure ciphers for SFTP as well.  Enabling this is insecure.
	SftpInsecureCiphers *bool `multipartForm:"name=sftp_insecure_ciphers"`
	// Use user FTP roots also for SFTP?
	SftpUserRootEnabled *bool `multipartForm:"name=sftp_user_root_enabled"`
	// Allow bundle creation
	SharingEnabled *bool `multipartForm:"name=sharing_enabled"`
	// Show request access link for users without access?  Currently unused.
	ShowRequestAccessLink *bool `multipartForm:"name=show_request_access_link"`
	// Custom site footer text
	SiteFooter *string `multipartForm:"name=site_footer"`
	// Custom site header text
	SiteHeader *string `multipartForm:"name=site_header"`
	// SMTP server hostname or IP
	SMTPAddress *string `multipartForm:"name=smtp_address"`
	// SMTP server authentication type
	SMTPAuthentication *string `multipartForm:"name=smtp_authentication"`
	// From address to use when mailing through custom SMTP
	SMTPFrom *string `multipartForm:"name=smtp_from"`
	// Password for SMTP server.
	SMTPPassword *string `multipartForm:"name=smtp_password"`
	// SMTP server port
	SMTPPort *int `multipartForm:"name=smtp_port"`
	// SMTP server username
	SMTPUsername *string `multipartForm:"name=smtp_username"`
	// Is SSL required?  Disabling this is insecure.
	SslRequired *bool `multipartForm:"name=ssl_required"`
	// Site subdomain
	Subdomain *string `multipartForm:"name=subdomain"`
	// Are Insecure TLS and SFTP Ciphers allowed?  Enabling this is insecure.
	TLSDisabled *bool `multipartForm:"name=tls_disabled"`
	// Do incoming emails in the Inboxes require checking for SPF/DKIM/DMARC?
	UploadsViaEmailAuthentication *bool `multipartForm:"name=uploads_via_email_authentication"`
	// Allow uploaders to set `provided_modified_at` for uploaded files?
	UseProvidedModifiedAt *bool `multipartForm:"name=use_provided_modified_at"`
	// Will users be locked out after incorrect login attempts?
	UserLockout *bool `multipartForm:"name=user_lockout"`
	// How many hours to lock user out for failed password?
	UserLockoutLockPeriod *int `multipartForm:"name=user_lockout_lock_period"`
	// Number of login tries within `user_lockout_within` hours before users are locked out
	UserLockoutTries *int `multipartForm:"name=user_lockout_tries"`
	// Number of hours for user lockout window
	UserLockoutWithin *int `multipartForm:"name=user_lockout_within"`
	// Enable User Requests feature
	UserRequestsEnabled *bool `multipartForm:"name=user_requests_enabled"`
	// Send email to site admins when a user request is received?
	UserRequestsNotifyAdmins *bool `multipartForm:"name=user_requests_notify_admins"`
	// Custom text send in user welcome email
	WelcomeCustomText *string `multipartForm:"name=welcome_custom_text"`
	// Include this email in welcome emails if enabled
	WelcomeEmailCc *string `multipartForm:"name=welcome_email_cc"`
	// Will the welcome email be sent to new users?
	WelcomeEmailEnabled *bool `multipartForm:"name=welcome_email_enabled"`
	// Include this email subject in welcome emails if enabled
	WelcomeEmailSubject *string `multipartForm:"name=welcome_email_subject"`
	// Does the welcome screen appear?
	WelcomeScreen *string `multipartForm:"name=welcome_screen"`
	// Does FTP user Windows emulation mode?
	WindowsModeFtp *bool `multipartForm:"name=windows_mode_ftp"`
}

type PatchSiteRequest struct {
	Request *PatchSiteRequestBody `request:"mediaType=multipart/form-data"`
}

type PatchSiteResponse struct {
	ContentType string
	// The Site object.
	SiteEntity  *shared.SiteEntity
	StatusCode  int
	RawResponse *http.Response
}
