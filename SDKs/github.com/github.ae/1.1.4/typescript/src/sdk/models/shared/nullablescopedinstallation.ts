/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppPermissions } from "./apppermissions";
import { SimpleUser } from "./simpleuser";
import { Expose, Type } from "class-transformer";

/**
 * Describe whether all repositories have been selected or there's a selection involved
 */
export enum NullableScopedInstallationRepositorySelectionEnum {
  All = "all",
  Selected = "selected",
}

export class NullableScopedInstallation extends SpeakeasyBase {
  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => SimpleUser)
  account: SimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "has_multiple_single_files" })
  hasMultipleSingleFiles?: boolean;

  /**
   * The permissions granted to the user-to-server access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => AppPermissions)
  permissions: AppPermissions;

  @SpeakeasyMetadata()
  @Expose({ name: "repositories_url" })
  repositoriesUrl: string;

  /**
   * Describe whether all repositories have been selected or there's a selection involved
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_selection" })
  repositorySelection: NullableScopedInstallationRepositorySelectionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "single_file_name" })
  singleFileName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "single_file_paths" })
  singleFilePaths?: string[];
}
