/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class Terminal {
    /**
     * The [assignment status](https://docs.adyen.com/point-of-sale/automating-terminal-management/assign-terminals-api) of the terminal. If true, the terminal is assigned. If false, the terminal is in inventory and can't be boarded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assigned")
    public Boolean assigned;
    public Terminal withAssigned(Boolean assigned) {
        this.assigned = assigned;
        return this;
    }
    
    /**
     * The Bluetooth IP address of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bluetoothIp")
    public String bluetoothIp;
    public Terminal withBluetoothIp(String bluetoothIp) {
        this.bluetoothIp = bluetoothIp;
        return this;
    }
    
    /**
     * The Bluetooth MAC address of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bluetoothMac")
    public String bluetoothMac;
    public Terminal withBluetoothMac(String bluetoothMac) {
        this.bluetoothMac = bluetoothMac;
        return this;
    }
    
    /**
     * The city where the terminal is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public Terminal withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * The company account that the terminal is associated with. If this is the only account level shown in the response, the terminal is assigned to the inventory of the company account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyAccount")
    public String companyAccount;
    public Terminal withCompanyAccount(String companyAccount) {
        this.companyAccount = companyAccount;
        return this;
    }
    
    /**
     * The country code of the country where the terminal is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryCode")
    public String countryCode;
    public Terminal withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * The model name of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceModel")
    public String deviceModel;
    public Terminal withDeviceModel(String deviceModel) {
        this.deviceModel = deviceModel;
        return this;
    }
    
    /**
     * The ethernet IP address of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethernetIp")
    public String ethernetIp;
    public Terminal withEthernetIp(String ethernetIp) {
        this.ethernetIp = ethernetIp;
        return this;
    }
    
    /**
     * The ethernet MAC address of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ethernetMac")
    public String ethernetMac;
    public Terminal withEthernetMac(String ethernetMac) {
        this.ethernetMac = ethernetMac;
        return this;
    }
    
    /**
     * The software release currently in use on the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firmwareVersion")
    public String firmwareVersion;
    public Terminal withFirmwareVersion(String firmwareVersion) {
        this.firmwareVersion = firmwareVersion;
        return this;
    }
    
    /**
     * The integrated circuit card identifier (ICCID) of the SIM card in the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iccid")
    public String iccid;
    public Terminal withIccid(String iccid) {
        this.iccid = iccid;
        return this;
    }
    
    /**
     * The unique identifier of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Terminal withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Date and time of the last activity on the terminal. Not included when the last activity was more than 14 days ago.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastActivityDateTime")
    public OffsetDateTime lastActivityDateTime;
    public Terminal withLastActivityDateTime(OffsetDateTime lastActivityDateTime) {
        this.lastActivityDateTime = lastActivityDateTime;
        return this;
    }
    
    /**
     * Date and time of the last transaction on the terminal. Not included when the last transaction was more than 14 days ago.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastTransactionDateTime")
    public OffsetDateTime lastTransactionDateTime;
    public Terminal withLastTransactionDateTime(OffsetDateTime lastTransactionDateTime) {
        this.lastTransactionDateTime = lastTransactionDateTime;
        return this;
    }
    
    /**
     * The Ethernet link negotiation that the terminal uses:
     * 
     * - `auto`: Auto-negotiation
     * 
     * - `100full`: 100 Mbps full duplex
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkNegotiation")
    public String linkNegotiation;
    public Terminal withLinkNegotiation(String linkNegotiation) {
        this.linkNegotiation = linkNegotiation;
        return this;
    }
    
    /**
     * The serial number of the terminal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;
    public Terminal withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * On a terminal that supports 3G or 4G connectivity, indicates the status of the SIM card in the terminal: ACTIVE or INVENTORY.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("simStatus")
    public String simStatus;
    public Terminal withSimStatus(String simStatus) {
        this.simStatus = simStatus;
        return this;
    }
    
    /**
     * Indicates when the terminal was last online, whether the terminal is being reassigned, or whether the terminal is turned off. If the terminal was last online more that a week ago, it is also shown as turned off.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public Terminal withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The status of the store that the terminal is assigned to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeStatus")
    public String storeStatus;
    public Terminal withStoreStatus(String storeStatus) {
        this.storeStatus = storeStatus;
        return this;
    }
    
    /**
     * The terminal's IP address in your Wi-Fi network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiIp")
    public String wifiIp;
    public Terminal withWifiIp(String wifiIp) {
        this.wifiIp = wifiIp;
        return this;
    }
    
    /**
     * The terminal's MAC address in your Wi-Fi network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiMac")
    public String wifiMac;
    public Terminal withWifiMac(String wifiMac) {
        this.wifiMac = wifiMac;
        return this;
    }
    
    /**
     * The SSID of the Wi-Fi network that your terminal is connected to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiSsid")
    public String wifiSsid;
    public Terminal withWifiSsid(String wifiSsid) {
        this.wifiSsid = wifiSsid;
        return this;
    }
    
}
