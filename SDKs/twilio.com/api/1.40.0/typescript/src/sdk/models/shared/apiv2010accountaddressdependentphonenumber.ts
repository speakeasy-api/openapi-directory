/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DependentPhoneNumberEnumAddressRequirementEnum } from "./dependentphonenumberenumaddressrequirementenum";
import { DependentPhoneNumberEnumEmergencyStatusEnum } from "./dependentphonenumberenumemergencystatusenum";
import { Expose } from "class-transformer";

/**
 * The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.
 */
export enum ApiV2010AccountAddressDependentPhoneNumberSmsFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.
 */
export enum ApiV2010AccountAddressDependentPhoneNumberSmsMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.
 */
export enum ApiV2010AccountAddressDependentPhoneNumberStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.
 */
export enum ApiV2010AccountAddressDependentPhoneNumberVoiceFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.
 */
export enum ApiV2010AccountAddressDependentPhoneNumberVoiceMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class ApiV2010AccountAddressDependentPhoneNumber extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the DependentPhoneNumber resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address_requirements" })
  addressRequirements?: DependentPhoneNumberEnumAddressRequirementEnum;

  /**
   * The API version used to start a new TwiML session.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_version" })
  apiVersion?: string;

  /**
   * The set of Boolean properties that indicates whether a phone number can receive calls or messages.  Capabilities are  `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capabilities" })
  capabilities?: any;

  /**
   * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  dateCreated?: string;

  /**
   * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  dateUpdated?: string;

  /**
   * The SID of the emergency address configuration that we use for emergency calling from the phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emergency_address_sid" })
  emergencyAddressSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "emergency_status" })
  emergencyStatus?: DependentPhoneNumberEnumEmergencyStatusEnum;

  /**
   * The string that you assigned to describe the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * The unique string that that we created to identify the DependentPhoneNumber resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The SID of the application that handles SMS messages sent to the phone number. If an `sms_application_sid` is present, we ignore all `sms_*_url` values and use those of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sms_application_sid" })
  smsApplicationSid?: string;

  /**
   * The HTTP method we use to call `sms_fallback_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sms_fallback_method" })
  smsFallbackMethod?: ApiV2010AccountAddressDependentPhoneNumberSmsFallbackMethodEnum;

  /**
   * The URL that we call when an error occurs while retrieving or executing the TwiML from `sms_url`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sms_fallback_url" })
  smsFallbackUrl?: string;

  /**
   * The HTTP method we use to call `sms_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sms_method" })
  smsMethod?: ApiV2010AccountAddressDependentPhoneNumberSmsMethodEnum;

  /**
   * The URL we call when the phone number receives an incoming SMS message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sms_url" })
  smsUrl?: string;

  /**
   * The URL we call using the `status_callback_method` to send status information to your application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback" })
  statusCallback?: string;

  /**
   * The HTTP method we use to call `status_callback`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback_method" })
  statusCallbackMethod?: ApiV2010AccountAddressDependentPhoneNumberStatusCallbackMethodEnum;

  /**
   * The SID of the Trunk that handles calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trunk_sid" })
  trunkSid?: string;

  /**
   * The URI of the resource, relative to `https://api.twilio.com`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;

  /**
   * The SID of the application that handles calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_application_sid" })
  voiceApplicationSid?: string;

  /**
   * Whether we look up the caller's caller-ID name from the CNAM database. Can be: `true` or `false`. Caller ID lookups can cost $0.01 each.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_caller_id_lookup" })
  voiceCallerIdLookup?: boolean;

  /**
   * The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_fallback_method" })
  voiceFallbackMethod?: ApiV2010AccountAddressDependentPhoneNumberVoiceFallbackMethodEnum;

  /**
   * The URL that we call when an error occurs retrieving or executing the TwiML requested by `url`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_fallback_url" })
  voiceFallbackUrl?: string;

  /**
   * The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_method" })
  voiceMethod?: ApiV2010AccountAddressDependentPhoneNumberVoiceMethodEnum;

  /**
   * The URL we call when the phone number receives a call. The `voice_url` will not be used if a `voice_application_sid` or a `trunk_sid` is set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_url" })
  voiceUrl?: string;
}
