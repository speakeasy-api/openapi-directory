"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import environmentparameter as shared_environmentparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ModelConfiguration:
    r"""Defines the model configuration. Includes the specification name and environment parameters."""
    
    compilation_job_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationJobName'), 'exclude': lambda f: f is None }})  
    environment_parameters: Optional[list[shared_environmentparameter.EnvironmentParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnvironmentParameters'), 'exclude': lambda f: f is None }})  
    inference_specification_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InferenceSpecificationName'), 'exclude': lambda f: f is None }})  
    