// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BotLocaleStatusEnum string

const (
	BotLocaleStatusEnumCreating            BotLocaleStatusEnum = "Creating"
	BotLocaleStatusEnumBuilding            BotLocaleStatusEnum = "Building"
	BotLocaleStatusEnumBuilt               BotLocaleStatusEnum = "Built"
	BotLocaleStatusEnumReadyExpressTesting BotLocaleStatusEnum = "ReadyExpressTesting"
	BotLocaleStatusEnumFailed              BotLocaleStatusEnum = "Failed"
	BotLocaleStatusEnumDeleting            BotLocaleStatusEnum = "Deleting"
	BotLocaleStatusEnumNotBuilt            BotLocaleStatusEnum = "NotBuilt"
	BotLocaleStatusEnumImporting           BotLocaleStatusEnum = "Importing"
	BotLocaleStatusEnumProcessing          BotLocaleStatusEnum = "Processing"
)

func (e BotLocaleStatusEnum) ToPointer() *BotLocaleStatusEnum {
	return &e
}

func (e *BotLocaleStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Creating":
		fallthrough
	case "Building":
		fallthrough
	case "Built":
		fallthrough
	case "ReadyExpressTesting":
		fallthrough
	case "Failed":
		fallthrough
	case "Deleting":
		fallthrough
	case "NotBuilt":
		fallthrough
	case "Importing":
		fallthrough
	case "Processing":
		*e = BotLocaleStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BotLocaleStatusEnum: %v", v)
	}
}
