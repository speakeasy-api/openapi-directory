// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteFileXAmzTargetEnum
type DeleteFileXAmzTargetEnum string

const (
	DeleteFileXAmzTargetEnumCodeCommit20150413DeleteFile DeleteFileXAmzTargetEnum = "CodeCommit_20150413.DeleteFile"
)

func (e *DeleteFileXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.DeleteFile":
		*e = DeleteFileXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFileXAmzTargetEnum: %s", s)
	}
}

type DeleteFileHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteFileXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteFileRequest struct {
	Headers DeleteFileHeaders
	Request shared.DeleteFileInput `request:"mediaType=application/json"`
}

type DeleteFileResponse struct {
	// BranchDoesNotExistException
	BranchDoesNotExistException interface{}
	// BranchNameIsTagNameException
	BranchNameIsTagNameException interface{}
	// BranchNameRequiredException
	BranchNameRequiredException interface{}
	// CommitMessageLengthExceededException
	CommitMessageLengthExceededException interface{}
	ContentType                          string
	// Success
	DeleteFileOutput *shared.DeleteFileOutput
	// EncryptionIntegrityChecksFailedException
	EncryptionIntegrityChecksFailedException interface{}
	// EncryptionKeyAccessDeniedException
	EncryptionKeyAccessDeniedException interface{}
	// EncryptionKeyDisabledException
	EncryptionKeyDisabledException interface{}
	// EncryptionKeyNotFoundException
	EncryptionKeyNotFoundException interface{}
	// EncryptionKeyUnavailableException
	EncryptionKeyUnavailableException interface{}
	// FileDoesNotExistException
	FileDoesNotExistException interface{}
	// InvalidBranchNameException
	InvalidBranchNameException interface{}
	// InvalidEmailException
	InvalidEmailException interface{}
	// InvalidParentCommitIdException
	InvalidParentCommitIDException interface{}
	// InvalidPathException
	InvalidPathException interface{}
	// InvalidRepositoryNameException
	InvalidRepositoryNameException interface{}
	// NameLengthExceededException
	NameLengthExceededException interface{}
	// ParentCommitDoesNotExistException
	ParentCommitDoesNotExistException interface{}
	// ParentCommitIdOutdatedException
	ParentCommitIDOutdatedException interface{}
	// ParentCommitIdRequiredException
	ParentCommitIDRequiredException interface{}
	// PathRequiredException
	PathRequiredException interface{}
	// RepositoryDoesNotExistException
	RepositoryDoesNotExistException interface{}
	// RepositoryNameRequiredException
	RepositoryNameRequiredException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
}
