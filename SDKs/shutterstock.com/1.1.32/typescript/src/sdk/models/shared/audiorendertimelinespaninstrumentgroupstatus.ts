/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Whether the instrument is playing or not
 */
export enum AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * The status of an instrument at a specific beat
 */
export class AudioRenderTimelineSpanInstrumentGroupStatus extends SpeakeasyBase {
  /**
   * The beat, relative to the span, at which the status begins
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beat" })
  beat: number;

  /**
   * Whether the instrument is playing or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AudioRenderTimelineSpanInstrumentGroupStatusStatusEnum;
}
