"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import opaquecolor as shared_opaquecolor
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ColorStop:
    r"""A color and position in a gradient band."""
    
    alpha: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alpha'), 'exclude': lambda f: f is None }})
    r"""The alpha value of this color in the gradient band. Defaults to 1.0, fully opaque."""  
    color: Optional[shared_opaquecolor.OpaqueColor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    r"""A themeable solid color value."""  
    position: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""The relative position of the color stop in the gradient band measured in percentage. The value should be in the interval [0.0, 1.0]."""  
    