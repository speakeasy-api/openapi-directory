"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget:
    r"""One or more targets associated with the event window."""
    
    dedicated_host_ids: Optional[list[str]] = dataclasses.field(default=None)  
    instance_ids: Optional[list[str]] = dataclasses.field(default=None)  
    tags: Optional[list[AssociateInstanceEventWindowResultInstanceEventWindowAssociationTargetTags]] = dataclasses.field(default=None)  
    
class AssociateInstanceEventWindowResultInstanceEventWindowStateEnum(str, Enum):
    r"""The current state of the event window."""
    CREATING = 'creating'
    DELETING = 'deleting'
    ACTIVE = 'active'
    DELETED = 'deleted'


@dataclasses.dataclass
class AssociateInstanceEventWindowResultInstanceEventWindowTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    
class AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum(str, Enum):
    r"""The day on which the time range ends."""
    SUNDAY = 'sunday'
    MONDAY = 'monday'
    TUESDAY = 'tuesday'
    WEDNESDAY = 'wednesday'
    THURSDAY = 'thursday'
    FRIDAY = 'friday'
    SATURDAY = 'saturday'

class AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum(str, Enum):
    r"""The day on which the time range begins."""
    SUNDAY = 'sunday'
    MONDAY = 'monday'
    TUESDAY = 'tuesday'
    WEDNESDAY = 'wednesday'
    THURSDAY = 'thursday'
    FRIDAY = 'friday'
    SATURDAY = 'saturday'


@dataclasses.dataclass
class AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges:
    r"""The start day and time and the end day and time of the time range, in UTC."""
    
    end_hour: Optional[int] = dataclasses.field(default=None)  
    end_week_day: Optional[AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesEndWeekDayEnum] = dataclasses.field(default=None)  
    start_hour: Optional[int] = dataclasses.field(default=None)  
    start_week_day: Optional[AssociateInstanceEventWindowResultInstanceEventWindowTimeRangesStartWeekDayEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AssociateInstanceEventWindowResultInstanceEventWindow:
    r"""Information about the event window."""
    
    association_target: Optional[AssociateInstanceEventWindowResultInstanceEventWindowAssociationTarget] = dataclasses.field(default=None)  
    cron_expression: Optional[str] = dataclasses.field(default=None)  
    instance_event_window_id: Optional[str] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)  
    state: Optional[AssociateInstanceEventWindowResultInstanceEventWindowStateEnum] = dataclasses.field(default=None)  
    tags: Optional[list[AssociateInstanceEventWindowResultInstanceEventWindowTags]] = dataclasses.field(default=None)  
    time_ranges: Optional[list[AssociateInstanceEventWindowResultInstanceEventWindowTimeRanges]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class AssociateInstanceEventWindowResult:
    r"""Success"""
    
    instance_event_window: Optional[AssociateInstanceEventWindowResultInstanceEventWindow] = dataclasses.field(default=None)  
    