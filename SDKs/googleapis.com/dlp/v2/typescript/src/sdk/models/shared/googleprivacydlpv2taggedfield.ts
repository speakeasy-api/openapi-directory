/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2FieldId } from "./googleprivacydlpv2fieldid";
import { GooglePrivacyDlpV2InfoType } from "./googleprivacydlpv2infotype";
import { Expose, Type } from "class-transformer";

/**
 * A column with a semantic tag attached.
 */
export class GooglePrivacyDlpV2TaggedField extends SpeakeasyBase {
  /**
   * A column can be tagged with a custom tag. In this case, the user must indicate an auxiliary table that contains statistical information on the possible values of this column (below).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customTag" })
  customTag?: string;

  /**
   * General identifier of a data field in a storage service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  @Type(() => GooglePrivacyDlpV2FieldId)
  field?: GooglePrivacyDlpV2FieldId;

  /**
   * A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inferred" })
  inferred?: Record<string, any>;

  /**
   * Type of information detected by the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "infoType" })
  @Type(() => GooglePrivacyDlpV2InfoType)
  infoType?: GooglePrivacyDlpV2InfoType;
}
