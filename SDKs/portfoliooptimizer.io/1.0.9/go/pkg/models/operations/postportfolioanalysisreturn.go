// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
)

type PostPortfolioAnalysisReturnRequestBody2Portfolios struct {
	// portfolioValues[t] is the value of the portfolio at the time t
	PortfolioValues []float64 `json:"portfolioValues"`
}

type PostPortfolioAnalysisReturnRequestBody2 struct {
	Portfolios []PostPortfolioAnalysisReturnRequestBody2Portfolios `json:"portfolios"`
}

type PostPortfolioAnalysisReturnRequestBody1Portfolios struct {
	// assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
	AssetsWeights []float64 `json:"assetsWeights"`
}

type PostPortfolioAnalysisReturnRequestBody1 struct {
	// The number of assets
	Assets int64 `json:"assets"`
	// assetsReturns[i] is the arithmetic return of asset i
	AssetsReturns []float64                                           `json:"assetsReturns"`
	Portfolios    []PostPortfolioAnalysisReturnRequestBody1Portfolios `json:"portfolios"`
}

type PostPortfolioAnalysisReturnRequestBodyType string

const (
	PostPortfolioAnalysisReturnRequestBodyTypePostPortfolioAnalysisReturnRequestBody1 PostPortfolioAnalysisReturnRequestBodyType = "post_/portfolio/analysis/return_requestBody_1"
	PostPortfolioAnalysisReturnRequestBodyTypePostPortfolioAnalysisReturnRequestBody2 PostPortfolioAnalysisReturnRequestBodyType = "post_/portfolio/analysis/return_requestBody_2"
)

type PostPortfolioAnalysisReturnRequestBody struct {
	PostPortfolioAnalysisReturnRequestBody1 *PostPortfolioAnalysisReturnRequestBody1
	PostPortfolioAnalysisReturnRequestBody2 *PostPortfolioAnalysisReturnRequestBody2

	Type PostPortfolioAnalysisReturnRequestBodyType
}

func CreatePostPortfolioAnalysisReturnRequestBodyPostPortfolioAnalysisReturnRequestBody1(postPortfolioAnalysisReturnRequestBody1 PostPortfolioAnalysisReturnRequestBody1) PostPortfolioAnalysisReturnRequestBody {
	typ := PostPortfolioAnalysisReturnRequestBodyTypePostPortfolioAnalysisReturnRequestBody1

	return PostPortfolioAnalysisReturnRequestBody{
		PostPortfolioAnalysisReturnRequestBody1: &postPortfolioAnalysisReturnRequestBody1,
		Type:                                    typ,
	}
}

func CreatePostPortfolioAnalysisReturnRequestBodyPostPortfolioAnalysisReturnRequestBody2(postPortfolioAnalysisReturnRequestBody2 PostPortfolioAnalysisReturnRequestBody2) PostPortfolioAnalysisReturnRequestBody {
	typ := PostPortfolioAnalysisReturnRequestBodyTypePostPortfolioAnalysisReturnRequestBody2

	return PostPortfolioAnalysisReturnRequestBody{
		PostPortfolioAnalysisReturnRequestBody2: &postPortfolioAnalysisReturnRequestBody2,
		Type:                                    typ,
	}
}

func (u *PostPortfolioAnalysisReturnRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postPortfolioAnalysisReturnRequestBody1 := new(PostPortfolioAnalysisReturnRequestBody1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postPortfolioAnalysisReturnRequestBody1); err == nil {
		u.PostPortfolioAnalysisReturnRequestBody1 = postPortfolioAnalysisReturnRequestBody1
		u.Type = PostPortfolioAnalysisReturnRequestBodyTypePostPortfolioAnalysisReturnRequestBody1
		return nil
	}

	postPortfolioAnalysisReturnRequestBody2 := new(PostPortfolioAnalysisReturnRequestBody2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postPortfolioAnalysisReturnRequestBody2); err == nil {
		u.PostPortfolioAnalysisReturnRequestBody2 = postPortfolioAnalysisReturnRequestBody2
		u.Type = PostPortfolioAnalysisReturnRequestBodyTypePostPortfolioAnalysisReturnRequestBody2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostPortfolioAnalysisReturnRequestBody) MarshalJSON() ([]byte, error) {
	if u.PostPortfolioAnalysisReturnRequestBody1 != nil {
		return json.Marshal(u.PostPortfolioAnalysisReturnRequestBody1)
	}

	if u.PostPortfolioAnalysisReturnRequestBody2 != nil {
		return json.Marshal(u.PostPortfolioAnalysisReturnRequestBody2)
	}

	return nil, nil
}

type PostPortfolioAnalysisReturnRequest struct {
	Request PostPortfolioAnalysisReturnRequestBody `request:"mediaType=application/json"`
}

type PostPortfolioAnalysisReturn200ApplicationJSONPortfolios struct {
	// The arithmetic return of the portfolio
	PortfolioReturn float64 `json:"portfolioReturn"`
}

// PostPortfolioAnalysisReturn200ApplicationJSON - OK
type PostPortfolioAnalysisReturn200ApplicationJSON struct {
	Portfolios []PostPortfolioAnalysisReturn200ApplicationJSONPortfolios `json:"portfolios"`
}

type PostPortfolioAnalysisReturnResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostPortfolioAnalysisReturn200ApplicationJSONObject *PostPortfolioAnalysisReturn200ApplicationJSON
}
