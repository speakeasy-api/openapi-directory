// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo - Information about the accepter transit gateway.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo struct {
	CoreNetworkID    *string
	OwnerID          *string
	Region           *string
	TransitGatewayID *string
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum - Describes whether dynamic routing is enabled or disabled for the transit gateway peering attachment.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum string

const (
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnumEnable  CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum = "enable"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnumDisable CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum = "disable"
)

func (e *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum: %s", s)
	}
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions - Details about the transit gateway peering attachment.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions struct {
	DynamicRouting *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptionsDynamicRoutingEnum
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo - Information about the requester transit gateway.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo struct {
	CoreNetworkID    *string
	OwnerID          *string
	Region           *string
	TransitGatewayID *string
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum - The state of the transit gateway peering attachment. Note that the <code>initiating</code> state has been deprecated.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum string

const (
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumInitiating        CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "initiating"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumInitiatingRequest CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "initiatingRequest"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumPendingAcceptance CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "pendingAcceptance"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumRollingBack       CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "rollingBack"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumPending           CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "pending"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumAvailable         CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "available"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumModifying         CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "modifying"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumDeleting          CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "deleting"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumDeleted           CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "deleted"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumFailed            CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "failed"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumRejected          CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "rejected"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumRejecting         CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "rejecting"
	CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnumFailing           CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum = "failing"
)

func (e *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initiating":
		fallthrough
	case "initiatingRequest":
		fallthrough
	case "pendingAcceptance":
		fallthrough
	case "rollingBack":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "rejecting":
		fallthrough
	case "failing":
		*e = CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum: %s", s)
	}
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus - The status of the transit gateway peering attachment.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus struct {
	Code    *string
	Message *string
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags - Describes a tag.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags struct {
	Key   *string
	Value *string
}

// CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment - The transit gateway peering attachment.
type CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment struct {
	AccepterTgwInfo                    *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentAccepterTgwInfo
	AccepterTransitGatewayAttachmentID *string
	CreationTime                       *time.Time
	Options                            *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentOptions
	RequesterTgwInfo                   *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentRequesterTgwInfo
	State                              *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStateEnum
	Status                             *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentStatus
	Tags                               []CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachmentTags
	TransitGatewayAttachmentID         *string
}

// CreateTransitGatewayPeeringAttachmentResult - Success
type CreateTransitGatewayPeeringAttachmentResult struct {
	TransitGatewayPeeringAttachment *CreateTransitGatewayPeeringAttachmentResultTransitGatewayPeeringAttachment
}
