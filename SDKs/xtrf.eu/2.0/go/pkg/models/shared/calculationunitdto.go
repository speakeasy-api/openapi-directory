// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CalculationUnitDTOTypeEnum string

const (
	CalculationUnitDTOTypeEnumTime    CalculationUnitDTOTypeEnum = "TIME"
	CalculationUnitDTOTypeEnumVolume  CalculationUnitDTOTypeEnum = "VOLUME"
	CalculationUnitDTOTypeEnumPercent CalculationUnitDTOTypeEnum = "PERCENT"
)

func (e CalculationUnitDTOTypeEnum) ToPointer() *CalculationUnitDTOTypeEnum {
	return &e
}

func (e *CalculationUnitDTOTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIME":
		fallthrough
	case "VOLUME":
		fallthrough
	case "PERCENT":
		*e = CalculationUnitDTOTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CalculationUnitDTOTypeEnum: %v", v)
	}
}

type CalculationUnitDTO struct {
	// should this value be available on the XTRF selection lists
	Active                          *bool   `json:"active,omitempty"`
	CanBeUsedInCatAnalysis          *bool   `json:"canBeUsedInCatAnalysis,omitempty"`
	CatQuantityConversionExpression *string `json:"catQuantityConversionExpression,omitempty"`
	// should this value be set by default in XTRF selection lists
	Default                       *bool    `json:"default,omitempty"`
	ExchangeRatio                 *float64 `json:"exchangeRatio,omitempty"`
	FileStatsConversionExpression *string  `json:"fileStatsConversionExpression,omitempty"`
	// internal identifier
	ID         *int64  `json:"id,omitempty"`
	JobTypeIds []int64 `json:"jobTypeIds,omitempty"`
	// localised name (formatted in the current user's locale)
	Name *string `json:"name,omitempty"`
	// should this value be available on the top of XTRF selection lists, in the Preferred section
	Preferred                          *bool                       `json:"preferred,omitempty"`
	Symbol                             *string                     `json:"symbol,omitempty"`
	TimeToQuantityConversionExpression *string                     `json:"timeToQuantityConversionExpression,omitempty"`
	Type                               *CalculationUnitDTOTypeEnum `json:"type,omitempty"`
}
