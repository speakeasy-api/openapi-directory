/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LegalEntityCreate - LegalEntity to create
 */
public class LegalEntityCreate {
    /**
     * A list of document types to advertise. Use if this LegalEntity needs the ability to receive more than only invoice documents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertisements")public LegalEntityCreateDocumentTypeEnum[] advertisements;
    public LegalEntityCreate withAdvertisements(LegalEntityCreateDocumentTypeEnum[] advertisements) {
        this.advertisements = advertisements;
        return this;
    }
    
    /**
     * The city.
     */
    @JsonProperty("city")public String city;
    public LegalEntityCreate withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * An ISO 3166-1 alpha-2 country code.
     */
    @JsonProperty("country")public CountryEnum country;
    public LegalEntityCreate withCountry(CountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     * County, if applicable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("county")public String county;
    public LegalEntityCreate withCounty(String county) {
        this.county = county;
        return this;
    }
    
    /**
     * The first address line.
     */
    @JsonProperty("line1")public String line1;
    public LegalEntityCreate withLine1(String line1) {
        this.line1 = line1;
        return this;
    }
    
    /**
     * The second address line, if applicable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line2")public String line2;
    public LegalEntityCreate withLine2(String line2) {
        this.line2 = line2;
        return this;
    }
    
    /**
     * The name of the company.
     */
    @JsonProperty("party_name")public String partyName;
    public LegalEntityCreate withPartyName(String partyName) {
        this.partyName = partyName;
        return this;
    }
    
    /**
     * Whether or not this LegalEntity is public. Public means it will be entered into the PEPPOL directory at https://directory.peppol.eu/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("public")public Boolean public_;
    public LegalEntityCreate withPublic(Boolean public_) {
        this.public_ = public_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rea")public Rea rea;
    public LegalEntityCreate withRea(Rea rea) {
        this.rea = rea;
        return this;
    }
    
    /**
     * The id of the tenant, to be used in case of single-tenant solutions that share webhook URLs. This property will included in webhook events.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenant_id")public String tenantId;
    public LegalEntityCreate withTenantId(String tenantId) {
        this.tenantId = tenantId;
        return this;
    }
    
    /**
     * The password to use to authenticate to a system through which to send the document, or to obtain tax authority approval to send it. This field is currently relevant only for India and mandatory when creating an IN LegalEntity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("third_party_password")public String thirdPartyPassword;
    public LegalEntityCreate withThirdPartyPassword(String thirdPartyPassword) {
        this.thirdPartyPassword = thirdPartyPassword;
        return this;
    }
    
    /**
     * The username to use to authenticate to a system through which to send the document, or to obtain tax authority approval to send it. This field is currently relevant only for India and mandatory when creating an IN LegalEntity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("third_party_username")public String thirdPartyUsername;
    public LegalEntityCreate withThirdPartyUsername(String thirdPartyUsername) {
        this.thirdPartyUsername = thirdPartyUsername;
        return this;
    }
    
    /**
     * The zipcode.
     */
    @JsonProperty("zip")public String zip;
    public LegalEntityCreate withZip(String zip) {
        this.zip = zip;
        return this;
    }
    
}
