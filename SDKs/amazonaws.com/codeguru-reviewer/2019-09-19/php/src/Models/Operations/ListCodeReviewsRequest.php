<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListCodeReviewsRequest
{
    /**
     * The maximum number of results that are returned per call. The default is 100.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=MaxResults')]
    public ?int $maxResults = null;
    
    /**
     * If <code>nextToken</code> is returned, there are more results available. The value of <code>nextToken</code> is a unique pagination token for each page. Make the call again using the returned token to retrieve the next page. Keep all other arguments unchanged.
     * 
     * @var ?string $nextToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NextToken')]
    public ?string $nextToken = null;
    
    /**
     * List of provider types for filtering that needs to be applied before displaying the result. For example, <code>providerTypes=[GitHub]</code> lists code reviews from GitHub.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ProviderTypeEnum> $providerTypes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ProviderTypes')]
    public ?array $providerTypes = null;
    
    /**
     * List of repository names for filtering that needs to be applied before displaying the result.
     * 
     * @var ?array<string> $repositoryNames
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=RepositoryNames')]
    public ?array $repositoryNames = null;
    
    /**
     * <p>List of states for filtering that needs to be applied before displaying the result. For example, <code>states=[Pending]</code> lists code reviews in the Pending state.</p> <p>The valid code review states are:</p> <ul> <li> <p> <code>Completed</code>: The code review is complete.</p> </li> <li> <p> <code>Pending</code>: The code review started and has not completed or failed.</p> </li> <li> <p> <code>Failed</code>: The code review failed.</p> </li> <li> <p> <code>Deleting</code>: The code review is being deleted.</p> </li> </ul>
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\JobStateEnum> $states
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=States')]
    public ?array $states = null;
    
    /**
     * The type of code reviews to list in the response.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\ListCodeReviewsTypeEnum $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Type')]
    public ListCodeReviewsTypeEnum $type;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->maxResults = null;
		$this->nextToken = null;
		$this->providerTypes = null;
		$this->repositoryNames = null;
		$this->states = null;
		$this->type = \OpenAPI\OpenAPI\Models\Operations\ListCodeReviewsTypeEnum::PULL_REQUEST;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
