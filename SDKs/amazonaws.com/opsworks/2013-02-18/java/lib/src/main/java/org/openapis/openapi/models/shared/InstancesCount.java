/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstancesCount - Describes how many instances a stack has for each status.
 */
public class InstancesCount {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assigning")
    public Long assigning;
    public InstancesCount withAssigning(Long assigning) {
        this.assigning = assigning;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Booting")
    public Long booting;
    public InstancesCount withBooting(Long booting) {
        this.booting = booting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConnectionLost")
    public Long connectionLost;
    public InstancesCount withConnectionLost(Long connectionLost) {
        this.connectionLost = connectionLost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Deregistering")
    public Long deregistering;
    public InstancesCount withDeregistering(Long deregistering) {
        this.deregistering = deregistering;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Online")
    public Long online;
    public InstancesCount withOnline(Long online) {
        this.online = online;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Pending")
    public Long pending;
    public InstancesCount withPending(Long pending) {
        this.pending = pending;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Rebooting")
    public Long rebooting;
    public InstancesCount withRebooting(Long rebooting) {
        this.rebooting = rebooting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Registered")
    public Long registered;
    public InstancesCount withRegistered(Long registered) {
        this.registered = registered;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Registering")
    public Long registering;
    public InstancesCount withRegistering(Long registering) {
        this.registering = registering;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Requested")
    public Long requested;
    public InstancesCount withRequested(Long requested) {
        this.requested = requested;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunningSetup")
    public Long runningSetup;
    public InstancesCount withRunningSetup(Long runningSetup) {
        this.runningSetup = runningSetup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SetupFailed")
    public Long setupFailed;
    public InstancesCount withSetupFailed(Long setupFailed) {
        this.setupFailed = setupFailed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShuttingDown")
    public Long shuttingDown;
    public InstancesCount withShuttingDown(Long shuttingDown) {
        this.shuttingDown = shuttingDown;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StartFailed")
    public Long startFailed;
    public InstancesCount withStartFailed(Long startFailed) {
        this.startFailed = startFailed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StopFailed")
    public Long stopFailed;
    public InstancesCount withStopFailed(Long stopFailed) {
        this.stopFailed = stopFailed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Stopped")
    public Long stopped;
    public InstancesCount withStopped(Long stopped) {
        this.stopped = stopped;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Stopping")
    public Long stopping;
    public InstancesCount withStopping(Long stopping) {
        this.stopping = stopping;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Terminated")
    public Long terminated;
    public InstancesCount withTerminated(Long terminated) {
        this.terminated = terminated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Terminating")
    public Long terminating;
    public InstancesCount withTerminating(Long terminating) {
        this.terminating = terminating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Unassigning")
    public Long unassigning;
    public InstancesCount withUnassigning(Long unassigning) {
        this.unassigning = unassigning;
        return this;
    }
    
}
