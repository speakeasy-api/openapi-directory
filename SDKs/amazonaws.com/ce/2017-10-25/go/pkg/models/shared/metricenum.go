// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MetricEnum string

const (
	MetricEnumBlendedCost           MetricEnum = "BLENDED_COST"
	MetricEnumUnblendedCost         MetricEnum = "UNBLENDED_COST"
	MetricEnumAmortizedCost         MetricEnum = "AMORTIZED_COST"
	MetricEnumNetUnblendedCost      MetricEnum = "NET_UNBLENDED_COST"
	MetricEnumNetAmortizedCost      MetricEnum = "NET_AMORTIZED_COST"
	MetricEnumUsageQuantity         MetricEnum = "USAGE_QUANTITY"
	MetricEnumNormalizedUsageAmount MetricEnum = "NORMALIZED_USAGE_AMOUNT"
)

func (e *MetricEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BLENDED_COST":
		fallthrough
	case "UNBLENDED_COST":
		fallthrough
	case "AMORTIZED_COST":
		fallthrough
	case "NET_UNBLENDED_COST":
		fallthrough
	case "NET_AMORTIZED_COST":
		fallthrough
	case "USAGE_QUANTITY":
		fallthrough
	case "NORMALIZED_USAGE_AMOUNT":
		*e = MetricEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricEnum: %s", s)
	}
}
