// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OneGetResponses200ContentApplication1jsonSchemaStatusEnum string

const (
	OneGetResponses200ContentApplication1jsonSchemaStatusEnumOk OneGetResponses200ContentApplication1jsonSchemaStatusEnum = "OK"
)

func (e OneGetResponses200ContentApplication1jsonSchemaStatusEnum) ToPointer() *OneGetResponses200ContentApplication1jsonSchemaStatusEnum {
	return &e
}

func (e *OneGetResponses200ContentApplication1jsonSchemaStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		*e = OneGetResponses200ContentApplication1jsonSchemaStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OneGetResponses200ContentApplication1jsonSchemaStatusEnum: %v", v)
	}
}

// OneGetResponses200ContentApplication1jsonSchema - Return Status OK and/or resource list
type OneGetResponses200ContentApplication1jsonSchema struct {
	Status *OneGetResponses200ContentApplication1jsonSchemaStatusEnum `json:"status,omitempty"`
}
