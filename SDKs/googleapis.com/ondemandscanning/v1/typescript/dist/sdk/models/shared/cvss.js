"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cvss = exports.CVSSUserInteractionEnum = exports.CVSSScopeEnum = exports.CVSSPrivilegesRequiredEnum = exports.CVSSIntegrityImpactEnum = exports.CVSSConfidentialityImpactEnum = exports.CVSSAvailabilityImpactEnum = exports.CVSSAuthenticationEnum = exports.CVSSAttackVectorEnum = exports.CVSSAttackComplexityEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var CVSSAttackComplexityEnum;
(function (CVSSAttackComplexityEnum) {
    CVSSAttackComplexityEnum["AttackComplexityUnspecified"] = "ATTACK_COMPLEXITY_UNSPECIFIED";
    CVSSAttackComplexityEnum["AttackComplexityLow"] = "ATTACK_COMPLEXITY_LOW";
    CVSSAttackComplexityEnum["AttackComplexityHigh"] = "ATTACK_COMPLEXITY_HIGH";
})(CVSSAttackComplexityEnum = exports.CVSSAttackComplexityEnum || (exports.CVSSAttackComplexityEnum = {}));
/**
 * Base Metrics Represents the intrinsic characteristics of a vulnerability that are constant over time and across user environments.
 */
var CVSSAttackVectorEnum;
(function (CVSSAttackVectorEnum) {
    CVSSAttackVectorEnum["AttackVectorUnspecified"] = "ATTACK_VECTOR_UNSPECIFIED";
    CVSSAttackVectorEnum["AttackVectorNetwork"] = "ATTACK_VECTOR_NETWORK";
    CVSSAttackVectorEnum["AttackVectorAdjacent"] = "ATTACK_VECTOR_ADJACENT";
    CVSSAttackVectorEnum["AttackVectorLocal"] = "ATTACK_VECTOR_LOCAL";
    CVSSAttackVectorEnum["AttackVectorPhysical"] = "ATTACK_VECTOR_PHYSICAL";
})(CVSSAttackVectorEnum = exports.CVSSAttackVectorEnum || (exports.CVSSAttackVectorEnum = {}));
var CVSSAuthenticationEnum;
(function (CVSSAuthenticationEnum) {
    CVSSAuthenticationEnum["AuthenticationUnspecified"] = "AUTHENTICATION_UNSPECIFIED";
    CVSSAuthenticationEnum["AuthenticationMultiple"] = "AUTHENTICATION_MULTIPLE";
    CVSSAuthenticationEnum["AuthenticationSingle"] = "AUTHENTICATION_SINGLE";
    CVSSAuthenticationEnum["AuthenticationNone"] = "AUTHENTICATION_NONE";
})(CVSSAuthenticationEnum = exports.CVSSAuthenticationEnum || (exports.CVSSAuthenticationEnum = {}));
var CVSSAvailabilityImpactEnum;
(function (CVSSAvailabilityImpactEnum) {
    CVSSAvailabilityImpactEnum["ImpactUnspecified"] = "IMPACT_UNSPECIFIED";
    CVSSAvailabilityImpactEnum["ImpactHigh"] = "IMPACT_HIGH";
    CVSSAvailabilityImpactEnum["ImpactLow"] = "IMPACT_LOW";
    CVSSAvailabilityImpactEnum["ImpactNone"] = "IMPACT_NONE";
})(CVSSAvailabilityImpactEnum = exports.CVSSAvailabilityImpactEnum || (exports.CVSSAvailabilityImpactEnum = {}));
var CVSSConfidentialityImpactEnum;
(function (CVSSConfidentialityImpactEnum) {
    CVSSConfidentialityImpactEnum["ImpactUnspecified"] = "IMPACT_UNSPECIFIED";
    CVSSConfidentialityImpactEnum["ImpactHigh"] = "IMPACT_HIGH";
    CVSSConfidentialityImpactEnum["ImpactLow"] = "IMPACT_LOW";
    CVSSConfidentialityImpactEnum["ImpactNone"] = "IMPACT_NONE";
})(CVSSConfidentialityImpactEnum = exports.CVSSConfidentialityImpactEnum || (exports.CVSSConfidentialityImpactEnum = {}));
var CVSSIntegrityImpactEnum;
(function (CVSSIntegrityImpactEnum) {
    CVSSIntegrityImpactEnum["ImpactUnspecified"] = "IMPACT_UNSPECIFIED";
    CVSSIntegrityImpactEnum["ImpactHigh"] = "IMPACT_HIGH";
    CVSSIntegrityImpactEnum["ImpactLow"] = "IMPACT_LOW";
    CVSSIntegrityImpactEnum["ImpactNone"] = "IMPACT_NONE";
})(CVSSIntegrityImpactEnum = exports.CVSSIntegrityImpactEnum || (exports.CVSSIntegrityImpactEnum = {}));
var CVSSPrivilegesRequiredEnum;
(function (CVSSPrivilegesRequiredEnum) {
    CVSSPrivilegesRequiredEnum["PrivilegesRequiredUnspecified"] = "PRIVILEGES_REQUIRED_UNSPECIFIED";
    CVSSPrivilegesRequiredEnum["PrivilegesRequiredNone"] = "PRIVILEGES_REQUIRED_NONE";
    CVSSPrivilegesRequiredEnum["PrivilegesRequiredLow"] = "PRIVILEGES_REQUIRED_LOW";
    CVSSPrivilegesRequiredEnum["PrivilegesRequiredHigh"] = "PRIVILEGES_REQUIRED_HIGH";
})(CVSSPrivilegesRequiredEnum = exports.CVSSPrivilegesRequiredEnum || (exports.CVSSPrivilegesRequiredEnum = {}));
var CVSSScopeEnum;
(function (CVSSScopeEnum) {
    CVSSScopeEnum["ScopeUnspecified"] = "SCOPE_UNSPECIFIED";
    CVSSScopeEnum["ScopeUnchanged"] = "SCOPE_UNCHANGED";
    CVSSScopeEnum["ScopeChanged"] = "SCOPE_CHANGED";
})(CVSSScopeEnum = exports.CVSSScopeEnum || (exports.CVSSScopeEnum = {}));
var CVSSUserInteractionEnum;
(function (CVSSUserInteractionEnum) {
    CVSSUserInteractionEnum["UserInteractionUnspecified"] = "USER_INTERACTION_UNSPECIFIED";
    CVSSUserInteractionEnum["UserInteractionNone"] = "USER_INTERACTION_NONE";
    CVSSUserInteractionEnum["UserInteractionRequired"] = "USER_INTERACTION_REQUIRED";
})(CVSSUserInteractionEnum = exports.CVSSUserInteractionEnum || (exports.CVSSUserInteractionEnum = {}));
/**
 * Common Vulnerability Scoring System. For details, see https://www.first.org/cvss/specification-document This is a message we will try to use for storing various versions of CVSS rather than making a separate proto for storing a specific version.
 */
var Cvss = /** @class */ (function (_super) {
    __extends(Cvss, _super);
    function Cvss() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attackComplexity" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "attackComplexity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attackVector" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "attackVector", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "authentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "availabilityImpact" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "availabilityImpact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "baseScore" }),
        __metadata("design:type", Number)
    ], Cvss.prototype, "baseScore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "confidentialityImpact" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "confidentialityImpact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "exploitabilityScore" }),
        __metadata("design:type", Number)
    ], Cvss.prototype, "exploitabilityScore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "impactScore" }),
        __metadata("design:type", Number)
    ], Cvss.prototype, "impactScore", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "integrityImpact" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "integrityImpact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privilegesRequired" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "privilegesRequired", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "scope" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "scope", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userInteraction" }),
        __metadata("design:type", String)
    ], Cvss.prototype, "userInteraction", void 0);
    return Cvss;
}(utils_1.SpeakeasyBase));
exports.Cvss = Cvss;
