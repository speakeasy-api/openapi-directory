// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConfigFileFileTypeEnum - The type of configuration file this represents.
type ConfigFileFileTypeEnum string

const (
	ConfigFileFileTypeEnumFileTypeUnspecified    ConfigFileFileTypeEnum = "FILE_TYPE_UNSPECIFIED"
	ConfigFileFileTypeEnumServiceConfigYaml      ConfigFileFileTypeEnum = "SERVICE_CONFIG_YAML"
	ConfigFileFileTypeEnumOpenAPIJSON            ConfigFileFileTypeEnum = "OPEN_API_JSON"
	ConfigFileFileTypeEnumOpenAPIYaml            ConfigFileFileTypeEnum = "OPEN_API_YAML"
	ConfigFileFileTypeEnumFileDescriptorSetProto ConfigFileFileTypeEnum = "FILE_DESCRIPTOR_SET_PROTO"
	ConfigFileFileTypeEnumProtoFile              ConfigFileFileTypeEnum = "PROTO_FILE"
)

func (e *ConfigFileFileTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FILE_TYPE_UNSPECIFIED":
		fallthrough
	case "SERVICE_CONFIG_YAML":
		fallthrough
	case "OPEN_API_JSON":
		fallthrough
	case "OPEN_API_YAML":
		fallthrough
	case "FILE_DESCRIPTOR_SET_PROTO":
		fallthrough
	case "PROTO_FILE":
		*e = ConfigFileFileTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigFileFileTypeEnum: %s", s)
	}
}

// ConfigFile - Generic specification of a source configuration file
type ConfigFile struct {
	// The bytes that constitute the file.
	FileContents *string `json:"fileContents,omitempty"`
	// The file name of the configuration file (full or relative path).
	FilePath *string `json:"filePath,omitempty"`
	// The type of configuration file this represents.
	FileType *ConfigFileFileTypeEnum `json:"fileType,omitempty"`
}
