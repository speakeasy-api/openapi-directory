/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConformancePackInputParameter } from "./conformancepackinputparameter";
import { TemplateSSMDocumentDetails } from "./templatessmdocumentdetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Returns details of a conformance pack. A conformance pack is a collection of Config rules and remediation actions that can be easily deployed in an account and a region.
 */
export class ConformancePackDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackArn" })
  conformancePackArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackId" })
  conformancePackId: string;

  @SpeakeasyMetadata({ elemType: ConformancePackInputParameter })
  @Expose({ name: "ConformancePackInputParameters" })
  @Type(() => ConformancePackInputParameter)
  conformancePackInputParameters?: ConformancePackInputParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackName" })
  conformancePackName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryS3Bucket" })
  deliveryS3Bucket?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryS3KeyPrefix" })
  deliveryS3KeyPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateRequestedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateRequestedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateSSMDocumentDetails" })
  @Type(() => TemplateSSMDocumentDetails)
  templateSSMDocumentDetails?: TemplateSSMDocumentDetails;
}
