"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2smartreplymetricstopnmetrics as shared_googleclouddialogflowv2smartreplymetricstopnmetrics
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2SmartReplyMetrics:
    r"""The evaluation metrics for smart reply model."""
    
    allowlist_coverage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowlistCoverage'), 'exclude': lambda f: f is None }})
    r"""Percentage of target participant messages in the evaluation dataset for which similar messages have appeared at least once in the allowlist. Should be [0, 1]."""  
    conversation_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversationCount'), 'exclude': lambda f: f is None }})
    r"""Total number of conversations used to generate this metric."""  
    top_n_metrics: Optional[list[shared_googleclouddialogflowv2smartreplymetricstopnmetrics.GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topNMetrics'), 'exclude': lambda f: f is None }})
    r"""Metrics of top n smart replies, sorted by TopNMetric.n."""  
    