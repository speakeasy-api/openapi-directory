/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FilesetTemplatePatch - Provide an object with the fileset template definition.
 */
public class FilesetTemplatePatch {
    /**
     * Include or exclude hidden folders inside locally-mounted remote file systems from backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowBackupHiddenFoldersInNetworkMounts")
    public Boolean allowBackupHiddenFoldersInNetworkMounts;

    public FilesetTemplatePatch withAllowBackupHiddenFoldersInNetworkMounts(Boolean allowBackupHiddenFoldersInNetworkMounts) {
        this.allowBackupHiddenFoldersInNetworkMounts = allowBackupHiddenFoldersInNetworkMounts;
        return this;
    }
    
    /**
     * Include or exclude locally-mounted remote file systems from backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowBackupNetworkMounts")
    public Boolean allowBackupNetworkMounts;

    public FilesetTemplatePatch withAllowBackupNetworkMounts(Boolean allowBackupNetworkMounts) {
        this.allowBackupNetworkMounts = allowBackupNetworkMounts;
        return this;
    }
    
    /**
     * Action taken if script fails. Options are "abort", "continue".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupScriptErrorHandling")
    public String backupScriptErrorHandling;

    public FilesetTemplatePatch withBackupScriptErrorHandling(String backupScriptErrorHandling) {
        this.backupScriptErrorHandling = backupScriptErrorHandling;
        return this;
    }
    
    /**
     * Number of seconds after which the script is killed if it has not completed execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupScriptTimeout")
    public Long backupScriptTimeout;

    public FilesetTemplatePatch withBackupScriptTimeout(Long backupScriptTimeout) {
        this.backupScriptTimeout = backupScriptTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exceptions")
    public String[] exceptions;

    public FilesetTemplatePatch withExceptions(String[] exceptions) {
        this.exceptions = exceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludes")
    public String[] excludes;

    public FilesetTemplatePatch withExcludes(String[] excludes) {
        this.excludes = excludes;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public FilesetTemplatePatch withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includes")
    public String[] includes;

    public FilesetTemplatePatch withIncludes(String[] includes) {
        this.includes = includes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public FilesetTemplatePatch withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Operating system type of filesets created by template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystemType")
    public FilesetTemplatePatchOperatingSystemTypeEnum operatingSystemType;

    public FilesetTemplatePatch withOperatingSystemType(FilesetTemplatePatchOperatingSystemTypeEnum operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * Script to run after backup of this Fileset ends.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postBackupScript")
    public String postBackupScript;

    public FilesetTemplatePatch withPostBackupScript(String postBackupScript) {
        this.postBackupScript = postBackupScript;
        return this;
    }
    
    /**
     * Script to run before backup of this Fileset starts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preBackupScript")
    public String preBackupScript;

    public FilesetTemplatePatch withPreBackupScript(String preBackupScript) {
        this.preBackupScript = preBackupScript;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareType")
    public FilesetTemplatePatchShareTypeEnum shareType;

    public FilesetTemplatePatch withShareType(FilesetTemplatePatchShareTypeEnum shareType) {
        this.shareType = shareType;
        return this;
    }
    
    /**
     * Use VSS during Windows backups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useWindowsVss")
    public Boolean useWindowsVss;

    public FilesetTemplatePatch withUseWindowsVss(Boolean useWindowsVss) {
        this.useWindowsVss = useWindowsVss;
        return this;
    }
    
    public FilesetTemplatePatch(@JsonProperty("id") String id) {
        this.id = id;
  }
}
