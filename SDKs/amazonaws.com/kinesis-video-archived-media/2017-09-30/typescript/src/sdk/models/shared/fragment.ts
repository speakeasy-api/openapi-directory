/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Represents a segment of video or other time-delimited data.
 */
export class Fragment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FragmentLengthInMilliseconds" })
  fragmentLengthInMilliseconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "FragmentNumber" })
  fragmentNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FragmentSizeInBytes" })
  fragmentSizeInBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ProducerTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  producerTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serverTimestamp?: Date;
}
