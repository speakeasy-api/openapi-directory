/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NotifyShopperRequest {
    @JsonProperty("amount")
    public Amount amount;

    public NotifyShopperRequest withAmount(Amount amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Date on which the subscription amount will be debited from the shopper. In YYYY-MM-DD format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingDate")
    public String billingDate;

    public NotifyShopperRequest withBillingDate(String billingDate) {
        this.billingDate = billingDate;
        return this;
    }
    
    /**
     * Sequence of the debit. Depends on Frequency and Billing Attempts Rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingSequenceNumber")
    public String billingSequenceNumber;

    public NotifyShopperRequest withBillingSequenceNumber(String billingSequenceNumber) {
        this.billingSequenceNumber = billingSequenceNumber;
        return this;
    }
    
    /**
     * Reference of Pre-debit notification that is displayed to the shopper. Optional field. Maps to reference if missing
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayedReference")
    public String displayedReference;

    public NotifyShopperRequest withDisplayedReference(String displayedReference) {
        this.displayedReference = displayedReference;
        return this;
    }
    
    /**
     * The merchant account identifier with which you want to process the transaction.
     */
    @JsonProperty("merchantAccount")
    public String merchantAccount;

    public NotifyShopperRequest withMerchantAccount(String merchantAccount) {
        this.merchantAccount = merchantAccount;
        return this;
    }
    
    /**
     * This is the `recurringDetailReference` returned in the response when you created the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recurringDetailReference")
    public String recurringDetailReference;

    public NotifyShopperRequest withRecurringDetailReference(String recurringDetailReference) {
        this.recurringDetailReference = recurringDetailReference;
        return this;
    }
    
    /**
     * Pre-debit notification reference sent by the merchant. This is a mandatory field
     */
    @JsonProperty("reference")
    public String reference;

    public NotifyShopperRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The ID that uniquely identifies the shopper.
     * 
     * This `shopperReference` must be the same as the `shopperReference` used in the initial payment.
     */
    @JsonProperty("shopperReference")
    public String shopperReference;

    public NotifyShopperRequest withShopperReference(String shopperReference) {
        this.shopperReference = shopperReference;
        return this;
    }
    
    /**
     * This is the `recurringDetailReference` returned in the response when you created the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storedPaymentMethodId")
    public String storedPaymentMethodId;

    public NotifyShopperRequest withStoredPaymentMethodId(String storedPaymentMethodId) {
        this.storedPaymentMethodId = storedPaymentMethodId;
        return this;
    }
    
    public NotifyShopperRequest(@JsonProperty("amount") Amount amount, @JsonProperty("merchantAccount") String merchantAccount, @JsonProperty("reference") String reference, @JsonProperty("shopperReference") String shopperReference) {
        this.amount = amount;
        this.merchantAccount = merchantAccount;
        this.reference = reference;
        this.shopperReference = shopperReference;
  }
}
