"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class GetSwatchRequest:
    
    color: str = dataclasses.field(metadata={'query_param': { 'field_name': 'color', 'style': 'form', 'explode': False }})
    r"""The hex value of the color to retrieve without '#'"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': False }})
    r"""The name of the color"""  
    

@dataclasses.dataclass
class GetSwatchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""NOT FOUND"""  
    get_swatch_200_image_svg_plus_xml_string: Optional[str] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    