"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notificationchannel as shared_notificationchannel
from ..shared import segmenttype_enum as shared_segmenttype_enum
from ..shared import startsegmentdetectionfilters as shared_startsegmentdetectionfilters
from ..shared import video as shared_video
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartSegmentDetectionRequest:
    
    segment_types: list[shared_segmenttype_enum.SegmentTypeEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SegmentTypes') }})  
    video: shared_video.Video = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Video') }})
    r"""Video file stored in an Amazon S3 bucket. Amazon Rekognition video start operations such as <a>StartLabelDetection</a> use <code>Video</code> to specify a video for analysis. The supported file formats are .mp4, .mov and .avi."""  
    client_request_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientRequestToken'), 'exclude': lambda f: f is None }})  
    filters: Optional[shared_startsegmentdetectionfilters.StartSegmentDetectionFilters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Filters'), 'exclude': lambda f: f is None }})  
    job_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobTag'), 'exclude': lambda f: f is None }})  
    notification_channel: Optional[shared_notificationchannel.NotificationChannel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotificationChannel'), 'exclude': lambda f: f is None }})  
    