// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeMappedResourceConfigurationQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type DescribeMappedResourceConfigurationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DescribeMappedResourceConfigurationRequestBody struct {
	// The maximum number of results to return in the response.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The token to provide in your next request, to get another batch of results.
	NextToken *string `json:"NextToken,omitempty"`
	// The Amazon Resource Name (ARN) of the stream.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream.
	StreamName *string `json:"StreamName,omitempty"`
}

type DescribeMappedResourceConfigurationRequest struct {
	QueryParams DescribeMappedResourceConfigurationQueryParams
	Headers     DescribeMappedResourceConfigurationHeaders
	Request     DescribeMappedResourceConfigurationRequestBody `request:"mediaType=application/json"`
}

type DescribeMappedResourceConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// Success
	DescribeMappedResourceConfigurationOutput *shared.DescribeMappedResourceConfigurationOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
