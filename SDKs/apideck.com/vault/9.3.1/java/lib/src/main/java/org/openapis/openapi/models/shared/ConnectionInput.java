/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConnectionInput - Fields that need to be updated on the resource
 */
public class ConnectionInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public ConnectionConfigurationInput[] configuration;

    public ConnectionInput withConfiguration(ConnectionConfigurationInput[] configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * Whether the connection is enabled or not. You can enable or disable a connection using the Update Connection API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public ConnectionInput withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Attach your own consumer specific metadata
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;

    public ConnectionInput withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public java.util.Map<String, Object> settings;

    public ConnectionInput withSettings(java.util.Map<String, Object> settings) {
        this.settings = settings;
        return this;
    }
    
    public ConnectionInput(){}
}
