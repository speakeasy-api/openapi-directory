// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ExecuteTransactionXAmzTargetEnum
type ExecuteTransactionXAmzTargetEnum string

const (
	ExecuteTransactionXAmzTargetEnumDynamoDb20120810ExecuteTransaction ExecuteTransactionXAmzTargetEnum = "DynamoDB_20120810.ExecuteTransaction"
)

func (e *ExecuteTransactionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20120810.ExecuteTransaction":
		*e = ExecuteTransactionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecuteTransactionXAmzTargetEnum: %s", s)
	}
}

type ExecuteTransactionRequest struct {
	ExecuteTransactionInput shared.ExecuteTransactionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              ExecuteTransactionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ExecuteTransactionResponse struct {
	ContentType string
	// Success
	ExecuteTransactionOutput *shared.ExecuteTransactionOutput
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerError
	InternalServerError interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TransactionCanceledException
	TransactionCanceledException interface{}
	// TransactionInProgressException
	TransactionInProgressException interface{}
}
