/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConformancePackStateEnum } from "./conformancepackstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Status details of a conformance pack.
 */
export class ConformancePackStatusDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackArn" })
  conformancePackArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackId" })
  conformancePackId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackName" })
  conformancePackName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackState" })
  conformancePackState: ConformancePackStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ConformancePackStatusReason" })
  conformancePackStatusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateCompletedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateCompletedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateRequestedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateRequestedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StackArn" })
  stackArn: string;
}
