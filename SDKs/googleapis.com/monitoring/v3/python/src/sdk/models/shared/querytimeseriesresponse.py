"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import status as shared_status
from ..shared import timeseriesdata as shared_timeseriesdata
from ..shared import timeseriesdescriptor as shared_timeseriesdescriptor
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QueryTimeSeriesResponse:
    r"""The QueryTimeSeries response."""
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""If there are more results than have been returned, then this field is set to a non-empty value. To see the additional results, use that value as page_token in the next call to this method."""  
    partial_errors: Optional[list[shared_status.Status]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partialErrors'), 'exclude': lambda f: f is None }})
    r"""Query execution errors that may have caused the time series data returned to be incomplete. The available data will be available in the response."""  
    time_series_data: Optional[list[shared_timeseriesdata.TimeSeriesData]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeSeriesData'), 'exclude': lambda f: f is None }})
    r"""The time series data."""  
    time_series_descriptor: Optional[shared_timeseriesdescriptor.TimeSeriesDescriptor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeSeriesDescriptor'), 'exclude': lambda f: f is None }})
    r"""A descriptor for the labels and points in a time series."""  
    