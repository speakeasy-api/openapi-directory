/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The automatically created recovery point of a namespace. Recovery points are created every 30 minutes and kept for 24 hours.
 */
export class RecoveryPoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "namespaceArn" })
  namespaceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "namespaceName" })
  namespaceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recoveryPointCreateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recoveryPointCreateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "recoveryPointId" })
  recoveryPointId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalSizeInMegaBytes" })
  totalSizeInMegaBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "workgroupName" })
  workgroupName?: string;
}
