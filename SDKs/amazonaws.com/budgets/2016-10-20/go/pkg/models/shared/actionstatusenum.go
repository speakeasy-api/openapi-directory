// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionStatusEnum string

const (
	ActionStatusEnumStandby             ActionStatusEnum = "STANDBY"
	ActionStatusEnumPending             ActionStatusEnum = "PENDING"
	ActionStatusEnumExecutionInProgress ActionStatusEnum = "EXECUTION_IN_PROGRESS"
	ActionStatusEnumExecutionSuccess    ActionStatusEnum = "EXECUTION_SUCCESS"
	ActionStatusEnumExecutionFailure    ActionStatusEnum = "EXECUTION_FAILURE"
	ActionStatusEnumReverseInProgress   ActionStatusEnum = "REVERSE_IN_PROGRESS"
	ActionStatusEnumReverseSuccess      ActionStatusEnum = "REVERSE_SUCCESS"
	ActionStatusEnumReverseFailure      ActionStatusEnum = "REVERSE_FAILURE"
	ActionStatusEnumResetInProgress     ActionStatusEnum = "RESET_IN_PROGRESS"
	ActionStatusEnumResetFailure        ActionStatusEnum = "RESET_FAILURE"
)

func (e ActionStatusEnum) ToPointer() *ActionStatusEnum {
	return &e
}

func (e *ActionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STANDBY":
		fallthrough
	case "PENDING":
		fallthrough
	case "EXECUTION_IN_PROGRESS":
		fallthrough
	case "EXECUTION_SUCCESS":
		fallthrough
	case "EXECUTION_FAILURE":
		fallthrough
	case "REVERSE_IN_PROGRESS":
		fallthrough
	case "REVERSE_SUCCESS":
		fallthrough
	case "REVERSE_FAILURE":
		fallthrough
	case "RESET_IN_PROGRESS":
		fallthrough
	case "RESET_FAILURE":
		*e = ActionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionStatusEnum: %v", v)
	}
}
