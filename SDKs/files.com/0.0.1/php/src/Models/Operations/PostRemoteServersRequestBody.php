<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PostRemoteServersRequestBody
{
    /**
     * AWS Access Key.
     * 
     * @var ?string $awsAccessKey
     */
	#[SpeakeasyMetadata('multipartForm:name=aws_access_key')]
    public ?string $awsAccessKey = null;
    
    /**
     * AWS secret key.
     * 
     * @var ?string $awsSecretKey
     */
	#[SpeakeasyMetadata('multipartForm:name=aws_secret_key')]
    public ?string $awsSecretKey = null;
    
    /**
     * Azure Blob Storage secret key.
     * 
     * @var ?string $azureBlobStorageAccessKey
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_blob_storage_access_key')]
    public ?string $azureBlobStorageAccessKey = null;
    
    /**
     * Azure Blob Storage Account name
     * 
     * @var ?string $azureBlobStorageAccount
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_blob_storage_account')]
    public ?string $azureBlobStorageAccount = null;
    
    /**
     * Azure Blob Storage Container name
     * 
     * @var ?string $azureBlobStorageContainer
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_blob_storage_container')]
    public ?string $azureBlobStorageContainer = null;
    
    /**
     * Shared Access Signature (SAS) token
     * 
     * @var ?string $azureBlobStorageSasToken
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_blob_storage_sas_token')]
    public ?string $azureBlobStorageSasToken = null;
    
    /**
     * Azure File Storage access key.
     * 
     * @var ?string $azureFilesStorageAccessKey
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_files_storage_access_key')]
    public ?string $azureFilesStorageAccessKey = null;
    
    /**
     * Azure File Storage Account name
     * 
     * @var ?string $azureFilesStorageAccount
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_files_storage_account')]
    public ?string $azureFilesStorageAccount = null;
    
    /**
     * Shared Access Signature (SAS) token
     * 
     * @var ?string $azureFilesStorageSasToken
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_files_storage_sas_token')]
    public ?string $azureFilesStorageSasToken = null;
    
    /**
     * Azure File Storage Share name
     * 
     * @var ?string $azureFilesStorageShareName
     */
	#[SpeakeasyMetadata('multipartForm:name=azure_files_storage_share_name')]
    public ?string $azureFilesStorageShareName = null;
    
    /**
     * Backblaze B2 Cloud Storage applicationKey.
     * 
     * @var ?string $backblazeB2ApplicationKey
     */
	#[SpeakeasyMetadata('multipartForm:name=backblaze_b2_application_key')]
    public ?string $backblazeB2ApplicationKey = null;
    
    /**
     * Backblaze B2 Cloud Storage Bucket name
     * 
     * @var ?string $backblazeB2Bucket
     */
	#[SpeakeasyMetadata('multipartForm:name=backblaze_b2_bucket')]
    public ?string $backblazeB2Bucket = null;
    
    /**
     * Backblaze B2 Cloud Storage keyID.
     * 
     * @var ?string $backblazeB2KeyId
     */
	#[SpeakeasyMetadata('multipartForm:name=backblaze_b2_key_id')]
    public ?string $backblazeB2KeyId = null;
    
    /**
     * Backblaze B2 Cloud Storage S3 Endpoint
     * 
     * @var ?string $backblazeB2S3Endpoint
     */
	#[SpeakeasyMetadata('multipartForm:name=backblaze_b2_s3_endpoint')]
    public ?string $backblazeB2S3Endpoint = null;
    
    /**
     * `true` if remote server only accepts connections from dedicated IPs
     * 
     * @var ?bool $enableDedicatedIps
     */
	#[SpeakeasyMetadata('multipartForm:name=enable_dedicated_ips')]
    public ?bool $enableDedicatedIps = null;
    
    /**
     * Filebase Access Key.
     * 
     * @var ?string $filebaseAccessKey
     */
	#[SpeakeasyMetadata('multipartForm:name=filebase_access_key')]
    public ?string $filebaseAccessKey = null;
    
    /**
     * Filebase Bucket name
     * 
     * @var ?string $filebaseBucket
     */
	#[SpeakeasyMetadata('multipartForm:name=filebase_bucket')]
    public ?string $filebaseBucket = null;
    
    /**
     * Filebase secret key
     * 
     * @var ?string $filebaseSecretKey
     */
	#[SpeakeasyMetadata('multipartForm:name=filebase_secret_key')]
    public ?string $filebaseSecretKey = null;
    
    /**
     * Local permissions for files agent. read_only, write_only, or read_write
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostRemoteServersRequestBodyFilesAgentPermissionSetEnum $filesAgentPermissionSet
     */
	#[SpeakeasyMetadata('multipartForm:name=files_agent_permission_set')]
    public ?PostRemoteServersRequestBodyFilesAgentPermissionSetEnum $filesAgentPermissionSet = null;
    
    /**
     * Agent local root path
     * 
     * @var ?string $filesAgentRoot
     */
	#[SpeakeasyMetadata('multipartForm:name=files_agent_root')]
    public ?string $filesAgentRoot = null;
    
    /**
     * Google Cloud Storage bucket name
     * 
     * @var ?string $googleCloudStorageBucket
     */
	#[SpeakeasyMetadata('multipartForm:name=google_cloud_storage_bucket')]
    public ?string $googleCloudStorageBucket = null;
    
    /**
     * A JSON file that contains the private key. To generate see https://cloud.google.com/storage/docs/json_api/v1/how-tos/authorizing#APIKey
     * 
     * @var ?string $googleCloudStorageCredentialsJson
     */
	#[SpeakeasyMetadata('multipartForm:name=google_cloud_storage_credentials_json')]
    public ?string $googleCloudStorageCredentialsJson = null;
    
    /**
     * Google Cloud Project ID
     * 
     * @var ?string $googleCloudStorageProjectId
     */
	#[SpeakeasyMetadata('multipartForm:name=google_cloud_storage_project_id')]
    public ?string $googleCloudStorageProjectId = null;
    
    /**
     * Hostname or IP address
     * 
     * @var ?string $hostname
     */
	#[SpeakeasyMetadata('multipartForm:name=hostname')]
    public ?string $hostname = null;
    
    /**
     * Max number of parallel connections.  Ignored for S3 connections (we will parallelize these as much as possible).
     * 
     * @var ?int $maxConnections
     */
	#[SpeakeasyMetadata('multipartForm:name=max_connections')]
    public ?int $maxConnections = null;
    
    /**
     * Internal name for your reference
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('multipartForm:name=name')]
    public ?string $name = null;
    
    /**
     * Either personal or business_other account types
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostRemoteServersRequestBodyOneDriveAccountTypeEnum $oneDriveAccountType
     */
	#[SpeakeasyMetadata('multipartForm:name=one_drive_account_type')]
    public ?PostRemoteServersRequestBodyOneDriveAccountTypeEnum $oneDriveAccountType = null;
    
    /**
     * Password if needed.
     * 
     * @var ?string $password
     */
	#[SpeakeasyMetadata('multipartForm:name=password')]
    public ?string $password = null;
    
    /**
     * If true, we will ensure that all communications with this remote server are made through the primary region of the site.  This setting can also be overridden by a sitewide setting which will force it to true.
     * 
     * @var ?bool $pinToSiteRegion
     */
	#[SpeakeasyMetadata('multipartForm:name=pin_to_site_region')]
    public ?bool $pinToSiteRegion = null;
    
    /**
     * Port for remote server.  Not needed for S3.
     * 
     * @var ?int $port
     */
	#[SpeakeasyMetadata('multipartForm:name=port')]
    public ?int $port = null;
    
    /**
     * Private key if needed.
     * 
     * @var ?string $privateKey
     */
	#[SpeakeasyMetadata('multipartForm:name=private_key')]
    public ?string $privateKey = null;
    
    /**
     * Passphrase for private key if needed.
     * 
     * @var ?string $privateKeyPassphrase
     */
	#[SpeakeasyMetadata('multipartForm:name=private_key_passphrase')]
    public ?string $privateKeyPassphrase = null;
    
    /**
     * Rackspace API key from the Rackspace Cloud Control Panel.
     * 
     * @var ?string $rackspaceApiKey
     */
	#[SpeakeasyMetadata('multipartForm:name=rackspace_api_key')]
    public ?string $rackspaceApiKey = null;
    
    /**
     * The name of the container (top level directory) where files will sync.
     * 
     * @var ?string $rackspaceContainer
     */
	#[SpeakeasyMetadata('multipartForm:name=rackspace_container')]
    public ?string $rackspaceContainer = null;
    
    /**
     * Three letter airport code for Rackspace region. See https://support.rackspace.com/how-to/about-regions/
     * 
     * @var ?string $rackspaceRegion
     */
	#[SpeakeasyMetadata('multipartForm:name=rackspace_region')]
    public ?string $rackspaceRegion = null;
    
    /**
     * Rackspace username used to login to the Rackspace Cloud Control Panel.
     * 
     * @var ?string $rackspaceUsername
     */
	#[SpeakeasyMetadata('multipartForm:name=rackspace_username')]
    public ?string $rackspaceUsername = null;
    
    /**
     * Reset authenticated account
     * 
     * @var ?bool $resetAuthentication
     */
	#[SpeakeasyMetadata('multipartForm:name=reset_authentication')]
    public ?bool $resetAuthentication = null;
    
    /**
     * S3 bucket name
     * 
     * @var ?string $s3Bucket
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_bucket')]
    public ?string $s3Bucket = null;
    
    /**
     * S3-compatible Access Key.
     * 
     * @var ?string $s3CompatibleAccessKey
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_compatible_access_key')]
    public ?string $s3CompatibleAccessKey = null;
    
    /**
     * S3-compatible Bucket name
     * 
     * @var ?string $s3CompatibleBucket
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_compatible_bucket')]
    public ?string $s3CompatibleBucket = null;
    
    /**
     * S3-compatible endpoint
     * 
     * @var ?string $s3CompatibleEndpoint
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_compatible_endpoint')]
    public ?string $s3CompatibleEndpoint = null;
    
    /**
     * S3-compatible endpoint
     * 
     * @var ?string $s3CompatibleRegion
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_compatible_region')]
    public ?string $s3CompatibleRegion = null;
    
    /**
     * S3-compatible secret key
     * 
     * @var ?string $s3CompatibleSecretKey
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_compatible_secret_key')]
    public ?string $s3CompatibleSecretKey = null;
    
    /**
     * S3 region
     * 
     * @var ?string $s3Region
     */
	#[SpeakeasyMetadata('multipartForm:name=s3_region')]
    public ?string $s3Region = null;
    
    /**
     * Remote server certificate
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostRemoteServersRequestBodyServerCertificateEnum $serverCertificate
     */
	#[SpeakeasyMetadata('multipartForm:name=server_certificate')]
    public ?PostRemoteServersRequestBodyServerCertificateEnum $serverCertificate = null;
    
    /**
     * Remote server SSH Host Key. If provided, we will require that the server host key matches the provided key. Uses OpenSSH format similar to what would go into ~/.ssh/known_hosts
     * 
     * @var ?string $serverHostKey
     */
	#[SpeakeasyMetadata('multipartForm:name=server_host_key')]
    public ?string $serverHostKey = null;
    
    /**
     * Remote server type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostRemoteServersRequestBodyServerTypeEnum $serverType
     */
	#[SpeakeasyMetadata('multipartForm:name=server_type')]
    public ?PostRemoteServersRequestBodyServerTypeEnum $serverType = null;
    
    /**
     * Should we require SSL?
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostRemoteServersRequestBodySslEnum $ssl
     */
	#[SpeakeasyMetadata('multipartForm:name=ssl')]
    public ?PostRemoteServersRequestBodySslEnum $ssl = null;
    
    /**
     * SSL client certificate.
     * 
     * @var ?string $sslCertificate
     */
	#[SpeakeasyMetadata('multipartForm:name=ssl_certificate')]
    public ?string $sslCertificate = null;
    
    /**
     * Remote server username.  Not needed for S3 buckets.
     * 
     * @var ?string $username
     */
	#[SpeakeasyMetadata('multipartForm:name=username')]
    public ?string $username = null;
    
    /**
     * Wasabi access key.
     * 
     * @var ?string $wasabiAccessKey
     */
	#[SpeakeasyMetadata('multipartForm:name=wasabi_access_key')]
    public ?string $wasabiAccessKey = null;
    
    /**
     * Wasabi Bucket name
     * 
     * @var ?string $wasabiBucket
     */
	#[SpeakeasyMetadata('multipartForm:name=wasabi_bucket')]
    public ?string $wasabiBucket = null;
    
    /**
     * Wasabi region
     * 
     * @var ?string $wasabiRegion
     */
	#[SpeakeasyMetadata('multipartForm:name=wasabi_region')]
    public ?string $wasabiRegion = null;
    
    /**
     * Wasabi secret key.
     * 
     * @var ?string $wasabiSecretKey
     */
	#[SpeakeasyMetadata('multipartForm:name=wasabi_secret_key')]
    public ?string $wasabiSecretKey = null;
    
	public function __construct()
	{
		$this->awsAccessKey = null;
		$this->awsSecretKey = null;
		$this->azureBlobStorageAccessKey = null;
		$this->azureBlobStorageAccount = null;
		$this->azureBlobStorageContainer = null;
		$this->azureBlobStorageSasToken = null;
		$this->azureFilesStorageAccessKey = null;
		$this->azureFilesStorageAccount = null;
		$this->azureFilesStorageSasToken = null;
		$this->azureFilesStorageShareName = null;
		$this->backblazeB2ApplicationKey = null;
		$this->backblazeB2Bucket = null;
		$this->backblazeB2KeyId = null;
		$this->backblazeB2S3Endpoint = null;
		$this->enableDedicatedIps = null;
		$this->filebaseAccessKey = null;
		$this->filebaseBucket = null;
		$this->filebaseSecretKey = null;
		$this->filesAgentPermissionSet = null;
		$this->filesAgentRoot = null;
		$this->googleCloudStorageBucket = null;
		$this->googleCloudStorageCredentialsJson = null;
		$this->googleCloudStorageProjectId = null;
		$this->hostname = null;
		$this->maxConnections = null;
		$this->name = null;
		$this->oneDriveAccountType = null;
		$this->password = null;
		$this->pinToSiteRegion = null;
		$this->port = null;
		$this->privateKey = null;
		$this->privateKeyPassphrase = null;
		$this->rackspaceApiKey = null;
		$this->rackspaceContainer = null;
		$this->rackspaceRegion = null;
		$this->rackspaceUsername = null;
		$this->resetAuthentication = null;
		$this->s3Bucket = null;
		$this->s3CompatibleAccessKey = null;
		$this->s3CompatibleBucket = null;
		$this->s3CompatibleEndpoint = null;
		$this->s3CompatibleRegion = null;
		$this->s3CompatibleSecretKey = null;
		$this->s3Region = null;
		$this->serverCertificate = null;
		$this->serverHostKey = null;
		$this->serverType = null;
		$this->ssl = null;
		$this->sslCertificate = null;
		$this->username = null;
		$this->wasabiAccessKey = null;
		$this->wasabiBucket = null;
		$this->wasabiRegion = null;
		$this->wasabiSecretKey = null;
	}
}
