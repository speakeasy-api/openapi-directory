// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// WriteRecordsXAmzTargetEnum
type WriteRecordsXAmzTargetEnum string

const (
	WriteRecordsXAmzTargetEnumTimestream20181101WriteRecords WriteRecordsXAmzTargetEnum = "Timestream_20181101.WriteRecords"
)

func (e WriteRecordsXAmzTargetEnum) ToPointer() *WriteRecordsXAmzTargetEnum {
	return &e
}

func (e *WriteRecordsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Timestream_20181101.WriteRecords":
		*e = WriteRecordsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WriteRecordsXAmzTargetEnum: %v", v)
	}
}

type WriteRecordsRequest struct {
	WriteRecordsRequest shared.WriteRecordsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          WriteRecordsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type WriteRecordsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// InvalidEndpointException
	InvalidEndpointException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// RejectedRecordsException
	RejectedRecordsException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
	// Success
	WriteRecordsResponse *shared.WriteRecordsResponse
}
