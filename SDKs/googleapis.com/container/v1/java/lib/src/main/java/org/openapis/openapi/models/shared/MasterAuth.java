/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MasterAuth - The authentication information for accessing the master endpoint. Authentication can be done using HTTP basic auth or using client certificates.
 */
public class MasterAuth {
    /**
     * [Output only] Base64-encoded public certificate used by clients to authenticate to the cluster endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientCertificate")
    public String clientCertificate;
    public MasterAuth withClientCertificate(String clientCertificate) {
        this.clientCertificate = clientCertificate;
        return this;
    }
    
    /**
     * Configuration for client certificates on the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientCertificateConfig")
    public ClientCertificateConfig clientCertificateConfig;
    public MasterAuth withClientCertificateConfig(ClientCertificateConfig clientCertificateConfig) {
        this.clientCertificateConfig = clientCertificateConfig;
        return this;
    }
    
    /**
     * [Output only] Base64-encoded private key used by clients to authenticate to the cluster endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientKey")
    public String clientKey;
    public MasterAuth withClientKey(String clientKey) {
        this.clientKey = clientKey;
        return this;
    }
    
    /**
     * [Output only] Base64-encoded public certificate that is the root of trust for the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterCaCertificate")
    public String clusterCaCertificate;
    public MasterAuth withClusterCaCertificate(String clusterCaCertificate) {
        this.clusterCaCertificate = clusterCaCertificate;
        return this;
    }
    
    /**
     * The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password. If a password is provided for cluster creation, username must be non-empty. Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public MasterAuth withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * The username to use for HTTP basic authentication to the master endpoint. For clusters v1.6.0 and later, basic authentication can be disabled by leaving username unspecified (or setting it to the empty string). Warning: basic authentication is deprecated, and will be removed in GKE control plane versions 1.19 and newer. For a list of recommended authentication methods, see: https://cloud.google.com/kubernetes-engine/docs/how-to/api-server-authentication
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;
    public MasterAuth withUsername(String username) {
        this.username = username;
        return this;
    }
    
}
