// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvoicePaymentStatusEnum - The payment status
type InvoicePaymentStatusEnum string

const (
	InvoicePaymentStatusEnumPaid          InvoicePaymentStatusEnum = "Paid"
	InvoicePaymentStatusEnumNotPaid       InvoicePaymentStatusEnum = "NotPaid"
	InvoicePaymentStatusEnumPartiallyPaid InvoicePaymentStatusEnum = "PartiallyPaid"
	InvoicePaymentStatusEnumLoss          InvoicePaymentStatusEnum = "Loss"
)

func (e InvoicePaymentStatusEnum) ToPointer() *InvoicePaymentStatusEnum {
	return &e
}

func (e *InvoicePaymentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Paid":
		fallthrough
	case "NotPaid":
		fallthrough
	case "PartiallyPaid":
		fallthrough
	case "Loss":
		*e = InvoicePaymentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoicePaymentStatusEnum: %v", v)
	}
}
