/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KeyRangeLocation } from "./keyrangelocation";
import { StateFamilyConfig } from "./statefamilyconfig";
import { StreamLocation } from "./streamlocation";
import { Expose, Type } from "class-transformer";

/**
 * All configuration data for a particular Computation.
 */
export class ComputationTopology extends SpeakeasyBase {
  /**
   * The ID of the computation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "computationId" })
  computationId?: string;

  /**
   * The inputs to the computation.
   */
  @SpeakeasyMetadata({ elemType: StreamLocation })
  @Expose({ name: "inputs" })
  @Type(() => StreamLocation)
  inputs?: StreamLocation[];

  /**
   * The key ranges processed by the computation.
   */
  @SpeakeasyMetadata({ elemType: KeyRangeLocation })
  @Expose({ name: "keyRanges" })
  @Type(() => KeyRangeLocation)
  keyRanges?: KeyRangeLocation[];

  /**
   * The outputs from the computation.
   */
  @SpeakeasyMetadata({ elemType: StreamLocation })
  @Expose({ name: "outputs" })
  @Type(() => StreamLocation)
  outputs?: StreamLocation[];

  /**
   * The state family values.
   */
  @SpeakeasyMetadata({ elemType: StateFamilyConfig })
  @Expose({ name: "stateFamilies" })
  @Type(() => StateFamilyConfig)
  stateFamilies?: StateFamilyConfig[];

  /**
   * The system stage name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "systemStageName" })
  systemStageName?: string;
}
