/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateMemberRequestBody extends SpeakeasyBase {
  /**
   * Invite or join a member to a conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: shared.MemberActionEnum;

  /**
   * A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  @Type(() => shared.Channel)
  channel?: shared.Channel;
}

export class UpdateMemberRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateMemberRequestBody;

  /**
   * Conversation ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=conversation_id",
  })
  conversationId: string;

  /**
   * Member ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=member_id",
  })
  memberId: string;
}

/**
 * Member retrieved
 */
export class UpdateMember200ApplicationJSON extends SpeakeasyBase {
  /**
   * A link towards a member included in Conversation API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class UpdateMemberResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Member retrieved
   */
  @SpeakeasyMetadata()
  updateMember200ApplicationJSONObject?: UpdateMember200ApplicationJSON;
}
