/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * CadenceMembership - Success
 */
public class CadenceMembership {
    /**
     * Datetime of when the person was last added to this cadence
     */
    
    public OffsetDateTime addedAt;
    public CadenceMembership withAddedAt(OffsetDateTime addedAt) {
        this.addedAt = addedAt;
        return this;
    }
    
    
    public EmbeddedResource cadence;
    public CadenceMembership withCadence(EmbeddedResource cadence) {
        this.cadence = cadence;
        return this;
    }
    
    
    public CadenceMembershipCounts counts;
    public CadenceMembership withCounts(CadenceMembershipCounts counts) {
        this.counts = counts;
        return this;
    }
    
    /**
     * Datetime of when the person was first added to this cadence
     */
    
    public OffsetDateTime createdAt;
    public CadenceMembership withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The current state of the person on the cadence. Possible values are:
     * 
     * processing: The person is being processed on a cadence. Cadence-related changes cannot be made at this time
     * 
     * staged: The person is waiting for the first step in the cadence to occur
     * 
     * active: The cadence has begun processing this person and is still in the process, but idle
     * 
     * scheduled: The cadence has begun processing this person and is still in the process, with an activity scheduled to occur
     * 
     * completed: The cadence has been completed for this person
     * 
     * removed: The person was manually or automatically removed from the cadence
     * 
     * removed_no_action: The person was removed from the cadence before any action occurred
     * 
     * reassigned: The person's cadence execution was transferred to a different user, ending this user's interaction
     * 
     */
    
    public String currentState;
    public CadenceMembership withCurrentState(String currentState) {
        this.currentState = currentState;
        return this;
    }
    
    /**
     * Whether the person is currently on the cadence
     */
    
    public Boolean currentlyOnCadence;
    public CadenceMembership withCurrentlyOnCadence(Boolean currentlyOnCadence) {
        this.currentlyOnCadence = currentlyOnCadence;
        return this;
    }
    
    /**
     * Cadence membership ID
     */
    
    public Long id;
    public CadenceMembership withId(Long id) {
        this.id = id;
        return this;
    }
    
    
    public EmbeddedResource latestAction;
    public CadenceMembership withLatestAction(EmbeddedResource latestAction) {
        this.latestAction = latestAction;
        return this;
    }
    
    
    public EmbeddedResource person;
    public CadenceMembership withPerson(EmbeddedResource person) {
        this.person = person;
        return this;
    }
    
    /**
     * Whether the associated person has since been deleted
     */
    
    public Boolean personDeleted;
    public CadenceMembership withPersonDeleted(Boolean personDeleted) {
        this.personDeleted = personDeleted;
        return this;
    }
    
    /**
     * Datetime of when the record was last updated
     */
    
    public OffsetDateTime updatedAt;
    public CadenceMembership withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    
    public EmbeddedResource user;
    public CadenceMembership withUser(EmbeddedResource user) {
        this.user = user;
        return this;
    }
    
}
