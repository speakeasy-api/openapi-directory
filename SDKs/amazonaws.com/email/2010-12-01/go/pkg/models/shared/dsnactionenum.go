// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DsnActionEnum string

const (
	DsnActionEnumFailed    DsnActionEnum = "failed"
	DsnActionEnumDelayed   DsnActionEnum = "delayed"
	DsnActionEnumDelivered DsnActionEnum = "delivered"
	DsnActionEnumRelayed   DsnActionEnum = "relayed"
	DsnActionEnumExpanded  DsnActionEnum = "expanded"
)

func (e DsnActionEnum) ToPointer() *DsnActionEnum {
	return &e
}

func (e *DsnActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "failed":
		fallthrough
	case "delayed":
		fallthrough
	case "delivered":
		fallthrough
	case "relayed":
		fallthrough
	case "expanded":
		*e = DsnActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DsnActionEnum: %v", v)
	}
}
