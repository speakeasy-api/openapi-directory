// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateJourneyRequestBodyWriteJourneyRequest - Specifies the configuration and other settings for a journey.
type CreateJourneyRequestBodyWriteJourneyRequest struct {
	Activities             map[string]shared.Activity     `json:"Activities,omitempty"`
	ClosedDays             *shared.ClosedDays             `json:"ClosedDays,omitempty"`
	CreationDate           *string                        `json:"CreationDate,omitempty"`
	JourneyChannelSettings *shared.JourneyChannelSettings `json:"JourneyChannelSettings,omitempty"`
	LastModifiedDate       *string                        `json:"LastModifiedDate,omitempty"`
	Limits                 *shared.JourneyLimits          `json:"Limits,omitempty"`
	LocalTime              *bool                          `json:"LocalTime,omitempty"`
	Name                   *string                        `json:"Name,omitempty"`
	OpenHours              *shared.OpenHours              `json:"OpenHours,omitempty"`
	QuietTime              *shared.QuietTime              `json:"QuietTime,omitempty"`
	RefreshFrequency       *string                        `json:"RefreshFrequency,omitempty"`
	RefreshOnSegmentUpdate *bool                          `json:"RefreshOnSegmentUpdate,omitempty"`
	Schedule               *shared.JourneySchedule        `json:"Schedule,omitempty"`
	SendingSchedule        *bool                          `json:"SendingSchedule,omitempty"`
	StartActivity          *string                        `json:"StartActivity,omitempty"`
	StartCondition         *shared.StartCondition         `json:"StartCondition,omitempty"`
	State                  *shared.StateEnum              `json:"State,omitempty"`
	WaitForQuietTime       *bool                          `json:"WaitForQuietTime,omitempty"`
}

type CreateJourneyRequestBody struct {
	// Specifies the configuration and other settings for a journey.
	WriteJourneyRequest CreateJourneyRequestBodyWriteJourneyRequest `json:"WriteJourneyRequest"`
}

type CreateJourneyRequest struct {
	RequestBody       CreateJourneyRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier for the application. This identifier is displayed as the <b>Project ID</b> on the Amazon Pinpoint console.
	ApplicationID string `pathParam:"style=simple,explode=false,name=application-id"`
}

type CreateJourneyResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateJourneyResponse *shared.CreateJourneyResponse
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// MethodNotAllowedException
	MethodNotAllowedException interface{}
	// NotFoundException
	NotFoundException interface{}
	// PayloadTooLargeException
	PayloadTooLargeException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
