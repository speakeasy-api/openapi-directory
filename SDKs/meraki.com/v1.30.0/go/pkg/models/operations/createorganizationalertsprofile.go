// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateOrganizationAlertsProfilePathParams struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
}

// CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum - The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular
type CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum string

const (
	CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnumCellular CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum = "cellular"
	CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnumWan1     CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum = "wan1"
	CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnumWan2     CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum = "wan2"
)

func (e *CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cellular":
		fallthrough
	case "wan1":
		fallthrough
	case "wan2":
		*e = CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum: %s", s)
	}
}

// CreateOrganizationAlertsProfileRequestBodyAlertCondition - The conditions that determine if the alert triggers
type CreateOrganizationAlertsProfileRequestBodyAlertCondition struct {
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
	BitRateBps *int64 `json:"bit_rate_bps,omitempty"`
	// The total duration in seconds that the threshold should be crossed before alerting
	Duration *int64 `json:"duration,omitempty"`
	// The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular
	Interface *CreateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum `json:"interface,omitempty"`
	// The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
	JitterMs *int64 `json:"jitter_ms,omitempty"`
	// The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
	LatencyMs *int64 `json:"latency_ms,omitempty"`
	// The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
	LossRatio *float32 `json:"loss_ratio,omitempty"`
	// The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
	Mos *float32 `json:"mos,omitempty"`
	// The look back period in seconds for sensing the alert
	Window *int64 `json:"window,omitempty"`
}

// CreateOrganizationAlertsProfileRequestBodyRecipients - List of recipients that will recieve the alert.
type CreateOrganizationAlertsProfileRequestBodyRecipients struct {
	// A list of emails that will receive information about the alert
	Emails []string `json:"emails,omitempty"`
	// A list base64 encoded urls of webhook endpoints that will receive information about the alert
	HTTPServerIds []string `json:"httpServerIds,omitempty"`
}

// CreateOrganizationAlertsProfileRequestBodyTypeEnum - The alert type
type CreateOrganizationAlertsProfileRequestBodyTypeEnum string

const (
	CreateOrganizationAlertsProfileRequestBodyTypeEnumAppOutage      CreateOrganizationAlertsProfileRequestBodyTypeEnum = "appOutage"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumVoipJitter     CreateOrganizationAlertsProfileRequestBodyTypeEnum = "voipJitter"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumVoipMos        CreateOrganizationAlertsProfileRequestBodyTypeEnum = "voipMos"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumVoipPacketLoss CreateOrganizationAlertsProfileRequestBodyTypeEnum = "voipPacketLoss"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumWanLatency     CreateOrganizationAlertsProfileRequestBodyTypeEnum = "wanLatency"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumWanPacketLoss  CreateOrganizationAlertsProfileRequestBodyTypeEnum = "wanPacketLoss"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumWanStatus      CreateOrganizationAlertsProfileRequestBodyTypeEnum = "wanStatus"
	CreateOrganizationAlertsProfileRequestBodyTypeEnumWanUtilization CreateOrganizationAlertsProfileRequestBodyTypeEnum = "wanUtilization"
)

func (e *CreateOrganizationAlertsProfileRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appOutage":
		fallthrough
	case "voipJitter":
		fallthrough
	case "voipMos":
		fallthrough
	case "voipPacketLoss":
		fallthrough
	case "wanLatency":
		fallthrough
	case "wanPacketLoss":
		fallthrough
	case "wanStatus":
		fallthrough
	case "wanUtilization":
		*e = CreateOrganizationAlertsProfileRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationAlertsProfileRequestBodyTypeEnum: %s", s)
	}
}

type CreateOrganizationAlertsProfileRequestBody struct {
	// The conditions that determine if the alert triggers
	AlertCondition CreateOrganizationAlertsProfileRequestBodyAlertCondition `json:"alertCondition"`
	// User supplied description of the alert
	Description *string `json:"description,omitempty"`
	// Networks with these tags will be monitored for the alert
	NetworkTags []string `json:"networkTags"`
	// List of recipients that will recieve the alert.
	Recipients CreateOrganizationAlertsProfileRequestBodyRecipients `json:"recipients"`
	// The alert type
	Type CreateOrganizationAlertsProfileRequestBodyTypeEnum `json:"type"`
}

type CreateOrganizationAlertsProfileRequest struct {
	PathParams CreateOrganizationAlertsProfilePathParams
	Request    CreateOrganizationAlertsProfileRequestBody `request:"mediaType=application/json"`
}

type CreateOrganizationAlertsProfileResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateOrganizationAlertsProfile201ApplicationJSONObject map[string]interface{}
}
