<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostAssetsReturnsSimulationMonteCarloCornishFisherRequestBody
{
    /**
     * The mean parameter of the Cornish-Fisher distribution, corresponding to the arithmetic average return of the asset
     * 
     * @var float $assetAverageReturnParameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetAverageReturnParameter')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $assetAverageReturnParameter;
    
    /**
     * The (excess) kurtosis parameter of the Cornish-Fisher distribution, corresponding approximately to the (excess) kurtosis of the asset returns
     * 
     * @var float $assetKurtosisParameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetKurtosisParameter')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $assetKurtosisParameter;
    
    /**
     * The skewness parameter of the Cornish-Fisher distribution, corresponding approximately to the skewness of the asset returns
     * 
     * @var float $assetSkewnessParameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetSkewnessParameter')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $assetSkewnessParameter;
    
    /**
     * The volatility parameter of the Cornish-Fisher distribution, corresponding approximately to the volatility of the asset returns
     * 
     * @var float $assetVolatilityParameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetVolatilityParameter')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $assetVolatilityParameter;
    
    /**
     * The number of simulations to perform
     * 
     * @var ?int $simulations
     */
	#[\JMS\Serializer\Annotation\SerializedName('simulations')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $simulations = null;
    
    /**
     * The number of time period(s) to simulate per simulation
     * 
     * @var ?int $simulationsLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('simulationsLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $simulationsLength = null;
    
	public function __construct()
	{
		$this->assetAverageReturnParameter = 0;
		$this->assetKurtosisParameter = 0;
		$this->assetSkewnessParameter = 0;
		$this->assetVolatilityParameter = 0;
		$this->simulations = null;
		$this->simulationsLength = null;
	}
}
