/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListArtifactVersionsRequest extends SpeakeasyBase {
  /**
   * The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=artifactId",
  })
  artifactId: string;

  /**
   * The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: string;

  /**
   * The number of versions to return.  Defaults to 20.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The number of versions to skip before starting to collect the result set.  Defaults to 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;
}

export class ListArtifactVersionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Common response for all operations that can return a `404` error.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * List of all artifact versions.
   */
  @SpeakeasyMetadata()
  versionSearchResults?: shared.VersionSearchResults;
}
