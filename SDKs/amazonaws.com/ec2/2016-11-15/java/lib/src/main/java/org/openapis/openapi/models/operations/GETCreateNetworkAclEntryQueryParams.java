/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateNetworkAclEntryQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateNetworkAclEntryActionEnum action;
    public GETCreateNetworkAclEntryQueryParams withAction(GETCreateNetworkAclEntryActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The IPv4 network range to allow or deny, in CIDR notation (for example &lt;code&gt;172.16.0.0/24&lt;/code&gt;). We modify the specified CIDR block to its canonical form; for example, if you specify &lt;code&gt;100.68.0.18/18&lt;/code&gt;, we modify it to &lt;code&gt;100.68.0.0/18&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CidrBlock")
    public String cidrBlock;
    public GETCreateNetworkAclEntryQueryParams withCidrBlock(String cidrBlock) {
        this.cidrBlock = cidrBlock;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETCreateNetworkAclEntryQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Indicates whether this is an egress rule (rule is applied to traffic leaving the subnet).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Egress")
    public Boolean egress;
    public GETCreateNetworkAclEntryQueryParams withEgress(Boolean egress) {
        this.egress = egress;
        return this;
    }
    
    /**
     * ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Icmp")
    public GETCreateNetworkAclEntryIcmp icmp;
    public GETCreateNetworkAclEntryQueryParams withIcmp(GETCreateNetworkAclEntryIcmp icmp) {
        this.icmp = icmp;
        return this;
    }
    
    /**
     * The IPv6 network range to allow or deny, in CIDR notation (for example &lt;code&gt;2001:db8:1234:1a00::/64&lt;/code&gt;).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Ipv6CidrBlock")
    public String ipv6CidrBlock;
    public GETCreateNetworkAclEntryQueryParams withIpv6CidrBlock(String ipv6CidrBlock) {
        this.ipv6CidrBlock = ipv6CidrBlock;
        return this;
    }
    
    /**
     * The ID of the network ACL.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NetworkAclId")
    public String networkAclId;
    public GETCreateNetworkAclEntryQueryParams withNetworkAclId(String networkAclId) {
        this.networkAclId = networkAclId;
        return this;
    }
    
    /**
     * TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PortRange")
    public GETCreateNetworkAclEntryPortRange portRange;
    public GETCreateNetworkAclEntryQueryParams withPortRange(GETCreateNetworkAclEntryPortRange portRange) {
        this.portRange = portRange;
        return this;
    }
    
    /**
     * The protocol number. A value of "-1" means all protocols. If you specify "-1" or a protocol number other than "6" (TCP), "17" (UDP), or "1" (ICMP), traffic on all ports is allowed, regardless of any ports or ICMP types or codes that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv4 CIDR block, traffic for all ICMP types and codes allowed, regardless of any that you specify. If you specify protocol "58" (ICMPv6) and specify an IPv6 CIDR block, you must specify an ICMP type and code.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Protocol")
    public String protocol;
    public GETCreateNetworkAclEntryQueryParams withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Indicates whether to allow or deny the traffic that matches the rule.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RuleAction")
    public GETCreateNetworkAclEntryRuleActionEnum ruleAction;
    public GETCreateNetworkAclEntryQueryParams withRuleAction(GETCreateNetworkAclEntryRuleActionEnum ruleAction) {
        this.ruleAction = ruleAction;
        return this;
    }
    
    /**
     * &lt;p&gt;The rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.&lt;/p&gt; &lt;p&gt;Constraints: Positive integer from 1 to 32766. The range 32767 to 65535 is reserved for internal use.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RuleNumber")
    public Long ruleNumber;
    public GETCreateNetworkAclEntryQueryParams withRuleNumber(Long ruleNumber) {
        this.ruleNumber = ruleNumber;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateNetworkAclEntryVersionEnum version;
    public GETCreateNetworkAclEntryQueryParams withVersion(GETCreateNetworkAclEntryVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
