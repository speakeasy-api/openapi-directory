// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteReplicationTaskXAmzTargetEnum
type DeleteReplicationTaskXAmzTargetEnum string

const (
	DeleteReplicationTaskXAmzTargetEnumAmazonDmSv20160101DeleteReplicationTask DeleteReplicationTaskXAmzTargetEnum = "AmazonDMSv20160101.DeleteReplicationTask"
)

func (e DeleteReplicationTaskXAmzTargetEnum) ToPointer() *DeleteReplicationTaskXAmzTargetEnum {
	return &e
}

func (e *DeleteReplicationTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonDMSv20160101.DeleteReplicationTask":
		*e = DeleteReplicationTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteReplicationTaskXAmzTargetEnum: %v", v)
	}
}

type DeleteReplicationTaskRequest struct {
	DeleteReplicationTaskMessage shared.DeleteReplicationTaskMessage `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteReplicationTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteReplicationTaskResponse struct {
	ContentType string
	// Success
	DeleteReplicationTaskResponse *shared.DeleteReplicationTaskResponse
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	StatusCode            int
	RawResponse           *http.Response
}
