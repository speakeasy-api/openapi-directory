/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SearchSFXSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

/**
 * Sort by
 */
export enum SearchSFXSortEnum {
  Popular = "popular",
  Newest = "newest",
  Relevance = "relevance",
  Random = "random",
  Oldest = "oldest",
}

/**
 * Amount of detail to render in the response
 */
export enum SearchSFXViewEnum {
  Minimal = "minimal",
  Full = "full",
}

export class SearchSFXRequest extends SpeakeasyBase {
  /**
   * Show sound effects added on the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=added_date;dateTimeFormat=YYYY-MM-DD",
  })
  addedDate?: Date;

  /**
   * Show sound effects added before the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=added_date_end;dateTimeFormat=YYYY-MM-DD",
  })
  addedDateEnd?: Date;

  /**
   * Show sound effects added on or after the specified date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=added_date_start;dateTimeFormat=YYYY-MM-DD",
  })
  addedDateStart?: Date;

  /**
   * Show sound effects with the specified duration in seconds
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=duration",
  })
  duration?: number;

  /**
   * Show sound effects with the specified duration or longer in seconds
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=duration_from",
  })
  durationFrom?: number;

  /**
   * Show sound effects with the specified duration or shorter in seconds
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=duration_to",
  })
  durationTo?: number;

  /**
   * Set query and result language (uses Accept-Language header if not set)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: shared.LanguageEnum;

  /**
   * Page number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * One or more search terms separated by spaces
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;

  /**
   * Enable or disable safe search
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=safe" })
  safe?: boolean;

  /**
   * Sort by
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: SearchSFXSortEnum;

  /**
   * Amount of detail to render in the response
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=view" })
  view?: SearchSFXViewEnum;
}

export class SearchSFXResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  sfxSearchResults?: shared.SFXSearchResults;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
