"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import hovercard as shared_hovercard
from ..shared import validation_error as shared_validation_error
from enum import Enum
from typing import Optional

class UsersGetContextForUserSubjectTypeEnum(str, Enum):
    r"""Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`."""
    ORGANIZATION = 'organization'
    REPOSITORY = 'repository'
    ISSUE = 'issue'
    PULL_REQUEST = 'pull_request'


@dataclasses.dataclass
class UsersGetContextForUserRequest:
    
    username: str = dataclasses.field(metadata={'path_param': { 'field_name': 'username', 'style': 'simple', 'explode': False }})
    r"""The handle for the GitHub user account."""  
    subject_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subject_id', 'style': 'form', 'explode': True }})
    r"""Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`."""  
    subject_type: Optional[UsersGetContextForUserSubjectTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'subject_type', 'style': 'form', 'explode': True }})
    r"""Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`."""  
    

@dataclasses.dataclass
class UsersGetContextForUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Resource not found"""  
    hovercard: Optional[shared_hovercard.Hovercard] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed"""  
    