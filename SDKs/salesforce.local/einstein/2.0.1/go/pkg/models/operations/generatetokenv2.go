// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GenerateTokenV2RequestBodyGrantTypeEnum - specify the authentication method desired
type GenerateTokenV2RequestBodyGrantTypeEnum string

const (
	GenerateTokenV2RequestBodyGrantTypeEnumUrnIetfParamsOauthGrantTypeJwtBearer GenerateTokenV2RequestBodyGrantTypeEnum = "urn:ietf:params:oauth:grant-type:jwt-bearer"
	GenerateTokenV2RequestBodyGrantTypeEnumRefreshToken                         GenerateTokenV2RequestBodyGrantTypeEnum = "refresh_token"
)

func (e *GenerateTokenV2RequestBodyGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "urn:ietf:params:oauth:grant-type:jwt-bearer":
		fallthrough
	case "refresh_token":
		*e = GenerateTokenV2RequestBodyGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GenerateTokenV2RequestBodyGrantTypeEnum: %s", s)
	}
}

type GenerateTokenV2RequestBody struct {
	// encrypted payload to identify yourself
	Assertion *string `form:"name=assertion"`
	// specify the authentication method desired
	GrantType *GenerateTokenV2RequestBodyGrantTypeEnum `form:"name=grant_type"`
	// The refresh token you created previously.
	RefreshToken *string `form:"name=refresh_token"`
	// set to `offline` to generate a refresh token
	Scope *string `form:"name=scope"`
	// Number of seconds until the access token expires. Default is 60 seconds. Maximum value is 30 days
	ValidFor *int `form:"name=valid_for"`
}

type GenerateTokenV2Response struct {
	ContentType string
	// access token result
	GenerateAccessTokenResponse *shared.GenerateAccessTokenResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
