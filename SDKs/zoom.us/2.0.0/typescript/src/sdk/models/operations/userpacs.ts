/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UserPACsRequest extends SpeakeasyBase {
  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class UserPACs200ApplicationXMLPacAccountsDedicatedDialInNumber extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  country?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  number?: string;
}

export class UserPACs200ApplicationXMLPacAccountsGlobalDialInNumbers extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  country?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  number?: string;
}

export class UserPACs200ApplicationXMLPacAccounts extends SpeakeasyBase {
  /**
   * Conference ID.
   */
  @SpeakeasyMetadata()
  conferenceId?: number;

  /**
   * List of dedicated dial-in numbers.
   */
  @SpeakeasyMetadata({
    elemType: UserPACs200ApplicationXMLPacAccountsDedicatedDialInNumber,
  })
  dedicatedDialInNumber?: UserPACs200ApplicationXMLPacAccountsDedicatedDialInNumber[];

  /**
   * List of global dial-in numbers.
   */
  @SpeakeasyMetadata({
    elemType: UserPACs200ApplicationXMLPacAccountsGlobalDialInNumbers,
  })
  globalDialInNumbers?: UserPACs200ApplicationXMLPacAccountsGlobalDialInNumbers[];

  /**
   * Listen-Only password: numeric value - length is less than 6.
   */
  @SpeakeasyMetadata()
  listenOnlyPassword?: string;

  /**
   * Participant password: numeric value - length is less than 6.
   */
  @SpeakeasyMetadata()
  participantPassword?: string;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * PAC account list returned.
 */
export class UserPACs200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: UserPACs200ApplicationXMLPacAccounts })
  pacAccounts?: UserPACs200ApplicationXMLPacAccounts[];
}

export class UserPACs200ApplicationJSONPacAccountsDedicatedDialInNumber extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;
}

export class UserPACs200ApplicationJSONPacAccountsGlobalDialInNumbers extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;
}

export class UserPACs200ApplicationJSONPacAccounts extends SpeakeasyBase {
  /**
   * Conference ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conference_id" })
  conferenceId?: number;

  /**
   * List of dedicated dial-in numbers.
   */
  @SpeakeasyMetadata({
    elemType: UserPACs200ApplicationJSONPacAccountsDedicatedDialInNumber,
  })
  @Expose({ name: "dedicated_dial_in_number" })
  @Type(() => UserPACs200ApplicationJSONPacAccountsDedicatedDialInNumber)
  dedicatedDialInNumber?: UserPACs200ApplicationJSONPacAccountsDedicatedDialInNumber[];

  /**
   * List of global dial-in numbers.
   */
  @SpeakeasyMetadata({
    elemType: UserPACs200ApplicationJSONPacAccountsGlobalDialInNumbers,
  })
  @Expose({ name: "global_dial_in_numbers" })
  @Type(() => UserPACs200ApplicationJSONPacAccountsGlobalDialInNumbers)
  globalDialInNumbers?: UserPACs200ApplicationJSONPacAccountsGlobalDialInNumbers[];

  /**
   * Listen-Only password: numeric value - length is less than 6.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listen_only_password" })
  listenOnlyPassword?: string;

  /**
   * Participant password: numeric value - length is less than 6.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participant_password" })
  participantPassword?: string;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * PAC account list returned.
 */
export class UserPACs200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: UserPACs200ApplicationJSONPacAccounts })
  @Expose({ name: "pac_accounts" })
  @Type(() => UserPACs200ApplicationJSONPacAccounts)
  pacAccounts?: UserPACs200ApplicationJSONPacAccounts[];
}

export class UserPACsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * PAC account list returned.
   */
  @SpeakeasyMetadata()
  userPACs200ApplicationJSONObject?: UserPACs200ApplicationJSON;
}
