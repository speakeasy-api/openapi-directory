/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Reviewer } from "./reviewer";
import { ReviewReply } from "./reviewreply";
import { Expose, Type } from "class-transformer";

/**
 * The star rating of the review.
 */
export enum ReviewStarRatingEnum {
  StarRatingUnspecified = "STAR_RATING_UNSPECIFIED",
  One = "ONE",
  Two = "TWO",
  Three = "THREE",
  Four = "FOUR",
  Five = "FIVE",
}

/**
 * Output only. Represents a review for a location.
 */
export class Review extends SpeakeasyBase {
  /**
   * The body of the review as plain text with markups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * The timestamp for when the review was written.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * The resource name. For Review it is of the form `accounts/{account_id}/locations/{location_id}/reviews/{review_id}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The encrypted unique identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewId" })
  reviewId?: string;

  /**
   * Represents the location owner/manager's reply to a review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewReply" })
  @Type(() => ReviewReply)
  reviewReply?: ReviewReply;

  /**
   * Represents the author of the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewer" })
  @Type(() => Reviewer)
  reviewer?: Reviewer;

  /**
   * The star rating of the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "starRating" })
  starRating?: ReviewStarRatingEnum;

  /**
   * The timestamp for when the review was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
