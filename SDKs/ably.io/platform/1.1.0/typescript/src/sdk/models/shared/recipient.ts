/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Defines which push platform is being used.
 */
export enum RecipientTransportTypeEnum {
  Apns = "apns",
  Fcm = "fcm",
  Gcm = "gcm",
}

/**
 * Push recipient details for a device.
 */
export class RecipientOutput extends SpeakeasyBase {
  /**
   * when using APNs, specifies the required device token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceToken" })
  deviceToken?: string;

  /**
   * when using GCM or FCM, specifies the required registration token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationToken" })
  registrationToken?: string;

  /**
   * Defines which push platform is being used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transportType" })
  transportType?: RecipientTransportTypeEnum;
}

/**
 * Push recipient details for a device.
 */
export class Recipient extends SpeakeasyBase {
  /**
   * Client ID of recipient
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Client ID of recipient
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId?: string;

  /**
   * when using APNs, specifies the required device token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceToken" })
  deviceToken?: string;

  /**
   * when using GCM or FCM, specifies the required registration token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrationToken" })
  registrationToken?: string;

  /**
   * Defines which push platform is being used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transportType" })
  transportType?: RecipientTransportTypeEnum;
}
