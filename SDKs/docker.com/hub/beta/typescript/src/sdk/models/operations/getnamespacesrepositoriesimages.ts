/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Orders the results by this property.
 *
 * @remarks
 *
 * Prefixing with `-` sorts by descending order.
 *
 */
export enum GetNamespacesRepositoriesImagesOrderingEnum {
  LastActivity = "last_activity",
  MinusLastActivity = "-last_activity",
  Digest = "digest",
  MinusDigest = "-digest",
}

/**
 * Filters to only show images of this status.
 */
export enum GetNamespacesRepositoriesImagesStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

export class GetNamespacesRepositoriesImagesRequest extends SpeakeasyBase {
  /**
   * Sets the time from which an image must have been pushed or pulled to
   *
   * @remarks
   * be counted as active.
   *
   * Defaults to 1 month before the current time.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=active_from",
  })
  activeFrom?: string;

  /**
   * Filters to only show images with:
   *
   * @remarks
   * - `true`: at least 1 current tag.
   * - `false`: no current tags.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=currently_tagged",
  })
  currentlyTagged?: boolean;

  /**
   * Namespace of the repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=namespace",
  })
  namespace: string;

  /**
   * Orders the results by this property.
   *
   * @remarks
   *
   * Prefixing with `-` sorts by descending order.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ordering",
  })
  ordering?: GetNamespacesRepositoriesImagesOrderingEnum;

  /**
   * Page number to get. Defaults to 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of images to get per page. Defaults to 10. Max of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Name of the repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repository",
  })
  repository: string;

  /**
   * Filters to only show images of this status.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GetNamespacesRepositoriesImagesStatusEnum;
}

export class GetNamespacesRepositoriesImagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized - user does not have read access to the namespace.
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getNamespaceRepositoryImagesResponse?: shared.GetNamespaceRepositoryImagesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
