// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum - Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
type PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum string

const (
	PostTruckDistanceBetweenPairsOutputFormatCriteriaEnumShortest PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum = "shortest"
	PostTruckDistanceBetweenPairsOutputFormatCriteriaEnumFastest  PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum = "fastest"
)

func (e PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum) ToPointer() *PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum {
	return &e
}

func (e *PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shortest":
		fallthrough
	case "fastest":
		*e = PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum: %v", v)
	}
}

// PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum - distance unit of measure (e.g., km, mi). Default is km.
type PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum string

const (
	PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnumKm PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum = "km"
	PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnumMi PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum = "mi"
)

func (e PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum) ToPointer() *PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum {
	return &e
}

func (e *PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "km":
		fallthrough
	case "mi":
		*e = PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum: %v", v)
	}
}

// PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum - Format of representation
type PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum string

const (
	PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnumJSON PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum = "json"
	PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnumHTML PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum = "html"
)

func (e PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum) ToPointer() *PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum {
	return &e
}

func (e *PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "html":
		*e = PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum: %v", v)
	}
}

// PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum int64

const (
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 4326
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 4269
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumThreeThousandAndFive                  PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 3005
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 26907
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 26908
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 26909
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 26910
	PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum = 26911
)

func (e PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum) ToPointer() *PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum {
	return &e
}

func (e *PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 4326:
		fallthrough
	case 4269:
		fallthrough
	case 3005:
		fallthrough
	case 26907:
		fallthrough
	case 26908:
		fallthrough
	case 26909:
		fallthrough
	case 26910:
		fallthrough
	case 26911:
		*e = PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum: %v", v)
	}
}

type PostTruckDistanceBetweenPairsOutputFormatRequest struct {
	// If true, route starts and ends on same side of road as start and end points.Default is false.
	CorrectSide *bool `queryParam:"style=form,explode=true,name=correctSide"`
	// Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
	Criteria *PostTruckDistanceBetweenPairsOutputFormatCriteriaEnum `queryParam:"style=form,explode=true,name=criteria"`
	// departure date and time in internet timestamp notation as defined in RFC 3339, section 5.6 (e.g., 2019-02-28T11:36:00-08:00);<br> Ignored if time-dependency modules are disabled
	Departure *time.Time `queryParam:"style=form,explode=true,name=departure"`
	// A comma-separated list of time-related modules to disable (e.g., sc,tf,ev,td).<br><br>Module names include:<br> sc – ferry schedules; disabled by default; disabled by default and only suitable for demos<br>tf – historic traffic congestion; disabled by default and only suitable for demos<br>ev – road events; disabled by default and only suitable for demos<br>td – time-dependency; disabling this disables sc, tf, and ev modules<br>tr – turn restrictions; if td is disabled, time-dependent turn restrictions are ignored<br>tc - turn costs (e.g., left turns take longer than right turns)
	Disable *string `queryParam:"style=form,explode=true,name=disable"`
	// distance unit of measure (e.g., km, mi). Default is km.
	DistanceUnit *PostTruckDistanceBetweenPairsOutputFormatDistanceUnitEnum `queryParam:"style=form,explode=true,name=distanceUnit"`
	// A comma-separated list of origin points.  See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#fromPoints target='_blank'>fromPoints</a>
	FromPoints string `queryParam:"style=form,explode=true,name=fromPoints"`
	// The maximum number of pairs to return for each toPoint.  Pairs are ordered by distance/time from fromPoint. For example, given 1 fromPoint, and 10 toPoints, and maxPairs=1 , return the nearest toPoint to the fromPoint. Given 3 fromPoints and 10 toPoints, maxPairs=3 means return the 3 nearest toPoints to each fromPoint.
	MaxPairs *int64 `queryParam:"style=form,explode=true,name=maxPairs"`
	// Format of representation
	OutputFormat PostTruckDistanceBetweenPairsOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *PostTruckDistanceBetweenPairsOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
	RouteDescription *string `queryParam:"style=form,explode=true,name=routeDescription"`
	// A comma-separated list of destination points. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#toPoints target='_blank'>toPoints</a>
	ToPoints string `queryParam:"style=form,explode=true,name=toPoints"`
}

type PostTruckDistanceBetweenPairsOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
