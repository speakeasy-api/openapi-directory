// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ImageStatusEnum - Status of the image
type ImageStatusEnum string

const (
	ImageStatusEnumActive   ImageStatusEnum = "active"
	ImageStatusEnumInactive ImageStatusEnum = "inactive"
)

func (e *ImageStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = ImageStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageStatusEnum: %s", s)
	}
}

type Image struct {
	// CPU architecture
	Architecture *string `json:"architecture,omitempty"`
	// image digest
	Digest *string `json:"digest,omitempty"`
	// CPU features
	Features *string `json:"features,omitempty"`
	// datetime of last pull
	LastPulled *string `json:"last_pulled,omitempty"`
	// datetime of last push
	LastPushed *string `json:"last_pushed,omitempty"`
	Layers     []Layer `json:"layers,omitempty"`
	// operating system
	Os *string `json:"os,omitempty"`
	// OS features
	OsFeatures *string `json:"os_features,omitempty"`
	// OS version
	OsVersion *string `json:"os_version,omitempty"`
	// size of the image
	Size *int64 `json:"size,omitempty"`
	// Status of the image
	Status *ImageStatusEnum `json:"status,omitempty"`
	// CPU variant
	Variant *string `json:"variant,omitempty"`
}
