<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Partner - A single partner in Display & Video 360 (DV360).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Partner
{
    /**
     * Ad server related settings of a partner.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartnerAdServerConfig $adServerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('adServerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartnerAdServerConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartnerAdServerConfig $adServerConfig = null;
    
    /**
     * Settings that control how partner related data may be accessed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartnerDataAccessConfig $dataAccessConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataAccessConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartnerDataAccessConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartnerDataAccessConfig $dataAccessConfig = null;
    
    /**
     * The display name of the partner. Must be UTF-8 encoded with a maximum size of 240 bytes.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Output only. The status of the partner.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartnerEntityStatusEnum $entityStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PartnerEntityStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartnerEntityStatusEnum $entityStatus = null;
    
    /**
     * Settings that control which exchanges are enabled for a partner.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExchangeConfig $exchangeConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('exchangeConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExchangeConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExchangeConfig $exchangeConfig = null;
    
    /**
     * General settings of a partner.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartnerGeneralConfig $generalConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('generalConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartnerGeneralConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartnerGeneralConfig $generalConfig = null;
    
    /**
     * Output only. The resource name of the partner.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. The unique ID of the partner. Assigned by the system.
     * 
     * @var ?string $partnerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('partnerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $partnerId = null;
    
    /**
     * Output only. The timestamp when the partner was last updated. Assigned by the system.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
	public function __construct()
	{
		$this->adServerConfig = null;
		$this->dataAccessConfig = null;
		$this->displayName = null;
		$this->entityStatus = null;
		$this->exchangeConfig = null;
		$this->generalConfig = null;
		$this->name = null;
		$this->partnerId = null;
		$this->updateTime = null;
	}
}
