/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;

public class Aggregated {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Aggregated(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Retrieve statistics about a subset of conversions for a timeframe with conversions data
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AggregatedGetConversionsSummaryResponse aggregatedGetConversionsSummary(org.openapis.openapi.models.operations.AggregatedGetConversionsSummaryRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/aggregated/summary/conversions");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AggregatedGetConversionsSummaryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AggregatedGetConversionsSummaryResponse res = new org.openapis.openapi.models.operations.AggregatedGetConversionsSummaryResponse(contentType, httpRes.statusCode()) {{
            apiCoreDtoAggregatedAggregatedSummaryResult = null;
            apiCoreDtoAggregatedAggregatedSummaryResult = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult.class);
                res.apiCoreDtoAggregatedAggregatedSummaryResult = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "text/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult.class);
                res.apiCoreDtoAggregatedAggregatedSummaryResult = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * Retrieve statistics about a subset of datapoints for a timeframe with datapoints data
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AggregatedGetDatapointsSummaryResponse aggregatedGetDatapointsSummary(org.openapis.openapi.models.operations.AggregatedGetDatapointsSummaryRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/aggregated/summary/datapoints");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AggregatedGetDatapointsSummaryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AggregatedGetDatapointsSummaryResponse res = new org.openapis.openapi.models.operations.AggregatedGetDatapointsSummaryResponse(contentType, httpRes.statusCode()) {{
            apiCoreDtoAggregatedAggregatedSummaryResult = null;
            apiCoreDtoAggregatedAggregatedSummaryResult = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult.class);
                res.apiCoreDtoAggregatedAggregatedSummaryResult = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "text/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult.class);
                res.apiCoreDtoAggregatedAggregatedSummaryResult = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * Retrieve statistics about a subset of groups for a timeframe with groups data
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AggregatedGetGroupsSummaryResponse aggregatedGetGroupsSummary(org.openapis.openapi.models.operations.AggregatedGetGroupsSummaryRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/aggregated/summary/groups");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AggregatedGetGroupsSummaryRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AggregatedGetGroupsSummaryResponse res = new org.openapis.openapi.models.operations.AggregatedGetGroupsSummaryResponse(contentType, httpRes.statusCode()) {{
            apiCoreDtoAggregatedAggregatedSummaryResult = null;
            apiCoreDtoAggregatedAggregatedSummaryResult = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult.class);
                res.apiCoreDtoAggregatedAggregatedSummaryResult = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "text/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedSummaryResult.class);
                res.apiCoreDtoAggregatedAggregatedSummaryResult = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * Retrieve statistics about this customer for a timeframe grouped by some temporal entity (day/week/month)
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AggregatedGetStatisticsListResponse aggregatedGetStatisticsList(org.openapis.openapi.models.operations.AggregatedGetStatisticsListRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/aggregated/list");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AggregatedGetStatisticsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AggregatedGetStatisticsListResponse res = new org.openapis.openapi.models.operations.AggregatedGetStatisticsListResponse(contentType, httpRes.statusCode()) {{
            apiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult = null;
            apiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult.class);
                res.apiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "text/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult.class);
                res.apiCoreResponsesEntitiesResponseApiCoreDtoAggregatedAggregatedResult = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * Retrieve statistics about this customer for a timeframe
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AggregatedGetStatisticsSingleResponse aggregatedGetStatisticsSingle(org.openapis.openapi.models.operations.AggregatedGetStatisticsSingleRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/aggregated");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AggregatedGetStatisticsSingleRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AggregatedGetStatisticsSingleResponse res = new org.openapis.openapi.models.operations.AggregatedGetStatisticsSingleResponse(contentType, httpRes.statusCode()) {{
            apiCoreDtoAggregatedAggregatedResult = null;
            apiCoreDtoAggregatedAggregatedResult = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedResult.class);
                res.apiCoreDtoAggregatedAggregatedResult = out;
            }
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "text/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedResult out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ApiCoreDtoAggregatedAggregatedResult.class);
                res.apiCoreDtoAggregatedAggregatedResult = out;
            }
        }
        else if (httpRes.statusCode() == 401 || httpRes.statusCode() == 500) {
        }

        return res;
    }
}