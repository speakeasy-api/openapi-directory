/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData - Agent Assist Smart Compose suggestion data.
 */
public class GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData {
    /**
     * The system's confidence score that this suggestion is a good match for this conversation, ranging from 0.0 (completely uncertain) to 1.0 (completely certain).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidenceScore")
    public Double confidenceScore;
    public GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData withConfidenceScore(Double confidenceScore) {
        this.confidenceScore = confidenceScore;
        return this;
    }
    
    /**
     * Map that contains metadata about the Smart Compose suggestion and the document from which it originates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;
    public GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The name of the answer record. Format: projects/{project}/locations/{location}/answerRecords/{answer_record}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryRecord")
    public String queryRecord;
    public GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData withQueryRecord(String queryRecord) {
        this.queryRecord = queryRecord;
        return this;
    }
    
    /**
     * The content of the suggestion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestion")
    public String suggestion;
    public GoogleCloudContactcenterinsightsV1SmartComposeSuggestionData withSuggestion(String suggestion) {
        this.suggestion = suggestion;
        return this;
    }
    
}
