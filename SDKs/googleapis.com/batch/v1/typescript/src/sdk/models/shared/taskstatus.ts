/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatusEvent } from "./statusevent";
import { Expose, Type } from "class-transformer";

/**
 * Task state
 */
export enum TaskStatusStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Pending = "PENDING",
  Assigned = "ASSIGNED",
  Running = "RUNNING",
  Failed = "FAILED",
  Succeeded = "SUCCEEDED",
}

/**
 * Status of a task
 */
export class TaskStatus extends SpeakeasyBase {
  /**
   * Task state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: TaskStatusStateEnum;

  /**
   * Detailed info about why the state is reached.
   */
  @SpeakeasyMetadata({ elemType: StatusEvent })
  @Expose({ name: "statusEvents" })
  @Type(() => StatusEvent)
  statusEvents?: StatusEvent[];
}
