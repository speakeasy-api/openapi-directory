"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class Delete14Request:
    
    task_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'taskId', 'style': 'simple', 'explode': False }})
    r"""task's internal identifier"""  
    force_jobs_removal: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'forceJobsRemoval', 'style': 'form', 'explode': True }})
    r"""force jobs removal (ie. started or ready)"""  
    remove_external_projects: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'removeExternalProjects', 'style': 'form', 'explode': True }})
    r"""remove external projects (ie. from CAT Tool)"""  
    remove_files_from_disc: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'removeFilesFromDisc', 'style': 'form', 'explode': True }})
    r"""remove files from disc"""  
    

@dataclasses.dataclass
class Delete14Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    