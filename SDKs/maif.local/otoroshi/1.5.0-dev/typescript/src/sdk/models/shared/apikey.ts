/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.
 */
export class ApiKey extends SpeakeasyBase {
  /**
   * The group/service ids (prefixed by group_ or service_ on which the key is authorized
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorizedEntities" })
  authorizedEntities: string[];

  /**
   * The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId: string;

  /**
   * The name of the api key, for humans ;-)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientName" })
  clientName: string;

  /**
   * The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret: string;

  /**
   * Authorized number of calls per day
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dailyQuota" })
  dailyQuota?: number;

  /**
   * Whether or not the key is enabled. If disabled, resources won't be available to calls using this key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * Bunch of metadata for the key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, string>;

  /**
   * Authorized number of calls per month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "monthlyQuota" })
  monthlyQuota?: number;

  /**
   * Authorized number of calls per second, measured on 10 seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "throttlingQuota" })
  throttlingQuota?: number;
}
