"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import estimateitempricevo as shared_estimateitempricevo
from ..shared import propertypaandattvo as shared_propertypaandattvo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EstimateItemDetailsVO:
    r"""Java type: com.noosh.nooshapi.vo.EstimateItemDetailsVO"""
    
    comments: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comments'), 'exclude': lambda f: f is None }})  
    custom_fields: Optional[list[shared_propertypaandattvo.PropertyPaAndAttVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_fields'), 'exclude': lambda f: f is None }})  
    estimate_item_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('estimate_item_id'), 'exclude': lambda f: f is None }})  
    option_prices: Optional[list[shared_estimateitempricevo.EstimateItemPriceVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('option_prices'), 'exclude': lambda f: f is None }})  
    pc_job_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pc_job_id'), 'exclude': lambda f: f is None }})  
    spec_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_name'), 'exclude': lambda f: f is None }})  
    spec_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_reference'), 'exclude': lambda f: f is None }})  
    spec_reference_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_reference_id'), 'exclude': lambda f: f is None }})  
    