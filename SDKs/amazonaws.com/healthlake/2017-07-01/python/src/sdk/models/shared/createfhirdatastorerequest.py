"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fhirversion_enum as shared_fhirversion_enum
from ..shared import preloaddataconfig as shared_preloaddataconfig
from ..shared import sseconfiguration as shared_sseconfiguration
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateFHIRDatastoreRequest:
    
    datastore_type_version: shared_fhirversion_enum.FHIRVersionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatastoreTypeVersion') }})  
    client_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientToken'), 'exclude': lambda f: f is None }})  
    datastore_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatastoreName'), 'exclude': lambda f: f is None }})  
    preload_data_config: Optional[shared_preloaddataconfig.PreloadDataConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PreloadDataConfig'), 'exclude': lambda f: f is None }})  
    sse_configuration: Optional[shared_sseconfiguration.SseConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SseConfiguration'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    