/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Type - A protocol buffer message type.
 */
public class Type {
    /**
     * The source edition string, only valid when syntax is SYNTAX_EDITIONS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("edition")
    public String edition;
    public Type withEdition(String edition) {
        this.edition = edition;
        return this;
    }
    
    /**
     * The list of fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public Field[] fields;
    public Type withFields(Field[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The fully qualified message name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Type withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The list of types appearing in `oneof` definitions in this type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oneofs")
    public String[] oneofs;
    public Type withOneofs(String[] oneofs) {
        this.oneofs = oneofs;
        return this;
    }
    
    /**
     * The protocol buffer options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public Option[] options;
    public Type withOptions(Option[] options) {
        this.options = options;
        return this;
    }
    
    /**
     * `SourceContext` represents information about the source of a protobuf element, like the file in which it is defined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceContext")
    public SourceContext sourceContext;
    public Type withSourceContext(SourceContext sourceContext) {
        this.sourceContext = sourceContext;
        return this;
    }
    
    /**
     * The source syntax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("syntax")
    public TypeSyntaxEnum syntax;
    public Type withSyntax(TypeSyntaxEnum syntax) {
        this.syntax = syntax;
        return this;
    }
    
}
