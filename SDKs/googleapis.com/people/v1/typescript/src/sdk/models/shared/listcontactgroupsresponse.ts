/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContactGroup } from "./contactgroup";
import { Expose, Type } from "class-transformer";

/**
 * The response to a list contact groups request.
 */
export class ListContactGroupsResponse extends SpeakeasyBase {
  /**
   * The list of contact groups. Members of the contact groups are not populated.
   */
  @SpeakeasyMetadata({ elemType: ContactGroup })
  @Expose({ name: "contactGroups" })
  @Type(() => ContactGroup)
  contactGroups?: ContactGroup[];

  /**
   * The token that can be used to retrieve the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The token that can be used to retrieve changes since the last request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextSyncToken" })
  nextSyncToken?: string;

  /**
   * The total number of items in the list without pagination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalItems" })
  totalItems?: number;
}
