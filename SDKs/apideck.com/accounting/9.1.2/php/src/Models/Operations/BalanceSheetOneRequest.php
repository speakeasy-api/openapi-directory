<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class BalanceSheetOneRequest
{
    /**
     * Apply filters
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BalanceSheetFilter $filter
     */
	#[SpeakeasyMetadata('queryParam:style=deepObject,explode=true,name=filter')]
    public ?\OpenAPI\OpenAPI\Models\Shared\BalanceSheetFilter $filter = null;
    
    /**
     * Optional unmapped key/values that will be passed through to downstream as query parameters
     * 
     * @var ?array<string, mixed> $passThrough
     */
	#[SpeakeasyMetadata('queryParam:style=deepObject,explode=true,name=pass_through')]
    public ?array $passThrough = null;
    
    /**
     * Include raw response. Mostly used for debugging purposes
     * 
     * @var ?bool $raw
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=raw')]
    public ?bool $raw = null;
    
    /**
     * The ID of your Unify application
     * 
     * @var string $xApideckAppId
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=x-apideck-app-id')]
    public string $xApideckAppId;
    
    /**
     * ID of the consumer which you want to get or push data from
     * 
     * @var string $xApideckConsumerId
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=x-apideck-consumer-id')]
    public string $xApideckConsumerId;
    
    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     * 
     * @var ?string $xApideckServiceId
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=x-apideck-service-id')]
    public ?string $xApideckServiceId = null;
    
	public function __construct()
	{
		$this->filter = null;
		$this->passThrough = null;
		$this->raw = null;
		$this->xApideckAppId = "";
		$this->xApideckConsumerId = "";
		$this->xApideckServiceId = null;
	}
}
