// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeArchiveXAmzTargetEnum
type DescribeArchiveXAmzTargetEnum string

const (
	DescribeArchiveXAmzTargetEnumAwsEventsDescribeArchive DescribeArchiveXAmzTargetEnum = "AWSEvents.DescribeArchive"
)

func (e *DescribeArchiveXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSEvents.DescribeArchive":
		*e = DescribeArchiveXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeArchiveXAmzTargetEnum: %s", s)
	}
}

type DescribeArchiveRequest struct {
	DescribeArchiveRequest shared.DescribeArchiveRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DescribeArchiveXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeArchiveResponse struct {
	ContentType string
	// Success
	DescribeArchiveResponse *shared.DescribeArchiveResponse
	// InternalException
	InternalException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
