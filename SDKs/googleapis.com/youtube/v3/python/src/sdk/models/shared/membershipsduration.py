"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MembershipsDuration:
    
    member_since: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberSince'), 'exclude': lambda f: f is None }})
    r"""The date and time when the user became a continuous member across all levels."""  
    member_total_duration_months: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memberTotalDurationMonths'), 'exclude': lambda f: f is None }})
    r"""The cumulative time the user has been a member across all levels in complete months (the time is rounded down to the nearest integer)."""  
    