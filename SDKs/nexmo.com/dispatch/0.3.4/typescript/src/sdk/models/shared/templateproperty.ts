/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class TemplatePropertyParameters extends SpeakeasyBase {
  /**
   * The parameters are an array. The first value being {{1}} in the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "default" })
  default?: string;
}

export class TemplateProperty extends SpeakeasyBase {
  /**
   * The name of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: TemplatePropertyParameters })
  @Expose({ name: "parameters" })
  @Type(() => TemplatePropertyParameters)
  parameters?: TemplatePropertyParameters[];
}
