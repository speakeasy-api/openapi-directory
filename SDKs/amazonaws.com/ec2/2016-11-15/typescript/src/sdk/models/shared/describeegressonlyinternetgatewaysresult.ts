/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The current state of the attachment. For an internet gateway, the state is <code>available</code> when attached to a VPC; otherwise, this value is not returned.
 */
export enum DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysAttachmentsStateEnum {
  Attaching = "attaching",
  Attached = "attached",
  Detaching = "detaching",
  Detached = "detached",
}

/**
 * Describes the attachment of a VPC to an internet gateway or an egress-only internet gateway.
 */
export class DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysAttachments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  state?: DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysAttachmentsStateEnum;

  @SpeakeasyMetadata()
  vpcId?: string;
}

/**
 * Describes a tag.
 */
export class DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes an egress-only internet gateway.
 */
export class DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGateways extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysAttachments,
  })
  attachments?: DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysAttachments[];

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysTags,
  })
  tags?: DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGatewaysTags[];
}

/**
 * Success
 */
export class DescribeEgressOnlyInternetGatewaysResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGateways,
  })
  egressOnlyInternetGateways?: DescribeEgressOnlyInternetGatewaysResultEgressOnlyInternetGateways[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
