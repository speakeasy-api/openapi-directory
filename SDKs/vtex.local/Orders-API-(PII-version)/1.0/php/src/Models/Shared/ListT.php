<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ListT
{
    /**
     * Shipping estimate date.
     * 
     * @var string $shippingEstimatedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingEstimatedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shippingEstimatedDate;
    
    /**
     * Maximum shipping estimate date.
     * 
     * @var string $shippingEstimatedDateMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingEstimatedDateMax')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shippingEstimatedDateMax;
    
    /**
     * Minimum shipping estimate date.
     * 
     * @var string $shippingEstimatedDateMin
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingEstimatedDateMin')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shippingEstimatedDateMin;
    
    /**
     * Three letter code indicating the marketplace in which the order was placed.
     * 
     * @var string $affiliateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('affiliateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $affiliateId;
    
    /**
     * Authorized date.
     * 
     * @var string $authorizedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorizedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $authorizedDate;
    
    /**
     * Call center operator name.
     * 
     * @var string $callCenterOperatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('callCenterOperatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $callCenterOperatorName;
    
    /**
     * Client name.
     * 
     * @var string $clientName
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientName;
    
    /**
     * Creation date.
     * 
     * @var string $creationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $creationDate;
    
    /**
     * Currency code.
     * 
     * @var string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currencyCode;
    
    /**
     * Order items.
     * 
     * @var string $items
     */
	#[\JMS\Serializer\Annotation\SerializedName('items')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $items;
    
    /**
     * Last unread message.
     * 
     * @var string $lastMessageUnread
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastMessageUnread')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastMessageUnread;
    
    /**
     * List ID.
     * 
     * @var string $listId
     */
	#[\JMS\Serializer\Annotation\SerializedName('listId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $listId;
    
    /**
     * List type.
     * 
     * @var string $listType
     */
	#[\JMS\Serializer\Annotation\SerializedName('listType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $listType;
    
    /**
     * ID of the order in the marketplace.
     * 
     * @var string $marketPlaceOrderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('marketPlaceOrderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $marketPlaceOrderId;
    
    /**
     * Order ID.
     * 
     * @var string $orderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $orderId;
    
    /**
     * Indicates whether order is complete.
     * 
     * @var bool $orderIsComplete
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderIsComplete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $orderIsComplete;
    
    /**
     * Indicates whether order is marketplace, fulfillment or chain.
     * 
     * @var string $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $origin;
    
    /**
     * Order payment names.
     * 
     * @var string $paymentNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentNames')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $paymentNames;
    
    /**
     * Sales channel.
     * 
     * @var string $salesChannel
     */
	#[\JMS\Serializer\Annotation\SerializedName('salesChannel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $salesChannel;
    
    /**
     * Order sequence number.
     * 
     * @var string $sequence
     */
	#[\JMS\Serializer\Annotation\SerializedName('sequence')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sequence;
    
    /**
     * Order status.
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * Order status description.
     * 
     * @var string $statusDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('statusDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $statusDescription;
    
    /**
     * Total items.
     * 
     * @var int $totalItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalItems')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $totalItems;
    
    /**
     * Order total value in cents.
     * 
     * @var int $totalValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $totalValue;
    
    /**
     * Indicates whether order workflow is in error state.
     * 
     * @var bool $workflowInErrorState
     */
	#[\JMS\Serializer\Annotation\SerializedName('workflowInErrorState')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $workflowInErrorState;
    
    /**
     * Indicates whether workflow is in retry.
     * 
     * @var bool $workflowInRetry
     */
	#[\JMS\Serializer\Annotation\SerializedName('workflowInRetry')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $workflowInRetry;
    
	public function __construct()
	{
		$this->shippingEstimatedDate = "";
		$this->shippingEstimatedDateMax = "";
		$this->shippingEstimatedDateMin = "";
		$this->affiliateId = "";
		$this->authorizedDate = "";
		$this->callCenterOperatorName = "";
		$this->clientName = "";
		$this->creationDate = "";
		$this->currencyCode = "";
		$this->items = "";
		$this->lastMessageUnread = "";
		$this->listId = "";
		$this->listType = "";
		$this->marketPlaceOrderId = "";
		$this->orderId = "";
		$this->orderIsComplete = false;
		$this->origin = "";
		$this->paymentNames = "";
		$this->salesChannel = "";
		$this->sequence = "";
		$this->status = "";
		$this->statusDescription = "";
		$this->totalItems = 0;
		$this->totalValue = 0;
		$this->workflowInErrorState = false;
		$this->workflowInRetry = false;
	}
}
