/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReplicationCycleInput - ReplicationCycle contains information about the current replication cycle status.
 */
public class ReplicationCycleInput {
    /**
     * The cycle's ordinal number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cycleNumber")
    public Integer cycleNumber;

    public ReplicationCycleInput withCycleNumber(Integer cycleNumber) {
        this.cycleNumber = cycleNumber;
        return this;
    }
    
    /**
     * The time the replication cycle has ended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public ReplicationCycleInput withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;

    public ReplicationCycleInput withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * The identifier of the ReplicationCycle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ReplicationCycleInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The current progress in percentage of this cycle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progress")
    public Integer progress;

    public ReplicationCycleInput withProgress(Integer progress) {
        this.progress = progress;
        return this;
    }
    
    /**
     * The current progress in percentage of this cycle. Was replaced by 'steps' field, which breaks down the cycle progression more accurately.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progressPercent")
    public Integer progressPercent;

    public ReplicationCycleInput withProgressPercent(Integer progressPercent) {
        this.progressPercent = progressPercent;
        return this;
    }
    
    /**
     * The time the replication cycle has started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public ReplicationCycleInput withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * State of the ReplicationCycle.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ReplicationCycleStateEnum state;

    public ReplicationCycleInput withState(ReplicationCycleStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The cycle's steps list representing its progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("steps")
    public CycleStep[] steps;

    public ReplicationCycleInput withSteps(CycleStep[] steps) {
        this.steps = steps;
        return this;
    }
    
    /**
     * The accumulated duration the replication cycle was paused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPauseDuration")
    public String totalPauseDuration;

    public ReplicationCycleInput withTotalPauseDuration(String totalPauseDuration) {
        this.totalPauseDuration = totalPauseDuration;
        return this;
    }
    
    public ReplicationCycleInput(){}
}
