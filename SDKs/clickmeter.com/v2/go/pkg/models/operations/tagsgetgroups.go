// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type TagsGetGroupsPathParams struct {
	// Id of the tag.
	TagID int64 `pathParam:"style=simple,explode=false,name=tagId"`
}

// TagsGetGroupsStatusEnum - Status of the datapoint
type TagsGetGroupsStatusEnum string

const (
	TagsGetGroupsStatusEnumDeleted TagsGetGroupsStatusEnum = "deleted"
	TagsGetGroupsStatusEnumActive  TagsGetGroupsStatusEnum = "active"
)

func (e *TagsGetGroupsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleted":
		fallthrough
	case "active":
		*e = TagsGetGroupsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagsGetGroupsStatusEnum: %s", s)
	}
}

type TagsGetGroupsQueryParams struct {
	// Exclude groups created before this date (YYYYMMDD)
	CreatedAfter *string `queryParam:"style=form,explode=true,name=createdAfter"`
	// Exclude groups created after this date (YYYYMMDD)
	CreatedBefore *string `queryParam:"style=form,explode=true,name=createdBefore"`
	// Maximum elements to retrieve. Default to 20 if not specified.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Where to start when retrieving elements. Default is 0 if not specified.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Status of the datapoint
	Status *TagsGetGroupsStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
}

type TagsGetGroupsRequest struct {
	PathParams  TagsGetGroupsPathParams
	QueryParams TagsGetGroupsQueryParams
}

type TagsGetGroupsResponse struct {
	APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64 *shared.APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
