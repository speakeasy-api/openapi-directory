/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.
 */
export enum ActionsUpdateOrgVariableRequestBodyVisibilityEnum {
  All = "all",
  Private = "private",
  Selected = "selected",
}

export class ActionsUpdateOrgVariableRequestBody extends SpeakeasyBase {
  /**
   * The name of the variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * An array of repository ids that can access the organization variable. You can only provide a list of repository ids when the `visibility` is set to `selected`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selected_repository_ids" })
  selectedRepositoryIds?: number[];

  /**
   * The value of the variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;

  /**
   * The type of repositories in the organization that can access the variable. `selected` means only the repositories specified by `selected_repository_ids` can access the variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: ActionsUpdateOrgVariableRequestBodyVisibilityEnum;
}

export class ActionsUpdateOrgVariableRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsUpdateOrgVariableRequestBody;

  /**
   * The name of the variable.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=name",
  })
  name: string;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;
}

export class ActionsUpdateOrgVariableResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
