"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import response_format_enum as shared_response_format_enum
from ..shared import size_enum as shared_size_enum
from typing import Optional


@dataclasses.dataclass
class CreateImageEditRequestImage:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    image: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'image' }})  
    

@dataclasses.dataclass
class CreateImageEditRequestMask:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    mask: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'mask' }})  
    

@dataclasses.dataclass
class CreateImageEditRequest:
    
    image: CreateImageEditRequestImage = dataclasses.field(metadata={'multipart_form': { 'file': True }})
    r"""The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask."""  
    prompt: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'prompt' }})
    r"""A text description of the desired image(s). The maximum length is 1000 characters."""  
    mask: Optional[CreateImageEditRequestMask] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})
    r"""An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as `image`."""  
    n: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'n' }})
    r"""The number of images to generate. Must be between 1 and 10."""  
    response_format: Optional[shared_response_format_enum.ResponseFormatEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'response_format' }})
    r"""The format in which the generated images are returned. Must be one of `url` or `b64_json`."""  
    size: Optional[shared_size_enum.SizeEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'size' }})
    r"""The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`."""  
    user: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user' }})
    r"""A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids)."""  
    