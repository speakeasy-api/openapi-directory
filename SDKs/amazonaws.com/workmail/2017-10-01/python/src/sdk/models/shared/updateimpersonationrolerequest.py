"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import impersonationroletype_enum as shared_impersonationroletype_enum
from ..shared import impersonationrule as shared_impersonationrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateImpersonationRoleRequest:
    
    impersonation_role_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImpersonationRoleId') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    organization_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrganizationId') }})  
    rules: list[shared_impersonationrule.ImpersonationRule] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rules') }})  
    type: shared_impersonationroletype_enum.ImpersonationRoleTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    