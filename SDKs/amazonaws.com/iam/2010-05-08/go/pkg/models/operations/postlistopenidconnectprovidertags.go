// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListOpenIDConnectProviderTagsActionEnum
type POSTListOpenIDConnectProviderTagsActionEnum string

const (
	POSTListOpenIDConnectProviderTagsActionEnumListOpenIDConnectProviderTags POSTListOpenIDConnectProviderTagsActionEnum = "ListOpenIDConnectProviderTags"
)

func (e POSTListOpenIDConnectProviderTagsActionEnum) ToPointer() *POSTListOpenIDConnectProviderTagsActionEnum {
	return &e
}

func (e *POSTListOpenIDConnectProviderTagsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListOpenIDConnectProviderTags":
		*e = POSTListOpenIDConnectProviderTagsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListOpenIDConnectProviderTagsActionEnum: %v", v)
	}
}

// POSTListOpenIDConnectProviderTagsVersionEnum
type POSTListOpenIDConnectProviderTagsVersionEnum string

const (
	POSTListOpenIDConnectProviderTagsVersionEnumTwoThousandAndTen0508 POSTListOpenIDConnectProviderTagsVersionEnum = "2010-05-08"
)

func (e POSTListOpenIDConnectProviderTagsVersionEnum) ToPointer() *POSTListOpenIDConnectProviderTagsVersionEnum {
	return &e
}

func (e *POSTListOpenIDConnectProviderTagsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTListOpenIDConnectProviderTagsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListOpenIDConnectProviderTagsVersionEnum: %v", v)
	}
}

type POSTListOpenIDConnectProviderTagsRequest struct {
	Action            POSTListOpenIDConnectProviderTagsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                       `request:"mediaType=text/xml"`
	Version           POSTListOpenIDConnectProviderTagsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListOpenIDConnectProviderTagsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
