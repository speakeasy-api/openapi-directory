"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListZRLocationsSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListZRLocationsRequest:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    parent_location_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'parent_location_id', 'style': 'form', 'explode': True }})
    r"""A unique identifier of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1. Use this parameter to filter the response by a specific location hierarchy level."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Use this field to filter the response by the type of location. The value can be one of the following:
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """  
    
class ListZRLocations200ApplicationXMLLocationsTypeEnum(str, Enum):
    r"""The type of location. The value can be one of the following:
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """
    COUNTRY = 'country'
    STATES = 'states'
    CITY = 'city'
    CAMPUS = 'campus'
    BUILDING = 'building'
    FLOOR = 'floor'


@dataclasses.dataclass
class ListZRLocations200ApplicationXMLLocations:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the location."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the location."""  
    parent_location_id: Optional[str] = dataclasses.field(default=None)
    r"""ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>
    The value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account.
    """  
    type: Optional[ListZRLocations200ApplicationXMLLocationsTypeEnum] = dataclasses.field(default=None)
    r"""The type of location. The value can be one of the following:
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """  
    

@dataclasses.dataclass
class ListZRLocations200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Zoom Room locations listed successfully.
    """
    
    locations: Optional[list[ListZRLocations200ApplicationXMLLocations]] = dataclasses.field(default=None)  
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""The number of records returned within a single API call."""  
    
class ListZRLocations200ApplicationJSONLocationsTypeEnum(str, Enum):
    r"""The type of location. The value can be one of the following:
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """
    COUNTRY = 'country'
    STATES = 'states'
    CITY = 'city'
    CAMPUS = 'campus'
    BUILDING = 'building'
    FLOOR = 'floor'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListZRLocations200ApplicationJSONLocations:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the location."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the location."""  
    parent_location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_location_id'), 'exclude': lambda f: f is None }})
    r"""ID (Unique Identifier) of the parent location. For instance, if a Zoom Room is located in Floor 1 of Building A, the location of Building A will be the parent location of Floor 1 and the parent_location_id of Floor 1 will be the ID of Building A.<br>
    The value of parent_location_id of the top-level location (country) is the Account ID of the Zoom account.
    """  
    type: Optional[ListZRLocations200ApplicationJSONLocationsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of location. The value can be one of the following:
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListZRLocations200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Zoom Room locations listed successfully.
    """
    
    locations: Optional[list[ListZRLocations200ApplicationJSONLocations]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locations'), 'exclude': lambda f: f is None }})  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned within a single API call."""  
    

@dataclasses.dataclass
class ListZRLocationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_zr_locations_200_application_json_object: Optional[ListZRLocations200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Zoom Room locations listed successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    