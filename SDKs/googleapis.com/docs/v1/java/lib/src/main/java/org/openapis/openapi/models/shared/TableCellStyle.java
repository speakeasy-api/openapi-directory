/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TableCellStyle - The style of a TableCell. Inherited table cell styles are represented as unset fields in this message. A table cell style can inherit from the table's style.
 */
public class TableCellStyle {
    /**
     * A color that can either be fully opaque or fully transparent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backgroundColor")
    public OptionalColor backgroundColor;
    public TableCellStyle withBackgroundColor(OptionalColor backgroundColor) {
        this.backgroundColor = backgroundColor;
        return this;
    }
    
    /**
     * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("borderBottom")
    public TableCellBorder borderBottom;
    public TableCellStyle withBorderBottom(TableCellBorder borderBottom) {
        this.borderBottom = borderBottom;
        return this;
    }
    
    /**
     * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("borderLeft")
    public TableCellBorder borderLeft;
    public TableCellStyle withBorderLeft(TableCellBorder borderLeft) {
        this.borderLeft = borderLeft;
        return this;
    }
    
    /**
     * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("borderRight")
    public TableCellBorder borderRight;
    public TableCellStyle withBorderRight(TableCellBorder borderRight) {
        this.borderRight = borderRight;
        return this;
    }
    
    /**
     * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("borderTop")
    public TableCellBorder borderTop;
    public TableCellStyle withBorderTop(TableCellBorder borderTop) {
        this.borderTop = borderTop;
        return this;
    }
    
    /**
     * The column span of the cell. This property is read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columnSpan")
    public Integer columnSpan;
    public TableCellStyle withColumnSpan(Integer columnSpan) {
        this.columnSpan = columnSpan;
        return this;
    }
    
    /**
     * The alignment of the content in the table cell. The default alignment matches the alignment for newly created table cells in the Docs editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentAlignment")
    public TableCellStyleContentAlignmentEnum contentAlignment;
    public TableCellStyle withContentAlignment(TableCellStyleContentAlignmentEnum contentAlignment) {
        this.contentAlignment = contentAlignment;
        return this;
    }
    
    /**
     * A magnitude in a single direction in the specified units.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paddingBottom")
    public Dimension paddingBottom;
    public TableCellStyle withPaddingBottom(Dimension paddingBottom) {
        this.paddingBottom = paddingBottom;
        return this;
    }
    
    /**
     * A magnitude in a single direction in the specified units.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paddingLeft")
    public Dimension paddingLeft;
    public TableCellStyle withPaddingLeft(Dimension paddingLeft) {
        this.paddingLeft = paddingLeft;
        return this;
    }
    
    /**
     * A magnitude in a single direction in the specified units.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paddingRight")
    public Dimension paddingRight;
    public TableCellStyle withPaddingRight(Dimension paddingRight) {
        this.paddingRight = paddingRight;
        return this;
    }
    
    /**
     * A magnitude in a single direction in the specified units.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paddingTop")
    public Dimension paddingTop;
    public TableCellStyle withPaddingTop(Dimension paddingTop) {
        this.paddingTop = paddingTop;
        return this;
    }
    
    /**
     * The row span of the cell. This property is read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowSpan")
    public Integer rowSpan;
    public TableCellStyle withRowSpan(Integer rowSpan) {
        this.rowSpan = rowSpan;
        return this;
    }
    
}
