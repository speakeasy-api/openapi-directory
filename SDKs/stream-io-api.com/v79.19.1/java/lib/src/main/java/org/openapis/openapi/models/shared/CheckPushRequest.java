/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CheckPushRequest {
    /**
     * Push message template for APN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apn_template")
    public String apnTemplate;
    public CheckPushRequest withApnTemplate(String apnTemplate) {
        this.apnTemplate = apnTemplate;
        return this;
    }
    
    /**
     * Push message data template for Firebase
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firebase_data_template")
    public String firebaseDataTemplate;
    public CheckPushRequest withFirebaseDataTemplate(String firebaseDataTemplate) {
        this.firebaseDataTemplate = firebaseDataTemplate;
        return this;
    }
    
    /**
     * Push message template for Firebase
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firebase_template")
    public String firebaseTemplate;
    public CheckPushRequest withFirebaseTemplate(String firebaseTemplate) {
        this.firebaseTemplate = firebaseTemplate;
        return this;
    }
    
    /**
     * Message ID to send push notification for
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_id")
    public String messageId;
    public CheckPushRequest withMessageId(String messageId) {
        this.messageId = messageId;
        return this;
    }
    
    /**
     * Name of push provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push_provider_name")
    public String pushProviderName;
    public CheckPushRequest withPushProviderName(String pushProviderName) {
        this.pushProviderName = pushProviderName;
        return this;
    }
    
    /**
     * Push provider type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push_provider_type")
    public CheckPushRequestTypeOfPushProviderEnum pushProviderType;
    public CheckPushRequest withPushProviderType(CheckPushRequestTypeOfPushProviderEnum pushProviderType) {
        this.pushProviderType = pushProviderType;
        return this;
    }
    
    /**
     * Don't require existing devices to render templates
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skip_devices")
    public Boolean skipDevices;
    public CheckPushRequest withSkipDevices(Boolean skipDevices) {
        this.skipDevices = skipDevices;
        return this;
    }
    
    /**
     * Represents chat user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public java.util.Map<String, Object> user;
    public CheckPushRequest withUser(java.util.Map<String, Object> user) {
        this.user = user;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public CheckPushRequest withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
