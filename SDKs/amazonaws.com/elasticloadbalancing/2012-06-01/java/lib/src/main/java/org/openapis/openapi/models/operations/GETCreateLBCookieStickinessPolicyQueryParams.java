/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateLBCookieStickinessPolicyQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateLBCookieStickinessPolicyActionEnum action;
    public GETCreateLBCookieStickinessPolicyQueryParams withAction(GETCreateLBCookieStickinessPolicyActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CookieExpirationPeriod")
    public Long cookieExpirationPeriod;
    public GETCreateLBCookieStickinessPolicyQueryParams withCookieExpirationPeriod(Long cookieExpirationPeriod) {
        this.cookieExpirationPeriod = cookieExpirationPeriod;
        return this;
    }
    
    /**
     * The name of the load balancer.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=LoadBalancerName")
    public String loadBalancerName;
    public GETCreateLBCookieStickinessPolicyQueryParams withLoadBalancerName(String loadBalancerName) {
        this.loadBalancerName = loadBalancerName;
        return this;
    }
    
    /**
     * The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PolicyName")
    public String policyName;
    public GETCreateLBCookieStickinessPolicyQueryParams withPolicyName(String policyName) {
        this.policyName = policyName;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateLBCookieStickinessPolicyVersionEnum version;
    public GETCreateLBCookieStickinessPolicyQueryParams withVersion(GETCreateLBCookieStickinessPolicyVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
