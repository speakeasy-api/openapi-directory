<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PatchConfig - Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PatchConfig
{
    /**
     * Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AptSettings $apt
     */
	#[\JMS\Serializer\Annotation\SerializedName('apt')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AptSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AptSettings $apt = null;
    
    /**
     * Googet patching is performed by running `googet update`.
     * 
     * @var ?array<string, mixed> $goo
     */
	#[\JMS\Serializer\Annotation\SerializedName('goo')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $goo = null;
    
    /**
     * Allows the patch job to run on Managed instance groups (MIGs).
     * 
     * @var ?bool $migInstancesAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('migInstancesAllowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $migInstancesAllowed = null;
    
    /**
     * A step that runs an executable for a PatchJob.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExecStep $postStep
     */
	#[\JMS\Serializer\Annotation\SerializedName('postStep')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExecStep')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExecStep $postStep = null;
    
    /**
     * A step that runs an executable for a PatchJob.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExecStep $preStep
     */
	#[\JMS\Serializer\Annotation\SerializedName('preStep')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExecStep')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExecStep $preStep = null;
    
    /**
     * Post-patch reboot settings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PatchConfigRebootConfigEnum $rebootConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('rebootConfig')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PatchConfigRebootConfigEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PatchConfigRebootConfigEnum $rebootConfig = null;
    
    /**
     * Windows patching is performed using the Windows Update Agent.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WindowsUpdateSettings $windowsUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowsUpdate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WindowsUpdateSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WindowsUpdateSettings $windowsUpdate = null;
    
    /**
     * Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\YumSettings $yum
     */
	#[\JMS\Serializer\Annotation\SerializedName('yum')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\YumSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?YumSettings $yum = null;
    
    /**
     * Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ZypperSettings $zypper
     */
	#[\JMS\Serializer\Annotation\SerializedName('zypper')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ZypperSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ZypperSettings $zypper = null;
    
	public function __construct()
	{
		$this->apt = null;
		$this->goo = null;
		$this->migInstancesAllowed = null;
		$this->postStep = null;
		$this->preStep = null;
		$this->rebootConfig = null;
		$this->windowsUpdate = null;
		$this->yum = null;
		$this->zypper = null;
	}
}
