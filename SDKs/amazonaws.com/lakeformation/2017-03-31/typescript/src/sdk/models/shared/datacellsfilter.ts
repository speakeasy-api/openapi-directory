/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ColumnWildcard } from "./columnwildcard";
import { RowFilter } from "./rowfilter";
import { Expose, Type } from "class-transformer";

/**
 * A structure that describes certain columns on certain rows.
 */
export class DataCellsFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ColumnNames" })
  columnNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ColumnWildcard" })
  @Type(() => ColumnWildcard)
  columnWildcard?: ColumnWildcard;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RowFilter" })
  @Type(() => RowFilter)
  rowFilter?: RowFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "TableCatalogId" })
  tableCatalogId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VersionId" })
  versionId?: string;
}
