/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackupTypeFilterEnum } from "./backuptypefilterenum";
import { Expose, Transform } from "class-transformer";

export class ListBackupsInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BackupType" })
  backupType?: BackupTypeFilterEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExclusiveStartBackupArn" })
  exclusiveStartBackupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Limit" })
  limit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeRangeLowerBound" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeRangeLowerBound?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TimeRangeUpperBound" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeRangeUpperBound?: Date;
}
