/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateIntegrationRequestBody {
    /**
     * A string with a length between [1-1024].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionId")
    public String connectionId;

    public UpdateIntegrationRequestBody withConnectionId(String connectionId) {
        this.connectionId = connectionId;
        return this;
    }
    
    /**
     * Represents a connection type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionType")
    public UpdateIntegrationRequestBodyConnectionTypeEnum connectionType;

    public UpdateIntegrationRequestBody withConnectionType(UpdateIntegrationRequestBodyConnectionTypeEnum connectionType) {
        this.connectionType = connectionType;
        return this;
    }
    
    /**
     * Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentHandlingStrategy")
    public UpdateIntegrationRequestBodyContentHandlingStrategyEnum contentHandlingStrategy;

    public UpdateIntegrationRequestBody withContentHandlingStrategy(UpdateIntegrationRequestBodyContentHandlingStrategyEnum contentHandlingStrategy) {
        this.contentHandlingStrategy = contentHandlingStrategy;
        return this;
    }
    
    /**
     * Represents an Amazon Resource Name (ARN).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("credentialsArn")
    public String credentialsArn;

    public UpdateIntegrationRequestBody withCredentialsArn(String credentialsArn) {
        this.credentialsArn = credentialsArn;
        return this;
    }
    
    /**
     * A string with a length between [0-1024].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public UpdateIntegrationRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A string with a length between [1-64].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationMethod")
    public String integrationMethod;

    public UpdateIntegrationRequestBody withIntegrationMethod(String integrationMethod) {
        this.integrationMethod = integrationMethod;
        return this;
    }
    
    /**
     * A string with a length between [1-128].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationSubtype")
    public String integrationSubtype;

    public UpdateIntegrationRequestBody withIntegrationSubtype(String integrationSubtype) {
        this.integrationSubtype = integrationSubtype;
        return this;
    }
    
    /**
     * Represents an API method integration type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationType")
    public UpdateIntegrationRequestBodyIntegrationTypeEnum integrationType;

    public UpdateIntegrationRequestBody withIntegrationType(UpdateIntegrationRequestBodyIntegrationTypeEnum integrationType) {
        this.integrationType = integrationType;
        return this;
    }
    
    /**
     * A string representation of a URI with a length between [1-2048].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationUri")
    public String integrationUri;

    public UpdateIntegrationRequestBody withIntegrationUri(String integrationUri) {
        this.integrationUri = integrationUri;
        return this;
    }
    
    /**
     * Represents passthrough behavior for an integration response. Supported only for WebSocket APIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passthroughBehavior")
    public UpdateIntegrationRequestBodyPassthroughBehaviorEnum passthroughBehavior;

    public UpdateIntegrationRequestBody withPassthroughBehavior(UpdateIntegrationRequestBodyPassthroughBehaviorEnum passthroughBehavior) {
        this.passthroughBehavior = passthroughBehavior;
        return this;
    }
    
    /**
     * A string with a length between [1-64].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payloadFormatVersion")
    public String payloadFormatVersion;

    public UpdateIntegrationRequestBody withPayloadFormatVersion(String payloadFormatVersion) {
        this.payloadFormatVersion = payloadFormatVersion;
        return this;
    }
    
    /**
     * &lt;p&gt;For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.&lt;replaceable&gt;{location}&lt;/replaceable&gt;.&lt;replaceable&gt;{name}&lt;/replaceable&gt;
     *           , where 
     *             &lt;replaceable&gt;{location}&lt;/replaceable&gt;
     *            is querystring, path, or header; and 
     *             &lt;replaceable&gt;{name}&lt;/replaceable&gt;
     *            must be a valid and unique method request parameter name.&lt;/p&gt; &lt;p&gt;For HTTP API integrations with a specified integrationSubtype, request parameters are a key-value map specifying parameters that are passed to AWS_PROXY integrations. You can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services.html"&gt;Working with AWS service integrations for HTTP APIs&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For HTTP API integrations without a specified integrationSubtype request parameters are a key-value map specifying how to transform HTTP requests before sending them to the backend. The key should follow the pattern &amp;lt;action&amp;gt;:&amp;lt;header|querystring|path&amp;gt;.&amp;lt;location&amp;gt; where action can be append, overwrite or remove. For values, you can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html"&gt;Transforming API requests and responses&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestParameters")
    public java.util.Map<String, String> requestParameters;

    public UpdateIntegrationRequestBody withRequestParameters(java.util.Map<String, String> requestParameters) {
        this.requestParameters = requestParameters;
        return this;
    }
    
    /**
     * A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestTemplates")
    public java.util.Map<String, String> requestTemplates;

    public UpdateIntegrationRequestBody withRequestTemplates(java.util.Map<String, String> requestTemplates) {
        this.requestTemplates = requestTemplates;
        return this;
    }
    
    /**
     * Supported only for HTTP APIs. You use response parameters to transform the HTTP response from a backend integration before returning the response to clients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseParameters")
    public java.util.Map<String, java.util.Map<String, String>> responseParameters;

    public UpdateIntegrationRequestBody withResponseParameters(java.util.Map<String, java.util.Map<String, String>> responseParameters) {
        this.responseParameters = responseParameters;
        return this;
    }
    
    /**
     * An expression used to extract information at runtime. See &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions"&gt;Selection Expressions&lt;/a&gt; for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templateSelectionExpression")
    public String templateSelectionExpression;

    public UpdateIntegrationRequestBody withTemplateSelectionExpression(String templateSelectionExpression) {
        this.templateSelectionExpression = templateSelectionExpression;
        return this;
    }
    
    /**
     * An integer with a value between [50-30000].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeoutInMillis")
    public Long timeoutInMillis;

    public UpdateIntegrationRequestBody withTimeoutInMillis(Long timeoutInMillis) {
        this.timeoutInMillis = timeoutInMillis;
        return this;
    }
    
    /**
     * The TLS configuration for a private integration. If you specify a TLS configuration, private integration traffic uses the HTTPS protocol. Supported only for HTTP APIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tlsConfig")
    public UpdateIntegrationRequestBodyTlsConfig tlsConfig;

    public UpdateIntegrationRequestBody withTlsConfig(UpdateIntegrationRequestBodyTlsConfig tlsConfig) {
        this.tlsConfig = tlsConfig;
        return this;
    }
    
    public UpdateIntegrationRequestBody(){}
}
