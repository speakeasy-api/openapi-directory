/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListTaskRequest {
    /**
     * The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AssignmentStatus")
    public String[] assignmentStatus;
    public ListTaskRequest withAssignmentStatus(String[] assignmentStatus) {
        this.assignmentStatus = assignmentStatus;
        return this;
    }
    
    /**
     * The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EvaluateTaskAttributes")
    public String evaluateTaskAttributes;
    public ListTaskRequest withEvaluateTaskAttributes(String evaluateTaskAttributes) {
        this.evaluateTaskAttributes = evaluateTaskAttributes;
        return this;
    }
    
    /**
     * Whether to read Tasks with addons. If `true`, returns only Tasks with addons. If `false`, returns only Tasks without addons.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=HasAddons")
    public Boolean hasAddons;
    public ListTaskRequest withHasAddons(Boolean hasAddons) {
        this.hasAddons = hasAddons;
        return this;
    }
    
    /**
     * How to order the returned Task resources. y default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `Priority` or `DateCreated` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Multiple sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Ordering")
    public String ordering;
    public ListTaskRequest withOrdering(String ordering) {
        this.ordering = ordering;
        return this;
    }
    
    /**
     * The page index. This value is simply for client state.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Page")
    public Long page;
    public ListTaskRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageSize")
    public Long pageSize;
    public ListTaskRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The page token. This is provided by the API.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageToken")
    public String pageToken;
    public ListTaskRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Priority")
    public Long priority;
    public ListTaskRequest withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TaskQueueName")
    public String taskQueueName;
    public ListTaskRequest withTaskQueueName(String taskQueueName) {
        this.taskQueueName = taskQueueName;
        return this;
    }
    
    /**
     * The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TaskQueueSid")
    public String taskQueueSid;
    public ListTaskRequest withTaskQueueSid(String taskQueueSid) {
        this.taskQueueSid = taskQueueSid;
        return this;
    }
    
    /**
     * The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=WorkflowName")
    public String workflowName;
    public ListTaskRequest withWorkflowName(String workflowName) {
        this.workflowName = workflowName;
        return this;
    }
    
    /**
     * The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=WorkflowSid")
    public String workflowSid;
    public ListTaskRequest withWorkflowSid(String workflowSid) {
        this.workflowSid = workflowSid;
        return this;
    }
    
    /**
     * The SID of the Workspace with the Tasks to read.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=WorkspaceSid")
    public String workspaceSid;
    public ListTaskRequest withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
}
