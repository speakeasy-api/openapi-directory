/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse -  Response for the SamplePlayableLocations method.
 */
public class GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse {
    /**
     * Each PlayableLocation object corresponds to a game_object_type specified in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationsPerGameObjectType")
    public java.util.Map<String, GoogleMapsPlayablelocationsV3SamplePlayableLocationList> locationsPerGameObjectType;

    public GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse withLocationsPerGameObjectType(java.util.Map<String, GoogleMapsPlayablelocationsV3SamplePlayableLocationList> locationsPerGameObjectType) {
        this.locationsPerGameObjectType = locationsPerGameObjectType;
        return this;
    }
    
    /**
     * Required. Specifies the "time-to-live" for the set of playable locations. You can use this value to determine how long to cache the set of playable locations. After this length of time, your back-end game server should issue a new SamplePlayableLocations request to get a fresh set of playable locations (because for example, they might have been removed, a park might have closed for the day, a business might have closed permanently).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ttl")
    public String ttl;

    public GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse withTtl(String ttl) {
        this.ttl = ttl;
        return this;
    }
    
    public GoogleMapsPlayablelocationsV3SamplePlayableLocationsResponse(){}
}
