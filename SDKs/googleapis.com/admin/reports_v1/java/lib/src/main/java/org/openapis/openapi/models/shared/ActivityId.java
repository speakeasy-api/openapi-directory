/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ActivityId - Unique identifier for each activity record.
 */
public class ActivityId {
    /**
     * Application name to which the event belongs. For possible values see the list of applications above in `applicationName`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationName")
    public String applicationName;
    public ActivityId withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }
    
    /**
     * The unique identifier for a Google Workspace account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public String customerId;
    public ActivityId withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * Time of occurrence of the activity. This is in UNIX epoch time in seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;
    public ActivityId withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
    /**
     * Unique qualifier if multiple events have the same time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uniqueQualifier")
    public String uniqueQualifier;
    public ActivityId withUniqueQualifier(String uniqueQualifier) {
        this.uniqueQualifier = uniqueQualifier;
        return this;
    }
    
}
