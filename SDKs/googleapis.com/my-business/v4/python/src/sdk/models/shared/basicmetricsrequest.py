"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricrequest as shared_metricrequest
from ..shared import timerange as shared_timerange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BasicMetricsRequest:
    r"""A request for basic metric insights."""
    
    metric_requests: Optional[list[shared_metricrequest.MetricRequest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricRequests'), 'exclude': lambda f: f is None }})
    r"""A collection of metrics to return values for including the options for how the data should be returned."""  
    time_range: Optional[shared_timerange.TimeRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeRange'), 'exclude': lambda f: f is None }})
    r"""A range of time. Data will be pulled over the range as a half-open inverval (that is, [start_time, end_time))."""  
    