// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption10 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption11 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption5 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption6 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption7 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption8 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurityOption9 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsDeleteSecurity struct {
	Option1  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption1  `security:"option"`
	Option10 *FitnessUsersDataSourcesDatasetsDeleteSecurityOption10 `security:"option"`
	Option11 *FitnessUsersDataSourcesDatasetsDeleteSecurityOption11 `security:"option"`
	Option2  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption2  `security:"option"`
	Option3  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption3  `security:"option"`
	Option4  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption4  `security:"option"`
	Option5  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption5  `security:"option"`
	Option6  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption6  `security:"option"`
	Option7  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption7  `security:"option"`
	Option8  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption8  `security:"option"`
	Option9  *FitnessUsersDataSourcesDatasetsDeleteSecurityOption9  `security:"option"`
}

type FitnessUsersDataSourcesDatasetsDeleteRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The data stream ID of the data source that created the dataset.
	DataSourceID string `pathParam:"style=simple,explode=false,name=dataSourceId"`
	// Dataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like: "startTime-endTime" where startTime and endTime are 64 bit integers.
	DatasetID string `pathParam:"style=simple,explode=false,name=datasetId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Delete a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type FitnessUsersDataSourcesDatasetsDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
