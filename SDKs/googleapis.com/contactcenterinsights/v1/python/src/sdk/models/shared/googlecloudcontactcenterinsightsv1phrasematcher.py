"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudcontactcenterinsightsv1phrasematchrulegroup as shared_googlecloudcontactcenterinsightsv1phrasematchrulegroup
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudContactcenterinsightsV1PhraseMatcherRoleMatchEnum(str, Enum):
    r"""The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."""
    ROLE_UNSPECIFIED = 'ROLE_UNSPECIFIED'
    HUMAN_AGENT = 'HUMAN_AGENT'
    AUTOMATED_AGENT = 'AUTOMATED_AGENT'
    END_USER = 'END_USER'
    ANY_AGENT = 'ANY_AGENT'

class GoogleCloudContactcenterinsightsV1PhraseMatcherTypeEnum(str, Enum):
    r"""Required. The type of this phrase matcher."""
    PHRASE_MATCHER_TYPE_UNSPECIFIED = 'PHRASE_MATCHER_TYPE_UNSPECIFIED'
    ALL_OF = 'ALL_OF'
    ANY_OF = 'ANY_OF'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1PhraseMatcher:
    r"""The phrase matcher resource."""
    
    activation_update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activationUpdateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The most recent time at which the activation status was updated."""  
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Applies the phrase matcher only when it is active."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The human-readable name of the phrase matcher."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"""  
    phrase_match_rule_groups: Optional[list[shared_googlecloudcontactcenterinsightsv1phrasematchrulegroup.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phraseMatchRuleGroups'), 'exclude': lambda f: f is None }})
    r"""A list of phase match rule groups that are included in this matcher."""  
    revision_create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revisionCreateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp of when the revision was created. It is also the create time when a new matcher is added."""  
    revision_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revisionId'), 'exclude': lambda f: f is None }})
    r"""Output only. Immutable. The revision ID of the phrase matcher. A new revision is committed whenever the matcher is changed, except when it is activated or deactivated. A server generated random ID will be used. Example: locations/global/phraseMatchers/my-first-matcher@1234567"""  
    role_match: Optional[GoogleCloudContactcenterinsightsV1PhraseMatcherRoleMatchEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roleMatch'), 'exclude': lambda f: f is None }})
    r"""The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."""  
    type: Optional[GoogleCloudContactcenterinsightsV1PhraseMatcherTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. The type of this phrase matcher."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The most recent time at which the phrase matcher was updated."""  
    version_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionTag'), 'exclude': lambda f: f is None }})
    r"""The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1PhraseMatcherInput:
    r"""The phrase matcher resource."""
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Applies the phrase matcher only when it is active."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""The human-readable name of the phrase matcher."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the phrase matcher. Format: projects/{project}/locations/{location}/phraseMatchers/{phrase_matcher}"""  
    phrase_match_rule_groups: Optional[list[shared_googlecloudcontactcenterinsightsv1phrasematchrulegroup.GoogleCloudContactcenterinsightsV1PhraseMatchRuleGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phraseMatchRuleGroups'), 'exclude': lambda f: f is None }})
    r"""A list of phase match rule groups that are included in this matcher."""  
    role_match: Optional[GoogleCloudContactcenterinsightsV1PhraseMatcherRoleMatchEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roleMatch'), 'exclude': lambda f: f is None }})
    r"""The role whose utterances the phrase matcher should be matched against. If the role is ROLE_UNSPECIFIED it will be matched against any utterances in the transcript."""  
    type: Optional[GoogleCloudContactcenterinsightsV1PhraseMatcherTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. The type of this phrase matcher."""  
    version_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionTag'), 'exclude': lambda f: f is None }})
    r"""The customized version tag to use for the phrase matcher. If not specified, it will default to `revision_id`."""  
    