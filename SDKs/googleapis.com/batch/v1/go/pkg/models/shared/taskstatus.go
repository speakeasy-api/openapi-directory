// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskStatusStateEnum - Task state
type TaskStatusStateEnum string

const (
	TaskStatusStateEnumStateUnspecified TaskStatusStateEnum = "STATE_UNSPECIFIED"
	TaskStatusStateEnumPending          TaskStatusStateEnum = "PENDING"
	TaskStatusStateEnumAssigned         TaskStatusStateEnum = "ASSIGNED"
	TaskStatusStateEnumRunning          TaskStatusStateEnum = "RUNNING"
	TaskStatusStateEnumFailed           TaskStatusStateEnum = "FAILED"
	TaskStatusStateEnumSucceeded        TaskStatusStateEnum = "SUCCEEDED"
)

func (e *TaskStatusStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "ASSIGNED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		*e = TaskStatusStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskStatusStateEnum: %s", s)
	}
}

// TaskStatus - Status of a task
type TaskStatus struct {
	// Task state
	State *TaskStatusStateEnum `json:"state,omitempty"`
	// Detailed info about why the state is reached.
	StatusEvents []StatusEvent `json:"statusEvents,omitempty"`
}
