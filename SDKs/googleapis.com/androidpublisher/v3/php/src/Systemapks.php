<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Systemapks 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Creates an APK which is suitable for inclusion in a system image from an already uploaded Android App Bundle.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateResponse
     */
	public function androidpublisherSystemapksVariantsCreate(
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants', \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "variantInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->variant = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Variant', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Downloads a previously created system APK which is suitable for inclusion in a system image.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadResponse
     */
	public function androidpublisherSystemapksVariantsDownload(
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}:download', \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsDownloadResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Returns a previously created system APK variant.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetResponse
     */
	public function androidpublisherSystemapksVariantsGet(
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants/{variantId}', \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->variant = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Variant', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Returns the list of previously created system APK variants.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListResponse
     */
	public function androidpublisherSystemapksVariantsList(
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidpublisher/v3/applications/{packageName}/systemApks/{versionCode}/variants', \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidpublisherSystemapksVariantsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->systemApksListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\SystemApksListResponse', 'json');
            }
        }

        return $response;
    }
}