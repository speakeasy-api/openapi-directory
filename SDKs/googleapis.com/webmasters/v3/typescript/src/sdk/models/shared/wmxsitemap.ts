/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WmxSitemapContent } from "./wmxsitemapcontent";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains detailed information about a specific URL submitted as a sitemap.
 */
export class WmxSitemap extends SpeakeasyBase {
  /**
   * The various content types in the sitemap.
   */
  @SpeakeasyMetadata({ elemType: WmxSitemapContent })
  @Expose({ name: "contents" })
  @Type(() => WmxSitemapContent)
  contents?: WmxSitemapContent[];

  /**
   * Number of errors in the sitemap. These are issues with the sitemap itself that need to be fixed before it can be processed correctly.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: string;

  /**
   * If true, the sitemap has not been processed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPending" })
  isPending?: boolean;

  /**
   * If true, the sitemap is a collection of sitemaps.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSitemapsIndex" })
  isSitemapsIndex?: boolean;

  /**
   * Date & time in which this sitemap was last downloaded. Date format is in RFC 3339 format (yyyy-mm-dd).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastDownloaded" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastDownloaded?: Date;

  /**
   * Date & time in which this sitemap was submitted. Date format is in RFC 3339 format (yyyy-mm-dd).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSubmitted" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSubmitted?: Date;

  /**
   * The url of the sitemap.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * The type of the sitemap. For example: rssFeed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Number of warnings for the sitemap. These are generally non-critical issues with URLs in the sitemaps.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warnings" })
  warnings?: string;
}
