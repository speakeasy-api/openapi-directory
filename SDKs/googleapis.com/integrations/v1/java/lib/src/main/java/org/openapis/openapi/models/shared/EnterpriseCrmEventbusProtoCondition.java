/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnterpriseCrmEventbusProtoCondition - Condition that uses `operator` to evaluate the key against the value.
 */
public class EnterpriseCrmEventbusProtoCondition {
    /**
     * Key that's evaluated against the `value`. Please note the data type of the runtime value associated with the key should match the data type of `value`, else an IllegalArgumentException is thrown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventPropertyKey")
    public String eventPropertyKey;

    public EnterpriseCrmEventbusProtoCondition withEventPropertyKey(String eventPropertyKey) {
        this.eventPropertyKey = eventPropertyKey;
        return this;
    }
    
    /**
     * Operator used to evaluate the condition. Please note that an operator with an inappropriate key/value operand will result in IllegalArgumentException, e.g. CONTAINS with boolean key/value pair.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public EnterpriseCrmEventbusProtoConditionOperatorEnum operator;

    public EnterpriseCrmEventbusProtoCondition withOperator(EnterpriseCrmEventbusProtoConditionOperatorEnum operator) {
        this.operator = operator;
        return this;
    }
    
    /**
     * Used for define type for values. Currently supported value types include int, string, double, array, and any proto message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public EnterpriseCrmEventbusProtoValueType value;

    public EnterpriseCrmEventbusProtoCondition withValue(EnterpriseCrmEventbusProtoValueType value) {
        this.value = value;
        return this;
    }
    
    public EnterpriseCrmEventbusProtoCondition(){}
}
