/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnvironmentConfig - Configuration information for an environment.
 */
public class EnvironmentConfig {
    /**
     * Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see [Access environments with workforce identity federation](/composer/docs/composer-2/access-environments-with-workforce-identity-federation)).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("airflowByoidUri")
    public String airflowByoidUri;
    public EnvironmentConfig withAirflowByoidUri(String airflowByoidUri) {
        this.airflowByoidUri = airflowByoidUri;
        return this;
    }
    
    /**
     * Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface)).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("airflowUri")
    public String airflowUri;
    public EnvironmentConfig withAirflowUri(String airflowUri) {
        this.airflowUri = airflowUri;
        return this;
    }
    
    /**
     * Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using "/"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dagGcsPrefix")
    public String dagGcsPrefix;
    public EnvironmentConfig withDagGcsPrefix(String dagGcsPrefix) {
        this.dagGcsPrefix = dagGcsPrefix;
        return this;
    }
    
    /**
     * The configuration of Cloud SQL instance that is used by the Apache Airflow software.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseConfig")
    public DatabaseConfig databaseConfig;
    public EnvironmentConfig withDatabaseConfig(DatabaseConfig databaseConfig) {
        this.databaseConfig = databaseConfig;
        return this;
    }
    
    /**
     * The encryption options for the Cloud Composer environment and its dependencies. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionConfig")
    public EncryptionConfig encryptionConfig;
    public EnvironmentConfig withEncryptionConfig(EncryptionConfig encryptionConfig) {
        this.encryptionConfig = encryptionConfig;
        return this;
    }
    
    /**
     * Optional. The size of the Cloud Composer environment. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentSize")
    public EnvironmentConfigEnvironmentSizeEnum environmentSize;
    public EnvironmentConfig withEnvironmentSize(EnvironmentConfigEnvironmentSizeEnum environmentSize) {
        this.environmentSize = environmentSize;
        return this;
    }
    
    /**
     * Output only. The Kubernetes Engine cluster used to run this environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gkeCluster")
    public String gkeCluster;
    public EnvironmentConfig withGkeCluster(String gkeCluster) {
        this.gkeCluster = gkeCluster;
        return this;
    }
    
    /**
     * The configuration settings for Cloud Composer maintenance window. The following example: ``` { "startTime":"2019-08-01T01:00:00Z" "endTime":"2019-08-01T07:00:00Z" "recurrence":"FREQ=WEEKLY;BYDAY=TU,WE" } ``` would define a maintenance window between 01 and 07 hours UTC during each Tuesday and Wednesday.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceWindow")
    public MaintenanceWindow maintenanceWindow;
    public EnvironmentConfig withMaintenanceWindow(MaintenanceWindow maintenanceWindow) {
        this.maintenanceWindow = maintenanceWindow;
        return this;
    }
    
    /**
     * Configuration options for the master authorized networks feature. Enabled master authorized networks will disallow all external traffic to access Kubernetes master through HTTPS except traffic from the given CIDR blocks, Google Compute Engine Public IPs and Google Prod IPs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterAuthorizedNetworksConfig")
    public MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig;
    public EnvironmentConfig withMasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfig masterAuthorizedNetworksConfig) {
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        return this;
    }
    
    /**
     * The configuration information for the Kubernetes Engine nodes running the Apache Airflow software.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeConfig")
    public NodeConfig nodeConfig;
    public EnvironmentConfig withNodeConfig(NodeConfig nodeConfig) {
        this.nodeConfig = nodeConfig;
        return this;
    }
    
    /**
     * The number of nodes in the Kubernetes Engine cluster that will be used to run this environment. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeCount")
    public Integer nodeCount;
    public EnvironmentConfig withNodeCount(Integer nodeCount) {
        this.nodeCount = nodeCount;
        return this;
    }
    
    /**
     * The configuration information for configuring a Private IP Cloud Composer environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateEnvironmentConfig")
    public PrivateEnvironmentConfig privateEnvironmentConfig;
    public EnvironmentConfig withPrivateEnvironmentConfig(PrivateEnvironmentConfig privateEnvironmentConfig) {
        this.privateEnvironmentConfig = privateEnvironmentConfig;
        return this;
    }
    
    /**
     * The Recovery settings of an environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recoveryConfig")
    public RecoveryConfig recoveryConfig;
    public EnvironmentConfig withRecoveryConfig(RecoveryConfig recoveryConfig) {
        this.recoveryConfig = recoveryConfig;
        return this;
    }
    
    /**
     * Specifies the selection and configuration of software inside the environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("softwareConfig")
    public SoftwareConfig softwareConfig;
    public EnvironmentConfig withSoftwareConfig(SoftwareConfig softwareConfig) {
        this.softwareConfig = softwareConfig;
        return this;
    }
    
    /**
     * The configuration settings for the Airflow web server App Engine instance. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webServerConfig")
    public WebServerConfig webServerConfig;
    public EnvironmentConfig withWebServerConfig(WebServerConfig webServerConfig) {
        this.webServerConfig = webServerConfig;
        return this;
    }
    
    /**
     * Network-level access control policy for the Airflow web server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webServerNetworkAccessControl")
    public WebServerNetworkAccessControl webServerNetworkAccessControl;
    public EnvironmentConfig withWebServerNetworkAccessControl(WebServerNetworkAccessControl webServerNetworkAccessControl) {
        this.webServerNetworkAccessControl = webServerNetworkAccessControl;
        return this;
    }
    
    /**
     * The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workloadsConfig")
    public WorkloadsConfig workloadsConfig;
    public EnvironmentConfig withWorkloadsConfig(WorkloadsConfig workloadsConfig) {
        this.workloadsConfig = workloadsConfig;
        return this;
    }
    
}
