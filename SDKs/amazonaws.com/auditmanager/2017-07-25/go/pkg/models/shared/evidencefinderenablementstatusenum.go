// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EvidenceFinderEnablementStatusEnum string

const (
	EvidenceFinderEnablementStatusEnumEnabled           EvidenceFinderEnablementStatusEnum = "ENABLED"
	EvidenceFinderEnablementStatusEnumDisabled          EvidenceFinderEnablementStatusEnum = "DISABLED"
	EvidenceFinderEnablementStatusEnumEnableInProgress  EvidenceFinderEnablementStatusEnum = "ENABLE_IN_PROGRESS"
	EvidenceFinderEnablementStatusEnumDisableInProgress EvidenceFinderEnablementStatusEnum = "DISABLE_IN_PROGRESS"
)

func (e *EvidenceFinderEnablementStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLE_IN_PROGRESS":
		fallthrough
	case "DISABLE_IN_PROGRESS":
		*e = EvidenceFinderEnablementStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EvidenceFinderEnablementStatusEnum: %s", s)
	}
}
