// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETServiceLastAccessedDetailsActionEnum
type GETGETServiceLastAccessedDetailsActionEnum string

const (
	GETGETServiceLastAccessedDetailsActionEnumGetServiceLastAccessedDetails GETGETServiceLastAccessedDetailsActionEnum = "GetServiceLastAccessedDetails"
)

func (e *GETGETServiceLastAccessedDetailsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetServiceLastAccessedDetails":
		*e = GETGETServiceLastAccessedDetailsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETServiceLastAccessedDetailsActionEnum: %s", s)
	}
}

// GETGETServiceLastAccessedDetailsVersionEnum
type GETGETServiceLastAccessedDetailsVersionEnum string

const (
	GETGETServiceLastAccessedDetailsVersionEnumTwoThousandAndTen0508 GETGETServiceLastAccessedDetailsVersionEnum = "2010-05-08"
)

func (e *GETGETServiceLastAccessedDetailsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETGETServiceLastAccessedDetailsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETServiceLastAccessedDetailsVersionEnum: %s", s)
	}
}

type GETGETServiceLastAccessedDetailsRequest struct {
	Action GETGETServiceLastAccessedDetailsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the request generated by the <a>GenerateServiceLastAccessedDetails</a> operation. The <code>JobId</code> returned by <code>GenerateServiceLastAccessedDetail</code> must be used by the same role within a session, or by the same user when used to call <code>GetServiceLastAccessedDetail</code>.
	JobID string `queryParam:"style=form,explode=true,name=JobId"`
	// Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
	MaxItems          *int64                                      `queryParam:"style=form,explode=true,name=MaxItems"`
	Version           GETGETServiceLastAccessedDetailsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETServiceLastAccessedDetailsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
