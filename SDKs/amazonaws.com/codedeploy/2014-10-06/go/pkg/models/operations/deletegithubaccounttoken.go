// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteGitHubAccountTokenXAmzTargetEnum
type DeleteGitHubAccountTokenXAmzTargetEnum string

const (
	DeleteGitHubAccountTokenXAmzTargetEnumCodeDeploy20141006DeleteGitHubAccountToken DeleteGitHubAccountTokenXAmzTargetEnum = "CodeDeploy_20141006.DeleteGitHubAccountToken"
)

func (e DeleteGitHubAccountTokenXAmzTargetEnum) ToPointer() *DeleteGitHubAccountTokenXAmzTargetEnum {
	return &e
}

func (e *DeleteGitHubAccountTokenXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeDeploy_20141006.DeleteGitHubAccountToken":
		*e = DeleteGitHubAccountTokenXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteGitHubAccountTokenXAmzTargetEnum: %v", v)
	}
}

type DeleteGitHubAccountTokenRequest struct {
	DeleteGitHubAccountTokenInput shared.DeleteGitHubAccountTokenInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    DeleteGitHubAccountTokenXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteGitHubAccountTokenResponse struct {
	ContentType string
	// Success
	DeleteGitHubAccountTokenOutput *shared.DeleteGitHubAccountTokenOutput
	// GitHubAccountTokenDoesNotExistException
	GitHubAccountTokenDoesNotExistException interface{}
	// GitHubAccountTokenNameRequiredException
	GitHubAccountTokenNameRequiredException interface{}
	// InvalidGitHubAccountTokenNameException
	InvalidGitHubAccountTokenNameException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceValidationException
	ResourceValidationException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
