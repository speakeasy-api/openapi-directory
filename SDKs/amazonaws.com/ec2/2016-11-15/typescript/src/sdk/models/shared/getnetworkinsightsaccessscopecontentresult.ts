/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

export enum GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum {
  Tcp = "tcp",
  Udp = "udp",
}

/**
 * The packet header statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata()
  destinationPorts?: string[];

  @SpeakeasyMetadata()
  destinationPrefixLists?: string[];

  @SpeakeasyMetadata()
  protocols?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatementProtocolsEnum[];

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata()
  sourcePorts?: string[];

  @SpeakeasyMetadata()
  sourcePrefixLists?: string[];
}

/**
 * The resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceTypes?: string[];

  @SpeakeasyMetadata()
  resources?: string[];
}

/**
 * The destination.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  packetHeaderStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationPacketHeaderStatement;

  @SpeakeasyMetadata()
  resourceStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestinationResourceStatement;
}

export enum GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum {
  Tcp = "tcp",
  Udp = "udp",
}

/**
 * The packet header statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata()
  destinationPorts?: string[];

  @SpeakeasyMetadata()
  destinationPrefixLists?: string[];

  @SpeakeasyMetadata()
  protocols?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatementProtocolsEnum[];

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata()
  sourcePorts?: string[];

  @SpeakeasyMetadata()
  sourcePrefixLists?: string[];
}

/**
 * The resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceTypes?: string[];

  @SpeakeasyMetadata()
  resources?: string[];
}

/**
 * The source.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  packetHeaderStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourcePacketHeaderStatement;

  @SpeakeasyMetadata()
  resourceStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSourceResourceStatement;
}

/**
 * The resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceTypes?: string[];

  @SpeakeasyMetadata()
  resources?: string[];
}

/**
 * Describes a through resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResources extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResourcesResourceStatement;
}

/**
 * Describes a path.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePaths extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destination?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsDestination;

  @SpeakeasyMetadata()
  source?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsSource;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResources,
  })
  throughResources?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePathsThroughResources[];
}

export enum GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum {
  Tcp = "tcp",
  Udp = "udp",
}

/**
 * The packet header statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata()
  destinationPorts?: string[];

  @SpeakeasyMetadata()
  destinationPrefixLists?: string[];

  @SpeakeasyMetadata()
  protocols?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatementProtocolsEnum[];

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata()
  sourcePorts?: string[];

  @SpeakeasyMetadata()
  sourcePrefixLists?: string[];
}

/**
 * The resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceTypes?: string[];

  @SpeakeasyMetadata()
  resources?: string[];
}

/**
 * The destination.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  packetHeaderStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationPacketHeaderStatement;

  @SpeakeasyMetadata()
  resourceStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestinationResourceStatement;
}

export enum GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum {
  Tcp = "tcp",
  Udp = "udp",
}

/**
 * The packet header statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata()
  destinationPorts?: string[];

  @SpeakeasyMetadata()
  destinationPrefixLists?: string[];

  @SpeakeasyMetadata()
  protocols?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatementProtocolsEnum[];

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata()
  sourcePorts?: string[];

  @SpeakeasyMetadata()
  sourcePrefixLists?: string[];
}

/**
 * The resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceTypes?: string[];

  @SpeakeasyMetadata()
  resources?: string[];
}

/**
 * The source.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  packetHeaderStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourcePacketHeaderStatement;

  @SpeakeasyMetadata()
  resourceStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSourceResourceStatement;
}

/**
 * The resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceTypes?: string[];

  @SpeakeasyMetadata()
  resources?: string[];
}

/**
 * Describes a through resource statement.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResources extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceStatement?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResourcesResourceStatement;
}

/**
 * Describes a path.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPaths extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destination?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsDestination;

  @SpeakeasyMetadata()
  source?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsSource;

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResources,
  })
  throughResources?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPathsThroughResources[];
}

/**
 * The Network Access Scope content.
 */
export class GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContent extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePaths,
  })
  excludePaths?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentExcludePaths[];

  @SpeakeasyMetadata({
    elemType:
      GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPaths,
  })
  matchPaths?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContentMatchPaths[];

  @SpeakeasyMetadata()
  networkInsightsAccessScopeId?: string;
}

/**
 * Success
 */
export class GetNetworkInsightsAccessScopeContentResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  networkInsightsAccessScopeContent?: GetNetworkInsightsAccessScopeContentResultNetworkInsightsAccessScopeContent;
}
