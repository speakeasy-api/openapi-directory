<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateAccessTokenCreateAccessTokenRequest
{
    /**
     * The friendly name of the factor that is going to be created with this access token
     * 
     * @var ?string $factorFriendlyName
     */
	#[SpeakeasyMetadata('form:name=FactorFriendlyName')]
    public ?string $factorFriendlyName = null;
    
	#[SpeakeasyMetadata('form:name=FactorType')]
    public \OpenAPI\OpenAPI\Models\Shared\AccessTokenEnumFactorTypesEnum $factorType;
    
    /**
     * The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, and generated by your external system, such as your user's UUID, GUID, or SID.
     * 
     * @var string $identity
     */
	#[SpeakeasyMetadata('form:name=Identity')]
    public string $identity;
    
    /**
     * How long, in seconds, the access token is valid. Can be an integer between 60 and 300. Default is 60.
     * 
     * @var ?int $ttl
     */
	#[SpeakeasyMetadata('form:name=Ttl')]
    public ?int $ttl = null;
    
	public function __construct()
	{
		$this->factorFriendlyName = null;
		$this->factorType = \OpenAPI\OpenAPI\Models\Shared\AccessTokenEnumFactorTypesEnum::PUSH;
		$this->identity = "";
		$this->ttl = null;
	}
}
