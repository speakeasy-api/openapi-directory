/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CollaborationQueryLogStatusEnum } from "./collaborationquerylogstatusenum";
import { DataEncryptionMetadata } from "./dataencryptionmetadata";
import { MemberStatusEnum } from "./memberstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The multi-party data share environment. The collaboration contains metadata about its purpose and participants.
 */
export class Collaboration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorAccountId" })
  creatorAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorDisplayName" })
  creatorDisplayName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataEncryptionMetadata" })
  @Type(() => DataEncryptionMetadata)
  dataEncryptionMetadata?: DataEncryptionMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memberStatus" })
  memberStatus: MemberStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "membershipArn" })
  membershipArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "membershipId" })
  membershipId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "queryLogStatus" })
  queryLogStatus: CollaborationQueryLogStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
