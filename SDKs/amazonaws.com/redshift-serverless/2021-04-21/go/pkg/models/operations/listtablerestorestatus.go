// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListTableRestoreStatusQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

// ListTableRestoreStatusXAmzTargetEnum
type ListTableRestoreStatusXAmzTargetEnum string

const (
	ListTableRestoreStatusXAmzTargetEnumRedshiftServerlessListTableRestoreStatus ListTableRestoreStatusXAmzTargetEnum = "RedshiftServerless.ListTableRestoreStatus"
)

func (e *ListTableRestoreStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RedshiftServerless.ListTableRestoreStatus":
		*e = ListTableRestoreStatusXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTableRestoreStatusXAmzTargetEnum: %s", s)
	}
}

type ListTableRestoreStatusHeaders struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListTableRestoreStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListTableRestoreStatusRequest struct {
	QueryParams ListTableRestoreStatusQueryParams
	Headers     ListTableRestoreStatusHeaders
	Request     shared.ListTableRestoreStatusRequest `request:"mediaType=application/json"`
}

type ListTableRestoreStatusResponse struct {
	ContentType string
	// InvalidPaginationException
	InvalidPaginationException interface{}
	// Success
	ListTableRestoreStatusResponse *shared.ListTableRestoreStatusResponse
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
