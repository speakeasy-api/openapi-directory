// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeListenersActionEnum
type GETDescribeListenersActionEnum string

const (
	GETDescribeListenersActionEnumDescribeListeners GETDescribeListenersActionEnum = "DescribeListeners"
)

func (e GETDescribeListenersActionEnum) ToPointer() *GETDescribeListenersActionEnum {
	return &e
}

func (e *GETDescribeListenersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeListeners":
		*e = GETDescribeListenersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeListenersActionEnum: %v", v)
	}
}

// GETDescribeListenersVersionEnum
type GETDescribeListenersVersionEnum string

const (
	GETDescribeListenersVersionEnumTwoThousandAndFifteen1201 GETDescribeListenersVersionEnum = "2015-12-01"
)

func (e GETDescribeListenersVersionEnum) ToPointer() *GETDescribeListenersVersionEnum {
	return &e
}

func (e *GETDescribeListenersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-12-01":
		*e = GETDescribeListenersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeListenersVersionEnum: %v", v)
	}
}

type GETDescribeListenersRequest struct {
	Action GETDescribeListenersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Names (ARN) of the listeners.
	ListenerArns []string `queryParam:"style=form,explode=true,name=ListenerArns"`
	// The Amazon Resource Name (ARN) of the load balancer.
	LoadBalancerArn *string `queryParam:"style=form,explode=true,name=LoadBalancerArn"`
	// The marker for the next set of results. (You received this marker from a previous call.)
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of results to return with this call.
	PageSize          *int64                          `queryParam:"style=form,explode=true,name=PageSize"`
	Version           GETDescribeListenersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeListenersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
