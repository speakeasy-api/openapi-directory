/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DecryptRequest {
    @JsonProperty("CiphertextBlob")
    public String ciphertextBlob;

    public DecryptRequest withCiphertextBlob(String ciphertextBlob) {
        this.ciphertextBlob = ciphertextBlob;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EncryptionAlgorithm")
    public EncryptionAlgorithmSpecEnum encryptionAlgorithm;

    public DecryptRequest withEncryptionAlgorithm(EncryptionAlgorithmSpecEnum encryptionAlgorithm) {
        this.encryptionAlgorithm = encryptionAlgorithm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EncryptionContext")
    public java.util.Map<String, String> encryptionContext;

    public DecryptRequest withEncryptionContext(java.util.Map<String, String> encryptionContext) {
        this.encryptionContext = encryptionContext;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GrantTokens")
    public String[] grantTokens;

    public DecryptRequest withGrantTokens(String[] grantTokens) {
        this.grantTokens = grantTokens;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KeyId")
    public String keyId;

    public DecryptRequest withKeyId(String keyId) {
        this.keyId = keyId;
        return this;
    }
    
    public DecryptRequest(@JsonProperty("CiphertextBlob") String ciphertextBlob) {
        this.ciphertextBlob = ciphertextBlob;
  }
}
