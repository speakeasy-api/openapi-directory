// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RunStatusEnum string

const (
	RunStatusEnumPending   RunStatusEnum = "PENDING"
	RunStatusEnumStarting  RunStatusEnum = "STARTING"
	RunStatusEnumRunning   RunStatusEnum = "RUNNING"
	RunStatusEnumStopping  RunStatusEnum = "STOPPING"
	RunStatusEnumCompleted RunStatusEnum = "COMPLETED"
	RunStatusEnumDeleted   RunStatusEnum = "DELETED"
	RunStatusEnumCancelled RunStatusEnum = "CANCELLED"
	RunStatusEnumFailed    RunStatusEnum = "FAILED"
)

func (e RunStatusEnum) ToPointer() *RunStatusEnum {
	return &e
}

func (e *RunStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "DELETED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		*e = RunStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RunStatusEnum: %v", v)
	}
}
