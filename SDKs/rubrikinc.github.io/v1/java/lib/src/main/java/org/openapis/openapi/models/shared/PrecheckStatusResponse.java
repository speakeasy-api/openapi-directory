/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PrecheckStatusResponse - Returns the list of precheck failures during the latest run of the upgrade prechecks job.
 * 
 */
public class PrecheckStatusResponse {
    /**
     * The Unix epoch timestamp, in milliseconds, corresponding to the end of the last completed upgrade prechecks job instance.
     * 
     */
    @JsonProperty("endTime")
    public Long endTime;

    public PrecheckStatusResponse withEndTime(Long endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The results of the failed prechecks. This includes the name of the failed prechecks and details of the error.
     */
    @JsonProperty("failureResults")
    public PrecheckFailureResult[] failureResults;

    public PrecheckStatusResponse withFailureResults(PrecheckFailureResult[] failureResults) {
        this.failureResults = failureResults;
        return this;
    }
    
    /**
     * Specifies whether this result is from a user-triggered job.
     */
    @JsonProperty("isOnDemand")
    public Boolean isOnDemand;

    public PrecheckStatusResponse withIsOnDemand(Boolean isOnDemand) {
        this.isOnDemand = isOnDemand;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextRunInfo")
    public PrecheckStatusNextRunInfo nextRunInfo;

    public PrecheckStatusResponse withNextRunInfo(PrecheckStatusNextRunInfo nextRunInfo) {
        this.nextRunInfo = nextRunInfo;
        return this;
    }
    
    /**
     * Total number of upgrade prechecks that were run.
     */
    @JsonProperty("numPrechecksRun")
    public Integer numPrechecksRun;

    public PrecheckStatusResponse withNumPrechecksRun(Integer numPrechecksRun) {
        this.numPrechecksRun = numPrechecksRun;
        return this;
    }
    
    /**
     * Time, in minutes, between consecutive runs of scheduled upgrade prechecks job instances.
     * 
     */
    @JsonProperty("runPeriodInMinutes")
    public Integer runPeriodInMinutes;

    public PrecheckStatusResponse withRunPeriodInMinutes(Integer runPeriodInMinutes) {
        this.runPeriodInMinutes = runPeriodInMinutes;
        return this;
    }
    
    /**
     * The Unix epoch timestamp, in milliseconds, corresponding to the start of the last completed upgrade prechecks job instance.
     * 
     */
    @JsonProperty("startTime")
    public Long startTime;

    public PrecheckStatusResponse withStartTime(Long startTime) {
        this.startTime = startTime;
        return this;
    }
    
    public PrecheckStatusResponse(@JsonProperty("endTime") Long endTime, @JsonProperty("failureResults") PrecheckFailureResult[] failureResults, @JsonProperty("isOnDemand") Boolean isOnDemand, @JsonProperty("numPrechecksRun") Integer numPrechecksRun, @JsonProperty("runPeriodInMinutes") Integer runPeriodInMinutes, @JsonProperty("startTime") Long startTime) {
        this.endTime = endTime;
        this.failureResults = failureResults;
        this.isOnDemand = isOnDemand;
        this.numPrechecksRun = numPrechecksRun;
        this.runPeriodInMinutes = runPeriodInMinutes;
        this.startTime = startTime;
  }
}
