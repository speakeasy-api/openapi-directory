/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetNetworkSmUsersRequest extends SpeakeasyBase {
  /**
   * Filter users by email(s).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=emails",
  })
  emails?: string[];

  /**
   * Filter users by id(s).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=ids" })
  ids?: string[];

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  /**
   * Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=scope",
  })
  scope?: string[];

  /**
   * Filter users by username(s).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=usernames",
  })
  usernames?: string[];
}

export class GetNetworkSmUsers200ApplicationJSON extends SpeakeasyBase {
  /**
   * Active Directory Groups the user belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adGroups" })
  adGroups?: string[];

  /**
   * Apple School Manager Groups the user belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asmGroups" })
  asmGroups?: string[];

  /**
   * Azure Active Directory Groups the user belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "azureAdGroups" })
  azureAdGroups?: string[];

  /**
   * The user display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * User full name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullName" })
  fullName?: string;

  /**
   * A boolean indicating if the user has an associated identity certificate..
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasIdentityCertificate" })
  hasIdentityCertificate?: boolean;

  /**
   * A boolean denoting if the user has a password associated with the record.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasPassword" })
  hasPassword?: boolean;

  /**
   * The Meraki managed Id of the user record.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Whether the user was created using an external integration, or via the Meraki Dashboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isExternal" })
  isExternal?: boolean;

  /**
   * SAML Groups the user belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "samlGroups" })
  samlGroups?: string[];

  /**
   * The set of tags the user is scoped to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string;

  /**
   * The url where the users thumbnail is hosted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userThumbnail" })
  userThumbnail?: string;

  /**
   * The users username.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

export class GetNetworkSmUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({ elemType: GetNetworkSmUsers200ApplicationJSON })
  getNetworkSmUsers200ApplicationJSONObjects?: GetNetworkSmUsers200ApplicationJSON[];
}
