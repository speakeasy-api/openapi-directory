// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetBalanceHistoryV2Request struct {
	// Address or XPUB
	AddressOrXpub string `pathParam:"style=simple,explode=false,name=addressOrXpub"`
	// Blockchain name
	Blockchain string `pathParam:"style=simple,explode=false,name=blockchain"`
	// if specified, the response will contain secondary (fiat) rate at the time of transaction. If not, all available currencies will be returned
	Fiatcurrency *string `queryParam:"style=form,explode=true,name=fiatcurrency"`
	// specifies a start date as a Unix timestamp
	FromDate *string `queryParam:"style=form,explode=true,name=fromDate"`
	// an interval in seconds, to group results by. Default is 3600 seconds
	GroupBy *float64 `queryParam:"style=form,explode=true,name=groupBy"`
	// specifies an end date as a Unix timestamp
	ToDate *string `queryParam:"style=form,explode=true,name=toDate"`
}

type GetBalanceHistoryV2200ApplicationJSON struct {
	Rates      map[string]interface{} `json:"rates,omitempty"`
	Received   *string                `json:"received,omitempty"`
	Sent       *string                `json:"sent,omitempty"`
	SentToSelf *string                `json:"sentToSelf,omitempty"`
	Time       *int64                 `json:"time,omitempty"`
	Txs        *int64                 `json:"txs,omitempty"`
}

type GetBalanceHistoryV2Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetBalanceHistoryV2200ApplicationJSONObjects []GetBalanceHistoryV2200ApplicationJSON
}
