"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grafeasv1slsaprovenancezerotwoslsabuilder as shared_grafeasv1slsaprovenancezerotwoslsabuilder
from ..shared import grafeasv1slsaprovenancezerotwoslsainvocation as shared_grafeasv1slsaprovenancezerotwoslsainvocation
from ..shared import grafeasv1slsaprovenancezerotwoslsamaterial as shared_grafeasv1slsaprovenancezerotwoslsamaterial
from ..shared import grafeasv1slsaprovenancezerotwoslsametadata as shared_grafeasv1slsaprovenancezerotwoslsametadata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlsaProvenanceZeroTwo:
    r"""See full explanation of fields at slsa.dev/provenance/v0.2."""
    
    build_config: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildConfig'), 'exclude': lambda f: f is None }})  
    builder: Optional[shared_grafeasv1slsaprovenancezerotwoslsabuilder.GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('builder'), 'exclude': lambda f: f is None }})
    r"""Identifies the entity that executed the recipe, which is trusted to have correctly performed the operation and populated this provenance."""  
    build_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildType'), 'exclude': lambda f: f is None }})  
    invocation: Optional[shared_grafeasv1slsaprovenancezerotwoslsainvocation.GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invocation'), 'exclude': lambda f: f is None }})
    r"""Identifies the event that kicked off the build."""  
    materials: Optional[list[shared_grafeasv1slsaprovenancezerotwoslsamaterial.GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('materials'), 'exclude': lambda f: f is None }})  
    metadata: Optional[shared_grafeasv1slsaprovenancezerotwoslsametadata.GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Other properties of the build."""  
    