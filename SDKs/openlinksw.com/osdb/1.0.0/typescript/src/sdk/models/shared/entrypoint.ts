/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntryPointParameter } from "./entrypointparameter";
import { Expose, Type } from "class-transformer";

/**
 * The HTTP method used by the EntryPoint.
 */
export enum EntryPointHttpMethodEnum {
  Get = "GET",
  Put = "PUT",
  Post = "POST",
  Delete = "DELETE",
}

export class EntryPoint extends SpeakeasyBase {
  /**
   * The supported MIME type(s) for an EntryPoint response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content_types" })
  contentTypes: string[];

  /**
   * A short description of the action. Optional - may be null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The supported MIME type(s) for an EntryPoint request. Null if not applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encoding_types" })
  encodingTypes: string[];

  /**
   * The HTTP method used by the EntryPoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod: EntryPointHttpMethodEnum;

  /**
   * A word or short phrase to be used as the action's display name. Optional - may be null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Descriptions of the EntryPoint parameters. Null if not applicable.
   */
  @SpeakeasyMetadata({ elemType: EntryPointParameter })
  @Expose({ name: "parameters" })
  @Type(() => EntryPointParameter)
  parameters: EntryPointParameter[];

  /**
   * The EntryPoint URL. It will be non-null if url_template is null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  /**
   * The EntryPoint's URL template. Only required if the entry point URL is parameterized. Property 'url' will be null if url_template is non-null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url_template" })
  urlTemplate: string;
}
