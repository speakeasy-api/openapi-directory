"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FirebaseConfigFields:
    
    apn_template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apn_template') }})  
    data_template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_template') }})  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})  
    notification_template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notification_template') }})  
    credentials_json: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credentials_json'), 'exclude': lambda f: f is None }})  
    server_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('server_key'), 'exclude': lambda f: f is None }})  
    