/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SandboxTransferTestClockAdvanceRequest - Defines the request schema for `/sandbox/transfer/test_clock/advance`
 */
public class SandboxTransferTestClockAdvanceRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;

    public SandboxTransferTestClockAdvanceRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The virtual timestamp on the test clock. This will be of the form `2006-01-02T15:04:05Z`.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("new_virtual_time")
    public OffsetDateTime newVirtualTime;

    public SandboxTransferTestClockAdvanceRequest withNewVirtualTime(OffsetDateTime newVirtualTime) {
        this.newVirtualTime = newVirtualTime;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;

    public SandboxTransferTestClockAdvanceRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * Plaid\u2019s unique identifier for a test clock.
     */
    @JsonProperty("test_clock_id")
    public String testClockId;

    public SandboxTransferTestClockAdvanceRequest withTestClockId(String testClockId) {
        this.testClockId = testClockId;
        return this;
    }
    
    public SandboxTransferTestClockAdvanceRequest(@JsonProperty("new_virtual_time") OffsetDateTime newVirtualTime, @JsonProperty("test_clock_id") String testClockId) {
        this.newVirtualTime = newVirtualTime;
        this.testClockId = testClockId;
  }
}
