"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import organization_invitation as shared_organization_invitation
from ..shared import validation_error as shared_validation_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OrgsCreateInvitationRequestBodyRoleEnum(str, Enum):
    r"""The role for the new member.
     * `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  
     * `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  
     * `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.
    """
    ADMIN = 'admin'
    DIRECT_MEMBER = 'direct_member'
    BILLING_MANAGER = 'billing_manager'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrgsCreateInvitationRequestBody:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""**Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user."""  
    invitee_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invitee_id'), 'exclude': lambda f: f is None }})
    r"""**Required unless you provide `email`**. GitHub user ID for the person you are inviting."""  
    role: Optional[OrgsCreateInvitationRequestBodyRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""The role for the new member.
     * `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.  
     * `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.  
     * `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.
    """  
    team_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('team_ids'), 'exclude': lambda f: f is None }})
    r"""Specify IDs for the teams you want to invite new members to."""  
    

@dataclasses.dataclass
class OrgsCreateInvitationRequest:
    
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})
    r"""The organization name. The name is not case sensitive."""  
    request_body: Optional[OrgsCreateInvitationRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class OrgsCreateInvitationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Resource not found"""  
    organization_invitation: Optional[shared_organization_invitation.OrganizationInvitation] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed, or the endpoint has been spammed."""  
    