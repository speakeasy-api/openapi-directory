<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class MirrorTimelineListRequest
{
    /**
     * Data format for the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * If provided, only items with the given bundleId will be returned.
     * 
     * @var ?string $bundleId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=bundleId')]
    public ?string $bundleId = null;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * If true, tombstone records for deleted items will be returned.
     * 
     * @var ?bool $includeDeleted
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeDeleted')]
    public ?bool $includeDeleted = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * The maximum number of items to include in the response, used for paging.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=maxResults')]
    public ?int $maxResults = null;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
    /**
     * Controls the order in which timeline items are returned.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\MirrorTimelineListOrderByEnum $orderBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=orderBy')]
    public ?MirrorTimelineListOrderByEnum $orderBy = null;
    
    /**
     * Token for the page of results to return.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageToken')]
    public ?string $pageToken = null;
    
    /**
     * If true, only pinned items will be returned.
     * 
     * @var ?bool $pinnedOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pinnedOnly')]
    public ?bool $pinnedOnly = null;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * If provided, only items with the given sourceItemId will be returned.
     * 
     * @var ?string $sourceItemId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sourceItemId')]
    public ?string $sourceItemId = null;
    
    /**
     * Deprecated. Please use quotaUser instead.
     * 
     * @var ?string $userIp
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userIp')]
    public ?string $userIp = null;
    
	public function __construct()
	{
		$this->alt = null;
		$this->bundleId = null;
		$this->fields = null;
		$this->includeDeleted = null;
		$this->key = null;
		$this->maxResults = null;
		$this->oauthToken = null;
		$this->orderBy = null;
		$this->pageToken = null;
		$this->pinnedOnly = null;
		$this->prettyPrint = null;
		$this->quotaUser = null;
		$this->sourceItemId = null;
		$this->userIp = null;
	}
}
