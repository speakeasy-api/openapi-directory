"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import content_newsarticlerssresponse as shared_content_newsarticlerssresponse
from typing import Optional


@dataclasses.dataclass
class ContentRssNewsArticlesRequest:
    
    page_token: str = dataclasses.field(metadata={'path_param': { 'field_name': 'pageToken', 'style': 'simple', 'explode': False }})
    r"""Zero-based pagination token for paging through result sets."""  
    categoryfilter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'categoryfilter', 'style': 'form', 'explode': True }})
    r"""Optionally filter response to only include news items in a certain category."""  
    includebody: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includebody', 'style': 'form', 'explode': True }})
    r"""Optionally include full content body for each news item."""  
    

@dataclasses.dataclass
class ContentRssNewsArticles200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[shared_content_newsarticlerssresponse.ContentNewsArticleRssResponse] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ContentRssNewsArticlesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    