/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EntityMapping - Details of the mappings of a database entity.
 */
public class EntityMapping {
    /**
     * Target entity full name. The draft entity can also include a column, index or constraint using the same naming notation schema.table.column.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("draftEntity")
    public String draftEntity;
    public EntityMapping withDraftEntity(String draftEntity) {
        this.draftEntity = draftEntity;
        return this;
    }
    
    /**
     * Entity mapping log entries. Multiple rules can be effective and contribute changes to a converted entity, such as a rule can handle the entity name, another rule can handle an entity type. In addition, rules which did not change the entity are also logged along with the reason preventing them to do so.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mappingLog")
    public EntityMappingLogEntry[] mappingLog;
    public EntityMapping withMappingLog(EntityMappingLogEntry[] mappingLog) {
        this.mappingLog = mappingLog;
        return this;
    }
    
    /**
     * Source entity full name. The source entity can also be a column, index or constraint using the same naming notation schema.table.column.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceEntity")
    public String sourceEntity;
    public EntityMapping withSourceEntity(String sourceEntity) {
        this.sourceEntity = sourceEntity;
        return this;
    }
    
}
