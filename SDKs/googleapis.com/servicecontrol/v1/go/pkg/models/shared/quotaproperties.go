// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QuotaPropertiesQuotaModeEnum - Quota mode for this operation.
type QuotaPropertiesQuotaModeEnum string

const (
	QuotaPropertiesQuotaModeEnumAcquire           QuotaPropertiesQuotaModeEnum = "ACQUIRE"
	QuotaPropertiesQuotaModeEnumAcquireBestEffort QuotaPropertiesQuotaModeEnum = "ACQUIRE_BEST_EFFORT"
	QuotaPropertiesQuotaModeEnumCheck             QuotaPropertiesQuotaModeEnum = "CHECK"
)

func (e QuotaPropertiesQuotaModeEnum) ToPointer() *QuotaPropertiesQuotaModeEnum {
	return &e
}

func (e *QuotaPropertiesQuotaModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACQUIRE":
		fallthrough
	case "ACQUIRE_BEST_EFFORT":
		fallthrough
	case "CHECK":
		*e = QuotaPropertiesQuotaModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QuotaPropertiesQuotaModeEnum: %v", v)
	}
}

// QuotaProperties - Represents the properties needed for quota operations.
type QuotaProperties struct {
	// Quota mode for this operation.
	QuotaMode *QuotaPropertiesQuotaModeEnum `json:"quotaMode,omitempty"`
}
