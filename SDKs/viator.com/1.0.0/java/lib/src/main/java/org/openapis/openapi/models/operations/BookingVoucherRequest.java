/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class BookingVoucherRequest {
    /**
     * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Accept-Language")
    public String acceptLanguage;
    public BookingVoucherRequest withAcceptLanguage(String acceptLanguage) {
        this.acceptLanguage = acceptLanguage;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=embeddedResources")
    public Boolean embeddedResources;
    public BookingVoucherRequest withEmbeddedResources(Boolean embeddedResources) {
        this.embeddedResources = embeddedResources;
        return this;
    }
    
    /**
     * **specifier**:
     * - set to `true` if you wish to retrieve the full HTML-formatted voucher
     * - set to `false` if you want the div fragment (optional)
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fullHTML")
    public Boolean fullHTML;
    public BookingVoucherRequest withFullHTML(Boolean fullHTML) {
        this.fullHTML = fullHTML;
        return this;
    }
    
    /**
     * Booking-reference number generated by Viator
     * 
     *   - **Note**: For more information, see: [Booking references](#section/Key-concepts/Booking-references)
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=itemId")
    public Long itemId;
    public BookingVoucherRequest withItemId(Long itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * **surname** of *this* lead traveler
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=leadLastName")
    public String leadLastName;
    public BookingVoucherRequest withLeadLastName(String leadLastName) {
        this.leadLastName = leadLastName;
        return this;
    }
    
    /**
     * **specifier**: 
     * - if set to `true`, the service returns the mobile (cut down) HTML-formatted voucher
     * - if `false` the full voucher HTML is returned (ignoring `fullHTML`)
     * - default: `true` 
     * - this field should only be enabled for products that have a `voucherOption` of `'VOUCHER_E'`
     * - do not enable `mobileVouchers` for paper vouchers (`voucherOption` of `'VOUCHER_PAPER_ONLY'`) as no barcode is returned
     * - the voucher information is available in the response from [/product](#operation/product), [/booking/book](#operation/bookingBook), [/booking/pastbooking](#operation/bookingPastbooking), [/booking/mybookings](#operation/bookingMybookings) (it is also displayed under the 'Redemption Info' heading in this service)
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=mobileVoucher")
    public Boolean mobileVoucher;
    public BookingVoucherRequest withMobileVoucher(Boolean mobileVoucher) {
        this.mobileVoucher = mobileVoucher;
        return this;
    }
    
    /**
     * **identifier** for the voucher
     * - **note**: use &amp;lt;u&amp;gt;either&amp;lt;/u&amp;gt; `voucherKey` &amp;lt;u&amp;gt;or&amp;lt;/u&amp;gt; the three separate parameters
     * - if `voucherKey` is provided as well as the other parameters, then `voucherKey` overrides the other paramaters
     * - `voucherKey` is obtained from [/booking/mybookings](#operation/bookingMybookings) or in the response from [/booking/book](#operation/bookingBook) when you make a booking
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=voucherKey")
    public String voucherKey;
    public BookingVoucherRequest withVoucherKey(String voucherKey) {
        this.voucherKey = voucherKey;
        return this;
    }
    
}
