/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ErrorsGroupErrorFreeDevicePercentagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class ErrorsGroupErrorFreeDevicePercentagesRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * Last date time in data in ISO 8601 date time format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  end?: Date;

  /**
   * The id of the error group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=errorGroupId",
  })
  errorGroupId: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * Start date time in data in ISO 8601 date time format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  start: Date;
}

export enum ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error code with reason
 */
export class ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSONError)
  error: ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSONError;
}

export class ErrorsGroupErrorFreeDevicePercentages200ApplicationJSONDailyPercentages extends SpeakeasyBase {
  /**
   * the ISO 8601 datetime
   */
  @SpeakeasyMetadata()
  @Expose({ name: "datetime" })
  datetime?: string;

  /**
   * percentage of the object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "percentage" })
  percentage?: number;
}

/**
 * Percentage of error-free devices by day in the time range and overall percentage of the time range.
 */
export class ErrorsGroupErrorFreeDevicePercentages200ApplicationJSON extends SpeakeasyBase {
  /**
   * Average percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "averagePercentage" })
  averagePercentage?: number;

  /**
   * The error-free percentage per day.
   */
  @SpeakeasyMetadata({
    elemType:
      ErrorsGroupErrorFreeDevicePercentages200ApplicationJSONDailyPercentages,
  })
  @Expose({ name: "dailyPercentages" })
  @Type(
    () =>
      ErrorsGroupErrorFreeDevicePercentages200ApplicationJSONDailyPercentages
  )
  dailyPercentages?: ErrorsGroupErrorFreeDevicePercentages200ApplicationJSONDailyPercentages[];
}

export class ErrorsGroupErrorFreeDevicePercentagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Percentage of error-free devices by day in the time range and overall percentage of the time range.
   */
  @SpeakeasyMetadata()
  errorsGroupErrorFreeDevicePercentages200ApplicationJSONObject?: ErrorsGroupErrorFreeDevicePercentages200ApplicationJSON;

  /**
   * Error code with reason
   */
  @SpeakeasyMetadata()
  errorsGroupErrorFreeDevicePercentagesDefaultApplicationJSONObject?: ErrorsGroupErrorFreeDevicePercentagesDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
