"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferencesStateEnum(str, Enum):
    r"""The state of the prefix list reference."""
    PENDING = 'pending'
    AVAILABLE = 'available'
    MODIFYING = 'modifying'
    DELETING = 'deleting'

class GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferencesTransitGatewayAttachmentResourceTypeEnum(str, Enum):
    r"""The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated."""
    VPC = 'vpc'
    VPN = 'vpn'
    DIRECT_CONNECT_GATEWAY = 'direct-connect-gateway'
    CONNECT = 'connect'
    PEERING = 'peering'
    TGW_PEERING = 'tgw-peering'


@dataclasses.dataclass
class GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferencesTransitGatewayAttachment:
    r"""Information about the transit gateway attachment."""
    
    resource_id: Optional[str] = dataclasses.field(default=None)  
    resource_type: Optional[GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferencesTransitGatewayAttachmentResourceTypeEnum] = dataclasses.field(default=None)  
    transit_gateway_attachment_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferences:
    r"""Describes a prefix list reference."""
    
    blackhole: Optional[bool] = dataclasses.field(default=None)  
    prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    prefix_list_owner_id: Optional[str] = dataclasses.field(default=None)  
    state: Optional[GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferencesStateEnum] = dataclasses.field(default=None)  
    transit_gateway_attachment: Optional[GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferencesTransitGatewayAttachment] = dataclasses.field(default=None)  
    transit_gateway_route_table_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class GetTransitGatewayPrefixListReferencesResult:
    r"""Success"""
    
    next_token: Optional[str] = dataclasses.field(default=None)  
    transit_gateway_prefix_list_references: Optional[list[GetTransitGatewayPrefixListReferencesResultTransitGatewayPrefixListReferences]] = dataclasses.field(default=None)  
    