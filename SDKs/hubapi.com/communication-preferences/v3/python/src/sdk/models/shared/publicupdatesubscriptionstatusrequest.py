"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PublicUpdateSubscriptionStatusRequestLegalBasisEnum(str, Enum):
    r"""Legal basis for updating the contact's status (required for GDPR enabled portals)."""
    LEGITIMATE_INTEREST_PQL = 'LEGITIMATE_INTEREST_PQL'
    LEGITIMATE_INTEREST_CLIENT = 'LEGITIMATE_INTEREST_CLIENT'
    PERFORMANCE_OF_CONTRACT = 'PERFORMANCE_OF_CONTRACT'
    CONSENT_WITH_NOTICE = 'CONSENT_WITH_NOTICE'
    NON_GDPR = 'NON_GDPR'
    PROCESS_AND_STORE = 'PROCESS_AND_STORE'
    LEGITIMATE_INTEREST_OTHER = 'LEGITIMATE_INTEREST_OTHER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PublicUpdateSubscriptionStatusRequest:
    r"""A request to change the status of a contact's subscription."""
    
    email_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAddress') }})
    r"""Contact's email address."""  
    subscription_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptionId') }})
    r"""ID of the subscription being updated for the contact."""  
    legal_basis: Optional[PublicUpdateSubscriptionStatusRequestLegalBasisEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalBasis'), 'exclude': lambda f: f is None }})
    r"""Legal basis for updating the contact's status (required for GDPR enabled portals)."""  
    legal_basis_explanation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('legalBasisExplanation'), 'exclude': lambda f: f is None }})
    r"""A more detailed explanation to go with the legal basis (required for GDPR enabled portals)."""  
    