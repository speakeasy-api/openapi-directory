/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The rights of the current user on a score or collection
 */
export class ResourceRights extends SpeakeasyBase {
  /**
   * `True` if the current user can manage the current document (i.e. share, delete)
   *
   * @remarks
   *
   * If this is a right of a Collection, the capabilities of the associated user can be lower than this permission, check out the `capabilities` property as the end-user to have the complete possibilities with the collection.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aclAdmin" })
  aclAdmin?: boolean;

  /**
   * `True` if the current user can read the current document
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aclRead" })
  aclRead?: boolean;

  /**
   * `True` if the current user can modify the current document.
   *
   * @remarks
   *
   * If this is a right of a Collection, the capabilities of the associated user can be lower than this permission, check out the `capabilities` property as the end-user to have the complete possibilities with the collection.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aclWrite" })
  aclWrite?: boolean;

  /**
   * `True` if the current user is a collaborator of the current document (direct or via group).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCollaborator" })
  isCollaborator?: boolean;
}
