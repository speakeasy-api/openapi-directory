"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import freelistingsprogramstatusregionstatus as shared_freelistingsprogramstatusregionstatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FreeListingsProgramStatusGlobalStateEnum(str, Enum):
    r"""State of the program. `ENABLED` if there are offers for at least one region."""
    PROGRAM_STATE_UNSPECIFIED = 'PROGRAM_STATE_UNSPECIFIED'
    NOT_ENABLED = 'NOT_ENABLED'
    NO_OFFERS_UPLOADED = 'NO_OFFERS_UPLOADED'
    ENABLED = 'ENABLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FreeListingsProgramStatus:
    r"""Response message for GetFreeListingsProgramStatus."""
    
    global_state: Optional[FreeListingsProgramStatusGlobalStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('globalState'), 'exclude': lambda f: f is None }})
    r"""State of the program. `ENABLED` if there are offers for at least one region."""  
    region_statuses: Optional[list[shared_freelistingsprogramstatusregionstatus.FreeListingsProgramStatusRegionStatus]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regionStatuses'), 'exclude': lambda f: f is None }})
    r"""Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`."""  
    