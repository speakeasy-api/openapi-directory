// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreatePlayerSessionsXAmzTargetEnum
type CreatePlayerSessionsXAmzTargetEnum string

const (
	CreatePlayerSessionsXAmzTargetEnumGameLiftCreatePlayerSessions CreatePlayerSessionsXAmzTargetEnum = "GameLift.CreatePlayerSessions"
)

func (e *CreatePlayerSessionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GameLift.CreatePlayerSessions":
		*e = CreatePlayerSessionsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePlayerSessionsXAmzTargetEnum: %s", s)
	}
}

type CreatePlayerSessionsHeaders struct {
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreatePlayerSessionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreatePlayerSessionsRequest struct {
	Headers CreatePlayerSessionsHeaders
	Request shared.CreatePlayerSessionsInput `request:"mediaType=application/json"`
}

type CreatePlayerSessionsResponse struct {
	ContentType string
	// Success
	CreatePlayerSessionsOutput *shared.CreatePlayerSessionsOutput
	// GameSessionFullException
	GameSessionFullException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidGameSessionStatusException
	InvalidGameSessionStatusException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TerminalRoutingStrategyException
	TerminalRoutingStrategyException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
