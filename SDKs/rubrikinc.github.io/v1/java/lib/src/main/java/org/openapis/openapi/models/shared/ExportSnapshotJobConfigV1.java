/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExportSnapshotJobConfigV1 - Configuration for the export request.
 */
public class ExportSnapshotJobConfigV1 {
    /**
     * ID of the datastore to assign to the exported virtual machine.
     */
    @JsonProperty("datastoreId")
    public String datastoreId;

    public ExportSnapshotJobConfigV1 withDatastoreId(String datastoreId) {
        this.datastoreId = datastoreId;
        return this;
    }
    
    /**
     * Sets the state of the network interfaces when the virtual machine is mounted or exported. Use 'false' to enable the network interfaces. Use 'true' to disable the network interfaces. Disabling the interfaces can prevent IP conflicts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableNetwork")
    public Boolean disableNetwork;

    public ExportSnapshotJobConfigV1 withDisableNetwork(Boolean disableNetwork) {
        this.disableNetwork = disableNetwork;
        return this;
    }
    
    /**
     * ID of the ESXi host to export the new virtual machine to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostId")
    public String hostId;

    public ExportSnapshotJobConfigV1 withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * Determines whether the MAC addresses of the network interfaces on the source virtual machine are assigned to the new virtual machine. Set to 'true' to assign the original MAC addresses to the new virtual machine. Set to 'false' to assign new MAC addresses. The default is 'false'. When removeNetworkDevices is set to true, this property is ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keepMacAddresses")
    public Boolean keepMacAddresses;

    public ExportSnapshotJobConfigV1 withKeepMacAddresses(Boolean keepMacAddresses) {
        this.keepMacAddresses = keepMacAddresses;
        return this;
    }
    
    /**
     * Determines whether the virtual machine should be powered on after mount or export. Set to 'true' to power on the virtual machine. Set to 'false' to mount or export the virtual machine but not power it on. The default is 'true'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerOn")
    public Boolean powerOn;

    public ExportSnapshotJobConfigV1 withPowerOn(Boolean powerOn) {
        this.powerOn = powerOn;
        return this;
    }
    
    /**
     * Determines whether to remove the network interfaces from the mounted or exported virtual machine. Set to 'true' to remove all network interfaces. The default value is 'false'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removeNetworkDevices")
    public Boolean removeNetworkDevices;

    public ExportSnapshotJobConfigV1 withRemoveNetworkDevices(Boolean removeNetworkDevices) {
        this.removeNetworkDevices = removeNetworkDevices;
        return this;
    }
    
    /**
     * The job recovers any tags that were assigned to the virtual machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shouldRecoverTags")
    public Boolean shouldRecoverTags;

    public ExportSnapshotJobConfigV1 withShouldRecoverTags(Boolean shouldRecoverTags) {
        this.shouldRecoverTags = shouldRecoverTags;
        return this;
    }
    
    /**
     * Determines whether the new virtual machine created from a snapshot is registered with the vCenter Server. Use 'true' to remove the registration from vCenter Server. Use 'false' to keep the registration with the vCenter Server. The default is 'false'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unregisterVm")
    public Boolean unregisterVm;

    public ExportSnapshotJobConfigV1 withUnregisterVm(Boolean unregisterVm) {
        this.unregisterVm = unregisterVm;
        return this;
    }
    
    /**
     * Name of the new VM created by mount or export.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmName")
    public String vmName;

    public ExportSnapshotJobConfigV1 withVmName(String vmName) {
        this.vmName = vmName;
        return this;
    }
    
    public ExportSnapshotJobConfigV1(@JsonProperty("datastoreId") String datastoreId) {
        this.datastoreId = datastoreId;
  }
}
