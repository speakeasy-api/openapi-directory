// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeploymentStatusEnum string

const (
	DeploymentStatusEnumCreated    DeploymentStatusEnum = "Created"
	DeploymentStatusEnumQueued     DeploymentStatusEnum = "Queued"
	DeploymentStatusEnumInProgress DeploymentStatusEnum = "InProgress"
	DeploymentStatusEnumBaking     DeploymentStatusEnum = "Baking"
	DeploymentStatusEnumSucceeded  DeploymentStatusEnum = "Succeeded"
	DeploymentStatusEnumFailed     DeploymentStatusEnum = "Failed"
	DeploymentStatusEnumStopped    DeploymentStatusEnum = "Stopped"
	DeploymentStatusEnumReady      DeploymentStatusEnum = "Ready"
)

func (e *DeploymentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Created":
		fallthrough
	case "Queued":
		fallthrough
	case "InProgress":
		fallthrough
	case "Baking":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		fallthrough
	case "Stopped":
		fallthrough
	case "Ready":
		*e = DeploymentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeploymentStatusEnum: %s", s)
	}
}
