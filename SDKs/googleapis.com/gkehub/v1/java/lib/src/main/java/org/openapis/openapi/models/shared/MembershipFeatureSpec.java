/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MembershipFeatureSpec - MembershipFeatureSpec contains configuration information for a single Membership.
 */
public class MembershipFeatureSpec {
    /**
     * **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configmanagement")
    public ConfigManagementMembershipSpec configmanagement;

    public MembershipFeatureSpec withConfigmanagement(ConfigManagementMembershipSpec configmanagement) {
        this.configmanagement = configmanagement;
        return this;
    }
    
    /**
     * True if value of `feature_spec` was inherited from a fleet-level default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fleetInherited")
    public Boolean fleetInherited;

    public MembershipFeatureSpec withFleetInherited(Boolean fleetInherited) {
        this.fleetInherited = fleetInherited;
        return this;
    }
    
    /**
     * **FleetObservability**: The membership-specific input for FleetObservability feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fleetobservability")
    public java.util.Map<String, Object> fleetobservability;

    public MembershipFeatureSpec withFleetobservability(java.util.Map<String, Object> fleetobservability) {
        this.fleetobservability = fleetobservability;
        return this;
    }
    
    /**
     * **Anthos Identity Service**: Configuration for a single Membership.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityservice")
    public IdentityServiceMembershipSpec identityservice;

    public MembershipFeatureSpec withIdentityservice(IdentityServiceMembershipSpec identityservice) {
        this.identityservice = identityservice;
        return this;
    }
    
    /**
     * **Service Mesh**: Spec for a single Membership for the servicemesh feature
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mesh")
    public ServiceMeshMembershipSpec mesh;

    public MembershipFeatureSpec withMesh(ServiceMeshMembershipSpec mesh) {
        this.mesh = mesh;
        return this;
    }
    
    public MembershipFeatureSpec(){}
}
