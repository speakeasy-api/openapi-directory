"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsJobInstructionDpsJobInstructionEmployer:
    r"""The dps job instructions' employer"""
    
    at_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@href'), 'exclude': lambda f: f is None }})
    r"""The links' href"""  
    at_rel: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@rel'), 'exclude': lambda f: f is None }})
    r"""The links' target type"""  
    at_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@title'), 'exclude': lambda f: f is None }})
    r"""The links' title"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsJobInstructionDpsJobInstructionType:
    r"""The dps job instructions' message types"""
    
    type: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsJobInstructionDpsJobInstructionMessageMessage:
    
    at_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@href'), 'exclude': lambda f: f is None }})
    r"""The links' href"""  
    at_rel: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@rel'), 'exclude': lambda f: f is None }})
    r"""The links' target type"""  
    at_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@title'), 'exclude': lambda f: f is None }})
    r"""The links' title"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsJobInstructionDpsJobInstructionMessage:
    r"""The dps job instructions' messages to process"""
    
    message: Optional[list[DpsJobInstructionDpsJobInstructionMessageMessage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Message'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsJobInstructionDpsJobInstruction:
    
    apply: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Apply'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' apply"""  
    employer: Optional[DpsJobInstructionDpsJobInstructionEmployer] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Employer'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' employer"""  
    from_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FromDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' from date"""  
    holding_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HoldingDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' holding date"""  
    messages_to_process: Optional[DpsJobInstructionDpsJobInstructionMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MessagesToProcess'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' messages to process"""  
    message_types: Optional[DpsJobInstructionDpsJobInstructionType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MessageTypes'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' message types"""  
    retrieve: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Retrieve'), 'exclude': lambda f: f is None }})
    r"""The dps job instructions' retrieve"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DpsJobInstruction:
    r"""The the DPS job instruction object."""
    
    dps_job_instruction: Optional[DpsJobInstructionDpsJobInstruction] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DpsJobInstruction'), 'exclude': lambda f: f is None }})  
    