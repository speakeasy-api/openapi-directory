"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import quotastatus as shared_quotastatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PropertyQuota:
    r"""Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors."""
    
    concurrent_requests: Optional[shared_quotastatus.QuotaStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('concurrentRequests'), 'exclude': lambda f: f is None }})
    r"""Current state for a particular quota group."""  
    potentially_thresholded_requests_per_hour: Optional[shared_quotastatus.QuotaStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('potentiallyThresholdedRequestsPerHour'), 'exclude': lambda f: f is None }})
    r"""Current state for a particular quota group."""  
    server_errors_per_project_per_hour: Optional[shared_quotastatus.QuotaStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverErrorsPerProjectPerHour'), 'exclude': lambda f: f is None }})
    r"""Current state for a particular quota group."""  
    tokens_per_day: Optional[shared_quotastatus.QuotaStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokensPerDay'), 'exclude': lambda f: f is None }})
    r"""Current state for a particular quota group."""  
    tokens_per_hour: Optional[shared_quotastatus.QuotaStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokensPerHour'), 'exclude': lambda f: f is None }})
    r"""Current state for a particular quota group."""  
    tokens_per_project_per_hour: Optional[shared_quotastatus.QuotaStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokensPerProjectPerHour'), 'exclude': lambda f: f is None }})
    r"""Current state for a particular quota group."""  
    