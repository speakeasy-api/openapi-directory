/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * JSON template for address of a customer.
 */
export class Address extends SpeakeasyBase {
  /**
   * A customer's physical address. An address can be composed of one to three lines. The `addressline2` and `addressLine3` are optional.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLine1" })
  addressLine1?: string;

  /**
   * Line 2 of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLine2" })
  addressLine2?: string;

  /**
   * Line 3 of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLine3" })
  addressLine3?: string;

  /**
   * The customer contact's name. This is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactName" })
  contactName?: string;

  /**
   * For `countryCode` information, see the ISO 3166 country code elements. Verify that country is approved for resale of Google products. This property is required when creating a new customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countryCode" })
  countryCode?: string;

  /**
   * Identifies the resource as a customer address. Value: `customers#address`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * An example of a `locality` value is the city of `San Francisco`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locality" })
  locality?: string;

  /**
   * The company or company division name. This is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organizationName" })
  organizationName?: string;

  /**
   * A `postalCode` example is a postal zip code such as `94043`. This property is required when creating a new customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode?: string;

  /**
   * An example of a `region` value is `CA` for the state of California.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;
}
