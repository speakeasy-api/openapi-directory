/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostSpinsRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=artist" })
  artist: string;

  @SpeakeasyMetadata({ data: "form, name=composer" })
  composer?: string;

  @SpeakeasyMetadata({ data: "form, name=duration" })
  duration?: number;

  @SpeakeasyMetadata({ data: "form, name=genre" })
  genre?: string;

  @SpeakeasyMetadata({ data: "form, name=isrc" })
  isrc?: string;

  @SpeakeasyMetadata({ data: "form, name=label" })
  label?: string;

  /**
   * Only when automation params are configured with the "Pass through" mode.
   *
   * @remarks
   * Enables "live assist" mode. Default mode is "full automation".
   *
   */
  @SpeakeasyMetadata({ data: "form, name=live" })
  live?: boolean;

  @SpeakeasyMetadata({ data: "form, name=release" })
  release?: string;

  @SpeakeasyMetadata({ data: "form, name=song" })
  song: string;

  @SpeakeasyMetadata({
    data: "form, name=start;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  start?: Date;
}

export class PostSpinsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Failed to create the object for unknown reason.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * The new created Spin.
   */
  @SpeakeasyMetadata()
  spin?: shared.Spin;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Validation failed.
   */
  @SpeakeasyMetadata({ elemType: shared.ValidationError })
  validationErrors?: shared.ValidationError[];
}
