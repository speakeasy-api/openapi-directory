// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateAuthorIfNotExistsForUsingPOSTRequest struct {
	AuthorMapper *string `queryParam:"style=form,explode=true,name=authorMapper"`
	Name         *string `queryParam:"style=form,explode=true,name=name"`
}

// CreateAuthorIfNotExistsForUsingPOST500ApplicationJSON - internal api error (code 2)
type CreateAuthorIfNotExistsForUsingPOST500ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// CreateAuthorIfNotExistsForUsingPOST401ApplicationJSON - no or wrong API key (code 4)
type CreateAuthorIfNotExistsForUsingPOST401ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// CreateAuthorIfNotExistsForUsingPOST400ApplicationJSON - generic api error (code 1)
type CreateAuthorIfNotExistsForUsingPOST400ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

type CreateAuthorIfNotExistsForUsingPOST200ApplicationJSONData struct {
	AuthorID *string `json:"authorID,omitempty"`
}

// CreateAuthorIfNotExistsForUsingPOST200ApplicationJSON - ok (code 0)
type CreateAuthorIfNotExistsForUsingPOST200ApplicationJSON struct {
	Code    *int64                                                     `json:"code,omitempty"`
	Data    *CreateAuthorIfNotExistsForUsingPOST200ApplicationJSONData `json:"data,omitempty"`
	Message *string                                                    `json:"message,omitempty"`
}

type CreateAuthorIfNotExistsForUsingPOSTResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ok (code 0)
	CreateAuthorIfNotExistsForUsingPOST200ApplicationJSONObject *CreateAuthorIfNotExistsForUsingPOST200ApplicationJSON
	// generic api error (code 1)
	CreateAuthorIfNotExistsForUsingPOST400ApplicationJSONObject *CreateAuthorIfNotExistsForUsingPOST400ApplicationJSON
	// no or wrong API key (code 4)
	CreateAuthorIfNotExistsForUsingPOST401ApplicationJSONObject *CreateAuthorIfNotExistsForUsingPOST401ApplicationJSON
	// internal api error (code 2)
	CreateAuthorIfNotExistsForUsingPOST500ApplicationJSONObject *CreateAuthorIfNotExistsForUsingPOST500ApplicationJSON
}
