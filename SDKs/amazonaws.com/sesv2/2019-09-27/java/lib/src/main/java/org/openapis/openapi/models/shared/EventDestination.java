/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventDestination - In the Amazon SES API v2, &lt;i&gt;events&lt;/i&gt; include message sends, deliveries, opens, clicks, bounces, complaints and delivery delays. &lt;i&gt;Event destinations&lt;/i&gt; are places that you can send information about these events to. For example, you can send event data to Amazon SNS to receive notifications when you receive bounces or complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.
 */
public class EventDestination {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CloudWatchDestination")
    public CloudWatchDestination cloudWatchDestination;

    public EventDestination withCloudWatchDestination(CloudWatchDestination cloudWatchDestination) {
        this.cloudWatchDestination = cloudWatchDestination;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Enabled")
    public Boolean enabled;

    public EventDestination withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KinesisFirehoseDestination")
    public KinesisFirehoseDestination kinesisFirehoseDestination;

    public EventDestination withKinesisFirehoseDestination(KinesisFirehoseDestination kinesisFirehoseDestination) {
        this.kinesisFirehoseDestination = kinesisFirehoseDestination;
        return this;
    }
    
    @JsonProperty("MatchingEventTypes")
    public EventTypeEnum[] matchingEventTypes;

    public EventDestination withMatchingEventTypes(EventTypeEnum[] matchingEventTypes) {
        this.matchingEventTypes = matchingEventTypes;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public EventDestination withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PinpointDestination")
    public PinpointDestination pinpointDestination;

    public EventDestination withPinpointDestination(PinpointDestination pinpointDestination) {
        this.pinpointDestination = pinpointDestination;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnsDestination")
    public SnsDestination snsDestination;

    public EventDestination withSnsDestination(SnsDestination snsDestination) {
        this.snsDestination = snsDestination;
        return this;
    }
    
    public EventDestination(@JsonProperty("MatchingEventTypes") EventTypeEnum[] matchingEventTypes, @JsonProperty("Name") String name) {
        this.matchingEventTypes = matchingEventTypes;
        this.name = name;
  }
}
