// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum - Indicates whether the NAT gateway supports public or private connectivity.
type DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum string

const (
	DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnumPrivate DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum = "private"
	DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnumPublic  DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum = "public"
)

func (e DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum) ToPointer() *DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum {
	return &e
}

func (e *DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "public":
		*e = DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum: %v", v)
	}
}

// DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum - The address status.
type DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum string

const (
	DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnumAssigning      DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum = "assigning"
	DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnumUnassigning    DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum = "unassigning"
	DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnumAssociating    DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum = "associating"
	DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnumDisassociating DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum = "disassociating"
	DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnumSucceeded      DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum = "succeeded"
	DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnumFailed         DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum = "failed"
)

func (e DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum) ToPointer() *DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum {
	return &e
}

func (e *DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "assigning":
		fallthrough
	case "unassigning":
		fallthrough
	case "associating":
		fallthrough
	case "disassociating":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		*e = DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum: %v", v)
	}
}

// DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses - Describes the IP addresses and network interface associated with a NAT gateway.
type DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses struct {
	AllocationID       *string
	AssociationID      *string
	FailureMessage     *string
	IsPrimary          *bool
	NetworkInterfaceID *string
	PrivateIP          *string
	PublicIP           *string
	Status             *DescribeNatGatewaysResultNatGatewaysNatGatewayAddressesStatusEnum
}

// DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth - Reserved. If you need to sustain traffic greater than the <a href="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway.html">documented limits</a>, contact us through the <a href="https://console.aws.amazon.com/support/home?">Support Center</a>.
type DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth struct {
	ProvisionTime *time.Time
	Provisioned   *string
	RequestTime   *time.Time
	Requested     *string
	Status        *string
}

// DescribeNatGatewaysResultNatGatewaysStateEnum - <p>The state of the NAT gateway.</p> <ul> <li> <p> <code>pending</code>: The NAT gateway is being created and is not ready to process traffic.</p> </li> <li> <p> <code>failed</code>: The NAT gateway could not be created. Check the <code>failureCode</code> and <code>failureMessage</code> fields for the reason.</p> </li> <li> <p> <code>available</code>: The NAT gateway is able to process traffic. This status remains until you delete the NAT gateway, and does not indicate the health of the NAT gateway.</p> </li> <li> <p> <code>deleting</code>: The NAT gateway is in the process of being terminated and may still be processing traffic.</p> </li> <li> <p> <code>deleted</code>: The NAT gateway has been terminated and is no longer processing traffic.</p> </li> </ul>
type DescribeNatGatewaysResultNatGatewaysStateEnum string

const (
	DescribeNatGatewaysResultNatGatewaysStateEnumPending   DescribeNatGatewaysResultNatGatewaysStateEnum = "pending"
	DescribeNatGatewaysResultNatGatewaysStateEnumFailed    DescribeNatGatewaysResultNatGatewaysStateEnum = "failed"
	DescribeNatGatewaysResultNatGatewaysStateEnumAvailable DescribeNatGatewaysResultNatGatewaysStateEnum = "available"
	DescribeNatGatewaysResultNatGatewaysStateEnumDeleting  DescribeNatGatewaysResultNatGatewaysStateEnum = "deleting"
	DescribeNatGatewaysResultNatGatewaysStateEnumDeleted   DescribeNatGatewaysResultNatGatewaysStateEnum = "deleted"
)

func (e DescribeNatGatewaysResultNatGatewaysStateEnum) ToPointer() *DescribeNatGatewaysResultNatGatewaysStateEnum {
	return &e
}

func (e *DescribeNatGatewaysResultNatGatewaysStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "failed":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = DescribeNatGatewaysResultNatGatewaysStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNatGatewaysResultNatGatewaysStateEnum: %v", v)
	}
}

// DescribeNatGatewaysResultNatGatewaysTags - Describes a tag.
type DescribeNatGatewaysResultNatGatewaysTags struct {
	Key   *string
	Value *string
}

// DescribeNatGatewaysResultNatGateways - Describes a NAT gateway.
type DescribeNatGatewaysResultNatGateways struct {
	ConnectivityType     *DescribeNatGatewaysResultNatGatewaysConnectivityTypeEnum
	CreateTime           *time.Time
	DeleteTime           *time.Time
	FailureCode          *string
	FailureMessage       *string
	NatGatewayAddresses  []DescribeNatGatewaysResultNatGatewaysNatGatewayAddresses
	NatGatewayID         *string
	ProvisionedBandwidth *DescribeNatGatewaysResultNatGatewaysProvisionedBandwidth
	State                *DescribeNatGatewaysResultNatGatewaysStateEnum
	SubnetID             *string
	Tags                 []DescribeNatGatewaysResultNatGatewaysTags
	VpcID                *string
}

// DescribeNatGatewaysResult - Success
type DescribeNatGatewaysResult struct {
	NatGateways []DescribeNatGatewaysResultNatGateways
	NextToken   *string
}
