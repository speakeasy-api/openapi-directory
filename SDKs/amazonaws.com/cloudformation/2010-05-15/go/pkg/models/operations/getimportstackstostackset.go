// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETImportStacksToStackSetActionEnum
type GETImportStacksToStackSetActionEnum string

const (
	GETImportStacksToStackSetActionEnumImportStacksToStackSet GETImportStacksToStackSetActionEnum = "ImportStacksToStackSet"
)

func (e *GETImportStacksToStackSetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ImportStacksToStackSet":
		*e = GETImportStacksToStackSetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETImportStacksToStackSetActionEnum: %s", s)
	}
}

// GETImportStacksToStackSetCallAsEnum - <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul>
type GETImportStacksToStackSetCallAsEnum string

const (
	GETImportStacksToStackSetCallAsEnumSelf           GETImportStacksToStackSetCallAsEnum = "SELF"
	GETImportStacksToStackSetCallAsEnumDelegatedAdmin GETImportStacksToStackSetCallAsEnum = "DELEGATED_ADMIN"
)

func (e *GETImportStacksToStackSetCallAsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SELF":
		fallthrough
	case "DELEGATED_ADMIN":
		*e = GETImportStacksToStackSetCallAsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETImportStacksToStackSetCallAsEnum: %s", s)
	}
}

// GETImportStacksToStackSetOperationPreferences - <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
type GETImportStacksToStackSetOperationPreferences struct {
	FailureToleranceCount      *int64                            `queryParam:"name=FailureToleranceCount"`
	FailureTolerancePercentage *int64                            `queryParam:"name=FailureTolerancePercentage"`
	MaxConcurrentCount         *int64                            `queryParam:"name=MaxConcurrentCount"`
	MaxConcurrentPercentage    *int64                            `queryParam:"name=MaxConcurrentPercentage"`
	RegionConcurrencyType      *shared.RegionConcurrencyTypeEnum `queryParam:"name=RegionConcurrencyType"`
	RegionOrder                []string                          `queryParam:"name=RegionOrder"`
}

// GETImportStacksToStackSetVersionEnum
type GETImportStacksToStackSetVersionEnum string

const (
	GETImportStacksToStackSetVersionEnumTwoThousandAndTen0515 GETImportStacksToStackSetVersionEnum = "2010-05-15"
)

func (e *GETImportStacksToStackSetVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETImportStacksToStackSetVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETImportStacksToStackSetVersionEnum: %s", s)
	}
}

type GETImportStacksToStackSetQueryParams struct {
	Action GETImportStacksToStackSetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul>
	CallAs *GETImportStacksToStackSetCallAsEnum `queryParam:"style=form,explode=true,name=CallAs"`
	// A unique, user defined, identifier for the stack set operation.
	OperationID *string `queryParam:"style=form,explode=true,name=OperationId"`
	// <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
	OperationPreferences *GETImportStacksToStackSetOperationPreferences `queryParam:"style=form,explode=true,name=OperationPreferences"`
	// The list of OU ID's to which the stacks being imported has to be mapped as deployment target.
	OrganizationalUnitIds []string `queryParam:"style=form,explode=true,name=OrganizationalUnitIds"`
	// <p>The IDs of the stacks you are importing into a stack set. You import up to 10 stacks per stack set at a time.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
	StackIds []string `queryParam:"style=form,explode=true,name=StackIds"`
	// <p>The Amazon S3 URL which contains list of stack ids to be inputted.</p> <p>Specify either <code>StackIds</code> or <code>StackIdsUrl</code>.</p>
	StackIdsURL *string `queryParam:"style=form,explode=true,name=StackIdsUrl"`
	// The name of the stack set. The name must be unique in the Region where you create your stack set.
	StackSetName string                               `queryParam:"style=form,explode=true,name=StackSetName"`
	Version      GETImportStacksToStackSetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETImportStacksToStackSetHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETImportStacksToStackSetRequest struct {
	QueryParams GETImportStacksToStackSetQueryParams
	Headers     GETImportStacksToStackSetHeaders
}

type GETImportStacksToStackSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
