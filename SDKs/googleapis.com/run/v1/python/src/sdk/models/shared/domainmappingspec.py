"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DomainMappingSpecCertificateModeEnum(str, Enum):
    r"""The mode of the certificate."""
    CERTIFICATE_MODE_UNSPECIFIED = 'CERTIFICATE_MODE_UNSPECIFIED'
    NONE = 'NONE'
    AUTOMATIC = 'AUTOMATIC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DomainMappingSpec:
    r"""The desired state of the Domain Mapping."""
    
    certificate_mode: Optional[DomainMappingSpecCertificateModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateMode'), 'exclude': lambda f: f is None }})
    r"""The mode of the certificate."""  
    force_override: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('forceOverride'), 'exclude': lambda f: f is None }})
    r"""If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning."""  
    route_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routeName'), 'exclude': lambda f: f is None }})
    r"""The name of the Knative Route that this DomainMapping applies to. The route must exist."""  
    