/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Transactions } from "./transactions";
import { Expose, Type } from "class-transformer";

/**
 * Type of subbalance (sub account)
 */
export enum BalanceVariationEnum {
  Gsb = "gsb",
  Erzeugung = "erzeugung",
  Eigenstrom = "eigenstrom",
  Co2 = "co2",
  Baeume = "baeume",
}

export class Balance extends SpeakeasyBase {
  /**
   * Sum owned - sum due by account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balance" })
  balance?: number;

  /**
   * Sum owned by account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "haben" })
  haben?: number;

  /**
   * Sum due by account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "soll" })
  soll?: number;

  @SpeakeasyMetadata({ elemType: Transactions })
  @Expose({ name: "txs" })
  @Type(() => Transactions)
  txs?: Transactions[];

  /**
   * Type of subbalance (sub account)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variation" })
  variation?: BalanceVariationEnum;
}
