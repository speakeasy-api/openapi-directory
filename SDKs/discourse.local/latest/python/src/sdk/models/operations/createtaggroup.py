"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTagGroupRequestBody:
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTagGroup200ApplicationJSONTagGroup:
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    one_per_topic: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('one_per_topic') }})  
    parent_tag_name: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_tag_name') }})  
    permissions: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions') }})  
    tag_names: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag_names') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateTagGroup200ApplicationJSON:
    r"""tag group created"""
    
    tag_group: CreateTagGroup200ApplicationJSONTagGroup = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag_group') }})  
    

@dataclasses.dataclass
class CreateTagGroupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_tag_group_200_application_json_object: Optional[CreateTagGroup200ApplicationJSON] = dataclasses.field(default=None)
    r"""tag group created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    