// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateReplicationConfigurationTemplateHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum - Request to configure data plane routing during Replication Settings template creation.
type CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum string

const (
	CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnumPrivateIP CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum = "PRIVATE_IP"
	CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnumPublicIP  CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum = "PUBLIC_IP"
)

func (e *CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRIVATE_IP":
		fallthrough
	case "PUBLIC_IP":
		*e = CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum: %s", s)
	}
}

// CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum - Request to configure the default large staging disk EBS volume type during Replication Settings template creation.
type CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum string

const (
	CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnumGp2 CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum = "GP2"
	CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnumSt1 CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum = "ST1"
	CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnumGp3 CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum = "GP3"
)

func (e *CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GP2":
		fallthrough
	case "ST1":
		fallthrough
	case "GP3":
		*e = CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum: %s", s)
	}
}

// CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum - Request to configure EBS encryption during Replication Settings template creation.
type CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum string

const (
	CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnumDefault CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum = "DEFAULT"
	CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnumCustom  CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum = "CUSTOM"
)

func (e *CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEFAULT":
		fallthrough
	case "CUSTOM":
		*e = CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum: %s", s)
	}
}

type CreateReplicationConfigurationTemplateRequestBody struct {
	// Request to associate the default Application Migration Service Security group with the Replication Settings template.
	AssociateDefaultSecurityGroup bool `json:"associateDefaultSecurityGroup"`
	// Request to configure bandwidth throttling during Replication Settings template creation.
	BandwidthThrottling int64 `json:"bandwidthThrottling"`
	// Request to create Public IP during Replication Settings template creation.
	CreatePublicIP bool `json:"createPublicIP"`
	// Request to configure data plane routing during Replication Settings template creation.
	DataPlaneRouting CreateReplicationConfigurationTemplateRequestBodyDataPlaneRoutingEnum `json:"dataPlaneRouting"`
	// Request to configure the default large staging disk EBS volume type during Replication Settings template creation.
	DefaultLargeStagingDiskType CreateReplicationConfigurationTemplateRequestBodyDefaultLargeStagingDiskTypeEnum `json:"defaultLargeStagingDiskType"`
	// Request to configure EBS encryption during Replication Settings template creation.
	EbsEncryption CreateReplicationConfigurationTemplateRequestBodyEbsEncryptionEnum `json:"ebsEncryption"`
	// Request to configure an EBS encryption key during Replication Settings template creation.
	EbsEncryptionKeyArn *string `json:"ebsEncryptionKeyArn,omitempty"`
	// Request to configure the Replication Server instance type during Replication Settings template creation.
	ReplicationServerInstanceType string `json:"replicationServerInstanceType"`
	// Request to configure the Replication Server Security group ID during Replication Settings template creation.
	ReplicationServersSecurityGroupsIDs []string `json:"replicationServersSecurityGroupsIDs"`
	// Request to configure the Staging Area subnet ID during Replication Settings template creation.
	StagingAreaSubnetID string `json:"stagingAreaSubnetId"`
	// Request to configure Staging Area tags during Replication Settings template creation.
	StagingAreaTags map[string]string `json:"stagingAreaTags"`
	// Request to configure tags during Replication Settings template creation.
	Tags map[string]string `json:"tags,omitempty"`
	// Request to use Dedicated Replication Servers during Replication Settings template creation.
	UseDedicatedReplicationServer bool `json:"useDedicatedReplicationServer"`
}

type CreateReplicationConfigurationTemplateRequest struct {
	Headers CreateReplicationConfigurationTemplateHeaders
	Request CreateReplicationConfigurationTemplateRequestBody `request:"mediaType=application/json"`
}

type CreateReplicationConfigurationTemplateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	ReplicationConfigurationTemplate *shared.ReplicationConfigurationTemplate
	StatusCode                       int
	RawResponse                      *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
