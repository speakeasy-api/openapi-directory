// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DirectoryStageEnum string

const (
	DirectoryStageEnumRequested     DirectoryStageEnum = "Requested"
	DirectoryStageEnumCreating      DirectoryStageEnum = "Creating"
	DirectoryStageEnumCreated       DirectoryStageEnum = "Created"
	DirectoryStageEnumActive        DirectoryStageEnum = "Active"
	DirectoryStageEnumInoperable    DirectoryStageEnum = "Inoperable"
	DirectoryStageEnumImpaired      DirectoryStageEnum = "Impaired"
	DirectoryStageEnumRestoring     DirectoryStageEnum = "Restoring"
	DirectoryStageEnumRestoreFailed DirectoryStageEnum = "RestoreFailed"
	DirectoryStageEnumDeleting      DirectoryStageEnum = "Deleting"
	DirectoryStageEnumDeleted       DirectoryStageEnum = "Deleted"
	DirectoryStageEnumFailed        DirectoryStageEnum = "Failed"
)

func (e *DirectoryStageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Requested":
		fallthrough
	case "Creating":
		fallthrough
	case "Created":
		fallthrough
	case "Active":
		fallthrough
	case "Inoperable":
		fallthrough
	case "Impaired":
		fallthrough
	case "Restoring":
		fallthrough
	case "RestoreFailed":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "Failed":
		*e = DirectoryStageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DirectoryStageEnum: %s", s)
	}
}
