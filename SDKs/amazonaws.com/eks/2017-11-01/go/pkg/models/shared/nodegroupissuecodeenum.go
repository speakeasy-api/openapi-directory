// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NodegroupIssueCodeEnum string

const (
	NodegroupIssueCodeEnumAutoScalingGroupNotFound             NodegroupIssueCodeEnum = "AutoScalingGroupNotFound"
	NodegroupIssueCodeEnumAutoScalingGroupInvalidConfiguration NodegroupIssueCodeEnum = "AutoScalingGroupInvalidConfiguration"
	NodegroupIssueCodeEnumEc2SecurityGroupNotFound             NodegroupIssueCodeEnum = "Ec2SecurityGroupNotFound"
	NodegroupIssueCodeEnumEc2SecurityGroupDeletionFailure      NodegroupIssueCodeEnum = "Ec2SecurityGroupDeletionFailure"
	NodegroupIssueCodeEnumEc2LaunchTemplateNotFound            NodegroupIssueCodeEnum = "Ec2LaunchTemplateNotFound"
	NodegroupIssueCodeEnumEc2LaunchTemplateVersionMismatch     NodegroupIssueCodeEnum = "Ec2LaunchTemplateVersionMismatch"
	NodegroupIssueCodeEnumEc2SubnetNotFound                    NodegroupIssueCodeEnum = "Ec2SubnetNotFound"
	NodegroupIssueCodeEnumEc2SubnetInvalidConfiguration        NodegroupIssueCodeEnum = "Ec2SubnetInvalidConfiguration"
	NodegroupIssueCodeEnumIamInstanceProfileNotFound           NodegroupIssueCodeEnum = "IamInstanceProfileNotFound"
	NodegroupIssueCodeEnumIamLimitExceeded                     NodegroupIssueCodeEnum = "IamLimitExceeded"
	NodegroupIssueCodeEnumIamNodeRoleNotFound                  NodegroupIssueCodeEnum = "IamNodeRoleNotFound"
	NodegroupIssueCodeEnumNodeCreationFailure                  NodegroupIssueCodeEnum = "NodeCreationFailure"
	NodegroupIssueCodeEnumAsgInstanceLaunchFailures            NodegroupIssueCodeEnum = "AsgInstanceLaunchFailures"
	NodegroupIssueCodeEnumInstanceLimitExceeded                NodegroupIssueCodeEnum = "InstanceLimitExceeded"
	NodegroupIssueCodeEnumInsufficientFreeAddresses            NodegroupIssueCodeEnum = "InsufficientFreeAddresses"
	NodegroupIssueCodeEnumAccessDenied                         NodegroupIssueCodeEnum = "AccessDenied"
	NodegroupIssueCodeEnumInternalFailure                      NodegroupIssueCodeEnum = "InternalFailure"
	NodegroupIssueCodeEnumClusterUnreachable                   NodegroupIssueCodeEnum = "ClusterUnreachable"
	NodegroupIssueCodeEnumEc2SubnetMissingIpv6Assignment       NodegroupIssueCodeEnum = "Ec2SubnetMissingIpv6Assignment"
)

func (e *NodegroupIssueCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AutoScalingGroupNotFound":
		fallthrough
	case "AutoScalingGroupInvalidConfiguration":
		fallthrough
	case "Ec2SecurityGroupNotFound":
		fallthrough
	case "Ec2SecurityGroupDeletionFailure":
		fallthrough
	case "Ec2LaunchTemplateNotFound":
		fallthrough
	case "Ec2LaunchTemplateVersionMismatch":
		fallthrough
	case "Ec2SubnetNotFound":
		fallthrough
	case "Ec2SubnetInvalidConfiguration":
		fallthrough
	case "IamInstanceProfileNotFound":
		fallthrough
	case "IamLimitExceeded":
		fallthrough
	case "IamNodeRoleNotFound":
		fallthrough
	case "NodeCreationFailure":
		fallthrough
	case "AsgInstanceLaunchFailures":
		fallthrough
	case "InstanceLimitExceeded":
		fallthrough
	case "InsufficientFreeAddresses":
		fallthrough
	case "AccessDenied":
		fallthrough
	case "InternalFailure":
		fallthrough
	case "ClusterUnreachable":
		fallthrough
	case "Ec2SubnetMissingIpv6Assignment":
		*e = NodegroupIssueCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodegroupIssueCodeEnum: %s", s)
	}
}
