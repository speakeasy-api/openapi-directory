"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAPIV1AdminAccountsIDActionSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class PostAPIV1AdminAccountsIDActionRequestBodyTypeEnum(str, Enum):
    r"""Type of action to be taken. Enumerable oneOf: none disable silence suspend"""
    NONE = 'none'
    DISABLE = 'disable'
    SILENCE = 'silence'
    SUSPEND = 'suspend'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPIV1AdminAccountsIDActionRequestBody:
    
    report_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('report_id'), 'exclude': lambda f: f is None }})
    r"""ID of an associated report that caused this action to be taken"""  
    send_email_notification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('send_email_notification'), 'exclude': lambda f: f is None }})
    r"""Whether an email should be sent to the user with the above information."""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""Additional text for clarification of why this action was taken"""  
    type: Optional[PostAPIV1AdminAccountsIDActionRequestBodyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of action to be taken. Enumerable oneOf: none disable silence suspend"""  
    warning_preset_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warning_preset_id'), 'exclude': lambda f: f is None }})
    r"""ID of a preset warning"""  
    

@dataclasses.dataclass
class PostAPIV1AdminAccountsIDActionRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""ID of the account"""  
    request_body: Optional[PostAPIV1AdminAccountsIDActionRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PostAPIV1AdminAccountsIDActionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    