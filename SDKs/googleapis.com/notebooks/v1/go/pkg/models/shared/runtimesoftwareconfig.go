// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuntimeSoftwareConfigPostStartupScriptBehaviorEnum - Behavior for the post startup script.
type RuntimeSoftwareConfigPostStartupScriptBehaviorEnum string

const (
	RuntimeSoftwareConfigPostStartupScriptBehaviorEnumPostStartupScriptBehaviorUnspecified RuntimeSoftwareConfigPostStartupScriptBehaviorEnum = "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED"
	RuntimeSoftwareConfigPostStartupScriptBehaviorEnumRunEveryStart                        RuntimeSoftwareConfigPostStartupScriptBehaviorEnum = "RUN_EVERY_START"
	RuntimeSoftwareConfigPostStartupScriptBehaviorEnumDownloadAndRunEveryStart             RuntimeSoftwareConfigPostStartupScriptBehaviorEnum = "DOWNLOAD_AND_RUN_EVERY_START"
)

func (e *RuntimeSoftwareConfigPostStartupScriptBehaviorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED":
		fallthrough
	case "RUN_EVERY_START":
		fallthrough
	case "DOWNLOAD_AND_RUN_EVERY_START":
		*e = RuntimeSoftwareConfigPostStartupScriptBehaviorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RuntimeSoftwareConfigPostStartupScriptBehaviorEnum: %s", s)
	}
}

// RuntimeSoftwareConfigInput - Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
type RuntimeSoftwareConfigInput struct {
	// Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.
	CustomGpuDriverPath *string `json:"customGpuDriverPath,omitempty"`
	// Bool indicating whether JupyterLab terminal will be available or not. Default: False
	DisableTerminal *bool `json:"disableTerminal,omitempty"`
	// Verifies core internal services are running. Default: True
	EnableHealthMonitoring *bool `json:"enableHealthMonitoring,omitempty"`
	// Runtime will automatically shutdown after idle_shutdown_time. Default: True
	IdleShutdown *bool `json:"idleShutdown,omitempty"`
	// Time in minutes to wait before shutting down runtime. Default: 180 minutes
	IdleShutdownTimeout *int `json:"idleShutdownTimeout,omitempty"`
	// Install Nvidia Driver automatically. Default: True
	InstallGpuDriver *bool `json:"installGpuDriver,omitempty"`
	// Optional. Use a list of container images to use as Kernels in the notebook instance.
	Kernels []ContainerImage `json:"kernels,omitempty"`
	// Bool indicating whether mixer client should be disabled. Default: False
	MixerDisabled *bool `json:"mixerDisabled,omitempty"`
	// Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
	NotebookUpgradeSchedule *string `json:"notebookUpgradeSchedule,omitempty"`
	// Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).
	PostStartupScript *string `json:"postStartupScript,omitempty"`
	// Behavior for the post startup script.
	PostStartupScriptBehavior *RuntimeSoftwareConfigPostStartupScriptBehaviorEnum `json:"postStartupScriptBehavior,omitempty"`
}

// RuntimeSoftwareConfig - Specifies the selection and configuration of software inside the runtime. The properties to set on runtime. Properties keys are specified in `key:value` format, for example: * `idle_shutdown: true` * `idle_shutdown_timeout: 180` * `enable_health_monitoring: true`
type RuntimeSoftwareConfig struct {
	// Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.
	CustomGpuDriverPath *string `json:"customGpuDriverPath,omitempty"`
	// Bool indicating whether JupyterLab terminal will be available or not. Default: False
	DisableTerminal *bool `json:"disableTerminal,omitempty"`
	// Verifies core internal services are running. Default: True
	EnableHealthMonitoring *bool `json:"enableHealthMonitoring,omitempty"`
	// Runtime will automatically shutdown after idle_shutdown_time. Default: True
	IdleShutdown *bool `json:"idleShutdown,omitempty"`
	// Time in minutes to wait before shutting down runtime. Default: 180 minutes
	IdleShutdownTimeout *int `json:"idleShutdownTimeout,omitempty"`
	// Install Nvidia Driver automatically. Default: True
	InstallGpuDriver *bool `json:"installGpuDriver,omitempty"`
	// Optional. Use a list of container images to use as Kernels in the notebook instance.
	Kernels []ContainerImage `json:"kernels,omitempty"`
	// Bool indicating whether mixer client should be disabled. Default: False
	MixerDisabled *bool `json:"mixerDisabled,omitempty"`
	// Cron expression in UTC timezone, used to schedule instance auto upgrade. Please follow the [cron format](https://en.wikipedia.org/wiki/Cron).
	NotebookUpgradeSchedule *string `json:"notebookUpgradeSchedule,omitempty"`
	// Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (`gs://path-to-file/file-name`).
	PostStartupScript *string `json:"postStartupScript,omitempty"`
	// Behavior for the post startup script.
	PostStartupScriptBehavior *RuntimeSoftwareConfigPostStartupScriptBehaviorEnum `json:"postStartupScriptBehavior,omitempty"`
	// Output only. Bool indicating whether an newer image is available in an image family.
	Upgradeable *bool `json:"upgradeable,omitempty"`
	// Output only. version of boot image such as M100, from release label of the image.
	Version *string `json:"version,omitempty"`
}
