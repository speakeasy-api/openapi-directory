// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateOrganizationInventoryOnboardingCloudMonitoringPreparePathParams struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesTunnel - TLS Related Parameters
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesTunnel struct {
	// Name of the configured TLS certificate
	CertificateName *string `json:"certificateName,omitempty"`
	// Number of the vlan expected to be used to connect to the cloud
	LocalInterface *int64 `json:"localInterface,omitempty"`
	// Number of the configured Loopback Interface used for TLS overlay
	LoopbackNumber *int64 `json:"loopbackNumber,omitempty"`
	// Name of the configured TLS tunnel
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesUser - User parameters
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesUser struct {
	// The name of the device user for Meraki monitoring
	Username *string `json:"username,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessListVtyIn - VTY in ACL
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessListVtyIn struct {
	// Name
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessListVtyOut - VTY out ACL
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessListVtyOut struct {
	// Name
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessList - AccessList details
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessList struct {
	// VTY in ACL
	VtyIn *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessListVtyIn `json:"vtyIn,omitempty"`
	// VTY out ACL
	VtyOut *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessListVtyOut `json:"vtyOut,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthenticationGroup - Group Details
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthenticationGroup struct {
	// Group Name
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthentication - VTY AAA authentication
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthentication struct {
	// Group Details
	Group *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthenticationGroup `json:"group,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthorizationGroup - Group Details
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthorizationGroup struct {
	// Group Name
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthorization - VTY AAA authorization
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthorization struct {
	// Group Details
	Group *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthorizationGroup `json:"group,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVty - VTY Related Parameters
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVty struct {
	// AccessList details
	AccessList *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAccessList `json:"accessList,omitempty"`
	// VTY AAA authentication
	Authentication *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthentication `json:"authentication,omitempty"`
	// VTY AAA authorization
	Authorization *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVtyAuthorization `json:"authorization,omitempty"`
	// Ending line VTY number
	EndLineNumber *int64 `json:"endLineNumber,omitempty"`
	// SSH rotary number
	RotaryNumber *int64 `json:"rotaryNumber,omitempty"`
	// Starting line VTY number
	StartLineNumber *int64 `json:"startLineNumber,omitempty"`
}

type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevices struct {
	// Device SUDI certificate
	Sudi string `json:"sudi"`
	// TLS Related Parameters
	Tunnel *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesTunnel `json:"tunnel,omitempty"`
	// User parameters
	User *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesUser `json:"user,omitempty"`
	// VTY Related Parameters
	Vty *CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevicesVty `json:"vty,omitempty"`
}

type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBody struct {
	// A set of devices to import (or update)
	Devices []CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBodyDevices `json:"devices"`
}

type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequest struct {
	PathParams CreateOrganizationInventoryOnboardingCloudMonitoringPreparePathParams
	Request    CreateOrganizationInventoryOnboardingCloudMonitoringPrepareRequestBody `request:"mediaType=application/json"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnelRootCertificate - Root certificate information
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnelRootCertificate struct {
	// Public certificate value
	Content *string `json:"content,omitempty"`
	// The name of the server protected by the certificate
	Name *string `json:"name,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel - Configuration options used to connect to the device
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel struct {
	// SSH tunnel URL used to connect to the device
	Host *string `json:"host,omitempty"`
	Mode *string `json:"mode,omitempty"`
	// The name of the tunnel we are attempting to connect to
	Name *string `json:"name,omitempty"`
	// The port used for the ssh tunnel.
	Port *string `json:"port,omitempty"`
	// Root certificate information
	RootCertificate *CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnelRootCertificate `json:"rootCertificate,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsUserSecret - Stores the user secret hash
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsUserSecret struct {
	// The hashed secret
	Hash *string `json:"hash,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsUser - User credentials used to connect to the device
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsUser struct {
	// The public key for the registered user
	PublicKey *string `json:"publicKey,omitempty"`
	// Stores the user secret hash
	Secret *CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsUserSecret `json:"secret,omitempty"`
	// The username added to Catalyst device
	Username *string `json:"username,omitempty"`
}

// CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParams - Params used in order to connect to the device
type CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParams struct {
	// Static IP Address used to connect to the device
	CloudStaticIP *string `json:"cloudStaticIp,omitempty"`
	// Configuration options used to connect to the device
	Tunnel *CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsTunnel `json:"tunnel,omitempty"`
	// User credentials used to connect to the device
	User *CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParamsUser `json:"user,omitempty"`
}

type CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSON struct {
	// Params used in order to connect to the device
	ConfigParams *CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONConfigParams `json:"configParams,omitempty"`
	// Import ID from the Import operation
	DeviceID *string `json:"deviceId,omitempty"`
	// Message related to whether or not the device was found and can be imported.
	Message *string `json:"message,omitempty"`
	// The import status of the device
	Status *string `json:"status,omitempty"`
	// Device UDI certificate
	Udi *string `json:"udi,omitempty"`
}

type CreateOrganizationInventoryOnboardingCloudMonitoringPrepareResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSONObjects []CreateOrganizationInventoryOnboardingCloudMonitoringPrepare201ApplicationJSON
}
