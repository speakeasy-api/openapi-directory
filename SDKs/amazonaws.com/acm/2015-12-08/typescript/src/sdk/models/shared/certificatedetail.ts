/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CertificateOptions } from "./certificateoptions";
import { CertificateStatusEnum } from "./certificatestatusenum";
import { CertificateTypeEnum } from "./certificatetypeenum";
import { DomainValidation } from "./domainvalidation";
import { ExtendedKeyUsage } from "./extendedkeyusage";
import { FailureReasonEnum } from "./failurereasonenum";
import { KeyAlgorithmEnum } from "./keyalgorithmenum";
import { KeyUsage } from "./keyusage";
import { RenewalEligibilityEnum } from "./renewaleligibilityenum";
import { RenewalSummary } from "./renewalsummary";
import { RevocationReasonEnum } from "./revocationreasonenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains metadata about an ACM certificate. This structure is returned in the response to a <a>DescribeCertificate</a> request.
 */
export class CertificateDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateAuthorityArn" })
  certificateAuthorityArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;

  @SpeakeasyMetadata({ elemType: DomainValidation })
  @Expose({ name: "DomainValidationOptions" })
  @Type(() => DomainValidation)
  domainValidationOptions?: DomainValidation[];

  @SpeakeasyMetadata({ elemType: ExtendedKeyUsage })
  @Expose({ name: "ExtendedKeyUsages" })
  @Type(() => ExtendedKeyUsage)
  extendedKeyUsages?: ExtendedKeyUsage[];

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: FailureReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  importedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InUseBy" })
  inUseBy?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IssuedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Issuer" })
  issuer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyAlgorithm" })
  keyAlgorithm?: KeyAlgorithmEnum;

  @SpeakeasyMetadata({ elemType: KeyUsage })
  @Expose({ name: "KeyUsages" })
  @Type(() => KeyUsage)
  keyUsages?: KeyUsage[];

  @SpeakeasyMetadata()
  @Expose({ name: "NotAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NotBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Options" })
  @Type(() => CertificateOptions)
  options?: CertificateOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "RenewalEligibility" })
  renewalEligibility?: RenewalEligibilityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RenewalSummary" })
  @Type(() => RenewalSummary)
  renewalSummary?: RenewalSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "RevocationReason" })
  revocationReason?: RevocationReasonEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RevokedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revokedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SignatureAlgorithm" })
  signatureAlgorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: CertificateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubjectAlternativeNames" })
  subjectAlternativeNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: CertificateTypeEnum;
}
