// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAppRequestBodyAutoBranchCreationConfig -  Describes the automated branch creation configuration.
type CreateAppRequestBodyAutoBranchCreationConfig struct {
	BasicAuthCredentials       *string           `json:"basicAuthCredentials,omitempty"`
	BuildSpec                  *string           `json:"buildSpec,omitempty"`
	EnableAutoBuild            *bool             `json:"enableAutoBuild,omitempty"`
	EnableBasicAuth            *bool             `json:"enableBasicAuth,omitempty"`
	EnablePerformanceMode      *bool             `json:"enablePerformanceMode,omitempty"`
	EnablePullRequestPreview   *bool             `json:"enablePullRequestPreview,omitempty"`
	EnvironmentVariables       map[string]string `json:"environmentVariables,omitempty"`
	Framework                  *string           `json:"framework,omitempty"`
	PullRequestEnvironmentName *string           `json:"pullRequestEnvironmentName,omitempty"`
	Stage                      *shared.StageEnum `json:"stage,omitempty"`
}

// CreateAppRequestBodyPlatformEnum -  The platform for the Amplify app. For a static app, set the platform type to <code>WEB</code>. For a dynamic server-side rendered (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an app requiring Amplify Hosting's original SSR support only, set the platform type to <code>WEB_DYNAMIC</code>.
type CreateAppRequestBodyPlatformEnum string

const (
	CreateAppRequestBodyPlatformEnumWeb        CreateAppRequestBodyPlatformEnum = "WEB"
	CreateAppRequestBodyPlatformEnumWebDynamic CreateAppRequestBodyPlatformEnum = "WEB_DYNAMIC"
	CreateAppRequestBodyPlatformEnumWebCompute CreateAppRequestBodyPlatformEnum = "WEB_COMPUTE"
)

func (e *CreateAppRequestBodyPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WEB":
		fallthrough
	case "WEB_DYNAMIC":
		fallthrough
	case "WEB_COMPUTE":
		*e = CreateAppRequestBodyPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAppRequestBodyPlatformEnum: %s", s)
	}
}

type CreateAppRequestBody struct {
	// <p>The personal access token for a GitHub repository for an Amplify app. The personal access token is used to authorize access to a GitHub repository using the Amplify GitHub App. The token is not stored.</p> <p>Use <code>accessToken</code> for GitHub repositories only. To authorize access to a repository provider such as Bitbucket or CodeCommit, use <code>oauthToken</code>.</p> <p>You must specify either <code>accessToken</code> or <code>oauthToken</code> when you create a new app.</p> <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the <i>Amplify User Guide</i> .</p>
	AccessToken *string `json:"accessToken,omitempty"`
	//  Describes the automated branch creation configuration.
	AutoBranchCreationConfig *CreateAppRequestBodyAutoBranchCreationConfig `json:"autoBranchCreationConfig,omitempty"`
	//  The automated branch creation glob patterns for an Amplify app.
	AutoBranchCreationPatterns []string `json:"autoBranchCreationPatterns,omitempty"`
	//  The credentials for basic authorization for an Amplify app. You must base64-encode the authorization credentials and provide them in the format <code>user:password</code>.
	BasicAuthCredentials *string `json:"basicAuthCredentials,omitempty"`
	//  The build specification (build spec) file for an Amplify app build.
	BuildSpec *string `json:"buildSpec,omitempty"`
	// The custom HTTP headers for an Amplify app.
	CustomHeaders *string `json:"customHeaders,omitempty"`
	//  The custom rewrite and redirect rules for an Amplify app.
	CustomRules []shared.CustomRule `json:"customRules,omitempty"`
	//  The description for an Amplify app.
	Description *string `json:"description,omitempty"`
	//  Enables automated branch creation for an Amplify app.
	EnableAutoBranchCreation *bool `json:"enableAutoBranchCreation,omitempty"`
	//  Enables basic authorization for an Amplify app. This will apply to all branches that are part of this app.
	EnableBasicAuth *bool `json:"enableBasicAuth,omitempty"`
	//  Enables the auto building of branches for an Amplify app.
	EnableBranchAutoBuild *bool `json:"enableBranchAutoBuild,omitempty"`
	//  Automatically disconnects a branch in the Amplify Console when you delete a branch from your Git repository.
	EnableBranchAutoDeletion *bool `json:"enableBranchAutoDeletion,omitempty"`
	//  The environment variables map for an Amplify app.
	EnvironmentVariables map[string]string `json:"environmentVariables,omitempty"`
	//  The AWS Identity and Access Management (IAM) service role for an Amplify app.
	IamServiceRoleArn *string `json:"iamServiceRoleArn,omitempty"`
	//  The name for an Amplify app.
	Name string `json:"name"`
	// <p>The OAuth token for a third-party source control system for an Amplify app. The OAuth token is used to create a webhook and a read-only deploy key using SSH cloning. The OAuth token is not stored.</p> <p>Use <code>oauthToken</code> for repository providers other than GitHub, such as Bitbucket or CodeCommit. To authorize access to GitHub as your repository provider, use <code>accessToken</code>.</p> <p>You must specify either <code>oauthToken</code> or <code>accessToken</code> when you create a new app.</p> <p>Existing Amplify apps deployed from a GitHub repository using OAuth continue to work with CI/CD. However, we strongly recommend that you migrate these apps to use the GitHub App. For more information, see <a href="https://docs.aws.amazon.com/amplify/latest/UserGuide/setting-up-GitHub-access.html#migrating-to-github-app-auth">Migrating an existing OAuth app to the Amplify GitHub App</a> in the <i>Amplify User Guide</i> .</p>
	OauthToken *string `json:"oauthToken,omitempty"`
	//  The platform for the Amplify app. For a static app, set the platform type to <code>WEB</code>. For a dynamic server-side rendered (SSR) app, set the platform type to <code>WEB_COMPUTE</code>. For an app requiring Amplify Hosting's original SSR support only, set the platform type to <code>WEB_DYNAMIC</code>.
	Platform *CreateAppRequestBodyPlatformEnum `json:"platform,omitempty"`
	//  The repository for an Amplify app.
	Repository *string `json:"repository,omitempty"`
	//  The tag for an Amplify app.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateAppRequest struct {
	RequestBody       CreateAppRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateAppResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateAppResult *shared.CreateAppResult
	// DependentServiceFailureException
	DependentServiceFailureException interface{}
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
