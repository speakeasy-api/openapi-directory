// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateFleetMetricRequestBodyAggregationType - The type of aggregation queries.
type CreateFleetMetricRequestBodyAggregationType struct {
	Name   *shared.AggregationTypeNameEnum `json:"name,omitempty"`
	Values []string                        `json:"values,omitempty"`
}

// CreateFleetMetricRequestBodyUnitEnum - Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>. Default to null.
type CreateFleetMetricRequestBodyUnitEnum string

const (
	CreateFleetMetricRequestBodyUnitEnumSeconds         CreateFleetMetricRequestBodyUnitEnum = "Seconds"
	CreateFleetMetricRequestBodyUnitEnumMicroseconds    CreateFleetMetricRequestBodyUnitEnum = "Microseconds"
	CreateFleetMetricRequestBodyUnitEnumMilliseconds    CreateFleetMetricRequestBodyUnitEnum = "Milliseconds"
	CreateFleetMetricRequestBodyUnitEnumBytes           CreateFleetMetricRequestBodyUnitEnum = "Bytes"
	CreateFleetMetricRequestBodyUnitEnumKilobytes       CreateFleetMetricRequestBodyUnitEnum = "Kilobytes"
	CreateFleetMetricRequestBodyUnitEnumMegabytes       CreateFleetMetricRequestBodyUnitEnum = "Megabytes"
	CreateFleetMetricRequestBodyUnitEnumGigabytes       CreateFleetMetricRequestBodyUnitEnum = "Gigabytes"
	CreateFleetMetricRequestBodyUnitEnumTerabytes       CreateFleetMetricRequestBodyUnitEnum = "Terabytes"
	CreateFleetMetricRequestBodyUnitEnumBits            CreateFleetMetricRequestBodyUnitEnum = "Bits"
	CreateFleetMetricRequestBodyUnitEnumKilobits        CreateFleetMetricRequestBodyUnitEnum = "Kilobits"
	CreateFleetMetricRequestBodyUnitEnumMegabits        CreateFleetMetricRequestBodyUnitEnum = "Megabits"
	CreateFleetMetricRequestBodyUnitEnumGigabits        CreateFleetMetricRequestBodyUnitEnum = "Gigabits"
	CreateFleetMetricRequestBodyUnitEnumTerabits        CreateFleetMetricRequestBodyUnitEnum = "Terabits"
	CreateFleetMetricRequestBodyUnitEnumPercent         CreateFleetMetricRequestBodyUnitEnum = "Percent"
	CreateFleetMetricRequestBodyUnitEnumCount           CreateFleetMetricRequestBodyUnitEnum = "Count"
	CreateFleetMetricRequestBodyUnitEnumBytesSecond     CreateFleetMetricRequestBodyUnitEnum = "Bytes/Second"
	CreateFleetMetricRequestBodyUnitEnumKilobytesSecond CreateFleetMetricRequestBodyUnitEnum = "Kilobytes/Second"
	CreateFleetMetricRequestBodyUnitEnumMegabytesSecond CreateFleetMetricRequestBodyUnitEnum = "Megabytes/Second"
	CreateFleetMetricRequestBodyUnitEnumGigabytesSecond CreateFleetMetricRequestBodyUnitEnum = "Gigabytes/Second"
	CreateFleetMetricRequestBodyUnitEnumTerabytesSecond CreateFleetMetricRequestBodyUnitEnum = "Terabytes/Second"
	CreateFleetMetricRequestBodyUnitEnumBitsSecond      CreateFleetMetricRequestBodyUnitEnum = "Bits/Second"
	CreateFleetMetricRequestBodyUnitEnumKilobitsSecond  CreateFleetMetricRequestBodyUnitEnum = "Kilobits/Second"
	CreateFleetMetricRequestBodyUnitEnumMegabitsSecond  CreateFleetMetricRequestBodyUnitEnum = "Megabits/Second"
	CreateFleetMetricRequestBodyUnitEnumGigabitsSecond  CreateFleetMetricRequestBodyUnitEnum = "Gigabits/Second"
	CreateFleetMetricRequestBodyUnitEnumTerabitsSecond  CreateFleetMetricRequestBodyUnitEnum = "Terabits/Second"
	CreateFleetMetricRequestBodyUnitEnumCountSecond     CreateFleetMetricRequestBodyUnitEnum = "Count/Second"
	CreateFleetMetricRequestBodyUnitEnumNone            CreateFleetMetricRequestBodyUnitEnum = "None"
)

func (e CreateFleetMetricRequestBodyUnitEnum) ToPointer() *CreateFleetMetricRequestBodyUnitEnum {
	return &e
}

func (e *CreateFleetMetricRequestBodyUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Seconds":
		fallthrough
	case "Microseconds":
		fallthrough
	case "Milliseconds":
		fallthrough
	case "Bytes":
		fallthrough
	case "Kilobytes":
		fallthrough
	case "Megabytes":
		fallthrough
	case "Gigabytes":
		fallthrough
	case "Terabytes":
		fallthrough
	case "Bits":
		fallthrough
	case "Kilobits":
		fallthrough
	case "Megabits":
		fallthrough
	case "Gigabits":
		fallthrough
	case "Terabits":
		fallthrough
	case "Percent":
		fallthrough
	case "Count":
		fallthrough
	case "Bytes/Second":
		fallthrough
	case "Kilobytes/Second":
		fallthrough
	case "Megabytes/Second":
		fallthrough
	case "Gigabytes/Second":
		fallthrough
	case "Terabytes/Second":
		fallthrough
	case "Bits/Second":
		fallthrough
	case "Kilobits/Second":
		fallthrough
	case "Megabits/Second":
		fallthrough
	case "Gigabits/Second":
		fallthrough
	case "Terabits/Second":
		fallthrough
	case "Count/Second":
		fallthrough
	case "None":
		*e = CreateFleetMetricRequestBodyUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFleetMetricRequestBodyUnitEnum: %v", v)
	}
}

type CreateFleetMetricRequestBody struct {
	// The field to aggregate.
	AggregationField string `json:"aggregationField"`
	// The type of aggregation queries.
	AggregationType CreateFleetMetricRequestBodyAggregationType `json:"aggregationType"`
	// The fleet metric description.
	Description *string `json:"description,omitempty"`
	// The name of the index to search.
	IndexName *string `json:"indexName,omitempty"`
	// The time in seconds between fleet metric emissions. Range [60(1 min), 86400(1 day)] and must be multiple of 60.
	Period int64 `json:"period"`
	// The search query string.
	QueryString string `json:"queryString"`
	// The query version.
	QueryVersion *string `json:"queryVersion,omitempty"`
	// Metadata, which can be used to manage the fleet metric.
	Tags []shared.Tag `json:"tags,omitempty"`
	// Used to support unit transformation such as milliseconds to seconds. The unit must be supported by <a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_MetricDatum.html">CW metric</a>. Default to null.
	Unit *CreateFleetMetricRequestBodyUnitEnum `json:"unit,omitempty"`
}

type CreateFleetMetricRequest struct {
	RequestBody       CreateFleetMetricRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The name of the fleet metric to create.
	MetricName string `pathParam:"style=simple,explode=false,name=metricName"`
}

type CreateFleetMetricResponse struct {
	ContentType string
	// Success
	CreateFleetMetricResponse *shared.CreateFleetMetricResponse
	// IndexNotReadyException
	IndexNotReadyException interface{}
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidAggregationException
	InvalidAggregationException interface{}
	// InvalidQueryException
	InvalidQueryException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
