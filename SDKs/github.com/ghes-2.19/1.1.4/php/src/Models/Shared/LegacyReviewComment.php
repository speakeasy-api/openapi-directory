<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LegacyReviewComment - Response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LegacyReviewComment
{
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LegacyReviewCommentLinks')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LegacyReviewCommentLinks $links = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('author_association')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorAssociation = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('commit_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('diff_hunk')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diffHunk = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('in_reply_to_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $inReplyToId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('original_commit_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalCommitId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('original_position')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $originalPosition = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $position = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pull_request_review_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pullRequestReviewId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('pull_request_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pullRequestUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LegacyReviewCommentUser')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LegacyReviewCommentUser $user = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->authorAssociation = null;
		$this->body = null;
		$this->commitId = null;
		$this->createdAt = null;
		$this->diffHunk = null;
		$this->htmlUrl = null;
		$this->id = null;
		$this->inReplyToId = null;
		$this->nodeId = null;
		$this->originalCommitId = null;
		$this->originalPosition = null;
		$this->path = null;
		$this->position = null;
		$this->pullRequestReviewId = null;
		$this->pullRequestUrl = null;
		$this->updatedAt = null;
		$this->url = null;
		$this->user = null;
	}
}
