/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { RoleMapping } from "./rolemapping";
import { Expose, Transform } from "class-transformer";

/**
 * Returned in response to a successful <code>GetIdentityPoolRoles</code> operation.
 */
export class GetIdentityPoolRolesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IdentityPoolId" })
  identityPoolId?: string;

  @SpeakeasyMetadata({ elemType: RoleMapping })
  @Expose({ name: "RoleMappings" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, RoleMapping> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], RoleMapping);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  roleMappings?: Record<string, RoleMapping>;

  @SpeakeasyMetadata()
  @Expose({ name: "Roles" })
  roles?: Record<string, string>;
}
