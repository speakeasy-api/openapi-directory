/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PastMeetingParticipantsRequest {
    /**
     * The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=meetingUUID")
    public String meetingUUID;
    public PastMeetingParticipantsRequest withMeetingUUID(String meetingUUID) {
        this.meetingUUID = meetingUUID;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=next_page_token")
    public String nextPageToken;
    public PastMeetingParticipantsRequest withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of records returned within a single API call.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_size")
    public Long pageSize;
    public PastMeetingParticipantsRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
}
