"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class ActionsCreateOrUpdateOrgSecretRequestBodyVisibilityEnum(str, Enum):
    r"""Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret."""
    ALL = 'all'
    PRIVATE = 'private'
    SELECTED = 'selected'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsCreateOrUpdateOrgSecretRequestBody:
    
    visibility: ActionsCreateOrUpdateOrgSecretRequestBodyVisibilityEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility') }})
    r"""Which type of organization repositories have access to the organization secret. `selected` means only the repositories specified by `selected_repository_ids` can access the secret."""  
    encrypted_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encrypted_value'), 'exclude': lambda f: f is None }})
    r"""Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an organization public key](https://docs.github.com/enterprise-server@3.5/rest/reference/actions#get-an-organization-public-key) endpoint."""  
    key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key_id'), 'exclude': lambda f: f is None }})
    r"""ID of the key you used to encrypt the secret."""  
    selected_repository_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected_repository_ids'), 'exclude': lambda f: f is None }})
    r"""An array of repository ids that can access the organization secret. You can only provide a list of repository ids when the `visibility` is set to `selected`. You can manage the list of selected repositories using the [List selected repositories for an organization secret](https://docs.github.com/enterprise-server@3.5/rest/reference/actions#list-selected-repositories-for-an-organization-secret), [Set selected repositories for an organization secret](https://docs.github.com/enterprise-server@3.5/rest/reference/actions#set-selected-repositories-for-an-organization-secret), and [Remove selected repository from an organization secret](https://docs.github.com/enterprise-server@3.5/rest/reference/actions#remove-selected-repository-from-an-organization-secret) endpoints."""  
    

@dataclasses.dataclass
class ActionsCreateOrUpdateOrgSecretRequest:
    
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})
    r"""The organization name. The name is not case sensitive."""  
    request_body: ActionsCreateOrUpdateOrgSecretRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    secret_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'secret_name', 'style': 'simple', 'explode': False }})
    r"""The name of the secret."""  
    

@dataclasses.dataclass
class ActionsCreateOrUpdateOrgSecretResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    empty_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Response when creating a secret"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    