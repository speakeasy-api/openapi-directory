/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetAvailableVendorsWithEnum {
  User = "user",
}

export class GetAvailableVendorsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  availableVendorsFilter?: shared.AvailableVendorsFilter;

  /**
   * Include detailed information. Possible values 'user'. Requesting user info enrichment takes much longer.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with[]",
  })
  with?: GetAvailableVendorsWithEnum[];
}

export class GetAvailableVendorsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * User list
   */
  @SpeakeasyMetadata()
  userList?: shared.UserList;
}
