/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSimilarImagesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

export enum GetSimilarImagesLicenseEnum {
  Commercial = "commercial",
  Editorial = "editorial",
}

/**
 * Amount of detail to render in the response
 */
export enum GetSimilarImagesViewEnum {
  Minimal = "minimal",
  Full = "full",
}

export class GetSimilarImagesRequest extends SpeakeasyBase {
  /**
   * The asset ID or upload ID to find similar images for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=asset_id",
  })
  assetId: string;

  /**
   * Language for the keywords and categories in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: shared.LanguageEnum;

  /**
   * Show only images with the specified license
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=license",
  })
  license?: GetSimilarImagesLicenseEnum[];

  /**
   * Page number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Enable or disable safe search
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=safe" })
  safe?: boolean;

  /**
   * Amount of detail to render in the response
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=view" })
  view?: GetSimilarImagesViewEnum;
}

export class GetSimilarImagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  imageSearchResults?: shared.ImageSearchResults;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
