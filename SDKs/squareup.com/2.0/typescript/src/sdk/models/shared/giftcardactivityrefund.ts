/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * Present only when `GiftCardActivityType` is REFUND.
 */
export class GiftCardActivityRefund extends SpeakeasyBase {
  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount_money" })
  @Type(() => Money)
  amountMoney?: Money;

  /**
   * When the Square Payments API is used, Refund is not called on the Gift Cards API.
   *
   * @remarks
   * However, when Square reads a Refund activity from the Gift Cards API, the developer needs to know the
   * ID of the payment (made using this gift card) that is being refunded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_id" })
  paymentId?: string;

  /**
   * The ID for the Redeem activity that needs to be refunded. Hence, the activity it
   *
   * @remarks
   * refers to has to be of the REDEEM type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redeem_activity_id" })
  redeemActivityId: string;

  /**
   * A client-specified ID to associate an entity, in another system, with this gift card
   *
   * @remarks
   * activity. This can be used to track the order or payment related information when the Square Orders
   * API is not being used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference_id" })
  referenceId?: string;
}
