/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlaceOrder200ApplicationJSONOrders {
    /**
     * Indicates whether cancelation is allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowCancelation")
    public Boolean allowCancelation;
    public PlaceOrder200ApplicationJSONOrders withAllowCancelation(Boolean allowCancelation) {
        this.allowCancelation = allowCancelation;
        return this;
    }
    
    /**
     * Indicates whether seller changing is allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowChangeSeller")
    public Boolean allowChangeSeller;
    public PlaceOrder200ApplicationJSONOrders withAllowChangeSeller(Boolean allowChangeSeller) {
        this.allowChangeSeller = allowChangeSeller;
        return this;
    }
    
    /**
     * Indicates whether edition is allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowEdition")
    public Boolean allowEdition;
    public PlaceOrder200ApplicationJSONOrders withAllowEdition(Boolean allowEdition) {
        this.allowEdition = allowEdition;
        return this;
    }
    
    /**
     * Checked in pickuppoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkedInPickupPointId")
    public String checkedInPickupPointId;
    public PlaceOrder200ApplicationJSONOrders withCheckedInPickupPointId(String checkedInPickupPointId) {
        this.checkedInPickupPointId = checkedInPickupPointId;
        return this;
    }
    
    /**
     * Customer's profile information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientProfileData")
    public PlaceOrder200ApplicationJSONOrdersClientProfileData clientProfileData;
    public PlaceOrder200ApplicationJSONOrders withClientProfileData(PlaceOrder200ApplicationJSONOrdersClientProfileData clientProfileData) {
        this.clientProfileData = clientProfileData;
        return this;
    }
    
    /**
     * Creation date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationDate")
    public String creationDate;
    public PlaceOrder200ApplicationJSONOrders withCreationDate(String creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * Follow up email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("followUpEmail")
    public String followUpEmail;
    public PlaceOrder200ApplicationJSONOrders withFollowUpEmail(String followUpEmail) {
        this.followUpEmail = followUpEmail;
        return this;
    }
    
    /**
     * Host name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostName")
    public String hostName;
    public PlaceOrder200ApplicationJSONOrders withHostName(String hostName) {
        this.hostName = hostName;
        return this;
    }
    
    /**
     * Indicates whether order is checked in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCheckedIn")
    public Boolean isCheckedIn;
    public PlaceOrder200ApplicationJSONOrders withIsCheckedIn(Boolean isCheckedIn) {
        this.isCheckedIn = isCheckedIn;
        return this;
    }
    
    /**
     * Indicates whether order is completed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCompleted")
    public Boolean isCompleted;
    public PlaceOrder200ApplicationJSONOrders withIsCompleted(Boolean isCompleted) {
        this.isCompleted = isCompleted;
        return this;
    }
    
    /**
     * Indicates whether user data is visible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isUserDataVisible")
    public Boolean isUserDataVisible;
    public PlaceOrder200ApplicationJSONOrders withIsUserDataVisible(Boolean isUserDataVisible) {
        this.isUserDataVisible = isUserDataVisible;
        return this;
    }
    
    /**
     * Item metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemMetadata")
    public PlaceOrder200ApplicationJSONOrdersItemMetadata itemMetadata;
    public PlaceOrder200ApplicationJSONOrders withItemMetadata(PlaceOrder200ApplicationJSONOrdersItemMetadata itemMetadata) {
        this.itemMetadata = itemMetadata;
        return this;
    }
    
    /**
     * Information on each item in the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public PlaceOrder200ApplicationJSONOrdersItems[] items;
    public PlaceOrder200ApplicationJSONOrders withItems(PlaceOrder200ApplicationJSONOrdersItems[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Last change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastChange")
    public String lastChange;
    public PlaceOrder200ApplicationJSONOrders withLastChange(String lastChange) {
        this.lastChange = lastChange;
        return this;
    }
    
    /**
     * Merchant name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantName")
    public String merchantName;
    public PlaceOrder200ApplicationJSONOrders withMerchantName(String merchantName) {
        this.merchantName = merchantName;
        return this;
    }
    
    /**
     * `orderForm` creation date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderFormCreationDate")
    public String orderFormCreationDate;
    public PlaceOrder200ApplicationJSONOrders withOrderFormCreationDate(String orderFormCreationDate) {
        this.orderFormCreationDate = orderFormCreationDate;
        return this;
    }
    
    /**
     * Order group. Orders that involve different sellers are split into different orders of a same order group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderGroup")
    public String orderGroup;
    public PlaceOrder200ApplicationJSONOrders withOrderGroup(String orderGroup) {
        this.orderGroup = orderGroup;
        return this;
    }
    
    /**
     * ID of the order in the Order Management System (OMS).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    public String orderId;
    public PlaceOrder200ApplicationJSONOrders withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * Information on the order's payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentData")
    public PlaceOrder200ApplicationJSONOrdersPaymentData paymentData;
    public PlaceOrder200ApplicationJSONOrders withPaymentData(PlaceOrder200ApplicationJSONOrdersPaymentData paymentData) {
        this.paymentData = paymentData;
        return this;
    }
    
    /**
     * Information on rates and benefits that apply to the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ratesAndBenefitsData")
    public PlaceOrder200ApplicationJSONOrdersRatesAndBenefitsData ratesAndBenefitsData;
    public PlaceOrder200ApplicationJSONOrders withRatesAndBenefitsData(PlaceOrder200ApplicationJSONOrdersRatesAndBenefitsData ratesAndBenefitsData) {
        this.ratesAndBenefitsData = ratesAndBenefitsData;
        return this;
    }
    
    /**
     * Rounding error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roundingError")
    public Long roundingError;
    public PlaceOrder200ApplicationJSONOrders withRoundingError(Long roundingError) {
        this.roundingError = roundingError;
        return this;
    }
    
    /**
     * Sales Associate (Seller) identification code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salesAssociateId")
    public String salesAssociateId;
    public PlaceOrder200ApplicationJSONOrders withSalesAssociateId(String salesAssociateId) {
        this.salesAssociateId = salesAssociateId;
        return this;
    }
    
    /**
     * Sales channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salesChannel")
    public String salesChannel;
    public PlaceOrder200ApplicationJSONOrders withSalesChannel(String salesChannel) {
        this.salesChannel = salesChannel;
        return this;
    }
    
    /**
     * ID of the order in the seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerOrderId")
    public String sellerOrderId;
    public PlaceOrder200ApplicationJSONOrders withSellerOrderId(String sellerOrderId) {
        this.sellerOrderId = sellerOrderId;
        return this;
    }
    
    /**
     * Information on each seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellers")
    public PlaceOrder200ApplicationJSONOrdersSellers[] sellers;
    public PlaceOrder200ApplicationJSONOrders withSellers(PlaceOrder200ApplicationJSONOrdersSellers[] sellers) {
        this.sellers = sellers;
        return this;
    }
    
    /**
     * Shipping information pertinent to the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingData")
    public PlaceOrder200ApplicationJSONOrdersShippingData shippingData;
    public PlaceOrder200ApplicationJSONOrders withShippingData(PlaceOrder200ApplicationJSONOrdersShippingData shippingData) {
        this.shippingData = shippingData;
        return this;
    }
    
    /**
     * State.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public PlaceOrder200ApplicationJSONOrders withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Store ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeId")
    public String storeId;
    public PlaceOrder200ApplicationJSONOrders withStoreId(String storeId) {
        this.storeId = storeId;
        return this;
    }
    
    /**
     * Time zone creation date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZoneCreationDate")
    public String timeZoneCreationDate;
    public PlaceOrder200ApplicationJSONOrders withTimeZoneCreationDate(String timeZoneCreationDate) {
        this.timeZoneCreationDate = timeZoneCreationDate;
        return this;
    }
    
    /**
     * Time zone last change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZoneLastChange")
    public String timeZoneLastChange;
    public PlaceOrder200ApplicationJSONOrders withTimeZoneLastChange(String timeZoneLastChange) {
        this.timeZoneLastChange = timeZoneLastChange;
        return this;
    }
    
    /**
     * Information on order totals.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totals")
    public PlaceOrder200ApplicationJSONOrdersTotals[] totals;
    public PlaceOrder200ApplicationJSONOrders withTotals(PlaceOrder200ApplicationJSONOrdersTotals[] totals) {
        this.totals = totals;
        return this;
    }
    
    /**
     * User type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userType")
    public String userType;
    public PlaceOrder200ApplicationJSONOrders withUserType(String userType) {
        this.userType = userType;
        return this;
    }
    
    /**
     * Value of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Long value;
    public PlaceOrder200ApplicationJSONOrders withValue(Long value) {
        this.value = value;
        return this;
    }
    
}
