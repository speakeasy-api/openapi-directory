// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EventTypeEnum string

const (
	EventTypeEnumAccount         EventTypeEnum = "account"
	EventTypeEnumMessageStatus   EventTypeEnum = "messageStatus"
	EventTypeEnumMessageIncoming EventTypeEnum = "messageIncoming"
)

func (e EventTypeEnum) ToPointer() *EventTypeEnum {
	return &e
}

func (e *EventTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account":
		fallthrough
	case "messageStatus":
		fallthrough
	case "messageIncoming":
		*e = EventTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventTypeEnum: %v", v)
	}
}
