// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListTypeRegistrationsActionEnum
type POSTListTypeRegistrationsActionEnum string

const (
	POSTListTypeRegistrationsActionEnumListTypeRegistrations POSTListTypeRegistrationsActionEnum = "ListTypeRegistrations"
)

func (e *POSTListTypeRegistrationsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListTypeRegistrations":
		*e = POSTListTypeRegistrationsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListTypeRegistrationsActionEnum: %s", s)
	}
}

// POSTListTypeRegistrationsVersionEnum
type POSTListTypeRegistrationsVersionEnum string

const (
	POSTListTypeRegistrationsVersionEnumTwoThousandAndTen0515 POSTListTypeRegistrationsVersionEnum = "2010-05-15"
)

func (e *POSTListTypeRegistrationsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = POSTListTypeRegistrationsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListTypeRegistrationsVersionEnum: %s", s)
	}
}

type POSTListTypeRegistrationsRequest struct {
	Action POSTListTypeRegistrationsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                              `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                               `request:"mediaType=text/xml"`
	Version           POSTListTypeRegistrationsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListTypeRegistrationsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
