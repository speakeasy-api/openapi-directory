<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class BillbeeInterfacesBillbeeAPIModelOrderItemInput
{
    /**
     * A list of product attributes for this position
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BillbeeInterfacesBillbeeAPIModelOrderItemAttribute> $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('Attributes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BillbeeInterfacesBillbeeAPIModelOrderItemAttribute>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributes = null;
    
    /**
     * The billbee id of this item
     * 
     * @var ?int $billbeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillbeeId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $billbeeId = null;
    
    /**
     * Sets the discount in percent
     * 
     * @var ?float $discount
     */
	#[\JMS\Serializer\Annotation\SerializedName('Discount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $discount = null;
    
    /**
     * If true, the import of this order won't adjust the stock level at billbee.
     * 
     * @var ?bool $dontAdjustStock
     */
	#[\JMS\Serializer\Annotation\SerializedName('DontAdjustStock')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $dontAdjustStock = null;
    
    /**
     * If true, the price will be overwritten by the known article price in billbee if available
     * 
     * @var ?bool $getPriceFromArticleIfAny
     */
	#[\JMS\Serializer\Annotation\SerializedName('GetPriceFromArticleIfAny')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $getPriceFromArticleIfAny = null;
    
    /**
     * Contains the SKU from OrderDetail (if available) or from Product
     * 
     * @var ?string $invoiceSKU
     */
	#[\JMS\Serializer\Annotation\SerializedName('InvoiceSKU')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $invoiceSKU = null;
    
    /**
     * Determines if it is a coupon, which is interpreted as tax-free payment
     * 
     * @var ?bool $isCoupon
     */
	#[\JMS\Serializer\Annotation\SerializedName('IsCoupon')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isCoupon = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Product')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BillbeeInterfacesBillbeeAPIModelSoldProductInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BillbeeInterfacesBillbeeAPIModelSoldProductInput $product = null;
    
    /**
     * The sold quantity
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('Quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     * Contains the used serial number
     * 
     * @var ?string $serialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('SerialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serialNumber = null;
    
    /**
     * Determines if it is a coupon, which is interpreted as tax-free payment
     * 
     * @var ?string $shippingProfileId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ShippingProfileId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shippingProfileId = null;
    
    /**
     * The tax amount in the total price
     * 
     * @var ?float $taxAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('TaxAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $taxAmount = null;
    
    /**
     * The tax index.
     * 
     * @var ?int $taxIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('TaxIndex')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $taxIndex = null;
    
    /**
     * The total price (unit price * quantity)
     * 
     * @var ?float $totalPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('TotalPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $totalPrice = null;
    
    /**
     * Id of the individual transaction. Only required by Ebay to detect aggregated orders
     * 
     * @var ?string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('TransactionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionId = null;
    
    /**
     * Is just used for the billbee api
     * 
     * @var ?float $unrebatedTotalPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('UnrebatedTotalPrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $unrebatedTotalPrice = null;
    
	public function __construct()
	{
		$this->attributes = null;
		$this->billbeeId = null;
		$this->discount = null;
		$this->dontAdjustStock = null;
		$this->getPriceFromArticleIfAny = null;
		$this->invoiceSKU = null;
		$this->isCoupon = null;
		$this->product = null;
		$this->quantity = null;
		$this->serialNumber = null;
		$this->shippingProfileId = null;
		$this->taxAmount = null;
		$this->taxIndex = null;
		$this->totalPrice = null;
		$this->transactionId = null;
		$this->unrebatedTotalPrice = null;
	}
}
