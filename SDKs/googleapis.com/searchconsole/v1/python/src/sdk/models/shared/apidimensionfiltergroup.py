"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import apidimensionfilter as shared_apidimensionfilter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class APIDimensionFilterGroupGroupTypeEnum(str, Enum):
    AND = 'AND'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIDimensionFilterGroup:
    r"""A set of dimension value filters to test against each row. Only rows that pass all filter groups will be returned. All results within a filter group are either AND'ed or OR'ed together, depending on the group type selected. All filter groups are AND'ed together."""
    
    filters: Optional[list[shared_apidimensionfilter.APIDimensionFilter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filters'), 'exclude': lambda f: f is None }})  
    group_type: Optional[APIDimensionFilterGroupGroupTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupType'), 'exclude': lambda f: f is None }})  
    