// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type GETMassUpdateType struct {
	// Type of mass action.
	//
	ActionType *string `json:"actionType,omitempty"`
	// Date and time that the mass action was completed. The format is `yyyy-MM-dd hh:mm:ss`.
	//
	EndedOn *time.Time `json:"endedOn,omitempty"`
	// Total number of failed records.
	//
	// This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have failed so far. When the mass action **status** is Pending, this field is null.
	//
	ErrorCount *string `json:"errorCount,omitempty"`
	// Size of the input file in bytes.
	//
	InputSize *int64 `json:"inputSize,omitempty"`
	// Size of the response file in bytes.
	//
	OutputSize *int64 `json:"outputSize,omitempty"`
	// Type of output for the response file. The following table describes the output type.
	//
	// | Output Type    | Description                         |
	// |----------------|-------------------------------------|
	// | (url:.csv.zip) | URL pointing to a zipped .csv file. |
	//
	OutputType *string `json:"outputType,omitempty"`
	// URL to download the response file. The response file is a zipped .csv file.
	// The response file is identical to the file you uploaded to perform the mass action, with additional columns providing information about the outcome of each record.
	// This field only returns a value when the mass action **status** is Completed or Stopped. Otherwise, this field is null.
	//
	OutputURL *string `json:"outputURL,omitempty"`
	// Total number of processed records. This field is equal to the sum of `errorCount` and `successCount`.
	//
	// This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have been processed so far. When the mass action **status** is Pending, this field is null.
	//
	ProcessedCount *string `json:"processedCount,omitempty"`
	// Date and time that Zuora started processing the mass action. The format is `yyyy-MM-dd hh:mm:ss`.
	//
	StartedOn *time.Time `json:"startedOn,omitempty"`
	// Status of the mass action. The following table describes the mass action statuses.
	//
	// | Status     | Description                                                                |
	// |------------|----------------------------------------------------------------------------|
	// | Pending    | Mass action has not yet started being processed.                           |
	// | Processing | Mass action is in progress.                                                |
	// | Stopping   | Mass action is in the process of stopping, but has not yet stopped.        |
	// | Stopped    | Mass action has stopped.                                                   |
	// | Completed  | Mass action was successfully completed. There may still be failed records. |
	// | Failed     | Mass action failed. No records are processed. No response file is created. |
	//
	Status *string `json:"status,omitempty"`
	// Returns `true` if the request was processed successfully.
	//
	Success *bool `json:"success,omitempty"`
	// Total number of successful records.
	// This field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have succeeded so far. When the mass action **status** is Pending, this field is null.
	//
	SuccessCount *string `json:"successCount,omitempty"`
	// Total number of records in the uploaded mass action file.
	// When the mass action **status** is Pending, this field is null.
	//
	TotalCount *string `json:"totalCount,omitempty"`
	// Email of the person who uploaded the mass action file.
	//
	UploadedBy *string `json:"uploadedBy,omitempty"`
	// Date and time that the mass action file was uploaded. The format is `yyyy-MM-dd hh:mm:ss`.
	//
	UploadedOn *time.Time `json:"uploadedOn,omitempty"`
}
