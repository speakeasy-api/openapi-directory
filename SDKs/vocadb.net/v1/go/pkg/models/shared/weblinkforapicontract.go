// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WebLinkForAPIContractCategoryEnum string

const (
	WebLinkForAPIContractCategoryEnumOfficial   WebLinkForAPIContractCategoryEnum = "Official"
	WebLinkForAPIContractCategoryEnumCommercial WebLinkForAPIContractCategoryEnum = "Commercial"
	WebLinkForAPIContractCategoryEnumReference  WebLinkForAPIContractCategoryEnum = "Reference"
	WebLinkForAPIContractCategoryEnumOther      WebLinkForAPIContractCategoryEnum = "Other"
)

func (e *WebLinkForAPIContractCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Official":
		fallthrough
	case "Commercial":
		fallthrough
	case "Reference":
		fallthrough
	case "Other":
		*e = WebLinkForAPIContractCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WebLinkForAPIContractCategoryEnum: %s", s)
	}
}

type WebLinkForAPIContract struct {
	Category         *WebLinkForAPIContractCategoryEnum `json:"category,omitempty"`
	Description      *string                            `json:"description,omitempty"`
	DescriptionOrURL *string                            `json:"descriptionOrUrl,omitempty"`
	Disabled         *bool                              `json:"disabled,omitempty"`
	ID               *int                               `json:"id,omitempty"`
	URL              *string                            `json:"url,omitempty"`
}
