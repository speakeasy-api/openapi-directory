/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class PayoutSettingsMerchantLevel {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public PayoutSettingsMerchantLevel(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Delete a payout setting
     * Deletes the payout setting identified in the path.
     * 
     * Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * 
     * * Management API\u2014Payout account settings read and write
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse deleteMerchantsMerchantIdPayoutSettingsPayoutSettingsId(org.openapis.openapi.models.operations.DeleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdRequest request, org.openapis.openapi.models.operations.DeleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdRequest.class, baseUrl, "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse res = new org.openapis.openapi.models.operations.DeleteMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse(contentType, httpRes.statusCode()) {{
            restServiceError = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 422 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RestServiceError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RestServiceError.class);
                res.restServiceError = out;
            }
        }

        return res;
    }

    /**
     * Get a list of payout settings
     * Returns the list of payout settings for the merchant account identified in the path.
     * 
     * Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API\u2014Payout account settings read
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsResponse getMerchantsMerchantIdPayoutSettings(org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsRequest request, org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsRequest.class, baseUrl, "/merchants/{merchantId}/payoutSettings", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsResponse res = new org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsResponse(contentType, httpRes.statusCode()) {{
            payoutSettingsResponse = null;
            restServiceError = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PayoutSettingsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PayoutSettingsResponse.class);
                res.payoutSettingsResponse = out;
            }
        }
        else if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 422 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RestServiceError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RestServiceError.class);
                res.restServiceError = out;
            }
        }

        return res;
    }

    /**
     * Get a payout setting
     * Returns the payout setting identified in the path.
     * 
     * Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API\u2014Payout account settings read
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse getMerchantsMerchantIdPayoutSettingsPayoutSettingsId(org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsPayoutSettingsIdRequest request, org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsPayoutSettingsIdSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsPayoutSettingsIdRequest.class, baseUrl, "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse res = new org.openapis.openapi.models.operations.GetMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse(contentType, httpRes.statusCode()) {{
            payoutSettings = null;
            restServiceError = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PayoutSettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PayoutSettings.class);
                res.payoutSettings = out;
            }
        }
        else if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 422 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RestServiceError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RestServiceError.class);
                res.restServiceError = out;
            }
        }

        return res;
    }

    /**
     * Update a payout setting
     * Updates the payout setting identified in the path. You can enable or disable the payout setting.
     * 
     * Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * 
     * * Management API\u2014Payout account settings read and write
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PatchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse patchMerchantsMerchantIdPayoutSettingsPayoutSettingsId(org.openapis.openapi.models.operations.PatchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdRequest request, org.openapis.openapi.models.operations.PatchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PatchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdRequest.class, baseUrl, "/merchants/{merchantId}/payoutSettings/{payoutSettingsId}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "updatePayoutSettingsRequest", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PatchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse res = new org.openapis.openapi.models.operations.PatchMerchantsMerchantIdPayoutSettingsPayoutSettingsIdResponse(contentType, httpRes.statusCode()) {{
            payoutSettings = null;
            restServiceError = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PayoutSettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PayoutSettings.class);
                res.payoutSettings = out;
            }
        }
        else if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 422 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RestServiceError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RestServiceError.class);
                res.restServiceError = out;
            }
        }

        return res;
    }

    /**
     * Add a payout setting
     * Sends a request to add a payout setting for the merchant account specified in the path. A payout setting links the merchant account to the [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments) that contains the details of the payout bank account. Adyen verifies the bank account before allowing and enabling the payout setting.
     * 
     * If you're accepting payments in multiple currencies, you may add multiple payout settings for the merchant account.
     * 
     * Use this endpoint if your integration requires it, such as Adyen for Platforms Manage. Your Adyen contact will set up your access.
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * 
     * * Management API\u2014Payout account settings read and write
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostMerchantsMerchantIdPayoutSettingsResponse postMerchantsMerchantIdPayoutSettings(org.openapis.openapi.models.operations.PostMerchantsMerchantIdPayoutSettingsRequest request, org.openapis.openapi.models.operations.PostMerchantsMerchantIdPayoutSettingsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.PostMerchantsMerchantIdPayoutSettingsRequest.class, baseUrl, "/merchants/{merchantId}/payoutSettings", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "payoutSettingsRequest", "json");
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostMerchantsMerchantIdPayoutSettingsResponse res = new org.openapis.openapi.models.operations.PostMerchantsMerchantIdPayoutSettingsResponse(contentType, httpRes.statusCode()) {{
            payoutSettings = null;
            restServiceError = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.PayoutSettings out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.PayoutSettings.class);
                res.payoutSettings = out;
            }
        }
        else if (httpRes.statusCode() == 204) {
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 401 || httpRes.statusCode() == 403 || httpRes.statusCode() == 422 || httpRes.statusCode() == 500) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RestServiceError out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RestServiceError.class);
                res.restServiceError = out;
            }
        }

        return res;
    }
}