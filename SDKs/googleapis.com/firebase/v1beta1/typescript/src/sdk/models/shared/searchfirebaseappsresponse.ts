/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FirebaseAppInfo } from "./firebaseappinfo";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class SearchFirebaseAppsResponse extends SpeakeasyBase {
  /**
   * One page of results from a call to `SearchFirebaseApps`.
   */
  @SpeakeasyMetadata({ elemType: FirebaseAppInfo })
  @Expose({ name: "apps" })
  @Type(() => FirebaseAppInfo)
  apps?: FirebaseAppInfo[];

  /**
   * If the result list is too large to fit in a single response, then a token is returned. This token can be used in a subsequent calls to `SearchFirebaseApps` to find the next group of Apps. Page tokens are short-lived and should not be persisted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
