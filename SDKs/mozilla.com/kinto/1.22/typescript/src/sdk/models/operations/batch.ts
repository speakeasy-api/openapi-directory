/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum BatchBatchPayloadSchemaDefaultsMethodEnum {
  Get = "GET",
  Head = "HEAD",
  Delete = "DELETE",
  Trace = "TRACE",
  Post = "POST",
  Put = "PUT",
  Patch = "PATCH",
}

export class BatchBatchPayloadSchemaDefaults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: BatchBatchPayloadSchemaDefaultsMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;
}

export enum BatchBatchPayloadSchemaRequestsMethodEnum {
  Get = "GET",
  Head = "HEAD",
  Delete = "DELETE",
  Trace = "TRACE",
  Post = "POST",
  Put = "PUT",
  Patch = "PATCH",
}

export class BatchBatchPayloadSchemaRequests extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: BatchBatchPayloadSchemaRequestsMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;
}

export class BatchBatchPayloadSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "defaults" })
  @Type(() => BatchBatchPayloadSchemaDefaults)
  defaults?: BatchBatchPayloadSchemaDefaults;

  @SpeakeasyMetadata({ elemType: BatchBatchPayloadSchemaRequests })
  @Expose({ name: "requests" })
  @Type(() => BatchBatchPayloadSchemaRequests)
  requests: BatchBatchPayloadSchemaRequests[];
}

/**
 * The request was badly formatted.
 */
export class BatchErrorSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "errno" })
  errno: number;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error: string;

  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  info?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class BatchBatchResponseBodySchemaResponses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: number;
}

/**
 * Return a list of operation responses.
 */
export class BatchBatchResponseBodySchema extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: BatchBatchResponseBodySchemaResponses })
  @Expose({ name: "responses" })
  @Type(() => BatchBatchResponseBodySchemaResponses)
  responses: BatchBatchResponseBodySchemaResponses[];
}

export class BatchResponse extends SpeakeasyBase {
  /**
   * Return a list of operation responses.
   */
  @SpeakeasyMetadata()
  batchResponseBodySchema?: BatchBatchResponseBodySchema;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The request was badly formatted.
   */
  @SpeakeasyMetadata()
  errorSchema?: BatchErrorSchema;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
