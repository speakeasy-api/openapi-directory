<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateJobQueueRequestBody
{
    /**
     * <p>Details the set of compute environments mapped to a job queue and their order relative to each other. This is one of the parameters used by the job scheduler to determine which compute environment runs a given job. Compute environments must be in the <code>VALID</code> state before you can associate them with a job queue. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.</p> <note> <p>All compute environments that are associated with a job queue must share the same architecture. Batch doesn't support mixing compute environment architecture types in a single job queue.</p> </note>
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ComputeEnvironmentOrder> $computeEnvironmentOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('computeEnvironmentOrder')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ComputeEnvironmentOrder>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $computeEnvironmentOrder = null;
    
    /**
     * The name or the Amazon Resource Name (ARN) of the job queue.
     * 
     * @var string $jobQueue
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobQueue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $jobQueue;
    
    /**
     * The priority of the job queue. Job queues with a higher priority (or a higher integer value for the <code>priority</code> parameter) are evaluated first when associated with the same compute environment. Priority is determined in descending order. For example, a job queue with a priority value of <code>10</code> is given scheduling preference over a job queue with a priority value of <code>1</code>. All of the compute environments must be either EC2 (<code>EC2</code> or <code>SPOT</code>) or Fargate (<code>FARGATE</code> or <code>FARGATE_SPOT</code>). EC2 and Fargate compute environments can't be mixed.
     * 
     * @var ?int $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $priority = null;
    
    /**
     * Amazon Resource Name (ARN) of the fair share scheduling policy. Once a job queue is created, the fair share scheduling policy can be replaced but not removed. The format is <code>aws:<i>Partition</i>:batch:<i>Region</i>:<i>Account</i>:scheduling-policy/<i>Name</i> </code>. For example, <code>aws:aws:batch:us-west-2:123456789012:scheduling-policy/MySchedulingPolicy</code>.
     * 
     * @var ?string $schedulingPolicyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedulingPolicyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $schedulingPolicyArn = null;
    
    /**
     * Describes the queue's ability to accept new jobs. If the job queue state is <code>ENABLED</code>, it can accept jobs. If the job queue state is <code>DISABLED</code>, new jobs can't be added to the queue, but jobs already in the queue can finish.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateJobQueueRequestBodyStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateJobQueueRequestBodyStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateJobQueueRequestBodyStateEnum $state = null;
    
	public function __construct()
	{
		$this->computeEnvironmentOrder = null;
		$this->jobQueue = "";
		$this->priority = null;
		$this->schedulingPolicyArn = null;
		$this->state = null;
	}
}
