"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateFunctionUrlConfigResponse = exports.CreateFunctionUrlConfigRequest = exports.CreateFunctionUrlConfigRequestBody = exports.CreateFunctionUrlConfigRequestBodyCors = exports.CreateFunctionUrlConfigRequestBodyAuthTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * The type of authentication that your function URL uses. Set to <code>AWS_IAM</code> if you want to restrict access to authenticated users only. Set to <code>NONE</code> if you want to bypass IAM authentication to create a public endpoint. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html">Security and auth model for Lambda function URLs</a>.
 */
var CreateFunctionUrlConfigRequestBodyAuthTypeEnum;
(function (CreateFunctionUrlConfigRequestBodyAuthTypeEnum) {
    CreateFunctionUrlConfigRequestBodyAuthTypeEnum["None"] = "NONE";
    CreateFunctionUrlConfigRequestBodyAuthTypeEnum["AwsIam"] = "AWS_IAM";
})(CreateFunctionUrlConfigRequestBodyAuthTypeEnum = exports.CreateFunctionUrlConfigRequestBodyAuthTypeEnum || (exports.CreateFunctionUrlConfigRequestBodyAuthTypeEnum = {}));
/**
 * The <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS">cross-origin resource sharing (CORS)</a> settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
 */
var CreateFunctionUrlConfigRequestBodyCors = /** @class */ (function (_super) {
    __extends(CreateFunctionUrlConfigRequestBodyCors, _super);
    function CreateFunctionUrlConfigRequestBodyCors() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AllowCredentials" }),
        __metadata("design:type", Boolean)
    ], CreateFunctionUrlConfigRequestBodyCors.prototype, "allowCredentials", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AllowHeaders" }),
        __metadata("design:type", Array)
    ], CreateFunctionUrlConfigRequestBodyCors.prototype, "allowHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AllowMethods" }),
        __metadata("design:type", Array)
    ], CreateFunctionUrlConfigRequestBodyCors.prototype, "allowMethods", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AllowOrigins" }),
        __metadata("design:type", Array)
    ], CreateFunctionUrlConfigRequestBodyCors.prototype, "allowOrigins", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ExposeHeaders" }),
        __metadata("design:type", Array)
    ], CreateFunctionUrlConfigRequestBodyCors.prototype, "exposeHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxAge" }),
        __metadata("design:type", Number)
    ], CreateFunctionUrlConfigRequestBodyCors.prototype, "maxAge", void 0);
    return CreateFunctionUrlConfigRequestBodyCors;
}(utils_1.SpeakeasyBase));
exports.CreateFunctionUrlConfigRequestBodyCors = CreateFunctionUrlConfigRequestBodyCors;
var CreateFunctionUrlConfigRequestBody = /** @class */ (function (_super) {
    __extends(CreateFunctionUrlConfigRequestBody, _super);
    function CreateFunctionUrlConfigRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AuthType" }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequestBody.prototype, "authType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Cors" }),
        (0, class_transformer_1.Type)(function () { return CreateFunctionUrlConfigRequestBodyCors; }),
        __metadata("design:type", CreateFunctionUrlConfigRequestBodyCors)
    ], CreateFunctionUrlConfigRequestBody.prototype, "cors", void 0);
    return CreateFunctionUrlConfigRequestBody;
}(utils_1.SpeakeasyBase));
exports.CreateFunctionUrlConfigRequestBody = CreateFunctionUrlConfigRequestBody;
var CreateFunctionUrlConfigRequest = /** @class */ (function (_super) {
    __extends(CreateFunctionUrlConfigRequest, _super);
    function CreateFunctionUrlConfigRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=FunctionName",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "functionName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Qualifier",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "qualifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", CreateFunctionUrlConfigRequestBody)
    ], CreateFunctionUrlConfigRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigRequest.prototype, "xAmzSignedHeaders", void 0);
    return CreateFunctionUrlConfigRequest;
}(utils_1.SpeakeasyBase));
exports.CreateFunctionUrlConfigRequest = CreateFunctionUrlConfigRequest;
var CreateFunctionUrlConfigResponse = /** @class */ (function (_super) {
    __extends(CreateFunctionUrlConfigResponse, _super);
    function CreateFunctionUrlConfigResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateFunctionUrlConfigResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", shared.CreateFunctionUrlConfigResponse)
    ], CreateFunctionUrlConfigResponse.prototype, "createFunctionUrlConfigResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateFunctionUrlConfigResponse.prototype, "invalidParameterValueException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateFunctionUrlConfigResponse.prototype, "resourceConflictException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateFunctionUrlConfigResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateFunctionUrlConfigResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateFunctionUrlConfigResponse.prototype, "resourceNotFoundException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateFunctionUrlConfigResponse.prototype, "serviceException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], CreateFunctionUrlConfigResponse.prototype, "tooManyRequestsException", void 0);
    return CreateFunctionUrlConfigResponse;
}(utils_1.SpeakeasyBase));
exports.CreateFunctionUrlConfigResponse = CreateFunctionUrlConfigResponse;
