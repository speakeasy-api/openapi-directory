// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type DraftRegistrationsCreateDraftRegistrationAttributesNodeLicense struct {
	// A list of names of copyright holders for the license.
	CopyrightHolders []string `json:"copyright_holders,omitempty"`
	// The year the copyright was made.
	Year *int64 `json:"year,omitempty"`
}

// DraftRegistrationsCreateDraftRegistrationAttributesInput - The properties of the Draft Registration entity.
type DraftRegistrationsCreateDraftRegistrationAttributesInput struct {
	// The category of the Draft Registration.
	Category *string `json:"category,omitempty"`
	// The description of the Draft Registration.
	Description *string                                                         `json:"description,omitempty"`
	NodeLicense *DraftRegistrationsCreateDraftRegistrationAttributesNodeLicense `json:"node_license,omitempty"`
	// This is a legacy format for `registration_responses`.
	RegistrationMetadata map[string]interface{} `json:"registration_metadata,omitempty"`
	// A dictionary of question IDs and responses from the registration schema.
	RegistrationResponses map[string]interface{} `json:"registration_responses,omitempty"`
	// The searchable tags of the Draft Registration.
	Tags []string `json:"tags,omitempty"`
	// The title of the Draft Registration.
	Title *string `json:"title,omitempty"`
}

type DraftRegistrationsCreateDraftRegistrationInput struct {
	// The properties of the Draft Registration entity.
	Attributes DraftRegistrationsCreateDraftRegistrationAttributesInput `json:"attributes"`
}

type DraftRegistrationsCreateRequest struct {
	Request DraftRegistrationsCreateDraftRegistrationInput `request:"mediaType=application/json"`
}

// DraftRegistrationsCreateDraftRegistrationAttributes - The properties of the Draft Registration entity.
type DraftRegistrationsCreateDraftRegistrationAttributes struct {
	// The category of the Draft Registration.
	Category *string
	// The current users permission level for the Draft Registration.
	CurrentUserPermissions []string
	// The time at which the draft registration was first initiated, as an iso8601 formatted timestamp.
	DatetimeInitiated *time.Time
	// The time at which the draft registration was last updated, as an iso8601 formatted timestamp.
	DatetimeUpdated *time.Time
	// The description of the Draft Registration.
	Description *string
	// This indicates whether a Draft Registration was branched from a project.
	HasProject  *bool
	NodeLicense *DraftRegistrationsCreateDraftRegistrationAttributesNodeLicense
	// This is a legacy format for `registration_responses`.
	RegistrationMetadata map[string]interface{}
	// A dictionary of question IDs and responses from the registration schema.
	RegistrationResponses map[string]interface{}
	// The searchable tags of the Draft Registration.
	Tags []string
	// The title of the Draft Registration.
	Title *string
}

// DraftRegistrationsCreateDraftRegistrationLinks - URLs to alternative representations of the draft registration entity.
type DraftRegistrationsCreateDraftRegistrationLinks struct {
	// A link to the draft registration's page on the OSF.
	HTML string
}

// DraftRegistrationsCreateDraftRegistrationRelationships - URLs to other entities or entity collections that have a relationship to the draft registration entity.
type DraftRegistrationsCreateDraftRegistrationRelationships struct {
	// A link to the node that this draft registration was created from.
	BranchedFrom *string
	// A link to the user who initiated the draft registration.
	Initiator *string
	// A link to the detailed registration schema that this draft conforms to.
	RegistrationSchema *string
}

// DraftRegistrationsCreateDraftRegistration - Created
type DraftRegistrationsCreateDraftRegistration struct {
	// The properties of the Draft Registration entity.
	Attributes DraftRegistrationsCreateDraftRegistrationAttributes
	// The unique identifier of the draft registration entity.
	ID string
	// URLs to alternative representations of the draft registration entity.
	Links DraftRegistrationsCreateDraftRegistrationLinks
	// URLs to other entities or entity collections that have a relationship to the draft registration entity.
	Relationships DraftRegistrationsCreateDraftRegistrationRelationships
	// The type identifier of the draft registration entity (`draft_registrations`).
	Type string
}

type DraftRegistrationsCreateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
