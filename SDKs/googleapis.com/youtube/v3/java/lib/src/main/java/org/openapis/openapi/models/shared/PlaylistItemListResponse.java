/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PlaylistItemListResponse - Successful response
 */
public class PlaylistItemListResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public PlaylistItemListResponse withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Serialized EventId of the request which produced this response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventId")
    public String eventId;

    public PlaylistItemListResponse withEventId(String eventId) {
        this.eventId = eventId;
        return this;
    }
    
    /**
     * A list of playlist items that match the request criteria.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public PlaylistItem[] items;

    public PlaylistItemListResponse withItems(PlaylistItem[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "youtube#playlistItemListResponse". Etag of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public PlaylistItemListResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The token that can be used as the value of the pageToken parameter to retrieve the next page in the result set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextPageToken")
    public String nextPageToken;

    public PlaylistItemListResponse withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * Paging details for lists of resources, including total number of items available and number of resources returned in a single page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageInfo")
    public PageInfo pageInfo;

    public PlaylistItemListResponse withPageInfo(PageInfo pageInfo) {
        this.pageInfo = pageInfo;
        return this;
    }
    
    /**
     * The token that can be used as the value of the pageToken parameter to retrieve the previous page in the result set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prevPageToken")
    public String prevPageToken;

    public PlaylistItemListResponse withPrevPageToken(String prevPageToken) {
        this.prevPageToken = prevPageToken;
        return this;
    }
    
    /**
     * Stub token pagination template to suppress results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokenPagination")
    public java.util.Map<String, Object> tokenPagination;

    public PlaylistItemListResponse withTokenPagination(java.util.Map<String, Object> tokenPagination) {
        this.tokenPagination = tokenPagination;
        return this;
    }
    
    /**
     * The visitorId identifies the visitor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visitorId")
    public String visitorId;

    public PlaylistItemListResponse withVisitorId(String visitorId) {
        this.visitorId = visitorId;
        return this;
    }
    
    public PlaylistItemListResponse(){}
}
