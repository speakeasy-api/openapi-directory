<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SbomReferenceIntotoPayload - The actual payload that contains the SBOM Reference data. The payload follows the intoto statement specification. See https://github.com/in-toto/attestation/blob/main/spec/v1.0/statement.md for more details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SbomReferenceIntotoPayload
{
    /**
     * Identifier for the schema of the Statement.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * A predicate which describes the SBOM being referenced.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SbomReferenceIntotoPredicate $predicate
     */
	#[\JMS\Serializer\Annotation\SerializedName('predicate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SbomReferenceIntotoPredicate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SbomReferenceIntotoPredicate $predicate = null;
    
    /**
     * URI identifying the type of the Predicate.
     * 
     * @var ?string $predicateType
     */
	#[\JMS\Serializer\Annotation\SerializedName('predicateType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $predicateType = null;
    
    /**
     * Set of software artifacts that the attestation applies to. Each element represents a single software artifact.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Subject> $subject
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Subject>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subject = null;
    
	public function __construct()
	{
		$this->type = null;
		$this->predicate = null;
		$this->predicateType = null;
		$this->subject = null;
	}
}
