// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListDirectives200ApplicationJSONActionEnum - The id of the action
type ListDirectives200ApplicationJSONActionEnum string

const (
	ListDirectives200ApplicationJSONActionEnumListDirectives ListDirectives200ApplicationJSONActionEnum = "listDirectives"
)

func (e *ListDirectives200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "listDirectives":
		*e = ListDirectives200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDirectives200ApplicationJSONActionEnum: %s", s)
	}
}

type ListDirectives200ApplicationJSONData struct {
	Directives []shared.Directive `json:"directives"`
}

// ListDirectives200ApplicationJSONResultEnum - Result of the request
type ListDirectives200ApplicationJSONResultEnum string

const (
	ListDirectives200ApplicationJSONResultEnumSuccess ListDirectives200ApplicationJSONResultEnum = "success"
	ListDirectives200ApplicationJSONResultEnumError   ListDirectives200ApplicationJSONResultEnum = "error"
)

func (e *ListDirectives200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = ListDirectives200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDirectives200ApplicationJSONResultEnum: %s", s)
	}
}

// ListDirectives200ApplicationJSON - Directives information
type ListDirectives200ApplicationJSON struct {
	// The id of the action
	Action ListDirectives200ApplicationJSONActionEnum `json:"action"`
	Data   ListDirectives200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result ListDirectives200ApplicationJSONResultEnum `json:"result"`
}

type ListDirectivesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Directives information
	ListDirectives200ApplicationJSONObject *ListDirectives200ApplicationJSON
}
