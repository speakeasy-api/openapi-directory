// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PremiumNewsByPlayerFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PremiumNewsByPlayerFormatEnum string

const (
	PremiumNewsByPlayerFormatEnumXML  PremiumNewsByPlayerFormatEnum = "xml"
	PremiumNewsByPlayerFormatEnumJSON PremiumNewsByPlayerFormatEnum = "json"
)

func (e *PremiumNewsByPlayerFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = PremiumNewsByPlayerFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PremiumNewsByPlayerFormatEnum: %s", s)
	}
}

type PremiumNewsByPlayerPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PremiumNewsByPlayerFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>10000507</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
}

type PremiumNewsByPlayerRequest struct {
	PathParams PremiumNewsByPlayerPathParams
}

type PremiumNewsByPlayerResponse struct {
	ContentType string
	News        []shared.News
	StatusCode  int
	RawResponse *http.Response
}
