<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAppsCardV1Card - Cards support a defined layout, interactive UI elements like buttons, and rich media like images. Use cards to present detailed information, gather information from users, and guide users to take a next step. In Google Chat, cards appear in several places: - As stand-alone messages. - Accompanying a text message, just beneath the text message. - As a [dialog](https://developers.google.com/chat/how-tos/dialogs). The following example JSON creates a "contact card" that features: - A header with the contact's name, job title, avatar picture. - A section with the contact information, including formatted text. - Buttons that users can click to share the contact or see more or less info. ![Example contact card](https://developers.google.com/chat/images/card_api_reference.png) ``` { "cardsV2": [ { "cardId": "unique-card-id", "card": { "header": { "title": "Sasha", "subtitle": "Software Engineer", "imageUrl": "https://developers.google.com/chat/images/quickstart-app-avatar.png", "imageType": "CIRCLE", "imageAltText": "Avatar for Sasha", }, "sections": [ { "header": "Contact Info", "collapsible": true, "uncollapsibleWidgetsCount": 1, "widgets": [ { "decoratedText": { "startIcon": { "knownIcon": "EMAIL", }, "text": "sasha@example.com", } }, { "decoratedText": { "startIcon": { "knownIcon": "PERSON", }, "text": "Online", }, }, { "decoratedText": { "startIcon": { "knownIcon": "PHONE", }, "text": "+1 (555) 555-1234", } }, { "buttonList": { "buttons": [ { "text": "Share", "onClick": { "openLink": { "url": "https://example.com/share", } } }, { "text": "Edit", "onClick": { "action": { "function": "goToView", "parameters": [ { "key": "viewType", "value": "EDIT", } ], } } }, ], } }, ], }, ], }, } ], } ```
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAppsCardV1Card
{
    /**
     * The card's actions. Actions are added to the card's toolbar menu. Because Chat app cards have no toolbar, `cardActions[]` is not supported by Chat apps. For example, the following JSON constructs a card action menu with Settings and Send Feedback options: ``` "card_actions": [ { "actionLabel": "Settings", "onClick": { "action": { "functionName": "goToView", "parameters": [ { "key": "viewType", "value": "SETTING" } ], "loadIndicator": "LoadIndicator.SPINNER" } } }, { "actionLabel": "Send Feedback", "onClick": { "openLink": { "url": "https://example.com/feedback" } } } ] ```
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardAction> $cardActions
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardActions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardAction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $cardActions = null;
    
    /**
     * In Google Workspace add-ons, sets the display properties of the `peekCardHeader`. Not supported by Chat apps.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardDisplayStyleEnum $displayStyle
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayStyle')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardDisplayStyleEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1CardDisplayStyleEnum $displayStyle = null;
    
    /**
     * A persistent (sticky) footer that that appears at the bottom of the card. Setting `fixedFooter` without specifying a `primaryButton` or a `secondaryButton` causes an error. Supported by Google Workspace Add-ons and Chat apps. For Chat apps, you can use fixed footers in [dialogs](https://developers.google.com/chat/how-tos/dialogs), but not [card messages](https://developers.google.com/chat/api/guides/message-formats/cards).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardFixedFooter $fixedFooter
     */
	#[\JMS\Serializer\Annotation\SerializedName('fixedFooter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardFixedFooter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1CardFixedFooter $fixedFooter = null;
    
    /**
     * Represents a card header.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardHeader $header
     */
	#[\JMS\Serializer\Annotation\SerializedName('header')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardHeader')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1CardHeader $header = null;
    
    /**
     * Name of the card. Used as a card identifier in card navigation. Because Chat apps don't support card navigation, they ignore this field.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Represents a card header.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardHeader $peekCardHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('peekCardHeader')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1CardHeader')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1CardHeader $peekCardHeader = null;
    
    /**
     * Contains a collection of widgets. Each section has its own, optional header. Sections are visually separated by a line divider.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Section> $sections
     */
	#[\JMS\Serializer\Annotation\SerializedName('sections')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Section>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sections = null;
    
	public function __construct()
	{
		$this->cardActions = null;
		$this->displayStyle = null;
		$this->fixedFooter = null;
		$this->header = null;
		$this->name = null;
		$this->peekCardHeader = null;
		$this->sections = null;
	}
}
