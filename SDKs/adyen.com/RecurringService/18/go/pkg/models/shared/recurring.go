// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecurringContractEnum - The type of recurring contract to be used.
// Possible values:
// * `ONECLICK` – The shopper opts to store their card details for future use. The shopper is present for the subsequent transaction, for cards the security code (CVC/CVV) is required.
// * `RECURRING` – Payment details are stored for future use. For cards, the security code (CVC/CVV) is not required for subsequent payments. This is used for shopper not present transactions.
// * `ONECLICK,RECURRING` – Payment details are stored for future use. This allows the use of the stored payment details regardless of whether the shopper is on your site or not.
type RecurringContractEnum string

const (
	RecurringContractEnumOneclick  RecurringContractEnum = "ONECLICK"
	RecurringContractEnumRecurring RecurringContractEnum = "RECURRING"
	RecurringContractEnumPayout    RecurringContractEnum = "PAYOUT"
)

func (e RecurringContractEnum) ToPointer() *RecurringContractEnum {
	return &e
}

func (e *RecurringContractEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ONECLICK":
		fallthrough
	case "RECURRING":
		fallthrough
	case "PAYOUT":
		*e = RecurringContractEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecurringContractEnum: %v", v)
	}
}

type Recurring struct {
	// The type of recurring contract to be used.
	// Possible values:
	// * `ONECLICK` – The shopper opts to store their card details for future use. The shopper is present for the subsequent transaction, for cards the security code (CVC/CVV) is required.
	// * `RECURRING` – Payment details are stored for future use. For cards, the security code (CVC/CVV) is not required for subsequent payments. This is used for shopper not present transactions.
	// * `ONECLICK,RECURRING` – Payment details are stored for future use. This allows the use of the stored payment details regardless of whether the shopper is on your site or not.
	Contract *RecurringContractEnum `json:"contract,omitempty"`
	// A descriptive name for this detail.
	RecurringDetailName *string `json:"recurringDetailName,omitempty"`
}
