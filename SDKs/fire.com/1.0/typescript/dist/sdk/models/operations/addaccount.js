"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddAccountResponse = exports.AddAccountAccount = exports.AddAccountAccountStatusEnum = exports.AddAccountAccountCurrency = exports.AddAccountAccountCurrencyCodeEnum = exports.AddAccountNewAccount = exports.AddAccountNewAccountCurrencyEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The currency of the new account
 */
var AddAccountNewAccountCurrencyEnum;
(function (AddAccountNewAccountCurrencyEnum) {
    AddAccountNewAccountCurrencyEnum["Eur"] = "EUR";
    AddAccountNewAccountCurrencyEnum["Gbp"] = "GBP";
})(AddAccountNewAccountCurrencyEnum = exports.AddAccountNewAccountCurrencyEnum || (exports.AddAccountNewAccountCurrencyEnum = {}));
/**
 * Details of the new account
 */
var AddAccountNewAccount = /** @class */ (function (_super) {
    __extends(AddAccountNewAccount, _super);
    function AddAccountNewAccount() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "acceptFeesAndCharges" }),
        __metadata("design:type", Boolean)
    ], AddAccountNewAccount.prototype, "acceptFeesAndCharges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountName" }),
        __metadata("design:type", String)
    ], AddAccountNewAccount.prototype, "accountName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], AddAccountNewAccount.prototype, "currency", void 0);
    return AddAccountNewAccount;
}(utils_1.SpeakeasyBase));
exports.AddAccountNewAccount = AddAccountNewAccount;
/**
 * The three letter code for the currency - either `EUR` or `GBP`.
 */
var AddAccountAccountCurrencyCodeEnum;
(function (AddAccountAccountCurrencyCodeEnum) {
    AddAccountAccountCurrencyCodeEnum["Eur"] = "EUR";
    AddAccountAccountCurrencyCodeEnum["Gbp"] = "GBP";
})(AddAccountAccountCurrencyCodeEnum = exports.AddAccountAccountCurrencyCodeEnum || (exports.AddAccountAccountCurrencyCodeEnum = {}));
/**
 * The currency.
 */
var AddAccountAccountCurrency = /** @class */ (function (_super) {
    __extends(AddAccountAccountCurrency, _super);
    function AddAccountAccountCurrency() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], AddAccountAccountCurrency.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], AddAccountAccountCurrency.prototype, "description", void 0);
    return AddAccountAccountCurrency;
}(utils_1.SpeakeasyBase));
exports.AddAccountAccountCurrency = AddAccountAccountCurrency;
/**
 * Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
 */
var AddAccountAccountStatusEnum;
(function (AddAccountAccountStatusEnum) {
    AddAccountAccountStatusEnum["Live"] = "LIVE";
    AddAccountAccountStatusEnum["BrexitMigrated"] = "BREXIT_MIGRATED";
})(AddAccountAccountStatusEnum = exports.AddAccountAccountStatusEnum || (exports.AddAccountAccountStatusEnum = {}));
/**
 * The details of the new account
 */
var AddAccountAccount = /** @class */ (function (_super) {
    __extends(AddAccountAccount, _super);
    function AddAccountAccount() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "balance" }),
        __metadata("design:type", Number)
    ], AddAccountAccount.prototype, "balance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cbic" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "cbic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ccan" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "ccan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ciban" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "ciban", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cnsc" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "cnsc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "colour" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "colour", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        (0, class_transformer_1.Type)(function () { return AddAccountAccountCurrency; }),
        __metadata("design:type", AddAccountAccountCurrency)
    ], AddAccountAccount.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultAccount" }),
        __metadata("design:type", Boolean)
    ], AddAccountAccount.prototype, "defaultAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "directDebitsAllowed" }),
        __metadata("design:type", Boolean)
    ], AddAccountAccount.prototype, "directDebitsAllowed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fopOnly" }),
        __metadata("design:type", Boolean)
    ], AddAccountAccount.prototype, "fopOnly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ican" }),
        __metadata("design:type", Number)
    ], AddAccountAccount.prototype, "ican", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], AddAccountAccount.prototype, "status", void 0);
    return AddAccountAccount;
}(utils_1.SpeakeasyBase));
exports.AddAccountAccount = AddAccountAccount;
var AddAccountResponse = /** @class */ (function (_super) {
    __extends(AddAccountResponse, _super);
    function AddAccountResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AddAccountAccount)
    ], AddAccountResponse.prototype, "account", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AddAccountResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AddAccountResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AddAccountResponse.prototype, "rawResponse", void 0);
    return AddAccountResponse;
}(utils_1.SpeakeasyBase));
exports.AddAccountResponse = AddAccountResponse;
