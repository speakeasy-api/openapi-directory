// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RequestDeletedNodesSummaryXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type RequestDeletedNodesSummaryXSdsDateFormatEnum string

const (
	RequestDeletedNodesSummaryXSdsDateFormatEnumUtc    RequestDeletedNodesSummaryXSdsDateFormatEnum = "UTC"
	RequestDeletedNodesSummaryXSdsDateFormatEnumLocal  RequestDeletedNodesSummaryXSdsDateFormatEnum = "LOCAL"
	RequestDeletedNodesSummaryXSdsDateFormatEnumOffset RequestDeletedNodesSummaryXSdsDateFormatEnum = "OFFSET"
	RequestDeletedNodesSummaryXSdsDateFormatEnumEpoch  RequestDeletedNodesSummaryXSdsDateFormatEnum = "EPOCH"
	RequestDeletedNodesSummaryXSdsDateFormatEnumLeet   RequestDeletedNodesSummaryXSdsDateFormatEnum = "LEET"
)

func (e RequestDeletedNodesSummaryXSdsDateFormatEnum) ToPointer() *RequestDeletedNodesSummaryXSdsDateFormatEnum {
	return &e
}

func (e *RequestDeletedNodesSummaryXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = RequestDeletedNodesSummaryXSdsDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestDeletedNodesSummaryXSdsDateFormatEnum: %v", v)
	}
}

type RequestDeletedNodesSummaryRequest struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *RequestDeletedNodesSummaryXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Filter string
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Range limit.
	//
	// Maximum 500.
	//
	//  For more results please use paging (`offset` + `limit`).
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Parent ID (can only be a room ID)
	NodeID int64 `pathParam:"style=simple,explode=false,name=node_id"`
	// Range offset
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Sort string
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

type RequestDeletedNodesSummaryResponse struct {
	ContentType string
	// OK
	DeletedNodeSummaryList *shared.DeletedNodeSummaryList
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
}
