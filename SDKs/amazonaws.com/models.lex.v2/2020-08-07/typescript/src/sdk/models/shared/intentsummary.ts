/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputContext } from "./inputcontext";
import { OutputContext } from "./outputcontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Summary information about an intent returned by the <code>ListIntents</code> operation.
 */
export class IntentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata({ elemType: InputContext })
  @Expose({ name: "inputContexts" })
  @Type(() => InputContext)
  inputContexts?: InputContext[];

  @SpeakeasyMetadata()
  @Expose({ name: "intentId" })
  intentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "intentName" })
  intentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata({ elemType: OutputContext })
  @Expose({ name: "outputContexts" })
  @Type(() => OutputContext)
  outputContexts?: OutputContext[];

  @SpeakeasyMetadata()
  @Expose({ name: "parentIntentSignature" })
  parentIntentSignature?: string;
}
