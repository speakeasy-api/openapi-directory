/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue } from "./googlecloudintegrationsv1alphaintegrationalertconfigthresholdvalue";
import { Expose, Type } from "class-transformer";

/**
 * The type of metric.
 */
export enum GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum {
  MetricTypeUnspecified = "METRIC_TYPE_UNSPECIFIED",
  EventErrorRate = "EVENT_ERROR_RATE",
  EventWarningRate = "EVENT_WARNING_RATE",
  TaskErrorRate = "TASK_ERROR_RATE",
  TaskWarningRate = "TASK_WARNING_RATE",
  TaskRate = "TASK_RATE",
  EventRate = "EVENT_RATE",
  EventAverageDuration = "EVENT_AVERAGE_DURATION",
  EventPercentileDuration = "EVENT_PERCENTILE_DURATION",
  TaskAverageDuration = "TASK_AVERAGE_DURATION",
  TaskPercentileDuration = "TASK_PERCENTILE_DURATION",
}

/**
 * The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
 */
export enum GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum {
  ThresholdTypeUnspecified = "THRESHOLD_TYPE_UNSPECIFIED",
  ExpectedMin = "EXPECTED_MIN",
  ExpectedMax = "EXPECTED_MAX",
}

/**
 * Message to be used to configure custom alerting in the {@code EventConfig} protos for an event.
 */
export class GoogleCloudIntegrationsV1alphaIntegrationAlertConfig extends SpeakeasyBase {
  /**
   * The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationPeriod" })
  aggregationPeriod?: string;

  /**
   * For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alertThreshold" })
  alertThreshold?: number;

  /**
   * Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disableAlert" })
  disableAlert?: boolean;

  /**
   * Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "durationThreshold" })
  durationThreshold?: string;

  /**
   * The type of metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metricType" })
  metricType?: GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum;

  /**
   * For either events or tasks, depending on the type of alert, count only final attempts, not retries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "onlyFinalAttempt" })
  onlyFinalAttempt?: boolean;

  /**
   * The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thresholdType" })
  thresholdType?: GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum;

  /**
   * The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thresholdValue" })
  @Type(
    () => GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue
  )
  thresholdValue?: GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue;
}
