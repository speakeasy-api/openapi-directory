// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProtectedResourceTypeEnum string

const (
	ProtectedResourceTypeEnumCloudfrontDistribution  ProtectedResourceTypeEnum = "CLOUDFRONT_DISTRIBUTION"
	ProtectedResourceTypeEnumRoute53HostedZone       ProtectedResourceTypeEnum = "ROUTE_53_HOSTED_ZONE"
	ProtectedResourceTypeEnumElasticIPAllocation     ProtectedResourceTypeEnum = "ELASTIC_IP_ALLOCATION"
	ProtectedResourceTypeEnumClassicLoadBalancer     ProtectedResourceTypeEnum = "CLASSIC_LOAD_BALANCER"
	ProtectedResourceTypeEnumApplicationLoadBalancer ProtectedResourceTypeEnum = "APPLICATION_LOAD_BALANCER"
	ProtectedResourceTypeEnumGlobalAccelerator       ProtectedResourceTypeEnum = "GLOBAL_ACCELERATOR"
)

func (e ProtectedResourceTypeEnum) ToPointer() *ProtectedResourceTypeEnum {
	return &e
}

func (e *ProtectedResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLOUDFRONT_DISTRIBUTION":
		fallthrough
	case "ROUTE_53_HOSTED_ZONE":
		fallthrough
	case "ELASTIC_IP_ALLOCATION":
		fallthrough
	case "CLASSIC_LOAD_BALANCER":
		fallthrough
	case "APPLICATION_LOAD_BALANCER":
		fallthrough
	case "GLOBAL_ACCELERATOR":
		*e = ProtectedResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProtectedResourceTypeEnum: %v", v)
	}
}
