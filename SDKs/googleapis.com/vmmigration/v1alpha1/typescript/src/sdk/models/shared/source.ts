/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AwsSourceDetails, AwsSourceDetailsInput } from "./awssourcedetails";
import { Status } from "./status";
import { VmwareSourceDetails } from "./vmwaresourcedetails";
import { Expose, Type } from "class-transformer";

/**
 * Source message describes a specific vm migration Source resource. It contains the source environment information.
 */
export class Source extends SpeakeasyBase {
  /**
   * AwsSourceDetails message describes a specific source details for the AWS source type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aws" })
  @Type(() => AwsSourceDetails)
  aws?: AwsSourceDetails;

  /**
   * Output only. The create time timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * User-provided description of the source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * The labels of the source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. The Source name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The update time timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * VmwareSourceDetails message describes a specific source details for the vmware source type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmware" })
  @Type(() => VmwareSourceDetails)
  vmware?: VmwareSourceDetails;
}

/**
 * Source message describes a specific vm migration Source resource. It contains the source environment information.
 */
export class SourceInput extends SpeakeasyBase {
  /**
   * AwsSourceDetails message describes a specific source details for the AWS source type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aws" })
  @Type(() => AwsSourceDetailsInput)
  aws?: AwsSourceDetailsInput;

  /**
   * User-provided description of the source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * The labels of the source.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * VmwareSourceDetails message describes a specific source details for the vmware source type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmware" })
  @Type(() => VmwareSourceDetails)
  vmware?: VmwareSourceDetails;
}
