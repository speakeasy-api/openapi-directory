/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreatePaymentsCreatePaymentsRequest {
    @SpeakeasyMetadata("form:name=BankAccountType")
    public org.openapis.openapi.models.shared.PaymentsEnumBankAccountTypeEnum bankAccountType;

    public CreatePaymentsCreatePaymentsRequest withBankAccountType(org.openapis.openapi.models.shared.PaymentsEnumBankAccountTypeEnum bankAccountType) {
        this.bankAccountType = bankAccountType;
        return this;
    }
    
    /**
     * A positive decimal value less than 1,000,000 to charge against the credit card or bank account. Default currency can be overwritten with `currency` field. Leave blank or set to 0 to tokenize.
     */
    @SpeakeasyMetadata("form:name=ChargeAmount")
    public Double chargeAmount;

    public CreatePaymentsCreatePaymentsRequest withChargeAmount(Double chargeAmount) {
        this.chargeAmount = chargeAmount;
        return this;
    }
    
    /**
     * The currency of the `charge_amount`, formatted as [ISO 4127](http://www.iso.org/iso/home/standards/currency_codes.htm) format. The default value is `USD` and all values allowed from the Pay Connector are accepted.
     */
    @SpeakeasyMetadata("form:name=Currency")
    public String currency;

    public CreatePaymentsCreatePaymentsRequest withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The description can be used to provide more details regarding the transaction. This information is submitted along with the payment details to the Payment Connector which are then posted on the transactions.
     */
    @SpeakeasyMetadata("form:name=Description")
    public String description;

    public CreatePaymentsCreatePaymentsRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A unique token that will be used to ensure that multiple API calls with the same information do not result in multiple transactions. This should be a unique string value per API call and can be a randomly generated.
     */
    @SpeakeasyMetadata("form:name=IdempotencyKey")
    public String idempotencyKey;

    public CreatePaymentsCreatePaymentsRequest withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    /**
     * A list of inputs that should be accepted. Currently only `dtmf` is supported. All digits captured during a pay session are redacted from the logs.
     */
    @SpeakeasyMetadata("form:name=Input")
    public String input;

    public CreatePaymentsCreatePaymentsRequest withInput(String input) {
        this.input = input;
        return this;
    }
    
    /**
     * A positive integer that is used to validate the length of the `PostalCode` inputted by the user. User must enter this many digits.
     */
    @SpeakeasyMetadata("form:name=MinPostalCodeLength")
    public Long minPostalCodeLength;

    public CreatePaymentsCreatePaymentsRequest withMinPostalCodeLength(Long minPostalCodeLength) {
        this.minPostalCodeLength = minPostalCodeLength;
        return this;
    }
    
    /**
     * A single-level JSON object used to pass custom parameters to payment processors. (Required for ACH payments). The information that has to be included here depends on the &lt;Pay&gt; Connector. [Read more](https://www.twilio.com/console/voice/pay-connectors).
     */
    @SpeakeasyMetadata("form:name=Parameter")
    public Object parameter;

    public CreatePaymentsCreatePaymentsRequest withParameter(Object parameter) {
        this.parameter = parameter;
        return this;
    }
    
    /**
     * This is the unique name corresponding to the Pay Connector installed in the Twilio Add-ons. Learn more about [&lt;Pay&gt; Connectors](https://www.twilio.com/console/voice/pay-connectors). The default value is `Default`.
     */
    @SpeakeasyMetadata("form:name=PaymentConnector")
    public String paymentConnector;

    public CreatePaymentsCreatePaymentsRequest withPaymentConnector(String paymentConnector) {
        this.paymentConnector = paymentConnector;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=PaymentMethod")
    public org.openapis.openapi.models.shared.PaymentsEnumPaymentMethodEnum paymentMethod;

    public CreatePaymentsCreatePaymentsRequest withPaymentMethod(org.openapis.openapi.models.shared.PaymentsEnumPaymentMethodEnum paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * Indicates whether the credit card postal code (zip code) is a required piece of payment information that must be provided by the caller. The default is `true`.
     */
    @SpeakeasyMetadata("form:name=PostalCode")
    public Boolean postalCode;

    public CreatePaymentsCreatePaymentsRequest withPostalCode(Boolean postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Indicates whether the credit card security code is a required piece of payment information that must be provided by the caller. The default is `true`.
     */
    @SpeakeasyMetadata("form:name=SecurityCode")
    public Boolean securityCode;

    public CreatePaymentsCreatePaymentsRequest withSecurityCode(Boolean securityCode) {
        this.securityCode = securityCode;
        return this;
    }
    
    /**
     * Provide an absolute or relative URL to receive status updates regarding your Pay session. Read more about the [expected StatusCallback values](https://www.twilio.com/docs/voice/api/payment-resource#statuscallback)
     */
    @SpeakeasyMetadata("form:name=StatusCallback")
    public String statusCallback;

    public CreatePaymentsCreatePaymentsRequest withStatusCallback(String statusCallback) {
        this.statusCallback = statusCallback;
        return this;
    }
    
    /**
     * The number of seconds that &lt;Pay&gt; should wait for the caller to press a digit between each subsequent digit, after the first one, before moving on to validate the digits captured. The default is `5`, maximum is `600`.
     */
    @SpeakeasyMetadata("form:name=Timeout")
    public Long timeout;

    public CreatePaymentsCreatePaymentsRequest withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=TokenType")
    public org.openapis.openapi.models.shared.PaymentsEnumTokenTypeEnum tokenType;

    public CreatePaymentsCreatePaymentsRequest withTokenType(org.openapis.openapi.models.shared.PaymentsEnumTokenTypeEnum tokenType) {
        this.tokenType = tokenType;
        return this;
    }
    
    /**
     * Credit card types separated by space that Pay should accept. The default value is `visa mastercard amex`
     */
    @SpeakeasyMetadata("form:name=ValidCardTypes")
    public String validCardTypes;

    public CreatePaymentsCreatePaymentsRequest withValidCardTypes(String validCardTypes) {
        this.validCardTypes = validCardTypes;
        return this;
    }
    
    public CreatePaymentsCreatePaymentsRequest(@JsonProperty("IdempotencyKey") String idempotencyKey, @JsonProperty("StatusCallback") String statusCallback) {
        this.idempotencyKey = idempotencyKey;
        this.statusCallback = statusCallback;
  }
}
