<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TableFieldSchema - A field in TableSchema.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TableFieldSchema
{
    /**
     * The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 128 characters.
     * 
     * @var ?string $field
     */
	#[\JMS\Serializer\Annotation\SerializedName('field')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $field = null;
    
    /**
     * Describes the nested schema fields if the type property is set to RECORD.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TableFieldSchema> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TableFieldSchema>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.
     * 
     * @var ?string $mode
     */
	#[\JMS\Serializer\Annotation\SerializedName('mode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mode = null;
    
    /**
     * The field data type. Possible values include * STRING * BYTES * INTEGER * FLOAT * BOOLEAN * TIMESTAMP * DATE * TIME * DATETIME * GEOGRAPHY, * NUMERIC, * BIGNUMERIC, * RECORD (where RECORD indicates that the field contains a nested schema).
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->field = null;
		$this->fields = null;
		$this->mode = null;
		$this->type = null;
	}
}
