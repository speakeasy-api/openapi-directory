// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusTypeEnum string

const (
	StatusTypeEnumSucceeded  StatusTypeEnum = "SUCCEEDED"
	StatusTypeEnumFailed     StatusTypeEnum = "FAILED"
	StatusTypeEnumFault      StatusTypeEnum = "FAULT"
	StatusTypeEnumTimedOut   StatusTypeEnum = "TIMED_OUT"
	StatusTypeEnumInProgress StatusTypeEnum = "IN_PROGRESS"
	StatusTypeEnumStopped    StatusTypeEnum = "STOPPED"
)

func (e StatusTypeEnum) ToPointer() *StatusTypeEnum {
	return &e
}

func (e *StatusTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "FAULT":
		fallthrough
	case "TIMED_OUT":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "STOPPED":
		*e = StatusTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusTypeEnum: %v", v)
	}
}
