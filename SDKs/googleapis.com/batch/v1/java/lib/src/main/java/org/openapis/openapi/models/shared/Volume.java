/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Volume - Volume describes a volume and parameters for it to be mounted to a VM.
 */
public class Volume {
    /**
     * Device name of an attached disk volume, which should align with a device_name specified by job.allocation_policy.instances[0].policy.disks[i].device_name or defined by the given instance template in job.allocation_policy.instances[0].instance_template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceName")
    public String deviceName;
    public Volume withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }
    
    /**
     * Represents a Google Cloud Storage volume.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gcs")
    public Gcs gcs;
    public Volume withGcs(Gcs gcs) {
        this.gcs = gcs;
        return this;
    }
    
    /**
     * For Google Cloud Storage (GCS), mount options are the options supported by the gcsfuse tool (https://github.com/GoogleCloudPlatform/gcsfuse). For existing persistent disks, mount options provided by the mount command (https://man7.org/linux/man-pages/man8/mount.8.html) except writing are supported. This is due to restrictions of multi-writer mode (https://cloud.google.com/compute/docs/disks/sharing-disks-between-vms). For other attached disks and Network File System (NFS), mount options are these supported by the mount command (https://man7.org/linux/man-pages/man8/mount.8.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountOptions")
    public String[] mountOptions;
    public Volume withMountOptions(String[] mountOptions) {
        this.mountOptions = mountOptions;
        return this;
    }
    
    /**
     * The mount path for the volume, e.g. /mnt/disks/share.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mountPath")
    public String mountPath;
    public Volume withMountPath(String mountPath) {
        this.mountPath = mountPath;
        return this;
    }
    
    /**
     * Represents an NFS volume.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nfs")
    public Nfs nfs;
    public Volume withNfs(Nfs nfs) {
        this.nfs = nfs;
        return this;
    }
    
}
