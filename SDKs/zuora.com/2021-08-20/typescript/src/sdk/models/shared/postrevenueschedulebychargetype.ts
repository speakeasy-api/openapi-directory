/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { POSTDistributionItemType } from "./postdistributionitemtype";
import { POSTRevenueScheduleByChargeTypeRevenueEvent } from "./postrevenueschedulebychargetyperevenueevent";
import { Expose, Transform, Type } from "class-transformer";

/**
 * When overriding accounting codes from a charge, `recognizedRevenueAccountingCode` and `deferredRevenue AccountingCode` must be in the request body and can have the empty value.
 *
 * @remarks
 *
 */
export enum POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum {
  True = "true",
  False = "false",
}

/**
 * Container for custom fields of a Revenue Schedule object.
 *
 * @remarks
 *
 */
export class POSTRevenueScheduleByChargeType extends SpeakeasyBase {
  /**
   * The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: string;

  /**
   * The accounting code for deferred revenue, such as Monthly Recurring Liability. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deferredRevenueAccountingCode" })
  deferredRevenueAccountingCode?: string;

  /**
   * The type of the deferred revenue accounting code, such as Deferred Revenue. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deferredRevenueAccountingCodeType" })
  deferredRevenueAccountingCodeType?: string;

  /**
   * Additional information about this record.
   *
   * @remarks
   *
   * Character Limit: 2,000
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * When overriding accounting codes from a charge, `recognizedRevenueAccountingCode` and `deferredRevenue AccountingCode` must be in the request body and can have the empty value.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overrideChargeAccountingCodes" })
  overrideChargeAccountingCodes?: POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum;

  /**
   * The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, the value is ignored.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognizedRevenueAccountingCode" })
  recognizedRevenueAccountingCode?: string;

  /**
   * The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recognizedRevenueAccountingCodeType" })
  recognizedRevenueAccountingCodeType?: string;

  /**
   * Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.
   *
   * @remarks
   *
   * Character Limit: 100
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referenceId" })
  referenceId?: string;

  /**
   * An array of revenue distributions. Represents how you want to distribute revenue for this revenue schedule. You can distribute revenue into a maximum of 250 accounting periods with one revenue schedule.
   *
   * @remarks
   *
   * The sum of the newAmount fields must be equal to the amount field.
   *
   */
  @SpeakeasyMetadata({ elemType: POSTDistributionItemType })
  @Expose({ name: "revenueDistributions" })
  @Type(() => POSTDistributionItemType)
  revenueDistributions?: POSTDistributionItemType[];

  /**
   * Represents a change to a revenue schedule, such as posting an invoice or distributing revenue.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revenueEvent" })
  @Type(() => POSTRevenueScheduleByChargeTypeRevenueEvent)
  revenueEvent?: POSTRevenueScheduleByChargeTypeRevenueEvent;

  /**
   * The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.
   *
   * @remarks
   *
   * The date cannot be in a closed accounting period. The date must be in `yyyy-mm-dd` format.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revenueScheduleDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revenueScheduleDate: Date;
}
