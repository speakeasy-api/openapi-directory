// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PolyUsersAssetsListVisibilityEnum - The visibility of the assets to be returned. Defaults to VISIBILITY_UNSPECIFIED which returns all assets.
type PolyUsersAssetsListVisibilityEnum string

const (
	PolyUsersAssetsListVisibilityEnumVisibilityUnspecified PolyUsersAssetsListVisibilityEnum = "VISIBILITY_UNSPECIFIED"
	PolyUsersAssetsListVisibilityEnumPublished             PolyUsersAssetsListVisibilityEnum = "PUBLISHED"
	PolyUsersAssetsListVisibilityEnumPrivate               PolyUsersAssetsListVisibilityEnum = "PRIVATE"
)

func (e PolyUsersAssetsListVisibilityEnum) ToPointer() *PolyUsersAssetsListVisibilityEnum {
	return &e
}

func (e *PolyUsersAssetsListVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VISIBILITY_UNSPECIFIED":
		fallthrough
	case "PUBLISHED":
		fallthrough
	case "PRIVATE":
		*e = PolyUsersAssetsListVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PolyUsersAssetsListVisibilityEnum: %v", v)
	}
}

type PolyUsersAssetsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Return only assets with the matching format. Acceptable values are: `BLOCKS`, `FBX`, `GLTF`, `GLTF2`, `OBJ`, and `TILT`.
	Format *string `queryParam:"style=form,explode=true,name=format"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// A valid user id. Currently, only the special value 'me', representing the currently-authenticated user is supported. To use 'me', you must pass an OAuth token with the request.
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Specifies an ordering for assets. Acceptable values are: `BEST`, `NEWEST`, `OLDEST`. Defaults to `BEST`, which ranks assets based on a combination of popularity and other features.
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// The maximum number of assets to be returned. This value must be between `1` and `100`. Defaults to `20`.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Specifies a continuation token from a previous search whose results were split into multiple pages. To get the next page, submit the same request specifying the value from next_page_token.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// The visibility of the assets to be returned. Defaults to VISIBILITY_UNSPECIFIED which returns all assets.
	Visibility *PolyUsersAssetsListVisibilityEnum `queryParam:"style=form,explode=true,name=visibility"`
}

type PolyUsersAssetsListResponse struct {
	ContentType string
	// Successful response
	ListUserAssetsResponse *shared.ListUserAssetsResponse
	StatusCode             int
	RawResponse            *http.Response
}
