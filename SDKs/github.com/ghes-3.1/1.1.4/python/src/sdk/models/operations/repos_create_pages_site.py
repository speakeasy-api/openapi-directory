"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import page as shared_page
from ..shared import validation_error as shared_validation_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class ReposCreatePagesSiteRequestBody1SourcePathEnum(str, Enum):
    r"""The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`"""
    ROOT_ = '/'
    ROOT_DOCS = '/docs'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposCreatePagesSiteRequestBody1Source:
    r"""The source branch and directory used to publish your Pages site."""
    
    branch: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branch') }})
    r"""The repository branch used to publish your site's source files."""  
    path: Optional[ReposCreatePagesSiteRequestBody1SourcePathEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""The repository directory that includes the source files for the Pages site. Allowed paths are `/` or `/docs`. Default: `/`"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReposCreatePagesSiteRequestBody1:
    r"""The source branch and directory used to publish your Pages site."""
    
    source: ReposCreatePagesSiteRequestBody1Source = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    r"""The source branch and directory used to publish your Pages site."""  
    

@dataclasses.dataclass
class ReposCreatePagesSiteRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: Any = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ReposCreatePagesSiteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Conflict"""  
    page: Optional[shared_page.Page] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    validation_error: Optional[shared_validation_error.ValidationError] = dataclasses.field(default=None)
    r"""Validation failed"""  
    