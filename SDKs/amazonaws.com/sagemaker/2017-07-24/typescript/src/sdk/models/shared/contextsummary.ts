/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContextSource } from "./contextsource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Lists a summary of the properties of a context. A context provides a logical grouping of other entities.
 */
export class ContextSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContextArn" })
  contextArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContextName" })
  contextName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ContextType" })
  contextType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  @Type(() => ContextSource)
  source?: ContextSource;
}
