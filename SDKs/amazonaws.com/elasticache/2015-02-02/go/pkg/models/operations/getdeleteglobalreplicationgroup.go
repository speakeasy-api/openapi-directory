// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteGlobalReplicationGroupActionEnum
type GETDeleteGlobalReplicationGroupActionEnum string

const (
	GETDeleteGlobalReplicationGroupActionEnumDeleteGlobalReplicationGroup GETDeleteGlobalReplicationGroupActionEnum = "DeleteGlobalReplicationGroup"
)

func (e GETDeleteGlobalReplicationGroupActionEnum) ToPointer() *GETDeleteGlobalReplicationGroupActionEnum {
	return &e
}

func (e *GETDeleteGlobalReplicationGroupActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteGlobalReplicationGroup":
		*e = GETDeleteGlobalReplicationGroupActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteGlobalReplicationGroupActionEnum: %v", v)
	}
}

// GETDeleteGlobalReplicationGroupVersionEnum
type GETDeleteGlobalReplicationGroupVersionEnum string

const (
	GETDeleteGlobalReplicationGroupVersionEnumTwoThousandAndFifteen0202 GETDeleteGlobalReplicationGroupVersionEnum = "2015-02-02"
)

func (e GETDeleteGlobalReplicationGroupVersionEnum) ToPointer() *GETDeleteGlobalReplicationGroupVersionEnum {
	return &e
}

func (e *GETDeleteGlobalReplicationGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETDeleteGlobalReplicationGroupVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteGlobalReplicationGroupVersionEnum: %v", v)
	}
}

type GETDeleteGlobalReplicationGroupRequest struct {
	Action GETDeleteGlobalReplicationGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Global datastore
	GlobalReplicationGroupID string `queryParam:"style=form,explode=true,name=GlobalReplicationGroupId"`
	// The primary replication group is retained as a standalone replication group.
	RetainPrimaryReplicationGroup bool                                       `queryParam:"style=form,explode=true,name=RetainPrimaryReplicationGroup"`
	Version                       GETDeleteGlobalReplicationGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                 *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteGlobalReplicationGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
