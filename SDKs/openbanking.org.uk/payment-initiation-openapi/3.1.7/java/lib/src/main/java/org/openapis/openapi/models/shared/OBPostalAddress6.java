/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OBPostalAddress6 - Information that locates and identifies a specific address, as defined by postal services.
 */
public class OBPostalAddress6 {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AddressLine")
    public String[] addressLine;
    public OBPostalAddress6 withAddressLine(String[] addressLine) {
        this.addressLine = addressLine;
        return this;
    }
    
    /**
     * Identifies the nature of the postal address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AddressType")
    public OBAddressTypeCodeEnum addressType;
    public OBPostalAddress6 withAddressType(OBAddressTypeCodeEnum addressType) {
        this.addressType = addressType;
        return this;
    }
    
    /**
     * Number that identifies the position of a building on a street.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BuildingNumber")
    public String buildingNumber;
    public OBPostalAddress6 withBuildingNumber(String buildingNumber) {
        this.buildingNumber = buildingNumber;
        return this;
    }
    
    /**
     * Nation with its own government.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Country")
    public String country;
    public OBPostalAddress6 withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Identifies a subdivision of a country such as state, region, county.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CountrySubDivision")
    public String countrySubDivision;
    public OBPostalAddress6 withCountrySubDivision(String countrySubDivision) {
        this.countrySubDivision = countrySubDivision;
        return this;
    }
    
    /**
     * Identification of a division of a large organisation or building.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Department")
    public String department;
    public OBPostalAddress6 withDepartment(String department) {
        this.department = department;
        return this;
    }
    
    /**
     * Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PostCode")
    public String postCode;
    public OBPostalAddress6 withPostCode(String postCode) {
        this.postCode = postCode;
        return this;
    }
    
    /**
     * Name of a street or thoroughfare.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreetName")
    public String streetName;
    public OBPostalAddress6 withStreetName(String streetName) {
        this.streetName = streetName;
        return this;
    }
    
    /**
     * Identification of a sub-division of a large organisation or building.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubDepartment")
    public String subDepartment;
    public OBPostalAddress6 withSubDepartment(String subDepartment) {
        this.subDepartment = subDepartment;
        return this;
    }
    
    /**
     * Name of a built-up area, with defined boundaries, and a local government.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TownName")
    public String townName;
    public OBPostalAddress6 withTownName(String townName) {
        this.townName = townName;
        return this;
    }
    
}
