// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type TableDataInsertAllRequestRows struct {
	// [Optional] A unique ID for each row. BigQuery uses this property to detect duplicate insertion requests on a best-effort basis.
	InsertID *string `json:"insertId,omitempty"`
	// Represents a single JSON object.
	JSON map[string]interface{} `json:"json,omitempty"`
}

type TableDataInsertAllRequest struct {
	// [Optional] Accept rows that contain values that do not match the schema. The unknown values are ignored. Default is false, which treats unknown values as errors.
	IgnoreUnknownValues *bool `json:"ignoreUnknownValues,omitempty"`
	// The resource type of the response.
	Kind *string `json:"kind,omitempty"`
	// The rows to insert.
	Rows []TableDataInsertAllRequestRows `json:"rows,omitempty"`
	// [Optional] Insert all valid rows of a request, even if invalid rows exist. The default value is false, which causes the entire request to fail if any invalid rows exist.
	SkipInvalidRows *bool `json:"skipInvalidRows,omitempty"`
	// If specified, treats the destination table as a base template, and inserts the rows into an instance table named "{destination}{templateSuffix}". BigQuery will manage creation of the instance table, using the schema of the base template table. See https://cloud.google.com/bigquery/streaming-data-into-bigquery#template-tables for considerations when working with templates tables.
	TemplateSuffix *string `json:"templateSuffix,omitempty"`
}
