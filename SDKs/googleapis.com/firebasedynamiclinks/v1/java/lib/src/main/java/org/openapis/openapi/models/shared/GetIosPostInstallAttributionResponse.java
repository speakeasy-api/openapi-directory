/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetIosPostInstallAttributionResponse - Response for iSDK to execute strong match flow for post-install attribution.
 */
public class GetIosPostInstallAttributionResponse {
    /**
     * The minimum version for app, specified by dev through ?imv= parameter. Return to iSDK to allow app to evaluate if current version meets this.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appMinimumVersion")
    public String appMinimumVersion;
    public GetIosPostInstallAttributionResponse withAppMinimumVersion(String appMinimumVersion) {
        this.appMinimumVersion = appMinimumVersion;
        return this;
    }
    
    /**
     * The confidence of the returned attribution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributionConfidence")
    public GetIosPostInstallAttributionResponseAttributionConfidenceEnum attributionConfidence;
    public GetIosPostInstallAttributionResponse withAttributionConfidence(GetIosPostInstallAttributionResponseAttributionConfidenceEnum attributionConfidence) {
        this.attributionConfidence = attributionConfidence;
        return this;
    }
    
    /**
     * The deep-link attributed post-install via one of several techniques (fingerprint, copy unique).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deepLink")
    public String deepLink;
    public GetIosPostInstallAttributionResponse withDeepLink(String deepLink) {
        this.deepLink = deepLink;
        return this;
    }
    
    /**
     * User-agent specific custom-scheme URIs for iSDK to open. This will be set according to the user-agent tha the click was originally made in. There is no Safari-equivalent custom-scheme open URLs. ie: googlechrome://www.example.com ie: firefox://open-url?url=http://www.example.com ie: opera-http://example.com
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalBrowserDestinationLink")
    public String externalBrowserDestinationLink;
    public GetIosPostInstallAttributionResponse withExternalBrowserDestinationLink(String externalBrowserDestinationLink) {
        this.externalBrowserDestinationLink = externalBrowserDestinationLink;
        return this;
    }
    
    /**
     * The link to navigate to update the app if min version is not met. This is either (in order): 1) fallback link (from ?ifl= parameter, if specified by developer) or 2) AppStore URL (from ?isi= parameter, if specified), or 3) the payload link (from required link= parameter).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fallbackLink")
    public String fallbackLink;
    public GetIosPostInstallAttributionResponse withFallbackLink(String fallbackLink) {
        this.fallbackLink = fallbackLink;
        return this;
    }
    
    /**
     * Invitation ID attributed post-install via one of several techniques (fingerprint, copy unique).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invitationId")
    public String invitationId;
    public GetIosPostInstallAttributionResponse withInvitationId(String invitationId) {
        this.invitationId = invitationId;
        return this;
    }
    
    /**
     * Instruction for iSDK to attemmpt to perform strong match. For instance, if browser does not support/allow cookie or outside of support browsers, this will be false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isStrongMatchExecutable")
    public Boolean isStrongMatchExecutable;
    public GetIosPostInstallAttributionResponse withIsStrongMatchExecutable(Boolean isStrongMatchExecutable) {
        this.isStrongMatchExecutable = isStrongMatchExecutable;
        return this;
    }
    
    /**
     * Describes why match failed, ie: "discarded due to low confidence". This message will be publicly visible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matchMessage")
    public String matchMessage;
    public GetIosPostInstallAttributionResponse withMatchMessage(String matchMessage) {
        this.matchMessage = matchMessage;
        return this;
    }
    
    /**
     * Which IP version the request was made from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestIpVersion")
    public GetIosPostInstallAttributionResponseRequestIpVersionEnum requestIpVersion;
    public GetIosPostInstallAttributionResponse withRequestIpVersion(GetIosPostInstallAttributionResponseRequestIpVersionEnum requestIpVersion) {
        this.requestIpVersion = requestIpVersion;
        return this;
    }
    
    /**
     * Entire FDL (short or long) attributed post-install via one of several techniques (fingerprint, copy unique).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedLink")
    public String requestedLink;
    public GetIosPostInstallAttributionResponse withRequestedLink(String requestedLink) {
        this.requestedLink = requestedLink;
        return this;
    }
    
    /**
     * The entire FDL, expanded from a short link. It is the same as the requested_link, if it is long. Parameters from this should not be used directly (ie: server can default utm_[campaign|medium|source] to a value when requested_link lack them, server determine the best fallback_link when requested_link specifies &gt;1 fallback links).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolvedLink")
    public String resolvedLink;
    public GetIosPostInstallAttributionResponse withResolvedLink(String resolvedLink) {
        this.resolvedLink = resolvedLink;
        return this;
    }
    
    /**
     * Scion campaign value to be propagated by iSDK to Scion at post-install.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utmCampaign")
    public String utmCampaign;
    public GetIosPostInstallAttributionResponse withUtmCampaign(String utmCampaign) {
        this.utmCampaign = utmCampaign;
        return this;
    }
    
    /**
     * Scion content value to be propagated by iSDK to Scion at app-reopen.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utmContent")
    public String utmContent;
    public GetIosPostInstallAttributionResponse withUtmContent(String utmContent) {
        this.utmContent = utmContent;
        return this;
    }
    
    /**
     * Scion medium value to be propagated by iSDK to Scion at post-install.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utmMedium")
    public String utmMedium;
    public GetIosPostInstallAttributionResponse withUtmMedium(String utmMedium) {
        this.utmMedium = utmMedium;
        return this;
    }
    
    /**
     * Scion source value to be propagated by iSDK to Scion at post-install.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utmSource")
    public String utmSource;
    public GetIosPostInstallAttributionResponse withUtmSource(String utmSource) {
        this.utmSource = utmSource;
        return this;
    }
    
    /**
     * Scion term value to be propagated by iSDK to Scion at app-reopen.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utmTerm")
    public String utmTerm;
    public GetIosPostInstallAttributionResponse withUtmTerm(String utmTerm) {
        this.utmTerm = utmTerm;
        return this;
    }
    
}
