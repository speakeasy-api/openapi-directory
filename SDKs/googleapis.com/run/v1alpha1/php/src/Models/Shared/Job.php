<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Job - Job represents the configuration of a single job. A job an immutable resource that references a container image which is run to completion.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Job
{
    /**
     * Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional
     * 
     * @var ?string $apiVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiVersion = null;
    
    /**
     * Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ObjectMeta $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ObjectMeta')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ObjectMeta $metadata = null;
    
    /**
     * JobSpec describes how the job execution will look like.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\JobSpec $spec
     */
	#[\JMS\Serializer\Annotation\SerializedName('spec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\JobSpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?JobSpec $spec = null;
    
    /**
     * JobStatus represents the current state of a Job.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\JobStatus $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\JobStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?JobStatus $status = null;
    
	public function __construct()
	{
		$this->apiVersion = null;
		$this->kind = null;
		$this->metadata = null;
		$this->spec = null;
		$this->status = null;
	}
}
