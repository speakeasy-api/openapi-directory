/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommandPluginStatusEnum } from "./commandpluginstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Describes plugin details.
 */
export class CommandPlugin extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Output" })
  output?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputS3BucketName" })
  outputS3BucketName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputS3KeyPrefix" })
  outputS3KeyPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputS3Region" })
  outputS3Region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResponseCode" })
  responseCode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ResponseFinishDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  responseFinishDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ResponseStartDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  responseStartDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StandardErrorUrl" })
  standardErrorUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StandardOutputUrl" })
  standardOutputUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: CommandPluginStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusDetails" })
  statusDetails?: string;
}
