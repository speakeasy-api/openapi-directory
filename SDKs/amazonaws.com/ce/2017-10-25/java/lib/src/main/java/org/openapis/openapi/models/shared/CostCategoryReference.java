/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CostCategoryReference - &lt;p&gt;A reference to a Cost Category containing only enough information to identify the Cost Category.&lt;/p&gt; &lt;p&gt;You can use this information to retrieve the full Cost Category information using &lt;code&gt;DescribeCostCategory&lt;/code&gt;.&lt;/p&gt;
 */
public class CostCategoryReference {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CostCategoryArn")
    public String costCategoryArn;
    public CostCategoryReference withCostCategoryArn(String costCategoryArn) {
        this.costCategoryArn = costCategoryArn;
        return this;
    }
    
    /**
     * The default value for the cost category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultValue")
    public String defaultValue;
    public CostCategoryReference withDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EffectiveEnd")
    public String effectiveEnd;
    public CostCategoryReference withEffectiveEnd(String effectiveEnd) {
        this.effectiveEnd = effectiveEnd;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EffectiveStart")
    public String effectiveStart;
    public CostCategoryReference withEffectiveStart(String effectiveStart) {
        this.effectiveStart = effectiveStart;
        return this;
    }
    
    /**
     * The unique name of the Cost Category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public CostCategoryReference withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberOfRules")
    public Long numberOfRules;
    public CostCategoryReference withNumberOfRules(Long numberOfRules) {
        this.numberOfRules = numberOfRules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessingStatus")
    public CostCategoryProcessingStatus[] processingStatus;
    public CostCategoryReference withProcessingStatus(CostCategoryProcessingStatus[] processingStatus) {
        this.processingStatus = processingStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Values")
    public String[] values;
    public CostCategoryReference withValues(String[] values) {
        this.values = values;
        return this;
    }
    
}
