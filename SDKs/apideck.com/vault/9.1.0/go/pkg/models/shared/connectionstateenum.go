// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConnectionStateEnum - [Connection state flow](#section/Connection-state)
type ConnectionStateEnum string

const (
	ConnectionStateEnumAvailable  ConnectionStateEnum = "available"
	ConnectionStateEnumCallable   ConnectionStateEnum = "callable"
	ConnectionStateEnumAdded      ConnectionStateEnum = "added"
	ConnectionStateEnumAuthorized ConnectionStateEnum = "authorized"
)

func (e *ConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "available":
		fallthrough
	case "callable":
		fallthrough
	case "added":
		fallthrough
	case "authorized":
		*e = ConnectionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionStateEnum: %s", s)
	}
}
