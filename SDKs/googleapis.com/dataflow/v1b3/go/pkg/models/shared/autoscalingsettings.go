// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AutoscalingSettingsAlgorithmEnum - The algorithm to use for autoscaling.
type AutoscalingSettingsAlgorithmEnum string

const (
	AutoscalingSettingsAlgorithmEnumAutoscalingAlgorithmUnknown AutoscalingSettingsAlgorithmEnum = "AUTOSCALING_ALGORITHM_UNKNOWN"
	AutoscalingSettingsAlgorithmEnumAutoscalingAlgorithmNone    AutoscalingSettingsAlgorithmEnum = "AUTOSCALING_ALGORITHM_NONE"
	AutoscalingSettingsAlgorithmEnumAutoscalingAlgorithmBasic   AutoscalingSettingsAlgorithmEnum = "AUTOSCALING_ALGORITHM_BASIC"
)

func (e *AutoscalingSettingsAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AUTOSCALING_ALGORITHM_UNKNOWN":
		fallthrough
	case "AUTOSCALING_ALGORITHM_NONE":
		fallthrough
	case "AUTOSCALING_ALGORITHM_BASIC":
		*e = AutoscalingSettingsAlgorithmEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AutoscalingSettingsAlgorithmEnum: %s", s)
	}
}

// AutoscalingSettings - Settings for WorkerPool autoscaling.
type AutoscalingSettings struct {
	// The algorithm to use for autoscaling.
	Algorithm *AutoscalingSettingsAlgorithmEnum `json:"algorithm,omitempty"`
	// The maximum number of workers to cap scaling at.
	MaxNumWorkers *int `json:"maxNumWorkers,omitempty"`
}
