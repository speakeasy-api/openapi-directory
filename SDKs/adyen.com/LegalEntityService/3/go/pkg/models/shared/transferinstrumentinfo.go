// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransferInstrumentInfoTypeEnum - The type of transfer instrument.
//
// Possible value: **bankAccount**.
type TransferInstrumentInfoTypeEnum string

const (
	TransferInstrumentInfoTypeEnumBankAccount     TransferInstrumentInfoTypeEnum = "bankAccount"
	TransferInstrumentInfoTypeEnumRecurringDetail TransferInstrumentInfoTypeEnum = "recurringDetail"
)

func (e TransferInstrumentInfoTypeEnum) ToPointer() *TransferInstrumentInfoTypeEnum {
	return &e
}

func (e *TransferInstrumentInfoTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bankAccount":
		fallthrough
	case "recurringDetail":
		*e = TransferInstrumentInfoTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferInstrumentInfoTypeEnum: %v", v)
	}
}

type TransferInstrumentInfo struct {
	BankAccount BankAccountInfo `json:"bankAccount"`
	// The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id) that owns the transfer instrument.
	LegalEntityID string `json:"legalEntityId"`
	// The type of transfer instrument.
	//
	// Possible value: **bankAccount**.
	Type TransferInstrumentInfoTypeEnum `json:"type"`
}
