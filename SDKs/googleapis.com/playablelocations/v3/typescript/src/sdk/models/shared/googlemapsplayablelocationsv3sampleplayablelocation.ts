/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleTypeLatLng } from "./googletypelatlng";
import { Expose, Type } from "class-transformer";

/**
 * A geographical point suitable for placing game objects in location-based games.
 */
export class GoogleMapsPlayablelocationsV3SamplePlayableLocation extends SpeakeasyBase {
  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "centerPoint" })
  @Type(() => GoogleTypeLatLng)
  centerPoint?: GoogleTypeLatLng;

  /**
   * Required. The name of this playable location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A [place ID] (https://developers.google.com/places/place-id)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "placeId" })
  placeId?: string;

  /**
   * A [plus code] (http://openlocationcode.com)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plusCode" })
  plusCode?: string;

  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snappedPoint" })
  @Type(() => GoogleTypeLatLng)
  snappedPoint?: GoogleTypeLatLng;

  /**
   * A collection of [Playable Location Types](/maps/documentation/gaming/tt/types) for this playable location. The first type in the collection is the primary type. Type information might not be available for all playable locations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "types" })
  types?: string[];
}
