/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum BadgeExpiryExpiryTypeEnum {
  Date = "date",
  Timeframe = "timeframe",
}

export enum BadgeExpiryTimeframeUnitEnum {
  Days = "days",
  Months = "months",
  Years = "years",
}

export class BadgeExpiry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "expirationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "expires" })
  expires?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "expiryType" })
  expiryType?: BadgeExpiryExpiryTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "timeframeAmount" })
  timeframeAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeframeUnit" })
  timeframeUnit?: BadgeExpiryTimeframeUnitEnum;
}
