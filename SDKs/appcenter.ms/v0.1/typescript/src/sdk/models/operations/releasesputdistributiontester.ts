/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReleasesPutDistributionTesterSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class ReleasesPutDistributionTesterRequestBody extends SpeakeasyBase {
  /**
   * Whether a release is mandatory for the given destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mandatory_update" })
  mandatoryUpdate: boolean;
}

export class ReleasesPutDistributionTesterRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: ReleasesPutDistributionTesterRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * The ID of the release
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=release_id",
  })
  releaseId: number;

  /**
   * The id of the tester
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=tester_id",
  })
  testerId: string;
}

export enum ReleasesPutDistributionTester404ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * A destination can't be found.
 *
 * @remarks
 *
 */
export class ReleasesPutDistributionTester404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ReleasesPutDistributionTester404ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class ReleasesPutDistributionTesterResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A destination can't be found.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  releasesPutDistributionTester404ApplicationJSONObject?: ReleasesPutDistributionTester404ApplicationJSON;
}
