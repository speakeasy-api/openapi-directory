/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class QueryTableRowsRequestBody {
    /**
     *  An object that represents a filter formula along with the id of the context row under which the filter function needs to evaluate. 
     */
    @JsonProperty("filterFormula")
    public QueryTableRowsRequestBodyFilterFormula filterFormula;

    public QueryTableRowsRequestBody withFilterFormula(QueryTableRowsRequestBodyFilterFormula filterFormula) {
        this.filterFormula = filterFormula;
        return this;
    }
    
    /**
     * The maximum number of rows to return in each page of the results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public QueryTableRowsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * &lt;p&gt; This parameter is optional. If a nextToken is not specified, the API returns the first page of data. &lt;/p&gt; &lt;p&gt; Pagination tokens expire after 1 hour. If you use a token that was returned more than an hour back, the API will throw ValidationException. &lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public QueryTableRowsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    public QueryTableRowsRequestBody(@JsonProperty("filterFormula") QueryTableRowsRequestBodyFilterFormula filterFormula) {
        this.filterFormula = filterFormula;
  }
}
