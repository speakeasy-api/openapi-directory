/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelTypeEnum } from "./channeltypeenum";
import { SingleMasterConfiguration } from "./singlemasterconfiguration";
import { StatusEnum } from "./statusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A structure that encapsulates a signaling channel's metadata and properties.
 */
export class ChannelInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ChannelARN" })
  channelARN?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ChannelName" })
  channelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ChannelStatus" })
  channelStatus?: StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ChannelType" })
  channelType?: ChannelTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "SingleMasterConfiguration" })
  @Type(() => SingleMasterConfiguration)
  singleMasterConfiguration?: SingleMasterConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: string;
}
