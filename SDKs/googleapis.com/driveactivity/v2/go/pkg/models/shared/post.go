// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PostSubtypeEnum - The sub-type of this event.
type PostSubtypeEnum string

const (
	PostSubtypeEnumSubtypeUnspecified PostSubtypeEnum = "SUBTYPE_UNSPECIFIED"
	PostSubtypeEnumAdded              PostSubtypeEnum = "ADDED"
	PostSubtypeEnumDeleted            PostSubtypeEnum = "DELETED"
	PostSubtypeEnumReplyAdded         PostSubtypeEnum = "REPLY_ADDED"
	PostSubtypeEnumReplyDeleted       PostSubtypeEnum = "REPLY_DELETED"
	PostSubtypeEnumResolved           PostSubtypeEnum = "RESOLVED"
	PostSubtypeEnumReopened           PostSubtypeEnum = "REOPENED"
)

func (e PostSubtypeEnum) ToPointer() *PostSubtypeEnum {
	return &e
}

func (e *PostSubtypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBTYPE_UNSPECIFIED":
		fallthrough
	case "ADDED":
		fallthrough
	case "DELETED":
		fallthrough
	case "REPLY_ADDED":
		fallthrough
	case "REPLY_DELETED":
		fallthrough
	case "RESOLVED":
		fallthrough
	case "REOPENED":
		*e = PostSubtypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSubtypeEnum: %v", v)
	}
}

// Post - A regular posted comment.
type Post struct {
	// The sub-type of this event.
	Subtype *PostSubtypeEnum `json:"subtype,omitempty"`
}
