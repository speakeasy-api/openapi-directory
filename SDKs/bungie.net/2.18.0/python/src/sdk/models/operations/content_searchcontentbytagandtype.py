"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import searchresultofcontentitempubliccontract as shared_searchresultofcontentitempubliccontract
from typing import Optional


@dataclasses.dataclass
class ContentSearchContentByTagAndTypeRequest:
    
    locale: str = dataclasses.field(metadata={'path_param': { 'field_name': 'locale', 'style': 'simple', 'explode': False }})  
    tag: str = dataclasses.field(metadata={'path_param': { 'field_name': 'tag', 'style': 'simple', 'explode': False }})  
    type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})  
    currentpage: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'currentpage', 'style': 'form', 'explode': True }})
    r"""Page number for the search results starting with page 1."""  
    head: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'head', 'style': 'form', 'explode': True }})
    r"""Not used."""  
    itemsperpage: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'itemsperpage', 'style': 'form', 'explode': True }})
    r"""Not used."""  
    

@dataclasses.dataclass
class ContentSearchContentByTagAndType200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[shared_searchresultofcontentitempubliccontract.SearchResultOfContentItemPublicContract] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class ContentSearchContentByTagAndTypeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    