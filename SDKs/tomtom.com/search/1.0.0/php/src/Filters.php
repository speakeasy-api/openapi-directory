<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Filters 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Geometry Filter
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtResponse
     */
	public function getSearchVersionNumberGeometryFilterExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/geometryFilter.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberGeometryFilterExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Routed Filter
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtResponse
     * @deprecated this method will be removed in a future release, please migrate away from it as soon as possible
     */
	public function getSearchVersionNumberRoutedFilterPositionHeadingExt(
        \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtResponse
    {
        trigger_error('Method ' . __METHOD__ . ' is deprecated', E_USER_DEPRECATED);
        
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}', \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSearchVersionNumberRoutedFilterPositionHeadingExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Geometry Filter
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometryFilterExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometryFilterExtResponse
     */
	public function postSearchVersionNumberGeometryFilterExt(
        \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometryFilterExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometryFilterExtResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/geometryFilter.{ext}', \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometryFilterExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        
        $httpResponse = $this->_securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberGeometryFilterExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
	
    /**
     * Routed Filter
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtResponse
     * @deprecated this method will be removed in a future release, please migrate away from it as soon as possible
     */
	public function postSearchVersionNumberRoutedFilterPositionHeadingExt(
        \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtResponse
    {
        trigger_error('Method ' . __METHOD__ . ' is deprecated', E_USER_DEPRECATED);
        
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/search/{versionNumber}/routedFilter/{position}/{heading}.{ext}', \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostSearchVersionNumberRoutedFilterPositionHeadingExtResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200 or $httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 405 or $httpResponse->getStatusCode() === 596 or ($httpResponse->getStatusCode() >= 500 && $httpResponse->getStatusCode() < 600)) {
        }

        return $response;
    }
}