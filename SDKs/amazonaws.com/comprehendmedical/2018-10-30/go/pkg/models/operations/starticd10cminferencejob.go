// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartIcd10CMInferenceJobXAmzTargetEnum
type StartIcd10CMInferenceJobXAmzTargetEnum string

const (
	StartIcd10CMInferenceJobXAmzTargetEnumComprehendMedical20181030StartIcd10CmInferenceJob StartIcd10CMInferenceJobXAmzTargetEnum = "ComprehendMedical_20181030.StartICD10CMInferenceJob"
)

func (e *StartIcd10CMInferenceJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ComprehendMedical_20181030.StartICD10CMInferenceJob":
		*e = StartIcd10CMInferenceJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartIcd10CMInferenceJobXAmzTargetEnum: %s", s)
	}
}

type StartIcd10CMInferenceJobRequest struct {
	StartIcd10CMInferenceJobRequest shared.StartIcd10CMInferenceJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      StartIcd10CMInferenceJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartIcd10CMInferenceJobResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartIcd10CMInferenceJobResponse *shared.StartIcd10CMInferenceJobResponse
	StatusCode                       int
	RawResponse                      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
