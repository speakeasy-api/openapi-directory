"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartSecurity:
    
    gma_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormDataAccountingWorkbookEnum(str, Enum):
    CUSTOMER = 'customer'
    PROVIDER = 'provider'
    BANK = 'bank'
    CASH_WOUCHER = 'cashWoucher'
    FISCAL = 'fiscal'
    INSURANCE = 'insurance'
    SOCIAL = 'social'
    OTHER = 'other'
    PERMANENT = 'permanent'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormDataAccounting:
    
    accounted_on: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountedOn'), 'exclude': lambda f: f is None }})  
    workbook: Optional[PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormDataAccountingWorkbookEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Workbook'), 'exclude': lambda f: f is None }})  
    year_month: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('YearMonth'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormDataFile:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'File' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormData1:
    r"""VATDeclaration to add (either (DocumentId,End) either (File,Name,Content64Encoded,Title,End) is mandatory)"""
    
    end: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'End' }})  
    file: PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormDataFile = dataclasses.field(metadata={'multipart_form': { 'file': True }})  
    title: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'Title' }})  
    accounting: Optional[PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormDataAccounting] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Accounting', 'json': True }})  
    author: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Author' }})  
    begin: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Begin' }})  
    code: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Code' }})  
    collected_vat: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'CollectedVAT' }})  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Comment' }})  
    credit_vat: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'CreditVAT' }})  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Date' }})  
    deductible_vat: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'DeductibleVAT' }})  
    exempt_turnover: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'ExemptTurnover' }})  
    number: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'Number' }})  
    payable_vat: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'PayableVAT' }})  
    taxable_turnover: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'TaxableTurnover' }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder result and taxation"""  
    request_body: PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartFormData1 = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})
    r"""VATDeclaration to add (either (DocumentId,End) either (File,Name,Content64Encoded,Title,End) is mandatory)"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipart201ApplicationJSON:
    r"""Id of document created"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSpacesSpaceIDFoldersIDVatDeclarationsMultipartResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    post_spaces_space_id_folders_id_vat_declarations_multipart_201_application_json_object: Optional[PostSpacesSpaceIDFoldersIDVatDeclarationsMultipart201ApplicationJSON] = dataclasses.field(default=None)
    r"""Id of document created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    