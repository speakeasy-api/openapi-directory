// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOrganizationUplinksLossAndLatencyUplinkEnum - Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
type GetOrganizationUplinksLossAndLatencyUplinkEnum string

const (
	GetOrganizationUplinksLossAndLatencyUplinkEnumCellular GetOrganizationUplinksLossAndLatencyUplinkEnum = "cellular"
	GetOrganizationUplinksLossAndLatencyUplinkEnumWan1     GetOrganizationUplinksLossAndLatencyUplinkEnum = "wan1"
	GetOrganizationUplinksLossAndLatencyUplinkEnumWan2     GetOrganizationUplinksLossAndLatencyUplinkEnum = "wan2"
)

func (e *GetOrganizationUplinksLossAndLatencyUplinkEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cellular":
		fallthrough
	case "wan1":
		fallthrough
	case "wan2":
		*e = GetOrganizationUplinksLossAndLatencyUplinkEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationUplinksLossAndLatencyUplinkEnum: %s", s)
	}
}

type GetOrganizationUplinksLossAndLatencyRequest struct {
	// Optional filter for a specific destination IP. Default will return all destination IPs.
	IP             *string `queryParam:"style=form,explode=true,name=ip"`
	OrganizationID string  `pathParam:"style=simple,explode=false,name=organizationId"`
	// The beginning of the timespan for the data. The maximum lookback period is 60 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The end of the timespan for the data. t1 can be a maximum of 5 minutes after t0. The latest possible time that t1 can be is 2 minutes into the past.
	T1 *string `queryParam:"style=form,explode=true,name=t1"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameters t0 and t1. The value must be in seconds and be less than or equal to 5 minutes. The default is 5 minutes.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
	// Optional filter for a specific WAN uplink. Valid uplinks are wan1, wan2, cellular. Default will return all uplinks.
	Uplink *GetOrganizationUplinksLossAndLatencyUplinkEnum `queryParam:"style=form,explode=true,name=uplink"`
}

type GetOrganizationUplinksLossAndLatencyResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationUplinksLossAndLatency200ApplicationJSONObjects []map[string]interface{}
}
