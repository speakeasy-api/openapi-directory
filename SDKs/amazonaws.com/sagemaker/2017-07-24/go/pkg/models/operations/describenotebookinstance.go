// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeNotebookInstanceXAmzTargetEnum
type DescribeNotebookInstanceXAmzTargetEnum string

const (
	DescribeNotebookInstanceXAmzTargetEnumSageMakerDescribeNotebookInstance DescribeNotebookInstanceXAmzTargetEnum = "SageMaker.DescribeNotebookInstance"
)

func (e DescribeNotebookInstanceXAmzTargetEnum) ToPointer() *DescribeNotebookInstanceXAmzTargetEnum {
	return &e
}

func (e *DescribeNotebookInstanceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.DescribeNotebookInstance":
		*e = DescribeNotebookInstanceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeNotebookInstanceXAmzTargetEnum: %v", v)
	}
}

type DescribeNotebookInstanceRequest struct {
	DescribeNotebookInstanceInput shared.DescribeNotebookInstanceInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    DescribeNotebookInstanceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeNotebookInstanceResponse struct {
	ContentType string
	// Success
	DescribeNotebookInstanceOutput *shared.DescribeNotebookInstanceOutput
	StatusCode                     int
	RawResponse                    *http.Response
}
