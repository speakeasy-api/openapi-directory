/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The role who created the note.
 */
export enum NoteCreatorRoleEnum {
  BuyerSellerRoleUnspecified = "BUYER_SELLER_ROLE_UNSPECIFIED",
  Buyer = "BUYER",
  Seller = "SELLER",
}

/**
 * A text note attached to the proposal to facilitate the communication between buyers and sellers.
 */
export class Note extends SpeakeasyBase {
  /**
   * Output only. When this note was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. The role who created the note.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorRole" })
  creatorRole?: NoteCreatorRoleEnum;

  /**
   * The text of the note. Maximum length is 1024 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;
}

/**
 * A text note attached to the proposal to facilitate the communication between buyers and sellers.
 */
export class NoteInput extends SpeakeasyBase {
  /**
   * The text of the note. Maximum length is 1024 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;
}
