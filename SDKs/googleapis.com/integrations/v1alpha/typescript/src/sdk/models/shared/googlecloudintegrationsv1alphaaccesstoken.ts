/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The access token represents the authorization of a specific application to access specific parts of a userâ€™s data.
 */
export class GoogleCloudIntegrationsV1alphaAccessToken extends SpeakeasyBase {
  /**
   * The access token encapsulating the security identity of a process or thread.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessToken" })
  accessToken?: string;

  /**
   * Required. The approximate time until the access token retrieved is valid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessTokenExpireTime" })
  accessTokenExpireTime?: string;

  /**
   * If the access token will expire, use the refresh token to obtain another access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refreshToken" })
  refreshToken?: string;

  /**
   * The approximate time until the refresh token retrieved is valid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refreshTokenExpireTime" })
  refreshTokenExpireTime?: string;

  /**
   * Only support "bearer" token in v1 as bearer token is the predominant type used with OAuth 2.0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenType" })
  tokenType?: string;
}
