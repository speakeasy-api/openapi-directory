// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HandshakeStateEnum string

const (
	HandshakeStateEnumRequested HandshakeStateEnum = "REQUESTED"
	HandshakeStateEnumOpen      HandshakeStateEnum = "OPEN"
	HandshakeStateEnumCanceled  HandshakeStateEnum = "CANCELED"
	HandshakeStateEnumAccepted  HandshakeStateEnum = "ACCEPTED"
	HandshakeStateEnumDeclined  HandshakeStateEnum = "DECLINED"
	HandshakeStateEnumExpired   HandshakeStateEnum = "EXPIRED"
)

func (e *HandshakeStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REQUESTED":
		fallthrough
	case "OPEN":
		fallthrough
	case "CANCELED":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "DECLINED":
		fallthrough
	case "EXPIRED":
		*e = HandshakeStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HandshakeStateEnum: %s", s)
	}
}
