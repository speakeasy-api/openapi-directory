"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import taskcredentials as shared_taskcredentials
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskScheduledEventDetails:
    r"""Contains details about a task scheduled during an execution."""
    
    parameters: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters') }})  
    region: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region') }})  
    resource: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource') }})  
    resource_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceType') }})  
    heartbeat_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heartbeatInSeconds'), 'exclude': lambda f: f is None }})  
    task_credentials: Optional[shared_taskcredentials.TaskCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskCredentials'), 'exclude': lambda f: f is None }})  
    timeout_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutInSeconds'), 'exclude': lambda f: f is None }})  
    