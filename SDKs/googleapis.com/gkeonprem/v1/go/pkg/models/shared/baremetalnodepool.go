// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BareMetalNodePoolStateEnum - Output only. The current state of the bare metal node pool.
type BareMetalNodePoolStateEnum string

const (
	BareMetalNodePoolStateEnumStateUnspecified BareMetalNodePoolStateEnum = "STATE_UNSPECIFIED"
	BareMetalNodePoolStateEnumProvisioning     BareMetalNodePoolStateEnum = "PROVISIONING"
	BareMetalNodePoolStateEnumRunning          BareMetalNodePoolStateEnum = "RUNNING"
	BareMetalNodePoolStateEnumReconciling      BareMetalNodePoolStateEnum = "RECONCILING"
	BareMetalNodePoolStateEnumStopping         BareMetalNodePoolStateEnum = "STOPPING"
	BareMetalNodePoolStateEnumError            BareMetalNodePoolStateEnum = "ERROR"
	BareMetalNodePoolStateEnumDegraded         BareMetalNodePoolStateEnum = "DEGRADED"
)

func (e BareMetalNodePoolStateEnum) ToPointer() *BareMetalNodePoolStateEnum {
	return &e
}

func (e *BareMetalNodePoolStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PROVISIONING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "RECONCILING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "ERROR":
		fallthrough
	case "DEGRADED":
		*e = BareMetalNodePoolStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BareMetalNodePoolStateEnum: %v", v)
	}
}

// BareMetalNodePool - Resource that represents a bare metal node pool.
type BareMetalNodePool struct {
	// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations map[string]string `json:"annotations,omitempty"`
	// Output only. The time at which this bare metal node pool was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The time at which this bare metal node pool was deleted. If the resource is not deleted, this must be empty
	DeleteTime *string `json:"deleteTime,omitempty"`
	// The display name for the bare metal node pool.
	DisplayName *string `json:"displayName,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag *string `json:"etag,omitempty"`
	// Immutable. The bare metal node pool resource name.
	Name *string `json:"name,omitempty"`
	// BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.
	NodePoolConfig *BareMetalNodePoolConfig `json:"nodePoolConfig,omitempty"`
	// Output only. If set, there are currently changes in flight to the bare metal node pool.
	Reconciling *bool `json:"reconciling,omitempty"`
	// Output only. The current state of the bare metal node pool.
	State *BareMetalNodePoolStateEnum `json:"state,omitempty"`
	// ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
	Status *ResourceStatus `json:"status,omitempty"`
	// Output only. The unique identifier of the bare metal node pool.
	UID *string `json:"uid,omitempty"`
	// Output only. The time at which this bare metal node pool was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// BareMetalNodePoolInput - Resource that represents a bare metal node pool.
type BareMetalNodePoolInput struct {
	// Annotations on the bare metal node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
	Annotations map[string]string `json:"annotations,omitempty"`
	// The display name for the bare metal node pool.
	DisplayName *string `json:"displayName,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
	Etag *string `json:"etag,omitempty"`
	// Immutable. The bare metal node pool resource name.
	Name *string `json:"name,omitempty"`
	// BareMetalNodePoolConfig describes the configuration of all nodes within a given bare metal node pool.
	NodePoolConfig *BareMetalNodePoolConfig `json:"nodePoolConfig,omitempty"`
	// ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
	Status *ResourceStatus `json:"status,omitempty"`
}
