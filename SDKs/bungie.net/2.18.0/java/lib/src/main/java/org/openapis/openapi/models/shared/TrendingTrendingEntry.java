/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * TrendingTrendingEntry - The list entry view for trending items. Returns just enough to show the item on the trending page.
 */
public class TrendingTrendingEntry {
    /**
     * If the entry has a date at which it was created, this is that date.
     */
    
    public OffsetDateTime creationDate;
    public TrendingTrendingEntry withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    /**
     * The localized "display name/article title/'primary localized identifier'" of the entity.
     */
    
    public String displayName;
    public TrendingTrendingEntry withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    
    public OffsetDateTime endDate;
    public TrendingTrendingEntry withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * An enum - unfortunately - dictating all of the possible kinds of trending items that you might get in your result set, in case you want to do custom rendering or call to get the details of the item.
     */
    
    public Integer entityType;
    public TrendingTrendingEntry withEntityType(Integer entityType) {
        this.entityType = entityType;
        return this;
    }
    
    /**
     * If isFeatured, this image will be populated with whatever the featured image is. Note that this will likely be a very large image, so don't use it all the time.
     */
    
    public String featureImage;
    public TrendingTrendingEntry withFeatureImage(String featureImage) {
        this.featureImage = featureImage;
        return this;
    }
    
    /**
     * We don't know whether the identifier will be a string, a uint, or a long... so we're going to cast it all to a string. But either way, we need any trending item created to have a single unique identifier for its type.
     */
    
    public String identifier;
    public TrendingTrendingEntry withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }
    
    
    public String image;
    public TrendingTrendingEntry withImage(String image) {
        this.image = image;
        return this;
    }
    
    
    public Boolean isFeatured;
    public TrendingTrendingEntry withIsFeatured(Boolean isFeatured) {
        this.isFeatured = isFeatured;
        return this;
    }
    
    /**
     * If the item is of entityType TrendingEntryType.Container, it may have items - also Trending Entries - contained within it. This is the ordered list of those to display under the Container's header.
     */
    
    public TrendingTrendingEntry[] items;
    public TrendingTrendingEntry withItems(TrendingTrendingEntry[] items) {
        this.items = items;
        return this;
    }
    
    
    public String link;
    public TrendingTrendingEntry withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * If this is populated, the entry has a related MP4 video to show. I am 100% certain I am going to regret putting this directly on TrendingEntry, but it will work so yolo
     */
    
    public String mp4Video;
    public TrendingTrendingEntry withMp4Video(String mp4Video) {
        this.mp4Video = mp4Video;
        return this;
    }
    
    
    public OffsetDateTime startDate;
    public TrendingTrendingEntry withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * If the entity has a localized tagline/subtitle/motto/whatever, that is found here.
     */
    
    public String tagline;
    public TrendingTrendingEntry withTagline(String tagline) {
        this.tagline = tagline;
        return this;
    }
    
    /**
     * If this is populated, the entry has a related WebM video to show. I am 100% certain I am going to regret putting this directly on TrendingEntry, but it will work so yolo
     */
    
    public String webmVideo;
    public TrendingTrendingEntry withWebmVideo(String webmVideo) {
        this.webmVideo = webmVideo;
        return this;
    }
    
    /**
     * The weighted score of this trending item.
     */
    
    public Double weight;
    public TrendingTrendingEntry withWeight(Double weight) {
        this.weight = weight;
        return this;
    }
    
}
