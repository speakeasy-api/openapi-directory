"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import acceleratorcountrequest as shared_acceleratorcountrequest
from ..shared import acceleratortotalmemorymibrequest as shared_acceleratortotalmemorymibrequest
from ..shared import baremetal_enum as shared_baremetal_enum
from ..shared import baselineebsbandwidthmbpsrequest as shared_baselineebsbandwidthmbpsrequest
from ..shared import burstableperformance_enum as shared_burstableperformance_enum
from ..shared import localstorage_enum as shared_localstorage_enum
from ..shared import memorygibpervcpurequest as shared_memorygibpervcpurequest
from ..shared import memorymibrequest as shared_memorymibrequest
from ..shared import networkbandwidthgbpsrequest as shared_networkbandwidthgbpsrequest
from ..shared import networkinterfacecountrequest as shared_networkinterfacecountrequest
from ..shared import totallocalstoragegbrequest as shared_totallocalstoragegbrequest
from ..shared import vcpucountrangerequest as shared_vcpucountrangerequest
from enum import Enum
from typing import Optional

class InstanceRequirementsRequestAcceleratorManufacturersEnum(str, Enum):
    NVIDIA = 'nvidia'
    AMD = 'amd'
    AMAZON_WEB_SERVICES = 'amazon-web-services'
    XILINX = 'xilinx'

class InstanceRequirementsRequestAcceleratorNamesEnum(str, Enum):
    A100 = 'a100'
    V100 = 'v100'
    K80 = 'k80'
    T4 = 't4'
    M60 = 'm60'
    RADEON_PRO_V520 = 'radeon-pro-v520'
    VU9P = 'vu9p'
    INFERENTIA = 'inferentia'
    K520 = 'k520'

class InstanceRequirementsRequestAcceleratorTypesEnum(str, Enum):
    GPU = 'gpu'
    FPGA = 'fpga'
    INFERENCE = 'inference'

class InstanceRequirementsRequestCPUManufacturersEnum(str, Enum):
    INTEL = 'intel'
    AMD = 'amd'
    AMAZON_WEB_SERVICES = 'amazon-web-services'

class InstanceRequirementsRequestInstanceGenerationsEnum(str, Enum):
    CURRENT = 'current'
    PREVIOUS = 'previous'

class InstanceRequirementsRequestLocalStorageTypesEnum(str, Enum):
    HDD = 'hdd'
    SSD = 'ssd'


@dataclasses.dataclass
class InstanceRequirementsRequest:
    r"""<p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> </note> <p>For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html\\">Attribute-based instance type selection for EC2 Fleet</a>, <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html\\">Attribute-based instance type selection for Spot Fleet</a>, and <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html\\">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>"""
    
    memory_mi_b: shared_memorymibrequest.MemoryMiBRequest = dataclasses.field()  
    v_cpu_count: shared_vcpucountrangerequest.VCPUCountRangeRequest = dataclasses.field()  
    accelerator_count: Optional[shared_acceleratorcountrequest.AcceleratorCountRequest] = dataclasses.field(default=None)  
    accelerator_manufacturers: Optional[list[InstanceRequirementsRequestAcceleratorManufacturersEnum]] = dataclasses.field(default=None)  
    accelerator_names: Optional[list[InstanceRequirementsRequestAcceleratorNamesEnum]] = dataclasses.field(default=None)  
    accelerator_total_memory_mi_b: Optional[shared_acceleratortotalmemorymibrequest.AcceleratorTotalMemoryMiBRequest] = dataclasses.field(default=None)  
    accelerator_types: Optional[list[InstanceRequirementsRequestAcceleratorTypesEnum]] = dataclasses.field(default=None)  
    allowed_instance_types: Optional[list[str]] = dataclasses.field(default=None)  
    bare_metal: Optional[shared_baremetal_enum.BareMetalEnum] = dataclasses.field(default=None)  
    baseline_ebs_bandwidth_mbps: Optional[shared_baselineebsbandwidthmbpsrequest.BaselineEbsBandwidthMbpsRequest] = dataclasses.field(default=None)  
    burstable_performance: Optional[shared_burstableperformance_enum.BurstablePerformanceEnum] = dataclasses.field(default=None)  
    cpu_manufacturers: Optional[list[InstanceRequirementsRequestCPUManufacturersEnum]] = dataclasses.field(default=None)  
    excluded_instance_types: Optional[list[str]] = dataclasses.field(default=None)  
    instance_generations: Optional[list[InstanceRequirementsRequestInstanceGenerationsEnum]] = dataclasses.field(default=None)  
    local_storage: Optional[shared_localstorage_enum.LocalStorageEnum] = dataclasses.field(default=None)  
    local_storage_types: Optional[list[InstanceRequirementsRequestLocalStorageTypesEnum]] = dataclasses.field(default=None)  
    memory_gi_b_per_v_cpu: Optional[shared_memorygibpervcpurequest.MemoryGiBPerVCPURequest] = dataclasses.field(default=None)  
    network_bandwidth_gbps: Optional[shared_networkbandwidthgbpsrequest.NetworkBandwidthGbpsRequest] = dataclasses.field(default=None)  
    network_interface_count: Optional[shared_networkinterfacecountrequest.NetworkInterfaceCountRequest] = dataclasses.field(default=None)  
    on_demand_max_price_percentage_over_lowest_price: Optional[int] = dataclasses.field(default=None)  
    require_hibernate_support: Optional[bool] = dataclasses.field(default=None)  
    spot_max_price_percentage_over_lowest_price: Optional[int] = dataclasses.field(default=None)  
    total_local_storage_gb: Optional[shared_totallocalstoragegbrequest.TotalLocalStorageGBRequest] = dataclasses.field(default=None)  
    