"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import position as shared_position
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApproximateSplitRequest:
    r"""A suggestion by the service to the worker to dynamically split the WorkItem."""
    
    fraction_consumed: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fractionConsumed'), 'exclude': lambda f: f is None }})
    r"""A fraction at which to split the work item, from 0.0 (beginning of the input) to 1.0 (end of the input)."""  
    fraction_of_remainder: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fractionOfRemainder'), 'exclude': lambda f: f is None }})
    r"""The fraction of the remainder of work to split the work item at, from 0.0 (split at the current position) to 1.0 (end of the input)."""  
    position: Optional[shared_position.Position] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index."""  
    