"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LicenseAudioLicenseEnum(str, Enum):
    r"""Type of license"""
    AUDIO_PLATFORM = 'audio_platform'
    PREMIER_MUSIC_BASIC = 'premier_music_basic'
    PREMIER_MUSIC_EXTENDED = 'premier_music_extended'
    PREMIER_MUSIC_PRO = 'premier_music_pro'
    PREMIER_MUSIC_COMP = 'premier_music_comp'
    ASSET_ALL_MUSIC = 'asset_all_music'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LicenseAudio:
    r"""An audio track in a licensing request"""
    
    audio_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audio_id') }})
    r"""ID of the track being licensed"""  
    license: Optional[LicenseAudioLicenseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('license'), 'exclude': lambda f: f is None }})
    r"""Type of license"""  
    search_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_id'), 'exclude': lambda f: f is None }})
    r"""ID of the search that led to this licensing event"""  
    