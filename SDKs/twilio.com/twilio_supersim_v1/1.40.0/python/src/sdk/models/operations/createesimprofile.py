"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import supersim_v1_esim_profile as shared_supersim_v1_esim_profile
from enum import Enum
from typing import Optional

CREATE_ESIM_PROFILE_SERVERS = [
	"https://supersim.twilio.com",
]


@dataclasses.dataclass
class CreateEsimProfileSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum(str, Enum):
    r"""The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclasses.dataclass
class CreateEsimProfileCreateEsimProfileRequest:
    
    callback_method: Optional[CreateEsimProfileCreateEsimProfileRequestCallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackMethod' }})
    r"""The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST."""  
    callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackUrl' }})
    r"""The URL we should call using the `callback_method` when the status of the eSIM Profile changes. At this stage of the eSIM Profile pilot, the a request to the URL will only be called when the ESimProfile resource changes from `reserving` to `available`."""  
    eid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Eid' }})
    r"""Identifier of the eUICC that will claim the eSIM Profile."""  
    generate_matching_id: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'GenerateMatchingId' }})
    r"""When set to `true`, a value for `Eid` does not need to be provided. Instead, when the eSIM profile is reserved, a matching ID will be generated and returned via the `matching_id` property. This identifies the specific eSIM profile that can be used by any capable device to claim and download the profile."""  
    

@dataclasses.dataclass
class CreateEsimProfileResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    supersim_v1_esim_profile: Optional[shared_supersim_v1_esim_profile.SupersimV1EsimProfile] = dataclasses.field(default=None)
    r"""Created"""  
    