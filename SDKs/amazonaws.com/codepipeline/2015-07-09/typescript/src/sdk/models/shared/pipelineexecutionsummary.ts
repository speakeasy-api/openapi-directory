/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionTrigger } from "./executiontrigger";
import { PipelineExecutionStatusEnum } from "./pipelineexecutionstatusenum";
import { SourceRevision } from "./sourcerevision";
import { StopExecutionTrigger } from "./stopexecutiontrigger";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Summary information about a pipeline execution.
 */
export class PipelineExecutionSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineExecutionId" })
  pipelineExecutionId?: string;

  @SpeakeasyMetadata({ elemType: SourceRevision })
  @Expose({ name: "sourceRevisions" })
  @Type(() => SourceRevision)
  sourceRevisions?: SourceRevision[];

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: PipelineExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stopTrigger" })
  @Type(() => StopExecutionTrigger)
  stopTrigger?: StopExecutionTrigger;

  @SpeakeasyMetadata()
  @Expose({ name: "trigger" })
  @Type(() => ExecutionTrigger)
  trigger?: ExecutionTrigger;
}
