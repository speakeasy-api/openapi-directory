<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - Self Service Developer API documentation and demo.
 * 
 * 
 * ##Getting Started
 * 
 * You will need an API access profile user and password in order to access search endpoints.
 * Your access profile user and password is used for authenticating all requests to our search API. 
 * You MUST pass the user and password each time you perform a search request.
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
		'https://api.peoplefinderspro.com',
	];
  		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
	}
	
    /**
     * Search
     * 
     * ###### *Click on the grey search box above, to view sample request/response objects for the Identity Verification Search*
     * 
     * Perform a search:
     * 
     * 1. Add your key and key secret to the request headers.
     *     + galaxy-ap-name: [Key]
     *     + galaxy-ap-password: [Secret]
     *     + galaxy-search-type: DevAPIIDVerification
     * 
     * 2.  Add search criteria to your request. At least two are required: SSN, Name, Phone, Address or Email.
     *     ~~~html
     *             {
     *                 "FirstName": "John",
     *                 "MiddleName": "T",
     *                 "LastName": "Lawrence",
     *                 "Dob":"",
     *                 "Age": 0,
     *                 "Address": {
     *                     "addressLine1":"123 Q Street, Unit 102",
     *                     "addressLine2":"Sacramento, CA"
     *                 },
     *                 "PhoneNumber":"",
     *                 "Email":""
     *             }
     *     ~~~
     * 
     * 3.  Submit your search
     * 
     * A complete list of JSON request properties follows.
     * 
     * + <code>FirstName</code>= null (optional, string) ... First name.
     * 
     * + <code>MiddleName</code> = null (optional, string) ... Middle name or middle initial.
     * 
     * + <code>LastName</code> = null (optional, string) ... Last name.
     * 
     * + <code>Dob</code> = null (optional, string) ... Date of birth (format: MM/DD/YYYY).
     * 
     * + <code>Age</code> = null (optional, int) ... Age.
     * 
     * + <code>Addresses</code> = null (optional, Addresses[]) ... List of addresses.
     *     + <code>Members</code>
     *         + <code>AddressLine1</code> = null (optional, string) ... House number, street name and Unit number (i.e. 123 Q Street, Unit 102) or PO Box (i.e. 1821 Q Street).
     *         + <code>AddressLine2</code> = null (optional, string) ... State or City and State or Zip (i.e. Sacramento, CA).
     * 
     * + <code>Phone</code> = null (optional, string) ... Phone number (formats: ###-###-####, (###) ###-####).
     * 
     * + <code>Email</code> = null (optional, string) ... E-mail address.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\SearchRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\SearchResponse
     */
	public function search(
        \OpenAPI\OpenAPI\Models\Operations\SearchRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\SearchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/identity/verify_id');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\SearchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Search
     * 
     * ###### *Click on the grey search box above, to view sample request/response objects for Address Autocomplete Search*
     * 
     * Perform a search:
     * 
     * 1. Add your key and key secret to the request headers.
     *     + galaxy-ap-name: [Key]
     *     + galaxy-ap-password: [Secret]
     *     + galaxy-search-type: DevAPIAddressAutoComplete
     * 
     * 2.  Add search criteria to your request.
     *     ~~~html
     *             {
     *                 "Input":"1821 Q"
     *             }
     *     ~~~
     * 
     * 3.  Submit your search
     * 
     * The JSON request should have parts of the address.
     * 
     * + <code>Input</code> = null (optional, string) ... address.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostAddressAutocompleteRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostAddressAutocompleteResponse
     */
	public function postAddressAutocomplete(
        \OpenAPI\OpenAPI\Models\Operations\PostAddressAutocompleteRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostAddressAutocompleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/address/autocomplete');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostAddressAutocompleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Search
     * 
     * ###### *Click on the grey search box above, to view sample request/response objects for Contact Enrichment Search*
     * 
     * Perform a search:
     * 
     * 1. Add your key and key secret to the request headers.
     *     + galaxy-ap-name: [Key]
     *     + galaxy-ap-password: [Secret]
     *     + galaxy-search-type: DevAPIContactEnrich
     * 
     * 2.  Add search criteria to your request. At least two are required: Name, Phone, Address, or Email.
     *     ~~~html
     *             {
     *                 "FirstName": "John",
     *                 "MiddleName": "T",
     *                 "LastName": "Lawrence",
     *                 "Dob":"",
     *                 "Age": 0,
     *                 "Address": {
     *                     "addressLine1":"123 Q Street",
     *                     "addressLine2":"Sacramento, CA"
     *                 },
     *                 "PhoneNumber":"",
     *                 "Email":""
     *             }
     *     ~~~
     * 
     * 3.  Submit your search
     * 
     * A complete list of JSON request properties follows.
     * 
     * + <code>FirstName</code>= null (optional, string) ... First name.
     * 
     * + <code>MiddleName</code> = null (optional, string) ... Middle name or middle initial.
     * 
     * + <code>LastName</code> = null (optional, string) ... Last name.
     * 
     * + <code>Dob</code> = null (optional, string) ... Date of birth (format: MM/DD/YYYY).
     * 
     * + <code>Age</code> = null (optional, int) ... Age.
     * 
     * + <code>Addresses</code> = null (optional, Addresses[]) ... List of addresses.
     *     + <code>Members</code>
     *         + <code>AddressLine1</code> = null (optional, string) ... House number, street name and Unit number (i.e. 123 Q Street, Unit 102) or PO Box (i.e. 1821 Q Street).
     *         + <code>AddressLine2</code> = null (optional, string) ... State or City and State or Zip (i.e. Sacramento, CA).
     * 
     * + <code>Phone</code> = null (optional, string) ... Phone number (formats: ###-###-####, (###) ###-####).
     * 
     * + <code>Email</code> = null (optional, string) ... E-mail address.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostContactEnrichRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostContactEnrichResponse
     */
	public function postContactEnrich(
        \OpenAPI\OpenAPI\Models\Operations\PostContactEnrichRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostContactEnrichResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/contact/enrich');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostContactEnrichResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Search
     * 
     * ###### *Click on the grey search box above, to view sample request/response objects for Email Enrichment Search*
     * 
     * Perform a search:
     * 
     * 1. Add your Access Profile username and password to the request headers.
     *     + galaxy-ap-name: [Key]
     *     + galaxy-ap-password: [Secret]
     *     + galaxy-search-type: DevAPIEmailID
     * 
     * 2.  Add search criteria to your request.
     *     ~~~html
     *             {
     *                 "Email":"johnsmith@somedomain"
     *             }
     *     ~~~
     * 
     * 3.  Submit your search
     * 
     * The JSON request should have an email.
     * 
     * + <code>Email</code> = null (optional, string) ... E-mail address.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostEmailEnrichRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostEmailEnrichResponse
     */
	public function postEmailEnrich(
        \OpenAPI\OpenAPI\Models\Operations\PostEmailEnrichRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostEmailEnrichResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/email/enrich');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostEmailEnrichResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Search
     * 
     * ###### *Click on the grey search box above, to view sample request/response objects for Phone Enrichment Search*
     * 
     * Perform a search:
     * 
     * 1. Add your key and key secret to the request headers.
     *     + galaxy-ap-name: [Key]
     *     + galaxy-ap-password: [Secret]
     *     + galaxy-search-type: DevAPICallerID
     * 
     * 2.  Add search criteria to your request.
     *     ~~~html
     *             {
     *                 "Phone":"(123) 456-7890"
     *             }
     *     ~~~
     * 
     * 3.  Submit your search
     * 
     * The JSON request should have a phone number.
     * 
     * + <code>Phone</code> = null (optional, string) ... Phone number (formats: ###-###-####, (###) ###-####).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostPhoneEnrichRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostPhoneEnrichResponse
     */
	public function postPhoneEnrich(
        \OpenAPI\OpenAPI\Models\Operations\PostPhoneEnrichRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostPhoneEnrichResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/phone/enrich');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getHeaders($request));
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostPhoneEnrichResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
}