/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HardwareStatus - Hardware status. Temperatures may be compared to the temperature thresholds available in hardwareInfo to determine hardware health.
 */
public class HardwareStatus {
    /**
     * Current battery temperatures in Celsius for each battery on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batteryTemperatures")
    public Float[] batteryTemperatures;

    public HardwareStatus withBatteryTemperatures(Float[] batteryTemperatures) {
        this.batteryTemperatures = batteryTemperatures;
        return this;
    }
    
    /**
     * Current CPU temperatures in Celsius for each CPU on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuTemperatures")
    public Float[] cpuTemperatures;

    public HardwareStatus withCpuTemperatures(Float[] cpuTemperatures) {
        this.cpuTemperatures = cpuTemperatures;
        return this;
    }
    
    /**
     * CPU usages in percentage for each core available on the device. Usage is 0 for each unplugged core. Empty array implies that CPU usage is not supported in the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cpuUsages")
    public Float[] cpuUsages;

    public HardwareStatus withCpuUsages(Float[] cpuUsages) {
        this.cpuUsages = cpuUsages;
        return this;
    }
    
    /**
     * The time the measurements were taken.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public HardwareStatus withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Fan speeds in RPM for each fan on the device. Empty array means that there are no fans or fan speed is not supported on the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fanSpeeds")
    public Float[] fanSpeeds;

    public HardwareStatus withFanSpeeds(Float[] fanSpeeds) {
        this.fanSpeeds = fanSpeeds;
        return this;
    }
    
    /**
     * Current GPU temperatures in Celsius for each GPU on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gpuTemperatures")
    public Float[] gpuTemperatures;

    public HardwareStatus withGpuTemperatures(Float[] gpuTemperatures) {
        this.gpuTemperatures = gpuTemperatures;
        return this;
    }
    
    /**
     * Current device skin temperatures in Celsius.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skinTemperatures")
    public Float[] skinTemperatures;

    public HardwareStatus withSkinTemperatures(Float[] skinTemperatures) {
        this.skinTemperatures = skinTemperatures;
        return this;
    }
    
    public HardwareStatus(){}
}
