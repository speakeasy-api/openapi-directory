// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Position - Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.
type Position struct {
	// Position is a byte offset.
	ByteOffset *string `json:"byteOffset,omitempty"`
	// A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources.
	ConcatPosition *ConcatPosition `json:"concatPosition,omitempty"`
	// Position is past all other positions. Also useful for the end position of an unbounded range.
	End *bool `json:"end,omitempty"`
	// Position is a string key, ordered lexicographically.
	Key *string `json:"key,omitempty"`
	// Position is a record index.
	RecordIndex *string `json:"recordIndex,omitempty"`
	// CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding).
	ShufflePosition *string `json:"shufflePosition,omitempty"`
}
