// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGetPathwayHistoryFormatEnum
type GetGetPathwayHistoryFormatEnum string

const (
	GetGetPathwayHistoryFormatEnumJSON GetGetPathwayHistoryFormatEnum = "json"
	GetGetPathwayHistoryFormatEnumXML  GetGetPathwayHistoryFormatEnum = "xml"
	GetGetPathwayHistoryFormatEnumHTML GetGetPathwayHistoryFormatEnum = "html"
	GetGetPathwayHistoryFormatEnumDump GetGetPathwayHistoryFormatEnum = "dump"
	GetGetPathwayHistoryFormatEnumJpg  GetGetPathwayHistoryFormatEnum = "jpg"
	GetGetPathwayHistoryFormatEnumPdf  GetGetPathwayHistoryFormatEnum = "pdf"
)

func (e *GetGetPathwayHistoryFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetGetPathwayHistoryFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGetPathwayHistoryFormatEnum: %s", s)
	}
}

type GetGetPathwayHistoryQueryParams struct {
	Format *GetGetPathwayHistoryFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The pathway identifier
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
	// Limit by time, only history items after the given
	Timestamp string `queryParam:"style=form,explode=true,name=timestamp"`
}

type GetGetPathwayHistoryRequest struct {
	QueryParams GetGetPathwayHistoryQueryParams
}

type GetGetPathwayHistoryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
