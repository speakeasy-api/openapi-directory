<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StructuredMessage - A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StructuredMessage
{
    /**
     * Identifier for this message type. Used by external systems to internationalize or personalize message.
     * 
     * @var ?string $messageKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('messageKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $messageKey = null;
    
    /**
     * Human-readable version of message.
     * 
     * @var ?string $messageText
     */
	#[\JMS\Serializer\Annotation\SerializedName('messageText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $messageText = null;
    
    /**
     * The structured data associated with this message.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Parameter> $parameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Parameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameters = null;
    
	public function __construct()
	{
		$this->messageKey = null;
		$this->messageText = null;
		$this->parameters = null;
	}
}
