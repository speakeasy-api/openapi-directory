// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFeedAlt1Security struct {
	Oauth2 shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

// GetFeedAlt1TypeEnum - The feed type.
type GetFeedAlt1TypeEnum string

const (
	GetFeedAlt1TypeEnumAppears          GetFeedAlt1TypeEnum = "appears"
	GetFeedAlt1TypeEnumCategoryFeatured GetFeedAlt1TypeEnum = "category_featured"
	GetFeedAlt1TypeEnumChannel          GetFeedAlt1TypeEnum = "channel"
	GetFeedAlt1TypeEnumFacebookFeed     GetFeedAlt1TypeEnum = "facebook_feed"
	GetFeedAlt1TypeEnumFollowing        GetFeedAlt1TypeEnum = "following"
	GetFeedAlt1TypeEnumGroup            GetFeedAlt1TypeEnum = "group"
	GetFeedAlt1TypeEnumLikes            GetFeedAlt1TypeEnum = "likes"
	GetFeedAlt1TypeEnumOndemandPublish  GetFeedAlt1TypeEnum = "ondemand_publish"
	GetFeedAlt1TypeEnumShare            GetFeedAlt1TypeEnum = "share"
	GetFeedAlt1TypeEnumTaggedWith       GetFeedAlt1TypeEnum = "tagged_with"
	GetFeedAlt1TypeEnumTwitterTimeline  GetFeedAlt1TypeEnum = "twitter_timeline"
	GetFeedAlt1TypeEnumUploads          GetFeedAlt1TypeEnum = "uploads"
)

func (e *GetFeedAlt1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appears":
		fallthrough
	case "category_featured":
		fallthrough
	case "channel":
		fallthrough
	case "facebook_feed":
		fallthrough
	case "following":
		fallthrough
	case "group":
		fallthrough
	case "likes":
		fallthrough
	case "ondemand_publish":
		fallthrough
	case "share":
		fallthrough
	case "tagged_with":
		fallthrough
	case "twitter_timeline":
		fallthrough
	case "uploads":
		*e = GetFeedAlt1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeedAlt1TypeEnum: %s", s)
	}
}

type GetFeedAlt1QueryParams struct {
	// Necessary for proper pagination. You shouldn't provide this value yourself, and instead use the pagination links in the feed response. Please see our [pagination documentation](https://developer.vimeo.com/api/common-formats#using-the-pagination-parameter) for more information.
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The feed type.
	Type *GetFeedAlt1TypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetFeedAlt1Request struct {
	QueryParams GetFeedAlt1QueryParams
	Security    GetFeedAlt1Security
}

type GetFeedAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The videos were returned.
	Activity31s []shared.Activity31
}
