"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfoInput:
    r"""Information about a verification endpoint that can be used for 2FA."""
    
    email_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAddress'), 'exclude': lambda f: f is None }})
    r"""Email address for which to trigger a verification request."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumber'), 'exclude': lambda f: f is None }})
    r"""Phone number for which to trigger a verification request. Should be given in E.164 format."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1EndpointVerificationInfo:
    r"""Information about a verification endpoint that can be used for 2FA."""
    
    email_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailAddress'), 'exclude': lambda f: f is None }})
    r"""Email address for which to trigger a verification request."""  
    last_verification_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastVerificationTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Timestamp of the last successful verification for the endpoint, if any."""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phoneNumber'), 'exclude': lambda f: f is None }})
    r"""Phone number for which to trigger a verification request. Should be given in E.164 format."""  
    request_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestToken'), 'exclude': lambda f: f is None }})
    r"""Output only. Token to provide to the client to trigger endpoint verification. It must be used within 15 minutes."""  
    