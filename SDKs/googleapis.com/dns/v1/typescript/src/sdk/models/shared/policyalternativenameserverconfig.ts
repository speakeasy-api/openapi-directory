/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PolicyAlternativeNameServerConfigTargetNameServer } from "./policyalternativenameserverconfigtargetnameserver";
import { Expose, Type } from "class-transformer";

export class PolicyAlternativeNameServerConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.
   */
  @SpeakeasyMetadata({
    elemType: PolicyAlternativeNameServerConfigTargetNameServer,
  })
  @Expose({ name: "targetNameServers" })
  @Type(() => PolicyAlternativeNameServerConfigTargetNameServer)
  targetNameServers?: PolicyAlternativeNameServerConfigTargetNameServer[];
}
