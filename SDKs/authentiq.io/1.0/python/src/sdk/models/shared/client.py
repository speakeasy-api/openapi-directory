"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Client:
    r"""Client object"""
    
    client_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_name') }, 'multipart_form': { 'field_name': 'client_name' }})  
    client_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_uri') }, 'multipart_form': { 'field_name': 'client_uri' }})  
    application_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('application_type'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'application_type' }})  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'client_id' }})  
    contacts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contacts'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'contacts' }})  
    default_max_age: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_max_age'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'default_max_age' }})  
    default_scopes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_scopes'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'default_scopes' }})  
    grant_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grant_types'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'grant_types' }})  
    logo_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo_uri'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'logo_uri' }})  
    policy_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy_uri'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'policy_uri' }})  
    redirect_uris: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirect_uris'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'redirect_uris' }})  
    response_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response_types'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'response_types' }})  
    tos_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tos_uri'), 'exclude': lambda f: f is None }, 'multipart_form': { 'field_name': 'tos_uri' }})  
    