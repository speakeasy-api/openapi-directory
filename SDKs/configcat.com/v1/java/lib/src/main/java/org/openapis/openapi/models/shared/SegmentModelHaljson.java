/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SegmentModelHaljson - When the creation was successful.
 */
public class SegmentModelHaljson {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_embedded")
    public SegmentModelHaljsonEmbedded embedded;

    public SegmentModelHaljson withEmbedded(SegmentModelHaljsonEmbedded embedded) {
        this.embedded = embedded;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public SegmentModelHaljsonLinks links;

    public SegmentModelHaljson withLinks(SegmentModelHaljsonLinks links) {
        this.links = links;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comparator")
    public RolloutRuleComparatorEnum comparator;

    public SegmentModelHaljson withComparator(RolloutRuleComparatorEnum comparator) {
        this.comparator = comparator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comparisonAttribute")
    public String comparisonAttribute;

    public SegmentModelHaljson withComparisonAttribute(String comparisonAttribute) {
        this.comparisonAttribute = comparisonAttribute;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comparisonValue")
    public String comparisonValue;

    public SegmentModelHaljson withComparisonValue(String comparisonValue) {
        this.comparisonValue = comparisonValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public SegmentModelHaljson withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorEmail")
    public String creatorEmail;

    public SegmentModelHaljson withCreatorEmail(String creatorEmail) {
        this.creatorEmail = creatorEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorFullName")
    public String creatorFullName;

    public SegmentModelHaljson withCreatorFullName(String creatorFullName) {
        this.creatorFullName = creatorFullName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public SegmentModelHaljson withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastUpdaterEmail")
    public String lastUpdaterEmail;

    public SegmentModelHaljson withLastUpdaterEmail(String lastUpdaterEmail) {
        this.lastUpdaterEmail = lastUpdaterEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastUpdaterFullName")
    public String lastUpdaterFullName;

    public SegmentModelHaljson withLastUpdaterFullName(String lastUpdaterFullName) {
        this.lastUpdaterFullName = lastUpdaterFullName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SegmentModelHaljson withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segmentId")
    public String segmentId;

    public SegmentModelHaljson withSegmentId(String segmentId) {
        this.segmentId = segmentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;

    public SegmentModelHaljson withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public SegmentModelHaljson(){}
}
