"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import booleancondition as shared_booleancondition
from ..shared import cellformat as shared_cellformat
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BooleanRule:
    r"""A rule that may or may not match, depending on the condition."""
    
    condition: Optional[shared_booleancondition.BooleanCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""A condition that can evaluate to true or false. BooleanConditions are used by conditional formatting, data validation, and the criteria in filters."""  
    format: Optional[shared_cellformat.CellFormat] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""The format of a cell."""  
    