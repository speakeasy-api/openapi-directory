"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import editorialimagecontentdatalist as shared_editorialimagecontentdatalist
from ..shared import security as shared_security
from typing import Optional


@dataclasses.dataclass
class GetEditorialImageLivefeedItemsSecurity:
    
    basic: Optional[shared_security.SchemeBasic] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    customer_access_code: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetEditorialImageLivefeedItemsRequest:
    
    country: str = dataclasses.field(metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""Returns only if the livefeed items are available for distribution in a certain country"""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Editorial livefeed ID; must be an URI encoded string"""  
    

@dataclasses.dataclass
class GetEditorialImageLivefeedItemsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    editorial_image_content_data_list: Optional[shared_editorialimagecontentdatalist.EditorialImageContentDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    