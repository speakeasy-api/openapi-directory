/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModelStatusEnum } from "./modelstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Provides information for filtering a list of document classifiers. You can only specify one filtering parameter in a request. For more information, see the <code>ListDocumentClassifiers</code> operation.
 */
export class DocumentClassifierFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DocumentClassifierName" })
  documentClassifierName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ModelStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SubmitTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submitTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "SubmitTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submitTimeBefore?: Date;
}
