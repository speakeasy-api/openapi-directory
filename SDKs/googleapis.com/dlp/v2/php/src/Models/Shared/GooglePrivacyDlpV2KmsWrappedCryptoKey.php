<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GooglePrivacyDlpV2KmsWrappedCryptoKey - Include to use an existing data crypto key wrapped by KMS. The wrapped key must be a 128-, 192-, or 256-bit key. Authorization requires the following IAM permissions when sending a request to perform a crypto transformation using a KMS-wrapped crypto key: dlp.kms.encrypt For more information, see [Creating a wrapped key] (https://cloud.google.com/dlp/docs/create-wrapped-key). Note: When you use Cloud KMS for cryptographic operations, [charges apply](https://cloud.google.com/kms/pricing).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GooglePrivacyDlpV2KmsWrappedCryptoKey
{
    /**
     * Required. The resource name of the KMS CryptoKey to use for unwrapping.
     * 
     * @var ?string $cryptoKeyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('cryptoKeyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cryptoKeyName = null;
    
    /**
     * Required. The wrapped data crypto key.
     * 
     * @var ?string $wrappedKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('wrappedKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $wrappedKey = null;
    
	public function __construct()
	{
		$this->cryptoKeyName = null;
		$this->wrappedKey = null;
	}
}
