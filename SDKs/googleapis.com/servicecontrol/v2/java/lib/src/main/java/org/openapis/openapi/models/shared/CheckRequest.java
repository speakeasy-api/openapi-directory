/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CheckRequest - Request message for the Check method.
 */
public class CheckRequest {
    /**
     * This message defines the standard attribute vocabulary for Google APIs. An attribute is a piece of metadata that describes an activity on a network service. For example, the size of an HTTP request, or the status code of an HTTP response. Each attribute has a type and a name, which is logically defined as a proto message field in `AttributeContext`. The field type becomes the attribute type, and the field path becomes the attribute name. For example, the attribute `source.ip` maps to field `AttributeContext.source.ip`. This message definition is guaranteed not to have any wire breaking change. So you can use it directly for passing attributes across different systems. NOTE: Different system may generate different subset of attributes. Please verify the system specification before relying on an attribute generated a system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public AttributeContext attributes;

    public CheckRequest withAttributes(AttributeContext attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * Optional. Contains a comma-separated list of flags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flags")
    public String flags;

    public CheckRequest withFlags(String flags) {
        this.flags = flags;
        return this;
    }
    
    /**
     * Describes the resources and the policies applied to each resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public ResourceInfo[] resources;

    public CheckRequest withResources(ResourceInfo[] resources) {
        this.resources = resources;
        return this;
    }
    
    /**
     * Specifies the version of the service configuration that should be used to process the request. Must not be empty. Set this field to 'latest' to specify using the latest configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceConfigId")
    public String serviceConfigId;

    public CheckRequest withServiceConfigId(String serviceConfigId) {
        this.serviceConfigId = serviceConfigId;
        return this;
    }
    
    public CheckRequest(){}
}
