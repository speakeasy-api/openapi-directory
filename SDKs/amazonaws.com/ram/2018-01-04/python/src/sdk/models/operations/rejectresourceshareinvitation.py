"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import rejectresourceshareinvitationresponse as shared_rejectresourceshareinvitationresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RejectResourceShareInvitationRequestBody:
    
    resource_share_invitation_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceShareInvitationArn') }})
    r"""Specifies the <a href=\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\">Amazon Resoure Name (ARN)</a> of the invitation that you want to reject."""  
    client_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientToken'), 'exclude': lambda f: f is None }})
    r"""<p>Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a <a href=\\"https://wikipedia.org/wiki/Universally_unique_identifier\\">UUID type of value.</a>.</p> <p>If you don't provide this value, then Amazon Web Services generates a random one for you.</p>"""  
    

@dataclasses.dataclass
class RejectResourceShareInvitationRequest:
    
    request_body: RejectResourceShareInvitationRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class RejectResourceShareInvitationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    idempotent_parameter_mismatch_exception: Optional[Any] = dataclasses.field(default=None)
    r"""IdempotentParameterMismatchException"""  
    invalid_client_token_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidClientTokenException"""  
    malformed_arn_exception: Optional[Any] = dataclasses.field(default=None)
    r"""MalformedArnException"""  
    operation_not_permitted_exception: Optional[Any] = dataclasses.field(default=None)
    r"""OperationNotPermittedException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    reject_resource_share_invitation_response: Optional[shared_rejectresourceshareinvitationresponse.RejectResourceShareInvitationResponse] = dataclasses.field(default=None)
    r"""Success"""  
    resource_share_invitation_already_accepted_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceShareInvitationAlreadyAcceptedException"""  
    resource_share_invitation_already_rejected_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceShareInvitationAlreadyRejectedException"""  
    resource_share_invitation_arn_not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceShareInvitationArnNotFoundException"""  
    resource_share_invitation_expired_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceShareInvitationExpiredException"""  
    server_internal_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServerInternalException"""  
    service_unavailable_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceUnavailableException"""  
    