<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Cable
{
	#[\JMS\Serializer\Annotation\SerializedName('color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $color = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('length')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $length = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('length_unit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CableLengthUnit')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CableLengthUnit $lengthUnit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CableStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CableStatus $status = null;
    
    /**
     * $terminationA
     * 
     * @var ?array<string, string> $terminationA
     */
	#[\JMS\Serializer\Annotation\SerializedName('termination_a')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $terminationA = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('termination_a_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $terminationAId;
    
	#[\JMS\Serializer\Annotation\SerializedName('termination_a_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $terminationAType;
    
    /**
     * $terminationB
     * 
     * @var ?array<string, string> $terminationB
     */
	#[\JMS\Serializer\Annotation\SerializedName('termination_b')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $terminationB = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('termination_b_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $terminationBId;
    
	#[\JMS\Serializer\Annotation\SerializedName('termination_b_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $terminationBType;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CableTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CableTypeEnum $type = null;
    
	public function __construct()
	{
		$this->color = null;
		$this->id = null;
		$this->label = null;
		$this->length = null;
		$this->lengthUnit = null;
		$this->status = null;
		$this->terminationA = null;
		$this->terminationAId = 0;
		$this->terminationAType = "";
		$this->terminationB = null;
		$this->terminationBId = 0;
		$this->terminationBType = "";
		$this->type = null;
	}
}
