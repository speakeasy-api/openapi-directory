/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRecaptchaenterpriseV1ChallengeMetrics } from "./googlecloudrecaptchaenterprisev1challengemetrics";
import { GoogleCloudRecaptchaenterpriseV1ScoreMetrics } from "./googlecloudrecaptchaenterprisev1scoremetrics";
import { Expose, Type } from "class-transformer";

/**
 * Metrics for a single Key.
 */
export class GoogleCloudRecaptchaenterpriseV1Metrics extends SpeakeasyBase {
  /**
   * Metrics will be continuous and in order by dates, and in the granularity of day. Only challenge-based keys (CHECKBOX, INVISIBLE), will have challenge-based data.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudRecaptchaenterpriseV1ChallengeMetrics,
  })
  @Expose({ name: "challengeMetrics" })
  @Type(() => GoogleCloudRecaptchaenterpriseV1ChallengeMetrics)
  challengeMetrics?: GoogleCloudRecaptchaenterpriseV1ChallengeMetrics[];

  /**
   * Output only. The name of the metrics, in the format "projects/{project}/keys/{key}/metrics".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Metrics will be continuous and in order by dates, and in the granularity of day. All Key types should have score-based data.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudRecaptchaenterpriseV1ScoreMetrics })
  @Expose({ name: "scoreMetrics" })
  @Type(() => GoogleCloudRecaptchaenterpriseV1ScoreMetrics)
  scoreMetrics?: GoogleCloudRecaptchaenterpriseV1ScoreMetrics[];

  /**
   * Inclusive start time aligned to a day (UTC).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;
}
