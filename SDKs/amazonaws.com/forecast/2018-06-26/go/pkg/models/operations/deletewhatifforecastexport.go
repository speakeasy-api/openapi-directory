// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteWhatIfForecastExportXAmzTargetEnum
type DeleteWhatIfForecastExportXAmzTargetEnum string

const (
	DeleteWhatIfForecastExportXAmzTargetEnumAmazonForecastDeleteWhatIfForecastExport DeleteWhatIfForecastExportXAmzTargetEnum = "AmazonForecast.DeleteWhatIfForecastExport"
)

func (e *DeleteWhatIfForecastExportXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonForecast.DeleteWhatIfForecastExport":
		*e = DeleteWhatIfForecastExportXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWhatIfForecastExportXAmzTargetEnum: %s", s)
	}
}

type DeleteWhatIfForecastExportRequest struct {
	DeleteWhatIfForecastExportRequest shared.DeleteWhatIfForecastExportRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        DeleteWhatIfForecastExportXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteWhatIfForecastExportResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
