// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

// GetSchedulesScheduleEEfileCandidateOfficeEnum - Federal office candidate runs for: H, S or P
type GetSchedulesScheduleEEfileCandidateOfficeEnum string

const (
	GetSchedulesScheduleEEfileCandidateOfficeEnumUnknown GetSchedulesScheduleEEfileCandidateOfficeEnum = ""
	GetSchedulesScheduleEEfileCandidateOfficeEnumH       GetSchedulesScheduleEEfileCandidateOfficeEnum = "H"
	GetSchedulesScheduleEEfileCandidateOfficeEnumS       GetSchedulesScheduleEEfileCandidateOfficeEnum = "S"
	GetSchedulesScheduleEEfileCandidateOfficeEnumP       GetSchedulesScheduleEEfileCandidateOfficeEnum = "P"
)

func (e *GetSchedulesScheduleEEfileCandidateOfficeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "":
		fallthrough
	case "H":
		fallthrough
	case "S":
		fallthrough
	case "P":
		*e = GetSchedulesScheduleEEfileCandidateOfficeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchedulesScheduleEEfileCandidateOfficeEnum: %s", s)
	}
}

type GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum string

const (
	GetSchedulesScheduleEEfileSupportOpposeIndicatorEnumS GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum = "S"
	GetSchedulesScheduleEEfileSupportOpposeIndicatorEnumO GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum = "O"
)

func (e *GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "S":
		fallthrough
	case "O":
		*e = GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum: %s", s)
	}
}

type GetSchedulesScheduleEEfileRequest struct {
	// API key for https://api.data.gov. Get one at https://api.data.gov/signup.
	//
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	//
	CandidateID []string `queryParam:"style=form,explode=true,name=candidate_id"`
	// Federal office candidate runs for: H, S or P
	CandidateOffice *GetSchedulesScheduleEEfileCandidateOfficeEnum `queryParam:"style=form,explode=true,name=candidate_office"`
	// Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
	CandidateOfficeDistrict []string `queryParam:"style=form,explode=true,name=candidate_office_district"`
	// US state or territory where a candidate runs for office
	CandidateOfficeState []string `queryParam:"style=form,explode=true,name=candidate_office_state"`
	// Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
	CandidateParty []string `queryParam:"style=form,explode=true,name=candidate_party"`
	// Search for candidates by candiate id or candidate first or last name
	//
	CandidateSearch []string `queryParam:"style=form,explode=true,name=candidate_search"`
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID []string `queryParam:"style=form,explode=true,name=committee_id"`
	// The form where the underlying data comes from, for example, Form 1 would appear as F1:
	//     - F1   Statement of Organization
	//     - F1M  Notification of Multicandidate Status
	//     - F2   Statement of Candidacy
	//     - F3   Report of Receipts and Disbursements for an Authorized Committee
	//     - F3P  Report of Receipts and Disbursements by an Authorized Committee of a Candidate for     The Office of President or Vice President
	//     - F3L  Report of Contributions Bundled by Lobbyists/Registrants and Lobbyist/Registrant PACs
	//     - F3X  Report of Receipts and Disbursements for other than an Authorized Committee
	//     - F4   Report of Receipts and Disbursements for a Committee or Organization Supporting a Nomination Convention
	//     - F5   Report of Independent Expenditures Made and Contributions Received
	//     - F6   48 Hour Notice of Contributions/Loans Received
	//     - F7   Report of Communication Costs by Corporations and Membership Organizations
	//     - F8   Debt Settlement Plan
	//     - F9   24 Hour Notice of Disbursements for Electioneering Communications
	//     - F13  Report of Donations Accepted for Inaugural Committee
	//     - F99  Miscellaneous Text
	//     - FRQ  Request for Additional Information
	//
	FilingForm []string `queryParam:"style=form,explode=true,name=filing_form"`
	// An unique identifier for each page where the electronic or paper filing is reported.
	//
	ImageNumber []string `queryParam:"style=form,explode=true,name=image_number"`
	// Record filed as 24- or 48-hour notice.
	//
	IsNotice *bool `queryParam:"style=form,explode=true,name=is_notice"`
	// Selects all items distributed by this committee before this date
	MaxDisseminationDate *types.Date `queryParam:"style=form,explode=true,name=max_dissemination_date"`
	// Selects all items expended by this committee less than this amount
	MaxExpenditureAmount *int `queryParam:"style=form,explode=true,name=max_expenditure_amount"`
	// Selects all items expended by this committee before this date
	MaxExpenditureDate *types.Date `queryParam:"style=form,explode=true,name=max_expenditure_date"`
	// Timestamp of electronic or paper record that FEC received
	MaxFiledDate *types.Date `queryParam:"style=form,explode=true,name=max_filed_date"`
	// Selects all items distributed by this committee after this date
	MinDisseminationDate *types.Date `queryParam:"style=form,explode=true,name=min_dissemination_date"`
	// Selects all items expended by this committee greater than this amount
	MinExpenditureAmount *int `queryParam:"style=form,explode=true,name=min_expenditure_amount"`
	// Selects all items expended by this committee after this date
	MinExpenditureDate *types.Date `queryParam:"style=form,explode=true,name=min_expenditure_date"`
	// Timestamp of electronic or paper record that FEC received
	MinFiledDate *types.Date `queryParam:"style=form,explode=true,name=min_filed_date"`
	// The report associated with the transaction is either new or is the most-recently filed amendment. Undetermined version (`null`) is always included.
	//
	MostRecent *bool `queryParam:"style=form,explode=true,name=most_recent"`
	// For paginating through results, starting at page 1
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// Name of the entity that received the payment.
	//
	PayeeName []string `queryParam:"style=form,explode=true,name=payee_name"`
	// The number of results returned per page. Defaults to 20.
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Provide a field to sort by. Use `-` for descending order.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Hide null values on sorted column(s).
	SortHideNull *bool `queryParam:"style=form,explode=true,name=sort_hide_null"`
	// Toggle that filters out all rows having sort column that is non-null
	SortNullOnly *bool `queryParam:"style=form,explode=true,name=sort_null_only"`
	// Toggle that sorts null values last
	SortNullsLast *bool `queryParam:"style=form,explode=true,name=sort_nulls_last"`
	// The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
	SpenderName []string `queryParam:"style=form,explode=true,name=spender_name"`
	// Explains if the money was spent in order to support or oppose a candidate or candidates. (Coded S or O for support or oppose.) This indicator applies to independent expenditures and communication costs.
	SupportOpposeIndicator []GetSchedulesScheduleEEfileSupportOpposeIndicatorEnum `queryParam:"style=form,explode=true,name=support_oppose_indicator"`
}

type GetSchedulesScheduleEEfileResponse struct {
	ContentType        string
	ScheduleEEfilePage *shared.ScheduleEEfilePage
	StatusCode         int
	RawResponse        *http.Response
}
