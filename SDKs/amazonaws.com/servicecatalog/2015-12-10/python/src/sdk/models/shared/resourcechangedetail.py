"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import evaluationtype_enum as shared_evaluationtype_enum
from ..shared import resourcetargetdefinition as shared_resourcetargetdefinition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceChangeDetail:
    r"""Information about a change to a resource attribute."""
    
    causing_entity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CausingEntity'), 'exclude': lambda f: f is None }})  
    evaluation: Optional[shared_evaluationtype_enum.EvaluationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Evaluation'), 'exclude': lambda f: f is None }})  
    target: Optional[shared_resourcetargetdefinition.ResourceTargetDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Target'), 'exclude': lambda f: f is None }})  
    