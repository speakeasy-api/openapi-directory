// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetV2UsersJSONRequest struct {
	// Filters users based on active attribute. Defaults to not applied
	Active *bool `queryParam:"style=form,explode=true,name=active"`
	// Filters users by group_id.  An additional value of "_is_null" can be passed to filter users that are not in a group
	GroupID []string `queryParam:"style=form,explode=false,name=group_id"`
	// Filters list to only include guids
	GUID []string `queryParam:"style=form,explode=false,name=guid"`
	// Filters users based on if they have a crm user mapped or not.
	HasCrmUser *bool `queryParam:"style=form,explode=true,name=has_crm_user"`
	// IDs of users to fetch. If a record can't be found, that record won't be returned and your request will be successful
	Ids []int64 `queryParam:"style=form,explode=false,name=ids"`
	// Whether to include total_pages and total_count in the metadata. Defaults to false
	IncludePagingCounts *bool `queryParam:"style=form,explode=true,name=include_paging_counts"`
	// The current page to fetch users from. Defaults to returning all users
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// How many users to show per page in the range [1, 100]. Defaults to 25.  Results are only paginated if the page parameter is defined
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Filters users by role_id
	RoleID []string `queryParam:"style=form,explode=false,name=role_id"`
	// Space-separated list of keywords used to find case-insensitive substring matches against First Name, Last Name, or Email
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Key to sort on, must be one of: id, email, name, group, role. Defaults to id
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
	SortDirection *string `queryParam:"style=form,explode=true,name=sort_direction"`
	// Defaults to true.
	//
	// When true, only shows users that are actionable based on the team's privacy settings.
	// When false, shows all users on the team, even if you can't take action on that user. Deactivated users are also included when false.
	//
	VisibleOnly *bool `queryParam:"style=form,explode=true,name=visible_only"`
	// Filters users based on assigned work_country.
	WorkCountry []string `queryParam:"style=form,explode=false,name=work_country"`
}

type GetV2UsersJSONResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
