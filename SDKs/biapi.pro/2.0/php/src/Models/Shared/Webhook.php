<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Webhook - Successful DELETE on Webhook resource
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Webhook
{
    /**
     * json value to describe data to add
     * 
     * @var ?string $addToData
     */
	#[\JMS\Serializer\Annotation\SerializedName('add_to_data')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addToData = null;
    
    /**
     * Date of the webhook creation
     * 
     * @var \DateTime $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $created;
    
    /**
     * Date of the webhook deletion
     * 
     * @var ?\DateTime $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $deleted = null;
    
    /**
     * json value to store last related webhook data flushing fail
     * 
     * @var ?string $flushFail
     */
	#[\JMS\Serializer\Annotation\SerializedName('flush_fail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $flushFail = null;
    
    /**
     * ID of the webhook
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * ID of the authentication process
     * 
     * @var ?int $idAuth
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_auth')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idAuth = null;
    
    /**
     * ID of the webhook event
     * 
     * @var ?int $idEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_event')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idEvent = null;
    
    /**
     * ID of the service
     * 
     * @var ?int $idService
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_service')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idService = null;
    
    /**
     * ID of the emitter user
     * 
     * @var ?int $idUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_user')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idUser = null;
    
    /**
     * Date of the webhook last update
     * 
     * @var \DateTime $updated
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updated;
    
    /**
     * URL of the webhook
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	public function __construct()
	{
		$this->addToData = null;
		$this->created = new \DateTime();
		$this->deleted = null;
		$this->flushFail = null;
		$this->id = 0;
		$this->idAuth = null;
		$this->idEvent = null;
		$this->idService = null;
		$this->idUser = null;
		$this->updated = new \DateTime();
		$this->url = null;
	}
}
