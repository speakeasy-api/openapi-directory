/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class BINLookupResponse {
    /**
     * The BIN or IIN number
     */
    @JsonProperty("bin-number")
    public String binNumber;

    public BINLookupResponse withBinNumber(String binNumber) {
        this.binNumber = binNumber;
        return this;
    }
    
    /**
     * The card brand (e.g. Visa or Mastercard)
     */
    @JsonProperty("card-brand")
    public String cardBrand;

    public BINLookupResponse withCardBrand(String cardBrand) {
        this.cardBrand = cardBrand;
        return this;
    }
    
    /**
     * The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID
     */
    @JsonProperty("card-category")
    public String cardCategory;

    public BINLookupResponse withCardCategory(String cardCategory) {
        this.cardCategory = cardCategory;
        return this;
    }
    
    /**
     * The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD
     */
    @JsonProperty("card-type")
    public String cardType;

    public BINLookupResponse withCardType(String cardType) {
        this.cardType = cardType;
        return this;
    }
    
    /**
     * The full country name of the issuer
     */
    @JsonProperty("country")
    public String country;

    public BINLookupResponse withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The ISO 2-letter country code of the issuer
     */
    @JsonProperty("country-code")
    public String countryCode;

    public BINLookupResponse withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * The ISO 3-letter country code of the issuer
     */
    @JsonProperty("country-code3")
    public String countryCode3;

    public BINLookupResponse withCountryCode3(String countryCode3) {
        this.countryCode3 = countryCode3;
        return this;
    }
    
    /**
     * ISO 4217 currency code associated with the country of the issuer
     */
    @JsonProperty("currency-code")
    public String currencyCode;

    public BINLookupResponse withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * True if the customers IP is listed on one of our blocklists, see the &lt;a href="http://www.neutrinoapi.com/api/ip-blocklist/"&gt;IP Blocklist API&lt;/a&gt;
     */
    @JsonProperty("ip-blocklisted")
    public Boolean ipBlocklisted;

    public BINLookupResponse withIpBlocklisted(Boolean ipBlocklisted) {
        this.ipBlocklisted = ipBlocklisted;
        return this;
    }
    
    /**
     * An array of strings indicating which blocklists this IP is listed on
     */
    @JsonProperty("ip-blocklists")
    public String[] ipBlocklists;

    public BINLookupResponse withIpBlocklists(String[] ipBlocklists) {
        this.ipBlocklists = ipBlocklists;
        return this;
    }
    
    /**
     * The city of the customers IP (if detectable)
     */
    @JsonProperty("ip-city")
    public String ipCity;

    public BINLookupResponse withIpCity(String ipCity) {
        this.ipCity = ipCity;
        return this;
    }
    
    /**
     * The country of the customers IP
     */
    @JsonProperty("ip-country")
    public String ipCountry;

    public BINLookupResponse withIpCountry(String ipCountry) {
        this.ipCountry = ipCountry;
        return this;
    }
    
    /**
     * The ISO 2-letter country code of the customers IP
     */
    @JsonProperty("ip-country-code")
    public String ipCountryCode;

    public BINLookupResponse withIpCountryCode(String ipCountryCode) {
        this.ipCountryCode = ipCountryCode;
        return this;
    }
    
    /**
     * The ISO 3-letter country code of the customers IP
     */
    @JsonProperty("ip-country-code3")
    public String ipCountryCode3;

    public BINLookupResponse withIpCountryCode3(String ipCountryCode3) {
        this.ipCountryCode3 = ipCountryCode3;
        return this;
    }
    
    /**
     * True if the customers IP country matches the BIN country
     */
    @JsonProperty("ip-matches-bin")
    public Boolean ipMatchesBin;

    public BINLookupResponse withIpMatchesBin(Boolean ipMatchesBin) {
        this.ipMatchesBin = ipMatchesBin;
        return this;
    }
    
    /**
     * The region of the customers IP (if detectable)
     */
    @JsonProperty("ip-region")
    public String ipRegion;

    public BINLookupResponse withIpRegion(String ipRegion) {
        this.ipRegion = ipRegion;
        return this;
    }
    
    /**
     * Is this a commercial/business use card
     */
    @JsonProperty("is-commercial")
    public Boolean isCommercial;

    public BINLookupResponse withIsCommercial(Boolean isCommercial) {
        this.isCommercial = isCommercial;
        return this;
    }
    
    /**
     * Is this a prepaid or prepaid reloadable card
     */
    @JsonProperty("is-prepaid")
    public Boolean isPrepaid;

    public BINLookupResponse withIsPrepaid(Boolean isPrepaid) {
        this.isPrepaid = isPrepaid;
        return this;
    }
    
    /**
     * The card issuer
     */
    @JsonProperty("issuer")
    public String issuer;

    public BINLookupResponse withIssuer(String issuer) {
        this.issuer = issuer;
        return this;
    }
    
    /**
     * The card issuers phone number
     */
    @JsonProperty("issuer-phone")
    public String issuerPhone;

    public BINLookupResponse withIssuerPhone(String issuerPhone) {
        this.issuerPhone = issuerPhone;
        return this;
    }
    
    /**
     * The card issuers website
     */
    @JsonProperty("issuer-website")
    public String issuerWebsite;

    public BINLookupResponse withIssuerWebsite(String issuerWebsite) {
        this.issuerWebsite = issuerWebsite;
        return this;
    }
    
    /**
     * Is this a valid BIN or IIN number
     */
    @JsonProperty("valid")
    public Boolean valid;

    public BINLookupResponse withValid(Boolean valid) {
        this.valid = valid;
        return this;
    }
    
    public BINLookupResponse(@JsonProperty("bin-number") String binNumber, @JsonProperty("card-brand") String cardBrand, @JsonProperty("card-category") String cardCategory, @JsonProperty("card-type") String cardType, @JsonProperty("country") String country, @JsonProperty("country-code") String countryCode, @JsonProperty("country-code3") String countryCode3, @JsonProperty("currency-code") String currencyCode, @JsonProperty("ip-blocklisted") Boolean ipBlocklisted, @JsonProperty("ip-blocklists") String[] ipBlocklists, @JsonProperty("ip-city") String ipCity, @JsonProperty("ip-country") String ipCountry, @JsonProperty("ip-country-code") String ipCountryCode, @JsonProperty("ip-country-code3") String ipCountryCode3, @JsonProperty("ip-matches-bin") Boolean ipMatchesBin, @JsonProperty("ip-region") String ipRegion, @JsonProperty("is-commercial") Boolean isCommercial, @JsonProperty("is-prepaid") Boolean isPrepaid, @JsonProperty("issuer") String issuer, @JsonProperty("issuer-phone") String issuerPhone, @JsonProperty("issuer-website") String issuerWebsite, @JsonProperty("valid") Boolean valid) {
        this.binNumber = binNumber;
        this.cardBrand = cardBrand;
        this.cardCategory = cardCategory;
        this.cardType = cardType;
        this.country = country;
        this.countryCode = countryCode;
        this.countryCode3 = countryCode3;
        this.currencyCode = currencyCode;
        this.ipBlocklisted = ipBlocklisted;
        this.ipBlocklists = ipBlocklists;
        this.ipCity = ipCity;
        this.ipCountry = ipCountry;
        this.ipCountryCode = ipCountryCode;
        this.ipCountryCode3 = ipCountryCode3;
        this.ipMatchesBin = ipMatchesBin;
        this.ipRegion = ipRegion;
        this.isCommercial = isCommercial;
        this.isPrepaid = isPrepaid;
        this.issuer = issuer;
        this.issuerPhone = issuerPhone;
        this.issuerWebsite = issuerWebsite;
        this.valid = valid;
  }
}
