// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// GETDescribeUpdateActionsActionEnum
type GETDescribeUpdateActionsActionEnum string

const (
	GETDescribeUpdateActionsActionEnumDescribeUpdateActions GETDescribeUpdateActionsActionEnum = "DescribeUpdateActions"
)

func (e *GETDescribeUpdateActionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeUpdateActions":
		*e = GETDescribeUpdateActionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeUpdateActionsActionEnum: %s", s)
	}
}

// GETDescribeUpdateActionsServiceUpdateTimeRange - Filters update actions from the service updates that are in available status during the time range.
type GETDescribeUpdateActionsServiceUpdateTimeRange struct {
	EndTime   *time.Time `queryParam:"name=EndTime"`
	StartTime *time.Time `queryParam:"name=StartTime"`
}

// GETDescribeUpdateActionsVersionEnum
type GETDescribeUpdateActionsVersionEnum string

const (
	GETDescribeUpdateActionsVersionEnumTwoThousandAndFifteen0202 GETDescribeUpdateActionsVersionEnum = "2015-02-02"
)

func (e *GETDescribeUpdateActionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETDescribeUpdateActionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeUpdateActionsVersionEnum: %s", s)
	}
}

type GETDescribeUpdateActionsQueryParams struct {
	Action GETDescribeUpdateActionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The cache cluster IDs
	CacheClusterIds []string `queryParam:"style=form,explode=true,name=CacheClusterIds"`
	// The Elasticache engine to which the update applies. Either Redis or Memcached
	Engine *string `queryParam:"style=form,explode=true,name=Engine"`
	// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of records to include in the response
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// The replication group IDs
	ReplicationGroupIds []string `queryParam:"style=form,explode=true,name=ReplicationGroupIds"`
	// The unique ID of the service update
	ServiceUpdateName *string `queryParam:"style=form,explode=true,name=ServiceUpdateName"`
	// The status of the service update
	ServiceUpdateStatus []shared.ServiceUpdateStatusEnum `queryParam:"style=form,explode=true,name=ServiceUpdateStatus"`
	// The range of time specified to search for service updates that are in available status
	ServiceUpdateTimeRange *GETDescribeUpdateActionsServiceUpdateTimeRange `queryParam:"style=form,explode=true,name=ServiceUpdateTimeRange"`
	// Dictates whether to include node level update status in the response
	ShowNodeLevelUpdateStatus *bool `queryParam:"style=form,explode=true,name=ShowNodeLevelUpdateStatus"`
	// The status of the update action.
	UpdateActionStatus []shared.UpdateActionStatusEnum     `queryParam:"style=form,explode=true,name=UpdateActionStatus"`
	Version            GETDescribeUpdateActionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeUpdateActionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeUpdateActionsRequest struct {
	QueryParams GETDescribeUpdateActionsQueryParams
	Headers     GETDescribeUpdateActionsHeaders
}

type GETDescribeUpdateActionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
