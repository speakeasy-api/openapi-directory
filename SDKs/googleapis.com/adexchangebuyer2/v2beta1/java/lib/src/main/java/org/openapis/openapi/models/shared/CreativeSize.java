/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreativeSize - Specifies the size of the creative.
 */
public class CreativeSize {
    /**
     * What formats are allowed by the publisher. If this repeated field is empty then all formats are allowed. For example, if this field contains AllowedFormatType.AUDIO then the publisher only allows an audio ad (without any video).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedFormats")
    public CreativeSizeAllowedFormatsEnum[] allowedFormats;
    public CreativeSize withAllowedFormats(CreativeSizeAllowedFormatsEnum[] allowedFormats) {
        this.allowedFormats = allowedFormats;
        return this;
    }
    
    /**
     * For video creatives specifies the sizes of companion ads (if present). Companion sizes may be filled in only when creative_size_type = VIDEO
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companionSizes")
    public Size[] companionSizes;
    public CreativeSize withCompanionSizes(Size[] companionSizes) {
        this.companionSizes = companionSizes;
        return this;
    }
    
    /**
     * The creative size type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeSizeType")
    public CreativeSizeCreativeSizeTypeEnum creativeSizeType;
    public CreativeSize withCreativeSizeType(CreativeSizeCreativeSizeTypeEnum creativeSizeType) {
        this.creativeSizeType = creativeSizeType;
        return this;
    }
    
    /**
     * Output only. The native template for this creative. It will have a value only if creative_size_type = CreativeSizeType.NATIVE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nativeTemplate")
    public CreativeSizeNativeTemplateEnum nativeTemplate;
    public CreativeSize withNativeTemplate(CreativeSizeNativeTemplateEnum nativeTemplate) {
        this.nativeTemplate = nativeTemplate;
        return this;
    }
    
    /**
     * Message depicting the size of the creative. The units of width and height depend on the type of the targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Size size;
    public CreativeSize withSize(Size size) {
        this.size = size;
        return this;
    }
    
    /**
     * The type of skippable ad for this creative. It will have a value only if creative_size_type = CreativeSizeType.VIDEO.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skippableAdType")
    public CreativeSizeSkippableAdTypeEnum skippableAdType;
    public CreativeSize withSkippableAdType(CreativeSizeSkippableAdTypeEnum skippableAdType) {
        this.skippableAdType = skippableAdType;
        return this;
    }
    
}
