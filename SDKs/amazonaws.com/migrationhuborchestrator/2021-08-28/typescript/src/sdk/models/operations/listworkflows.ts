/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The status of the migration workflow.
 */
export enum ListWorkflowsStatusEnum {
  Creating = "CREATING",
  NotStarted = "NOT_STARTED",
  CreationFailed = "CREATION_FAILED",
  Starting = "STARTING",
  InProgress = "IN_PROGRESS",
  WorkflowFailed = "WORKFLOW_FAILED",
  Paused = "PAUSED",
  Pausing = "PAUSING",
  PausingFailed = "PAUSING_FAILED",
  UserAttentionRequired = "USER_ATTENTION_REQUIRED",
  Deleting = "DELETING",
  DeletionFailed = "DELETION_FAILED",
  Deleted = "DELETED",
  Completed = "COMPLETED",
}

export class ListWorkflowsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the application configured in Application Discovery Service.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=adsApplicationConfigurationName",
  })
  adsApplicationConfigurationName?: string;

  /**
   * The maximum number of results that can be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: number;

  /**
   * The name of the migration workflow.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * The pagination token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=nextToken",
  })
  nextToken?: string;

  /**
   * The status of the migration workflow.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: ListWorkflowsStatusEnum;

  /**
   * The ID of the template.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=templateId",
  })
  templateId?: string;
}

export class ListWorkflowsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listMigrationWorkflowsResponse?: shared.ListMigrationWorkflowsResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
