/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateStreamingSessionRequestBody {
    /**
     * The EC2 Instance type used for the streaming session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ec2InstanceType")
    public CreateStreamingSessionRequestBodyEc2InstanceTypeEnum ec2InstanceType;

    public CreateStreamingSessionRequestBody withEc2InstanceType(CreateStreamingSessionRequestBodyEc2InstanceTypeEnum ec2InstanceType) {
        this.ec2InstanceType = ec2InstanceType;
        return this;
    }
    
    /**
     * The ID of the launch profile used to control access from the streaming session.
     */
    @JsonProperty("launchProfileId")
    public String launchProfileId;

    public CreateStreamingSessionRequestBody withLaunchProfileId(String launchProfileId) {
        this.launchProfileId = launchProfileId;
        return this;
    }
    
    /**
     * The user ID of the user that owns the streaming session. The user that owns the session will be logging into the session and interacting with the virtual workstation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownedBy")
    public String ownedBy;

    public CreateStreamingSessionRequestBody withOwnedBy(String ownedBy) {
        this.ownedBy = ownedBy;
        return this;
    }
    
    /**
     * The ID of the streaming image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamingImageId")
    public String streamingImageId;

    public CreateStreamingSessionRequestBody withStreamingImageId(String streamingImageId) {
        this.streamingImageId = streamingImageId;
        return this;
    }
    
    /**
     * A collection of labels, in the form of key-value pairs, that apply to this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateStreamingSessionRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateStreamingSessionRequestBody(@JsonProperty("launchProfileId") String launchProfileId) {
        this.launchProfileId = launchProfileId;
  }
}
