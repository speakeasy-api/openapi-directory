/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TaskSchedulingError } from "./taskschedulingerror";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Gets or sets the current running state of the Job Release task on the compute node.
 */
export enum JobReleaseTaskExecutionInformationStateEnum {
  Running = "running",
  Completed = "completed",
}

/**
 * Contains information about the execution of a Job Release task on a compute node.
 */
export class JobReleaseTaskExecutionInformation extends SpeakeasyBase {
  /**
   * Gets or sets the time at which the Job Release task completed. This property is set only if the task is in the Completed state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  /**
   * Gets or sets the exit code of the Job Release task. This property is set only if the task is in the Completed state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exitCode" })
  exitCode?: number;

  /**
   * Information about an error when scheduling a task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedulingError" })
  @Type(() => TaskSchedulingError)
  schedulingError?: TaskSchedulingError;

  /**
   * Gets or sets the time at which the Job Release task started running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;

  /**
   * Gets or sets the current running state of the Job Release task on the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: JobReleaseTaskExecutionInformationStateEnum;

  /**
   * Gets or sets the root directory of the Job Release task on the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskRootDirectory" })
  taskRootDirectory?: string;

  /**
   * Gets or sets the URL to the root directory of the Job Release task on the compute node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskRootDirectoryUrl" })
  taskRootDirectoryUrl?: string;
}
