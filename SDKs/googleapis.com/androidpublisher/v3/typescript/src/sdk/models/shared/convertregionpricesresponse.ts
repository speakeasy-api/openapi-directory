/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ConvertedOtherRegionsPrice } from "./convertedotherregionsprice";
import { ConvertedRegionPrice } from "./convertedregionprice";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Response message for ConvertRegionPrices.
 */
export class ConvertRegionPricesResponse extends SpeakeasyBase {
  /**
   * Converted other regions prices.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "convertedOtherRegionsPrice" })
  @Type(() => ConvertedOtherRegionsPrice)
  convertedOtherRegionsPrice?: ConvertedOtherRegionsPrice;

  /**
   * Map from region code to converted region price.
   */
  @SpeakeasyMetadata({ elemType: ConvertedRegionPrice })
  @Expose({ name: "convertedRegionPrices" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ConvertedRegionPrice> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ConvertedRegionPrice);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  convertedRegionPrices?: Record<string, ConvertedRegionPrice>;
}
