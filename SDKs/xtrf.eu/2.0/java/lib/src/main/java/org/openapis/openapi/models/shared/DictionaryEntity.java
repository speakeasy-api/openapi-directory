/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DictionaryEntity - Success
 */
public class DictionaryEntity {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public DictionaryEntity withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("andClearEventsQueue")
    public EventsQueue andClearEventsQueue;

    public DictionaryEntity withAndClearEventsQueue(EventsQueue andClearEventsQueue) {
        this.andClearEventsQueue = andClearEventsQueue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auditDisplayName")
    public String auditDisplayName;

    public DictionaryEntity withAuditDisplayName(String auditDisplayName) {
        this.auditDisplayName = auditDisplayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auditPath")
    public String auditPath;

    public DictionaryEntity withAuditPath(String auditPath) {
        this.auditPath = auditPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classNameKey")
    public String classNameKey;

    public DictionaryEntity withClassNameKey(String classNameKey) {
        this.classNameKey = classNameKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classSimpleName")
    public String classSimpleName;

    public DictionaryEntity withClassSimpleName(String classSimpleName) {
        this.classSimpleName = classSimpleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compoundId")
    public String compoundId;

    public DictionaryEntity withCompoundId(String compoundId) {
        this.compoundId = compoundId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultEntity")
    public Boolean defaultEntity;

    public DictionaryEntity withDefaultEntity(Boolean defaultEntity) {
        this.defaultEntity = defaultEntity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public DictionaryEntity withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityMarkedAsNotSupposedToBePersisted")
    public Boolean entityMarkedAsNotSupposedToBePersisted;

    public DictionaryEntity withEntityMarkedAsNotSupposedToBePersisted(Boolean entityMarkedAsNotSupposedToBePersisted) {
        this.entityMarkedAsNotSupposedToBePersisted = entityMarkedAsNotSupposedToBePersisted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventsQueueReadyToBeDispatched")
    public Boolean eventsQueueReadyToBeDispatched;

    public DictionaryEntity withEventsQueueReadyToBeDispatched(Boolean eventsQueueReadyToBeDispatched) {
        this.eventsQueueReadyToBeDispatched = eventsQueueReadyToBeDispatched;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public DictionaryEntity withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identifier")
    public Identifier identifier;

    public DictionaryEntity withIdentifier(Identifier identifier) {
        this.identifier = identifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalDescription")
    public String internalDescription;

    public DictionaryEntity withInternalDescription(String internalDescription) {
        this.internalDescription = internalDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModificationDate")
    public OffsetDateTime lastModificationDate;

    public DictionaryEntity withLastModificationDate(OffsetDateTime lastModificationDate) {
        this.lastModificationDate = lastModificationDate;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public DictionaryEntity withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packedCompoundId")
    public String packedCompoundId;

    public DictionaryEntity withPackedCompoundId(String packedCompoundId) {
        this.packedCompoundId = packedCompoundId;
        return this;
    }
    
    @JsonProperty("preferedEntity")
    public Boolean preferedEntity;

    public DictionaryEntity withPreferedEntity(Boolean preferedEntity) {
        this.preferedEntity = preferedEntity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferred")
    public Boolean preferred;

    public DictionaryEntity withPreferred(Boolean preferred) {
        this.preferred = preferred;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Integer version;

    public DictionaryEntity withVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    public DictionaryEntity(@JsonProperty("name") String name, @JsonProperty("preferedEntity") Boolean preferedEntity) {
        this.name = name;
        this.preferedEntity = preferedEntity;
  }
}
