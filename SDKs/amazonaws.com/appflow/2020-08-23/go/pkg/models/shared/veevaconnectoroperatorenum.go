// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VeevaConnectorOperatorEnum string

const (
	VeevaConnectorOperatorEnumProjection           VeevaConnectorOperatorEnum = "PROJECTION"
	VeevaConnectorOperatorEnumLessThan             VeevaConnectorOperatorEnum = "LESS_THAN"
	VeevaConnectorOperatorEnumGreaterThan          VeevaConnectorOperatorEnum = "GREATER_THAN"
	VeevaConnectorOperatorEnumContains             VeevaConnectorOperatorEnum = "CONTAINS"
	VeevaConnectorOperatorEnumBetween              VeevaConnectorOperatorEnum = "BETWEEN"
	VeevaConnectorOperatorEnumLessThanOrEqualTo    VeevaConnectorOperatorEnum = "LESS_THAN_OR_EQUAL_TO"
	VeevaConnectorOperatorEnumGreaterThanOrEqualTo VeevaConnectorOperatorEnum = "GREATER_THAN_OR_EQUAL_TO"
	VeevaConnectorOperatorEnumEqualTo              VeevaConnectorOperatorEnum = "EQUAL_TO"
	VeevaConnectorOperatorEnumNotEqualTo           VeevaConnectorOperatorEnum = "NOT_EQUAL_TO"
	VeevaConnectorOperatorEnumAddition             VeevaConnectorOperatorEnum = "ADDITION"
	VeevaConnectorOperatorEnumMultiplication       VeevaConnectorOperatorEnum = "MULTIPLICATION"
	VeevaConnectorOperatorEnumDivision             VeevaConnectorOperatorEnum = "DIVISION"
	VeevaConnectorOperatorEnumSubtraction          VeevaConnectorOperatorEnum = "SUBTRACTION"
	VeevaConnectorOperatorEnumMaskAll              VeevaConnectorOperatorEnum = "MASK_ALL"
	VeevaConnectorOperatorEnumMaskFirstN           VeevaConnectorOperatorEnum = "MASK_FIRST_N"
	VeevaConnectorOperatorEnumMaskLastN            VeevaConnectorOperatorEnum = "MASK_LAST_N"
	VeevaConnectorOperatorEnumValidateNonNull      VeevaConnectorOperatorEnum = "VALIDATE_NON_NULL"
	VeevaConnectorOperatorEnumValidateNonZero      VeevaConnectorOperatorEnum = "VALIDATE_NON_ZERO"
	VeevaConnectorOperatorEnumValidateNonNegative  VeevaConnectorOperatorEnum = "VALIDATE_NON_NEGATIVE"
	VeevaConnectorOperatorEnumValidateNumeric      VeevaConnectorOperatorEnum = "VALIDATE_NUMERIC"
	VeevaConnectorOperatorEnumNoOp                 VeevaConnectorOperatorEnum = "NO_OP"
)

func (e *VeevaConnectorOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROJECTION":
		fallthrough
	case "LESS_THAN":
		fallthrough
	case "GREATER_THAN":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "BETWEEN":
		fallthrough
	case "LESS_THAN_OR_EQUAL_TO":
		fallthrough
	case "GREATER_THAN_OR_EQUAL_TO":
		fallthrough
	case "EQUAL_TO":
		fallthrough
	case "NOT_EQUAL_TO":
		fallthrough
	case "ADDITION":
		fallthrough
	case "MULTIPLICATION":
		fallthrough
	case "DIVISION":
		fallthrough
	case "SUBTRACTION":
		fallthrough
	case "MASK_ALL":
		fallthrough
	case "MASK_FIRST_N":
		fallthrough
	case "MASK_LAST_N":
		fallthrough
	case "VALIDATE_NON_NULL":
		fallthrough
	case "VALIDATE_NON_ZERO":
		fallthrough
	case "VALIDATE_NON_NEGATIVE":
		fallthrough
	case "VALIDATE_NUMERIC":
		fallthrough
	case "NO_OP":
		*e = VeevaConnectorOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VeevaConnectorOperatorEnum: %s", s)
	}
}
