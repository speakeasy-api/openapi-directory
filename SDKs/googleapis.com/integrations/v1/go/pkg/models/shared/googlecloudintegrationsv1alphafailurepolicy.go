// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum - Defines what happens to the task upon failure.
type GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum string

const (
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumRetryStrategyUnspecified      GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "RETRY_STRATEGY_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumIgnore                        GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "IGNORE"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumNone                          GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "NONE"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumFatal                         GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "FATAL"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumFixedInterval                 GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "FIXED_INTERVAL"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumLinearBackoff                 GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "LINEAR_BACKOFF"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumExponentialBackoff            GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "EXPONENTIAL_BACKOFF"
	GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnumRestartIntegrationWithBackoff GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum = "RESTART_INTEGRATION_WITH_BACKOFF"
)

func (e GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum) ToPointer() *GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RETRY_STRATEGY_UNSPECIFIED":
		fallthrough
	case "IGNORE":
		fallthrough
	case "NONE":
		fallthrough
	case "FATAL":
		fallthrough
	case "FIXED_INTERVAL":
		fallthrough
	case "LINEAR_BACKOFF":
		fallthrough
	case "EXPONENTIAL_BACKOFF":
		fallthrough
	case "RESTART_INTEGRATION_WITH_BACKOFF":
		*e = GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaFailurePolicy - Policy that defines the task retry logic and failure type. If no FailurePolicy is defined for a task, all its dependent tasks will not be executed (i.e, a `retry_strategy` of NONE will be applied).
type GoogleCloudIntegrationsV1alphaFailurePolicy struct {
	// Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the initial interval in seconds for backoff.
	IntervalTime *string `json:"intervalTime,omitempty"`
	// Required if retry_strategy is FIXED_INTERVAL or LINEAR/EXPONENTIAL_BACKOFF/RESTART_INTEGRATION_WITH_BACKOFF. Defines the number of times the task will be retried if failed.
	MaxRetries *int `json:"maxRetries,omitempty"`
	// Defines what happens to the task upon failure.
	RetryStrategy *GoogleCloudIntegrationsV1alphaFailurePolicyRetryStrategyEnum `json:"retryStrategy,omitempty"`
}
