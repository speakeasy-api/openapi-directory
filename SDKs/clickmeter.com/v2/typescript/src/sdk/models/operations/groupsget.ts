/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Status of the group
 */
export enum GroupsGetStatusEnum {
  Deleted = "deleted",
  Active = "active",
}

export class GroupsGetRequest extends SpeakeasyBase {
  /**
   * Exclude groups created before this date (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdAfter",
  })
  createdAfter?: string;

  /**
   * Exclude groups created after this date (YYYYMMDD)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=createdBefore",
  })
  createdBefore?: string;

  /**
   * Maximum elements to retrieve. Default to 20 if not specified.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Where to start when retrieving elements. Default is 0 if not specified.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Status of the group
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GroupsGetStatusEnum;

  /**
   * A comma separated list of tags you want to filter with.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tags" })
  tags?: string;

  /**
   * Filter fields by this pattern
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=textSearch",
  })
  textSearch?: string;

  /**
   * Write permission
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=write" })
  write?: boolean;
}

export class GroupsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64?: shared.ApiCoreResponsesEntitiesResponseApiCoreResponsesEntityUriSystemInt64;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
