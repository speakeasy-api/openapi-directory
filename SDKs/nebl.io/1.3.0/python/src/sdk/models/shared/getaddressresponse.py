"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetAddressResponse:
    r"""Object containing address info"""
    
    addr_str: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addrStr'), 'exclude': lambda f: f is None }})
    r"""Address in string form"""  
    balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""NEBL balance"""  
    balance_sat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balanceSat'), 'exclude': lambda f: f is None }})
    r"""NEBL balance in satoshis"""  
    total_received: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalReceived'), 'exclude': lambda f: f is None }})
    r"""Total NEBL received"""  
    total_received_sat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalReceivedSat'), 'exclude': lambda f: f is None }})
    r"""Total NEBL received in satoshis"""  
    total_sent: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalSent'), 'exclude': lambda f: f is None }})
    r"""Total NEBL sent"""  
    total_sent_sat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalSentSat'), 'exclude': lambda f: f is None }})
    r"""Total NEBL sent satoshis"""  
    transactions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions'), 'exclude': lambda f: f is None }})
    r"""Array of transaction ids for this address"""  
    tx_appearances: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('txAppearances'), 'exclude': lambda f: f is None }})
    r"""Number of transactions for this address"""  
    unconfirmed_balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unconfirmedBalance'), 'exclude': lambda f: f is None }})
    r"""Unconfirmed NEBL balance"""  
    unconfirmed_balance_sat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unconfirmedBalanceSat'), 'exclude': lambda f: f is None }})
    r"""Unconfirmed NEBL balance in satoshis"""  
    unconfirmed_tx_appearances: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unconfirmedTxAppearances'), 'exclude': lambda f: f is None }})
    r"""Number of unconfirmed transactions for this address"""  
    