// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartConfigurationRecorderXAmzTargetEnum
type StartConfigurationRecorderXAmzTargetEnum string

const (
	StartConfigurationRecorderXAmzTargetEnumStarlingDoveServiceStartConfigurationRecorder StartConfigurationRecorderXAmzTargetEnum = "StarlingDoveService.StartConfigurationRecorder"
)

func (e *StartConfigurationRecorderXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StarlingDoveService.StartConfigurationRecorder":
		*e = StartConfigurationRecorderXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartConfigurationRecorderXAmzTargetEnum: %s", s)
	}
}

type StartConfigurationRecorderHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StartConfigurationRecorderXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartConfigurationRecorderRequest struct {
	Headers StartConfigurationRecorderHeaders
	Request shared.StartConfigurationRecorderRequest `request:"mediaType=application/json"`
}

type StartConfigurationRecorderResponse struct {
	ContentType string
	// NoAvailableDeliveryChannelException
	NoAvailableDeliveryChannelException interface{}
	// NoSuchConfigurationRecorderException
	NoSuchConfigurationRecorderException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
