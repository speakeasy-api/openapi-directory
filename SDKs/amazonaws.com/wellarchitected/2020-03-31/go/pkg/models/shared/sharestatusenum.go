// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ShareStatusEnum - The status of a workload share.
type ShareStatusEnum string

const (
	ShareStatusEnumAccepted    ShareStatusEnum = "ACCEPTED"
	ShareStatusEnumRejected    ShareStatusEnum = "REJECTED"
	ShareStatusEnumPending     ShareStatusEnum = "PENDING"
	ShareStatusEnumRevoked     ShareStatusEnum = "REVOKED"
	ShareStatusEnumExpired     ShareStatusEnum = "EXPIRED"
	ShareStatusEnumAssociating ShareStatusEnum = "ASSOCIATING"
	ShareStatusEnumAssociated  ShareStatusEnum = "ASSOCIATED"
	ShareStatusEnumFailed      ShareStatusEnum = "FAILED"
)

func (e ShareStatusEnum) ToPointer() *ShareStatusEnum {
	return &e
}

func (e *ShareStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCEPTED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "PENDING":
		fallthrough
	case "REVOKED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "ASSOCIATING":
		fallthrough
	case "ASSOCIATED":
		fallthrough
	case "FAILED":
		*e = ShareStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ShareStatusEnum: %v", v)
	}
}
