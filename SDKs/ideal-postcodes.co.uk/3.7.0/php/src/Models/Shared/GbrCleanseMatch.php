<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GbrCleanseMatch
{
    /**
     * A confidence score represented as number between 1 and 0. 1 indicates a full match. 0 indicates no complete matching elements.
     * 
     * 
     * 
     * @var float $confidence
     */
	#[\JMS\Serializer\Annotation\SerializedName('confidence')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $confidence;
    
    /**
     * The number of addresses we matched to the input. We return the closest match by default.
     * 
     * 
     * 
     * @var float $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $count;
    
    /**
     * A score represented as number between 1 and 0. Fit compares the address elements present in your query against the matching address elements. It does not incorporate elements you have not presented in the score. A partial address (e.g. 12 Pye Green Road) will have a fit of 1 even though it is missing post town and postcode. Its confidence score will be less than 1 however because it is missing some crucial elements.
     * 
     * 
     * 
     * @var float $fit
     */
	#[\JMS\Serializer\Annotation\SerializedName('fit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $fit;
    
    /**
     * Match indicator for the locality
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchLocalityMatchEnum $localityMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('locality_match')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchLocalityMatchEnum>')]
    public GbrCleanseMatchLocalityMatchEnum $localityMatch;
    
    /**
     * Nearest matching address
     * 
     * @var mixed $match
     */
	#[\JMS\Serializer\Annotation\SerializedName('match')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $match;
    
    /**
     * Match indicator for the organisation
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchOrganisationMatchEnum $organisationMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('organisation_match')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchOrganisationMatchEnum>')]
    public GbrCleanseMatchOrganisationMatchEnum $organisationMatch;
    
    /**
     * Match indicator for the post_town
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPostTownMatchEnum $postTownMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('post_town_match')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPostTownMatchEnum>')]
    public GbrCleanseMatchPostTownMatchEnum $postTownMatch;
    
    /**
     * Match indicator for the postcode
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPostcodeMatchEnum $postcodeMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('postcode_match')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPostcodeMatchEnum>')]
    public GbrCleanseMatchPostcodeMatchEnum $postcodeMatch;
    
    /**
     * Match indicator for the premise
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPremiseMatchEnum $premiseMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('premise_match')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPremiseMatchEnum>')]
    public GbrCleanseMatchPremiseMatchEnum $premiseMatch;
    
    /**
     * Originally submitted query
     * 
     * @var string $query
     */
	#[\JMS\Serializer\Annotation\SerializedName('query')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $query;
    
    /**
     * Match indicator for the street
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchThoroughfareMatchEnum $thoroughfareMatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('thoroughfare_match')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchThoroughfareMatchEnum>')]
    public GbrCleanseMatchThoroughfareMatchEnum $thoroughfareMatch;
    
	public function __construct()
	{
		$this->confidence = 0;
		$this->count = 0;
		$this->fit = 0;
		$this->localityMatch = \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchLocalityMatchEnum::FULL;
		$this->match = null;
		$this->organisationMatch = \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchOrganisationMatchEnum::FULL;
		$this->postTownMatch = \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPostTownMatchEnum::FULL;
		$this->postcodeMatch = \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPostcodeMatchEnum::FULL;
		$this->premiseMatch = \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchPremiseMatchEnum::FULL;
		$this->query = "";
		$this->thoroughfareMatch = \OpenAPI\OpenAPI\Models\Shared\GbrCleanseMatchThoroughfareMatchEnum::FULL;
	}
}
