"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filedto as shared_filedto
from ..shared import inputfilesdto as shared_inputfilesdto
from ..shared import jobdto1 as shared_jobdto1
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskFilesDTO:
    r"""Success"""
    
    bundles: Optional[dict[str, list[shared_filedto.FileDTO]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bundles'), 'exclude': lambda f: f is None }})  
    input_files: Optional[shared_inputfilesdto.InputFilesDTO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputFiles'), 'exclude': lambda f: f is None }})  
    jobs: Optional[list[shared_jobdto1.JobDto1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobs'), 'exclude': lambda f: f is None }})  
    output_files: Optional[list[shared_filedto.FileDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputFiles'), 'exclude': lambda f: f is None }})  
    