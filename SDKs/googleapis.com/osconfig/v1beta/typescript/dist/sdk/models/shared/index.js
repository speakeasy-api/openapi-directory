"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(require("./altenum"), exports);
__exportStar(require("./aptrepository"), exports);
__exportStar(require("./aptsettings"), exports);
__exportStar(require("./assignment"), exports);
__exportStar(require("./assignmentgrouplabel"), exports);
__exportStar(require("./assignmentostype"), exports);
__exportStar(require("./effectiveguestpolicy"), exports);
__exportStar(require("./effectiveguestpolicysourcedpackage"), exports);
__exportStar(require("./effectiveguestpolicysourcedpackagerepository"), exports);
__exportStar(require("./effectiveguestpolicysourcedsoftwarerecipe"), exports);
__exportStar(require("./execstep"), exports);
__exportStar(require("./execstepconfig"), exports);
__exportStar(require("./executepatchjobrequest"), exports);
__exportStar(require("./fixedorpercent"), exports);
__exportStar(require("./gcsobject"), exports);
__exportStar(require("./goorepository"), exports);
__exportStar(require("./guestpolicy"), exports);
__exportStar(require("./listguestpoliciesresponse"), exports);
__exportStar(require("./listpatchdeploymentsresponse"), exports);
__exportStar(require("./listpatchjobinstancedetailsresponse"), exports);
__exportStar(require("./listpatchjobsresponse"), exports);
__exportStar(require("./lookupeffectiveguestpolicyrequest"), exports);
__exportStar(require("./monthlyschedule"), exports);
__exportStar(require("./onetimeschedule"), exports);
__exportStar(require("./package"), exports);
__exportStar(require("./packagerepository"), exports);
__exportStar(require("./patchconfig"), exports);
__exportStar(require("./patchdeployment"), exports);
__exportStar(require("./patchinstancefilter"), exports);
__exportStar(require("./patchinstancefiltergrouplabel"), exports);
__exportStar(require("./patchjob"), exports);
__exportStar(require("./patchjobinstancedetails"), exports);
__exportStar(require("./patchjobinstancedetailssummary"), exports);
__exportStar(require("./patchrollout"), exports);
__exportStar(require("./recurringschedule"), exports);
__exportStar(require("./softwarerecipe"), exports);
__exportStar(require("./softwarerecipeartifact"), exports);
__exportStar(require("./softwarerecipeartifactgcs"), exports);
__exportStar(require("./softwarerecipeartifactremote"), exports);
__exportStar(require("./softwarerecipestep"), exports);
__exportStar(require("./softwarerecipestepcopyfile"), exports);
__exportStar(require("./softwarerecipestepexecfile"), exports);
__exportStar(require("./softwarerecipestepextractarchive"), exports);
__exportStar(require("./softwarerecipestepinstalldpkg"), exports);
__exportStar(require("./softwarerecipestepinstallmsi"), exports);
__exportStar(require("./softwarerecipestepinstallrpm"), exports);
__exportStar(require("./softwarerecipesteprunscript"), exports);
__exportStar(require("./timeofday"), exports);
__exportStar(require("./timezone"), exports);
__exportStar(require("./weekdayofmonth"), exports);
__exportStar(require("./weeklyschedule"), exports);
__exportStar(require("./windowsupdatesettings"), exports);
__exportStar(require("./xgafvenum"), exports);
__exportStar(require("./yumrepository"), exports);
__exportStar(require("./yumsettings"), exports);
__exportStar(require("./zypperrepository"), exports);
__exportStar(require("./zyppersettings"), exports);
