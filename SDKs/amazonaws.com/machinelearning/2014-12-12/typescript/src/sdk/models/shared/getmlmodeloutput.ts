/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityStatusEnum } from "./entitystatusenum";
import { MLModelTypeEnum } from "./mlmodeltypeenum";
import { RealtimeEndpointInfo } from "./realtimeendpointinfo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents the output of a <code>GetMLModel</code> operation, and provides detailed information about a <code>MLModel</code>.
 */
export class GetMLModelOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ComputeTime" })
  computeTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedByIamUser" })
  createdByIamUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointInfo" })
  @Type(() => RealtimeEndpointInfo)
  endpointInfo?: RealtimeEndpointInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "FinishedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  finishedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataLocationS3" })
  inputDataLocationS3?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LogUri" })
  logUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MLModelId" })
  mlModelId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MLModelType" })
  mlModelType?: MLModelTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Recipe" })
  recipe?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Schema" })
  schema?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScoreThreshold" })
  scoreThreshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ScoreThresholdLastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scoreThresholdLastUpdatedAt?: Date;

  /**
   * Long integer type that is a 64-bit signed number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SizeInBytes" })
  sizeInBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: EntityStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingDataSourceId" })
  trainingDataSourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingParameters" })
  trainingParameters?: Record<string, string>;
}
