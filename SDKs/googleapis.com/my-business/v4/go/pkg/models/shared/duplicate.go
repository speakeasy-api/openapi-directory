// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DuplicateAccessEnum - Indicates whether the user has access to the location it duplicates.
type DuplicateAccessEnum string

const (
	DuplicateAccessEnumAccessUnspecified DuplicateAccessEnum = "ACCESS_UNSPECIFIED"
	DuplicateAccessEnumAccessUnknown     DuplicateAccessEnum = "ACCESS_UNKNOWN"
	DuplicateAccessEnumAllowed           DuplicateAccessEnum = "ALLOWED"
	DuplicateAccessEnumInsufficient      DuplicateAccessEnum = "INSUFFICIENT"
)

func (e *DuplicateAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCESS_UNSPECIFIED":
		fallthrough
	case "ACCESS_UNKNOWN":
		fallthrough
	case "ALLOWED":
		fallthrough
	case "INSUFFICIENT":
		*e = DuplicateAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DuplicateAccessEnum: %s", s)
	}
}

// Duplicate - Information about the location that this location duplicates.
type Duplicate struct {
	// Indicates whether the user has access to the location it duplicates.
	Access *DuplicateAccessEnum `json:"access,omitempty"`
	// The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted.
	LocationName *string `json:"locationName,omitempty"`
	// The place ID of the location that this duplicates.
	PlaceID *string `json:"placeId,omitempty"`
}
