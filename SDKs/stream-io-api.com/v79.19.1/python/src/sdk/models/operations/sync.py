"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import syncrequest as shared_syncrequest
from ..shared import syncresponse as shared_syncresponse
from typing import Optional


@dataclasses.dataclass
class SyncRequest:
    
    sync_request: shared_syncrequest.SyncRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'client_id', 'serialization': 'json' }})  
    connection_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'connection_id', 'serialization': 'json' }})  
    watch: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'watch', 'serialization': 'json' }})  
    with_inaccessible_cids: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with_inaccessible_cids', 'serialization': 'json' }})  
    

@dataclasses.dataclass
class SyncResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Bad request"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sync_response: Optional[shared_syncresponse.SyncResponse] = dataclasses.field(default=None)
    r"""Successful response"""  
    