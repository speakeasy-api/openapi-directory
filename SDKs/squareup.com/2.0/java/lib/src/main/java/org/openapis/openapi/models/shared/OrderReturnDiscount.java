/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrderReturnDiscount - Represents a discount being returned that applies to one or more return line items in an
 * order.
 * 
 * Fixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.
 * The amount distributed to each return line item is relative to that item\u2019s contribution to the
 * order subtotal.
 */
public class OrderReturnDiscount {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_money")
    public Money amountMoney;
    public OrderReturnDiscount withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applied_money")
    public Money appliedMoney;
    public OrderReturnDiscount withAppliedMoney(Money appliedMoney) {
        this.appliedMoney = appliedMoney;
        return this;
    }
    
    /**
     * The catalog object ID referencing [CatalogDiscount](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogDiscount).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_object_id")
    public String catalogObjectId;
    public OrderReturnDiscount withCatalogObjectId(String catalogObjectId) {
        this.catalogObjectId = catalogObjectId;
        return this;
    }
    
    /**
     * The version of the catalog object that this discount references.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_version")
    public Long catalogVersion;
    public OrderReturnDiscount withCatalogVersion(Long catalogVersion) {
        this.catalogVersion = catalogVersion;
        return this;
    }
    
    /**
     * The discount's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public OrderReturnDiscount withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The percentage of the tax, as a string representation of a decimal number.
     * A value of `"7.25"` corresponds to a percentage of 7.25%.
     * 
     * `percentage` is not set for amount-based discounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentage")
    public String percentage;
    public OrderReturnDiscount withPercentage(String percentage) {
        this.percentage = percentage;
        return this;
    }
    
    /**
     * Indicates the level at which the `OrderReturnDiscount` applies. For `ORDER` scoped
     * discounts, the server generates references in `applied_discounts` on all
     * `OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount is only applied to
     * `OrderReturnLineItem`s with references in their `applied_discounts` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;
    public OrderReturnDiscount withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * The discount `uid` from the order that contains the original application of this discount.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_discount_uid")
    public String sourceDiscountUid;
    public OrderReturnDiscount withSourceDiscountUid(String sourceDiscountUid) {
        this.sourceDiscountUid = sourceDiscountUid;
        return this;
    }
    
    /**
     * The type of the discount. If it is created by the API, it is `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.
     * 
     * Discounts that do not reference a catalog object ID must have a type of
     * `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public OrderReturnDiscount withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * A unique ID that identifies the returned discount only within this order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;
    public OrderReturnDiscount withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
}
