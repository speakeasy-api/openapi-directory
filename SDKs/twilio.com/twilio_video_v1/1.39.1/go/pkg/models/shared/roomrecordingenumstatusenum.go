// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RoomRecordingEnumStatusEnum - Read only the recordings with this status. Can be: `processing`, `completed`, or `deleted`.
type RoomRecordingEnumStatusEnum string

const (
	RoomRecordingEnumStatusEnumProcessing RoomRecordingEnumStatusEnum = "processing"
	RoomRecordingEnumStatusEnumCompleted  RoomRecordingEnumStatusEnum = "completed"
	RoomRecordingEnumStatusEnumDeleted    RoomRecordingEnumStatusEnum = "deleted"
	RoomRecordingEnumStatusEnumFailed     RoomRecordingEnumStatusEnum = "failed"
)

func (e *RoomRecordingEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "processing":
		fallthrough
	case "completed":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		*e = RoomRecordingEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RoomRecordingEnumStatusEnum: %s", s)
	}
}
