/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CodeScanningAlertDismissedReasonEnum } from "./codescanningalertdismissedreasonenum";
import { CodeScanningAlertInstance } from "./codescanningalertinstance";
import { CodeScanningAlertRuleSummary } from "./codescanningalertrulesummary";
import { CodeScanningAlertStateEnum } from "./codescanningalertstateenum";
import { CodeScanningAnalysisTool } from "./codescanninganalysistool";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

export class CodeScanningAlertItems extends SpeakeasyBase {
  /**
   * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dismissedAt: Date;

  /**
   * A GitHub user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_by" })
  @Type(() => NullableSimpleUser)
  dismissedBy: NullableSimpleUser;

  /**
   * **Required when the state is dismissed.** The reason for dismissing or closing the alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dismissed_reason" })
  dismissedReason: CodeScanningAlertDismissedReasonEnum;

  /**
   * The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fixed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fixedAt?: Date;

  /**
   * The GitHub URL of the alert resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  /**
   * The REST API URL for fetching the list of instances for an alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instances_url" })
  instancesUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "most_recent_instance" })
  @Type(() => CodeScanningAlertInstance)
  mostRecentInstance: CodeScanningAlertInstance;

  /**
   * The security alert number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rule" })
  @Type(() => CodeScanningAlertRuleSummary)
  rule: CodeScanningAlertRuleSummary;

  /**
   * State of a code scanning alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: CodeScanningAlertStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tool" })
  @Type(() => CodeScanningAnalysisTool)
  tool: CodeScanningAnalysisTool;

  /**
   * The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The REST API URL of the alert resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
