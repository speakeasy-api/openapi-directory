"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddataplexv1taskinfrastructurespec as shared_googleclouddataplexv1taskinfrastructurespec
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1TaskNotebookTaskConfig:
    r"""Config for running scheduled notebooks."""
    
    archive_uris: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('archiveUris'), 'exclude': lambda f: f is None }})
    r"""Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."""  
    file_uris: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileUris'), 'exclude': lambda f: f is None }})
    r"""Optional. Cloud Storage URIs of files to be placed in the working directory of each executor."""  
    infrastructure_spec: Optional[shared_googleclouddataplexv1taskinfrastructurespec.GoogleCloudDataplexV1TaskInfrastructureSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infrastructureSpec'), 'exclude': lambda f: f is None }})
    r"""Configuration for the underlying infrastructure used to run workloads."""  
    notebook: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notebook'), 'exclude': lambda f: f is None }})
    r"""Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value)."""  
    