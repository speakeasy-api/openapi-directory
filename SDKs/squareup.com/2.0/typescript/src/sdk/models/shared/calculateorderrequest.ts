/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Order } from "./order";
import { OrderReward } from "./orderreward";
import { Expose, Type } from "class-transformer";

/**
 * An object containing the fields to POST for the request.
 *
 * @remarks
 *
 * See the corresponding object definition for field details.
 */
export class CalculateOrderRequest extends SpeakeasyBase {
  /**
   * Contains all information related to a single order to process with Square,
   *
   * @remarks
   * including line items that specify the products to purchase. `Order` objects also
   * include information about any associated tenders, refunds, and returns.
   *
   * All Connect V2 Transactions have all been converted to Orders including all associated
   * itemization data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  @Type(() => Order)
  order: Order;

  /**
   * Identifies one or more loyalty reward tiers to apply during the order calculation.
   *
   * @remarks
   * The discounts defined by the reward tiers are added to the order only to preview the
   * effect of applying the specified rewards. The rewards do not correspond to actual
   * redemptions; that is, no `reward`s are created. Therefore, the reward `id`s are
   * random strings used only to reference the reward tier.
   */
  @SpeakeasyMetadata({ elemType: OrderReward })
  @Expose({ name: "proposed_rewards" })
  @Type(() => OrderReward)
  proposedRewards?: OrderReward[];
}
