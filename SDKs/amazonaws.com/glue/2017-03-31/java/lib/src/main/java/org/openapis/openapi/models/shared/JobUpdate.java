/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobUpdate - Specifies information used to update an existing job definition. The previous job definition is completely overwritten by this information.
 */
public class JobUpdate {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllocatedCapacity")
    public Long allocatedCapacity;
    public JobUpdate withAllocatedCapacity(Long allocatedCapacity) {
        this.allocatedCapacity = allocatedCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeGenConfigurationNodes")
    public java.util.Map<String, CodeGenConfigurationNode> codeGenConfigurationNodes;
    public JobUpdate withCodeGenConfigurationNodes(java.util.Map<String, CodeGenConfigurationNode> codeGenConfigurationNodes) {
        this.codeGenConfigurationNodes = codeGenConfigurationNodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Command")
    public JobCommand command;
    public JobUpdate withCommand(JobCommand command) {
        this.command = command;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Connections")
    public ConnectionsList connections;
    public JobUpdate withConnections(ConnectionsList connections) {
        this.connections = connections;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultArguments")
    public java.util.Map<String, String> defaultArguments;
    public JobUpdate withDefaultArguments(java.util.Map<String, String> defaultArguments) {
        this.defaultArguments = defaultArguments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public JobUpdate withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionClass")
    public ExecutionClassEnum executionClass;
    public JobUpdate withExecutionClass(ExecutionClassEnum executionClass) {
        this.executionClass = executionClass;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionProperty")
    public ExecutionProperty executionProperty;
    public JobUpdate withExecutionProperty(ExecutionProperty executionProperty) {
        this.executionProperty = executionProperty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlueVersion")
    public String glueVersion;
    public JobUpdate withGlueVersion(String glueVersion) {
        this.glueVersion = glueVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogUri")
    public String logUri;
    public JobUpdate withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCapacity")
    public Double maxCapacity;
    public JobUpdate withMaxCapacity(Double maxCapacity) {
        this.maxCapacity = maxCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxRetries")
    public Long maxRetries;
    public JobUpdate withMaxRetries(Long maxRetries) {
        this.maxRetries = maxRetries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NonOverridableArguments")
    public java.util.Map<String, String> nonOverridableArguments;
    public JobUpdate withNonOverridableArguments(java.util.Map<String, String> nonOverridableArguments) {
        this.nonOverridableArguments = nonOverridableArguments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationProperty")
    public NotificationProperty notificationProperty;
    public JobUpdate withNotificationProperty(NotificationProperty notificationProperty) {
        this.notificationProperty = notificationProperty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberOfWorkers")
    public Long numberOfWorkers;
    public JobUpdate withNumberOfWorkers(Long numberOfWorkers) {
        this.numberOfWorkers = numberOfWorkers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Role")
    public String role;
    public JobUpdate withRole(String role) {
        this.role = role;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityConfiguration")
    public String securityConfiguration;
    public JobUpdate withSecurityConfiguration(String securityConfiguration) {
        this.securityConfiguration = securityConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceControlDetails")
    public SourceControlDetails sourceControlDetails;
    public JobUpdate withSourceControlDetails(SourceControlDetails sourceControlDetails) {
        this.sourceControlDetails = sourceControlDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Timeout")
    public Long timeout;
    public JobUpdate withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkerType")
    public WorkerTypeEnum workerType;
    public JobUpdate withWorkerType(WorkerTypeEnum workerType) {
        this.workerType = workerType;
        return this;
    }
    
}
