/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class WarehouseByIdRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=warehouseId",
  })
  warehouseId: string;
}

export class WarehouseById200ApplicationJSONWarehouseDock1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cost" })
  cost: number;

  @SpeakeasyMetadata()
  @Expose({ name: "dockId" })
  dockId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time: string;
}

/**
 * OK
 */
export class WarehouseById200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Shows if the warehouse is active (`true`) or inactive (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pickupPointIds" })
  pickupPointIds?: any[];

  /**
   * If the warehouse was configured as a priority. When no priority was set, the value returns`0`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: number;

  @SpeakeasyMetadata({
    elemType: WarehouseById200ApplicationJSONWarehouseDock1,
  })
  @Expose({ name: "warehouseDocks" })
  @Type(() => WarehouseById200ApplicationJSONWarehouseDock1)
  warehouseDocks?: WarehouseById200ApplicationJSONWarehouseDock1[];
}

export class WarehouseByIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  warehouseById200ApplicationJSONObject?: WarehouseById200ApplicationJSON;
}
