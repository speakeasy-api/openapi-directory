<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ScanInput - Represents the input of a <code>Scan</code> operation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ScanInput
{
    /**
     * $attributesToGet
     * 
     * @var ?array<string> $attributesToGet
     */
	#[\JMS\Serializer\Annotation\SerializedName('AttributesToGet')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributesToGet = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ConditionalOperator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConditionalOperatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConditionalOperatorEnum $conditionalOperator = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ConsistentRead')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consistentRead = null;
    
    /**
     * $exclusiveStartKey
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\AttributeValue> $exclusiveStartKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExclusiveStartKey')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\AttributeValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exclusiveStartKey = null;
    
    /**
     * $expressionAttributeNames
     * 
     * @var ?array<string, string> $expressionAttributeNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExpressionAttributeNames')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $expressionAttributeNames = null;
    
    /**
     * $expressionAttributeValues
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\AttributeValue> $expressionAttributeValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExpressionAttributeValues')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\AttributeValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $expressionAttributeValues = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FilterExpression')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $filterExpression = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('IndexName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $indexName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $limit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ProjectionExpression')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $projectionExpression = null;
    
    /**
     * <p>Determines the level of detail about either provisioned or on-demand throughput consumption that is returned in the response:</p> <ul> <li> <p> <code>INDEXES</code> - The response includes the aggregate <code>ConsumedCapacity</code> for the operation, together with <code>ConsumedCapacity</code> for each table and secondary index that was accessed.</p> <p>Note that some operations, such as <code>GetItem</code> and <code>BatchGetItem</code>, do not access any indexes at all. In these cases, specifying <code>INDEXES</code> will only return <code>ConsumedCapacity</code> information for table(s).</p> </li> <li> <p> <code>TOTAL</code> - The response includes only the aggregate <code>ConsumedCapacity</code> for the operation.</p> </li> <li> <p> <code>NONE</code> - No <code>ConsumedCapacity</code> details are included in the response.</p> </li> </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReturnConsumedCapacityEnum $returnConsumedCapacity
     */
	#[\JMS\Serializer\Annotation\SerializedName('ReturnConsumedCapacity')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReturnConsumedCapacityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReturnConsumedCapacityEnum $returnConsumedCapacity = null;
    
    /**
     * $scanFilter
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\Condition> $scanFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('ScanFilter')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\Condition>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scanFilter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Segment')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $segment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Select')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SelectEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SelectEnum $select = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TableName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tableName;
    
	#[\JMS\Serializer\Annotation\SerializedName('TotalSegments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalSegments = null;
    
	public function __construct()
	{
		$this->attributesToGet = null;
		$this->conditionalOperator = null;
		$this->consistentRead = null;
		$this->exclusiveStartKey = null;
		$this->expressionAttributeNames = null;
		$this->expressionAttributeValues = null;
		$this->filterExpression = null;
		$this->indexName = null;
		$this->limit = null;
		$this->projectionExpression = null;
		$this->returnConsumedCapacity = null;
		$this->scanFilter = null;
		$this->segment = null;
		$this->select = null;
		$this->tableName = "";
		$this->totalSegments = null;
	}
}
