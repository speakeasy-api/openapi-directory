import { SpeakeasyBase } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export declare class UpdateAccountUpdateAccountRequestBodyAllowedIpRanges extends SpeakeasyBase {
    ipEnd?: string;
    ipStart?: string;
}
export declare class UpdateAccountUpdateAccountRequestBodyBrandingSettingsValues extends SpeakeasyBase {
    /**
     * Custom company name to include in copyright and title bar.
     */
    companyName?: string;
    /**
     * Address to use as sender of email messages generated by ExaVault
     */
    customEmail?: string;
    /**
     * Color scheme for web file manager. Valid options are **default**, **light** and **dark**
     */
    theme?: string;
}
export declare class UpdateAccountUpdateAccountRequestBodyAccountQuotaValues extends SpeakeasyBase {
    /**
     * Whether the system should email the account owner if the account storage exceeds the noticeThreshold value. Storage notice emails are sent no mo once per day.
     */
    noticeEnabled?: boolean;
    /**
     * Percent of account storage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).
     */
    noticeThreshold?: number;
    /**
     * Whether the system should email the account owner if the daily transaction usage exceeds the transactionsNoticeThreshold value. Transaction notice emails are sent no more than once per day.
     */
    transactionsNoticeEnabled?: boolean;
    /**
     * Percent of daily transaction usage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).
     */
    transactionsNoticeThreshold?: number;
}
/**
 * Update Account Settings
 */
export declare class UpdateAccountUpdateAccountRequestBody extends SpeakeasyBase {
    /**
     * Whether extra help popups can be enabled for users in the web file manager.
     */
    accountOnboarding?: boolean;
    /**
     * IP Address Ranges for restricting account access
     */
    allowedIpRanges?: UpdateAccountUpdateAccountRequestBodyAllowedIpRanges[];
    brandingSettings?: UpdateAccountUpdateAccountRequestBodyBrandingSettingsValues;
    /**
     * Whether to require complex passwords for all passwords.
     */
    complexPasswords?: boolean;
    /**
     * Signature to be automatically added to the bottom of emails generated by the account.
     */
    customSignature?: string;
    /**
     * Content of welcome email template.
     */
    emailContent?: string;
    /**
     * Subject line for welcome emails
     */
    emailSubject?: string;
    /**
     * Custom address used for web file manager. Not available for all account types.
     */
    externalDomain?: string;
    quota?: UpdateAccountUpdateAccountRequestBodyAccountQuotaValues;
    /**
     * Whether unencrypted FTP connections should be denied for the account.
     */
    secureOnly?: boolean;
    /**
     * Whether to display links for others to sign up on share views and invitation emails
     */
    showReferralLinks?: boolean;
}
export declare class UpdateAccountRequest extends SpeakeasyBase {
    /**
     * Update Account Settings
     */
    requestBody?: UpdateAccountUpdateAccountRequestBody;
    /**
     * Access token required to make the API call.
     */
    evAccessToken: string;
    /**
     * API Key required to make the API call.
     */
    evApiKey: string;
}
export declare class UpdateAccountResponse extends SpeakeasyBase {
    /**
     * Successful operation
     */
    accountResponse?: shared.AccountResponse;
    contentType: string;
    statusCode: number;
    rawResponse?: AxiosResponse;
}
