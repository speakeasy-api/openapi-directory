/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateStreamMessageServerList = [
  "https://sync.twilio.com",
] as const;

export class CreateStreamMessageSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateStreamMessageCreateStreamMessageRequest extends SpeakeasyBase {
  /**
   * A JSON string that represents an arbitrary, schema-less object that makes up the Stream Message body. Can be up to 4 KiB in length.
   */
  @SpeakeasyMetadata({ data: "form, name=Data" })
  data: any;
}

export class CreateStreamMessageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateStreamMessageCreateStreamMessageRequest;

  /**
   * The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) to create the new Stream Message in.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;

  /**
   * The SID of the Sync Stream to create the new Stream Message resource for.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=StreamSid",
  })
  streamSid: string;
}

export class CreateStreamMessageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  syncV1ServiceSyncStreamStreamMessage?: shared.SyncV1ServiceSyncStreamStreamMessage;
}
