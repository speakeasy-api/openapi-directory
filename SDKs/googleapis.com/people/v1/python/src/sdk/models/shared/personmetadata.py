"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import source as shared_source
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PersonMetadataObjectTypeEnum(str, Enum):
    r"""Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object."""
    OBJECT_TYPE_UNSPECIFIED = 'OBJECT_TYPE_UNSPECIFIED'
    PERSON = 'PERSON'
    PAGE = 'PAGE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PersonMetadata:
    r"""The metadata about a person."""
    
    deleted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleted'), 'exclude': lambda f: f is None }})
    r"""Output only. True if the person resource has been deleted. Populated only for `people.connections.list` and `otherContacts.list` sync requests."""  
    linked_people_resource_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedPeopleResourceNames'), 'exclude': lambda f: f is None }})
    r"""Output only. Resource names of people linked to this resource."""  
    object_type: Optional[PersonMetadataObjectTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectType'), 'exclude': lambda f: f is None }})
    r"""Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object."""  
    previous_resource_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previousResourceNames'), 'exclude': lambda f: f is None }})
    r"""Output only. Any former resource names this person has had. Populated only for `people.connections.list` requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL."""  
    sources: Optional[list[shared_source.Source]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sources'), 'exclude': lambda f: f is None }})
    r"""The sources of data for the person."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PersonMetadataInput:
    r"""The metadata about a person."""
    
    sources: Optional[list[shared_source.SourceInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sources'), 'exclude': lambda f: f is None }})
    r"""The sources of data for the person."""  
    