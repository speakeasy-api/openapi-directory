/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { HotKeyInfo } from "./hotkeyinfo";
import { Expose, Transform } from "class-transformer";

/**
 * Information useful for debugging a hot key detection.
 */
export class HotKeyDebuggingInfo extends SpeakeasyBase {
  /**
   * Debugging information for each detected hot key. Keyed by a hash of the key.
   */
  @SpeakeasyMetadata({ elemType: HotKeyInfo })
  @Expose({ name: "detectedHotKeys" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, HotKeyInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], HotKeyInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  detectedHotKeys?: Record<string, HotKeyInfo>;
}
