/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TestMatrix - TestMatrix captures all details about a test. It contains the environment configuration, test specification, test executions and overall state and outcome.
 */
public class TestMatrix {
    /**
     * Information about the client which invoked the test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientInfo")
    public ClientInfo clientInfo;

    public TestMatrix withClientInfo(ClientInfo clientInfo) {
        this.clientInfo = clientInfo;
        return this;
    }
    
    /**
     * The matrix of environments in which the test is to be executed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentMatrix")
    public EnvironmentMatrix environmentMatrix;

    public TestMatrix withEnvironmentMatrix(EnvironmentMatrix environmentMatrix) {
        this.environmentMatrix = environmentMatrix;
        return this;
    }
    
    /**
     * If true, only a single attempt at most will be made to run each execution/shard in the matrix. Flaky test attempts are not affected. Normally, 2 or more attempts are made if a potential infrastructure issue is detected. This feature is for latency sensitive workloads. The incidence of execution failures may be significantly greater for fail-fast matrices and support is more limited because of that expectation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failFast")
    public Boolean failFast;

    public TestMatrix withFailFast(Boolean failFast) {
        this.failFast = failFast;
        return this;
    }
    
    /**
     * The number of times a TestExecution should be re-attempted if one or more of its test cases fail for any reason. The maximum number of reruns allowed is 10. Default is 0, which implies no reruns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flakyTestAttempts")
    public Integer flakyTestAttempts;

    public TestMatrix withFlakyTestAttempts(Integer flakyTestAttempts) {
        this.flakyTestAttempts = flakyTestAttempts;
        return this;
    }
    
    /**
     * Output only. Describes why the matrix is considered invalid. Only useful for matrices in the INVALID state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidMatrixDetails")
    public TestMatrixInvalidMatrixDetailsEnum invalidMatrixDetails;

    public TestMatrix withInvalidMatrixDetails(TestMatrixInvalidMatrixDetailsEnum invalidMatrixDetails) {
        this.invalidMatrixDetails = invalidMatrixDetails;
        return this;
    }
    
    /**
     * Output Only. The overall outcome of the test. Only set when the test matrix state is FINISHED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outcomeSummary")
    public TestMatrixOutcomeSummaryEnum outcomeSummary;

    public TestMatrix withOutcomeSummary(TestMatrixOutcomeSummaryEnum outcomeSummary) {
        this.outcomeSummary = outcomeSummary;
        return this;
    }
    
    /**
     * The cloud project that owns the test matrix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;

    public TestMatrix withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    /**
     * Locations where the results of running the test are stored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultStorage")
    public ResultStorage resultStorage;

    public TestMatrix withResultStorage(ResultStorage resultStorage) {
        this.resultStorage = resultStorage;
        return this;
    }
    
    /**
     * Output only. Indicates the current progress of the test matrix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public TestMatrixStateEnum state;

    public TestMatrix withState(TestMatrixStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The list of test executions that the service creates for this matrix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testExecutions")
    public TestExecution[] testExecutions;

    public TestMatrix withTestExecutions(TestExecution[] testExecutions) {
        this.testExecutions = testExecutions;
        return this;
    }
    
    /**
     * Output only. Unique id set by the service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testMatrixId")
    public String testMatrixId;

    public TestMatrix withTestMatrixId(String testMatrixId) {
        this.testMatrixId = testMatrixId;
        return this;
    }
    
    /**
     * A description of how to run the test.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testSpecification")
    public TestSpecification testSpecification;

    public TestMatrix withTestSpecification(TestSpecification testSpecification) {
        this.testSpecification = testSpecification;
        return this;
    }
    
    /**
     * Output only. The time this test matrix was initially created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public TestMatrix withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    public TestMatrix(){}
}
