"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rangemode_enum as shared_rangemode_enum
from ..shared import typedattributevalue as shared_typedattributevalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TypedAttributeValueRange:
    r"""A range of attribute values. For more information, see <a href=\\"http://docs.aws.amazon.com/directoryservice/latest/admin-guide/objectsandlinks.html#rangefilters\\">Range Filters</a>."""
    
    end_mode: shared_rangemode_enum.RangeModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndMode') }})  
    start_mode: shared_rangemode_enum.RangeModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartMode') }})  
    end_value: Optional[shared_typedattributevalue.TypedAttributeValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndValue'), 'exclude': lambda f: f is None }})  
    start_value: Optional[shared_typedattributevalue.TypedAttributeValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartValue'), 'exclude': lambda f: f is None }})  
    