// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoDiscoveryAdThumbnailEnum - Thumbnail image used in the ad.
type VideoDiscoveryAdThumbnailEnum string

const (
	VideoDiscoveryAdThumbnailEnumThumbnailUnspecified VideoDiscoveryAdThumbnailEnum = "THUMBNAIL_UNSPECIFIED"
	VideoDiscoveryAdThumbnailEnumThumbnailDefault     VideoDiscoveryAdThumbnailEnum = "THUMBNAIL_DEFAULT"
	VideoDiscoveryAdThumbnailEnumThumbnail1           VideoDiscoveryAdThumbnailEnum = "THUMBNAIL_1"
	VideoDiscoveryAdThumbnailEnumThumbnail2           VideoDiscoveryAdThumbnailEnum = "THUMBNAIL_2"
	VideoDiscoveryAdThumbnailEnumThumbnail3           VideoDiscoveryAdThumbnailEnum = "THUMBNAIL_3"
)

func (e VideoDiscoveryAdThumbnailEnum) ToPointer() *VideoDiscoveryAdThumbnailEnum {
	return &e
}

func (e *VideoDiscoveryAdThumbnailEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THUMBNAIL_UNSPECIFIED":
		fallthrough
	case "THUMBNAIL_DEFAULT":
		fallthrough
	case "THUMBNAIL_1":
		fallthrough
	case "THUMBNAIL_2":
		fallthrough
	case "THUMBNAIL_3":
		*e = VideoDiscoveryAdThumbnailEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoDiscoveryAdThumbnailEnum: %v", v)
	}
}

// VideoDiscoveryAd - Details for a video discovery ad.
type VideoDiscoveryAd struct {
	// First text line for the ad.
	Description1 *string `json:"description1,omitempty"`
	// Second text line for the ad.
	Description2 *string `json:"description2,omitempty"`
	// The headline of ad.
	Headline *string `json:"headline,omitempty"`
	// Thumbnail image used in the ad.
	Thumbnail *VideoDiscoveryAdThumbnailEnum `json:"thumbnail,omitempty"`
	// Details of a YouTube video.
	Video *YoutubeVideoDetails `json:"video,omitempty"`
}
