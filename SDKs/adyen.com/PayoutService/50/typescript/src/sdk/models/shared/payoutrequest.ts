/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { Amount } from "./amount";
import { Card } from "./card";
import { FundSource } from "./fundsource";
import { Name } from "./name";
import { Recurring } from "./recurring";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
 *
 * @remarks
 * For the web service API, Adyen assumes Ecommerce shopper interaction by default.
 *
 * This field has the following possible values:
 * * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
 * * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
 * * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
 * * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
 */
export enum PayoutRequestShopperInteractionEnum {
  Ecommerce = "Ecommerce",
  ContAuth = "ContAuth",
  Moto = "Moto",
  Pos = "POS",
}

export class PayoutRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount: Amount;

  @SpeakeasyMetadata()
  @Expose({ name: "billingAddress" })
  @Type(() => Address)
  billingAddress?: Address;

  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => Card)
  card?: Card;

  /**
   * An integer value that is added to the normal fraud score. The value can be either positive or negative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fraudOffset" })
  fraudOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fundSource" })
  @Type(() => FundSource)
  fundSource?: FundSource;

  /**
   * The merchant account identifier, with which you want to process the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantAccount" })
  merchantAccount: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recurring" })
  @Type(() => Recurring)
  recurring?: Recurring;

  /**
   * The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
   *
   * @remarks
   * If you need to provide multiple references for a transaction, separate them with hyphens ("-").
   * Maximum length: 80 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * The `recurringDetailReference` you want to use for this payment. The value `LATEST` can be used to select the most recently stored recurring detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectedRecurringDetailReference" })
  selectedRecurringDetailReference?: string;

  /**
   * The shopper's email address. We recommend that you provide this data, as it is used in velocity fraud checks.
   *
   * @remarks
   * > For 3D Secure 2 transactions, schemes require `shopperEmail` for all browser-based and mobile implementations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperEmail" })
  shopperEmail?: string;

  /**
   * Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
   *
   * @remarks
   * For the web service API, Adyen assumes Ecommerce shopper interaction by default.
   *
   * This field has the following possible values:
   * * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
   * * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
   * * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
   * * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperInteraction" })
  shopperInteraction?: PayoutRequestShopperInteractionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "shopperName" })
  @Type(() => Name)
  shopperName?: Name;

  /**
   * Required for recurring payments.
   *
   * @remarks
   * Your reference to uniquely identify this shopper, for example user ID or account ID. Minimum length: 3 characters.
   * > Your reference must not include personally identifiable information (PII), for example name or email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperReference" })
  shopperReference?: string;

  /**
   * The shopper's telephone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "telephoneNumber" })
  telephoneNumber?: string;
}
