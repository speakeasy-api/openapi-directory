"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MetricHeaderTypeEnum(str, Enum):
    r"""The metric's data type."""
    METRIC_TYPE_UNSPECIFIED = 'METRIC_TYPE_UNSPECIFIED'
    TYPE_INTEGER = 'TYPE_INTEGER'
    TYPE_FLOAT = 'TYPE_FLOAT'
    TYPE_SECONDS = 'TYPE_SECONDS'
    TYPE_MILLISECONDS = 'TYPE_MILLISECONDS'
    TYPE_MINUTES = 'TYPE_MINUTES'
    TYPE_HOURS = 'TYPE_HOURS'
    TYPE_STANDARD = 'TYPE_STANDARD'
    TYPE_CURRENCY = 'TYPE_CURRENCY'
    TYPE_FEET = 'TYPE_FEET'
    TYPE_MILES = 'TYPE_MILES'
    TYPE_METERS = 'TYPE_METERS'
    TYPE_KILOMETERS = 'TYPE_KILOMETERS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetricHeader:
    r"""Describes a metric column in the report. Visible metrics requested in a report produce column entries within rows and MetricHeaders. However, metrics used exclusively within filters or expressions do not produce columns in a report; correspondingly, those metrics do not produce headers."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The metric's name."""  
    type: Optional[MetricHeaderTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The metric's data type."""  
    