/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BfdPacket } from "./bfdpacket";
import { BfdStatusPacketCounts } from "./bfdstatuspacketcounts";
import { PacketIntervals } from "./packetintervals";
import { Expose, Type } from "class-transformer";

/**
 * The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer.
 */
export enum BfdStatusBfdSessionInitializationModeEnum {
  Active = "ACTIVE",
  Disabled = "DISABLED",
  Passive = "PASSIVE",
}

/**
 * The diagnostic code specifies the local system's reason for the last change in session state. This allows remote systems to determine the reason that the previous session failed, for example. These diagnostic codes are specified in section 4.1 of RFC5880
 */
export enum BfdStatusLocalDiagnosticEnum {
  AdministrativelyDown = "ADMINISTRATIVELY_DOWN",
  ConcatenatedPathDown = "CONCATENATED_PATH_DOWN",
  ControlDetectionTimeExpired = "CONTROL_DETECTION_TIME_EXPIRED",
  DiagnosticUnspecified = "DIAGNOSTIC_UNSPECIFIED",
  EchoFunctionFailed = "ECHO_FUNCTION_FAILED",
  ForwardingPlaneReset = "FORWARDING_PLANE_RESET",
  NeighborSignaledSessionDown = "NEIGHBOR_SIGNALED_SESSION_DOWN",
  NoDiagnostic = "NO_DIAGNOSTIC",
  PathDown = "PATH_DOWN",
  ReverseConcatenatedPathDown = "REVERSE_CONCATENATED_PATH_DOWN",
}

/**
 * The current BFD session state as seen by the transmitting system. These states are specified in section 4.1 of RFC5880
 */
export enum BfdStatusLocalStateEnum {
  AdminDown = "ADMIN_DOWN",
  Down = "DOWN",
  Init = "INIT",
  StateUnspecified = "STATE_UNSPECIFIED",
  Up = "UP",
}

/**
 * Next free: 15
 */
export class BfdStatus extends SpeakeasyBase {
  /**
   * The BFD session initialization mode for this BGP peer. If set to ACTIVE, the Cloud Router will initiate the BFD session for this BGP peer. If set to PASSIVE, the Cloud Router will wait for the peer router to initiate the BFD session for this BGP peer. If set to DISABLED, BFD is disabled for this BGP peer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bfdSessionInitializationMode" })
  bfdSessionInitializationMode?: BfdStatusBfdSessionInitializationModeEnum;

  /**
   * Unix timestamp of the most recent config update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configUpdateTimestampMicros" })
  configUpdateTimestampMicros?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "controlPacketCounts" })
  @Type(() => BfdStatusPacketCounts)
  controlPacketCounts?: BfdStatusPacketCounts;

  /**
   * Inter-packet time interval statistics for control packets.
   */
  @SpeakeasyMetadata({ elemType: PacketIntervals })
  @Expose({ name: "controlPacketIntervals" })
  @Type(() => PacketIntervals)
  controlPacketIntervals?: PacketIntervals[];

  @SpeakeasyMetadata()
  @Expose({ name: "echoPacketCounts" })
  @Type(() => BfdStatusPacketCounts)
  echoPacketCounts?: BfdStatusPacketCounts;

  /**
   * Inter-packet time interval statistics for echo packets.
   */
  @SpeakeasyMetadata({ elemType: PacketIntervals })
  @Expose({ name: "echoPacketIntervals" })
  @Type(() => PacketIntervals)
  echoPacketIntervals?: PacketIntervals[];

  /**
   * The diagnostic code specifies the local system's reason for the last change in session state. This allows remote systems to determine the reason that the previous session failed, for example. These diagnostic codes are specified in section 4.1 of RFC5880
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localDiagnostic" })
  localDiagnostic?: BfdStatusLocalDiagnosticEnum;

  /**
   * The current BFD session state as seen by the transmitting system. These states are specified in section 4.1 of RFC5880
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localState" })
  localState?: BfdStatusLocalStateEnum;

  /**
   * Negotiated transmit interval for control packets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "negotiatedLocalControlTxIntervalMs" })
  negotiatedLocalControlTxIntervalMs?: number;

  /**
   * Negotiated transmit interval for echo packets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "negotiatedLocalEchoTxIntervalMs" })
  negotiatedLocalEchoTxIntervalMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "rxPacket" })
  @Type(() => BfdPacket)
  rxPacket?: BfdPacket;

  @SpeakeasyMetadata()
  @Expose({ name: "txPacket" })
  @Type(() => BfdPacket)
  txPacket?: BfdPacket;

  /**
   * Session uptime in milliseconds. Value will be 0 if session is not up.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uptimeMs" })
  uptimeMs?: string;

  /**
   * Indicates if echo mode is currently being used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usingEchoMode" })
  usingEchoMode?: boolean;
}
