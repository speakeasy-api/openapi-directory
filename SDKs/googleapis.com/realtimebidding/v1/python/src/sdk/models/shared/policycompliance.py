"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import policytopicentry as shared_policytopicentry
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PolicyComplianceStatusEnum(str, Enum):
    r"""Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method."""
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    PENDING_REVIEW = 'PENDING_REVIEW'
    DISAPPROVED = 'DISAPPROVED'
    APPROVED = 'APPROVED'
    CERTIFICATE_REQUIRED = 'CERTIFICATE_REQUIRED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PolicyCompliance:
    r"""Policy compliance of the creative for a transaction type or a region."""
    
    status: Optional[PolicyComplianceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method."""  
    topics: Optional[list[shared_policytopicentry.PolicyTopicEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('topics'), 'exclude': lambda f: f is None }})
    r"""Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED."""  
    