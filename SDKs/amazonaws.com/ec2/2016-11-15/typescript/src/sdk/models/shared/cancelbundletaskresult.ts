/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { S3Storage } from "./s3storage";

/**
 * If the task fails, a description of the error.
 */
export class CancelBundleTaskResultBundleTaskBundleTaskError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: string;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * The state of the task.
 */
export enum CancelBundleTaskResultBundleTaskStateEnum {
  Pending = "pending",
  WaitingForShutdown = "waiting-for-shutdown",
  Bundling = "bundling",
  Storing = "storing",
  Cancelling = "cancelling",
  Complete = "complete",
  Failed = "failed",
}

/**
 * The Amazon S3 storage locations.
 */
export class CancelBundleTaskResultBundleTaskStorage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  s3?: S3Storage;
}

/**
 * Information about the bundle task.
 */
export class CancelBundleTaskResultBundleTask extends SpeakeasyBase {
  @SpeakeasyMetadata()
  bundleId?: string;

  @SpeakeasyMetadata()
  bundleTaskError?: CancelBundleTaskResultBundleTaskBundleTaskError;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  progress?: string;

  @SpeakeasyMetadata()
  startTime?: Date;

  @SpeakeasyMetadata()
  state?: CancelBundleTaskResultBundleTaskStateEnum;

  @SpeakeasyMetadata()
  storage?: CancelBundleTaskResultBundleTaskStorage;

  @SpeakeasyMetadata()
  updateTime?: Date;
}

/**
 * Contains the output of CancelBundleTask.
 */
export class CancelBundleTaskResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  bundleTask?: CancelBundleTaskResultBundleTask;
}
