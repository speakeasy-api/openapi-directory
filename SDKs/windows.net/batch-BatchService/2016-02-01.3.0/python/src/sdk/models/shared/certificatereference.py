"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CertificateReferenceStoreLocationEnum(str, Enum):
    r"""The location of the certificate store on the compute node into which to install the certificate. The default value is CurrentUser."""
    CURRENTUSER = 'currentuser'
    LOCALMACHINE = 'localmachine'
    UNMAPPED = 'unmapped'

class CertificateReferenceVisibilityEnum(str, Enum):
    STARTTASK = 'starttask'
    TASK = 'task'
    REMOTEUSER = 'remoteuser'
    UNMAPPED = 'unmapped'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CertificateReference:
    r"""A reference to a certificate to be installed on compute nodes in a pool."""
    
    thumbprint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbprint') }})
    r"""The thumbprint of the certificate."""  
    thumbprint_algorithm: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbprintAlgorithm') }})
    r"""The algorithm with which the thumbprint is associated. This must be sha1."""  
    store_location: Optional[CertificateReferenceStoreLocationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeLocation'), 'exclude': lambda f: f is None }})
    r"""The location of the certificate store on the compute node into which to install the certificate. The default value is CurrentUser."""  
    store_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeName'), 'exclude': lambda f: f is None }})
    r"""The name of the certificate store on the compute node into which to install the certificate. The default value is My."""  
    visibility: Optional[list[CertificateReferenceVisibilityEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility'), 'exclude': lambda f: f is None }})
    r"""Which user accounts on the compute node should have access to the private data of the certificate. This may be any subset of the values 'starttask', 'task' and 'remoteuser', separated by commas. The default is all accounts, corresponding to the string 'starttask,task,remoteuser'."""  
    