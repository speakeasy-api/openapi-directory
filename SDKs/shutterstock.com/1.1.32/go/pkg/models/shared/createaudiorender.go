// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateAudioRenderPresetEnum - File format, such as MP3 file, combined WAV file, or individual track WAV files
type CreateAudioRenderPresetEnum string

const (
	CreateAudioRenderPresetEnumMasterMp3 CreateAudioRenderPresetEnum = "MASTER_MP3"
	CreateAudioRenderPresetEnumMasterWav CreateAudioRenderPresetEnum = "MASTER_WAV"
	CreateAudioRenderPresetEnumStemsWav  CreateAudioRenderPresetEnum = "STEMS_WAV"
)

func (e *CreateAudioRenderPresetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MASTER_MP3":
		fallthrough
	case "MASTER_WAV":
		fallthrough
	case "STEMS_WAV":
		*e = CreateAudioRenderPresetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAudioRenderPresetEnum: %s", s)
	}
}

// CreateAudioRender - Data required to create an audio render
type CreateAudioRender struct {
	// A user-specified file name suggestion; this file name becomes the filename property of the Content-Disposition header when the user downloads the rendered audio file
	Filename string `json:"filename"`
	// File format, such as MP3 file, combined WAV file, or individual track WAV files
	Preset CreateAudioRenderPresetEnum `json:"preset"`
	// A timeline object that represents either a request for music to be created or an entire music composition
	Timeline AudioRenderTimeline `json:"timeline"`
}
