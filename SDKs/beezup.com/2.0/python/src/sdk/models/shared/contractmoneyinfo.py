"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContractMoneyInfo:
    r"""Describe the pricing information related to the offer."""
    
    amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount'), 'exclude': lambda f: f is None }})
    r"""The amount excluding taxes and excluding code promo discount including billing period discount."""  
    amount_excluding_taxes_and_excluding_discounts: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountExcludingTaxesAndExcludingDiscounts'), 'exclude': lambda f: f is None }})
    r"""The amount excluding taxes and excluding discounts."""  
    amount_excluding_taxes_including_discounts: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountExcludingTaxesIncludingDiscounts'), 'exclude': lambda f: f is None }})
    r"""The amount excluding taxes including discounts."""  
    amount_excluding_taxes_including_discounts_per_month: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountExcludingTaxesIncludingDiscountsPerMonth'), 'exclude': lambda f: f is None }})
    r"""The amount excluding taxes including discounts per month."""  
    amount_including_taxes_excluding_discount_including_billing_period_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount'), 'exclude': lambda f: f is None }})
    r"""The amount including taxes excluding discount including billing period discount."""  
    amount_including_taxes_including_discounts: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountIncludingTaxesIncludingDiscounts'), 'exclude': lambda f: f is None }})
    r"""The amount including taxes including discounts."""  
    amount_taxes_excluding_discount_including_billing_period_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountTaxesExcludingDiscountIncludingBillingPeriodDiscount'), 'exclude': lambda f: f is None }})
    r"""The taxes excluding discount including billing period discount."""  
    amount_taxes_including_discounts: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amountTaxesIncludingDiscounts'), 'exclude': lambda f: f is None }})
    r"""Taxes including discounts."""  
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""The currency code <a href=\\"https://en.wikipedia.org/wiki/ISO_4217\\">(ISO 4217)</a>"""  
    initial_offer_fixed_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialOfferFixedPrice'), 'exclude': lambda f: f is None }})
    r"""The initial offer fixed price."""  
    vat_percent: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vatPercent'), 'exclude': lambda f: f is None }})
    r"""The VAT percent."""  
    