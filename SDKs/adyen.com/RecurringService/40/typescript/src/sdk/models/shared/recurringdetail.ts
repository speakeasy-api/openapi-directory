/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { BankAccount } from "./bankaccount";
import { Card } from "./card";
import { Name } from "./name";
import { TokenDetails } from "./tokendetails";
import { Expose, Transform, Type } from "class-transformer";

export class RecurringDetail extends SpeakeasyBase {
  /**
   * This field contains additional data, which may be returned in a particular response.
   *
   * @remarks
   *
   * The additionalData object consists of entries, each of which includes the key and value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalData" })
  additionalData?: Record<string, string>;

  /**
   * The alias of the credit card number.
   *
   * @remarks
   *
   * Applies only to recurring contracts storing credit card details
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  /**
   * The alias type of the credit card number.
   *
   * @remarks
   *
   * Applies only to recurring contracts storing credit card details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aliasType" })
  aliasType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bank" })
  @Type(() => BankAccount)
  bank?: BankAccount;

  @SpeakeasyMetadata()
  @Expose({ name: "billingAddress" })
  @Type(() => Address)
  billingAddress?: Address;

  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => Card)
  card?: Card;

  /**
   * Types of recurring contracts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contractTypes" })
  contractTypes?: string[];

  /**
   * The date when the recurring details were created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * The `pspReference` of the first recurring payment that created the recurring detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstPspReference" })
  firstPspReference?: string;

  /**
   * An optional descriptive name for this recurring detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The  type or sub-brand of a payment method used, e.g. Visa Debit, Visa Corporate, etc. For more information, refer to [PaymentMethodVariant](https://docs.adyen.com/development-resources/paymentmethodvariant).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethodVariant" })
  paymentMethodVariant?: string;

  /**
   * The reference that uniquely identifies the recurring detail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recurringDetailReference" })
  recurringDetailReference: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shopperName" })
  @Type(() => Name)
  shopperName?: Name;

  /**
   * A shopper's social security number (only in countries where it is legal to collect).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "socialSecurityNumber" })
  socialSecurityNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tokenDetails" })
  @Type(() => TokenDetails)
  tokenDetails?: TokenDetails;

  /**
   * The payment method, such as â€œmc", "visa", "ideal", "paypal".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variant" })
  variant: string;
}
