"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Card:
    
    expiry_year: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryYear') }})
    r"""The card expiry year.
    Format: 4 digits. For example: 2020
    """  
    holder_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('holderName') }})
    r"""The name of the cardholder, as printed on the card."""  
    cvc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cvc'), 'exclude': lambda f: f is None }})
    r"""The [card verification code](https://docs.adyen.com/payments-fundamentals/payment-glossary#card-security-code-cvc-cvv-cid) (1-20 characters). Depending on the card brand, it is known also as:
    * CVV2/CVC2 – length: 3 digits
    * CID – length: 4 digits
    > If you are using [Client-Side Encryption](https://docs.adyen.com/classic-integration/cse-integration-ecommerce), the CVC code is present in the encrypted data. You must never post the card details to the server.
    > This field must be always present in a [one-click payment request](https://docs.adyen.com/classic-integration/recurring-payments).
    > When this value is returned in a response, it is always empty because it is not stored.
    """  
    expiry_month: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryMonth'), 'exclude': lambda f: f is None }})
    r"""The card expiry month.
    Format: 2 digits, zero-padded for single digits. For example:
    * 03 = March
    * 11 = November
    """  
    issue_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issueNumber'), 'exclude': lambda f: f is None }})
    r"""The issue number of the card (for some UK debit cards only)."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""The card number (4-19 characters). Do not use any separators.
    When this value is returned in a response, only the last 4 digits of the card number are returned.
    """  
    start_month: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startMonth'), 'exclude': lambda f: f is None }})
    r"""The month component of the start date (for some UK debit cards only)."""  
    start_year: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startYear'), 'exclude': lambda f: f is None }})
    r"""The year component of the start date (for some UK debit cards only)."""  
    