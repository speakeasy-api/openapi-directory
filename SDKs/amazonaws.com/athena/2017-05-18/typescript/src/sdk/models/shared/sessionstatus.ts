/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SessionStateEnum } from "./sessionstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about the status of a session.
 */
export class SessionStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "IdleSinceDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  idleSinceDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: SessionStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StateChangeReason" })
  stateChangeReason?: string;
}
