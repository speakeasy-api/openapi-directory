<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PricePerBuyer - Used to specify pricing rules for buyers/advertisers. Each PricePerBuyer in a product can become 0 or 1 deals. To check if there is a PricePerBuyer for a particular buyer or buyer/advertiser pair, we look for the most specific matching rule - we first look for a rule matching the buyer and advertiser, next a rule with the buyer but an empty advertiser list, and otherwise look for a matching rule where no buyer is set.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PricePerBuyer
{
    /**
     * The list of advertisers for this price when associated with this buyer. If empty, all advertisers with this buyer pay this price.
     * 
     * @var ?array<string> $advertiserIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('advertiserIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $advertiserIds = null;
    
    /**
     * Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Buyer $buyer
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Buyer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Buyer $buyer = null;
    
    /**
     * Represents a price and a pricing type for a product / deal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Price $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Price')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Price $price = null;
    
	public function __construct()
	{
		$this->advertiserIds = null;
		$this->buyer = null;
		$this->price = null;
	}
}
