/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class StoreReleasesGetRealTimeStatusByReleaseIdSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class StoreReleasesGetRealTimeStatusByReleaseIdRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * The id of the release
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=release_id",
  })
  releaseId: number;

  /**
   * The name of the store
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=store_name",
  })
  storeName: string;
}

export enum StoreReleasesGetRealTimeStatusByReleaseIdDefaultApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * Error
 */
export class StoreReleasesGetRealTimeStatusByReleaseIdDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: StoreReleasesGetRealTimeStatusByReleaseIdDefaultApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Status Data from store
 */
export class StoreReleasesGetRealTimeStatusByReleaseId200ApplicationJSONStatus extends SpeakeasyBase {
  /**
   * status from store
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * store type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storetype" })
  storetype?: string;

  /**
   * track information from store
   */
  @SpeakeasyMetadata()
  @Expose({ name: "track" })
  track?: string;

  /**
   * version of the app from store
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

/**
 * status of the app from store
 */
export class StoreReleasesGetRealTimeStatusByReleaseId200ApplicationJSON extends SpeakeasyBase {
  /**
   * app id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_id" })
  appId?: string;

  /**
   * release id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "release_id" })
  releaseId?: string;

  /**
   * Status Data from store
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => StoreReleasesGetRealTimeStatusByReleaseId200ApplicationJSONStatus)
  status?: StoreReleasesGetRealTimeStatusByReleaseId200ApplicationJSONStatus;
}

export class StoreReleasesGetRealTimeStatusByReleaseIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  storeReleasesGetRealTimeStatusByReleaseId200ApplicationJSONObject?: StoreReleasesGetRealTimeStatusByReleaseId200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  storeReleasesGetRealTimeStatusByReleaseIdDefaultApplicationJSONObject?: StoreReleasesGetRealTimeStatusByReleaseIdDefaultApplicationJSON;
}
