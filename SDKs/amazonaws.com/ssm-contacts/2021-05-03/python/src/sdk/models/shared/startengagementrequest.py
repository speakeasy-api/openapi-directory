"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartEngagementRequest:
    
    contact_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContactId') }})  
    content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Content') }})  
    sender: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sender') }})  
    subject: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subject') }})  
    idempotency_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IdempotencyToken'), 'exclude': lambda f: f is None }})  
    incident_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncidentId'), 'exclude': lambda f: f is None }})  
    public_content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublicContent'), 'exclude': lambda f: f is None }})  
    public_subject: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublicSubject'), 'exclude': lambda f: f is None }})  
    