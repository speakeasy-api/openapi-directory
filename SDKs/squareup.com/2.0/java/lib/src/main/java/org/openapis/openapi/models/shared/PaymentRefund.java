/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PaymentRefund - Represents a refund of a payment made using Square. Contains information about
 * the original payment and the amount of money refunded.
 */
public class PaymentRefund {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonProperty("amount_money")
    public Money amountMoney;
    public PaymentRefund withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("app_fee_money")
    public Money appFeeMoney;
    public PaymentRefund withAppFeeMoney(Money appFeeMoney) {
        this.appFeeMoney = appFeeMoney;
        return this;
    }
    
    /**
     * The timestamp of when the refund was created, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public PaymentRefund withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The unique ID for this refund, generated by Square.
     */
    @JsonProperty("id")
    public String id;
    public PaymentRefund withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The location ID associated with the payment this refund is attached to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;
    public PaymentRefund withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The ID of the order associated with the refund.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_id")
    public String orderId;
    public PaymentRefund withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    /**
     * The ID of the payment associated with this refund.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_id")
    public String paymentId;
    public PaymentRefund withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    /**
     * Processing fees and fee adjustments assessed by Square for this refund.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processing_fee")
    public ProcessingFee[] processingFee;
    public PaymentRefund withProcessingFee(ProcessingFee[] processingFee) {
        this.processingFee = processingFee;
        return this;
    }
    
    /**
     * The reason for the refund.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;
    public PaymentRefund withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The refund's status:
     * - `PENDING` - Awaiting approval.
     * - `COMPLETED` - Successfully completed.
     * - `REJECTED` - The refund was rejected.
     * - `FAILED` - An error occurred.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public PaymentRefund withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The timestamp of when the refund was last updated, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;
    public PaymentRefund withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
