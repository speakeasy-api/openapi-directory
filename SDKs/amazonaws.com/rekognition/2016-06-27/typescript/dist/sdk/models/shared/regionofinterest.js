"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RegionOfInterest = void 0;
var utils_1 = require("../../../internal/utils");
var boundingbox_1 = require("./boundingbox");
var point_1 = require("./point");
var class_transformer_1 = require("class-transformer");
/**
 * <p>Specifies a location within the frame that Rekognition checks for objects of interest such as text, labels, or faces. It uses a <code>BoundingBox</code> or <code>Polygon</code> to set a region of the screen.</p> <p>A word, face, or label is included in the region if it is more than half in that region. If there is more than one region, the word, face, or label is compared with all regions of the screen. Any object of interest that is more than half in a region is kept in the results.</p>
 */
var RegionOfInterest = /** @class */ (function (_super) {
    __extends(RegionOfInterest, _super);
    function RegionOfInterest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BoundingBox" }),
        (0, class_transformer_1.Type)(function () { return boundingbox_1.BoundingBox; }),
        __metadata("design:type", boundingbox_1.BoundingBox)
    ], RegionOfInterest.prototype, "boundingBox", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: point_1.Point }),
        (0, class_transformer_1.Expose)({ name: "Polygon" }),
        (0, class_transformer_1.Type)(function () { return point_1.Point; }),
        __metadata("design:type", Array)
    ], RegionOfInterest.prototype, "polygon", void 0);
    return RegionOfInterest;
}(utils_1.SpeakeasyBase));
exports.RegionOfInterest = RegionOfInterest;
