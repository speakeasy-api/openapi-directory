"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tfl_api_presentation_entities_stoppoint as shared_tfl_api_presentation_entities_stoppoint
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TflAPIPresentationEntitiesStopPointsResponse:
    r"""A paged response containing StopPoints"""
    
    centre_point: Optional[list[float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('centrePoint'), 'exclude': lambda f: f is None }})
    r"""The centre latitude/longitude of this list of StopPoints"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page'), 'exclude': lambda f: f is None }})
    r"""The index of this page"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageSize'), 'exclude': lambda f: f is None }})
    r"""The maximum size of the page in this response i.e. the maximum number of StopPoints"""  
    stop_points: Optional[list[shared_tfl_api_presentation_entities_stoppoint.TflAPIPresentationEntitiesStopPoint]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stopPoints'), 'exclude': lambda f: f is None }})
    r"""Collection of stop points"""  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""The total number of StopPoints available across all pages"""  
    