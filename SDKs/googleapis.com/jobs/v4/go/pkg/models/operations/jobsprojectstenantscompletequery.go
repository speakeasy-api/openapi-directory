// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type JobsProjectsTenantsCompleteQuerySecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type JobsProjectsTenantsCompleteQuerySecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type JobsProjectsTenantsCompleteQuerySecurity struct {
	Option1 *JobsProjectsTenantsCompleteQuerySecurityOption1 `security:"option"`
	Option2 *JobsProjectsTenantsCompleteQuerySecurityOption2 `security:"option"`
}

// JobsProjectsTenantsCompleteQueryScopeEnum - The scope of the completion. The defaults is CompletionScope.PUBLIC.
type JobsProjectsTenantsCompleteQueryScopeEnum string

const (
	JobsProjectsTenantsCompleteQueryScopeEnumCompletionScopeUnspecified JobsProjectsTenantsCompleteQueryScopeEnum = "COMPLETION_SCOPE_UNSPECIFIED"
	JobsProjectsTenantsCompleteQueryScopeEnumTenant                     JobsProjectsTenantsCompleteQueryScopeEnum = "TENANT"
	JobsProjectsTenantsCompleteQueryScopeEnumPublic                     JobsProjectsTenantsCompleteQueryScopeEnum = "PUBLIC"
)

func (e *JobsProjectsTenantsCompleteQueryScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPLETION_SCOPE_UNSPECIFIED":
		fallthrough
	case "TENANT":
		fallthrough
	case "PUBLIC":
		*e = JobsProjectsTenantsCompleteQueryScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsProjectsTenantsCompleteQueryScopeEnum: %s", s)
	}
}

// JobsProjectsTenantsCompleteQueryTypeEnum - The completion topic. The default is CompletionType.COMBINED.
type JobsProjectsTenantsCompleteQueryTypeEnum string

const (
	JobsProjectsTenantsCompleteQueryTypeEnumCompletionTypeUnspecified JobsProjectsTenantsCompleteQueryTypeEnum = "COMPLETION_TYPE_UNSPECIFIED"
	JobsProjectsTenantsCompleteQueryTypeEnumJobTitle                  JobsProjectsTenantsCompleteQueryTypeEnum = "JOB_TITLE"
	JobsProjectsTenantsCompleteQueryTypeEnumCompanyName               JobsProjectsTenantsCompleteQueryTypeEnum = "COMPANY_NAME"
	JobsProjectsTenantsCompleteQueryTypeEnumCombined                  JobsProjectsTenantsCompleteQueryTypeEnum = "COMBINED"
)

func (e *JobsProjectsTenantsCompleteQueryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPLETION_TYPE_UNSPECIFIED":
		fallthrough
	case "JOB_TITLE":
		fallthrough
	case "COMPANY_NAME":
		fallthrough
	case "COMBINED":
		*e = JobsProjectsTenantsCompleteQueryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsProjectsTenantsCompleteQueryTypeEnum: %s", s)
	}
}

type JobsProjectsTenantsCompleteQueryRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// If provided, restricts completion to specified company. The format is "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for example, "projects/foo/tenants/bar/companies/baz".
	Company *string `queryParam:"style=form,explode=true,name=company"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The list of languages of the query. This is the BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47). The maximum number of allowed characters is 255.
	LanguageCodes []string `queryParam:"style=form,explode=true,name=languageCodes"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Required. Completion result count. The maximum allowed page size is 10.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Required. The query used to generate suggestions. The maximum number of allowed characters is 255.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The scope of the completion. The defaults is CompletionScope.PUBLIC.
	Scope *JobsProjectsTenantsCompleteQueryScopeEnum `queryParam:"style=form,explode=true,name=scope"`
	// Required. Resource name of tenant the completion is performed within. The format is "projects/{project_id}/tenants/{tenant_id}", for example, "projects/foo/tenants/bar".
	Tenant string `pathParam:"style=simple,explode=false,name=tenant"`
	// The completion topic. The default is CompletionType.COMBINED.
	Type *JobsProjectsTenantsCompleteQueryTypeEnum `queryParam:"style=form,explode=true,name=type"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type JobsProjectsTenantsCompleteQueryResponse struct {
	// Successful response
	CompleteQueryResponse *shared.CompleteQueryResponse
	ContentType           string
	StatusCode            int
	RawResponse           *http.Response
}
