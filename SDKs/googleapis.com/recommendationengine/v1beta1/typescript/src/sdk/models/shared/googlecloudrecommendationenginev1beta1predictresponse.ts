/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult } from "./googlecloudrecommendationenginev1beta1predictresponsepredictionresult";
import { Expose, Type } from "class-transformer";

/**
 * Response message for predict method.
 */
export class GoogleCloudRecommendationengineV1beta1PredictResponse extends SpeakeasyBase {
  /**
   * True if the dryRun property was set in the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dryRun" })
  dryRun?: boolean;

  /**
   * IDs of items in the request that were missing from the catalog.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemsMissingInCatalog" })
  itemsMissingInCatalog?: string[];

  /**
   * Additional domain specific prediction response metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;

  /**
   * If empty, the list is complete. If nonempty, the token to pass to the next request's PredictRequest.page_token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * A unique recommendation token. This should be included in the user event logs resulting from this recommendation, which enables accurate attribution of recommendation model performance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recommendationToken" })
  recommendationToken?: string;

  /**
   * A list of recommended items. The order represents the ranking (from the most relevant item to the least).
   */
  @SpeakeasyMetadata({
    elemType:
      GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult,
  })
  @Expose({ name: "results" })
  @Type(
    () => GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult
  )
  results?: GoogleCloudRecommendationengineV1beta1PredictResponsePredictionResult[];
}
