/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules {
    /**
     * Description of the rule (optional)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * Destination IP address (in IP or CIDR notation)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dstCidr")
    public String dstCidr;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withDstCidr(String dstCidr) {
        this.dstCidr = dstCidr;
        return this;
    }
    
    /**
     * Destination port
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dstPort")
    public String dstPort;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withDstPort(String dstPort) {
        this.dstPort = dstPort;
        return this;
    }
    
    /**
     * IP address version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipVersion")
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum ipVersion;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withIpVersion(UpdateNetworkSwitchAccessControlLists200ApplicationJSONRulesIpVersionEnum ipVersion) {
        this.ipVersion = ipVersion;
        return this;
    }
    
    /**
     * 'allow' or 'deny' traffic specified by this rule
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policy")
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum policy;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withPolicy(UpdateNetworkSwitchAccessControlLists200ApplicationJSONRulesPolicyEnum policy) {
        this.policy = policy;
        return this;
    }
    
    /**
     * The type of protocol
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum protocol;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withProtocol(UpdateNetworkSwitchAccessControlLists200ApplicationJSONRulesProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Source IP address (in IP or CIDR notation)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("srcCidr")
    public String srcCidr;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withSrcCidr(String srcCidr) {
        this.srcCidr = srcCidr;
        return this;
    }
    
    /**
     * Source port
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("srcPort")
    public String srcPort;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withSrcPort(String srcPort) {
        this.srcPort = srcPort;
        return this;
    }
    
    /**
     * ncoming traffic VLAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public String vlan;
    public UpdateNetworkSwitchAccessControlLists200ApplicationJSONRules withVlan(String vlan) {
        this.vlan = vlan;
        return this;
    }
    
}
