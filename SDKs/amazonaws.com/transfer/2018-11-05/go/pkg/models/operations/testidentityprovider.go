// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TestIdentityProviderXAmzTargetEnum
type TestIdentityProviderXAmzTargetEnum string

const (
	TestIdentityProviderXAmzTargetEnumTransferServiceTestIdentityProvider TestIdentityProviderXAmzTargetEnum = "TransferService.TestIdentityProvider"
)

func (e TestIdentityProviderXAmzTargetEnum) ToPointer() *TestIdentityProviderXAmzTargetEnum {
	return &e
}

func (e *TestIdentityProviderXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TransferService.TestIdentityProvider":
		*e = TestIdentityProviderXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestIdentityProviderXAmzTargetEnum: %v", v)
	}
}

type TestIdentityProviderRequest struct {
	TestIdentityProviderRequest shared.TestIdentityProviderRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  TestIdentityProviderXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type TestIdentityProviderResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// Success
	TestIdentityProviderResponse *shared.TestIdentityProviderResponse
}
