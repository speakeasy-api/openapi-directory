// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StorageBucketsPatchSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsPatchSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type StorageBucketsPatchSecurity struct {
	Option1 *StorageBucketsPatchSecurityOption1 `security:"option"`
	Option2 *StorageBucketsPatchSecurityOption2 `security:"option"`
}

type StorageBucketsPatchPathParams struct {
	// Name of a bucket.
	Bucket string `pathParam:"style=simple,explode=false,name=bucket"`
}

// StorageBucketsPatchProjectionEnum - Set of properties to return. Defaults to full.
type StorageBucketsPatchProjectionEnum string

const (
	StorageBucketsPatchProjectionEnumFull  StorageBucketsPatchProjectionEnum = "full"
	StorageBucketsPatchProjectionEnumNoACL StorageBucketsPatchProjectionEnum = "noAcl"
)

func (e *StorageBucketsPatchProjectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "noAcl":
		*e = StorageBucketsPatchProjectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageBucketsPatchProjectionEnum: %s", s)
	}
}

type StorageBucketsPatchQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.
	IfMetagenerationMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationMatch"`
	// Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.
	IfMetagenerationNotMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationNotMatch"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Set of properties to return. Defaults to full.
	Projection *StorageBucketsPatchProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type StorageBucketsPatchRequest struct {
	PathParams  StorageBucketsPatchPathParams
	QueryParams StorageBucketsPatchQueryParams
	Request     *shared.Bucket `request:"mediaType=application/json"`
	Security    StorageBucketsPatchSecurity
}

type StorageBucketsPatchResponse struct {
	// Successful response
	Bucket      *shared.Bucket
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
