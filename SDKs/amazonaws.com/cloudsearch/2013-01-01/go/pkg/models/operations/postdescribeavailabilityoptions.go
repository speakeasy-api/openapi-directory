// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeAvailabilityOptionsActionEnum
type POSTDescribeAvailabilityOptionsActionEnum string

const (
	POSTDescribeAvailabilityOptionsActionEnumDescribeAvailabilityOptions POSTDescribeAvailabilityOptionsActionEnum = "DescribeAvailabilityOptions"
)

func (e *POSTDescribeAvailabilityOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeAvailabilityOptions":
		*e = POSTDescribeAvailabilityOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAvailabilityOptionsActionEnum: %s", s)
	}
}

// POSTDescribeAvailabilityOptionsVersionEnum
type POSTDescribeAvailabilityOptionsVersionEnum string

const (
	POSTDescribeAvailabilityOptionsVersionEnumTwoThousandAndThirteen0101 POSTDescribeAvailabilityOptionsVersionEnum = "2013-01-01"
)

func (e *POSTDescribeAvailabilityOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-01":
		*e = POSTDescribeAvailabilityOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAvailabilityOptionsVersionEnum: %s", s)
	}
}

type POSTDescribeAvailabilityOptionsQueryParams struct {
	Action  POSTDescribeAvailabilityOptionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDescribeAvailabilityOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeAvailabilityOptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeAvailabilityOptionsRequest struct {
	QueryParams POSTDescribeAvailabilityOptionsQueryParams
	Headers     POSTDescribeAvailabilityOptionsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeAvailabilityOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
