/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Creative - A creative and its classification data.
 */
public class Creative {
    /**
     * Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public Creative withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The link to AdChoices destination page. This is only supported for native ads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adChoicesDestinationUrl")
    public String adChoicesDestinationUrl;

    public Creative withAdChoicesDestinationUrl(String adChoicesDestinationUrl) {
        this.adChoicesDestinationUrl = adChoicesDestinationUrl;
        return this;
    }
    
    /**
     * The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserName")
    public String advertiserName;

    public Creative withAdvertiserName(String advertiserName) {
        this.advertiserName = advertiserName;
        return this;
    }
    
    /**
     * The agency ID for this creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("agencyId")
    public String agencyId;

    public Creative withAgencyId(String agencyId) {
        this.agencyId = agencyId;
        return this;
    }
    
    /**
     * Output only. The last update timestamp of the creative through the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiUpdateTime")
    public String apiUpdateTime;

    public Creative withApiUpdateTime(String apiUpdateTime) {
        this.apiUpdateTime = apiUpdateTime;
        return this;
    }
    
    /**
     * Output only. The format of this creative. Can be used to filter the response of the creatives.list method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeFormat")
    public CreativeCreativeFormatEnum creativeFormat;

    public Creative withCreativeFormat(CreativeCreativeFormatEnum creativeFormat) {
        this.creativeFormat = creativeFormat;
        return this;
    }
    
    /**
     * Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeId")
    public String creativeId;

    public Creative withCreativeId(String creativeId) {
        this.creativeId = creativeId;
        return this;
    }
    
    /**
     * Top level status and detected attributes of a creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeServingDecision")
    public CreativeServingDecision creativeServingDecision;

    public Creative withCreativeServingDecision(CreativeServingDecision creativeServingDecision) {
        this.creativeServingDecision = creativeServingDecision;
        return this;
    }
    
    /**
     * Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealIds")
    public String[] dealIds;

    public Creative withDealIds(String[] dealIds) {
        this.dealIds = dealIds;
        return this;
    }
    
    /**
     * All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declaredAttributes")
    public CreativeDeclaredAttributesEnum[] declaredAttributes;

    public Creative withDeclaredAttributes(CreativeDeclaredAttributesEnum[] declaredAttributes) {
        this.declaredAttributes = declaredAttributes;
        return this;
    }
    
    /**
     * The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declaredClickThroughUrls")
    public String[] declaredClickThroughUrls;

    public Creative withDeclaredClickThroughUrls(String[] declaredClickThroughUrls) {
        this.declaredClickThroughUrls = declaredClickThroughUrls;
        return this;
    }
    
    /**
     * All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declaredRestrictedCategories")
    public CreativeDeclaredRestrictedCategoriesEnum[] declaredRestrictedCategories;

    public Creative withDeclaredRestrictedCategories(CreativeDeclaredRestrictedCategoriesEnum[] declaredRestrictedCategories) {
        this.declaredRestrictedCategories = declaredRestrictedCategories;
        return this;
    }
    
    /**
     * IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("declaredVendorIds")
    public Integer[] declaredVendorIds;

    public Creative withDeclaredVendorIds(Integer[] declaredVendorIds) {
        this.declaredVendorIds = declaredVendorIds;
        return this;
    }
    
    /**
     * HTML content for a creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html")
    public HtmlContent html;

    public Creative withHtml(HtmlContent html) {
        this.html = html;
        return this;
    }
    
    /**
     * The set of URLs to be called to record an impression.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("impressionTrackingUrls")
    public String[] impressionTrackingUrls;

    public Creative withImpressionTrackingUrls(String[] impressionTrackingUrls) {
        this.impressionTrackingUrls = impressionTrackingUrls;
        return this;
    }
    
    /**
     * Output only. Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Creative withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Native content for a creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("native")
    public NativeContent native_;

    public Creative withNative(NativeContent native_) {
        this.native_ = native_;
        return this;
    }
    
    /**
     * Experimental field that can be used during the [FLEDGE Origin Trial](/authorized-buyers/rtb/fledge-origin-trial). The URL to fetch an interest group ad used in [TURTLEDOVE on-device auction](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#1-browsers-record-interest-groups"). This should be unique among all creatives for a given `accountId`. This URL should be the same as the URL returned by [generateBid()](https://github.com/WICG/turtledove/blob/main/FLEDGE.md#32-on-device-bidding).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renderUrl")
    public String renderUrl;

    public Creative withRenderUrl(String renderUrl) {
        this.renderUrl = renderUrl;
        return this;
    }
    
    /**
     * All restricted categories for the ads that may be shown from this creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictedCategories")
    public CreativeRestrictedCategoriesEnum[] restrictedCategories;

    public Creative withRestrictedCategories(CreativeRestrictedCategoriesEnum[] restrictedCategories) {
        this.restrictedCategories = restrictedCategories;
        return this;
    }
    
    /**
     * Output only. The version of the creative. Version for a new creative is 1 and it increments during subsequent creative updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Integer version;

    public Creative withVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    /**
     * Video content for a creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("video")
    public VideoContent video;

    public Creative withVideo(VideoContent video) {
        this.video = video;
        return this;
    }
    
    public Creative(){}
}
