/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlternateKey } from "./alternatekey";
import { PrimaryKey } from "./primarykey";
import { Expose, Type } from "class-transformer";

/**
 * The attributes of a VSAM type data set.
 */
export class VsamDetailAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AlternateKey })
  @Expose({ name: "alternateKeys" })
  @Type(() => AlternateKey)
  alternateKeys?: AlternateKey[];

  @SpeakeasyMetadata()
  @Expose({ name: "cacheAtStartup" })
  cacheAtStartup?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "compressed" })
  compressed?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "encoding" })
  encoding?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primaryKey" })
  @Type(() => PrimaryKey)
  primaryKey?: PrimaryKey;

  @SpeakeasyMetadata()
  @Expose({ name: "recordFormat" })
  recordFormat?: string;
}
