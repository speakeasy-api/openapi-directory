"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import sufficiencyoutput as shared_sufficiencyoutput
from typing import Optional


@dataclasses.dataclass
class GetAnnotationScoreRequest:
    
    absent_id: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'absent_id', 'style': 'form', 'explode': True }})
    r"""absent phenotype (eg HP:0002828)"""  
    id: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""Phenotype identifier (eg HP:0004935)"""  
    

@dataclasses.dataclass
class GetAnnotationScoreResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sufficiency_output: Optional[shared_sufficiencyoutput.SufficiencyOutput] = dataclasses.field(default=None)
    r"""Success"""  
    