// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
)

type PostAssetsCovarianceMatrixRequestBody3 struct {
	// The number of assets
	Assets int64 `json:"assets"`
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
	// assetsVolatilities[i] is the volatility of the asset i
	AssetsVolatilities []float64 `json:"assetsVolatilities"`
}

type PostAssetsCovarianceMatrixRequestBody2 struct {
	// The number of assets
	Assets int64 `json:"assets"`
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
	// assetsVariances[i] is the variance of the asset i
	AssetsVariances []float64 `json:"assetsVariances"`
}

type PostAssetsCovarianceMatrixRequestBody1Assets struct {
	// assetReturns[t] is the return of the asset at the time t; all the assetReturns arrays must have the same length
	AssetReturns []float64 `json:"assetReturns"`
}

type PostAssetsCovarianceMatrixRequestBody1 struct {
	Assets []PostAssetsCovarianceMatrixRequestBody1Assets `json:"assets"`
}

type PostAssetsCovarianceMatrixRequestBodyType string

const (
	PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody1 PostAssetsCovarianceMatrixRequestBodyType = "post_/assets/covariance/matrix_requestBody_1"
	PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody2 PostAssetsCovarianceMatrixRequestBodyType = "post_/assets/covariance/matrix_requestBody_2"
	PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody3 PostAssetsCovarianceMatrixRequestBodyType = "post_/assets/covariance/matrix_requestBody_3"
)

type PostAssetsCovarianceMatrixRequestBody struct {
	PostAssetsCovarianceMatrixRequestBody1 *PostAssetsCovarianceMatrixRequestBody1
	PostAssetsCovarianceMatrixRequestBody2 *PostAssetsCovarianceMatrixRequestBody2
	PostAssetsCovarianceMatrixRequestBody3 *PostAssetsCovarianceMatrixRequestBody3

	Type PostAssetsCovarianceMatrixRequestBodyType
}

func CreatePostAssetsCovarianceMatrixRequestBodyPostAssetsCovarianceMatrixRequestBody1(postAssetsCovarianceMatrixRequestBody1 PostAssetsCovarianceMatrixRequestBody1) PostAssetsCovarianceMatrixRequestBody {
	typ := PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody1

	return PostAssetsCovarianceMatrixRequestBody{
		PostAssetsCovarianceMatrixRequestBody1: &postAssetsCovarianceMatrixRequestBody1,
		Type:                                   typ,
	}
}

func CreatePostAssetsCovarianceMatrixRequestBodyPostAssetsCovarianceMatrixRequestBody2(postAssetsCovarianceMatrixRequestBody2 PostAssetsCovarianceMatrixRequestBody2) PostAssetsCovarianceMatrixRequestBody {
	typ := PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody2

	return PostAssetsCovarianceMatrixRequestBody{
		PostAssetsCovarianceMatrixRequestBody2: &postAssetsCovarianceMatrixRequestBody2,
		Type:                                   typ,
	}
}

func CreatePostAssetsCovarianceMatrixRequestBodyPostAssetsCovarianceMatrixRequestBody3(postAssetsCovarianceMatrixRequestBody3 PostAssetsCovarianceMatrixRequestBody3) PostAssetsCovarianceMatrixRequestBody {
	typ := PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody3

	return PostAssetsCovarianceMatrixRequestBody{
		PostAssetsCovarianceMatrixRequestBody3: &postAssetsCovarianceMatrixRequestBody3,
		Type:                                   typ,
	}
}

func (u *PostAssetsCovarianceMatrixRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postAssetsCovarianceMatrixRequestBody1 := new(PostAssetsCovarianceMatrixRequestBody1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postAssetsCovarianceMatrixRequestBody1); err == nil {
		u.PostAssetsCovarianceMatrixRequestBody1 = postAssetsCovarianceMatrixRequestBody1
		u.Type = PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody1
		return nil
	}

	postAssetsCovarianceMatrixRequestBody2 := new(PostAssetsCovarianceMatrixRequestBody2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postAssetsCovarianceMatrixRequestBody2); err == nil {
		u.PostAssetsCovarianceMatrixRequestBody2 = postAssetsCovarianceMatrixRequestBody2
		u.Type = PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody2
		return nil
	}

	postAssetsCovarianceMatrixRequestBody3 := new(PostAssetsCovarianceMatrixRequestBody3)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postAssetsCovarianceMatrixRequestBody3); err == nil {
		u.PostAssetsCovarianceMatrixRequestBody3 = postAssetsCovarianceMatrixRequestBody3
		u.Type = PostAssetsCovarianceMatrixRequestBodyTypePostAssetsCovarianceMatrixRequestBody3
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostAssetsCovarianceMatrixRequestBody) MarshalJSON() ([]byte, error) {
	if u.PostAssetsCovarianceMatrixRequestBody1 != nil {
		return json.Marshal(u.PostAssetsCovarianceMatrixRequestBody1)
	}

	if u.PostAssetsCovarianceMatrixRequestBody2 != nil {
		return json.Marshal(u.PostAssetsCovarianceMatrixRequestBody2)
	}

	if u.PostAssetsCovarianceMatrixRequestBody3 != nil {
		return json.Marshal(u.PostAssetsCovarianceMatrixRequestBody3)
	}

	return nil, nil
}

// PostAssetsCovarianceMatrix200ApplicationJSON - OK
type PostAssetsCovarianceMatrix200ApplicationJSON struct {
	// assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
	AssetsCovarianceMatrix [][]float64 `json:"assetsCovarianceMatrix"`
}

type PostAssetsCovarianceMatrixResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostAssetsCovarianceMatrix200ApplicationJSONObject *PostAssetsCovarianceMatrix200ApplicationJSON
}
