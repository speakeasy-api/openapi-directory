"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1beta3documentpageblock as shared_googleclouddocumentaiv1beta3documentpageblock
from ..shared import googleclouddocumentaiv1beta3documentpagedetectedbarcode as shared_googleclouddocumentaiv1beta3documentpagedetectedbarcode
from ..shared import googleclouddocumentaiv1beta3documentpagedetectedlanguage as shared_googleclouddocumentaiv1beta3documentpagedetectedlanguage
from ..shared import googleclouddocumentaiv1beta3documentpagedimension as shared_googleclouddocumentaiv1beta3documentpagedimension
from ..shared import googleclouddocumentaiv1beta3documentpageformfield as shared_googleclouddocumentaiv1beta3documentpageformfield
from ..shared import googleclouddocumentaiv1beta3documentpageimage as shared_googleclouddocumentaiv1beta3documentpageimage
from ..shared import googleclouddocumentaiv1beta3documentpageimagequalityscores as shared_googleclouddocumentaiv1beta3documentpageimagequalityscores
from ..shared import googleclouddocumentaiv1beta3documentpagelayout as shared_googleclouddocumentaiv1beta3documentpagelayout
from ..shared import googleclouddocumentaiv1beta3documentpageline as shared_googleclouddocumentaiv1beta3documentpageline
from ..shared import googleclouddocumentaiv1beta3documentpagematrix as shared_googleclouddocumentaiv1beta3documentpagematrix
from ..shared import googleclouddocumentaiv1beta3documentpageparagraph as shared_googleclouddocumentaiv1beta3documentpageparagraph
from ..shared import googleclouddocumentaiv1beta3documentpagesymbol as shared_googleclouddocumentaiv1beta3documentpagesymbol
from ..shared import googleclouddocumentaiv1beta3documentpagetable as shared_googleclouddocumentaiv1beta3documentpagetable
from ..shared import googleclouddocumentaiv1beta3documentpagetoken as shared_googleclouddocumentaiv1beta3documentpagetoken
from ..shared import googleclouddocumentaiv1beta3documentpagevisualelement as shared_googleclouddocumentaiv1beta3documentpagevisualelement
from ..shared import googleclouddocumentaiv1beta3documentprovenance as shared_googleclouddocumentaiv1beta3documentprovenance
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1beta3DocumentPage:
    r"""A page in a Document."""
    
    blocks: Optional[list[shared_googleclouddocumentaiv1beta3documentpageblock.GoogleCloudDocumentaiV1beta3DocumentPageBlock]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blocks'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected text blocks on the page. A block has a set of lines (collected into paragraphs) that have a common line-spacing and orientation."""  
    detected_barcodes: Optional[list[shared_googleclouddocumentaiv1beta3documentpagedetectedbarcode.GoogleCloudDocumentaiV1beta3DocumentPageDetectedBarcode]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectedBarcodes'), 'exclude': lambda f: f is None }})
    r"""A list of detected barcodes."""  
    detected_languages: Optional[list[shared_googleclouddocumentaiv1beta3documentpagedetectedlanguage.GoogleCloudDocumentaiV1beta3DocumentPageDetectedLanguage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detectedLanguages'), 'exclude': lambda f: f is None }})
    r"""A list of detected languages together with confidence."""  
    dimension: Optional[shared_googleclouddocumentaiv1beta3documentpagedimension.GoogleCloudDocumentaiV1beta3DocumentPageDimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension'), 'exclude': lambda f: f is None }})
    r"""Dimension for the page."""  
    form_fields: Optional[list[shared_googleclouddocumentaiv1beta3documentpageformfield.GoogleCloudDocumentaiV1beta3DocumentPageFormField]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formFields'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected form fields on the page."""  
    image: Optional[shared_googleclouddocumentaiv1beta3documentpageimage.GoogleCloudDocumentaiV1beta3DocumentPageImage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Rendered image contents for this page."""  
    image_quality_scores: Optional[shared_googleclouddocumentaiv1beta3documentpageimagequalityscores.GoogleCloudDocumentaiV1beta3DocumentPageImageQualityScores] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageQualityScores'), 'exclude': lambda f: f is None }})
    r"""Image Quality Scores for the page image"""  
    layout: Optional[shared_googleclouddocumentaiv1beta3documentpagelayout.GoogleCloudDocumentaiV1beta3DocumentPageLayout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layout'), 'exclude': lambda f: f is None }})
    r"""Visual element describing a layout unit on a page."""  
    lines: Optional[list[shared_googleclouddocumentaiv1beta3documentpageline.GoogleCloudDocumentaiV1beta3DocumentPageLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lines'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected text lines on the page. A collection of tokens that a human would perceive as a line."""  
    page_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageNumber'), 'exclude': lambda f: f is None }})
    r"""1-based index for current Page in a parent Document. Useful when a page is taken out of a Document for individual processing."""  
    paragraphs: Optional[list[shared_googleclouddocumentaiv1beta3documentpageparagraph.GoogleCloudDocumentaiV1beta3DocumentPageParagraph]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paragraphs'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected text paragraphs on the page. A collection of lines that a human would perceive as a paragraph."""  
    provenance: Optional[shared_googleclouddocumentaiv1beta3documentprovenance.GoogleCloudDocumentaiV1beta3DocumentProvenance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provenance'), 'exclude': lambda f: f is None }})
    r"""Structure to identify provenance relationships between annotations in different revisions."""  
    symbols: Optional[list[shared_googleclouddocumentaiv1beta3documentpagesymbol.GoogleCloudDocumentaiV1beta3DocumentPageSymbol]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbols'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected symbols on the page."""  
    tables: Optional[list[shared_googleclouddocumentaiv1beta3documentpagetable.GoogleCloudDocumentaiV1beta3DocumentPageTable]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tables'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected tables on the page."""  
    tokens: Optional[list[shared_googleclouddocumentaiv1beta3documentpagetoken.GoogleCloudDocumentaiV1beta3DocumentPageToken]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokens'), 'exclude': lambda f: f is None }})
    r"""A list of visually detected tokens on the page."""  
    transforms: Optional[list[shared_googleclouddocumentaiv1beta3documentpagematrix.GoogleCloudDocumentaiV1beta3DocumentPageMatrix]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transforms'), 'exclude': lambda f: f is None }})
    r"""Transformation matrices that were applied to the original document image to produce Page.image."""  
    visual_elements: Optional[list[shared_googleclouddocumentaiv1beta3documentpagevisualelement.GoogleCloudDocumentaiV1beta3DocumentPageVisualElement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visualElements'), 'exclude': lambda f: f is None }})
    r"""A list of detected non-text visual elements e.g. checkbox, signature etc. on the page."""  
    