/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PayoutSchedule - Details relating to a payout that was executed via a schedule or is still waiting to be executed
 */
public class PayoutSchedule {
    @JsonProperty("notificationsEnabled")
    public Boolean notificationsEnabled;
    public PayoutSchedule withNotificationsEnabled(Boolean notificationsEnabled) {
        this.notificationsEnabled = notificationsEnabled;
        return this;
    }
    
    /**
     * Current status of the payout schedule. One of the following values: SCHEDULED, EXECUTED, FAILED
     */
    @JsonProperty("scheduleStatus")
    public String scheduleStatus;
    public PayoutSchedule withScheduleStatus(String scheduleStatus) {
        this.scheduleStatus = scheduleStatus;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledAt")
    public OffsetDateTime scheduledAt;
    public PayoutSchedule withScheduledAt(OffsetDateTime scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    /**
     * Optional display name as a hint for who scheduled the payout. Not populated if payout was scheduled by an application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduledBy")
    public String scheduledBy;
    public PayoutSchedule withScheduledBy(String scheduledBy) {
        this.scheduledBy = scheduledBy;
        return this;
    }
    
    /**
     * ID of the user or application that scheduled the payout
     */
    @JsonProperty("scheduledByPrincipalId")
    public String scheduledByPrincipalId;
    public PayoutSchedule withScheduledByPrincipalId(String scheduledByPrincipalId) {
        this.scheduledByPrincipalId = scheduledByPrincipalId;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledFor")
    public OffsetDateTime scheduledFor;
    public PayoutSchedule withScheduledFor(OffsetDateTime scheduledFor) {
        this.scheduledFor = scheduledFor;
        return this;
    }
    
}
