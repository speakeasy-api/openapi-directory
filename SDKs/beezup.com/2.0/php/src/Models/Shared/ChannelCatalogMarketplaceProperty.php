<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChannelCatalogMarketplaceProperty - Model for fetching a channel catalog marketplace property
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChannelCatalogMarketplaceProperty
{
    /**
     * Indicate the description of the property
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('discriminatorType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ChannelCatalogMarketplacePropertyDiscriminatorTypeEnum>')]
    public ChannelCatalogMarketplacePropertyDiscriminatorTypeEnum $discriminatorType;
    
	#[\JMS\Serializer\Annotation\SerializedName('info')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BeezUPCommonInfoSummaries')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BeezUPCommonInfoSummaries $info = null;
    
    /**
     * Describe the way you have to follow to get access to the LOV
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BeezUPCommonLOVLink3 $lovLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('lovLink')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BeezUPCommonLOVLink3')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BeezUPCommonLOVLink3 $lovLink = null;
    
    /**
     * Indicates if the property value must be in the list of value.
     * 
     * @var ?bool $lovRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('lovRequired')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $lovRequired = null;
    
    /**
     * Indicates the maximum item count of the property value
     * 
     * @var ?int $maxItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxItems')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxItems = null;
    
    /**
     * Indicates the maximum size of the property value
     * 
     * @var ?int $maxLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxLength = null;
    
    /**
     * Indicates the minimum item count of the property value.
     * 
     * @var ?int $minItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('minItems')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minItems = null;
    
    /**
     * Indicates the minimum size of the property value
     * 
     * @var ?int $minLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('minLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minLength = null;
    
    /**
     * Channel catalog marketplace property name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Indicates the offer identifier required to configure this property.
     * 
     * @var ?int $offerIdRequired
     */
	#[\JMS\Serializer\Annotation\SerializedName('offerIdRequired')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offerIdRequired = null;
    
    /**
     * Channel catalog marketplace setting value format validation regular expression
     * 
     * @var ?string $pattern
     */
	#[\JMS\Serializer\Annotation\SerializedName('pattern')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pattern = null;
    
    /**
     * Indicate the position of the property in the display group
     * 
     * @var int $position
     */
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $position;
    
    /**
     * Indicate if the value cannot be changed. This is used for example for ebay token that should not be changed.
     * 
     * @var bool $readOnly
     */
	#[\JMS\Serializer\Annotation\SerializedName('readOnly')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $readOnly;
    
    /**
     * Indicate if the property is required or not
     * 
     * @var bool $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $required;
    
    /**
     * The Data Type
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TypeEnum>')]
    public TypeEnum $type;
    
    /**
     * Indicates if this property should be displayed in the configuration page.
     * 
     * @var bool $visible
     */
	#[\JMS\Serializer\Annotation\SerializedName('visible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $visible;
    
	public function __construct()
	{
		$this->description = null;
		$this->discriminatorType = \OpenAPI\OpenAPI\Models\Shared\ChannelCatalogMarketplacePropertyDiscriminatorTypeEnum::CHANNEL_CATALOG_MARKETPLACE_STRING_PROPERTY;
		$this->info = null;
		$this->lovLink = null;
		$this->lovRequired = null;
		$this->maxItems = null;
		$this->maxLength = null;
		$this->minItems = null;
		$this->minLength = null;
		$this->name = "";
		$this->offerIdRequired = null;
		$this->pattern = null;
		$this->position = 0;
		$this->readOnly = false;
		$this->required = false;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\TypeEnum::STRING;
		$this->visible = false;
	}
}
