/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateLoggingConfigurationRequestBody {
    /**
     * A complex type that describes a location where chat logs will be stored. Each member represents the configuration of one log destination. For logging, you define only one type of destination (for CloudWatch Logs, Kinesis Firehose, or S3).
     */
    @JsonProperty("destinationConfiguration")
    public CreateLoggingConfigurationRequestBodyDestinationConfiguration destinationConfiguration;

    public CreateLoggingConfigurationRequestBody withDestinationConfiguration(CreateLoggingConfigurationRequestBodyDestinationConfiguration destinationConfiguration) {
        this.destinationConfiguration = destinationConfiguration;
        return this;
    }
    
    /**
     * Logging-configuration name. The value does not need to be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CreateLoggingConfigurationRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Tags to attach to the resource. Array of maps, each of the form &lt;code&gt;string:string (key:value)&lt;/code&gt;. See &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;Tagging AWS Resources&lt;/a&gt; for details, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS Chat has no constraints on tags beyond what is documented there.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateLoggingConfigurationRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateLoggingConfigurationRequestBody(@JsonProperty("destinationConfiguration") CreateLoggingConfigurationRequestBodyDestinationConfiguration destinationConfiguration) {
        this.destinationConfiguration = destinationConfiguration;
  }
}
