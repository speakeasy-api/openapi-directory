// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GrantOperationEnum string

const (
	GrantOperationEnumDecrypt                             GrantOperationEnum = "Decrypt"
	GrantOperationEnumEncrypt                             GrantOperationEnum = "Encrypt"
	GrantOperationEnumGenerateDataKey                     GrantOperationEnum = "GenerateDataKey"
	GrantOperationEnumGenerateDataKeyWithoutPlaintext     GrantOperationEnum = "GenerateDataKeyWithoutPlaintext"
	GrantOperationEnumReEncryptFrom                       GrantOperationEnum = "ReEncryptFrom"
	GrantOperationEnumReEncryptTo                         GrantOperationEnum = "ReEncryptTo"
	GrantOperationEnumSign                                GrantOperationEnum = "Sign"
	GrantOperationEnumVerify                              GrantOperationEnum = "Verify"
	GrantOperationEnumGetPublicKey                        GrantOperationEnum = "GetPublicKey"
	GrantOperationEnumCreateGrant                         GrantOperationEnum = "CreateGrant"
	GrantOperationEnumRetireGrant                         GrantOperationEnum = "RetireGrant"
	GrantOperationEnumDescribeKey                         GrantOperationEnum = "DescribeKey"
	GrantOperationEnumGenerateDataKeyPair                 GrantOperationEnum = "GenerateDataKeyPair"
	GrantOperationEnumGenerateDataKeyPairWithoutPlaintext GrantOperationEnum = "GenerateDataKeyPairWithoutPlaintext"
	GrantOperationEnumGenerateMac                         GrantOperationEnum = "GenerateMac"
	GrantOperationEnumVerifyMac                           GrantOperationEnum = "VerifyMac"
)

func (e GrantOperationEnum) ToPointer() *GrantOperationEnum {
	return &e
}

func (e *GrantOperationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Decrypt":
		fallthrough
	case "Encrypt":
		fallthrough
	case "GenerateDataKey":
		fallthrough
	case "GenerateDataKeyWithoutPlaintext":
		fallthrough
	case "ReEncryptFrom":
		fallthrough
	case "ReEncryptTo":
		fallthrough
	case "Sign":
		fallthrough
	case "Verify":
		fallthrough
	case "GetPublicKey":
		fallthrough
	case "CreateGrant":
		fallthrough
	case "RetireGrant":
		fallthrough
	case "DescribeKey":
		fallthrough
	case "GenerateDataKeyPair":
		fallthrough
	case "GenerateDataKeyPairWithoutPlaintext":
		fallthrough
	case "GenerateMac":
		fallthrough
	case "VerifyMac":
		*e = GrantOperationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GrantOperationEnum: %v", v)
	}
}
