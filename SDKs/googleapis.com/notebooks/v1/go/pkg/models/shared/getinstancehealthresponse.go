// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetInstanceHealthResponseHealthStateEnum - Output only. Runtime health_state.
type GetInstanceHealthResponseHealthStateEnum string

const (
	GetInstanceHealthResponseHealthStateEnumHealthStateUnspecified GetInstanceHealthResponseHealthStateEnum = "HEALTH_STATE_UNSPECIFIED"
	GetInstanceHealthResponseHealthStateEnumHealthy                GetInstanceHealthResponseHealthStateEnum = "HEALTHY"
	GetInstanceHealthResponseHealthStateEnumUnhealthy              GetInstanceHealthResponseHealthStateEnum = "UNHEALTHY"
	GetInstanceHealthResponseHealthStateEnumAgentNotInstalled      GetInstanceHealthResponseHealthStateEnum = "AGENT_NOT_INSTALLED"
	GetInstanceHealthResponseHealthStateEnumAgentNotRunning        GetInstanceHealthResponseHealthStateEnum = "AGENT_NOT_RUNNING"
)

func (e *GetInstanceHealthResponseHealthStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEALTH_STATE_UNSPECIFIED":
		fallthrough
	case "HEALTHY":
		fallthrough
	case "UNHEALTHY":
		fallthrough
	case "AGENT_NOT_INSTALLED":
		fallthrough
	case "AGENT_NOT_RUNNING":
		*e = GetInstanceHealthResponseHealthStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInstanceHealthResponseHealthStateEnum: %s", s)
	}
}

// GetInstanceHealthResponse - Response for checking if a notebook instance is healthy.
type GetInstanceHealthResponse struct {
	// Output only. Additional information about instance health. Example: healthInfo": { "docker_proxy_agent_status": "1", "docker_status": "1", "jupyterlab_api_status": "-1", "jupyterlab_status": "-1", "updated": "2020-10-18 09:40:03.573409" }
	HealthInfo map[string]string `json:"healthInfo,omitempty"`
	// Output only. Runtime health_state.
	HealthState *GetInstanceHealthResponseHealthStateEnum `json:"healthState,omitempty"`
}
