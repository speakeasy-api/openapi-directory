"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deletepodcastresponse as shared_deletepodcastresponse
from typing import Optional


@dataclasses.dataclass
class DeletePodcastByIDRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Podcast id. You can get podcast id from using other endpoints, e.g., `GET /search`, `GET /best_podcasts`..."""  
    x_listen_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'X-ListenAPI-Key', 'style': 'simple', 'explode': False }})
    r"""Get API Key on listennotes.com/api"""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'reason', 'style': 'form', 'explode': True }})
    r"""The reason why this podcast should be deleted, e.g., copyright violation, the podcaster wants to delete it... You can put \\"testing\\" here to indicate that you are testing this endpoint, so we will not actually delete the podcast."""  
    

@dataclasses.dataclass
class DeletePodcastByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    delete_podcast_response: Optional[shared_deletepodcastresponse.DeletePodcastResponse] = dataclasses.field(default=None)
    r"""OK"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    