/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PerformanceThreshold - A PerformanceThreshold is used when each window is good when that window has a sufficiently high performance.
 */
public class PerformanceThreshold {
    /**
     * An SLI measuring performance on a well-known service type. Performance will be computed on the basis of pre-defined metrics. The type of the service_resource determines the metrics to use and the service_resource.labels and metric_labels are used to construct a monitoring filter to filter that metric down to just the data relevant to this service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basicSliPerformance")
    public BasicSli basicSliPerformance;

    public PerformanceThreshold withBasicSliPerformance(BasicSli basicSliPerformance) {
        this.basicSliPerformance = basicSliPerformance;
        return this;
    }
    
    /**
     * Service Level Indicators for which atomic units of service are counted directly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("performance")
    public RequestBasedSli performance;

    public PerformanceThreshold withPerformance(RequestBasedSli performance) {
        this.performance = performance;
        return this;
    }
    
    /**
     * If window performance &gt;= threshold, the window is counted as good.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("threshold")
    public Double threshold;

    public PerformanceThreshold withThreshold(Double threshold) {
        this.threshold = threshold;
        return this;
    }
    
    public PerformanceThreshold(){}
}
