// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChoiceReasonEnum string

const (
	ChoiceReasonEnumOutOfScope              ChoiceReasonEnum = "OUT_OF_SCOPE"
	ChoiceReasonEnumBusinessPriorities      ChoiceReasonEnum = "BUSINESS_PRIORITIES"
	ChoiceReasonEnumArchitectureConstraints ChoiceReasonEnum = "ARCHITECTURE_CONSTRAINTS"
	ChoiceReasonEnumOther                   ChoiceReasonEnum = "OTHER"
	ChoiceReasonEnumNone                    ChoiceReasonEnum = "NONE"
)

func (e *ChoiceReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OUT_OF_SCOPE":
		fallthrough
	case "BUSINESS_PRIORITIES":
		fallthrough
	case "ARCHITECTURE_CONSTRAINTS":
		fallthrough
	case "OTHER":
		fallthrough
	case "NONE":
		*e = ChoiceReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChoiceReasonEnum: %s", s)
	}
}
