/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * S3DestinationDescription - Describes a destination in Amazon S3.
 */
public class S3DestinationDescription {
    @JsonProperty("BucketARN")
    public String bucketARN;

    public S3DestinationDescription withBucketARN(String bucketARN) {
        this.bucketARN = bucketARN;
        return this;
    }
    
    @JsonProperty("BufferingHints")
    public BufferingHints bufferingHints;

    public S3DestinationDescription withBufferingHints(BufferingHints bufferingHints) {
        this.bufferingHints = bufferingHints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CloudWatchLoggingOptions")
    public CloudWatchLoggingOptions cloudWatchLoggingOptions;

    public S3DestinationDescription withCloudWatchLoggingOptions(CloudWatchLoggingOptions cloudWatchLoggingOptions) {
        this.cloudWatchLoggingOptions = cloudWatchLoggingOptions;
        return this;
    }
    
    @JsonProperty("CompressionFormat")
    public CompressionFormatEnum compressionFormat;

    public S3DestinationDescription withCompressionFormat(CompressionFormatEnum compressionFormat) {
        this.compressionFormat = compressionFormat;
        return this;
    }
    
    @JsonProperty("EncryptionConfiguration")
    public EncryptionConfiguration encryptionConfiguration;

    public S3DestinationDescription withEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration) {
        this.encryptionConfiguration = encryptionConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorOutputPrefix")
    public String errorOutputPrefix;

    public S3DestinationDescription withErrorOutputPrefix(String errorOutputPrefix) {
        this.errorOutputPrefix = errorOutputPrefix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Prefix")
    public String prefix;

    public S3DestinationDescription withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }
    
    @JsonProperty("RoleARN")
    public String roleARN;

    public S3DestinationDescription withRoleARN(String roleARN) {
        this.roleARN = roleARN;
        return this;
    }
    
    public S3DestinationDescription(@JsonProperty("BucketARN") String bucketARN, @JsonProperty("BufferingHints") BufferingHints bufferingHints, @JsonProperty("CompressionFormat") CompressionFormatEnum compressionFormat, @JsonProperty("EncryptionConfiguration") EncryptionConfiguration encryptionConfiguration, @JsonProperty("RoleARN") String roleARN) {
        this.bucketARN = bucketARN;
        this.bufferingHints = bufferingHints;
        this.compressionFormat = compressionFormat;
        this.encryptionConfiguration = encryptionConfiguration;
        this.roleARN = roleARN;
  }
}
