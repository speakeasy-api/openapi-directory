/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatusEnum } from "./statusenum";
import { UnifiedApiIdEnum } from "./unifiedapiidenum";
import { WebhookEventTypeEnum } from "./webhookeventtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.
 */
export enum WebhookDisabledReasonEnum {
  None = "none",
  RetryLimit = "retry_limit",
  UsageLimit = "usage_limit",
}

export class Webhook extends SpeakeasyBase {
  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The delivery url of the webhook endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delivery_url" })
  deliveryUrl: string;

  /**
   * A description of the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Indicates if the webhook has has been disabled as it reached its retry limit or if account is over the usage allocated by it's plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled_reason" })
  disabledReason?: WebhookDisabledReasonEnum;

  /**
   * The list of subscribed events for this webhook. [`*`] indicates that all events are enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events: WebhookEventTypeEnum[];

  /**
   * The Unify Base URL events from connectors will be sent to after service id is appended.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "execute_base_url" })
  executeBaseUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The status of the webhook.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: StatusEnum;

  /**
   * Name of Apideck Unified API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unified_api" })
  unifiedApi: UnifiedApiIdEnum;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
