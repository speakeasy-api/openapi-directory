/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ListFindingsResult } from "./listfindingsresult";
import { Expose, Type } from "class-transformer";

/**
 * Response message for listing findings.
 */
export class ListFindingsResponse extends SpeakeasyBase {
  /**
   * Findings matching the list request.
   */
  @SpeakeasyMetadata({ elemType: ListFindingsResult })
  @Expose({ name: "listFindingsResults" })
  @Type(() => ListFindingsResult)
  listFindingsResults?: ListFindingsResult[];

  /**
   * Token to retrieve the next page of results, or empty if there are no more results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Time used for executing the list request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * The total number of findings matching the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
