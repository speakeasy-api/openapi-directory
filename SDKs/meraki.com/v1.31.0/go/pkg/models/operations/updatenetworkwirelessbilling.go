// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateNetworkWirelessBillingRequestBodyPlansBandwidthLimits - The uplink bandwidth settings for the pricing plan.
type UpdateNetworkWirelessBillingRequestBodyPlansBandwidthLimits struct {
	// The maximum download limit (integer, in Kbps). null indicates no limit
	LimitDown *int64 `json:"limitDown,omitempty"`
	// The maximum upload limit (integer, in Kbps). null indicates no limit
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum - The time limit of the pricing plan in minutes. Can be '1 hour', '1 day', '1 week', or '30 days'.
type UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum string

const (
	UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnumOneDay     UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum = "1 day"
	UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnumOneHour    UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum = "1 hour"
	UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnumOneWeek    UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum = "1 week"
	UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnumThirtyDays UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum = "30 days"
)

func (e *UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1 day":
		fallthrough
	case "1 hour":
		fallthrough
	case "1 week":
		fallthrough
	case "30 days":
		*e = UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum: %s", s)
	}
}

type UpdateNetworkWirelessBillingRequestBodyPlans struct {
	// The uplink bandwidth settings for the pricing plan.
	BandwidthLimits UpdateNetworkWirelessBillingRequestBodyPlansBandwidthLimits `json:"bandwidthLimits"`
	// The id of the pricing plan to update.
	ID *string `json:"id,omitempty"`
	// The price of the billing plan.
	Price float32 `json:"price"`
	// The time limit of the pricing plan in minutes. Can be '1 hour', '1 day', '1 week', or '30 days'.
	TimeLimit UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum `json:"timeLimit"`
}

type UpdateNetworkWirelessBillingRequestBody struct {
	// The currency code of this node group's billing plans
	Currency *string `json:"currency,omitempty"`
	// Array of billing plans in the node group. (Can configure a maximum of 5)
	Plans []UpdateNetworkWirelessBillingRequestBodyPlans `json:"plans,omitempty"`
}

type UpdateNetworkWirelessBillingRequest struct {
	RequestBody *UpdateNetworkWirelessBillingRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                   `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkWirelessBillingResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkWirelessBilling200ApplicationJSONObject map[string]interface{}
}
