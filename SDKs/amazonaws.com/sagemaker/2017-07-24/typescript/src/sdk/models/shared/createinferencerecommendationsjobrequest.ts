/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecommendationJobInputConfig } from "./recommendationjobinputconfig";
import { RecommendationJobOutputConfig } from "./recommendationjoboutputconfig";
import { RecommendationJobStoppingConditions } from "./recommendationjobstoppingconditions";
import { RecommendationJobTypeEnum } from "./recommendationjobtypeenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateInferenceRecommendationsJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "InputConfig" })
  @Type(() => RecommendationJobInputConfig)
  inputConfig: RecommendationJobInputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "JobDescription" })
  jobDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobType" })
  jobType: RecommendationJobTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputConfig" })
  @Type(() => RecommendationJobOutputConfig)
  outputConfig?: RecommendationJobOutputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StoppingConditions" })
  @Type(() => RecommendationJobStoppingConditions)
  stoppingConditions?: RecommendationJobStoppingConditions;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
