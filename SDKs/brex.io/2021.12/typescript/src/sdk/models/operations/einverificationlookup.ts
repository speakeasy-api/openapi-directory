/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class EinVerificationLookupSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=user_key",
  })
  userKey: string;
}

export class EinVerificationLookupRequest extends SpeakeasyBase {
  /**
   * Business name of the company
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name: string;

  /**
   * Optional state parameter to improve results. (Two letter code for example CA or US-CA for California)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: string;

  /**
   * Optional parameter to do tight matching. (Only the best match will be returned rather then the top 5)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tight" })
  tight?: boolean;

  /**
   * Optional zip code parameter to improve results. (Zip is preferred over state)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=zip" })
  zip?: string;
}

/**
 * Detailed information about the error
 */
export class EinVerificationLookupDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fault" })
  fault?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;
}

export class EinVerificationLookup200ApplicationJSONMatchedEinCompanies extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "company_score" })
  companyScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "company_score_explanation" })
  companyScoreExplanation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "confidence_score" })
  confidenceScore?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "confidence_score_explanation" })
  confidenceScoreExplanation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dba_score" })
  dbaScore?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dba_score_explanation" })
  dbaScoreExplanation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ein" })
  ein?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "formattedAddress" })
  formattedAddress?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "irs_score" })
  irsScore?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "irs_score_explanation" })
  irsScoreExplanation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "provided_status" })
  providedStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "provided_status_explanation" })
  providedStatusExplanation?: string;
}

/**
 * Result of a EIN reverse lookup
 */
export class EinVerificationLookup200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: EinVerificationLookup200ApplicationJSONMatchedEinCompanies,
  })
  @Expose({ name: "matched_ein_companies" })
  @Type(() => EinVerificationLookup200ApplicationJSONMatchedEinCompanies)
  matchedEinCompanies?: EinVerificationLookup200ApplicationJSONMatchedEinCompanies[];

  @SpeakeasyMetadata()
  @Expose({ name: "searchterm_name" })
  searchtermName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "searchterm_state" })
  searchtermState: string;

  @SpeakeasyMetadata()
  @Expose({ name: "searchterm_zip" })
  searchtermZip: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tight_search" })
  tightSearch: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: number;
}

export class EinVerificationLookupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Result of a EIN reverse lookup
   */
  @SpeakeasyMetadata()
  einVerificationLookup200ApplicationJSONObject?: EinVerificationLookup200ApplicationJSON;

  /**
   * Detailed information about the error
   */
  @SpeakeasyMetadata()
  einVerificationLookupDefaultApplicationJSONObject?: EinVerificationLookupDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
