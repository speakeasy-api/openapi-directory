/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoalMetricRequestInput - A generic Asana Resource, containing a globally unique identifier.
 */
public class GoalMetricRequestInput {
    /**
     * ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency_code")
    public String currencyCode;

    public GoalMetricRequestInput withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * This number is the current value of a goal metric of type number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("current_number_value")
    public Double currentNumberValue;

    public GoalMetricRequestInput withCurrentNumberValue(Double currentNumberValue) {
        this.currentNumberValue = currentNumberValue;
        return this;
    }
    
    /**
     * This number is the start value of a goal metric of type number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initial_number_value")
    public Double initialNumberValue;

    public GoalMetricRequestInput withInitialNumberValue(Double initialNumberValue) {
        this.initialNumberValue = initialNumberValue;
        return this;
    }
    
    /**
     * *Conditional*. Only relevant for goal metrics of type \u2018Number\u2019. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
     * For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("precision")
    public Long precision;

    public GoalMetricRequestInput withPrecision(Long precision) {
        this.precision = precision;
        return this;
    }
    
    /**
     * This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, calculated automatically from contributing subgoals or projects, or managed by an integration with an external data source, such as Salesforce.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progress_source")
    public GoalMetricRequestProgressSourceEnum progressSource;

    public GoalMetricRequestInput withProgressSource(GoalMetricRequestProgressSourceEnum progressSource) {
        this.progressSource = progressSource;
        return this;
    }
    
    /**
     * This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_number_value")
    public Double targetNumberValue;

    public GoalMetricRequestInput withTargetNumberValue(Double targetNumberValue) {
        this.targetNumberValue = targetNumberValue;
        return this;
    }
    
    /**
     * A supported unit of measure for the goal metric, or none.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public GoalMetricRequestUnitEnum unit;

    public GoalMetricRequestInput withUnit(GoalMetricRequestUnitEnum unit) {
        this.unit = unit;
        return this;
    }
    
    public GoalMetricRequestInput(){}
}
