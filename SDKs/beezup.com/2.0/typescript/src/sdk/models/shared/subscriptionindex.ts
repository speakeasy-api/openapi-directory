/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConsumptionAvailabilityStatusEnum } from "./consumptionavailabilitystatusenum";
import { ErrorResponseMessage } from "./errorresponsemessage";
import { SubscriptionLinks } from "./subscriptionlinks";
import { SubscriptionStatusEnum } from "./subscriptionstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The subscription definition
 */
export class SubscriptionIndex extends SpeakeasyBase {
  /**
   * The subscription consumption status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerHealthStatus" })
  consumerHealthStatus?: ConsumptionAvailabilityStatusEnum;

  /**
   * The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerLastRequestSentUri" })
  consumerLastRequestSentUri?: string;

  /**
   * This date indicates since when the subscription consumer is unavailable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consumerUnvailableSinceUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  consumerUnvailableSinceUtcDate?: Date;

  /**
   * The identifier of the subscription to the orders for a merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastErrorMessage" })
  @Type(() => ErrorResponseMessage)
  lastErrorMessage?: ErrorResponseMessage;

  /**
   * This modification date correspond to the last order pushed by your subscription consumer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastOrderPushedModificationUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastOrderPushedModificationUtcDate?: Date;

  /**
   * The last date we retry to send orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastRetryUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastRetryUtcDate?: Date;

  /**
   * The date of the last pushed order successfully received by your subscription consumer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSuccessfulOrderPushedUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSuccessfulOrderPushedUtcDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => SubscriptionLinks)
  links?: SubscriptionLinks;

  /**
   * The maximum BeezUP will retry to push orders. When we the retry count will reach maximum retry count, the subscription will be deactivated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxRetryCount" })
  maxRetryCount?: number;

  /**
   * The name of your application
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantApplicationName" })
  merchantApplicationName: string;

  /**
   * The version of your application
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantApplicationVersion" })
  merchantApplicationVersion: string;

  /**
   * The email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantEmailAlert" })
  merchantEmailAlert?: string;

  /**
   * The subscription name you want to use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The next scheduled  date we retry to send orders
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextScheduledRetryUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextScheduledRetryUtcDate?: Date;

  /**
   * Recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recoverBeginPeriodOrderLastModificationUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recoverBeginPeriodOrderLastModificationUtcDate?: Date;

  /**
   * Recover existing orders using the begin and the end period order last modification date.
   *
   * @remarks
   * Otherwise, you will receive new/updated orders in real-time.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recoverEndPeriodOrderLastModificationUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  recoverEndPeriodOrderLastModificationUtcDate?: Date;

  /**
   * The retry count. When we the retry count will reach maximum retry count, the subscription will be deactivated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retryCount" })
  retryCount?: number;

  /**
   * The status of your subscription
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: SubscriptionStatusEnum;

  /**
   * The URL <a href="https://en.wikipedia.org/wiki/URL">https://en.wikipedia.org/wiki/URL</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetUrl" })
  targetUrl: string;
}
