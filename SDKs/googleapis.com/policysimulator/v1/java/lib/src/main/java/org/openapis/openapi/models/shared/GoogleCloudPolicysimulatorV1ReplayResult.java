/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudPolicysimulatorV1ReplayResult - The result of replaying a single access tuple against a simulated state.
 */
public class GoogleCloudPolicysimulatorV1ReplayResult {
    /**
     * Information about the principal, resource, and permission to check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessTuple")
    public GoogleCloudPolicysimulatorV1AccessTuple accessTuple;
    public GoogleCloudPolicysimulatorV1ReplayResult withAccessTuple(GoogleCloudPolicysimulatorV1AccessTuple accessTuple) {
        this.accessTuple = accessTuple;
        return this;
    }
    
    /**
     * The difference between the results of evaluating an access tuple under the current (baseline) policies and under the proposed (simulated) policies. This difference explains how a principal's access could change if the proposed policies were applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diff")
    public GoogleCloudPolicysimulatorV1ReplayDiff diff;
    public GoogleCloudPolicysimulatorV1ReplayResult withDiff(GoogleCloudPolicysimulatorV1ReplayDiff diff) {
        this.diff = diff;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public GoogleRpcStatus error;
    public GoogleCloudPolicysimulatorV1ReplayResult withError(GoogleRpcStatus error) {
        this.error = error;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastSeenDate")
    public GoogleTypeDate lastSeenDate;
    public GoogleCloudPolicysimulatorV1ReplayResult withLastSeenDate(GoogleTypeDate lastSeenDate) {
        this.lastSeenDate = lastSeenDate;
        return this;
    }
    
    /**
     * The resource name of the `ReplayResult`, in the following format: `{projects|folders|organizations}/{resource-id}/locations/global/replays/{replay-id}/results/{replay-result-id}`, where `{resource-id}` is the ID of the project, folder, or organization that owns the Replay. Example: `projects/my-example-project/locations/global/replays/506a5f7f-38ce-4d7d-8e03-479ce1833c36/results/1234`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleCloudPolicysimulatorV1ReplayResult withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Replay that the access tuple was included in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;
    public GoogleCloudPolicysimulatorV1ReplayResult withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
}
