// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListBotsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListBotsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListBotsRequestBodySortBy - Specifies attributes for sorting a list of bots.
type ListBotsRequestBodySortBy struct {
	Attribute *shared.BotSortAttributeEnum `json:"attribute,omitempty"`
	Order     *shared.SortOrderEnum        `json:"order,omitempty"`
}

type ListBotsRequestBody struct {
	// Provides the specification of a filter used to limit the bots in the response to only those that match the filter specification. You can only specify one filter and one string to filter on.
	Filters []shared.BotFilter `json:"filters,omitempty"`
	// The maximum number of bots to return in each page of results. If there are fewer results than the maximum page size, only the actual number of results are returned.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// <p>If the response from the <code>ListBots</code> operation contains more results than specified in the <code>maxResults</code> parameter, a token is returned in the response. </p> <p>Use the returned token in the <code>nextToken</code> parameter of a <code>ListBots</code> request to return the next page of results. For a complete set of results, call the <code>ListBots</code> operation until the <code>nextToken</code> returned in the response is null.</p>
	NextToken *string `json:"nextToken,omitempty"`
	// Specifies attributes for sorting a list of bots.
	SortBy *ListBotsRequestBodySortBy `json:"sortBy,omitempty"`
}

type ListBotsRequest struct {
	QueryParams ListBotsQueryParams
	Headers     ListBotsHeaders
	Request     ListBotsRequestBody `request:"mediaType=application/json"`
}

type ListBotsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListBotsResponse *shared.ListBotsResponse
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
