/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProjectDTOv1 - Success
 */
public class ProjectDTOv1 {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoriesIds")
    public Long[] categoriesIds;

    public ProjectDTOv1 withCategoriesIds(Long[] categoriesIds) {
        this.categoriesIds = categoriesIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactPersonId")
    public Long contactPersonId;

    public ProjectDTOv1 withContactPersonId(Long contactPersonId) {
        this.contactPersonId = contactPersonId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contacts")
    public ContactsDTO contacts;

    public ProjectDTOv1 withContacts(ContactsDTO contacts) {
        this.contacts = contacts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public CustomFieldDTO[] customFields;

    public ProjectDTOv1 withCustomFields(CustomFieldDTO[] customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public Long customerId;

    public ProjectDTOv1 withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dates")
    public ProjectDatesDTO dates;

    public ProjectDTOv1 withDates(ProjectDatesDTO dates) {
        this.dates = dates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("finance")
    public FinanceDTO finance;

    public ProjectDTOv1 withFinance(FinanceDTO finance) {
        this.finance = finance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public ProjectDTOv1 withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idNumber")
    public String idNumber;

    public ProjectDTOv1 withIdNumber(String idNumber) {
        this.idNumber = idNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instructions")
    public InstructionsDTO instructions;

    public ProjectDTOv1 withInstructions(InstructionsDTO instructions) {
        this.instructions = instructions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isClassicProject")
    public Boolean isClassicProject;

    public ProjectDTOv1 withIsClassicProject(Boolean isClassicProject) {
        this.isClassicProject = isClassicProject;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ProjectDTOv1 withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectId")
    public String projectId;

    public ProjectDTOv1 withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectManagerId")
    public Long projectManagerId;

    public ProjectDTOv1 withProjectManagerId(Long projectManagerId) {
        this.projectManagerId = projectManagerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("specializationId")
    public Long specializationId;

    public ProjectDTOv1 withSpecializationId(Long specializationId) {
        this.specializationId = specializationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ProjectDTOv1StatusEnum status;

    public ProjectDTOv1 withStatus(ProjectDTOv1StatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tasks")
    public TaskDTO[] tasks;

    public ProjectDTOv1 withTasks(TaskDTO[] tasks) {
        this.tasks = tasks;
        return this;
    }
    
    public ProjectDTOv1(){}
}
