<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TaskGroupInput - A TaskGroup contains one or multiple Tasks that share the same Runnable but with different runtime parameters.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TaskGroupInput
{
    /**
     * Max number of tasks that can run in parallel. Default to min(task_count, 1000). Field parallelism must be 1 if the scheduling_policy is IN_ORDER.
     * 
     * @var ?string $parallelism
     */
	#[\JMS\Serializer\Annotation\SerializedName('parallelism')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parallelism = null;
    
    /**
     * When true, Batch will configure SSH to allow passwordless login between VMs running the Batch tasks in the same TaskGroup.
     * 
     * @var ?bool $permissiveSsh
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissiveSsh')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $permissiveSsh = null;
    
    /**
     * When true, Batch will populate a file with a list of all VMs assigned to the TaskGroup and set the BATCH_HOSTS_FILE environment variable to the path of that file. Defaults to false.
     * 
     * @var ?bool $requireHostsFile
     */
	#[\JMS\Serializer\Annotation\SerializedName('requireHostsFile')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireHostsFile = null;
    
    /**
     * Number of Tasks in the TaskGroup. Default is 1.
     * 
     * @var ?string $taskCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskCount = null;
    
    /**
     * Max number of tasks that can be run on a VM at the same time. If not specified, the system will decide a value based on available compute resources on a VM and task requirements.
     * 
     * @var ?string $taskCountPerNode
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskCountPerNode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskCountPerNode = null;
    
    /**
     * An array of environment variable mappings, which are passed to Tasks with matching indices. If task_environments is used then task_count should not be specified in the request (and will be ignored). Task count will be the length of task_environments. Tasks get a BATCH_TASK_INDEX and BATCH_TASK_COUNT environment variable, in addition to any environment variables set in task_environments, specifying the number of Tasks in the Task's parent TaskGroup, and the specific Task's index in the TaskGroup (0 through BATCH_TASK_COUNT - 1). task_environments supports up to 200 entries.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Environment> $taskEnvironments
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskEnvironments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Environment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taskEnvironments = null;
    
    /**
     * Spec of a task
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TaskSpec $taskSpec
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskSpec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TaskSpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TaskSpec $taskSpec = null;
    
	public function __construct()
	{
		$this->parallelism = null;
		$this->permissiveSsh = null;
		$this->requireHostsFile = null;
		$this->taskCount = null;
		$this->taskCountPerNode = null;
		$this->taskEnvironments = null;
		$this->taskSpec = null;
	}
}
