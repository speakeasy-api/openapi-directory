"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import imagedatalist as shared_imagedatalist
from ..shared import security as shared_security
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetImageListSecurity:
    
    basic: Optional[shared_security.SchemeBasic] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    customer_access_code: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetImageListViewEnum(str, Enum):
    r"""Amount of detail to render in the response"""
    MINIMAL = 'minimal'
    FULL = 'full'


@dataclasses.dataclass
class GetImageListRequest:
    
    id: list[str] = dataclasses.field(metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""One or more image IDs"""  
    search_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search_id', 'style': 'form', 'explode': True }})
    r"""The ID of the search that is related to this request"""  
    view: Optional[GetImageListViewEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'view', 'style': 'form', 'explode': True }})
    r"""Amount of detail to render in the response"""  
    

@dataclasses.dataclass
class GetImageListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    image_data_list: Optional[shared_imagedatalist.ImageDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    