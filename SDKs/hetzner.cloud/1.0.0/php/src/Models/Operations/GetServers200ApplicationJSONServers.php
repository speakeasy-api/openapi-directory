<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetServers200ApplicationJSONServers
{
    /**
     * Time window (UTC) in which the backup will run, or null if the backups are not enabled
     * 
     * @var string $backupWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('backup_window')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $backupWindow;
    
    /**
     * Point in time when the Resource was created (in ISO-8601 format)
     * 
     * @var string $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $created;
    
    /**
     * Datacenter this Resource is located at
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersDatacenter $datacenter
     */
	#[\JMS\Serializer\Annotation\SerializedName('datacenter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersDatacenter')]
    public GetServers200ApplicationJSONServersDatacenter $datacenter;
    
    /**
     * ID of the Resource
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersImage')]
    public GetServers200ApplicationJSONServersImage $image;
    
    /**
     * Free Traffic for the current billing period in bytes
     * 
     * @var float $includedTraffic
     */
	#[\JMS\Serializer\Annotation\SerializedName('included_traffic')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $includedTraffic;
    
    /**
     * Inbound Traffic for the current billing period in bytes
     * 
     * @var float $ingoingTraffic
     */
	#[\JMS\Serializer\Annotation\SerializedName('ingoing_traffic')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $ingoingTraffic;
    
    /**
     * ISO Image that is attached to this Server. Null if no ISO is attached.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersIso $iso
     */
	#[\JMS\Serializer\Annotation\SerializedName('iso')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersIso')]
    public GetServers200ApplicationJSONServersIso $iso;
    
    /**
     * User-defined labels (key-value pairs)
     * 
     * @var array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $labels;
    
    /**
     * $loadBalancers
     * 
     * @var ?array<int> $loadBalancers
     */
	#[\JMS\Serializer\Annotation\SerializedName('load_balancers')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $loadBalancers = null;
    
    /**
     * True if Server has been locked and is not available to user
     * 
     * @var bool $locked
     */
	#[\JMS\Serializer\Annotation\SerializedName('locked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $locked;
    
    /**
     * Name of the Server (must be unique per Project and a valid hostname as per RFC 1123)
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Outbound Traffic for the current billing period in bytes
     * 
     * @var float $outgoingTraffic
     */
	#[\JMS\Serializer\Annotation\SerializedName('outgoing_traffic')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $outgoingTraffic;
    
	#[\JMS\Serializer\Annotation\SerializedName('placement_group')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersPlacementGroupNullable')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetServers200ApplicationJSONServersPlacementGroupNullable $placementGroup = null;
    
    /**
     * Size of the primary Disk
     * 
     * @var float $primaryDiskSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary_disk_size')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $primaryDiskSize;
    
    /**
     * Private networks information
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersPrivateNet> $privateNet
     */
	#[\JMS\Serializer\Annotation\SerializedName('private_net')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersPrivateNet>')]
    public array $privateNet;
    
    /**
     * Protection configuration for the Server
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersProtection $protection
     */
	#[\JMS\Serializer\Annotation\SerializedName('protection')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersProtection')]
    public GetServers200ApplicationJSONServersProtection $protection;
    
    /**
     * Public network information. The Server's IPv4 address can be found in `public_net->ipv4->ip`
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersPublicNet $publicNet
     */
	#[\JMS\Serializer\Annotation\SerializedName('public_net')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersPublicNet')]
    public GetServers200ApplicationJSONServersPublicNet $publicNet;
    
    /**
     * True if rescue mode is enabled. Server will then boot into rescue system on next reboot
     * 
     * @var bool $rescueEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('rescue_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $rescueEnabled;
    
    /**
     * Type of Server - determines how much ram, disk and cpu a Server has
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersServerType $serverType
     */
	#[\JMS\Serializer\Annotation\SerializedName('server_type')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersServerType')]
    public GetServers200ApplicationJSONServersServerType $serverType;
    
    /**
     * Status of the Server
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersStatusEnum>')]
    public GetServers200ApplicationJSONServersStatusEnum $status;
    
    /**
     * IDs of Volumes assigned to this Server
     * 
     * @var ?array<int> $volumes
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumes')]
    #[\JMS\Serializer\Annotation\Type('array<int>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $volumes = null;
    
	public function __construct()
	{
		$this->backupWindow = "";
		$this->created = "";
		$this->datacenter = new \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersDatacenter();
		$this->id = 0;
		$this->image = new \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersImage();
		$this->includedTraffic = 0;
		$this->ingoingTraffic = 0;
		$this->iso = new \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersIso();
		$this->labels = [];
		$this->loadBalancers = null;
		$this->locked = false;
		$this->name = "";
		$this->outgoingTraffic = 0;
		$this->placementGroup = null;
		$this->primaryDiskSize = 0;
		$this->privateNet = [];
		$this->protection = new \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersProtection();
		$this->publicNet = new \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersPublicNet();
		$this->rescueEnabled = false;
		$this->serverType = new \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersServerType();
		$this->status = \OpenAPI\OpenAPI\Models\Operations\GetServers200ApplicationJSONServersStatusEnum::RUNNING;
		$this->volumes = null;
	}
}
