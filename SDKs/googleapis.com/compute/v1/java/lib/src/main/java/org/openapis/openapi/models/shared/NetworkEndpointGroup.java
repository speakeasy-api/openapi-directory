/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NetworkEndpointGroup - Represents a collection of network endpoints. A network endpoint group (NEG) defines how a set of endpoints should be reached, whether they are reachable, and where they are located. For more information about using NEGs, see Setting up external HTTP(S) Load Balancing with internet NEGs, Setting up zonal NEGs, or Setting up external HTTP(S) Load Balancing with serverless NEGs.
 */
public class NetworkEndpointGroup {
    /**
     * Metadata defined as annotations on the network endpoint group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public NetworkEndpointGroup withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Configuration for an App Engine network endpoint group (NEG). The service is optional, may be provided explicitly or in the URL mask. The version is optional and can only be provided explicitly or in the URL mask when service is present. Note: App Engine service must be in the same project and located in the same region as the Serverless NEG.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appEngine")
    public NetworkEndpointGroupAppEngine appEngine;

    public NetworkEndpointGroup withAppEngine(NetworkEndpointGroupAppEngine appEngine) {
        this.appEngine = appEngine;
        return this;
    }
    
    /**
     * Configuration for a Cloud Function network endpoint group (NEG). The function must be provided explicitly or in the URL mask. Note: Cloud Function must be in the same project and located in the same region as the Serverless NEG.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudFunction")
    public NetworkEndpointGroupCloudFunction cloudFunction;

    public NetworkEndpointGroup withCloudFunction(NetworkEndpointGroupCloudFunction cloudFunction) {
        this.cloudFunction = cloudFunction;
        return this;
    }
    
    /**
     * Configuration for a Cloud Run network endpoint group (NEG). The service must be provided explicitly or in the URL mask. The tag is optional, may be provided explicitly or in the URL mask. Note: Cloud Run service must be in the same project and located in the same region as the Serverless NEG.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudRun")
    public NetworkEndpointGroupCloudRun cloudRun;

    public NetworkEndpointGroup withCloudRun(NetworkEndpointGroupCloudRun cloudRun) {
        this.cloudRun = cloudRun;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public NetworkEndpointGroup withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * The default port used if the port number is not specified in the network endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultPort")
    public Integer defaultPort;

    public NetworkEndpointGroup withDefaultPort(Integer defaultPort) {
        this.defaultPort = defaultPort;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public NetworkEndpointGroup withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public NetworkEndpointGroup withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#networkEndpointGroup for network endpoint group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public NetworkEndpointGroup withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NetworkEndpointGroup withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The URL of the network to which all network endpoints in the NEG belong. Uses "default" project network if unspecified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public NetworkEndpointGroup withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * Type of network endpoints in this network endpoint group. Can be one of GCE_VM_IP, GCE_VM_IP_PORT, NON_GCP_PRIVATE_IP_PORT, INTERNET_FQDN_PORT, INTERNET_IP_PORT, SERVERLESS, PRIVATE_SERVICE_CONNECT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkEndpointType")
    public NetworkEndpointGroupNetworkEndpointTypeEnum networkEndpointType;

    public NetworkEndpointGroup withNetworkEndpointType(NetworkEndpointGroupNetworkEndpointTypeEnum networkEndpointType) {
        this.networkEndpointType = networkEndpointType;
        return this;
    }
    
    /**
     * All data that is specifically relevant to only network endpoint groups of type PRIVATE_SERVICE_CONNECT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pscData")
    public NetworkEndpointGroupPscData pscData;

    public NetworkEndpointGroup withPscData(NetworkEndpointGroupPscData pscData) {
        this.pscData = pscData;
        return this;
    }
    
    /**
     * The target service url used to set up private service connection to a Google API or a PSC Producer Service Attachment. An example value is: "asia-northeast3-cloudkms.googleapis.com"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pscTargetService")
    public String pscTargetService;

    public NetworkEndpointGroup withPscTargetService(String pscTargetService) {
        this.pscTargetService = pscTargetService;
        return this;
    }
    
    /**
     * [Output Only] The URL of the region where the network endpoint group is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public NetworkEndpointGroup withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public NetworkEndpointGroup withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output only] Number of network endpoints in the network endpoint group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Integer size;

    public NetworkEndpointGroup withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    /**
     * Optional URL of the subnetwork to which all network endpoints in the NEG belong.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;

    public NetworkEndpointGroup withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    /**
     * [Output Only] The URL of the zone where the network endpoint group is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;

    public NetworkEndpointGroup withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
    public NetworkEndpointGroup(){}
}
