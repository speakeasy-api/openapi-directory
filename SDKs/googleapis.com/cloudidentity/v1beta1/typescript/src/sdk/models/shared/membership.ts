/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityKey } from "./entitykey";
import { MembershipRole, MembershipRoleInput } from "./membershiprole";
import { Expose, Type } from "class-transformer";

/**
 * Output only. Delivery setting associated with the membership.
 */
export enum MembershipDeliverySettingEnum {
  DeliverySettingUnspecified = "DELIVERY_SETTING_UNSPECIFIED",
  AllMail = "ALL_MAIL",
  Digest = "DIGEST",
  Daily = "DAILY",
  None = "NONE",
  Disabled = "DISABLED",
}

/**
 * Output only. The type of the membership.
 */
export enum MembershipTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  User = "USER",
  ServiceAccount = "SERVICE_ACCOUNT",
  Group = "GROUP",
  SharedDrive = "SHARED_DRIVE",
  Other = "OTHER",
}

/**
 * A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
 */
export class Membership extends SpeakeasyBase {
  /**
   * Output only. The time when the `Membership` was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. Delivery setting associated with the membership.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliverySetting" })
  deliverySetting?: MembershipDeliverySettingEnum;

  /**
   * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memberKey" })
  @Type(() => EntityKey)
  memberKey?: EntityKey;

  /**
   * Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group_id}/memberships/{membership_id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preferredMemberKey" })
  @Type(() => EntityKey)
  preferredMemberKey?: EntityKey;

  /**
   * The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
   */
  @SpeakeasyMetadata({ elemType: MembershipRole })
  @Expose({ name: "roles" })
  @Type(() => MembershipRole)
  roles?: MembershipRole[];

  /**
   * Output only. The type of the membership.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: MembershipTypeEnum;

  /**
   * Output only. The time when the `Membership` was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
 */
export class MembershipInput extends SpeakeasyBase {
  /**
   * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memberKey" })
  @Type(() => EntityKey)
  memberKey?: EntityKey;

  /**
   * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preferredMemberKey" })
  @Type(() => EntityKey)
  preferredMemberKey?: EntityKey;

  /**
   * The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
   */
  @SpeakeasyMetadata({ elemType: MembershipRoleInput })
  @Expose({ name: "roles" })
  @Type(() => MembershipRoleInput)
  roles?: MembershipRoleInput[];
}
