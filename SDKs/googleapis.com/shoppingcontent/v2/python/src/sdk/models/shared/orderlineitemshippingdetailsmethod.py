"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderLineItemShippingDetailsMethod:
    
    carrier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier'), 'exclude': lambda f: f is None }})
    r"""The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values."""  
    max_days_in_transit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxDaysInTransit'), 'exclude': lambda f: f is None }})
    r"""Required. Maximum transit time."""  
    method_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('methodName'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the shipping method."""  
    min_days_in_transit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minDaysInTransit'), 'exclude': lambda f: f is None }})
    r"""Required. Minimum transit time."""  
    