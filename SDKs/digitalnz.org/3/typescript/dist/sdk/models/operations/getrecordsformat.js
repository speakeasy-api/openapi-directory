"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetRecordsFormatResponse = exports.GetRecordsFormat200ApplicationJSON = exports.GetRecordsFormatRequest = exports.GetRecordsFormatSortEnum = exports.GetRecordsFormatFacetsEnum = exports.GetRecordsFormatDirectionEnum = exports.GetRecordsFormatAndUsageEnum = exports.GetRecordsFormatAndHasLatLngEnum = exports.GetRecordsFormatAndHasLargeThumbnailUrlEnum = exports.GetRecordsFormatAndCategoryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
/**
 * These are the same categories that are used across the tabs in [digitalnz.org](https://digitalnz.org/records?text=&tab=Videos)
 */
var GetRecordsFormatAndCategoryEnum;
(function (GetRecordsFormatAndCategoryEnum) {
    GetRecordsFormatAndCategoryEnum["Newspapers"] = "Newspapers";
    GetRecordsFormatAndCategoryEnum["Images"] = "Images";
    GetRecordsFormatAndCategoryEnum["Books"] = "Books";
    GetRecordsFormatAndCategoryEnum["Articles"] = "Articles";
    GetRecordsFormatAndCategoryEnum["Journals"] = "Journals";
    GetRecordsFormatAndCategoryEnum["Archives"] = "Archives";
    GetRecordsFormatAndCategoryEnum["Audio"] = "Audio";
    GetRecordsFormatAndCategoryEnum["Other"] = "Other";
    GetRecordsFormatAndCategoryEnum["Manuscripts"] = "Manuscripts";
    GetRecordsFormatAndCategoryEnum["ReferenceSources"] = "Reference sources";
    GetRecordsFormatAndCategoryEnum["ResearchPapers"] = "Research papers";
    GetRecordsFormatAndCategoryEnum["Videos"] = "Videos";
    GetRecordsFormatAndCategoryEnum["MusicScore"] = "Music Score";
    GetRecordsFormatAndCategoryEnum["Groups"] = "Groups";
    GetRecordsFormatAndCategoryEnum["Data"] = "Data";
    GetRecordsFormatAndCategoryEnum["Websites"] = "Websites";
    GetRecordsFormatAndCategoryEnum["Sets"] = "Sets";
})(GetRecordsFormatAndCategoryEnum = exports.GetRecordsFormatAndCategoryEnum || (exports.GetRecordsFormatAndCategoryEnum = {}));
/**
 * Filters results to only those records that have an image available in the *large_thumbnail_url* field.
 *
 * @remarks
 * **Note:** There is an issue with this field where, in order to get results, it needs to be specified with "Y" or not specified at all.
 *
 */
var GetRecordsFormatAndHasLargeThumbnailUrlEnum;
(function (GetRecordsFormatAndHasLargeThumbnailUrlEnum) {
    GetRecordsFormatAndHasLargeThumbnailUrlEnum["Y"] = "Y";
})(GetRecordsFormatAndHasLargeThumbnailUrlEnum = exports.GetRecordsFormatAndHasLargeThumbnailUrlEnum || (exports.GetRecordsFormatAndHasLargeThumbnailUrlEnum = {}));
/**
 * Filters results to only those records that have latitude and longitude coordinates present in the metadata.
 *
 * @remarks
 *
 * *Tip* - To see the location metadata you'll need to specifically request that field using the *fields* parameter - *"&fields=verbose,locations"*  as it is not part of the default, or verbose field sets.
 *
 */
var GetRecordsFormatAndHasLatLngEnum;
(function (GetRecordsFormatAndHasLatLngEnum) {
    GetRecordsFormatAndHasLatLngEnum["True"] = "true";
    GetRecordsFormatAndHasLatLngEnum["False"] = "false";
})(GetRecordsFormatAndHasLatLngEnum = exports.GetRecordsFormatAndHasLatLngEnum || (exports.GetRecordsFormatAndHasLatLngEnum = {}));
var GetRecordsFormatAndUsageEnum;
(function (GetRecordsFormatAndUsageEnum) {
    GetRecordsFormatAndUsageEnum["Share"] = "Share";
    GetRecordsFormatAndUsageEnum["Modify"] = "Modify";
    GetRecordsFormatAndUsageEnum["UseCommercially"] = "Use commercially";
    GetRecordsFormatAndUsageEnum["AllRightsReserved"] = "All rights reserved";
    GetRecordsFormatAndUsageEnum["Unknown"] = "Unknown";
})(GetRecordsFormatAndUsageEnum = exports.GetRecordsFormatAndUsageEnum || (exports.GetRecordsFormatAndUsageEnum = {}));
/**
 * Used in conjunction with *sort* to order the results
 *
 * @remarks
 *  - *asc* - Ascending, oldest first.
 *  - *desc* - Descending, newest first.
 *
 */
var GetRecordsFormatDirectionEnum;
(function (GetRecordsFormatDirectionEnum) {
    GetRecordsFormatDirectionEnum["Asc"] = "asc";
    GetRecordsFormatDirectionEnum["Desc"] = "desc";
})(GetRecordsFormatDirectionEnum = exports.GetRecordsFormatDirectionEnum || (exports.GetRecordsFormatDirectionEnum = {}));
var GetRecordsFormatFacetsEnum;
(function (GetRecordsFormatFacetsEnum) {
    GetRecordsFormatFacetsEnum["Category"] = "category";
    GetRecordsFormatFacetsEnum["ContentPartner"] = "content_partner";
    GetRecordsFormatFacetsEnum["DisplayCollection"] = "display_collection";
    GetRecordsFormatFacetsEnum["Collection"] = "collection";
    GetRecordsFormatFacetsEnum["Creator"] = "creator";
    GetRecordsFormatFacetsEnum["Placename"] = "placename";
    GetRecordsFormatFacetsEnum["Date"] = "date";
    GetRecordsFormatFacetsEnum["Year"] = "year";
    GetRecordsFormatFacetsEnum["Decade"] = "decade";
    GetRecordsFormatFacetsEnum["Century"] = "century";
    GetRecordsFormatFacetsEnum["Language"] = "language";
    GetRecordsFormatFacetsEnum["Rights"] = "rights";
    GetRecordsFormatFacetsEnum["Usage"] = "usage";
    GetRecordsFormatFacetsEnum["Copyright"] = "copyright";
    GetRecordsFormatFacetsEnum["Subject"] = "subject";
    GetRecordsFormatFacetsEnum["Format"] = "format";
    GetRecordsFormatFacetsEnum["DcType"] = "dc_type";
})(GetRecordsFormatFacetsEnum = exports.GetRecordsFormatFacetsEnum || (exports.GetRecordsFormatFacetsEnum = {}));
/**
 * Used to control the order of the results in conjunction with the *direction* field.
 *
 * @remarks
 *   - *syndication_date* - is the creation date of the record within DigitalNZ, ie. when DigitalNZ first harvested the record.
 *   - *date* - is the date metadata (if present) associated with the record.
 *
 * To sort the search results with newest records at the top use: "&sort=syndication_date&direction=desc"
 *
 */
var GetRecordsFormatSortEnum;
(function (GetRecordsFormatSortEnum) {
    GetRecordsFormatSortEnum["SyndicationDate"] = "syndication_date";
    GetRecordsFormatSortEnum["Date"] = "date";
})(GetRecordsFormatSortEnum = exports.GetRecordsFormatSortEnum || (exports.GetRecordsFormatSortEnum = {}));
var GetRecordsFormatRequest = /** @class */ (function (_super) {
    __extends(GetRecordsFormatRequest, _super);
    function GetRecordsFormatRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=Authentication-Token",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "authenticationToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[category][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andCategory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[century]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andCentury", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[collection][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andCollection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[content_partner][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andContentPartner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[creator][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andCreator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[date]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[dc_type][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andDcType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[decade]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andDecade", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[format][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[has_large_thumbnail_url]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andHasLargeThumbnailUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[has_lat_lng]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andHasLatLng", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[is_commercial_use]",
        }),
        __metadata("design:type", Boolean)
    ], GetRecordsFormatRequest.prototype, "andIsCommercialUse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[or][{filter_field}][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andOrFilterField", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[placename][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andPlacename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[primary_collection][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andPrimaryCollection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[subject][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andSubject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[title][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andTitle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[usage][]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andUsage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=and[year]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "andYear", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=direction",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "direction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=exclude_filters_from_facets",
        }),
        __metadata("design:type", Boolean)
    ], GetRecordsFormatRequest.prototype, "excludeFiltersFromFacets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=facets",
        }),
        __metadata("design:type", Array)
    ], GetRecordsFormatRequest.prototype, "facets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=facets_page",
        }),
        __metadata("design:type", Number)
    ], GetRecordsFormatRequest.prototype, "facetsPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=facets_per_page",
        }),
        __metadata("design:type", Number)
    ], GetRecordsFormatRequest.prototype, "facetsPerPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=false;name=fields",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "fields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=format",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=geo_bbox",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "geoBbox", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=page" }),
        __metadata("design:type", Number)
    ], GetRecordsFormatRequest.prototype, "page", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=per_page",
        }),
        __metadata("design:type", Number)
    ], GetRecordsFormatRequest.prototype, "perPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=sort" }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=text" }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "text", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=without[{filter_field}]",
        }),
        __metadata("design:type", String)
    ], GetRecordsFormatRequest.prototype, "withoutFilterField", void 0);
    return GetRecordsFormatRequest;
}(utils_1.SpeakeasyBase));
exports.GetRecordsFormatRequest = GetRecordsFormatRequest;
/**
 * search results matching criteria
 */
var GetRecordsFormat200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetRecordsFormat200ApplicationJSON, _super);
    function GetRecordsFormat200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "facets" }),
        __metadata("design:type", Object)
    ], GetRecordsFormat200ApplicationJSON.prototype, "facets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page" }),
        __metadata("design:type", Number)
    ], GetRecordsFormat200ApplicationJSON.prototype, "page", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "per_page" }),
        __metadata("design:type", Number)
    ], GetRecordsFormat200ApplicationJSON.prototype, "perPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.RecordT }),
        (0, class_transformer_1.Expose)({ name: "records" }),
        (0, class_transformer_1.Type)(function () { return shared.RecordT; }),
        __metadata("design:type", Array)
    ], GetRecordsFormat200ApplicationJSON.prototype, "records", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "request_url" }),
        __metadata("design:type", String)
    ], GetRecordsFormat200ApplicationJSON.prototype, "requestUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "result_count" }),
        __metadata("design:type", Number)
    ], GetRecordsFormat200ApplicationJSON.prototype, "resultCount", void 0);
    return GetRecordsFormat200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetRecordsFormat200ApplicationJSON = GetRecordsFormat200ApplicationJSON;
var GetRecordsFormatResponse = /** @class */ (function (_super) {
    __extends(GetRecordsFormatResponse, _super);
    function GetRecordsFormatResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GetRecordsFormatResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetRecordsFormatResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetRecordsFormatResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetRecordsFormatResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetRecordsFormat200ApplicationJSON)
    ], GetRecordsFormatResponse.prototype, "getRecordsFormat200ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetRecordsFormatResponse.prototype, "getRecordsFormat400ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetRecordsFormatResponse.prototype, "getRecordsFormat403ApplicationJSONObject", void 0);
    return GetRecordsFormatResponse;
}(utils_1.SpeakeasyBase));
exports.GetRecordsFormatResponse = GetRecordsFormatResponse;
