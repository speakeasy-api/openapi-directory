// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LaunchStatusEnum string

const (
	LaunchStatusEnumCreated   LaunchStatusEnum = "CREATED"
	LaunchStatusEnumUpdating  LaunchStatusEnum = "UPDATING"
	LaunchStatusEnumRunning   LaunchStatusEnum = "RUNNING"
	LaunchStatusEnumCompleted LaunchStatusEnum = "COMPLETED"
	LaunchStatusEnumCancelled LaunchStatusEnum = "CANCELLED"
)

func (e LaunchStatusEnum) ToPointer() *LaunchStatusEnum {
	return &e
}

func (e *LaunchStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		*e = LaunchStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LaunchStatusEnum: %v", v)
	}
}
