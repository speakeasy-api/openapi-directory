// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateDevicePathParams struct {
	Serial string `pathParam:"style=simple,explode=false,name=serial"`
}

type UpdateDeviceRequestBody struct {
	// The address of a device
	Address *string `json:"address,omitempty"`
	// The floor plan to associate to this device. null disassociates the device from the floorplan.
	FloorPlanID *string `json:"floorPlanId,omitempty"`
	// The latitude of a device
	Lat *float32 `json:"lat,omitempty"`
	// The longitude of a device
	Lng *float32 `json:"lng,omitempty"`
	// Whether or not to set the latitude and longitude of a device based on the new address. Only applies when lat and lng are not specified.
	MoveMapMarker *bool `json:"moveMapMarker,omitempty"`
	// The name of a device
	Name *string `json:"name,omitempty"`
	// The notes for the device. String. Limited to 255 characters.
	Notes *string `json:"notes,omitempty"`
	// The ID of a switch profile to bind to the device (for available switch profiles, see the 'Switch Profiles' endpoint). Use null to unbind the switch device from the current profile. For a device to be bindable to a switch profile, it must (1) be a switch, and (2) belong to a network that is bound to a configuration template.
	SwitchProfileID *string `json:"switchProfileId,omitempty"`
	// The list of tags of a device
	Tags []string `json:"tags,omitempty"`
}

type UpdateDeviceRequest struct {
	PathParams UpdateDevicePathParams
	Request    *UpdateDeviceRequestBody `request:"mediaType=application/json"`
}

type UpdateDeviceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateDevice200ApplicationJSONObject map[string]interface{}
}
