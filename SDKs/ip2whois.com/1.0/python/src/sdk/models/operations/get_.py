"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetRequest:
    
    domain: str = dataclasses.field(metadata={'query_param': { 'field_name': 'domain', 'style': 'form', 'explode': True }})
    r"""Domain name for lookup purpose."""  
    key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key."""  
    format: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""Returns the API response in json (default) or xml format."""  
    

@dataclasses.dataclass
class GetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_200_text_html_string: Optional[str] = dataclasses.field(default=None)
    r"""Get response from IP2WHOIS"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    