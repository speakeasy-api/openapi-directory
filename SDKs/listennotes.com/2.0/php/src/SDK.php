<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
        /** API Production Server */
		'https://listen-api.listennotes.com/api/v2',
	];
  	
    /**
     * Endpoints to fetch podcasts data
     * 
     * @var DirectoryAPI $$directoryAPI
     */
	public DirectoryAPI $directoryAPI;
	
    /**
     * Endpoints to get insights of podcasts, e.g., audience demographics
     * 
     * @var InsightsAPI $$insightsAPI
     */
	public InsightsAPI $insightsAPI;
	
    /**
     * Endpoints to fetch Listen Later playlists data
     * 
     * @var PlaylistAPI $$playlistAPI
     */
	public PlaylistAPI $playlistAPI;
	
    /**
     * Endpoints to improve the podcast database
     * 
     * @var PodcasterAPI $$podcasterAPI
     */
	public PodcasterAPI $podcasterAPI;
	
    /**
     * Endpoints to search podcasts
     * 
     * @var SearchAPI $$searchAPI
     */
	public SearchAPI $searchAPI;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->directoryAPI = new DirectoryAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->insightsAPI = new InsightsAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->playlistAPI = new PlaylistAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->podcasterAPI = new PodcasterAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->searchAPI = new SearchAPI(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}