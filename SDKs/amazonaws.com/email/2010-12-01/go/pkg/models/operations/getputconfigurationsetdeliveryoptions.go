// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETPutConfigurationSetDeliveryOptionsActionEnum
type GETPutConfigurationSetDeliveryOptionsActionEnum string

const (
	GETPutConfigurationSetDeliveryOptionsActionEnumPutConfigurationSetDeliveryOptions GETPutConfigurationSetDeliveryOptionsActionEnum = "PutConfigurationSetDeliveryOptions"
)

func (e GETPutConfigurationSetDeliveryOptionsActionEnum) ToPointer() *GETPutConfigurationSetDeliveryOptionsActionEnum {
	return &e
}

func (e *GETPutConfigurationSetDeliveryOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PutConfigurationSetDeliveryOptions":
		*e = GETPutConfigurationSetDeliveryOptionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPutConfigurationSetDeliveryOptionsActionEnum: %v", v)
	}
}

// GETPutConfigurationSetDeliveryOptionsDeliveryOptions - Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).
type GETPutConfigurationSetDeliveryOptionsDeliveryOptions struct {
	TLSPolicy *shared.TLSPolicyEnum `queryParam:"name=TlsPolicy"`
}

// GETPutConfigurationSetDeliveryOptionsVersionEnum
type GETPutConfigurationSetDeliveryOptionsVersionEnum string

const (
	GETPutConfigurationSetDeliveryOptionsVersionEnumTwoThousandAndTen1201 GETPutConfigurationSetDeliveryOptionsVersionEnum = "2010-12-01"
)

func (e GETPutConfigurationSetDeliveryOptionsVersionEnum) ToPointer() *GETPutConfigurationSetDeliveryOptionsVersionEnum {
	return &e
}

func (e *GETPutConfigurationSetDeliveryOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETPutConfigurationSetDeliveryOptionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPutConfigurationSetDeliveryOptionsVersionEnum: %v", v)
	}
}

type GETPutConfigurationSetDeliveryOptionsRequest struct {
	Action GETPutConfigurationSetDeliveryOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the configuration set that you want to specify the delivery options for.
	ConfigurationSetName string `queryParam:"style=form,explode=true,name=ConfigurationSetName"`
	// Specifies whether messages that use the configuration set are required to use Transport Layer Security (TLS).
	DeliveryOptions   *GETPutConfigurationSetDeliveryOptionsDeliveryOptions `queryParam:"style=form,explode=true,name=DeliveryOptions"`
	Version           GETPutConfigurationSetDeliveryOptionsVersionEnum      `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETPutConfigurationSetDeliveryOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
