/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExperimentConfigModel } from "./experimentconfigmodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * input
 */
export class ExperimentModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "changedFieldsAndInitialValues" })
  changedFieldsAndInitialValues?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "complete" })
  complete?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => ExperimentConfigModel)
  config?: ExperimentConfigModel;

  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "measurements" })
  measurements?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "measurementsEsQuery" })
  measurementsEsQuery?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "percentHash" })
  percentHash?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publishedStages" })
  publishedStages?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;
}
