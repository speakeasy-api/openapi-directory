// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAPendingTransactionRequest struct {
	PendingTransactionID string `pathParam:"style=simple,explode=false,name=pending_transaction_id"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum = 429
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON13 struct {
	Detail     string                                                        `json:"detail"`
	RetryAfter *int64                                                        `json:"retry_after,omitempty"`
	Status     RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                        `json:"title"`
	Type       RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum = 403
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON12 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum = 404
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON11 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnumFourHundred RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum = 400
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON10 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnumFourHundred RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum = 400
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                     `json:"errors"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum = 409
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON8 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum = 401
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON7 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum = 500
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON6 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum = 403
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON5 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum = 422
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON4 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum = 409
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON3 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum = 403
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON2 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum int64

const (
	RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum = 404
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum) ToPointer() *RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON1 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Pending Transaction
	PendingTransaction *shared.PendingTransaction
}
