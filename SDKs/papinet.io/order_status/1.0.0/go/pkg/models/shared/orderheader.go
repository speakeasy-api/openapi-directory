// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OrderHeaderOrderStatusEnum string

const (
	OrderHeaderOrderStatusEnumActive    OrderHeaderOrderStatusEnum = "Active"
	OrderHeaderOrderStatusEnumCancelled OrderHeaderOrderStatusEnum = "Cancelled"
	OrderHeaderOrderStatusEnumCompleted OrderHeaderOrderStatusEnum = "Completed"
)

func (e OrderHeaderOrderStatusEnum) ToPointer() *OrderHeaderOrderStatusEnum {
	return &e
}

func (e *OrderHeaderOrderStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Active":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Completed":
		*e = OrderHeaderOrderStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderHeaderOrderStatusEnum: %v", v)
	}
}

type OrderHeader struct {
	ID                string                     `json:"id"`
	NumberOfLineItems int64                      `json:"numberOfLineItems"`
	OrderNumber       string                     `json:"orderNumber"`
	OrderStatus       OrderHeaderOrderStatusEnum `json:"orderStatus"`
}
