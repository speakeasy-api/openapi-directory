/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;
import org.openapis.openapi.utils.SpeakeasyHTTPClient;

/**
 * &lt;fullname&gt;AWS CloudHSM Service&lt;/fullname&gt; &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt;
 * https://docs.aws.amazon.com/cloudhsm/ - Amazon Web Services documentation
 */
public class SDK {
	/**
	 * SERVERS contains the list of server urls available to the SDK.
	 */
	public static final String[] SERVERS = {
        /**
         * The CloudHSM multi-region endpoint
         */
        "http://cloudhsm.{region}.amazonaws.com",
        /**
         * The CloudHSM multi-region endpoint
         */
        "https://cloudhsm.{region}.amazonaws.com",
        /**
         * The CloudHSM endpoint for China (Beijing) and China (Ningxia)
         */
        "http://cloudhsm.{region}.amazonaws.com.cn",
        /**
         * The CloudHSM endpoint for China (Beijing) and China (Ningxia)
         */
        "https://cloudhsm.{region}.amazonaws.com.cn",
	};
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
  		

	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private org.openapis.openapi.models.shared.Security _security;
	private String _serverUrl;
	private String _language = "java";
	private String _sdkVersion = "0.0.1";
	private String _genVersion = "internal";
	/**
	 * The Builder class allows the configuration of a new instance of the SDK.
	 */
	public static class Builder {
		private HTTPClient client;
		private org.openapis.openapi.models.shared.Security security;
		private String serverUrl;
		private java.util.Map<String, String> params = new java.util.HashMap<String, String>();

		private Builder() {
		}

		/**
		 * Allows the default HTTP client to be overridden with a custom implementation.
		 * @param client The HTTP client to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setClient(HTTPClient client) {
			this.client = client;
			return this;
		}
		
		/**
		 * Configures the SDK to use the provided security details.
		 * @param security The security details to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setSecurity(org.openapis.openapi.models.shared.Security security) {
			this.security = security;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL.
		 * @param serverUrl The server URL to use for all requests.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl) {
			this.serverUrl = serverUrl;
			return this;
		}
		
		/**
		 * Allows the overriding of the default server URL  with a templated URL populated with the provided parameters.
		 * @param serverUrl The server URL to use for all requests.
		 * @param params The parameters to use when templating the URL.
		 * @return The builder instance.
		 */
		public Builder setServerURL(String serverUrl, java.util.Map<String, String> params) {
			this.serverUrl = serverUrl;
			this.params = params;
			return this;
		}
		
		/**
		 * Builds a new instance of the SDK.
		 * @return The SDK instance.
		 * @throws Exception Thrown if the SDK could not be built.
		 */
		public SDK build() throws Exception {
			return new SDK(this.client, this.security, this.serverUrl, this.params);
		}
	}

	/**
	 * Get a new instance of the SDK builder to configure a new instance of the SDK.
	 * @return The SDK builder instance.
	 */
	public static Builder builder() {
		return new Builder();
	}

	private SDK(HTTPClient client, org.openapis.openapi.models.shared.Security security, String serverUrl, java.util.Map<String, String> params) throws Exception {
		this._defaultClient = client;
		
		if (this._defaultClient == null) {
			this._defaultClient = new SpeakeasyHTTPClient();
		}
		
		if (security != null) {
			this._security = security;
			this._securityClient = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, this._security);
		}
		
		if (this._securityClient == null) {
			this._securityClient = this._defaultClient;
		}

		if (serverUrl != null && !serverUrl.isBlank()) {
			this._serverUrl = org.openapis.openapi.utils.Utils.templateUrl(serverUrl, params);
		}
		
		if (this._serverUrl == null) {
			this._serverUrl = SERVERS[0];
		}
		
	}

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Adds or overwrites one or more tags for the specified AWS CloudHSM resource.&lt;/p&gt; &lt;p&gt;Each tag consists of a key and a value. Tag keys must be unique to each resource.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AddTagsToResourceResponse addTagsToResource(org.openapis.openapi.models.operations.AddTagsToResourceRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.AddTagsToResource");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AddTagsToResourceResponse res = new org.openapis.openapi.models.operations.AddTagsToResourceResponse() {{
            addTagsToResourceResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.AddTagsToResourceResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.AddTagsToResourceResponse.class);
                res.addTagsToResourceResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Creates a high-availability partition group. A high-availability partition group is a group of partitions that spans multiple physical HSMs.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateHapgResponse createHapg(org.openapis.openapi.models.operations.CreateHapgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.CreateHapg");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateHapgResponse res = new org.openapis.openapi.models.operations.CreateHapgResponse() {{
            createHapgResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CreateHapgResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CreateHapgResponse.class);
                res.createHapgResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Creates an uninitialized HSM instance.&lt;/p&gt; &lt;p&gt;There is an upfront fee charged for each HSM instance that you create with the &lt;code&gt;CreateHsm&lt;/code&gt; operation. If you accidentally provision an HSM and want to request a refund, delete the instance using the &lt;a&gt;DeleteHsm&lt;/a&gt; operation, go to the &lt;a href="https://console.aws.amazon.com/support/home"&gt;AWS Support Center&lt;/a&gt;, create a new case, and select &lt;b&gt;Account and Billing Support&lt;/b&gt;.&lt;/p&gt; &lt;important&gt; &lt;p&gt;It can take up to 20 minutes to create and provision an HSM. You can monitor the status of the HSM with the &lt;a&gt;DescribeHsm&lt;/a&gt; operation. The HSM is ready to be initialized when the status changes to &lt;code&gt;RUNNING&lt;/code&gt;.&lt;/p&gt; &lt;/important&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateHsmResponse createHsm(org.openapis.openapi.models.operations.CreateHsmRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.CreateHsm");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateHsmResponse res = new org.openapis.openapi.models.operations.CreateHsmResponse() {{
            createHsmResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CreateHsmResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CreateHsmResponse.class);
                res.createHsmResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Creates an HSM client.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateLunaClientResponse createLunaClient(org.openapis.openapi.models.operations.CreateLunaClientRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.CreateLunaClient");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateLunaClientResponse res = new org.openapis.openapi.models.operations.CreateLunaClientResponse() {{
            createLunaClientResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.CreateLunaClientResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.CreateLunaClientResponse.class);
                res.createLunaClientResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Deletes a high-availability partition group.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteHapgResponse deleteHapg(org.openapis.openapi.models.operations.DeleteHapgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.DeleteHapg");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteHapgResponse res = new org.openapis.openapi.models.operations.DeleteHapgResponse() {{
            deleteHapgResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.DeleteHapgResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.DeleteHapgResponse.class);
                res.deleteHapgResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Deletes an HSM. After completion, this operation cannot be undone and your key material cannot be recovered.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteHsmResponse deleteHsm(org.openapis.openapi.models.operations.DeleteHsmRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.DeleteHsm");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteHsmResponse res = new org.openapis.openapi.models.operations.DeleteHsmResponse() {{
            deleteHsmResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.DeleteHsmResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.DeleteHsmResponse.class);
                res.deleteHsmResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Deletes a client.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteLunaClientResponse deleteLunaClient(org.openapis.openapi.models.operations.DeleteLunaClientRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.DeleteLunaClient");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteLunaClientResponse res = new org.openapis.openapi.models.operations.DeleteLunaClientResponse() {{
            deleteLunaClientResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.DeleteLunaClientResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.DeleteLunaClientResponse.class);
                res.deleteLunaClientResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Retrieves information about a high-availability partition group.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DescribeHapgResponse describeHapg(org.openapis.openapi.models.operations.DescribeHapgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.DescribeHapg");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DescribeHapgResponse res = new org.openapis.openapi.models.operations.DescribeHapgResponse() {{
            describeHapgResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.DescribeHapgResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.DescribeHapgResponse.class);
                res.describeHapgResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Retrieves information about an HSM. You can identify the HSM by its ARN or its serial number.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DescribeHsmResponse describeHsm(org.openapis.openapi.models.operations.DescribeHsmRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.DescribeHsm");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DescribeHsmResponse res = new org.openapis.openapi.models.operations.DescribeHsmResponse() {{
            describeHsmResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.DescribeHsmResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.DescribeHsmResponse.class);
                res.describeHsmResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Retrieves information about an HSM client.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DescribeLunaClientResponse describeLunaClient(org.openapis.openapi.models.operations.DescribeLunaClientRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.DescribeLunaClient");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DescribeLunaClientResponse res = new org.openapis.openapi.models.operations.DescribeLunaClientResponse() {{
            describeLunaClientResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.DescribeLunaClientResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.DescribeLunaClientResponse.class);
                res.describeLunaClientResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Gets the configuration files necessary to connect to all high availability partition groups the client is associated with.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetConfigResponse getConfig(org.openapis.openapi.models.operations.GetConfigRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.GetConfig");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetConfigResponse res = new org.openapis.openapi.models.operations.GetConfigResponse() {{
            getConfigResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GetConfigResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GetConfigResponse.class);
                res.getConfigResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Lists the Availability Zones that have available AWS CloudHSM capacity.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListAvailableZonesResponse listAvailableZones(org.openapis.openapi.models.operations.ListAvailableZonesRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ListAvailableZones");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListAvailableZonesResponse res = new org.openapis.openapi.models.operations.ListAvailableZonesResponse() {{
            listAvailableZonesResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListAvailableZonesResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListAvailableZonesResponse.class);
                res.listAvailableZonesResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Lists the high-availability partition groups for the account.&lt;/p&gt; &lt;p&gt;This operation supports pagination with the use of the &lt;code&gt;NextToken&lt;/code&gt; member. If more results are available, the &lt;code&gt;NextToken&lt;/code&gt; member of the response contains a token that you pass in the next call to &lt;code&gt;ListHapgs&lt;/code&gt; to retrieve the next set of items.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListHapgsResponse listHapgs(org.openapis.openapi.models.operations.ListHapgsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ListHapgs");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListHapgsResponse res = new org.openapis.openapi.models.operations.ListHapgsResponse() {{
            listHapgsResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListHapgsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListHapgsResponse.class);
                res.listHapgsResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Retrieves the identifiers of all of the HSMs provisioned for the current customer.&lt;/p&gt; &lt;p&gt;This operation supports pagination with the use of the &lt;code&gt;NextToken&lt;/code&gt; member. If more results are available, the &lt;code&gt;NextToken&lt;/code&gt; member of the response contains a token that you pass in the next call to &lt;code&gt;ListHsms&lt;/code&gt; to retrieve the next set of items.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListHsmsResponse listHsms(org.openapis.openapi.models.operations.ListHsmsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ListHsms");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListHsmsResponse res = new org.openapis.openapi.models.operations.ListHsmsResponse() {{
            listHsmsResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListHsmsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListHsmsResponse.class);
                res.listHsmsResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Lists all of the clients.&lt;/p&gt; &lt;p&gt;This operation supports pagination with the use of the &lt;code&gt;NextToken&lt;/code&gt; member. If more results are available, the &lt;code&gt;NextToken&lt;/code&gt; member of the response contains a token that you pass in the next call to &lt;code&gt;ListLunaClients&lt;/code&gt; to retrieve the next set of items.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListLunaClientsResponse listLunaClients(org.openapis.openapi.models.operations.ListLunaClientsRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ListLunaClients");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListLunaClientsResponse res = new org.openapis.openapi.models.operations.ListLunaClientsResponse() {{
            listLunaClientsResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListLunaClientsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListLunaClientsResponse.class);
                res.listLunaClientsResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Returns a list of all tags for the specified AWS CloudHSM resource.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ListTagsForResourceResponse listTagsForResource(org.openapis.openapi.models.operations.ListTagsForResourceRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ListTagsForResource");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ListTagsForResourceResponse res = new org.openapis.openapi.models.operations.ListTagsForResourceResponse() {{
            listTagsForResourceResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ListTagsForResourceResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ListTagsForResourceResponse.class);
                res.listTagsForResourceResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Modifies an existing high-availability partition group.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ModifyHapgResponse modifyHapg(org.openapis.openapi.models.operations.ModifyHapgRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ModifyHapg");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ModifyHapgResponse res = new org.openapis.openapi.models.operations.ModifyHapgResponse() {{
            modifyHapgResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ModifyHapgResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ModifyHapgResponse.class);
                res.modifyHapgResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Modifies an HSM.&lt;/p&gt; &lt;important&gt; &lt;p&gt;This operation can result in the HSM being offline for up to 15 minutes while the AWS CloudHSM service is reconfigured. If you are modifying a production HSM, you should ensure that your AWS CloudHSM service is configured for high availability, and consider executing this operation during a maintenance window.&lt;/p&gt; &lt;/important&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ModifyHsmResponse modifyHsm(org.openapis.openapi.models.operations.ModifyHsmRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ModifyHsm");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ModifyHsmResponse res = new org.openapis.openapi.models.operations.ModifyHsmResponse() {{
            modifyHsmResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ModifyHsmResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ModifyHsmResponse.class);
                res.modifyHsmResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Modifies the certificate used by the client.&lt;/p&gt; &lt;p&gt;This action can potentially start a workflow to install the new certificate on the client's HSMs.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.ModifyLunaClientResponse modifyLunaClient(org.openapis.openapi.models.operations.ModifyLunaClientRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.ModifyLunaClient");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.ModifyLunaClientResponse res = new org.openapis.openapi.models.operations.ModifyLunaClientResponse() {{
            modifyLunaClientResponse = null;
            cloudHsmServiceException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ModifyLunaClientResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ModifyLunaClientResponse.class);
                res.modifyLunaClientResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }

        return res;
    }

    /**
     * &lt;p&gt;This is documentation for &lt;b&gt;AWS CloudHSM Classic&lt;/b&gt;. For more information, see &lt;a href="http://aws.amazon.com/cloudhsm/faqs-classic/"&gt;AWS CloudHSM Classic FAQs&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/userguide/"&gt;AWS CloudHSM Classic User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/classic/APIReference/"&gt;AWS CloudHSM Classic API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For information about the current version of AWS CloudHSM&lt;/b&gt;, see &lt;a href="http://aws.amazon.com/cloudhsm/"&gt;AWS CloudHSM&lt;/a&gt;, the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/userguide/"&gt;AWS CloudHSM User Guide&lt;/a&gt;, and the &lt;a href="https://docs.aws.amazon.com/cloudhsm/latest/APIReference/"&gt;AWS CloudHSM API Reference&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Removes one or more tags from the specified AWS CloudHSM resource.&lt;/p&gt; &lt;p&gt;To remove a tag, specify only the tag key to remove (not the value). To overwrite the value for an existing tag, use &lt;a&gt;AddTagsToResource&lt;/a&gt;.&lt;/p&gt;
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.RemoveTagsFromResourceResponse removeTagsFromResource(org.openapis.openapi.models.operations.RemoveTagsFromResourceRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/#X-Amz-Target=CloudHsmFrontendService.RemoveTagsFromResource");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = this._securityClient;
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.RemoveTagsFromResourceResponse res = new org.openapis.openapi.models.operations.RemoveTagsFromResourceResponse() {{
            removeTagsFromResourceResponse = null;
            cloudHsmServiceException = null;
            cloudHsmInternalException = null;
            invalidRequestException = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.RemoveTagsFromResourceResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.RemoveTagsFromResourceResponse.class);
                res.removeTagsFromResourceResponse = out;
            }
        }
        else if (httpRes.statusCode() == 480) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmServiceException = out;
            }
        }
        else if (httpRes.statusCode() == 481) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.cloudHsmInternalException = out;
            }
        }
        else if (httpRes.statusCode() == 482) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                Object out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), Object.class);
                res.invalidRequestException = out;
            }
        }

        return res;
    }
}