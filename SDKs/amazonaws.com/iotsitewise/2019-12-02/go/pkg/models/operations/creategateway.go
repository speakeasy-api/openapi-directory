// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateGatewayRequestBodyGatewayPlatform - Contains a gateway's platform information.
type CreateGatewayRequestBodyGatewayPlatform struct {
	Greengrass   *shared.Greengrass   `json:"greengrass,omitempty"`
	GreengrassV2 *shared.GreengrassV2 `json:"greengrassV2,omitempty"`
}

type CreateGatewayRequestBody struct {
	// A unique, friendly name for the gateway.
	GatewayName string `json:"gatewayName"`
	// Contains a gateway's platform information.
	GatewayPlatform CreateGatewayRequestBodyGatewayPlatform `json:"gatewayPlatform"`
	// A list of key-value pairs that contain metadata for the gateway. For more information, see <a href="https://docs.aws.amazon.com/iot-sitewise/latest/userguide/tag-resources.html">Tagging your IoT SiteWise resources</a> in the <i>IoT SiteWise User Guide</i>.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateGatewayRequest struct {
	RequestBody       CreateGatewayRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateGatewayResponse struct {
	ContentType string
	// Success
	CreateGatewayResponse *shared.CreateGatewayResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
