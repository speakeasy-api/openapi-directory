// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// HooksGetActionEnum - Determines the action to execute.
type HooksGetActionEnum string

const (
	HooksGetActionEnumRead HooksGetActionEnum = "read"
)

func (e *HooksGetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		*e = HooksGetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HooksGetActionEnum: %s", s)
	}
}

type HooksGetQueryParams struct {
	// Determines the action to execute.
	Action HooksGetActionEnum `queryParam:"style=form,explode=true,name=action"`
}

type HooksGetRequest struct {
	QueryParams HooksGetQueryParams
}

type HooksGet200ApplicationJSONHooks struct {
	Created       *string `json:"created,omitempty"`
	EventType     *string `json:"event_type,omitempty"`
	ID            *string `json:"id,omitempty"`
	RequestMethod *string `json:"request_method,omitempty"`
	TargetURL     *string `json:"target_url,omitempty"`
}

// HooksGet200ApplicationJSON - OK
type HooksGet200ApplicationJSON struct {
	Hooks   []HooksGet200ApplicationJSONHooks `json:"hooks,omitempty"`
	Success *bool                             `json:"success,omitempty"`
}

type HooksGetResponse struct {
	ContentType string
	// OK
	HooksGet200ApplicationJSONObject *HooksGet200ApplicationJSON
	StatusCode                       int
	RawResponse                      *http.Response
}
