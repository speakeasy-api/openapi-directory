// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableConsolePortTemplateTypeEnum string

const (
	WritableConsolePortTemplateTypeEnumDe9       WritableConsolePortTemplateTypeEnum = "de-9"
	WritableConsolePortTemplateTypeEnumDb25      WritableConsolePortTemplateTypeEnum = "db-25"
	WritableConsolePortTemplateTypeEnumRj11      WritableConsolePortTemplateTypeEnum = "rj-11"
	WritableConsolePortTemplateTypeEnumRj12      WritableConsolePortTemplateTypeEnum = "rj-12"
	WritableConsolePortTemplateTypeEnumRj45      WritableConsolePortTemplateTypeEnum = "rj-45"
	WritableConsolePortTemplateTypeEnumUsbA      WritableConsolePortTemplateTypeEnum = "usb-a"
	WritableConsolePortTemplateTypeEnumUsbB      WritableConsolePortTemplateTypeEnum = "usb-b"
	WritableConsolePortTemplateTypeEnumUsbC      WritableConsolePortTemplateTypeEnum = "usb-c"
	WritableConsolePortTemplateTypeEnumUsbMiniA  WritableConsolePortTemplateTypeEnum = "usb-mini-a"
	WritableConsolePortTemplateTypeEnumUsbMiniB  WritableConsolePortTemplateTypeEnum = "usb-mini-b"
	WritableConsolePortTemplateTypeEnumUsbMicroA WritableConsolePortTemplateTypeEnum = "usb-micro-a"
	WritableConsolePortTemplateTypeEnumUsbMicroB WritableConsolePortTemplateTypeEnum = "usb-micro-b"
	WritableConsolePortTemplateTypeEnumOther     WritableConsolePortTemplateTypeEnum = "other"
)

func (e *WritableConsolePortTemplateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "de-9":
		fallthrough
	case "db-25":
		fallthrough
	case "rj-11":
		fallthrough
	case "rj-12":
		fallthrough
	case "rj-45":
		fallthrough
	case "usb-a":
		fallthrough
	case "usb-b":
		fallthrough
	case "usb-c":
		fallthrough
	case "usb-mini-a":
		fallthrough
	case "usb-mini-b":
		fallthrough
	case "usb-micro-a":
		fallthrough
	case "usb-micro-b":
		fallthrough
	case "other":
		*e = WritableConsolePortTemplateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableConsolePortTemplateTypeEnum: %s", s)
	}
}

type WritableConsolePortTemplateInput struct {
	DeviceType int64                                `json:"device_type"`
	Name       string                               `json:"name"`
	Type       *WritableConsolePortTemplateTypeEnum `json:"type,omitempty"`
}
