"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CompletionResultTypeEnum(str, Enum):
    r"""The completion topic."""
    COMPLETION_TYPE_UNSPECIFIED = 'COMPLETION_TYPE_UNSPECIFIED'
    JOB_TITLE = 'JOB_TITLE'
    COMPANY_NAME = 'COMPANY_NAME'
    COMBINED = 'COMBINED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CompletionResult:
    r"""Resource that represents completion results."""
    
    image_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageUri'), 'exclude': lambda f: f is None }})
    r"""The URI of the company image for COMPANY_NAME."""  
    suggestion: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestion'), 'exclude': lambda f: f is None }})
    r"""The suggestion for the query."""  
    type: Optional[CompletionResultTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The completion topic."""  
    