"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import pollingoptions as shared_pollingoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AsyncOptions:
    r"""Async options that determine when a resource should finish."""
    
    method_match: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('methodMatch'), 'exclude': lambda f: f is None }})
    r"""Method regex where this policy will apply."""  
    polling_options: Optional[shared_pollingoptions.PollingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pollingOptions'), 'exclude': lambda f: f is None }})  
    