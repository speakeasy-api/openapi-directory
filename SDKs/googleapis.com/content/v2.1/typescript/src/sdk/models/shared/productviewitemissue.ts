/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProductViewItemIssueItemIssueSeverity } from "./productviewitemissueitemissueseverity";
import { ProductViewItemIssueItemIssueType } from "./productviewitemissueitemissuetype";
import { Expose, Type } from "class-transformer";

/**
 * Item issue resolution.
 */
export enum ProductViewItemIssueResolutionEnum {
  Unknown = "UNKNOWN",
  MerchantAction = "MERCHANT_ACTION",
  PendingProcessing = "PENDING_PROCESSING",
}

/**
 * Item issue associated with the product.
 */
export class ProductViewItemIssue extends SpeakeasyBase {
  /**
   * Type of the item issue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueType" })
  @Type(() => ProductViewItemIssueItemIssueType)
  issueType?: ProductViewItemIssueItemIssueType;

  /**
   * Item issue resolution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolution" })
  resolution?: ProductViewItemIssueResolutionEnum;

  /**
   * Severity of an issue per destination in a region, and aggregated severity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  @Type(() => ProductViewItemIssueItemIssueSeverity)
  severity?: ProductViewItemIssueItemIssueSeverity;
}
