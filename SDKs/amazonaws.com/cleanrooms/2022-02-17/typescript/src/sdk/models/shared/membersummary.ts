/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MemberAbilityEnum } from "./memberabilityenum";
import { MemberStatusEnum } from "./memberstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * The member object listed by the request.
 */
export class MemberSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "abilities" })
  abilities: MemberAbilityEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "membershipArn" })
  membershipArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "membershipId" })
  membershipId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: MemberStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
