"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GenerateExclusivityManifestResponse:
    r"""The response of the exclusivity artifacts manifests for the client to apply."""
    
    crd_manifest: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crdManifest'), 'exclude': lambda f: f is None }})
    r"""The YAML manifest of the membership CRD to apply if a newer version of the CRD is available. Empty if no update needs to be applied."""  
    cr_manifest: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crManifest'), 'exclude': lambda f: f is None }})
    r"""The YAML manifest of the membership CR to apply if a new version of the CR is available. Empty if no update needs to be applied."""  
    