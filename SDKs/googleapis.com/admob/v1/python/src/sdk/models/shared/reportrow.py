"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reportrowdimensionvalue as shared_reportrowdimensionvalue
from ..shared import reportrowmetricvalue as shared_reportrowmetricvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportRow:
    r"""A row of the returning report."""
    
    dimension_values: Optional[dict[str, shared_reportrowdimensionvalue.ReportRowDimensionValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensionValues'), 'exclude': lambda f: f is None }})
    r"""Map of dimension values in a row, with keys as enum name of the dimensions."""  
    metric_values: Optional[dict[str, shared_reportrowmetricvalue.ReportRowMetricValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricValues'), 'exclude': lambda f: f is None }})
    r"""Map of metric values in a row, with keys as enum name of the metrics. If a metric being requested has no value returned, the map will not include it."""  
    