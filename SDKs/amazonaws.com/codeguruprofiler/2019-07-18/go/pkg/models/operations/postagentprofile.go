// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostAgentProfilePathParams struct {
	//  The name of the profiling group with the aggregated profile that receives the submitted profiling data.
	ProfilingGroupName string `pathParam:"style=simple,explode=false,name=profilingGroupName"`
}

type PostAgentProfileQueryParams struct {
	//  Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent the accidental submission of duplicate profiling data if there are failures and retries.
	ProfileToken *string `queryParam:"style=form,explode=true,name=profileToken"`
}

type PostAgentProfileHeaders struct {
	// <p> The format of the submitted profiling data. The format maps to the <code>Accept</code> and <code>Content-Type</code> headers of the HTTP request. You can specify one of the following: or the default . </p> <pre><code> &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/json&lt;/code&gt; — standard JSON format &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;application/x-amzn-ion&lt;/code&gt; — the Amazon Ion data format. For more information, see &lt;a href=&quot;http://amzn.github.io/ion-docs/&quot;&gt;Amazon Ion&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; </code></pre>
	ContentType       string  `header:"style=simple,explode=false,name=Content-Type"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PostAgentProfileRequestBody struct {
	//  The submitted profiling data.
	AgentProfile string `json:"agentProfile"`
}

type PostAgentProfileRequest struct {
	PathParams  PostAgentProfilePathParams
	QueryParams PostAgentProfileQueryParams
	Headers     PostAgentProfileHeaders
	Request     PostAgentProfileRequestBody `request:"mediaType=application/json"`
}

type PostAgentProfileResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	PostAgentProfileResponse map[string]interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
