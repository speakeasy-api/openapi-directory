/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompressionTypeEnum } from "./compressiontypeenum";
import { GlueSchema } from "./glueschema";
import { QuoteCharEnum } from "./quotecharenum";
import { S3DirectSourceAdditionalOptions } from "./s3directsourceadditionaloptions";
import { SeparatorEnum } from "./separatorenum";
import { Expose, Type } from "class-transformer";

/**
 * Specifies a command-separated value (CSV) data store stored in Amazon S3.
 */
export class S3CsvSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalOptions" })
  @Type(() => S3DirectSourceAdditionalOptions)
  additionalOptions?: S3DirectSourceAdditionalOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "CompressionType" })
  compressionType?: CompressionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Escaper" })
  escaper?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Exclusions" })
  exclusions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "GroupFiles" })
  groupFiles?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GroupSize" })
  groupSize?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxBand" })
  maxBand?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxFilesInBand" })
  maxFilesInBand?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Multiline" })
  multiline?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OptimizePerformance" })
  optimizePerformance?: boolean;

  @SpeakeasyMetadata({ elemType: GlueSchema })
  @Expose({ name: "OutputSchemas" })
  @Type(() => GlueSchema)
  outputSchemas?: GlueSchema[];

  @SpeakeasyMetadata()
  @Expose({ name: "Paths" })
  paths: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "QuoteChar" })
  quoteChar: QuoteCharEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Recurse" })
  recurse?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Separator" })
  separator: SeparatorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SkipFirst" })
  skipFirst?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "WithHeader" })
  withHeader?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "WriteHeader" })
  writeHeader?: boolean;
}
