/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomerAttributes } from "./customerattributes";
import { FirstAdminUser } from "./firstadminuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Customer type
 */
export enum NewCustomerResponseCustomerContractTypeEnum {
  Demo = "demo",
  Free = "free",
  Pay = "pay",
}

/**
 * Customer information
 */
export class NewCustomerResponse extends SpeakeasyBase {
  /**
   * &#128679; Deprecated since v4.8.0
   *
   * @remarks
   *
   * Customer activation code string:
   *
   * * valid only for types `free` and `demo`
   *
   * * for `pay` customers it is empty
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activationCode" })
  activationCode?: string;

  /**
   * Company name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName: string;

  /**
   * Creation date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * List of customer attributes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerAttributes" })
  @Type(() => CustomerAttributes)
  customerAttributes?: CustomerAttributes;

  /**
   * Customer type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerContractType" })
  customerContractType: NewCustomerResponseCustomerContractTypeEnum;

  /**
   * &#128640; Since v4.21.0
   *
   * @remarks
   *
   * Customer UUID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerUuid" })
  customerUuid: string;

  /**
   * First administrator user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstAdminUser" })
  @Type(() => FirstAdminUser)
  firstAdminUser: FirstAdminUser;

  /**
   * Unique identifier for the customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Customer is locked:
   *
   * @remarks
   *
   * * `false` - unlocked
   *
   * * `true` - locked
   *
   *
   *
   * All users of this customer will be blocked and can not login anymore.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isLocked" })
  isLocked?: boolean;

  /**
   * &#128679; Deprecated since v4.7.0
   *
   * @remarks
   *
   * Customer lock status:
   *
   * * `false` - unlocked
   *
   * * `true` - locked
   *
   *
   *
   * Please use `isLocked` instead.
   *
   * All users of this customer will be blocked and can not login anymore.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockStatus" })
  lockStatus: boolean;

  /**
   * Provider customer ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "providerCustomerId" })
  providerCustomerId?: string;

  /**
   * Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaMax" })
  quotaMax: number;

  /**
   * Number of days left for trial period (relevant only for type `demo`)
   *
   * @remarks
   *
   * (not used)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialDays" })
  trialDays?: number;

  /**
   * Maximal number of users
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userMax" })
  userMax: number;

  /**
   * &#128640; Since v4.19.0
   *
   * @remarks
   *
   * Maximal number of webhooks
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhooksMax" })
  webhooksMax?: number;
}
