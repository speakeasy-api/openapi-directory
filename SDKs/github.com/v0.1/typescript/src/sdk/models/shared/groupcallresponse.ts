/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Response message
 */
export enum GroupCallResponseMessageEnum {
  GroupCallRequestExecuted = "GroupCall Request Executed",
  MandatoryParametersMissing = "Mandatory Parameters Missing",
  ThisDelimiterIsNotAllowed = "This Delimiter is not allowed",
  GroupCallShouldBeUsedForAtLeast2Numbers = "GroupCall should be used for at least 2 numbers",
  ToParameterLengthDoesNotMatchGatewaysLength = "'To' parameter length does not match 'Gateways' Length",
  AnswerUrlIsNotValid = "AnswerUrl is not Valid",
  HangupUrlIsNotValid = "HangupUrl is not Valid",
  RingUrlIsNotValid = "RingUrl is not Valid",
  ConfirmSoundIsNotValid = "ConfirmSound is not Valid",
  UnknownCoreUUID = "Unknown Core UUID",
  GroupCallRequestFailed = "GroupCall Request Failed",
}

/**
 * Response
 */
export class GroupCallResponse extends SpeakeasyBase {
  /**
   * Response message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message: GroupCallResponseMessageEnum;

  /**
   * Unique identifier of the Call request (UUIDv4)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RequestUUID" })
  requestUUID: string;

  /**
   * API server which handled this request (an Eqivo extension)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RestApiServer" })
  restApiServer: string;

  /**
   * Whether the request was successful or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Success" })
  success: boolean;
}
