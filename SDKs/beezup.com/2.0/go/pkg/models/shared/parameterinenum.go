// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ParameterInEnum - * path: if the parameter must be pass in the path uri
// * header: if the parameter must be passed in http header
// * query: if the parameter must be passed in querystring
// * body: if the parameter must be passed in the body
// * file: if the parameter must be passed in a multipart/form-data (https://swagger.io/docs/specification/2-0/file-upload/)
type ParameterInEnum string

const (
	ParameterInEnumPath   ParameterInEnum = "path"
	ParameterInEnumHeader ParameterInEnum = "header"
	ParameterInEnumQuery  ParameterInEnum = "query"
	ParameterInEnumBody   ParameterInEnum = "body"
	ParameterInEnumFile   ParameterInEnum = "file"
)

func (e ParameterInEnum) ToPointer() *ParameterInEnum {
	return &e
}

func (e *ParameterInEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "path":
		fallthrough
	case "header":
		fallthrough
	case "query":
		fallthrough
	case "body":
		fallthrough
	case "file":
		*e = ParameterInEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ParameterInEnum: %v", v)
	}
}
