"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcedetails as shared_resourcedetails
from ..shared import resourceutilization as shared_resourceutilization
from ..shared import tagvalues as shared_tagvalues
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CurrentInstance:
    r"""Context about the current instance."""
    
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrencyCode'), 'exclude': lambda f: f is None }})  
    instance_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceName'), 'exclude': lambda f: f is None }})  
    monthly_cost: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonthlyCost'), 'exclude': lambda f: f is None }})  
    on_demand_hours_in_lookback_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnDemandHoursInLookbackPeriod'), 'exclude': lambda f: f is None }})  
    reservation_covered_hours_in_lookback_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReservationCoveredHoursInLookbackPeriod'), 'exclude': lambda f: f is None }})  
    resource_details: Optional[shared_resourcedetails.ResourceDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceDetails'), 'exclude': lambda f: f is None }})  
    resource_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceId'), 'exclude': lambda f: f is None }})  
    resource_utilization: Optional[shared_resourceutilization.ResourceUtilization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceUtilization'), 'exclude': lambda f: f is None }})  
    savings_plans_covered_hours_in_lookback_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SavingsPlansCoveredHoursInLookbackPeriod'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tagvalues.TagValues]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    total_running_hours_in_lookback_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalRunningHoursInLookbackPeriod'), 'exclude': lambda f: f is None }})  
    