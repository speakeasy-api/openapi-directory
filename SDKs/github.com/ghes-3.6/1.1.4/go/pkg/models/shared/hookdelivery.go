// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type HookDeliveryRequest struct {
	// The request headers sent with the webhook delivery.
	Headers map[string]interface{} `json:"headers"`
	// The webhook payload.
	Payload map[string]interface{} `json:"payload"`
}

type HookDeliveryResponse struct {
	// The response headers received when the delivery was made.
	Headers map[string]interface{} `json:"headers"`
	// The response payload received.
	Payload string `json:"payload"`
}

// HookDelivery - Delivery made by a webhook.
type HookDelivery struct {
	// The type of activity for the event that triggered the delivery.
	Action string `json:"action"`
	// Time when the delivery was delivered.
	DeliveredAt time.Time `json:"delivered_at"`
	// Time spent delivering.
	Duration float64 `json:"duration"`
	// The event that triggered the delivery.
	Event string `json:"event"`
	// Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
	GUID string `json:"guid"`
	// Unique identifier of the delivery.
	ID int64 `json:"id"`
	// The id of the GitHub App installation associated with this event.
	InstallationID int64 `json:"installation_id"`
	// Whether the delivery is a redelivery.
	Redelivery bool `json:"redelivery"`
	// The id of the repository associated with this event.
	RepositoryID int64                `json:"repository_id"`
	Request      HookDeliveryRequest  `json:"request"`
	Response     HookDeliveryResponse `json:"response"`
	// Description of the status of the attempted delivery
	Status string `json:"status"`
	// Status code received when delivery was made.
	StatusCode int64 `json:"status_code"`
	// The URL target of the delivery.
	URL *string `json:"url,omitempty"`
}
