"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetInformationContentResourceRequest:
    
    object_category: str = dataclasses.field(metadata={'path_param': { 'field_name': 'object_category', 'style': 'simple', 'explode': False }})  
    subject_category: str = dataclasses.field(metadata={'path_param': { 'field_name': 'subject_category', 'style': 'simple', 'explode': False }})  
    subject_taxon: str = dataclasses.field(metadata={'path_param': { 'field_name': 'subject_taxon', 'style': 'simple', 'explode': False }})  
    evidence: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'evidence', 'style': 'form', 'explode': True }})
    r"""Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)
                        or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.
    """  
    

@dataclasses.dataclass
class GetInformationContentResourceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    