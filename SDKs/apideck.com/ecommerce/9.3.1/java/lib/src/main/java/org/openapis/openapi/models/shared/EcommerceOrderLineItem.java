/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EcommerceOrderLineItem - A single line item of an ecommerce order, representing a product or variant with associated options, quantity, and pricing information.
 */
public class EcommerceOrderLineItem {
    /**
     * The description of the product or variant associated with the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public EcommerceOrderLineItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discounts")
    public EcommerceDiscount[] discounts;

    public EcommerceOrderLineItem withDiscounts(EcommerceDiscount[] discounts) {
        this.discounts = discounts;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public EcommerceOrderLineItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The name of the product or variant associated with the line item.
     */
    @JsonProperty("name")
    public String name;

    public EcommerceOrderLineItem withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public EcommerceOrderLineItemOptions[] options;

    public EcommerceOrderLineItem withOptions(EcommerceOrderLineItemOptions[] options) {
        this.options = options;
        return this;
    }
    
    /**
     * A unique identifier for the product associated with the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("product_id")
    public String productId;

    public EcommerceOrderLineItem withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * The quantity of the product or variant associated with the line item.
     */
    @JsonProperty("quantity")
    public String quantity;

    public EcommerceOrderLineItem withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The SKU of the product or variant associated with the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;

    public EcommerceOrderLineItem withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The total tax amount applied to the product or variant associated with the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_amount")
    public String taxAmount;

    public EcommerceOrderLineItem withTaxAmount(String taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The tax rate applied to the product or variant associated with the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_rate")
    public String taxRate;

    public EcommerceOrderLineItem withTaxRate(String taxRate) {
        this.taxRate = taxRate;
        return this;
    }
    
    /**
     * The total amount for the product(s) or variant associated with the line item, including taxes and discounts.
     */
    @JsonProperty("total_amount")
    public String totalAmount;

    public EcommerceOrderLineItem withTotalAmount(String totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * The unit price of the product or variant associated with the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_price")
    public String unitPrice;

    public EcommerceOrderLineItem withUnitPrice(String unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * A unique identifier for the variant of the product associated with the line item, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variant_id")
    public String variantId;

    public EcommerceOrderLineItem withVariantId(String variantId) {
        this.variantId = variantId;
        return this;
    }
    
    public EcommerceOrderLineItem(@JsonProperty("name") String name, @JsonProperty("quantity") String quantity, @JsonProperty("total_amount") String totalAmount) {
        this.name = name;
        this.quantity = quantity;
        this.totalAmount = totalAmount;
  }
}
