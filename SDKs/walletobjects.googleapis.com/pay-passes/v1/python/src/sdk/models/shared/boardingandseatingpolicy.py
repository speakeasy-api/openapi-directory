"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BoardingAndSeatingPolicyBoardingPolicyEnum(str, Enum):
    r"""Indicates the policy the airline uses for boarding. If unset, Google will default to `zoneBased`."""
    BOARDING_POLICY_UNSPECIFIED = 'BOARDING_POLICY_UNSPECIFIED'
    ZONE_BASED_UPPER = 'ZONE_BASED'
    ZONE_BASED_MIXED = 'zoneBased'
    GROUP_BASED_UPPER = 'GROUP_BASED'
    GROUP_BASED_MIXED = 'groupBased'
    BOARDING_POLICY_OTHER_UPPER = 'BOARDING_POLICY_OTHER'
    BOARDING_POLICY_OTHER_MIXED = 'boardingPolicyOther'

class BoardingAndSeatingPolicySeatClassPolicyEnum(str, Enum):
    r"""Seating policy which dictates how we display the seat class. If unset, Google will default to `cabinBased`."""
    SEAT_CLASS_POLICY_UNSPECIFIED = 'SEAT_CLASS_POLICY_UNSPECIFIED'
    CABIN_BASED_UPPER = 'CABIN_BASED'
    CABIN_BASED_MIXED = 'cabinBased'
    CLASS_BASED_UPPER = 'CLASS_BASED'
    CLASS_BASED_MIXED = 'classBased'
    TIER_BASED_UPPER = 'TIER_BASED'
    TIER_BASED_MIXED = 'tierBased'
    SEAT_CLASS_POLICY_OTHER_UPPER = 'SEAT_CLASS_POLICY_OTHER'
    SEAT_CLASS_POLICY_OTHER_MIXED = 'seatClassPolicyOther'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BoardingAndSeatingPolicy:
    
    boarding_policy: Optional[BoardingAndSeatingPolicyBoardingPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boardingPolicy'), 'exclude': lambda f: f is None }})
    r"""Indicates the policy the airline uses for boarding. If unset, Google will default to `zoneBased`."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string `\\"walletobjects#boardingAndSeatingPolicy\\"`."""  
    seat_class_policy: Optional[BoardingAndSeatingPolicySeatClassPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seatClassPolicy'), 'exclude': lambda f: f is None }})
    r"""Seating policy which dictates how we display the seat class. If unset, Google will default to `cabinBased`."""  
    