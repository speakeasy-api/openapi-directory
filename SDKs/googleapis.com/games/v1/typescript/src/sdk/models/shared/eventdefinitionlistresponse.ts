/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventDefinition } from "./eventdefinition";
import { Expose, Type } from "class-transformer";

/**
 * A ListDefinitions response.
 */
export class EventDefinitionListResponse extends SpeakeasyBase {
  /**
   * The event definitions.
   */
  @SpeakeasyMetadata({ elemType: EventDefinition })
  @Expose({ name: "items" })
  @Type(() => EventDefinition)
  items?: EventDefinition[];

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `games#eventDefinitionListResponse`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The pagination token for the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
