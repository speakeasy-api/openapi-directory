/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstructedAmount } from "./instructedamount";
import { PeriodicPayment } from "./periodicpayment";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Payment product
 */
export enum PaymentWritePaymentProductEnum {
  T2P = "T2P",
  Sct = "SCT",
  Isct = "ISCT",
  Cbct = "CBCT",
}

/**
 * Payment end to end identification
 */
export enum PaymentWritePaymentStatusEnum {
  Init = "INIT",
  Erre = "ERRE",
  Errs = "ERRS",
  Accc = "ACCC",
  Accp = "ACCP",
  Acsc = "ACSC",
  Acsp = "ACSP",
  Actc = "ACTC",
  Acwc = "ACWC",
  Acwp = "ACWP",
  Rcvd = "RCVD",
  Pdng = "PDNG",
  Rjct = "RJCT",
  Canc = "CANC",
  Acfc = "ACFC",
  Patc = "PATC",
  Part = "PART",
}

/**
 * Payment Type
 */
export enum PaymentWritePaymentTypeEnum {
  SinglePayment = "single-payment",
  BulkPayment = "bulk-payment",
  PeriodicPayment = "periodic-payment",
}

/**
 * PaymentWriteSerializer.
 */
export class PaymentWrite extends SpeakeasyBase {
  /**
   * Registered creditor account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditor_account" })
  creditorAccount: string;

  /**
   * Payment Custom Payment ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_payment_id" })
  customPaymentId?: string;

  /**
   * Payment description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Instructed amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructed_amount" })
  @Type(() => InstructedAmount)
  instructedAmount: InstructedAmount;

  /**
   * Link to initiate authorization with Institution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * Payment ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_id" })
  paymentId?: string;

  /**
   * Payment product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_product" })
  paymentProduct?: PaymentWritePaymentProductEnum;

  /**
   * Payment end to end identification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_status" })
  paymentStatus?: PaymentWritePaymentStatusEnum;

  /**
   * Payment Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_type" })
  paymentType?: PaymentWritePaymentTypeEnum;

  /**
   * Periodic Payment Serializer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodic_payment" })
  @Type(() => PeriodicPayment)
  periodicPayment?: PeriodicPayment;

  /**
   * Redirect URL to your application after payment is done
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirect" })
  redirect: string;

  /**
   * Payment Execution date (for periodic payments)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requested_execution_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestedExecutionDate?: Date;
}
