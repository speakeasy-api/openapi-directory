"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import repository_pre_receive_hook as shared_repository_pre_receive_hook
from typing import Optional


@dataclasses.dataclass
class EnterpriseAdminGetPreReceiveHookForRepoRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})  
    pre_receive_hook_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'pre_receive_hook_id', 'style': 'simple', 'explode': False }})
    r"""pre_receive_hook_id parameter"""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class EnterpriseAdminGetPreReceiveHookForRepoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    repository_pre_receive_hook: Optional[shared_repository_pre_receive_hook.RepositoryPreReceiveHook] = dataclasses.field(default=None)
    r"""Response"""  
    