"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BankAccountInfo:
    
    currency_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode') }})
    r"""The account's three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **EUR**."""  
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber'), 'exclude': lambda f: f is None }})
    r"""The bank account number (without separators).
    
     When this is provided, the `branchCode` is also required.
    """  
    account_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountType'), 'exclude': lambda f: f is None }})
    r"""The type of bank account."""  
    bank_bic_swift: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankBicSwift'), 'exclude': lambda f: f is None }})
    r"""The bank's BIC or SWIFT code."""  
    bank_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankCity'), 'exclude': lambda f: f is None }})
    r"""The city where the bank is located."""  
    bank_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankCode'), 'exclude': lambda f: f is None }})
    r"""The bank code of the banking institution with which the bank account is registered."""  
    bank_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankName'), 'exclude': lambda f: f is None }})
    r"""The name of the banking institution where the bank account is held."""  
    branch_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('branchCode'), 'exclude': lambda f: f is None }})
    r"""The branch code of the branch under which the bank account is registered.
    
    Required when you provide an `accountNumber`.
    
     In the following countries, this value corresponds to:
    
    
    * United States: routing number
    * United Kingdom: sort code
    * Germany: Bankleitzahl
    """  
    check_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checkCode'), 'exclude': lambda f: f is None }})
    r"""The check code of the bank account."""  
    country_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countryCode'), 'exclude': lambda f: f is None }})
    r"""The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the bank account is registered. For example, **NL**."""  
    iban: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iban'), 'exclude': lambda f: f is None }})
    r"""The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard."""  
    