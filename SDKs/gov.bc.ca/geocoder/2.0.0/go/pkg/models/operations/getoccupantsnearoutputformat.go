// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetOccupantsNearOutputFormatLocationDescriptorEnum - Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
type GetOccupantsNearOutputFormatLocationDescriptorEnum string

const (
	GetOccupantsNearOutputFormatLocationDescriptorEnumAny            GetOccupantsNearOutputFormatLocationDescriptorEnum = "any"
	GetOccupantsNearOutputFormatLocationDescriptorEnumAccessPoint    GetOccupantsNearOutputFormatLocationDescriptorEnum = "accessPoint"
	GetOccupantsNearOutputFormatLocationDescriptorEnumFrontDoorPoint GetOccupantsNearOutputFormatLocationDescriptorEnum = "frontDoorPoint"
	GetOccupantsNearOutputFormatLocationDescriptorEnumParcelPoint    GetOccupantsNearOutputFormatLocationDescriptorEnum = "parcelPoint"
	GetOccupantsNearOutputFormatLocationDescriptorEnumRooftopPoint   GetOccupantsNearOutputFormatLocationDescriptorEnum = "rooftopPoint"
	GetOccupantsNearOutputFormatLocationDescriptorEnumRoutingPoint   GetOccupantsNearOutputFormatLocationDescriptorEnum = "routingPoint"
)

func (e *GetOccupantsNearOutputFormatLocationDescriptorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "any":
		fallthrough
	case "accessPoint":
		fallthrough
	case "frontDoorPoint":
		fallthrough
	case "parcelPoint":
		fallthrough
	case "rooftopPoint":
		fallthrough
	case "routingPoint":
		*e = GetOccupantsNearOutputFormatLocationDescriptorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsNearOutputFormatLocationDescriptorEnum: %s", s)
	}
}

// GetOccupantsNearOutputFormatOutputFormatEnum - Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
//
// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
type GetOccupantsNearOutputFormatOutputFormatEnum string

const (
	GetOccupantsNearOutputFormatOutputFormatEnumJSON    GetOccupantsNearOutputFormatOutputFormatEnum = "json"
	GetOccupantsNearOutputFormatOutputFormatEnumGeojson GetOccupantsNearOutputFormatOutputFormatEnum = "geojson"
	GetOccupantsNearOutputFormatOutputFormatEnumXhtml   GetOccupantsNearOutputFormatOutputFormatEnum = "xhtml"
	GetOccupantsNearOutputFormatOutputFormatEnumKml     GetOccupantsNearOutputFormatOutputFormatEnum = "kml"
	GetOccupantsNearOutputFormatOutputFormatEnumGml     GetOccupantsNearOutputFormatOutputFormatEnum = "gml"
	GetOccupantsNearOutputFormatOutputFormatEnumCsv     GetOccupantsNearOutputFormatOutputFormatEnum = "csv"
	GetOccupantsNearOutputFormatOutputFormatEnumShpz    GetOccupantsNearOutputFormatOutputFormatEnum = "shpz"
)

func (e *GetOccupantsNearOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "geojson":
		fallthrough
	case "xhtml":
		fallthrough
	case "kml":
		fallthrough
	case "gml":
		fallthrough
	case "csv":
		fallthrough
	case "shpz":
		*e = GetOccupantsNearOutputFormatOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsNearOutputFormatOutputFormatEnum: %s", s)
	}
}

// GetOccupantsNearOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetOccupantsNearOutputFormatOutputSrsEnum string

const (
	GetOccupantsNearOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetOccupantsNearOutputFormatOutputSrsEnum = "4326"
	GetOccupantsNearOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetOccupantsNearOutputFormatOutputSrsEnum = "4269"
	GetOccupantsNearOutputFormatOutputSrsEnumThreeThousandAndFive                  GetOccupantsNearOutputFormatOutputSrsEnum = "3005"
	GetOccupantsNearOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetOccupantsNearOutputFormatOutputSrsEnum = "26907"
	GetOccupantsNearOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetOccupantsNearOutputFormatOutputSrsEnum = "26908"
	GetOccupantsNearOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetOccupantsNearOutputFormatOutputSrsEnum = "26909"
	GetOccupantsNearOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetOccupantsNearOutputFormatOutputSrsEnum = "26910"
	GetOccupantsNearOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetOccupantsNearOutputFormatOutputSrsEnum = "26911"
)

func (e *GetOccupantsNearOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "4326":
		fallthrough
	case "4269":
		fallthrough
	case "3005":
		fallthrough
	case "26907":
		fallthrough
	case "26908":
		fallthrough
	case "26909":
		fallthrough
	case "26910":
		fallthrough
	case "26911":
		*e = GetOccupantsNearOutputFormatOutputSrsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOccupantsNearOutputFormatOutputSrsEnum: %s", s)
	}
}

type GetOccupantsNearOutputFormatRequest struct {
	// If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
	Brief *bool `queryParam:"style=form,explode=true,name=brief"`
	// Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
	LocationDescriptor *GetOccupantsNearOutputFormatLocationDescriptorEnum `queryParam:"style=form,explode=true,name=locationDescriptor"`
	// The maximum distance (in metres) to search from the given point.  If not specified, the search distance is unlimited.
	MaxDistance *int64 `queryParam:"style=form,explode=true,name=maxDistance"`
	// The maximum number of search results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
	//
	// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
	OutputFormat GetOccupantsNearOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetOccupantsNearOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// The point (x,y) from which the nearest site will be identified. The coordinates must be specified in the same SRS as given by the 'outputSRS' parameter.
	Point string `queryParam:"style=form,explode=true,name=point"`
	// The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
	SetBack *int64 `queryParam:"style=form,explode=true,name=setBack"`
	// Example: schools;courts;employment<br>A list of tags separated by semicolons.
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
}

type GetOccupantsNearOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
