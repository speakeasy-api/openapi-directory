/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetOrganizationFirmwareUpgradesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;

  /**
   * The product type in a given upgrade ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=productType",
  })
  productType?: string[];

  /**
   * The status of an upgrade
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=status",
  })
  status?: string[];
}

/**
 * ID of the upgrade's starting version
 */
export class GetOrganizationFirmwareUpgrades200ApplicationJSONFromVersion extends SpeakeasyBase {
  /**
   * Firmware version ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Network of the upgrade
 */
export class GetOrganizationFirmwareUpgrades200ApplicationJSONNetwork extends SpeakeasyBase {
  /**
   * ID of network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * ID of the upgrade's target version
 */
export class GetOrganizationFirmwareUpgrades200ApplicationJSONToVersion extends SpeakeasyBase {
  /**
   * Firmware version ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

export class GetOrganizationFirmwareUpgrades200ApplicationJSON extends SpeakeasyBase {
  /**
   * Timestamp when upgrade completed. Null if status pending.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completedAt" })
  completedAt?: string;

  /**
   * ID of the upgrade's starting version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(() => GetOrganizationFirmwareUpgrades200ApplicationJSONFromVersion)
  fromVersion?: GetOrganizationFirmwareUpgrades200ApplicationJSONFromVersion;

  /**
   * Network of the upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  @Type(() => GetOrganizationFirmwareUpgrades200ApplicationJSONNetwork)
  network?: GetOrganizationFirmwareUpgrades200ApplicationJSONNetwork;

  /**
   * product upgraded [wireless, appliance, switch, systemsManager, camera, cellularGateway, sensor]
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productType" })
  productType?: string;

  /**
   * Status of upgrade event: [Cancelled, Completed]
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Scheduled start time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * ID of the upgrade's target version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(() => GetOrganizationFirmwareUpgrades200ApplicationJSONToVersion)
  toVersion?: GetOrganizationFirmwareUpgrades200ApplicationJSONToVersion;

  /**
   * The upgrade batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgradeBatchId" })
  upgradeBatchId?: string;

  /**
   * The upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgradeId" })
  upgradeId?: string;
}

export class GetOrganizationFirmwareUpgradesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({
    elemType: GetOrganizationFirmwareUpgrades200ApplicationJSON,
  })
  getOrganizationFirmwareUpgrades200ApplicationJSONObjects?: GetOrganizationFirmwareUpgrades200ApplicationJSON[];
}
