/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNetworkMerakiAuthUserRequestBody {
    /**
     * Authorization zones and expiration dates for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizations")
    public UpdateNetworkMerakiAuthUserRequestBodyAuthorizations[] authorizations;

    public UpdateNetworkMerakiAuthUserRequestBody withAuthorizations(UpdateNetworkMerakiAuthUserRequestBodyAuthorizations[] authorizations) {
        this.authorizations = authorizations;
        return this;
    }
    
    /**
     * Whether or not Meraki should email the password to user. Default is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailPasswordToUser")
    public Boolean emailPasswordToUser;

    public UpdateNetworkMerakiAuthUserRequestBody withEmailPasswordToUser(Boolean emailPasswordToUser) {
        this.emailPasswordToUser = emailPasswordToUser;
        return this;
    }
    
    /**
     * Name of the user. Only allowed If the user is not Dashboard administrator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UpdateNetworkMerakiAuthUserRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The password for this user account. Only allowed If the user is not Dashboard administrator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public UpdateNetworkMerakiAuthUserRequestBody withPassword(String password) {
        this.password = password;
        return this;
    }
    
    public UpdateNetworkMerakiAuthUserRequestBody(){}
}
