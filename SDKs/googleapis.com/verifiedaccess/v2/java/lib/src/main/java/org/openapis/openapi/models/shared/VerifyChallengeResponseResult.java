/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VerifyChallengeResponseResult - Result message for VerifiedAccess.VerifyChallengeResponse.
 */
public class VerifyChallengeResponseResult {
    /**
     * Unique customer id that this device belongs to, as defined by the Google Admin SDK at https://developers.google.com/admin-sdk/directory/v1/guides/manage-customers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public String customerId;
    public VerifyChallengeResponseResult withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * Device permanent id is returned in this field (for the machine response only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("devicePermanentId")
    public String devicePermanentId;
    public VerifyChallengeResponseResult withDevicePermanentId(String devicePermanentId) {
        this.devicePermanentId = devicePermanentId;
        return this;
    }
    
    /**
     * Device signal in json string representation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceSignal")
    public String deviceSignal;
    public VerifyChallengeResponseResult withDeviceSignal(String deviceSignal) {
        this.deviceSignal = deviceSignal;
        return this;
    }
    
    /**
     * Device attested key trust level.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyTrustLevel")
    public VerifyChallengeResponseResultKeyTrustLevelEnum keyTrustLevel;
    public VerifyChallengeResponseResult withKeyTrustLevel(VerifyChallengeResponseResultKeyTrustLevelEnum keyTrustLevel) {
        this.keyTrustLevel = keyTrustLevel;
        return this;
    }
    
    /**
     * Certificate Signing Request (in the SPKAC format, base64 encoded) is returned in this field. This field will be set only if device has included CSR in its challenge response. (the option to include CSR is now available for both user and machine responses)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signedPublicKeyAndChallenge")
    public String signedPublicKeyAndChallenge;
    public VerifyChallengeResponseResult withSignedPublicKeyAndChallenge(String signedPublicKeyAndChallenge) {
        this.signedPublicKeyAndChallenge = signedPublicKeyAndChallenge;
        return this;
    }
    
    /**
     * Virtual device id of the device. The definition of virtual device id is platform-specific.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtualDeviceId")
    public String virtualDeviceId;
    public VerifyChallengeResponseResult withVirtualDeviceId(String virtualDeviceId) {
        this.virtualDeviceId = virtualDeviceId;
        return this;
    }
    
}
