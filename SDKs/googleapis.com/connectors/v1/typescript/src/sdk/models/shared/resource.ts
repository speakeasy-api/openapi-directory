/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Different types of resource supported.
 */
export enum ResourceTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  GcpProject = "GCP_PROJECT",
  GcpResource = "GCP_RESOURCE",
  GcpSecretmanagerSecret = "GCP_SECRETMANAGER_SECRET",
  GcpSecretmanagerSecretVersion = "GCP_SECRETMANAGER_SECRET_VERSION",
}

/**
 * Resource definition
 */
export class Resource extends SpeakeasyBase {
  /**
   * Template to uniquely represent a GCP resource in a format IAM expects This is a template that can have references to other values provided in the config variable template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pathTemplate" })
  pathTemplate?: string;

  /**
   * Different types of resource supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ResourceTypeEnum;
}
