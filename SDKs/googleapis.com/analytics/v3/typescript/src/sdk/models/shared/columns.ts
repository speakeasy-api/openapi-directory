/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Column } from "./column";
import { Expose, Type } from "class-transformer";

/**
 * Lists columns (dimensions and metrics) for a particular report type.
 */
export class Columns extends SpeakeasyBase {
  /**
   * List of attributes names returned by columns.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributeNames" })
  attributeNames?: string[];

  /**
   * Etag of collection. This etag can be compared with the last response etag to check if response has changed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * List of columns for a report type.
   */
  @SpeakeasyMetadata({ elemType: Column })
  @Expose({ name: "items" })
  @Type(() => Column)
  items?: Column[];

  /**
   * Collection type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Total number of columns returned in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalResults" })
  totalResults?: number;
}
