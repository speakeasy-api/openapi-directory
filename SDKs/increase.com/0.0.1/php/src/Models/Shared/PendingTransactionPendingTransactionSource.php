<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PendingTransactionPendingTransactionSource - This is an object giving more details on the network-level event that caused the Pending Transaction. For example, for a card transaction this lists the merchant's industry and location.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PendingTransactionPendingTransactionSource
{
    /**
     * A Account Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceAccountTransferInstruction $accountTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceAccountTransferInstruction')]
    public PendingTransactionPendingTransactionSourceAccountTransferInstruction $accountTransferInstruction;
    
    /**
     * A ACH Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceACHTransferInstruction $achTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('ach_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceACHTransferInstruction')]
    public PendingTransactionPendingTransactionSourceACHTransferInstruction $achTransferInstruction;
    
    /**
     * A Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_authorization`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCardAuthorization $cardAuthorization
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_authorization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCardAuthorization')]
    public PendingTransactionPendingTransactionSourceCardAuthorization $cardAuthorization;
    
    /**
     * A Deprecated Card Authorization object. This field will be present in the JSON response if and only if `category` is equal to `card_route_authorization`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceDeprecatedCardAuthorization $cardRouteAuthorization
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_route_authorization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceDeprecatedCardAuthorization')]
    public PendingTransactionPendingTransactionSourceDeprecatedCardAuthorization $cardRouteAuthorization;
    
    /**
     * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCategoryEnum $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCategoryEnum>')]
    public PendingTransactionPendingTransactionSourceCategoryEnum $category;
    
    /**
     * A Check Deposit Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCheckDepositInstruction $checkDepositInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('check_deposit_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCheckDepositInstruction')]
    public PendingTransactionPendingTransactionSourceCheckDepositInstruction $checkDepositInstruction;
    
    /**
     * A Check Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCheckTransferInstruction $checkTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('check_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCheckTransferInstruction')]
    public PendingTransactionPendingTransactionSourceCheckTransferInstruction $checkTransferInstruction;
    
    /**
     * A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHold $inboundFundsHold
     */
	#[\JMS\Serializer\Annotation\SerializedName('inbound_funds_hold')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHold')]
    public PendingTransactionPendingTransactionSourceInboundFundsHold $inboundFundsHold;
    
    /**
     * A Real Time Payments Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `real_time_payments_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction $realTimePaymentsTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('real_time_payments_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction')]
    public PendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction $realTimePaymentsTransferInstruction;
    
    /**
     * A Wire Drawdown Payment Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction $wireDrawdownPaymentInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('wire_drawdown_payment_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction')]
    public PendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction $wireDrawdownPaymentInstruction;
    
    /**
     * A Wire Transfer Instruction object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_instruction`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceWireTransferInstruction $wireTransferInstruction
     */
	#[\JMS\Serializer\Annotation\SerializedName('wire_transfer_instruction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceWireTransferInstruction')]
    public PendingTransactionPendingTransactionSourceWireTransferInstruction $wireTransferInstruction;
    
	public function __construct()
	{
		$this->accountTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceAccountTransferInstruction();
		$this->achTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceACHTransferInstruction();
		$this->cardAuthorization = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCardAuthorization();
		$this->cardRouteAuthorization = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceDeprecatedCardAuthorization();
		$this->category = \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCategoryEnum::ACCOUNT_TRANSFER_INSTRUCTION;
		$this->checkDepositInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCheckDepositInstruction();
		$this->checkTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceCheckTransferInstruction();
		$this->inboundFundsHold = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHold();
		$this->realTimePaymentsTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceRealTimePaymentsTransferInstruction();
		$this->wireDrawdownPaymentInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceWireDrawdownPaymentInstruction();
		$this->wireTransferInstruction = new \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceWireTransferInstruction();
	}
}
