<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CollectdValue - A single data point from a collectd-based plugin.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CollectdValue
{
    /**
     * The data source for the collectd value. For example, there are two data sources for network measurements: "rx" and "tx".
     * 
     * @var ?string $dataSourceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataSourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataSourceName = null;
    
    /**
     * The type of measurement.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CollectdValueDataSourceTypeEnum $dataSourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataSourceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CollectdValueDataSourceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CollectdValueDataSourceTypeEnum $dataSourceType = null;
    
    /**
     * A single strongly-typed value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TypedValue $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TypedValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TypedValue $value = null;
    
	public function __construct()
	{
		$this->dataSourceName = null;
		$this->dataSourceType = null;
		$this->value = null;
	}
}
