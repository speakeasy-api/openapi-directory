/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReinitializeActionConfiguration - The deserialized form of the &lt;b&gt;Reinitialize&lt;/b&gt; service's request payload.
 */
public class ReinitializeActionConfiguration {
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, removes all manually set Alert Actions and reverts to basic default actions i.e. trigger a PATROL event and annotate a parameter graph.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetAlertActions")
    public ReinitializeActionConfigurationResetAlertActionsEnum resetAlertActions;

    public ReinitializeActionConfiguration withResetAlertActions(ReinitializeActionConfigurationResetAlertActionsEnum resetAlertActions) {
        this.resetAlertActions = resetAlertActions;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, resets the number of times thresholds can be breached before triggering an alert to their default values (1 time) for numeric, discrete, connector status and present parameters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetAlertAfterNTimes")
    public ReinitializeActionConfigurationResetAlertAfterNTimesEnum resetAlertAfterNTimes;

    public ReinitializeActionConfiguration withResetAlertAfterNTimes(ReinitializeActionConfigurationResetAlertAfterNTimesEnum resetAlertAfterNTimes) {
        this.resetAlertAfterNTimes = resetAlertAfterNTimes;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, deactivates the debug mode when it was manually enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetDebugMode")
    public ReinitializeActionConfigurationResetDebugModeEnum resetDebugMode;

    public ReinitializeActionConfiguration withResetDebugMode(ReinitializeActionConfigurationResetDebugModeEnum resetDebugMode) {
        this.resetDebugMode = resetDebugMode;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, removes all user-defined frequencies for discovery and polling processes to their default values (respectively 1 hour and 2 minutes).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetDiscoveryAndPollingIntervals")
    public ReinitializeActionConfigurationResetDiscoveryAndPollingIntervalsEnum resetDiscoveryAndPollingIntervals;

    public ReinitializeActionConfiguration withResetDiscoveryAndPollingIntervals(ReinitializeActionConfigurationResetDiscoveryAndPollingIntervalsEnum resetDiscoveryAndPollingIntervals) {
        this.resetDiscoveryAndPollingIntervals = resetDiscoveryAndPollingIntervals;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, removes the custom Java settings (path and credentials). The KM will try to automatically find a suitable JRE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetJavaSettings")
    public ReinitializeActionConfigurationResetJavaSettingsEnum resetJavaSettings;

    public ReinitializeActionConfiguration withResetJavaSettings(ReinitializeActionConfigurationResetJavaSettingsEnum resetJavaSettings) {
        this.resetJavaSettings = resetJavaSettings;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, reverts any manually performed configuration changes to the default Hardware Sentry values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetOtherAlertSettings")
    public ReinitializeActionConfigurationResetOtherAlertSettingsEnum resetOtherAlertSettings;

    public ReinitializeActionConfiguration withResetOtherAlertSettings(ReinitializeActionConfigurationResetOtherAlertSettingsEnum resetOtherAlertSettings) {
        this.resetOtherAlertSettings = resetOtherAlertSettings;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, reactivates the monitoring of all paused or removed objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetRemovedPausedObjectList")
    public ReinitializeActionConfigurationResetRemovedPausedObjectListEnum resetRemovedPausedObjectList;

    public ReinitializeActionConfiguration withResetRemovedPausedObjectList(ReinitializeActionConfigurationResetRemovedPausedObjectListEnum resetRemovedPausedObjectList) {
        this.resetRemovedPausedObjectList = resetRemovedPausedObjectList;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, clears the report schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetReportSettings")
    public ReinitializeActionConfigurationResetReportSettingsEnum resetReportSettings;

    public ReinitializeActionConfiguration withResetReportSettings(ReinitializeActionConfigurationResetReportSettingsEnum resetReportSettings) {
        this.resetReportSettings = resetReportSettings;
        return this;
    }
    
    /**
     * When set to &lt;em&gt;1&lt;/em&gt;, resets all thresholds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetThresholds")
    public ReinitializeActionConfigurationResetThresholdsEnum resetThresholds;

    public ReinitializeActionConfiguration withResetThresholds(ReinitializeActionConfigurationResetThresholdsEnum resetThresholds) {
        this.resetThresholds = resetThresholds;
        return this;
    }
    
    public ReinitializeActionConfiguration(){}
}
