"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import privatekeycontainer as shared_privatekeycontainer
from ..shared import publickeycontainer as shared_publickeycontainer
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateKeyPairRequest:
    r"""Request model for creating a key pair"""
    
    previous_private_key: shared_privatekeycontainer.PrivateKeyContainer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previousPrivateKey') }})
    r"""Private key container"""  
    private_key_container: shared_privatekeycontainer.PrivateKeyContainer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privateKeyContainer') }})
    r"""Private key container"""  
    public_key_container: shared_publickeycontainer.PublicKeyContainer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicKeyContainer') }})
    r"""Public key container"""  
    