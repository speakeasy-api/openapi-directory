/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreatePlayerStreamerPlaybackGrantServerList = [
  "https://media.twilio.com",
] as const;

export class CreatePlayerStreamerPlaybackGrantSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreatePlayerStreamerPlaybackGrantCreatePlayerStreamerPlaybackGrantRequest extends SpeakeasyBase {
  /**
   * The full origin URL where the livestream can be streamed. If this is not provided, it can be streamed from any domain.
   */
  @SpeakeasyMetadata({ data: "form, name=AccessControlAllowOrigin" })
  accessControlAllowOrigin?: string;

  /**
   * The time to live of the PlaybackGrant. Default value is 15 seconds. Maximum value is 60 seconds.
   */
  @SpeakeasyMetadata({ data: "form, name=Ttl" })
  ttl?: number;
}

export class CreatePlayerStreamerPlaybackGrantRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreatePlayerStreamerPlaybackGrantCreatePlayerStreamerPlaybackGrantRequest;

  /**
   * The unique string generated to identify the PlayerStreamer resource associated with this PlaybackGrant
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class CreatePlayerStreamerPlaybackGrantResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  mediaV1PlayerStreamerPlayerStreamerPlaybackGrant?: shared.MediaV1PlayerStreamerPlayerStreamerPlaybackGrant;
}
