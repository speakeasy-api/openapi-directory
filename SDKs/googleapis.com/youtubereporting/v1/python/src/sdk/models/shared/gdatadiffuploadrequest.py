"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gdatacompositemedia as shared_gdatacompositemedia
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GdataDiffUploadRequest:
    r"""gdata"""
    
    checksums_info: Optional[shared_gdatacompositemedia.GdataCompositeMedia] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checksumsInfo'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    object_info: Optional[shared_gdatacompositemedia.GdataCompositeMedia] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectInfo'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    object_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectVersion'), 'exclude': lambda f: f is None }})
    r"""gdata"""  
    