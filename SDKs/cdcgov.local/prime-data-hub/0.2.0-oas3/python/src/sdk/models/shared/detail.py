"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DetailScopeEnum(str, Enum):
    r"""Does the error apply to one item"""
    PARAMETER = 'Parameter'
    REPORT = 'Report'
    ITEM = 'Item'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Detail:
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""The details of the error"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Depends on scope, either the item's id (message_id) or the report's id"""  
    scope: Optional[DetailScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope'), 'exclude': lambda f: f is None }})
    r"""Does the error apply to one item"""  
    