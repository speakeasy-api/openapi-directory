"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import connection as shared_connection
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionRequestBody:
    
    active: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'active' }})
    r"""Set if the connection synchronization is active"""  
    decoupled: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'decoupled' }})
    r"""Try to update a connection with the decoupled error"""  
    expire: Optional[datetime] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'expire' }})
    r"""Set expiration of the connection to this date"""  
    login: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'login' }})
    r"""Set login to this new login"""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'password' }})
    r"""Set password to this new password"""  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionRequest:
    
    id_connection: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_connection', 'style': 'simple', 'explode': False }})  
    id_user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id_user', 'style': 'simple', 'explode': False }})
    r"""Hint: you can use 'me' or 'all'"""  
    background: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'background', 'style': 'form', 'explode': True }})
    r"""Do the connection update/synchronization in background"""  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    psu_requested: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'psu_requested', 'style': 'form', 'explode': True }})
    r"""Whether the connection synchronization is asked by the PSU or not (default is true)"""  
    refresh_psd2_auth: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'refresh_psd2_auth', 'style': 'form', 'explode': True }})
    r"""Refresh the PSU's SCA for openapi source"""  
    request_body: Optional[PostUsersIDUserConnectionsIDConnectionRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsIDConnectionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    connection: Optional[shared_connection.Connection] = dataclasses.field(default=None)
    r"""Successful POST on Connection resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    