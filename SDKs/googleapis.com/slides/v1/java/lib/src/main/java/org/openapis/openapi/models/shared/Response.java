/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Response - A single response from an update.
 */
public class Response {
    /**
     * The result of creating an image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createImage")
    public CreateImageResponse createImage;

    public Response withCreateImage(CreateImageResponse createImage) {
        this.createImage = createImage;
        return this;
    }
    
    /**
     * The result of creating a line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createLine")
    public CreateLineResponse createLine;

    public Response withCreateLine(CreateLineResponse createLine) {
        this.createLine = createLine;
        return this;
    }
    
    /**
     * The result of creating a shape.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createShape")
    public CreateShapeResponse createShape;

    public Response withCreateShape(CreateShapeResponse createShape) {
        this.createShape = createShape;
        return this;
    }
    
    /**
     * The result of creating an embedded Google Sheets chart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createSheetsChart")
    public CreateSheetsChartResponse createSheetsChart;

    public Response withCreateSheetsChart(CreateSheetsChartResponse createSheetsChart) {
        this.createSheetsChart = createSheetsChart;
        return this;
    }
    
    /**
     * The result of creating a slide.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createSlide")
    public CreateSlideResponse createSlide;

    public Response withCreateSlide(CreateSlideResponse createSlide) {
        this.createSlide = createSlide;
        return this;
    }
    
    /**
     * The result of creating a table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTable")
    public CreateTableResponse createTable;

    public Response withCreateTable(CreateTableResponse createTable) {
        this.createTable = createTable;
        return this;
    }
    
    /**
     * The result of creating a video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createVideo")
    public CreateVideoResponse createVideo;

    public Response withCreateVideo(CreateVideoResponse createVideo) {
        this.createVideo = createVideo;
        return this;
    }
    
    /**
     * The response of duplicating an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duplicateObject")
    public DuplicateObjectResponse duplicateObject;

    public Response withDuplicateObject(DuplicateObjectResponse duplicateObject) {
        this.duplicateObject = duplicateObject;
        return this;
    }
    
    /**
     * The result of grouping objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupObjects")
    public GroupObjectsResponse groupObjects;

    public Response withGroupObjects(GroupObjectsResponse groupObjects) {
        this.groupObjects = groupObjects;
        return this;
    }
    
    /**
     * The result of replacing shapes with an image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replaceAllShapesWithImage")
    public ReplaceAllShapesWithImageResponse replaceAllShapesWithImage;

    public Response withReplaceAllShapesWithImage(ReplaceAllShapesWithImageResponse replaceAllShapesWithImage) {
        this.replaceAllShapesWithImage = replaceAllShapesWithImage;
        return this;
    }
    
    /**
     * The result of replacing shapes with a Google Sheets chart.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replaceAllShapesWithSheetsChart")
    public ReplaceAllShapesWithSheetsChartResponse replaceAllShapesWithSheetsChart;

    public Response withReplaceAllShapesWithSheetsChart(ReplaceAllShapesWithSheetsChartResponse replaceAllShapesWithSheetsChart) {
        this.replaceAllShapesWithSheetsChart = replaceAllShapesWithSheetsChart;
        return this;
    }
    
    /**
     * The result of replacing text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replaceAllText")
    public ReplaceAllTextResponse replaceAllText;

    public Response withReplaceAllText(ReplaceAllTextResponse replaceAllText) {
        this.replaceAllText = replaceAllText;
        return this;
    }
    
    public Response(){}
}
