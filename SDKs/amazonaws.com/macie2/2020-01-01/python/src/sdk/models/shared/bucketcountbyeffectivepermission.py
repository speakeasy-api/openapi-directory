"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BucketCountByEffectivePermission:
    r"""Provides information about the number of S3 buckets that are publicly accessible due to a combination of permissions settings for each bucket."""
    
    publicly_accessible: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publiclyAccessible'), 'exclude': lambda f: f is None }})  
    publicly_readable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publiclyReadable'), 'exclude': lambda f: f is None }})  
    publicly_writable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publiclyWritable'), 'exclude': lambda f: f is None }})  
    unknown: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unknown'), 'exclude': lambda f: f is None }})  
    