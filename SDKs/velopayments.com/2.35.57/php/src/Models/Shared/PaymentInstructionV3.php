<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PaymentInstructionV3 - Instruction for creating a payment
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PaymentInstructionV3
{
    /**
     * <p>Amount to send to Payee</p>
     * 
     * <p>The maximum payment amount is dependent on the currency</p>
     * 
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
    /**
     * <p>Any value here will override the memo value in the parent payout</p>
     * 
     * <p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>
     * 
     * 
     * @var ?string $paymentMemo
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentMemo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMemo = null;
    
    /**
     * <p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>
     * 
     * <p>The structure of the data will be dictated by the requirements of the payment rails</p>
     * 
     * 
     * @var ?string $paymentMetadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentMetadata')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMetadata = null;
    
    /**
     * A reference identifier for the payor for the given payee payment
     * 
     * @var ?string $payorPaymentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payorPaymentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payorPaymentId = null;
    
    /**
     * Your identifier for the payee
     * 
     * @var string $remoteId
     */
	#[\JMS\Serializer\Annotation\SerializedName('remoteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $remoteId;
    
    /**
     * <p>The identifier for the remote payments system if not Velo</p>
     * 
     * <p>Should only be used after consultation with Velo Payments</p>
     * 
     * 
     * @var ?string $remoteSystemId
     */
	#[\JMS\Serializer\Annotation\SerializedName('remoteSystemId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remoteSystemId = null;
    
    /**
     * Must match a valid source account name belonging to the payor
     * 
     * @var string $sourceAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceAccountName;
    
    /**
     * Optionally choose a specific transmission method for the payment
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PaymentInstructionV3TransmissionTypeEnum $transmissionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('transmissionType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PaymentInstructionV3TransmissionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PaymentInstructionV3TransmissionTypeEnum $transmissionType = null;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->currency = "";
		$this->paymentMemo = null;
		$this->paymentMetadata = null;
		$this->payorPaymentId = null;
		$this->remoteId = "";
		$this->remoteSystemId = null;
		$this->sourceAccountName = "";
		$this->transmissionType = null;
	}
}
