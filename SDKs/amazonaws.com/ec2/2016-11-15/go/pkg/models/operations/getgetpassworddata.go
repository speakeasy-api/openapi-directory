// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETPasswordDataActionEnum
type GETGETPasswordDataActionEnum string

const (
	GETGETPasswordDataActionEnumGetPasswordData GETGETPasswordDataActionEnum = "GetPasswordData"
)

func (e *GETGETPasswordDataActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetPasswordData":
		*e = GETGETPasswordDataActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETPasswordDataActionEnum: %s", s)
	}
}

// GETGETPasswordDataVersionEnum
type GETGETPasswordDataVersionEnum string

const (
	GETGETPasswordDataVersionEnumTwoThousandAndSixteen1115 GETGETPasswordDataVersionEnum = "2016-11-15"
)

func (e *GETGETPasswordDataVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETGETPasswordDataVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETPasswordDataVersionEnum: %s", s)
	}
}

type GETGETPasswordDataRequest struct {
	Action GETGETPasswordDataActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Windows instance.
	InstanceID        string                        `queryParam:"style=form,explode=true,name=InstanceId"`
	Version           GETGETPasswordDataVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETPasswordDataResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
