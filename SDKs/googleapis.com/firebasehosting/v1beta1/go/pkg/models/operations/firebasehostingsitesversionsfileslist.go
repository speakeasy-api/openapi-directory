// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type FirebasehostingSitesVersionsFilesListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasehostingSitesVersionsFilesListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasehostingSitesVersionsFilesListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasehostingSitesVersionsFilesListSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasehostingSitesVersionsFilesListSecurity struct {
	Option1 *FirebasehostingSitesVersionsFilesListSecurityOption1 `security:"option"`
	Option2 *FirebasehostingSitesVersionsFilesListSecurityOption2 `security:"option"`
	Option3 *FirebasehostingSitesVersionsFilesListSecurityOption3 `security:"option"`
	Option4 *FirebasehostingSitesVersionsFilesListSecurityOption4 `security:"option"`
}

// FirebasehostingSitesVersionsFilesListStatusEnum -  The type of files that should be listed for the specified version.
type FirebasehostingSitesVersionsFilesListStatusEnum string

const (
	FirebasehostingSitesVersionsFilesListStatusEnumStatusUnspecified FirebasehostingSitesVersionsFilesListStatusEnum = "STATUS_UNSPECIFIED"
	FirebasehostingSitesVersionsFilesListStatusEnumExpected          FirebasehostingSitesVersionsFilesListStatusEnum = "EXPECTED"
	FirebasehostingSitesVersionsFilesListStatusEnumActive            FirebasehostingSitesVersionsFilesListStatusEnum = "ACTIVE"
)

func (e FirebasehostingSitesVersionsFilesListStatusEnum) ToPointer() *FirebasehostingSitesVersionsFilesListStatusEnum {
	return &e
}

func (e *FirebasehostingSitesVersionsFilesListStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "EXPECTED":
		fallthrough
	case "ACTIVE":
		*e = FirebasehostingSitesVersionsFilesListStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FirebasehostingSitesVersionsFilesListStatusEnum: %v", v)
	}
}

type FirebasehostingSitesVersionsFilesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of version files to return. The service may return a lower number if fewer version files exist than this maximum number. If unspecified, defaults to 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// A token from a previous call to `ListVersionFiles` that tells the server where to resume listing.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. The version for which to list files, in the format: sites/SITE_ID /versions/VERSION_ID
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	//  The type of files that should be listed for the specified version.
	Status *FirebasehostingSitesVersionsFilesListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type FirebasehostingSitesVersionsFilesListResponse struct {
	ContentType string
	// Successful response
	ListVersionFilesResponse *shared.ListVersionFilesResponse
	StatusCode               int
	RawResponse              *http.Response
}
