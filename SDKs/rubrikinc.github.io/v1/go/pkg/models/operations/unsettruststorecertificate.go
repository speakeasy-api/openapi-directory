// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UnsetTruststoreCertificateTruststoresEnum string

const (
	UnsetTruststoreCertificateTruststoresEnumSystem UnsetTruststoreCertificateTruststoresEnum = "System"
	UnsetTruststoreCertificateTruststoresEnumGcp    UnsetTruststoreCertificateTruststoresEnum = "Gcp"
)

func (e UnsetTruststoreCertificateTruststoresEnum) ToPointer() *UnsetTruststoreCertificateTruststoresEnum {
	return &e
}

func (e *UnsetTruststoreCertificateTruststoresEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "System":
		fallthrough
	case "Gcp":
		*e = UnsetTruststoreCertificateTruststoresEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnsetTruststoreCertificateTruststoresEnum: %v", v)
	}
}

type UnsetTruststoreCertificateRequest struct {
	// ID of the Rubrik cluster or *me* for self.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Comma separated list of truststore types.
	Truststores []UnsetTruststoreCertificateTruststoresEnum `queryParam:"style=form,explode=false,name=truststores"`
}

type UnsetTruststoreCertificateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
