/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AnnotationPayload - Contains annotation information that is relevant to AutoML.
 */
public class AnnotationPayload {
    /**
     * Output only . The resource ID of the annotation spec that this annotation pertains to. The annotation spec comes from either an ancestor dataset, or the dataset that was used to train the model in use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotationSpecId")
    public String annotationSpecId;

    public AnnotationPayload withAnnotationSpecId(String annotationSpecId) {
        this.annotationSpecId = annotationSpecId;
        return this;
    }
    
    /**
     * Contains annotation details specific to classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public ClassificationAnnotation classification;

    public AnnotationPayload withClassification(ClassificationAnnotation classification) {
        this.classification = classification;
        return this;
    }
    
    /**
     * Output only. The value of display_name when the model was trained. Because this field returns a value at model training time, for different models trained using the same dataset, the returned value could be different as model owner could update the `display_name` between any two model training.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public AnnotationPayload withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Annotation details for image object detection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageObjectDetection")
    public ImageObjectDetectionAnnotation imageObjectDetection;

    public AnnotationPayload withImageObjectDetection(ImageObjectDetectionAnnotation imageObjectDetection) {
        this.imageObjectDetection = imageObjectDetection;
        return this;
    }
    
    /**
     * Contains annotation details specific to Tables.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tables")
    public TablesAnnotation tables;

    public AnnotationPayload withTables(TablesAnnotation tables) {
        this.tables = tables;
        return this;
    }
    
    /**
     * Annotation for identifying spans of text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textExtraction")
    public TextExtractionAnnotation textExtraction;

    public AnnotationPayload withTextExtraction(TextExtractionAnnotation textExtraction) {
        this.textExtraction = textExtraction;
        return this;
    }
    
    /**
     * Contains annotation details specific to text sentiment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textSentiment")
    public TextSentimentAnnotation textSentiment;

    public AnnotationPayload withTextSentiment(TextSentimentAnnotation textSentiment) {
        this.textSentiment = textSentiment;
        return this;
    }
    
    /**
     * Annotation details specific to translation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("translation")
    public TranslationAnnotation translation;

    public AnnotationPayload withTranslation(TranslationAnnotation translation) {
        this.translation = translation;
        return this;
    }
    
    /**
     * Contains annotation details specific to video classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoClassification")
    public VideoClassificationAnnotation videoClassification;

    public AnnotationPayload withVideoClassification(VideoClassificationAnnotation videoClassification) {
        this.videoClassification = videoClassification;
        return this;
    }
    
    /**
     * Annotation details for video object tracking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoObjectTracking")
    public VideoObjectTrackingAnnotation videoObjectTracking;

    public AnnotationPayload withVideoObjectTracking(VideoObjectTrackingAnnotation videoObjectTracking) {
        this.videoObjectTracking = videoObjectTracking;
        return this;
    }
    
    public AnnotationPayload(){}
}
