// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ComputeEnginePreferencesLicenseTypeEnum - License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
type ComputeEnginePreferencesLicenseTypeEnum string

const (
	ComputeEnginePreferencesLicenseTypeEnumLicenseTypeUnspecified         ComputeEnginePreferencesLicenseTypeEnum = "LICENSE_TYPE_UNSPECIFIED"
	ComputeEnginePreferencesLicenseTypeEnumLicenseTypeDefault             ComputeEnginePreferencesLicenseTypeEnum = "LICENSE_TYPE_DEFAULT"
	ComputeEnginePreferencesLicenseTypeEnumLicenseTypeBringYourOwnLicense ComputeEnginePreferencesLicenseTypeEnum = "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE"
)

func (e ComputeEnginePreferencesLicenseTypeEnum) ToPointer() *ComputeEnginePreferencesLicenseTypeEnum {
	return &e
}

func (e *ComputeEnginePreferencesLicenseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LICENSE_TYPE_UNSPECIFIED":
		fallthrough
	case "LICENSE_TYPE_DEFAULT":
		fallthrough
	case "LICENSE_TYPE_BRING_YOUR_OWN_LICENSE":
		*e = ComputeEnginePreferencesLicenseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComputeEnginePreferencesLicenseTypeEnum: %v", v)
	}
}

// ComputeEnginePreferencesPersistentDiskTypeEnum - Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.
type ComputeEnginePreferencesPersistentDiskTypeEnum string

const (
	ComputeEnginePreferencesPersistentDiskTypeEnumPersistentDiskTypeUnspecified ComputeEnginePreferencesPersistentDiskTypeEnum = "PERSISTENT_DISK_TYPE_UNSPECIFIED"
	ComputeEnginePreferencesPersistentDiskTypeEnumPersistentDiskTypeStandard    ComputeEnginePreferencesPersistentDiskTypeEnum = "PERSISTENT_DISK_TYPE_STANDARD"
	ComputeEnginePreferencesPersistentDiskTypeEnumPersistentDiskTypeBalanced    ComputeEnginePreferencesPersistentDiskTypeEnum = "PERSISTENT_DISK_TYPE_BALANCED"
	ComputeEnginePreferencesPersistentDiskTypeEnumPersistentDiskTypeSsd         ComputeEnginePreferencesPersistentDiskTypeEnum = "PERSISTENT_DISK_TYPE_SSD"
)

func (e ComputeEnginePreferencesPersistentDiskTypeEnum) ToPointer() *ComputeEnginePreferencesPersistentDiskTypeEnum {
	return &e
}

func (e *ComputeEnginePreferencesPersistentDiskTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PERSISTENT_DISK_TYPE_UNSPECIFIED":
		fallthrough
	case "PERSISTENT_DISK_TYPE_STANDARD":
		fallthrough
	case "PERSISTENT_DISK_TYPE_BALANCED":
		fallthrough
	case "PERSISTENT_DISK_TYPE_SSD":
		*e = ComputeEnginePreferencesPersistentDiskTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComputeEnginePreferencesPersistentDiskTypeEnum: %v", v)
	}
}

// ComputeEnginePreferences - The user preferences relating to Compute Engine target platform.
type ComputeEnginePreferences struct {
	// License type to consider when calculating costs for virtual machine insights and recommendations. If unspecified, costs are calculated based on the default licensing plan.
	LicenseType *ComputeEnginePreferencesLicenseTypeEnum `json:"licenseType,omitempty"`
	// The type of machines to consider when calculating virtual machine migration insights and recommendations. Not all machine types are available in all zones and regions.
	MachinePreferences *MachinePreferences `json:"machinePreferences,omitempty"`
	// Persistent disk type to use. If unspecified (default), all types are considered, based on available usage data.
	PersistentDiskType *ComputeEnginePreferencesPersistentDiskTypeEnum `json:"persistentDiskType,omitempty"`
}
