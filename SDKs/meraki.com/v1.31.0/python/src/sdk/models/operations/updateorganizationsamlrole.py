"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum(str, Enum):
    r"""The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'"""
    FULL = 'full'
    GUEST_AMBASSADOR = 'guest-ambassador'
    MONITOR_ONLY = 'monitor-only'
    READ_ONLY = 'read-only'
    SSID_ADMIN = 'ssid-admin'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationSamlRoleRequestBodyNetworks:
    
    access: UpdateOrganizationSamlRoleRequestBodyNetworksAccessEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access') }})
    r"""The privilege of the SAML administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador', 'monitor-only' or 'ssid-admin'"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The network ID"""  
    
class UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum(str, Enum):
    r"""The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'"""
    ENTERPRISE = 'enterprise'
    FULL = 'full'
    NONE = 'none'
    READ_ONLY = 'read-only'

class UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum(str, Enum):
    r"""The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"""
    FULL = 'full'
    GUEST_AMBASSADOR = 'guest-ambassador'
    MONITOR_ONLY = 'monitor-only'
    READ_ONLY = 'read-only'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationSamlRoleRequestBodyTags:
    
    access: UpdateOrganizationSamlRoleRequestBodyTagsAccessEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access') }})
    r"""The privilege of the SAML administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'"""  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})
    r"""The name of the tag"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationSamlRoleRequestBody:
    
    networks: Optional[list[UpdateOrganizationSamlRoleRequestBodyNetworks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networks'), 'exclude': lambda f: f is None }})
    r"""The list of networks that the SAML administrator has privileges on"""  
    org_access: Optional[UpdateOrganizationSamlRoleRequestBodyOrgAccessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgAccess'), 'exclude': lambda f: f is None }})
    r"""The privilege of the SAML administrator on the organization. Can be one of 'none', 'read-only', 'full' or 'enterprise'"""  
    role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""The role of the SAML administrator"""  
    tags: Optional[list[UpdateOrganizationSamlRoleRequestBodyTags]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""The list of tags that the SAML administrator has privleges on"""  
    

@dataclasses.dataclass
class UpdateOrganizationSamlRoleRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    saml_role_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'samlRoleId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateOrganizationSamlRoleRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationSamlRole200ApplicationJSONNetworks:
    
    access: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access'), 'exclude': lambda f: f is None }})
    r"""The privilege of the SAML administrator on the network"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The network ID"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationSamlRole200ApplicationJSONTags:
    
    access: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access'), 'exclude': lambda f: f is None }})
    r"""The privilege of the SAML administrator on the tag"""  
    tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag'), 'exclude': lambda f: f is None }})
    r"""The name of the tag"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateOrganizationSamlRole200ApplicationJSON:
    r"""Successful operation"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID associated with the SAML role"""  
    networks: Optional[list[UpdateOrganizationSamlRole200ApplicationJSONNetworks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networks'), 'exclude': lambda f: f is None }})
    r"""The list of networks that the SAML administrator has privileges on"""  
    org_access: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgAccess'), 'exclude': lambda f: f is None }})
    r"""The privilege of the SAML administrator on the organization"""  
    role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""The role of the SAML administrator"""  
    tags: Optional[list[UpdateOrganizationSamlRole200ApplicationJSONTags]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""The list of tags that the SAML administrator has privleges on"""  
    

@dataclasses.dataclass
class UpdateOrganizationSamlRoleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_organization_saml_role_200_application_json_object: Optional[UpdateOrganizationSamlRole200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful operation"""  
    