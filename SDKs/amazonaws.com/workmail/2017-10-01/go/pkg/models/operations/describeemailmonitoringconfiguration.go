// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeEmailMonitoringConfigurationXAmzTargetEnum
type DescribeEmailMonitoringConfigurationXAmzTargetEnum string

const (
	DescribeEmailMonitoringConfigurationXAmzTargetEnumWorkMailServiceDescribeEmailMonitoringConfiguration DescribeEmailMonitoringConfigurationXAmzTargetEnum = "WorkMailService.DescribeEmailMonitoringConfiguration"
)

func (e *DescribeEmailMonitoringConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkMailService.DescribeEmailMonitoringConfiguration":
		*e = DescribeEmailMonitoringConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeEmailMonitoringConfigurationXAmzTargetEnum: %s", s)
	}
}

type DescribeEmailMonitoringConfigurationRequest struct {
	DescribeEmailMonitoringConfigurationRequest shared.DescribeEmailMonitoringConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                              *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                    *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                           *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                  DescribeEmailMonitoringConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeEmailMonitoringConfigurationResponse struct {
	ContentType string
	// Success
	DescribeEmailMonitoringConfigurationResponse *shared.DescribeEmailMonitoringConfigurationResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
