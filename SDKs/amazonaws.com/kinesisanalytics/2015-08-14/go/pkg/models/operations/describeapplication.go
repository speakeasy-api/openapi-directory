// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeApplicationXAmzTargetEnum
type DescribeApplicationXAmzTargetEnum string

const (
	DescribeApplicationXAmzTargetEnumKinesisAnalytics20150814DescribeApplication DescribeApplicationXAmzTargetEnum = "KinesisAnalytics_20150814.DescribeApplication"
)

func (e *DescribeApplicationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KinesisAnalytics_20150814.DescribeApplication":
		*e = DescribeApplicationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeApplicationXAmzTargetEnum: %s", s)
	}
}

type DescribeApplicationHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeApplicationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeApplicationRequest struct {
	Headers DescribeApplicationHeaders
	Request shared.DescribeApplicationRequest `request:"mediaType=application/json"`
}

type DescribeApplicationResponse struct {
	ContentType string
	// Success
	DescribeApplicationResponse *shared.DescribeApplicationResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
