"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import checkouttype_enum as shared_checkouttype_enum
from ..shared import entitlementdata as shared_entitlementdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckoutLicenseRequest:
    
    checkout_type: shared_checkouttype_enum.CheckoutTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CheckoutType') }})  
    client_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientToken') }})  
    entitlements: list[shared_entitlementdata.EntitlementData] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Entitlements') }})  
    key_fingerprint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyFingerprint') }})  
    product_sku: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductSKU') }})  
    beneficiary: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Beneficiary'), 'exclude': lambda f: f is None }})  
    node_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NodeId'), 'exclude': lambda f: f is None }})  
    