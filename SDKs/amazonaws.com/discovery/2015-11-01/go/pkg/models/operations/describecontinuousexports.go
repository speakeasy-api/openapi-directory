// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeContinuousExportsXAmzTargetEnum
type DescribeContinuousExportsXAmzTargetEnum string

const (
	DescribeContinuousExportsXAmzTargetEnumAwsPoseidonServiceV20151101DescribeContinuousExports DescribeContinuousExportsXAmzTargetEnum = "AWSPoseidonService_V2015_11_01.DescribeContinuousExports"
)

func (e *DescribeContinuousExportsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSPoseidonService_V2015_11_01.DescribeContinuousExports":
		*e = DescribeContinuousExportsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeContinuousExportsXAmzTargetEnum: %s", s)
	}
}

type DescribeContinuousExportsRequest struct {
	DescribeContinuousExportsRequest shared.DescribeContinuousExportsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       DescribeContinuousExportsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type DescribeContinuousExportsResponse struct {
	// AuthorizationErrorException
	AuthorizationErrorException interface{}
	ContentType                 string
	// Success
	DescribeContinuousExportsResponse *shared.DescribeContinuousExportsResponse
	// HomeRegionNotSetException
	HomeRegionNotSetException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServerInternalErrorException
	ServerInternalErrorException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
}
