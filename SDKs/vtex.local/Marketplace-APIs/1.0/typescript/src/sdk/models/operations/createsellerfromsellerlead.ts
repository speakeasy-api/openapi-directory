/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class CreateSellerFromSellerLeadRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Marketplace's account name, the same one inputted on the endpoint's path.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=accountName",
  })
  accountName: string;

  /**
   * Environment to use. Used as part of the URL.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=environment",
  })
  environment: string;

  /**
   * Whether the Seller Lead is `active` or not in Seller Portal. This request only supports the value `false` in this field. If thatÂ´s not the case, the request will respond with an internal error.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isActive",
  })
  isActive: boolean;

  /**
   * ID of the Seller Lead invited to the marketplace.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=sellerLeadId",
  })
  sellerLeadId: string;
}

export class CreateSellerFromSellerLeadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
