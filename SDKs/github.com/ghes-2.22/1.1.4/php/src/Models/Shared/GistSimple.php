<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GistSimple - Gist Simple
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GistSimple
{
	#[\JMS\Serializer\Annotation\SerializedName('comments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $comments = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commentsUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('commits_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitsUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * $files
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\GistSimpleFiles> $files
     */
	#[\JMS\Serializer\Annotation\SerializedName('files')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\GistSimpleFiles>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $files = null;
    
    /**
     * Gist
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GistSimpleGist $forkOf
     */
	#[\JMS\Serializer\Annotation\SerializedName('fork_of')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GistSimpleGist')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GistSimpleGist $forkOf = null;
    
    /**
     * $forks
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GistSimpleForks> $forks
     */
	#[\JMS\Serializer\Annotation\SerializedName('forks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GistSimpleForks>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $forks = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('forks_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $forksUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('git_pull_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitPullUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('git_push_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gitPushUrl = null;
    
    /**
     * $history
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GistHistory> $history
     */
	#[\JMS\Serializer\Annotation\SerializedName('history')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GistHistory>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $history = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeId = null;
    
    /**
     * Simple User
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SimpleUser $owner
     */
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleUser')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SimpleUser $owner = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('public')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $public = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('truncated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $truncated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $user = null;
    
	public function __construct()
	{
		$this->comments = null;
		$this->commentsUrl = null;
		$this->commitsUrl = null;
		$this->createdAt = null;
		$this->description = null;
		$this->files = null;
		$this->forkOf = null;
		$this->forks = null;
		$this->forksUrl = null;
		$this->gitPullUrl = null;
		$this->gitPushUrl = null;
		$this->history = null;
		$this->htmlUrl = null;
		$this->id = null;
		$this->nodeId = null;
		$this->owner = null;
		$this->public = null;
		$this->truncated = null;
		$this->updatedAt = null;
		$this->url = null;
		$this->user = null;
	}
}
