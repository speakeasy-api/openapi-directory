/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PaymentInitiationConsentScopeEnum } from "./paymentinitiationconsentscopeenum";
import { Expose } from "class-transformer";

/**
 * PaymentInitiationConsentCreateRequest defines the request schema for `/payment_initiation/consent/create`
 */
export class PaymentInitiationConsentCreateRequest extends SpeakeasyBase {
  /**
   * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * Limitations that will be applied to payments initiated using the payment consent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "constraints" })
  constraints: Record<string, any>;

  /**
   * Additional payment consent options
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options?: Record<string, any>;

  /**
   * The ID of the recipient the payment consent is for. The created consent can be used to transfer funds to this recipient only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recipient_id" })
  recipientId: string;

  /**
   * A reference for the payment consent. This must be an alphanumeric string with at most 18 characters and must not contain any special characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * An array of payment consent scopes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes: PaymentInitiationConsentScopeEnum[];

  /**
   * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;
}
