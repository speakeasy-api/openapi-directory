/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoScalingConfigurationStatusEnum } from "./autoscalingconfigurationstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * <p>Describes an App Runner automatic scaling configuration resource.</p> <p>A higher <code>MinSize</code> increases the spread of your App Runner service over more Availability Zones in the Amazon Web Services Region. The tradeoff is a higher minimal cost.</p> <p>A lower <code>MaxSize</code> controls your cost. The tradeoff is lower responsiveness during peak demand.</p> <p>Multiple revisions of a configuration might have the same <code>AutoScalingConfigurationName</code> and different <code>AutoScalingConfigurationRevision</code> values.</p>
 */
export class AutoScalingConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingConfigurationArn" })
  autoScalingConfigurationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingConfigurationName" })
  autoScalingConfigurationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingConfigurationRevision" })
  autoScalingConfigurationRevision?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeletedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Latest" })
  latest?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrency" })
  maxConcurrency?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxSize" })
  maxSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MinSize" })
  minSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: AutoScalingConfigurationStatusEnum;
}
