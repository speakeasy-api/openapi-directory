// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateConfigurationSetSendingEnabledActionEnum
type GETUpdateConfigurationSetSendingEnabledActionEnum string

const (
	GETUpdateConfigurationSetSendingEnabledActionEnumUpdateConfigurationSetSendingEnabled GETUpdateConfigurationSetSendingEnabledActionEnum = "UpdateConfigurationSetSendingEnabled"
)

func (e *GETUpdateConfigurationSetSendingEnabledActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateConfigurationSetSendingEnabled":
		*e = GETUpdateConfigurationSetSendingEnabledActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateConfigurationSetSendingEnabledActionEnum: %s", s)
	}
}

// GETUpdateConfigurationSetSendingEnabledVersionEnum
type GETUpdateConfigurationSetSendingEnabledVersionEnum string

const (
	GETUpdateConfigurationSetSendingEnabledVersionEnumTwoThousandAndTen1201 GETUpdateConfigurationSetSendingEnabledVersionEnum = "2010-12-01"
)

func (e *GETUpdateConfigurationSetSendingEnabledVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETUpdateConfigurationSetSendingEnabledVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateConfigurationSetSendingEnabledVersionEnum: %s", s)
	}
}

type GETUpdateConfigurationSetSendingEnabledQueryParams struct {
	Action GETUpdateConfigurationSetSendingEnabledActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the configuration set that you want to update.
	ConfigurationSetName string `queryParam:"style=form,explode=true,name=ConfigurationSetName"`
	// Describes whether email sending is enabled or disabled for the configuration set.
	Enabled bool                                               `queryParam:"style=form,explode=true,name=Enabled"`
	Version GETUpdateConfigurationSetSendingEnabledVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETUpdateConfigurationSetSendingEnabledHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateConfigurationSetSendingEnabledRequest struct {
	QueryParams GETUpdateConfigurationSetSendingEnabledQueryParams
	Headers     GETUpdateConfigurationSetSendingEnabledHeaders
}

type GETUpdateConfigurationSetSendingEnabledResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
