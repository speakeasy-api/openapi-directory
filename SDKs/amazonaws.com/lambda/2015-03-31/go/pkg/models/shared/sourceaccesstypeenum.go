// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SourceAccessTypeEnum string

const (
	SourceAccessTypeEnumBasicAuth                SourceAccessTypeEnum = "BASIC_AUTH"
	SourceAccessTypeEnumVpcSubnet                SourceAccessTypeEnum = "VPC_SUBNET"
	SourceAccessTypeEnumVpcSecurityGroup         SourceAccessTypeEnum = "VPC_SECURITY_GROUP"
	SourceAccessTypeEnumSaslScram512Auth         SourceAccessTypeEnum = "SASL_SCRAM_512_AUTH"
	SourceAccessTypeEnumSaslScram256Auth         SourceAccessTypeEnum = "SASL_SCRAM_256_AUTH"
	SourceAccessTypeEnumVirtualHost              SourceAccessTypeEnum = "VIRTUAL_HOST"
	SourceAccessTypeEnumClientCertificateTLSAuth SourceAccessTypeEnum = "CLIENT_CERTIFICATE_TLS_AUTH"
	SourceAccessTypeEnumServerRootCaCertificate  SourceAccessTypeEnum = "SERVER_ROOT_CA_CERTIFICATE"
)

func (e *SourceAccessTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC_AUTH":
		fallthrough
	case "VPC_SUBNET":
		fallthrough
	case "VPC_SECURITY_GROUP":
		fallthrough
	case "SASL_SCRAM_512_AUTH":
		fallthrough
	case "SASL_SCRAM_256_AUTH":
		fallthrough
	case "VIRTUAL_HOST":
		fallthrough
	case "CLIENT_CERTIFICATE_TLS_AUTH":
		fallthrough
	case "SERVER_ROOT_CA_CERTIFICATE":
		*e = SourceAccessTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAccessTypeEnum: %s", s)
	}
}
