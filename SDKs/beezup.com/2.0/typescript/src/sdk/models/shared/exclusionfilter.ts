/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The exclusion filter
 */
export class ExclusionFilter extends SpeakeasyBase {
  /**
   * The channel column identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelColumnId" })
  channelColumnId: string;

  /**
   * indicates if the filter is currently enable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * Indicate the filter's group. All filters in the same group means an "AND" operation in the filter group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupId" })
  groupId: string;

  /**
   * The exclusion filter name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The exclusion filter operator name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operatorName" })
  operatorName: string;

  /**
   * The position of the exclusion filter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position: number;

  /**
   * Indicate the filter group position. This information is used for the UI purpose and must be unique in the filter group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "positionInGroup" })
  positionInGroup: number;

  /**
   * The value indicate by the user when the filter operation requires it.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
