/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GrokClassifier - A classifier that uses &lt;code&gt;grok&lt;/code&gt; patterns.
 */
public class GrokClassifier {
    @JsonProperty("Classification")
    public String classification;

    public GrokClassifier withClassification(String classification) {
        this.classification = classification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public GrokClassifier withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomPatterns")
    public String customPatterns;

    public GrokClassifier withCustomPatterns(String customPatterns) {
        this.customPatterns = customPatterns;
        return this;
    }
    
    @JsonProperty("GrokPattern")
    public String grokPattern;

    public GrokClassifier withGrokPattern(String grokPattern) {
        this.grokPattern = grokPattern;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdated")
    public OffsetDateTime lastUpdated;

    public GrokClassifier withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public GrokClassifier withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Version")
    public Long version;

    public GrokClassifier withVersion(Long version) {
        this.version = version;
        return this;
    }
    
    public GrokClassifier(@JsonProperty("Classification") String classification, @JsonProperty("GrokPattern") String grokPattern, @JsonProperty("Name") String name) {
        this.classification = classification;
        this.grokPattern = grokPattern;
        this.name = name;
  }
}
