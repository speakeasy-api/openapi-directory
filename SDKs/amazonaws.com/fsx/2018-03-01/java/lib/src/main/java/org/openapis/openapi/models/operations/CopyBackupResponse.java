/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CopyBackupResponse {
    /**
     * BackupNotFound
     */
    
    public Object backupNotFound;

    public CopyBackupResponse withBackupNotFound(Object backupNotFound) {
        this.backupNotFound = backupNotFound;
        return this;
    }
    
    /**
     * BadRequest
     */
    
    public Object badRequest;

    public CopyBackupResponse withBadRequest(Object badRequest) {
        this.badRequest = badRequest;
        return this;
    }
    
    
    public String contentType;

    public CopyBackupResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CopyBackupResponse copyBackupResponse;

    public CopyBackupResponse withCopyBackupResponse(org.openapis.openapi.models.shared.CopyBackupResponse copyBackupResponse) {
        this.copyBackupResponse = copyBackupResponse;
        return this;
    }
    
    /**
     * IncompatibleParameterError
     */
    
    public Object incompatibleParameterError;

    public CopyBackupResponse withIncompatibleParameterError(Object incompatibleParameterError) {
        this.incompatibleParameterError = incompatibleParameterError;
        return this;
    }
    
    /**
     * IncompatibleRegionForMultiAZ
     */
    
    public Object incompatibleRegionForMultiAZ;

    public CopyBackupResponse withIncompatibleRegionForMultiAZ(Object incompatibleRegionForMultiAZ) {
        this.incompatibleRegionForMultiAZ = incompatibleRegionForMultiAZ;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;

    public CopyBackupResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * InvalidDestinationKmsKey
     */
    
    public Object invalidDestinationKmsKey;

    public CopyBackupResponse withInvalidDestinationKmsKey(Object invalidDestinationKmsKey) {
        this.invalidDestinationKmsKey = invalidDestinationKmsKey;
        return this;
    }
    
    /**
     * InvalidRegion
     */
    
    public Object invalidRegion;

    public CopyBackupResponse withInvalidRegion(Object invalidRegion) {
        this.invalidRegion = invalidRegion;
        return this;
    }
    
    /**
     * InvalidSourceKmsKey
     */
    
    public Object invalidSourceKmsKey;

    public CopyBackupResponse withInvalidSourceKmsKey(Object invalidSourceKmsKey) {
        this.invalidSourceKmsKey = invalidSourceKmsKey;
        return this;
    }
    
    
    public Integer statusCode;

    public CopyBackupResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CopyBackupResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ServiceLimitExceeded
     */
    
    public Object serviceLimitExceeded;

    public CopyBackupResponse withServiceLimitExceeded(Object serviceLimitExceeded) {
        this.serviceLimitExceeded = serviceLimitExceeded;
        return this;
    }
    
    /**
     * SourceBackupUnavailable
     */
    
    public Object sourceBackupUnavailable;

    public CopyBackupResponse withSourceBackupUnavailable(Object sourceBackupUnavailable) {
        this.sourceBackupUnavailable = sourceBackupUnavailable;
        return this;
    }
    
    /**
     * UnsupportedOperation
     */
    
    public Object unsupportedOperation;

    public CopyBackupResponse withUnsupportedOperation(Object unsupportedOperation) {
        this.unsupportedOperation = unsupportedOperation;
        return this;
    }
    
    public CopyBackupResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
