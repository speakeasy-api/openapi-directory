/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum UserApiTokensList401ApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class UserApiTokensList401ApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: UserApiTokensList401ApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Unauthorized
 */
export class UserApiTokensList401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => UserApiTokensList401ApplicationJSONError)
  error: UserApiTokensList401ApplicationJSONError;
}

export enum UserApiTokensList400ApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class UserApiTokensList400ApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: UserApiTokensList400ApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class UserApiTokensList400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => UserApiTokensList400ApplicationJSONError)
  error: UserApiTokensList400ApplicationJSONError;
}

export enum UserApiTokensList200ApplicationJSONScopeEnum {
  All = "all",
  Viewer = "viewer",
}

export class UserApiTokensList200ApplicationJSON extends SpeakeasyBase {
  /**
   * The creation time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  /**
   * The description of the token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The unique id (UUID) of the api token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The scope for this token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: UserApiTokensList200ApplicationJSONScopeEnum[];
}

export class UserApiTokensListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: UserApiTokensList200ApplicationJSON })
  userApiTokensList200ApplicationJSONObjects?: UserApiTokensList200ApplicationJSON[];

  /**
   * Error
   */
  @SpeakeasyMetadata()
  userApiTokensList400ApplicationJSONObject?: UserApiTokensList400ApplicationJSON;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  userApiTokensList401ApplicationJSONObject?: UserApiTokensList401ApplicationJSON;
}
