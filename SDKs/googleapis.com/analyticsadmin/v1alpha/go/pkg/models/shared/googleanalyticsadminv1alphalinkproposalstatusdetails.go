// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum - Output only. The source of this proposal.
type GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum string

const (
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnumLinkProposalInitiatingProductUnspecified GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum = "LINK_PROPOSAL_INITIATING_PRODUCT_UNSPECIFIED"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnumGoogleAnalytics                          GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum = "GOOGLE_ANALYTICS"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnumLinkedProduct                            GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum = "LINKED_PRODUCT"
)

func (e GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum) ToPointer() *GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum {
	return &e
}

func (e *GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LINK_PROPOSAL_INITIATING_PRODUCT_UNSPECIFIED":
		fallthrough
	case "GOOGLE_ANALYTICS":
		fallthrough
	case "LINKED_PRODUCT":
		*e = GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum: %v", v)
	}
}

// GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum - Output only. The state of this proposal.
type GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum string

const (
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumLinkProposalStateUnspecified      GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "LINK_PROPOSAL_STATE_UNSPECIFIED"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumAwaitingReviewFromGoogleAnalytics GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "AWAITING_REVIEW_FROM_GOOGLE_ANALYTICS"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumAwaitingReviewFromLinkedProduct   GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "AWAITING_REVIEW_FROM_LINKED_PRODUCT"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumWithdrawn                         GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "WITHDRAWN"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumDeclined                          GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "DECLINED"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumExpired                           GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "EXPIRED"
	GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnumObsolete                          GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum = "OBSOLETE"
)

func (e GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum) ToPointer() *GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum {
	return &e
}

func (e *GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LINK_PROPOSAL_STATE_UNSPECIFIED":
		fallthrough
	case "AWAITING_REVIEW_FROM_GOOGLE_ANALYTICS":
		fallthrough
	case "AWAITING_REVIEW_FROM_LINKED_PRODUCT":
		fallthrough
	case "WITHDRAWN":
		fallthrough
	case "DECLINED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "OBSOLETE":
		*e = GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum: %v", v)
	}
}

// GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails - Status information for a link proposal.
type GoogleAnalyticsAdminV1alphaLinkProposalStatusDetails struct {
	// Output only. The source of this proposal.
	LinkProposalInitiatingProduct *GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalInitiatingProductEnum `json:"linkProposalInitiatingProduct,omitempty"`
	// Output only. The state of this proposal.
	LinkProposalState *GoogleAnalyticsAdminV1alphaLinkProposalStatusDetailsLinkProposalStateEnum `json:"linkProposalState,omitempty"`
	// Output only. The email address of the user that proposed this linkage.
	RequestorEmail *string `json:"requestorEmail,omitempty"`
}
