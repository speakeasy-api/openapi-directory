"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import billingentity as shared_billingentity
from ..shared import orderitem as shared_orderitem
from ..shared import shippinglocation as shared_shippinglocation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TerminalOrder:
    r"""OK - the request has succeeded."""
    
    billing_entity: Optional[shared_billingentity.BillingEntity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingEntity'), 'exclude': lambda f: f is None }})  
    customer_order_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customerOrderReference'), 'exclude': lambda f: f is None }})
    r"""The merchant-defined purchase order number. This will be printed on the packing list."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the order."""  
    items: Optional[list[shared_orderitem.OrderItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    r"""The products included in the order."""  
    order_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderDate'), 'exclude': lambda f: f is None }})
    r"""The date and time that the order was placed, in UTC ISO 8601 format. For example, \\"2011-12-03T10:15:30Z\\"."""  
    shipping_location: Optional[shared_shippinglocation.ShippingLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingLocation'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The processing status of the order."""  
    tracking_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trackingUrl'), 'exclude': lambda f: f is None }})
    r"""The URL, provided by the carrier company, where the shipment can be tracked."""  
    