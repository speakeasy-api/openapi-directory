"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grouporderingidsummary as shared_grouporderingidsummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribePrincipalMappingResponse:
    r"""Success"""
    
    data_source_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSourceId'), 'exclude': lambda f: f is None }})  
    group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GroupId'), 'exclude': lambda f: f is None }})  
    group_ordering_id_summaries: Optional[list[shared_grouporderingidsummary.GroupOrderingIDSummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GroupOrderingIdSummaries'), 'exclude': lambda f: f is None }})  
    index_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IndexId'), 'exclude': lambda f: f is None }})  
    