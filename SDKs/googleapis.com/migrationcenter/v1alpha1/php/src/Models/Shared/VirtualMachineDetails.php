<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VirtualMachineDetails - Details of a VirtualMachine.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VirtualMachineDetails
{
    /**
     * Number of CPU cores in the VirtualMachine. Must be non-negative.
     * 
     * @var ?int $coreCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('coreCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $coreCount = null;
    
    /**
     * VM creation timestamp.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Information from Guest-level collections.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GuestOsDetails $guestOs
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestOs')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GuestOsDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GuestOsDetails $guestOs = null;
    
    /**
     * The amount of memory in the VirtualMachine. Must be non-negative.
     * 
     * @var ?int $memoryMb
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryMb')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryMb = null;
    
    /**
     * What family the OS belong to, if known.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailsOsFamilyEnum $osFamily
     */
	#[\JMS\Serializer\Annotation\SerializedName('osFamily')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VirtualMachineDetailsOsFamilyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineDetailsOsFamilyEnum $osFamily = null;
    
    /**
     * The name of the operating system running on the VirtualMachine.
     * 
     * @var ?string $osName
     */
	#[\JMS\Serializer\Annotation\SerializedName('osName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $osName = null;
    
    /**
     * The version of the operating system running on the virtual machine.
     * 
     * @var ?string $osVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('osVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $osVersion = null;
    
    /**
     * Information about the platform.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PlatformDetails $platform
     */
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PlatformDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PlatformDetails $platform = null;
    
    /**
     * Power state of VM (poweredOn or poweredOff).
     * 
     * @var ?string $powerState
     */
	#[\JMS\Serializer\Annotation\SerializedName('powerState')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $powerState = null;
    
    /**
     * Folder name in vCenter where asset resides.
     * 
     * @var ?string $vcenterFolder
     */
	#[\JMS\Serializer\Annotation\SerializedName('vcenterFolder')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vcenterFolder = null;
    
    /**
     * vCenter URL used in collection.
     * 
     * @var ?string $vcenterUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('vcenterUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vcenterUrl = null;
    
    /**
     * vCenter VM ID.
     * 
     * @var ?string $vcenterVmId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vcenterVmId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vcenterVmId = null;
    
    /**
     * Details of the VM architecture.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VirtualMachineArchitectureDetails $vmArchitecture
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmArchitecture')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualMachineArchitectureDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineArchitectureDetails $vmArchitecture = null;
    
    /**
     * Details of VM disks.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VirtualMachineDiskDetails $vmDisks
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmDisks')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualMachineDiskDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineDiskDetails $vmDisks = null;
    
    /**
     * Virtual Machine display name.
     * 
     * @var ?string $vmName
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmName = null;
    
    /**
     * Details of network adapters and settings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VirtualMachineNetworkDetails $vmNetwork
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmNetwork')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VirtualMachineNetworkDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VirtualMachineNetworkDetails $vmNetwork = null;
    
    /**
     * Virtual Machine unique identifier.
     * 
     * @var ?string $vmUuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmUuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmUuid = null;
    
	public function __construct()
	{
		$this->coreCount = null;
		$this->createTime = null;
		$this->guestOs = null;
		$this->memoryMb = null;
		$this->osFamily = null;
		$this->osName = null;
		$this->osVersion = null;
		$this->platform = null;
		$this->powerState = null;
		$this->vcenterFolder = null;
		$this->vcenterUrl = null;
		$this->vcenterVmId = null;
		$this->vmArchitecture = null;
		$this->vmDisks = null;
		$this->vmName = null;
		$this->vmNetwork = null;
		$this->vmUuid = null;
	}
}
