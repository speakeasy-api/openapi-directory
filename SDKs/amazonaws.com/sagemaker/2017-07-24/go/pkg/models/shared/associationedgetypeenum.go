// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AssociationEdgeTypeEnum string

const (
	AssociationEdgeTypeEnumContributedTo  AssociationEdgeTypeEnum = "ContributedTo"
	AssociationEdgeTypeEnumAssociatedWith AssociationEdgeTypeEnum = "AssociatedWith"
	AssociationEdgeTypeEnumDerivedFrom    AssociationEdgeTypeEnum = "DerivedFrom"
	AssociationEdgeTypeEnumProduced       AssociationEdgeTypeEnum = "Produced"
)

func (e AssociationEdgeTypeEnum) ToPointer() *AssociationEdgeTypeEnum {
	return &e
}

func (e *AssociationEdgeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ContributedTo":
		fallthrough
	case "AssociatedWith":
		fallthrough
	case "DerivedFrom":
		fallthrough
	case "Produced":
		*e = AssociationEdgeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociationEdgeTypeEnum: %v", v)
	}
}
