/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { HistoricalWeather } from "./historicalweather";
import { TimelineWeatherApi15DayForecastRequest } from "./timelineweatherapi15dayforecastrequest";
import { TimelineWeatherAPIDateRangeRequest } from "./timelineweatherapidaterangerequest";
import { TimelineWeatherAPISingleDateRequest } from "./timelineweatherapisingledaterequest";
import { WeatherForecast } from "./weatherforecast";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://weather.visualcrossing.com"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * Weather Forecast and Historical Weather Data via RESTful API.
 *
 * @see {@link https://www.visualcrossing.com/resources/documentation/weather-api/timeline-weather-api/} - Full Timeline Weather API Documentation
 */
export class SDK {
  public historicalWeather: HistoricalWeather;
  public timelineWeatherAPI15DayForecastRequest: TimelineWeatherApi15DayForecastRequest;
  public timelineWeatherAPIDateRangeRequest: TimelineWeatherAPIDateRangeRequest;
  public timelineWeatherAPISingleDateRequest: TimelineWeatherAPISingleDateRequest;
  public weatherForecast: WeatherForecast;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.historicalWeather = new HistoricalWeather(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.timelineWeatherAPI15DayForecastRequest =
      new TimelineWeatherApi15DayForecastRequest(
        this._defaultClient,
        this._securityClient,
        this._serverURL,
        this._language,
        this._sdkVersion,
        this._genVersion
      );

    this.timelineWeatherAPIDateRangeRequest =
      new TimelineWeatherAPIDateRangeRequest(
        this._defaultClient,
        this._securityClient,
        this._serverURL,
        this._language,
        this._sdkVersion,
        this._genVersion
      );

    this.timelineWeatherAPISingleDateRequest =
      new TimelineWeatherAPISingleDateRequest(
        this._defaultClient,
        this._securityClient,
        this._serverURL,
        this._language,
        this._sdkVersion,
        this._genVersion
      );

    this.weatherForecast = new WeatherForecast(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
