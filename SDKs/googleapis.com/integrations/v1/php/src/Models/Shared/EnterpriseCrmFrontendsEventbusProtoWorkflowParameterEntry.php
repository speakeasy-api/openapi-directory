<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry
{
    /**
     * Attributes are additional options that can be associated with each event property. For more information, see
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoAttributes $attributes
     */
	#[\JMS\Serializer\Annotation\SerializedName('attributes')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoAttributes')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoAttributes $attributes = null;
    
    /**
     * Child parameters nested within this parameter. This field only applies to protobuf parameters
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry> $children
     */
	#[\JMS\Serializer\Annotation\SerializedName('children')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $children = null;
    
    /**
     * The data type of the parameter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum $dataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum $dataType = null;
    
    /**
     * To support various types of parameter values. Next available id: 14
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterValueType $defaultValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterValueType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmFrontendsEventbusProtoParameterValueType $defaultValue = null;
    
    /**
     * Specifies the input/output type for the parameter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum $inOutType
     */
	#[\JMS\Serializer\Annotation\SerializedName('inOutType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum $inOutType = null;
    
    /**
     * Whether this parameter is a transient parameter.
     * 
     * @var ?bool $isTransient
     */
	#[\JMS\Serializer\Annotation\SerializedName('isTransient')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTransient = null;
    
    /**
     * This schema will be used to validate runtime JSON-typed values of this parameter.
     * 
     * @var ?string $jsonSchema
     */
	#[\JMS\Serializer\Annotation\SerializedName('jsonSchema')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jsonSchema = null;
    
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     * The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Represents a node identifier (type + id). Next highest id: 3
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoNodeIdentifier $producedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('producedBy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoNodeIdentifier')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoNodeIdentifier $producedBy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('producer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $producer = null;
    
    /**
     * The name of the protobuf type if the parameter has a protobuf data type.
     * 
     * @var ?string $protoDefName
     */
	#[\JMS\Serializer\Annotation\SerializedName('protoDefName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protoDefName = null;
    
    /**
     * If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be "enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry".
     * 
     * @var ?string $protoDefPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('protoDefPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protoDefPath = null;
    
	public function __construct()
	{
		$this->attributes = null;
		$this->children = null;
		$this->dataType = null;
		$this->defaultValue = null;
		$this->inOutType = null;
		$this->isTransient = null;
		$this->jsonSchema = null;
		$this->key = null;
		$this->name = null;
		$this->producedBy = null;
		$this->producer = null;
		$this->protoDefName = null;
		$this->protoDefPath = null;
	}
}
