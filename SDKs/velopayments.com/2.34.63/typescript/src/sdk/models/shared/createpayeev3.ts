/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChallengeV3 } from "./challengev3";
import { CompanyV3 } from "./companyv3";
import { CreateIndividualV3 } from "./createindividualv3";
import { CreatePayeeAddressV3 } from "./createpayeeaddressv3";
import { CreatePaymentChannelV3 } from "./createpaymentchannelv3";
import { Expose, Type } from "class-transformer";

export class CreatePayeeV3Input extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => CreatePayeeAddressV3)
  address: CreatePayeeAddressV3;

  @SpeakeasyMetadata()
  @Expose({ name: "challenge" })
  @Type(() => ChallengeV3)
  challenge?: ChallengeV3;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  @Type(() => CompanyV3)
  company?: CompanyV3;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  @Type(() => CreateIndividualV3)
  individual?: CreateIndividualV3;

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
   *
   * @remarks
   * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannel" })
  @Type(() => CreatePaymentChannelV3)
  paymentChannel?: CreatePaymentChannelV3;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteId" })
  remoteId: string;

  /**
   * Type of Payee. One of the following values: Individual, Company
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
