// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MinimumProtocolVersionEnum string

const (
	MinimumProtocolVersionEnumSsLv3      MinimumProtocolVersionEnum = "SSLv3"
	MinimumProtocolVersionEnumTlSv1      MinimumProtocolVersionEnum = "TLSv1"
	MinimumProtocolVersionEnumTlSv12016  MinimumProtocolVersionEnum = "TLSv1_2016"
	MinimumProtocolVersionEnumTlSv112016 MinimumProtocolVersionEnum = "TLSv1.1_2016"
	MinimumProtocolVersionEnumTlSv122018 MinimumProtocolVersionEnum = "TLSv1.2_2018"
	MinimumProtocolVersionEnumTlSv122019 MinimumProtocolVersionEnum = "TLSv1.2_2019"
)

func (e MinimumProtocolVersionEnum) ToPointer() *MinimumProtocolVersionEnum {
	return &e
}

func (e *MinimumProtocolVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SSLv3":
		fallthrough
	case "TLSv1":
		fallthrough
	case "TLSv1_2016":
		fallthrough
	case "TLSv1.1_2016":
		fallthrough
	case "TLSv1.2_2018":
		fallthrough
	case "TLSv1.2_2019":
		*e = MinimumProtocolVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MinimumProtocolVersionEnum: %v", v)
	}
}
