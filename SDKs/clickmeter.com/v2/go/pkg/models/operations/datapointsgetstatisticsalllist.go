// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DataPointsGetStatisticsAllListGroupByEnum - The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
type DataPointsGetStatisticsAllListGroupByEnum string

const (
	DataPointsGetStatisticsAllListGroupByEnumWeek  DataPointsGetStatisticsAllListGroupByEnum = "week"
	DataPointsGetStatisticsAllListGroupByEnumMonth DataPointsGetStatisticsAllListGroupByEnum = "month"
)

func (e DataPointsGetStatisticsAllListGroupByEnum) ToPointer() *DataPointsGetStatisticsAllListGroupByEnum {
	return &e
}

func (e *DataPointsGetStatisticsAllListGroupByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "week":
		fallthrough
	case "month":
		*e = DataPointsGetStatisticsAllListGroupByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataPointsGetStatisticsAllListGroupByEnum: %v", v)
	}
}

// DataPointsGetStatisticsAllListStatusEnum - Status of datapoint ("deleted"/"active"/"paused"/"spam")
type DataPointsGetStatisticsAllListStatusEnum string

const (
	DataPointsGetStatisticsAllListStatusEnumDeleted DataPointsGetStatisticsAllListStatusEnum = "deleted"
	DataPointsGetStatisticsAllListStatusEnumActive  DataPointsGetStatisticsAllListStatusEnum = "active"
	DataPointsGetStatisticsAllListStatusEnumPaused  DataPointsGetStatisticsAllListStatusEnum = "paused"
	DataPointsGetStatisticsAllListStatusEnumSpam    DataPointsGetStatisticsAllListStatusEnum = "spam"
)

func (e DataPointsGetStatisticsAllListStatusEnum) ToPointer() *DataPointsGetStatisticsAllListStatusEnum {
	return &e
}

func (e *DataPointsGetStatisticsAllListStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deleted":
		fallthrough
	case "active":
		fallthrough
	case "paused":
		fallthrough
	case "spam":
		*e = DataPointsGetStatisticsAllListStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataPointsGetStatisticsAllListStatusEnum: %v", v)
	}
}

// DataPointsGetStatisticsAllListTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type DataPointsGetStatisticsAllListTimeFrameEnum string

const (
	DataPointsGetStatisticsAllListTimeFrameEnumToday         DataPointsGetStatisticsAllListTimeFrameEnum = "today"
	DataPointsGetStatisticsAllListTimeFrameEnumYesterday     DataPointsGetStatisticsAllListTimeFrameEnum = "yesterday"
	DataPointsGetStatisticsAllListTimeFrameEnumLast7         DataPointsGetStatisticsAllListTimeFrameEnum = "last7"
	DataPointsGetStatisticsAllListTimeFrameEnumLast30        DataPointsGetStatisticsAllListTimeFrameEnum = "last30"
	DataPointsGetStatisticsAllListTimeFrameEnumLastmonth     DataPointsGetStatisticsAllListTimeFrameEnum = "lastmonth"
	DataPointsGetStatisticsAllListTimeFrameEnumCurrentmonth  DataPointsGetStatisticsAllListTimeFrameEnum = "currentmonth"
	DataPointsGetStatisticsAllListTimeFrameEnumPreviousmonth DataPointsGetStatisticsAllListTimeFrameEnum = "previousmonth"
	DataPointsGetStatisticsAllListTimeFrameEnumLast90        DataPointsGetStatisticsAllListTimeFrameEnum = "last90"
	DataPointsGetStatisticsAllListTimeFrameEnumLast120       DataPointsGetStatisticsAllListTimeFrameEnum = "last120"
	DataPointsGetStatisticsAllListTimeFrameEnumLast180       DataPointsGetStatisticsAllListTimeFrameEnum = "last180"
	DataPointsGetStatisticsAllListTimeFrameEnumLast12months  DataPointsGetStatisticsAllListTimeFrameEnum = "last12months"
	DataPointsGetStatisticsAllListTimeFrameEnumLastyear      DataPointsGetStatisticsAllListTimeFrameEnum = "lastyear"
	DataPointsGetStatisticsAllListTimeFrameEnumCurrentyear   DataPointsGetStatisticsAllListTimeFrameEnum = "currentyear"
	DataPointsGetStatisticsAllListTimeFrameEnumBeginning     DataPointsGetStatisticsAllListTimeFrameEnum = "beginning"
	DataPointsGetStatisticsAllListTimeFrameEnumCustom        DataPointsGetStatisticsAllListTimeFrameEnum = "custom"
)

func (e DataPointsGetStatisticsAllListTimeFrameEnum) ToPointer() *DataPointsGetStatisticsAllListTimeFrameEnum {
	return &e
}

func (e *DataPointsGetStatisticsAllListTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = DataPointsGetStatisticsAllListTimeFrameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataPointsGetStatisticsAllListTimeFrameEnum: %v", v)
	}
}

// DataPointsGetStatisticsAllListTypeEnum - Type of datapoint ("tl"/"tp")
type DataPointsGetStatisticsAllListTypeEnum string

const (
	DataPointsGetStatisticsAllListTypeEnumTp DataPointsGetStatisticsAllListTypeEnum = "tp"
	DataPointsGetStatisticsAllListTypeEnumTl DataPointsGetStatisticsAllListTypeEnum = "tl"
)

func (e DataPointsGetStatisticsAllListTypeEnum) ToPointer() *DataPointsGetStatisticsAllListTypeEnum {
	return &e
}

func (e *DataPointsGetStatisticsAllListTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tp":
		fallthrough
	case "tl":
		*e = DataPointsGetStatisticsAllListTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataPointsGetStatisticsAllListTypeEnum: %v", v)
	}
}

type DataPointsGetStatisticsAllListRequest struct {
	// Is the datapoint is marked as favourite
	Favourite *bool `queryParam:"style=form,explode=true,name=favourite"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
	GroupBy *DataPointsGetStatisticsAllListGroupByEnum `queryParam:"style=form,explode=true,name=groupBy"`
	// Status of datapoint ("deleted"/"active"/"paused"/"spam")
	Status *DataPointsGetStatisticsAllListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// A comma separated list of tags you want to filter with.
	Tag *string `queryParam:"style=form,explode=true,name=tag"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame DataPointsGetStatisticsAllListTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
	// Type of datapoint ("tl"/"tp")
	Type DataPointsGetStatisticsAllListTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type DataPointsGetStatisticsAllListResponse struct {
	APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult *shared.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
