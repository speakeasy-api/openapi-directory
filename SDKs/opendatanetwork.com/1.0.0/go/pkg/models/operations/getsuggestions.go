// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetSuggestionsTypeEnum - Type of the object to find.
type GetSuggestionsTypeEnum string

const (
	GetSuggestionsTypeEnumEntity    GetSuggestionsTypeEnum = "entity"
	GetSuggestionsTypeEnumCategory  GetSuggestionsTypeEnum = "category"
	GetSuggestionsTypeEnumPublisher GetSuggestionsTypeEnum = "publisher"
	GetSuggestionsTypeEnumDataset   GetSuggestionsTypeEnum = "dataset"
	GetSuggestionsTypeEnumQuestion  GetSuggestionsTypeEnum = "question"
)

func (e *GetSuggestionsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "entity":
		fallthrough
	case "category":
		fallthrough
	case "publisher":
		fallthrough
	case "dataset":
		fallthrough
	case "question":
		*e = GetSuggestionsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSuggestionsTypeEnum: %s", s)
	}
}

type GetSuggestionsRequest struct {
	// e.g. cQovpGcdUT1CSzgYk0KPYdAI0
	XAppToken *string `header:"style=simple,explode=false,name=X-App-Token"`
	// The [Socrata App Token](https://dev.socrata.com/docs/app-tokens.html) to be
	// used with your request. The `app_token` parameter is required if an app token is not passed via the `X-App-Token` HTTP header. Clients must [register for their own app tokens](https://dev.socrata.com/docs/app-tokens.html).
	AppToken *string `queryParam:"style=form,explode=true,name=app_token"`
	// Maximum number of results to return.
	// Must be an integer from 0 to 100.
	Limit *float64 `queryParam:"style=form,explode=true,name=limit"`
	// Query to match.
	Query string `queryParam:"style=form,explode=true,name=query"`
	// Type of the object to find.
	Type GetSuggestionsTypeEnum `pathParam:"style=simple,explode=false,name=type"`
	// This parameter is only available when suggesting entities with `type=entity`.
	// If it is provided, suggestions will be filtered to include
	// only entities that have data for the given variable.
	//
	// If the variable provided is invalid, no entities will be returned.
	//
	// Note that this filtering will increase response time significantly,
	// so it should only be used when necessary.
	VariableID *string `queryParam:"style=form,explode=true,name=variable_id"`
}

type GetSuggestionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
