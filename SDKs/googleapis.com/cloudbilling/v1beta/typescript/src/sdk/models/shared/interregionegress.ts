/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Usage } from "./usage";
import { Expose, Type } from "class-transformer";

/**
 * Egress traffic between two regions.
 */
export class InterRegionEgress extends SpeakeasyBase {
  /**
   * Which [region](https://cloud.google.com/compute/docs/regions-zones) the egress data goes to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationRegion" })
  destinationRegion?: string;

  /**
   * An amount of usage over a time frame.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "egressRate" })
  @Type(() => Usage)
  egressRate?: Usage;

  /**
   * Which [region](https://cloud.google.com/compute/docs/regions-zones) the egress data comes from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceRegion" })
  sourceRegion?: string;
}
