"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import analyticsinfo as shared_analyticsinfo
from ..shared import androidinfo as shared_androidinfo
from ..shared import desktopinfo as shared_desktopinfo
from ..shared import iosinfo as shared_iosinfo
from ..shared import navigationinfo as shared_navigationinfo
from ..shared import socialmetataginfo as shared_socialmetataginfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DynamicLinkInfo:
    r"""Information about a Dynamic Link."""
    
    analytics_info: Optional[shared_analyticsinfo.AnalyticsInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analyticsInfo'), 'exclude': lambda f: f is None }})
    r"""Tracking parameters supported by Dynamic Link."""  
    android_info: Optional[shared_androidinfo.AndroidInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidInfo'), 'exclude': lambda f: f is None }})
    r"""Android related attributes to the Dynamic Link."""  
    desktop_info: Optional[shared_desktopinfo.DesktopInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desktopInfo'), 'exclude': lambda f: f is None }})
    r"""Desktop related attributes to the Dynamic Link."""  
    domain_uri_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domainUriPrefix'), 'exclude': lambda f: f is None }})
    r"""E.g. https://maps.app.goo.gl, https://maps.page.link, https://g.co/maps More examples can be found in description of getNormalizedUriPrefix in j/c/g/firebase/dynamiclinks/uri/DdlDomain.java Will fallback to dynamic_link_domain is this field is missing"""  
    dynamic_link_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dynamicLinkDomain'), 'exclude': lambda f: f is None }})
    r"""Dynamic Links domain that the project owns, e.g. abcd.app.goo.gl [Learn more](https://firebase.google.com/docs/dynamic-links/android/receive) on how to set up Dynamic Link domain associated with your Firebase project. Required if missing domain_uri_prefix."""  
    ios_info: Optional[shared_iosinfo.IosInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosInfo'), 'exclude': lambda f: f is None }})
    r"""iOS related attributes to the Dynamic Link.."""  
    link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link'), 'exclude': lambda f: f is None }})
    r"""The link your app will open, You can specify any URL your app can handle. This link must be a well-formatted URL, be properly URL-encoded, and use the HTTP or HTTPS scheme. See 'link' parameters in the [documentation](https://firebase.google.com/docs/dynamic-links/create-manually). Required."""  
    navigation_info: Optional[shared_navigationinfo.NavigationInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('navigationInfo'), 'exclude': lambda f: f is None }})
    r"""Information of navigation behavior."""  
    social_meta_tag_info: Optional[shared_socialmetataginfo.SocialMetaTagInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('socialMetaTagInfo'), 'exclude': lambda f: f is None }})
    r"""Parameters for social meta tag params. Used to set meta tag data for link previews on social sites."""  
    