"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OutputInformationActionTypeEnum(str, Enum):
    r"""The type of the Output"""
    ON_OFF_ACTION = 'OnOffAction'
    ANALOG_ACTION = 'AnalogAction'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OutputInformation:
    r"""Informations about the Outputs of a Meter or Folder"""
    
    action_type: Optional[OutputInformationActionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ActionType'), 'exclude': lambda f: f is None }})
    r"""The type of the Output"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""The Name of the Output"""  
    number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Number'), 'exclude': lambda f: f is None }})
    r"""The Number of this Output. Use this as ID to switch it on or off."""  
    obis_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ObisCode'), 'exclude': lambda f: f is None }})
    r"""The Obis Code for this Output"""  
    