"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import facetbucket as shared_facetbucket
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FacetResult:
    r"""Source specific facet response"""
    
    buckets: Optional[list[shared_facetbucket.FacetBucket]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buckets'), 'exclude': lambda f: f is None }})
    r"""FacetBuckets for values in response containing at least a single result with the corresponding filter."""  
    object_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectType'), 'exclude': lambda f: f is None }})
    r"""Object type for which facet results are returned. Can be empty."""  
    operator_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operatorName'), 'exclude': lambda f: f is None }})
    r"""The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions"""  
    source_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceName'), 'exclude': lambda f: f is None }})
    r"""Source name for which facet results are returned. Will not be empty."""  
    