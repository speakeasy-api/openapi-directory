// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SpaceInput - A space in Google Chat. Spaces are conversations between two or more users or 1:1 messages between a user and a Chat app.
type SpaceInput struct {
	// The space's display name. Required when [creating a space](https://developers.google.com/chat/api/reference/rest/v1/spaces/create). For direct messages, this field may be empty. Supports up to 128 characters.
	DisplayName *string `json:"displayName,omitempty"`
	// Resource name of the space. Format: spaces/{space}
	Name *string `json:"name,omitempty"`
	// Optional. Whether the space is a DM between a Chat app and a single human.
	SingleUserBotDm *bool `json:"singleUserBotDm,omitempty"`
	// Details about the space including description and rules.
	SpaceDetails *SpaceDetails `json:"spaceDetails,omitempty"`
}

// SpaceSpaceThreadingStateEnum - Output only. The threading state in the Chat space.
type SpaceSpaceThreadingStateEnum string

const (
	SpaceSpaceThreadingStateEnumSpaceThreadingStateUnspecified SpaceSpaceThreadingStateEnum = "SPACE_THREADING_STATE_UNSPECIFIED"
	SpaceSpaceThreadingStateEnumThreadedMessages               SpaceSpaceThreadingStateEnum = "THREADED_MESSAGES"
	SpaceSpaceThreadingStateEnumGroupedMessages                SpaceSpaceThreadingStateEnum = "GROUPED_MESSAGES"
	SpaceSpaceThreadingStateEnumUnthreadedMessages             SpaceSpaceThreadingStateEnum = "UNTHREADED_MESSAGES"
)

func (e *SpaceSpaceThreadingStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SPACE_THREADING_STATE_UNSPECIFIED":
		fallthrough
	case "THREADED_MESSAGES":
		fallthrough
	case "GROUPED_MESSAGES":
		fallthrough
	case "UNTHREADED_MESSAGES":
		*e = SpaceSpaceThreadingStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SpaceSpaceThreadingStateEnum: %s", s)
	}
}

// SpaceTypeEnum - Output only. Deprecated: Use `singleUserBotDm` or `spaceType` (developer preview) instead. The type of a space.
type SpaceTypeEnum string

const (
	SpaceTypeEnumTypeUnspecified SpaceTypeEnum = "TYPE_UNSPECIFIED"
	SpaceTypeEnumRoom            SpaceTypeEnum = "ROOM"
	SpaceTypeEnumDm              SpaceTypeEnum = "DM"
)

func (e *SpaceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "ROOM":
		fallthrough
	case "DM":
		*e = SpaceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SpaceTypeEnum: %s", s)
	}
}

// Space - A space in Google Chat. Spaces are conversations between two or more users or 1:1 messages between a user and a Chat app.
type Space struct {
	// Output only. Whether the Chat app was installed by a Google Workspace administrator. Administrators can install a Chat app for their domain, organizational unit, or a group of users. Administrators can only install Chat apps for direct messaging between users and the app. To support admin install, your app must feature direct messaging.
	AdminInstalled *bool `json:"adminInstalled,omitempty"`
	// The space's display name. Required when [creating a space](https://developers.google.com/chat/api/reference/rest/v1/spaces/create). For direct messages, this field may be empty. Supports up to 128 characters.
	DisplayName *string `json:"displayName,omitempty"`
	// Resource name of the space. Format: spaces/{space}
	Name *string `json:"name,omitempty"`
	// Optional. Whether the space is a DM between a Chat app and a single human.
	SingleUserBotDm *bool `json:"singleUserBotDm,omitempty"`
	// Details about the space including description and rules.
	SpaceDetails *SpaceDetails `json:"spaceDetails,omitempty"`
	// Output only. The threading state in the Chat space.
	SpaceThreadingState *SpaceSpaceThreadingStateEnum `json:"spaceThreadingState,omitempty"`
	// Output only. Deprecated: Use `spaceThreadingState` instead. Whether messages are threaded in this space.
	Threaded *bool `json:"threaded,omitempty"`
	// Output only. Deprecated: Use `singleUserBotDm` or `spaceType` (developer preview) instead. The type of a space.
	Type *SpaceTypeEnum `json:"type,omitempty"`
}
