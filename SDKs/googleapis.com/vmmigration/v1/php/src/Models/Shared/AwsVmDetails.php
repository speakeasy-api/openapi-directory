<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AwsVmDetails - AwsVmDetails describes a VM in AWS.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AwsVmDetails
{
    /**
     * The CPU architecture.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsArchitectureEnum $architecture
     */
	#[\JMS\Serializer\Annotation\SerializedName('architecture')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsArchitectureEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsVmDetailsArchitectureEnum $architecture = null;
    
    /**
     * The VM Boot Option.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsBootOptionEnum $bootOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('bootOption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsBootOptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsVmDetailsBootOptionEnum $bootOption = null;
    
    /**
     * The total size of the storage allocated to the VM in MB.
     * 
     * @var ?string $committedStorageMb
     */
	#[\JMS\Serializer\Annotation\SerializedName('committedStorageMb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $committedStorageMb = null;
    
    /**
     * The number of cpus the VM has.
     * 
     * @var ?int $cpuCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpuCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cpuCount = null;
    
    /**
     * The number of disks the VM has.
     * 
     * @var ?int $diskCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $diskCount = null;
    
    /**
     * The display name of the VM. Note that this value is not necessarily unique.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The instance type of the VM.
     * 
     * @var ?string $instanceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceType = null;
    
    /**
     * The memory size of the VM in MB.
     * 
     * @var ?int $memoryMb
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryMb')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryMb = null;
    
    /**
     * The VM's OS.
     * 
     * @var ?string $osDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('osDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $osDescription = null;
    
    /**
     * Output only. The power state of the VM at the moment list was taken.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsPowerStateEnum $powerState
     */
	#[\JMS\Serializer\Annotation\SerializedName('powerState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsPowerStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsVmDetailsPowerStateEnum $powerState = null;
    
    /**
     * The security groups the VM belongs to.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AwsSecurityGroup> $securityGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('securityGroups')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AwsSecurityGroup>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $securityGroups = null;
    
    /**
     * The descriptive name of the AWS's source this VM is connected to.
     * 
     * @var ?string $sourceDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDescription = null;
    
    /**
     * The id of the AWS's source this VM is connected to.
     * 
     * @var ?string $sourceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceId = null;
    
    /**
     * The tags of the VM.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * The virtualization type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsVirtualizationTypeEnum $virtualizationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('virtualizationType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AwsVmDetailsVirtualizationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsVmDetailsVirtualizationTypeEnum $virtualizationType = null;
    
    /**
     * The VM ID in AWS.
     * 
     * @var ?string $vmId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vmId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vmId = null;
    
    /**
     * The VPC ID the VM belongs to.
     * 
     * @var ?string $vpcId
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpcId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vpcId = null;
    
    /**
     * The AWS zone of the VM.
     * 
     * @var ?string $zone
     */
	#[\JMS\Serializer\Annotation\SerializedName('zone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $zone = null;
    
	public function __construct()
	{
		$this->architecture = null;
		$this->bootOption = null;
		$this->committedStorageMb = null;
		$this->cpuCount = null;
		$this->diskCount = null;
		$this->displayName = null;
		$this->instanceType = null;
		$this->memoryMb = null;
		$this->osDescription = null;
		$this->powerState = null;
		$this->securityGroups = null;
		$this->sourceDescription = null;
		$this->sourceId = null;
		$this->tags = null;
		$this->virtualizationType = null;
		$this->vmId = null;
		$this->vpcId = null;
		$this->zone = null;
	}
}
