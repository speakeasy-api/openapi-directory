"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import conformancepackinputparameter as shared_conformancepackinputparameter
from ..shared import templatessmdocumentdetails as shared_templatessmdocumentdetails
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConformancePackDetail:
    r"""Returns details of a conformance pack. A conformance pack is a collection of Config rules and remediation actions that can be easily deployed in an account and a region."""
    
    conformance_pack_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConformancePackArn') }})  
    conformance_pack_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConformancePackId') }})  
    conformance_pack_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConformancePackName') }})  
    conformance_pack_input_parameters: Optional[list[shared_conformancepackinputparameter.ConformancePackInputParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConformancePackInputParameters'), 'exclude': lambda f: f is None }})  
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedBy'), 'exclude': lambda f: f is None }})  
    delivery_s3_bucket: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryS3Bucket'), 'exclude': lambda f: f is None }})  
    delivery_s3_key_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryS3KeyPrefix'), 'exclude': lambda f: f is None }})  
    last_update_requested_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastUpdateRequestedTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    template_ssm_document_details: Optional[shared_templatessmdocumentdetails.TemplateSSMDocumentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TemplateSSMDocumentDetails'), 'exclude': lambda f: f is None }})  
    