"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import site as shared_site
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DcimSitesListRequest:
    
    asn: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asn', 'style': 'form', 'explode': True }})  
    asn_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asn__gt', 'style': 'form', 'explode': True }})  
    asn_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asn__gte', 'style': 'form', 'explode': True }})  
    asn_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asn__lt', 'style': 'form', 'explode': True }})  
    asn_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asn__lte', 'style': 'form', 'explode': True }})  
    asn_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asn__n', 'style': 'form', 'explode': True }})  
    contact_email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email', 'style': 'form', 'explode': True }})  
    contact_email_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__ic', 'style': 'form', 'explode': True }})  
    contact_email_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__ie', 'style': 'form', 'explode': True }})  
    contact_email_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__iew', 'style': 'form', 'explode': True }})  
    contact_email_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__isw', 'style': 'form', 'explode': True }})  
    contact_email_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__n', 'style': 'form', 'explode': True }})  
    contact_email_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__nic', 'style': 'form', 'explode': True }})  
    contact_email_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__nie', 'style': 'form', 'explode': True }})  
    contact_email_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__niew', 'style': 'form', 'explode': True }})  
    contact_email_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_email__nisw', 'style': 'form', 'explode': True }})  
    contact_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name', 'style': 'form', 'explode': True }})  
    contact_name_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__ic', 'style': 'form', 'explode': True }})  
    contact_name_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__ie', 'style': 'form', 'explode': True }})  
    contact_name_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__iew', 'style': 'form', 'explode': True }})  
    contact_name_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__isw', 'style': 'form', 'explode': True }})  
    contact_name_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__n', 'style': 'form', 'explode': True }})  
    contact_name_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__nic', 'style': 'form', 'explode': True }})  
    contact_name_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__nie', 'style': 'form', 'explode': True }})  
    contact_name_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__niew', 'style': 'form', 'explode': True }})  
    contact_name_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_name__nisw', 'style': 'form', 'explode': True }})  
    contact_phone: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone', 'style': 'form', 'explode': True }})  
    contact_phone_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__ic', 'style': 'form', 'explode': True }})  
    contact_phone_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__ie', 'style': 'form', 'explode': True }})  
    contact_phone_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__iew', 'style': 'form', 'explode': True }})  
    contact_phone_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__isw', 'style': 'form', 'explode': True }})  
    contact_phone_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__n', 'style': 'form', 'explode': True }})  
    contact_phone_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__nic', 'style': 'form', 'explode': True }})  
    contact_phone_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__nie', 'style': 'form', 'explode': True }})  
    contact_phone_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__niew', 'style': 'form', 'explode': True }})  
    contact_phone_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contact_phone__nisw', 'style': 'form', 'explode': True }})  
    created: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created', 'style': 'form', 'explode': True }})  
    created_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created__gte', 'style': 'form', 'explode': True }})  
    created_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'created__lte', 'style': 'form', 'explode': True }})  
    facility: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility', 'style': 'form', 'explode': True }})  
    facility_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__ic', 'style': 'form', 'explode': True }})  
    facility_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__ie', 'style': 'form', 'explode': True }})  
    facility_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__iew', 'style': 'form', 'explode': True }})  
    facility_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__isw', 'style': 'form', 'explode': True }})  
    facility_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__n', 'style': 'form', 'explode': True }})  
    facility_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__nic', 'style': 'form', 'explode': True }})  
    facility_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__nie', 'style': 'form', 'explode': True }})  
    facility_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__niew', 'style': 'form', 'explode': True }})  
    facility_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'facility__nisw', 'style': 'form', 'explode': True }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})  
    id_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__gt', 'style': 'form', 'explode': True }})  
    id_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__gte', 'style': 'form', 'explode': True }})  
    id_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__lt', 'style': 'form', 'explode': True }})  
    id_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__lte', 'style': 'form', 'explode': True }})  
    id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id__n', 'style': 'form', 'explode': True }})  
    last_updated: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_updated', 'style': 'form', 'explode': True }})  
    last_updated_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_updated__gte', 'style': 'form', 'explode': True }})  
    last_updated_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'last_updated__lte', 'style': 'form', 'explode': True }})  
    latitude: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latitude', 'style': 'form', 'explode': True }})  
    latitude_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latitude__gt', 'style': 'form', 'explode': True }})  
    latitude_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latitude__gte', 'style': 'form', 'explode': True }})  
    latitude_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latitude__lt', 'style': 'form', 'explode': True }})  
    latitude_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latitude__lte', 'style': 'form', 'explode': True }})  
    latitude_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latitude__n', 'style': 'form', 'explode': True }})  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of results to return per page."""  
    longitude: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'longitude', 'style': 'form', 'explode': True }})  
    longitude_gt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'longitude__gt', 'style': 'form', 'explode': True }})  
    longitude_gte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'longitude__gte', 'style': 'form', 'explode': True }})  
    longitude_lt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'longitude__lt', 'style': 'form', 'explode': True }})  
    longitude_lte: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'longitude__lte', 'style': 'form', 'explode': True }})  
    longitude_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'longitude__n', 'style': 'form', 'explode': True }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})  
    name_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__ic', 'style': 'form', 'explode': True }})  
    name_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__ie', 'style': 'form', 'explode': True }})  
    name_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__iew', 'style': 'form', 'explode': True }})  
    name_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__isw', 'style': 'form', 'explode': True }})  
    name_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__n', 'style': 'form', 'explode': True }})  
    name_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__nic', 'style': 'form', 'explode': True }})  
    name_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__nie', 'style': 'form', 'explode': True }})  
    name_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__niew', 'style': 'form', 'explode': True }})  
    name_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name__nisw', 'style': 'form', 'explode': True }})  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The initial index from which to return the results."""  
    q: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'q', 'style': 'form', 'explode': True }})  
    region: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region', 'style': 'form', 'explode': True }})  
    region_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region__n', 'style': 'form', 'explode': True }})  
    region_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region_id', 'style': 'form', 'explode': True }})  
    region_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'region_id__n', 'style': 'form', 'explode': True }})  
    slug: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug', 'style': 'form', 'explode': True }})  
    slug_ic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__ic', 'style': 'form', 'explode': True }})  
    slug_ie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__ie', 'style': 'form', 'explode': True }})  
    slug_iew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__iew', 'style': 'form', 'explode': True }})  
    slug_isw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__isw', 'style': 'form', 'explode': True }})  
    slug_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__n', 'style': 'form', 'explode': True }})  
    slug_nic: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__nic', 'style': 'form', 'explode': True }})  
    slug_nie: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__nie', 'style': 'form', 'explode': True }})  
    slug_niew: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__niew', 'style': 'form', 'explode': True }})  
    slug_nisw: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'slug__nisw', 'style': 'form', 'explode': True }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})  
    status_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status__n', 'style': 'form', 'explode': True }})  
    tag: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tag', 'style': 'form', 'explode': True }})  
    tag_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tag__n', 'style': 'form', 'explode': True }})  
    tenant: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant', 'style': 'form', 'explode': True }})  
    tenant_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant__n', 'style': 'form', 'explode': True }})  
    tenant_group: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant_group', 'style': 'form', 'explode': True }})  
    tenant_group_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant_group__n', 'style': 'form', 'explode': True }})  
    tenant_group_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant_group_id', 'style': 'form', 'explode': True }})  
    tenant_group_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant_group_id__n', 'style': 'form', 'explode': True }})  
    tenant_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant_id', 'style': 'form', 'explode': True }})  
    tenant_id_n: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tenant_id__n', 'style': 'form', 'explode': True }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DcimSitesList200ApplicationJSON:
    
    count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count') }})  
    results: list[shared_site.Site] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results') }})  
    next: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next'), 'exclude': lambda f: f is None }})  
    previous: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previous'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class DcimSitesListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    dcim_sites_list_200_application_json_object: Optional[DcimSitesList200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    