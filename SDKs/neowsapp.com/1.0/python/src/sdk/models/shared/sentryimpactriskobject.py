"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SentryImpactRiskObject:
    r"""OK"""
    
    absolute_magnitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('absolute_magnitude'), 'exclude': lambda f: f is None }})  
    average_lunar_distance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_lunar_distance'), 'exclude': lambda f: f is None }})  
    designation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('designation'), 'exclude': lambda f: f is None }})  
    estimated_diameter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('estimated_diameter'), 'exclude': lambda f: f is None }})  
    fullname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullname'), 'exclude': lambda f: f is None }})  
    impact_probability: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('impact_probability'), 'exclude': lambda f: f is None }})  
    is_active_sentry_object: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_active_sentry_object'), 'exclude': lambda f: f is None }})  
    last_obs: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_obs'), 'exclude': lambda f: f is None }})  
    last_obs_jd: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_obs_jd'), 'exclude': lambda f: f is None }})  
    palermo_scale_ave: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('palermo_scale_ave'), 'exclude': lambda f: f is None }})  
    palermo_scale_max: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Palermo_scale_max'), 'exclude': lambda f: f is None }})  
    potential_impacts: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('potential_impacts'), 'exclude': lambda f: f is None }})  
    removal_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removal_date'), 'exclude': lambda f: f is None }})  
    sentry_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sentryId'), 'exclude': lambda f: f is None }})  
    torino_scale: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('torino_scale'), 'exclude': lambda f: f is None }})  
    v_infinity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('v_infinity'), 'exclude': lambda f: f is None }})  
    year_range_max: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year_range_max'), 'exclude': lambda f: f is None }})  
    year_range_min: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year_range_min'), 'exclude': lambda f: f is None }})  
    