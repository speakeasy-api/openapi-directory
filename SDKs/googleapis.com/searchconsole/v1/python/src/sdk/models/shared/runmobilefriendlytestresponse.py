"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import image as shared_image
from ..shared import mobilefriendlyissue as shared_mobilefriendlyissue
from ..shared import resourceissue as shared_resourceissue
from ..shared import teststatus as shared_teststatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RunMobileFriendlyTestResponseMobileFriendlinessEnum(str, Enum):
    r"""Test verdict, whether the page is mobile friendly or not."""
    MOBILE_FRIENDLY_TEST_RESULT_UNSPECIFIED = 'MOBILE_FRIENDLY_TEST_RESULT_UNSPECIFIED'
    MOBILE_FRIENDLY = 'MOBILE_FRIENDLY'
    NOT_MOBILE_FRIENDLY = 'NOT_MOBILE_FRIENDLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RunMobileFriendlyTestResponse:
    r"""Mobile-friendly test response, including mobile-friendly issues and resource issues."""
    
    mobile_friendliness: Optional[RunMobileFriendlyTestResponseMobileFriendlinessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobileFriendliness'), 'exclude': lambda f: f is None }})
    r"""Test verdict, whether the page is mobile friendly or not."""  
    mobile_friendly_issues: Optional[list[shared_mobilefriendlyissue.MobileFriendlyIssue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mobileFriendlyIssues'), 'exclude': lambda f: f is None }})
    r"""List of mobile-usability issues."""  
    resource_issues: Optional[list[shared_resourceissue.ResourceIssue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceIssues'), 'exclude': lambda f: f is None }})
    r"""Information about embedded resources issues."""  
    screenshot: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenshot'), 'exclude': lambda f: f is None }})
    r"""Describe image data."""  
    test_status: Optional[shared_teststatus.TestStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testStatus'), 'exclude': lambda f: f is None }})
    r"""Final state of the test, including error details if necessary."""  
    