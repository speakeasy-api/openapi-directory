// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OnDemandPromotionAccessTypeEnum - The type of access that this promotion grants:
//
// Option descriptions:
//   - `default` - Grants discounts on existing product offerings.
//   - `vip` - Grants free access either to VOD content before it is released or to access types that aren't part of the existing product offerings.
type OnDemandPromotionAccessTypeEnum string

const (
	OnDemandPromotionAccessTypeEnumDefault OnDemandPromotionAccessTypeEnum = "default"
	OnDemandPromotionAccessTypeEnumVip     OnDemandPromotionAccessTypeEnum = "vip"
)

func (e *OnDemandPromotionAccessTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "default":
		fallthrough
	case "vip":
		*e = OnDemandPromotionAccessTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OnDemandPromotionAccessTypeEnum: %s", s)
	}
}

// OnDemandPromotionDiscountTypeEnum - The type of discount for which this promotion can be used.
//
// Option descriptions:
//   - `dollars` - The discount is a certain fixed amount.
//   - `free` - The discount is the full purchase price. VIP access promotions always use this discount type.
//   - `percent` - The discount is a certain percentage of the full price.
type OnDemandPromotionDiscountTypeEnum string

const (
	OnDemandPromotionDiscountTypeEnumDollars OnDemandPromotionDiscountTypeEnum = "dollars"
	OnDemandPromotionDiscountTypeEnumFree    OnDemandPromotionDiscountTypeEnum = "free"
	OnDemandPromotionDiscountTypeEnumPercent OnDemandPromotionDiscountTypeEnum = "percent"
)

func (e *OnDemandPromotionDiscountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "dollars":
		fallthrough
	case "free":
		fallthrough
	case "percent":
		*e = OnDemandPromotionDiscountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OnDemandPromotionDiscountTypeEnum: %s", s)
	}
}

// OnDemandPromotionMetadataConnectionsCodes - Information about the codes associated with this promotion.
type OnDemandPromotionMetadataConnectionsCodes struct {
	// An array of HTTP methods permitted on this URI.
	Options []string `json:"options"`
	// The total number of uses on this connection.
	Total float64 `json:"total"`
	// The API URI that resolves to the connection data.
	URI string `json:"uri"`
}

// OnDemandPromotionMetadataConnections - A list of resource URIs related to the On Demand promotion.
type OnDemandPromotionMetadataConnections struct {
	// Information about the codes associated with this promotion.
	Codes OnDemandPromotionMetadataConnectionsCodes `json:"codes"`
}

// OnDemandPromotionMetadata - The video's metadata.
type OnDemandPromotionMetadata struct {
	// A list of resource URIs related to the On Demand promotion.
	Connections OnDemandPromotionMetadataConnections `json:"connections"`
}

// OnDemandPromotionProductTypeEnum - The type of product to which this promotion can be applied. Only `buy` and `rent` are available for the VIP access type:
//
// Option descriptions:
//   - `any` - The promotion can be applied to any product.
//   - `buy` - The promotion can be applied to a buyable single video.
//   - `buy_episode` - The promotion can be applied to a buyable single episode.
//   - `rent` - The promotion can be applied to a rentable single video.
//   - `rent_episode` - The promotion can be applied to a rentable single episode.
//   - `subscribe` - The promotion can be applied to a subscription.
type OnDemandPromotionProductTypeEnum string

const (
	OnDemandPromotionProductTypeEnumAny         OnDemandPromotionProductTypeEnum = "any"
	OnDemandPromotionProductTypeEnumBuy         OnDemandPromotionProductTypeEnum = "buy"
	OnDemandPromotionProductTypeEnumBuyEpisode  OnDemandPromotionProductTypeEnum = "buy_episode"
	OnDemandPromotionProductTypeEnumRent        OnDemandPromotionProductTypeEnum = "rent"
	OnDemandPromotionProductTypeEnumRentEpisode OnDemandPromotionProductTypeEnum = "rent_episode"
	OnDemandPromotionProductTypeEnumSubscribe   OnDemandPromotionProductTypeEnum = "subscribe"
)

func (e *OnDemandPromotionProductTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "any":
		fallthrough
	case "buy":
		fallthrough
	case "buy_episode":
		fallthrough
	case "rent":
		fallthrough
	case "rent_episode":
		fallthrough
	case "subscribe":
		*e = OnDemandPromotionProductTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OnDemandPromotionProductTypeEnum: %s", s)
	}
}

// OnDemandPromotionStreamPeriodEnum - The amount of time that the user has access to the VOD content after redeeming a promo code.
//
// Option descriptions:
//   - `1_week` - Access lasts for one week.
//   - `1_year` - Access lasts for one year.
//   - `24_hour` - Access lasts for 24 hours.
//   - `30_days` - Access lasts for 30 days.
//   - `3_month` - Access lasts for 3 months.
//   - `48_hour` - Access lasts for 48 hours.
//   - `6_month` - Access lasts for 6 months.
//   - `72_hour` - Access lasts for 72 hours.
type OnDemandPromotionStreamPeriodEnum string

const (
	OnDemandPromotionStreamPeriodEnumOneWeek        OnDemandPromotionStreamPeriodEnum = "1_week"
	OnDemandPromotionStreamPeriodEnumOneYear        OnDemandPromotionStreamPeriodEnum = "1_year"
	OnDemandPromotionStreamPeriodEnumTwentyFourHour OnDemandPromotionStreamPeriodEnum = "24_hour"
	OnDemandPromotionStreamPeriodEnumThirtyDays     OnDemandPromotionStreamPeriodEnum = "30_days"
	OnDemandPromotionStreamPeriodEnumThreeMonth     OnDemandPromotionStreamPeriodEnum = "3_month"
	OnDemandPromotionStreamPeriodEnumFortyEightHour OnDemandPromotionStreamPeriodEnum = "48_hour"
	OnDemandPromotionStreamPeriodEnumSixMonth       OnDemandPromotionStreamPeriodEnum = "6_month"
	OnDemandPromotionStreamPeriodEnumSeventyTwoHour OnDemandPromotionStreamPeriodEnum = "72_hour"
)

func (e *OnDemandPromotionStreamPeriodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1_week":
		fallthrough
	case "1_year":
		fallthrough
	case "24_hour":
		fallthrough
	case "30_days":
		fallthrough
	case "3_month":
		fallthrough
	case "48_hour":
		fallthrough
	case "6_month":
		fallthrough
	case "72_hour":
		*e = OnDemandPromotionStreamPeriodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OnDemandPromotionStreamPeriodEnum: %s", s)
	}
}

// OnDemandPromotionTypeEnum - The way in which this promotion can generate promo codes:
//
// Option descriptions:
//   - `batch` - Provides many unique promo codes that can only be used once each.
//   - `batch_prefix` - Similar to `batch`, except that all codes have a similar prefix string. This mode is deprecated, yet it may still appear for some users.
//   - `single` - Provides a single promo code with many uses.
type OnDemandPromotionTypeEnum string

const (
	OnDemandPromotionTypeEnumBatch       OnDemandPromotionTypeEnum = "batch"
	OnDemandPromotionTypeEnumBatchPrefix OnDemandPromotionTypeEnum = "batch_prefix"
	OnDemandPromotionTypeEnumSingle      OnDemandPromotionTypeEnum = "single"
)

func (e *OnDemandPromotionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "batch":
		fallthrough
	case "batch_prefix":
		fallthrough
	case "single":
		*e = OnDemandPromotionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OnDemandPromotionTypeEnum: %s", s)
	}
}

// OnDemandPromotion - The promotions were returned.
type OnDemandPromotion struct {
	// The type of access that this promotion grants:
	//
	// Option descriptions:
	//  * `default` - Grants discounts on existing product offerings.
	//  * `vip` - Grants free access either to VOD content before it is released or to access types that aren't part of the existing product offerings.
	//
	AccessType OnDemandPromotionAccessTypeEnum `json:"access_type"`
	// The type of discount for which this promotion can be used.
	//
	// Option descriptions:
	//  * `dollars` - The discount is a certain fixed amount.
	//  * `free` - The discount is the full purchase price. VIP access promotions always use this discount type.
	//  * `percent` - The discount is a certain percentage of the full price.
	//
	DiscountType OnDemandPromotionDiscountTypeEnum `json:"discount_type"`
	// Whether this promotion grants download access to On Demand content.
	Download bool `json:"download"`
	// The prefix string for batch codes, or the null value for single codes.
	Label string `json:"label"`
	// The video's metadata.
	Metadata OnDemandPromotionMetadata `json:"metadata"`
	// The percentage amount that is deducted from the product price.
	PercentOff float64 `json:"percent_off"`
	// The type of product to which this promotion can be applied. Only `buy` and `rent` are available for the VIP access type:
	//
	// Option descriptions:
	//  * `any` - The promotion can be applied to any product.
	//  * `buy` - The promotion can be applied to a buyable single video.
	//  * `buy_episode` - The promotion can be applied to a buyable single episode.
	//  * `rent` - The promotion can be applied to a rentable single video.
	//  * `rent_episode` - The promotion can be applied to a rentable single episode.
	//  * `subscribe` - The promotion can be applied to a subscription.
	//
	ProductType OnDemandPromotionProductTypeEnum `json:"product_type"`
	// The amount of time that the user has access to the VOD content after redeeming a promo code.
	//
	// Option descriptions:
	//  * `1_week` - Access lasts for one week.
	//  * `1_year` - Access lasts for one year.
	//  * `24_hour` - Access lasts for 24 hours.
	//  * `30_days` - Access lasts for 30 days.
	//  * `3_month` - Access lasts for 3 months.
	//  * `48_hour` - Access lasts for 48 hours.
	//  * `6_month` - Access lasts for 6 months.
	//  * `72_hour` - Access lasts for 72 hours.
	//
	StreamPeriod OnDemandPromotionStreamPeriodEnum `json:"stream_period"`
	// The total amount of times that this promotion can be used.
	Total float64 `json:"total"`
	// The way in which this promotion can generate promo codes:
	//
	// Option descriptions:
	//  * `batch` - Provides many unique promo codes that can only be used once each.
	//  * `batch_prefix` - Similar to `batch`, except that all codes have a similar prefix string. This mode is deprecated, yet it may still appear for some users.
	//  * `single` - Provides a single promo code with many uses.
	//
	Type OnDemandPromotionTypeEnum `json:"type"`
	// The promotion's canonical relative URI.
	URI string `json:"uri"`
}
