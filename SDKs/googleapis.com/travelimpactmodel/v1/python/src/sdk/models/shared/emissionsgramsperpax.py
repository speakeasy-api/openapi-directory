"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EmissionsGramsPerPax:
    r"""Grouped emissions per seating class results."""
    
    business: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business'), 'exclude': lambda f: f is None }})
    r"""Emissions for one passenger in business class in grams. This field is always computed and populated, regardless of whether the aircraft has business class seats or not."""  
    economy: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('economy'), 'exclude': lambda f: f is None }})
    r"""Emissions for one passenger in economy class in grams. This field is always computed and populated, regardless of whether the aircraft has economy class seats or not."""  
    first: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first'), 'exclude': lambda f: f is None }})
    r"""Emissions for one passenger in first class in grams. This field is always computed and populated, regardless of whether the aircraft has first class seats or not."""  
    premium_economy: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('premiumEconomy'), 'exclude': lambda f: f is None }})
    r"""Emissions for one passenger in premium economy class in grams. This field is always computed and populated, regardless of whether the aircraft has premium economy class seats or not."""  
    