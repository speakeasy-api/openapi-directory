"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import field as shared_field
from ..shared import thinggroupindexingmode_enum as shared_thinggroupindexingmode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ThingGroupIndexingConfiguration:
    r"""Thing group indexing configuration."""
    
    thing_group_indexing_mode: shared_thinggroupindexingmode_enum.ThingGroupIndexingModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thingGroupIndexingMode') }})  
    custom_fields: Optional[list[shared_field.Field]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})  
    managed_fields: Optional[list[shared_field.Field]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('managedFields'), 'exclude': lambda f: f is None }})  
    