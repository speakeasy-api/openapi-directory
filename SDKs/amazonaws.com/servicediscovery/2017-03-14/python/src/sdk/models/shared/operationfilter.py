"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filtercondition_enum as shared_filtercondition_enum
from ..shared import operationfiltername_enum as shared_operationfiltername_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OperationFilter:
    r"""A complex type that lets you select the operations that you want to list."""
    
    name: shared_operationfiltername_enum.OperationFilterNameEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    values: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Values') }})  
    condition: Optional[shared_filtercondition_enum.FilterConditionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Condition'), 'exclude': lambda f: f is None }})  
    