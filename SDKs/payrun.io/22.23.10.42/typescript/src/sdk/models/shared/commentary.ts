/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The commentarys' employee
 */
export class CommentaryCommentaryEmployee extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

/**
 * The commentarys' pay run
 */
export class CommentaryCommentaryPayRun extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

export class CommentaryCommentary extends SpeakeasyBase {
  /**
   * The commentarys' created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * The commentarys' detail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Detail" })
  detail?: string;

  /**
   * The commentarys' employee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Employee" })
  @Type(() => CommentaryCommentaryEmployee)
  employee?: CommentaryCommentaryEmployee;

  /**
   * The commentarys' pay run
   */
  @SpeakeasyMetadata()
  @Expose({ name: "PayRun" })
  @Type(() => CommentaryCommentaryPayRun)
  payRun?: CommentaryCommentaryPayRun;
}

/**
 * The commentary object.
 */
export class Commentary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Commentary" })
  @Type(() => CommentaryCommentary)
  commentary?: CommentaryCommentary;
}
