/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StatementData - The SQL statement to run.
 */
public class StatementData {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;

    public StatementData withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("Id")
    public String id;

    public StatementData withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsBatchStatement")
    public Boolean isBatchStatement;

    public StatementData withIsBatchStatement(Boolean isBatchStatement) {
        this.isBatchStatement = isBatchStatement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryParameters")
    public SqlParameter[] queryParameters;

    public StatementData withQueryParameters(SqlParameter[] queryParameters) {
        this.queryParameters = queryParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryString")
    public String queryString;

    public StatementData withQueryString(String queryString) {
        this.queryString = queryString;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryStrings")
    public String[] queryStrings;

    public StatementData withQueryStrings(String[] queryStrings) {
        this.queryStrings = queryStrings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecretArn")
    public String secretArn;

    public StatementData withSecretArn(String secretArn) {
        this.secretArn = secretArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatementName")
    public String statementName;

    public StatementData withStatementName(String statementName) {
        this.statementName = statementName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public StatusStringEnum status;

    public StatementData withStatus(StatusStringEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedAt")
    public OffsetDateTime updatedAt;

    public StatementData withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    public StatementData(@JsonProperty("Id") String id) {
        this.id = id;
  }
}
