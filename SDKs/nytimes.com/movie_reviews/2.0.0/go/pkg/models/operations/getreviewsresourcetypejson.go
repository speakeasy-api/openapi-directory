// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetReviewsResourceTypeJSONOrderEnum - Sets the sort order of the results.
//
// Results ordered by-title are in ascending alphabetical order. Results ordered by one of the date parameters are in reverse chronological order.
//
// If you do not specify a sort order, the results will be ordered by publication-date.
type GetReviewsResourceTypeJSONOrderEnum string

const (
	GetReviewsResourceTypeJSONOrderEnumByTitle           GetReviewsResourceTypeJSONOrderEnum = "by-title"
	GetReviewsResourceTypeJSONOrderEnumByPublicationDate GetReviewsResourceTypeJSONOrderEnum = "by-publication-date"
	GetReviewsResourceTypeJSONOrderEnumByOpeningDate     GetReviewsResourceTypeJSONOrderEnum = "by-opening-date"
)

func (e GetReviewsResourceTypeJSONOrderEnum) ToPointer() *GetReviewsResourceTypeJSONOrderEnum {
	return &e
}

func (e *GetReviewsResourceTypeJSONOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "by-title":
		fallthrough
	case "by-publication-date":
		fallthrough
	case "by-opening-date":
		*e = GetReviewsResourceTypeJSONOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetReviewsResourceTypeJSONOrderEnum: %v", v)
	}
}

// GetReviewsResourceTypeJSONResourceTypeEnum - Specify all to retrieve all reviews, including NYT Critics' Picks.
//
// Specify picks to get NYT Critics' Picks currently in theaters.
type GetReviewsResourceTypeJSONResourceTypeEnum string

const (
	GetReviewsResourceTypeJSONResourceTypeEnumAll   GetReviewsResourceTypeJSONResourceTypeEnum = "all"
	GetReviewsResourceTypeJSONResourceTypeEnumPicks GetReviewsResourceTypeJSONResourceTypeEnum = "picks"
)

func (e GetReviewsResourceTypeJSONResourceTypeEnum) ToPointer() *GetReviewsResourceTypeJSONResourceTypeEnum {
	return &e
}

func (e *GetReviewsResourceTypeJSONResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "picks":
		*e = GetReviewsResourceTypeJSONResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetReviewsResourceTypeJSONResourceTypeEnum: %v", v)
	}
}

type GetReviewsResourceTypeJSONRequest struct {
	// Positive integer, multiple of 20
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Sets the sort order of the results.
	//
	// Results ordered by-title are in ascending alphabetical order. Results ordered by one of the date parameters are in reverse chronological order.
	//
	// If you do not specify a sort order, the results will be ordered by publication-date.
	//
	Order *GetReviewsResourceTypeJSONOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// Specify all to retrieve all reviews, including NYT Critics' Picks.
	//
	// Specify picks to get NYT Critics' Picks currently in theaters.
	//
	//
	ResourceType GetReviewsResourceTypeJSONResourceTypeEnum `pathParam:"style=simple,explode=false,name=resource-type"`
}

// GetReviewsResourceTypeJSON200ApplicationJSON - An array of Movies
type GetReviewsResourceTypeJSON200ApplicationJSON struct {
	Copyright  *string        `json:"copyright,omitempty"`
	NumResults *int64         `json:"num_results,omitempty"`
	Results    []shared.Movie `json:"results,omitempty"`
	Status     *string        `json:"status,omitempty"`
}

type GetReviewsResourceTypeJSONResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// An array of Movies
	GetReviewsResourceTypeJSON200ApplicationJSONObject *GetReviewsResourceTypeJSON200ApplicationJSON
}
