"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grpcroutefaultinjectionpolicyabort as shared_grpcroutefaultinjectionpolicyabort
from ..shared import grpcroutefaultinjectionpolicydelay as shared_grpcroutefaultinjectionpolicydelay
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GrpcRouteFaultInjectionPolicy:
    r"""The specification for fault injection introduced into traffic to test the resiliency of clients to destination service failure. As part of fault injection, when clients send requests to a destination, delays can be introduced on a percentage of requests before sending those requests to the destination service. Similarly requests from clients can be aborted by for a percentage of requests."""
    
    abort: Optional[shared_grpcroutefaultinjectionpolicyabort.GrpcRouteFaultInjectionPolicyAbort] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('abort'), 'exclude': lambda f: f is None }})
    r"""Specification of how client requests are aborted as part of fault injection before being sent to a destination."""  
    delay: Optional[shared_grpcroutefaultinjectionpolicydelay.GrpcRouteFaultInjectionPolicyDelay] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delay'), 'exclude': lambda f: f is None }})
    r"""Specification of how client requests are delayed as part of fault injection before being sent to a destination."""  
    