// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type StoresDeleteSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type StoresDeleteRequest struct {
	RequestBody *string `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The name of the store
	StoreName string `pathParam:"style=simple,explode=false,name=store_name"`
}

type StoresDeleteDefaultApplicationJSONCodeEnum string

const (
	StoresDeleteDefaultApplicationJSONCodeEnumBadRequest          StoresDeleteDefaultApplicationJSONCodeEnum = "BadRequest"
	StoresDeleteDefaultApplicationJSONCodeEnumConflict            StoresDeleteDefaultApplicationJSONCodeEnum = "Conflict"
	StoresDeleteDefaultApplicationJSONCodeEnumNotAcceptable       StoresDeleteDefaultApplicationJSONCodeEnum = "NotAcceptable"
	StoresDeleteDefaultApplicationJSONCodeEnumNotFound            StoresDeleteDefaultApplicationJSONCodeEnum = "NotFound"
	StoresDeleteDefaultApplicationJSONCodeEnumInternalServerError StoresDeleteDefaultApplicationJSONCodeEnum = "InternalServerError"
	StoresDeleteDefaultApplicationJSONCodeEnumUnauthorized        StoresDeleteDefaultApplicationJSONCodeEnum = "Unauthorized"
	StoresDeleteDefaultApplicationJSONCodeEnumTooManyRequests     StoresDeleteDefaultApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *StoresDeleteDefaultApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = StoresDeleteDefaultApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StoresDeleteDefaultApplicationJSONCodeEnum: %s", s)
	}
}

// StoresDeleteDefaultApplicationJSON - Error
type StoresDeleteDefaultApplicationJSON struct {
	Code    StoresDeleteDefaultApplicationJSONCodeEnum `json:"code"`
	Message string                                     `json:"message"`
}

type StoresDeleteResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	StoresDeleteDefaultApplicationJSONObject *StoresDeleteDefaultApplicationJSON
}
