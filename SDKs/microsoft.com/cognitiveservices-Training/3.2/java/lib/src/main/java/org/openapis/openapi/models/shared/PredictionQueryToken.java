/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;
import org.openapis.openapi.utils.SpeakeasyMetadata;

/**
 * PredictionQueryToken - Parameters used to query the predictions. Limited to combining 2 tags.
 */
public class PredictionQueryToken {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("application")
    @SpeakeasyMetadata("form:name=application")
    public String application;

    public PredictionQueryToken withApplication(String application) {
        this.application = application;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continuation")
    @SpeakeasyMetadata("form:name=continuation")
    public String continuation;

    public PredictionQueryToken withContinuation(String continuation) {
        this.continuation = continuation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    @SpeakeasyMetadata("form:name=endTime")
    public OffsetDateTime endTime;

    public PredictionQueryToken withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iterationId")
    @SpeakeasyMetadata("form:name=iterationId")
    public String iterationId;

    public PredictionQueryToken withIterationId(String iterationId) {
        this.iterationId = iterationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxCount")
    @SpeakeasyMetadata("form:name=maxCount")
    public Integer maxCount;

    public PredictionQueryToken withMaxCount(Integer maxCount) {
        this.maxCount = maxCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderBy")
    @SpeakeasyMetadata("form:name=orderBy")
    public PredictionQueryTokenOrderByEnum orderBy;

    public PredictionQueryToken withOrderBy(PredictionQueryTokenOrderByEnum orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("session")
    @SpeakeasyMetadata("form:name=session")
    public String session;

    public PredictionQueryToken withSession(String session) {
        this.session = session;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    @SpeakeasyMetadata("form:name=startTime")
    public OffsetDateTime startTime;

    public PredictionQueryToken withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    @SpeakeasyMetadata("form:name=tags,json")
    public PredictionQueryTag[] tags;

    public PredictionQueryToken withTags(PredictionQueryTag[] tags) {
        this.tags = tags;
        return this;
    }
    
    public PredictionQueryToken(){}
}
