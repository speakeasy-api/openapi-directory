/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { Expose, Type } from "class-transformer";

export class NotifyShopperRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount: Amount;

  /**
   * Date on which the subscription amount will be debited from the shopper. In YYYY-MM-DD format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingDate" })
  billingDate?: string;

  /**
   * Sequence of the debit. Depends on Frequency and Billing Attempts Rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingSequenceNumber" })
  billingSequenceNumber?: string;

  /**
   * Reference of Pre-debit notification that is displayed to the shopper. Optional field. Maps to reference if missing
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayedReference" })
  displayedReference?: string;

  /**
   * The merchant account identifier with which you want to process the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantAccount" })
  merchantAccount: string;

  /**
   * This is the `recurringDetailReference` returned in the response when you created the token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recurringDetailReference" })
  recurringDetailReference?: string;

  /**
   * Pre-debit notification reference sent by the merchant. This is a mandatory field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * The ID that uniquely identifies the shopper.
   *
   * @remarks
   *
   * This `shopperReference` must be the same as the `shopperReference` used in the initial payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shopperReference" })
  shopperReference: string;

  /**
   * This is the `recurringDetailReference` returned in the response when you created the token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storedPaymentMethodId" })
  storedPaymentMethodId?: string;
}
