"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAuthTokenAccessRequestBody:
    
    client_id: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'client_id' }})
    r"""ID of the client"""  
    client_secret: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'client_secret' }})
    r"""secret of the client"""  
    code: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'code' }})
    r"""user's temporary code"""  
    grant_type: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'grant_type' }})
    r"""default is \\"authorization_code\\" """  
    redirect_uri: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'redirect_uri' }})
    r"""redirect uri used by user"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAuthTokenAccess200ApplicationJSON:
    
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""the access token transformed from the temporary one"""  
    token_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type') }})
    r"""the access token type"""  
    

@dataclasses.dataclass
class PostAuthTokenAccessResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_auth_token_access_200_application_json_object: Optional[PostAuthTokenAccess200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    