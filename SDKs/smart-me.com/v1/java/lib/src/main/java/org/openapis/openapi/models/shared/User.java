/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * User - Container Class for the Web API
 */
public class User {
    /**
     * The Users created by this users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ChildUsers")
    public User[] childUsers;

    public User withChildUsers(User[] childUsers) {
        this.childUsers = childUsers;
        return this;
    }
    
    /**
     * The EMail Address of the User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Email")
    public String email;

    public User withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The ID of the User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Long id;

    public User withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the user as string
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IdAsString")
    public String idAsString;

    public User withIdAsString(String idAsString) {
        this.idAsString = idAsString;
        return this;
    }
    
    /**
     * Flag if this User is an Admin User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsAdmin")
    public Boolean isAdmin;

    public User withIsAdmin(Boolean isAdmin) {
        this.isAdmin = isAdmin;
        return this;
    }
    
    /**
     * Additional Permissions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Permissions")
    public String[] permissions;

    public User withPermissions(String[] permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * The Username of the User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Username")
    public String username;

    public User withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public User(){}
}
