// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeFileCachesXAmzTargetEnum
type DescribeFileCachesXAmzTargetEnum string

const (
	DescribeFileCachesXAmzTargetEnumAwsSimbaAPIServiceV20180301DescribeFileCaches DescribeFileCachesXAmzTargetEnum = "AWSSimbaAPIService_v20180301.DescribeFileCaches"
)

func (e *DescribeFileCachesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSSimbaAPIService_v20180301.DescribeFileCaches":
		*e = DescribeFileCachesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFileCachesXAmzTargetEnum: %s", s)
	}
}

type DescribeFileCachesRequest struct {
	DescribeFileCachesRequest shared.DescribeFileCachesRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeFileCachesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeFileCachesResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	DescribeFileCachesResponse *shared.DescribeFileCachesResponse
	// FileCacheNotFound
	FileCacheNotFound interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
