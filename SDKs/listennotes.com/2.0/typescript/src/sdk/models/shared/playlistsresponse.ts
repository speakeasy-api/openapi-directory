/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PlaylistVisibilityFieldEnum } from "./playlistvisibilityfieldenum";
import { Expose, Type } from "class-transformer";

/**
 * A playlist
 */
export class PlaylistsResponsePlaylists extends SpeakeasyBase {
  /**
   * Playlist description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The number of episodes (including custom audio) in this playlist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "episode_count" })
  episodeCount?: number;

  /**
   * A 11-character playlist id, which can be used to further fetch detailed playlist metadata via `GET /playlists/{id}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * High resolution image url of the playlist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  image?: string;

  /**
   * Passed to the **last_timestamp_ms** parameter of `GET /playlists/{id}` to paginate through items of that playlist.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_timestamp_ms" })
  lastTimestampMs?: number;

  /**
   * The url of this playlist on ListenNotes.com.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listennotes_url" })
  listennotesUrl?: string;

  /**
   * Playlist name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The number of podcasts in this playlist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "podcast_count" })
  podcastCount?: number;

  /**
   * Low resolution image url of the playlist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnail" })
  thumbnail?: string;

  /**
   * Total audio length of all episodes in this playlist, in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_audio_length_sec" })
  totalAudioLengthSec?: number;

  /**
   * Visibility of this playlist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: PlaylistVisibilityFieldEnum;
}

/**
 * OK
 */
export class PlaylistsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "has_next" })
  hasNext?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "has_previous" })
  hasPrevious?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_number" })
  nextPageNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber?: number;

  @SpeakeasyMetadata({ elemType: PlaylistsResponsePlaylists })
  @Expose({ name: "playlists" })
  @Type(() => PlaylistsResponsePlaylists)
  playlists?: PlaylistsResponsePlaylists[];

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_number" })
  previousPageNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}
