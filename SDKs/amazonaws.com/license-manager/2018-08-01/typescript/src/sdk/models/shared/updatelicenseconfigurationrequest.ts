/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LicenseConfigurationStatusEnum } from "./licenseconfigurationstatusenum";
import { ProductInformation } from "./productinformation";
import { Expose, Type } from "class-transformer";

export class UpdateLicenseConfigurationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisassociateWhenNotFound" })
  disassociateWhenNotFound?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseConfigurationArn" })
  licenseConfigurationArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseConfigurationStatus" })
  licenseConfigurationStatus?: LicenseConfigurationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseCount" })
  licenseCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseCountHardLimit" })
  licenseCountHardLimit?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseRules" })
  licenseRules?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: ProductInformation })
  @Expose({ name: "ProductInformationList" })
  @Type(() => ProductInformation)
  productInformationList?: ProductInformation[];
}
