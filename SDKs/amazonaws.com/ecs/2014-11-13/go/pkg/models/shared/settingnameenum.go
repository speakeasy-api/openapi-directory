// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SettingNameEnum string

const (
	SettingNameEnumServiceLongArnFormat           SettingNameEnum = "serviceLongArnFormat"
	SettingNameEnumTaskLongArnFormat              SettingNameEnum = "taskLongArnFormat"
	SettingNameEnumContainerInstanceLongArnFormat SettingNameEnum = "containerInstanceLongArnFormat"
	SettingNameEnumAwsvpcTrunking                 SettingNameEnum = "awsvpcTrunking"
	SettingNameEnumContainerInsights              SettingNameEnum = "containerInsights"
	SettingNameEnumFargateFipsMode                SettingNameEnum = "fargateFIPSMode"
	SettingNameEnumTagResourceAuthorization       SettingNameEnum = "tagResourceAuthorization"
)

func (e SettingNameEnum) ToPointer() *SettingNameEnum {
	return &e
}

func (e *SettingNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "serviceLongArnFormat":
		fallthrough
	case "taskLongArnFormat":
		fallthrough
	case "containerInstanceLongArnFormat":
		fallthrough
	case "awsvpcTrunking":
		fallthrough
	case "containerInsights":
		fallthrough
	case "fargateFIPSMode":
		fallthrough
	case "tagResourceAuthorization":
		*e = SettingNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SettingNameEnum: %v", v)
	}
}
