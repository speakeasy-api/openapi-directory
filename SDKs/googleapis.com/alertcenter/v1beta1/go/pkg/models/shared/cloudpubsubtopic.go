// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CloudPubsubTopicPayloadFormatEnum - Optional. The format of the payload that would be sent. If not specified the format will be JSON.
type CloudPubsubTopicPayloadFormatEnum string

const (
	CloudPubsubTopicPayloadFormatEnumPayloadFormatUnspecified CloudPubsubTopicPayloadFormatEnum = "PAYLOAD_FORMAT_UNSPECIFIED"
	CloudPubsubTopicPayloadFormatEnumJSON                     CloudPubsubTopicPayloadFormatEnum = "JSON"
)

func (e CloudPubsubTopicPayloadFormatEnum) ToPointer() *CloudPubsubTopicPayloadFormatEnum {
	return &e
}

func (e *CloudPubsubTopicPayloadFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PAYLOAD_FORMAT_UNSPECIFIED":
		fallthrough
	case "JSON":
		*e = CloudPubsubTopicPayloadFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudPubsubTopicPayloadFormatEnum: %v", v)
	}
}

// CloudPubsubTopic - A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.
type CloudPubsubTopic struct {
	// Optional. The format of the payload that would be sent. If not specified the format will be JSON.
	PayloadFormat *CloudPubsubTopicPayloadFormatEnum `json:"payloadFormat,omitempty"`
	// The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).
	TopicName *string `json:"topicName,omitempty"`
}
