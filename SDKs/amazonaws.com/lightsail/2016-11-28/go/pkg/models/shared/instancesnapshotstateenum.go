// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceSnapshotStateEnum string

const (
	InstanceSnapshotStateEnumPending   InstanceSnapshotStateEnum = "pending"
	InstanceSnapshotStateEnumError     InstanceSnapshotStateEnum = "error"
	InstanceSnapshotStateEnumAvailable InstanceSnapshotStateEnum = "available"
)

func (e InstanceSnapshotStateEnum) ToPointer() *InstanceSnapshotStateEnum {
	return &e
}

func (e *InstanceSnapshotStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "error":
		fallthrough
	case "available":
		*e = InstanceSnapshotStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceSnapshotStateEnum: %v", v)
	}
}
