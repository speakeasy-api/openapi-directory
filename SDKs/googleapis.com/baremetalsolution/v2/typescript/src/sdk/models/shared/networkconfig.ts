/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IntakeVlanAttachment } from "./intakevlanattachment";
import { Expose, Type } from "class-transformer";

/**
 * Interconnect bandwidth. Set only when type is CLIENT.
 */
export enum NetworkConfigBandwidthEnum {
  BandwidthUnspecified = "BANDWIDTH_UNSPECIFIED",
  Bw1Gbps = "BW_1_GBPS",
  Bw2Gbps = "BW_2_GBPS",
  Bw5Gbps = "BW_5_GBPS",
  Bw10Gbps = "BW_10_GBPS",
}

/**
 * Service CIDR, if any.
 */
export enum NetworkConfigServiceCidrEnum {
  ServiceCidrUnspecified = "SERVICE_CIDR_UNSPECIFIED",
  Disabled = "DISABLED",
  High26 = "HIGH_26",
  High27 = "HIGH_27",
  High28 = "HIGH_28",
}

/**
 * The type of this network, either Client or Private.
 */
export enum NetworkConfigTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  Client = "CLIENT",
  Private = "PRIVATE",
}

/**
 * Configuration parameters for a new network.
 */
export class NetworkConfigInput extends SpeakeasyBase {
  /**
   * Interconnect bandwidth. Set only when type is CLIENT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandwidth" })
  bandwidth?: NetworkConfigBandwidthEnum;

  /**
   * CIDR range of the network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cidr" })
  cidr?: string;

  /**
   * The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcpService" })
  gcpService?: string;

  /**
   * A transient unique identifier to identify a volume within an ProvisioningConfig request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The JumboFramesEnabled option for customer to set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jumboFramesEnabled" })
  jumboFramesEnabled?: boolean;

  /**
   * Service CIDR, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceCidr" })
  serviceCidr?: NetworkConfigServiceCidrEnum;

  /**
   * The type of this network, either Client or Private.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: NetworkConfigTypeEnum;

  /**
   * User note field, it can be used by customers to add additional information for the BMS Ops team .
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userNote" })
  userNote?: string;

  /**
   * List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
   */
  @SpeakeasyMetadata({ elemType: IntakeVlanAttachment })
  @Expose({ name: "vlanAttachments" })
  @Type(() => IntakeVlanAttachment)
  vlanAttachments?: IntakeVlanAttachment[];

  /**
   * Whether the VLAN attachment pair is located in the same project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanSameProject" })
  vlanSameProject?: boolean;
}

/**
 * Configuration parameters for a new network.
 */
export class NetworkConfig extends SpeakeasyBase {
  /**
   * Interconnect bandwidth. Set only when type is CLIENT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandwidth" })
  bandwidth?: NetworkConfigBandwidthEnum;

  /**
   * CIDR range of the network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cidr" })
  cidr?: string;

  /**
   * The GCP service of the network. Available gcp_service are in https://cloud.google.com/bare-metal/docs/bms-planning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcpService" })
  gcpService?: string;

  /**
   * A transient unique identifier to identify a volume within an ProvisioningConfig request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The JumboFramesEnabled option for customer to set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jumboFramesEnabled" })
  jumboFramesEnabled?: boolean;

  /**
   * Output only. The name of the network config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Service CIDR, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceCidr" })
  serviceCidr?: NetworkConfigServiceCidrEnum;

  /**
   * The type of this network, either Client or Private.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: NetworkConfigTypeEnum;

  /**
   * User note field, it can be used by customers to add additional information for the BMS Ops team .
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userNote" })
  userNote?: string;

  /**
   * List of VLAN attachments. As of now there are always 2 attachments, but it is going to change in the future (multi vlan).
   */
  @SpeakeasyMetadata({ elemType: IntakeVlanAttachment })
  @Expose({ name: "vlanAttachments" })
  @Type(() => IntakeVlanAttachment)
  vlanAttachments?: IntakeVlanAttachment[];

  /**
   * Whether the VLAN attachment pair is located in the same project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlanSameProject" })
  vlanSameProject?: boolean;
}
