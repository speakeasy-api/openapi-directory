// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteResourcePolicyStatementPathParams struct {
	// The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.
	ResourceArn string `pathParam:"style=simple,explode=false,name=resourceArn"`
	// The name of the statement (SID) to delete from the policy.
	StatementID string `pathParam:"style=simple,explode=false,name=statementId"`
}

type DeleteResourcePolicyStatementQueryParams struct {
	// <p>The identifier of the revision of the policy to delete the statement from. If this revision ID doesn't match the current revision ID, Amazon Lex throws an exception.</p> <p>If you don't specify a revision, Amazon Lex removes the current contents of the statement. </p>
	ExpectedRevisionID *string `queryParam:"style=form,explode=true,name=expectedRevisionId"`
}

type DeleteResourcePolicyStatementHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DeleteResourcePolicyStatementRequest struct {
	PathParams  DeleteResourcePolicyStatementPathParams
	QueryParams DeleteResourcePolicyStatementQueryParams
	Headers     DeleteResourcePolicyStatementHeaders
}

type DeleteResourcePolicyStatementResponse struct {
	ContentType string
	// Success
	DeleteResourcePolicyStatementResponse *shared.DeleteResourcePolicyStatementResponse
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
