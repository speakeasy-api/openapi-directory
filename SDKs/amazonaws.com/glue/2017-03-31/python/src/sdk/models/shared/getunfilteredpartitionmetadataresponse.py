"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import partition as shared_partition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetUnfilteredPartitionMetadataResponse:
    r"""Success"""
    
    authorized_columns: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthorizedColumns'), 'exclude': lambda f: f is None }})  
    is_registered_with_lake_formation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsRegisteredWithLakeFormation'), 'exclude': lambda f: f is None }})  
    partition: Optional[shared_partition.Partition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Partition'), 'exclude': lambda f: f is None }})  
    