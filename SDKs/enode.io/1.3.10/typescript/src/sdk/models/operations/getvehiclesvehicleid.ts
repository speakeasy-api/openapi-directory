/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetVehiclesVehicleidSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken1?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken2?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken3?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken4?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken5?: string;
}

export enum GetVehiclesVehicleidFieldEnum {
  SmartChargingPolicy = "smartChargingPolicy",
  ChargeState = "chargeState",
  Location = "location",
  Information = "information",
  Odometer = "odometer",
}

export class GetVehiclesVehicleidRequest extends SpeakeasyBase {
  /**
   * An optional array of Vehicle fields that should be included in the response, for example: `?field[]=information&field[]=location`
   *
   * @remarks
   *
   * By default, no fields are included and only the Vehicle ID will be returned. Response time may be impacted by which fields you request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=field[]",
  })
  field?: GetVehiclesVehicleidFieldEnum[];

  /**
   * ID of the Vehicle
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=vehicleId",
  })
  vehicleId: string;
}

/**
 * Successful
 */
export class GetVehiclesVehicleid200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "chargeState" })
  @Type(
    () =>
      shared.Onevehicles1Percent7BvehicleIdPercent7D1chargeStateGetResponses200ContentApplication1jsonSchema
  )
  chargeState?: shared.Onevehicles1Percent7BvehicleIdPercent7D1chargeStateGetResponses200ContentApplication1jsonSchema;

  /**
   * Id of the charging location the vehicle is currently positioned at (if any)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargingLocationId" })
  chargingLocationId: string;

  /**
   * Vehicle ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Descriptive information about the Vehicle
   */
  @SpeakeasyMetadata()
  @Expose({ name: "information" })
  @Type(
    () =>
      shared.Onevehicles1Percent7BvehicleIdPercent7D1informationGetResponses200ContentApplication1jsonSchema
  )
  information?: shared.Onevehicles1Percent7BvehicleIdPercent7D1informationGetResponses200ContentApplication1jsonSchema;

  /**
   * Is the vehicle currently reachable?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isReachable" })
  isReachable: boolean;

  /**
   * The last time vehicle was successfully communicated with
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSeen" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSeen: Date;

  /**
   * Vehicle's GPS coordinates with timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(
    () =>
      shared.Onevehicles1Percent7BvehicleIdPercent7D1locationGetResponses200ContentApplication1jsonSchema
  )
  location?: shared.Onevehicles1Percent7BvehicleIdPercent7D1locationGetResponses200ContentApplication1jsonSchema;

  /**
   * Vehicle's odometer with timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "odometer" })
  @Type(
    () =>
      shared.Onevehicles1Percent7BvehicleIdPercent7D1odometerGetResponses200ContentApplication1jsonSchema
  )
  odometer?: shared.Onevehicles1Percent7BvehicleIdPercent7D1odometerGetResponses200ContentApplication1jsonSchema;

  @SpeakeasyMetadata()
  @Expose({ name: "smartChargingPolicy" })
  @Type(
    () =>
      shared.Onevehicles1Percent7BvehicleIdPercent7D1smartChargingPolicyPutRequestBodyContentApplication1jsonSchema
  )
  smartChargingPolicy?: shared.Onevehicles1Percent7BvehicleIdPercent7D1smartChargingPolicyPutRequestBodyContentApplication1jsonSchema;
}

export class GetVehiclesVehicleidResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful
   */
  @SpeakeasyMetadata()
  getVehiclesVehicleid200ApplicationJSONObject?: GetVehiclesVehicleid200ApplicationJSON;
}
