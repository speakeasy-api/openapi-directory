/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Entitlement - This class defines an entitlement data on the Publish API
 */
public class Entitlement {
    /**
     * The actual entitlements information to add to the entity
     */
    @JsonProperty("data")
    public java.util.Map<String, Object> data;
    public Entitlement withData(java.util.Map<String, Object> data) {
        this.data = data;
        return this;
    }
    
    /**
     * Id of the entity to add this extionsion to. If the relatedEntityId is Null, a relatedEntitySource MUST be provided
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedEntityId")
    public String relatedEntityId;
    public Entitlement withRelatedEntityId(String relatedEntityId) {
        this.relatedEntityId = relatedEntityId;
        return this;
    }
    
    /**
     * Source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedEntitySource")
    public Source relatedEntitySource;
    public Entitlement withRelatedEntitySource(Source relatedEntitySource) {
        this.relatedEntitySource = relatedEntitySource;
        return this;
    }
    
    /**
     * The type of the entity to add this entitlement to
     */
    @JsonProperty("relatedEntityType")
    public EntitlementRelatedEntityTypeEnum relatedEntityType;
    public Entitlement withRelatedEntityType(EntitlementRelatedEntityTypeEnum relatedEntityType) {
        this.relatedEntityType = relatedEntityType;
        return this;
    }
    
    /**
     * Source of the extension, where it came from
     */
    @JsonProperty("source")
    public EntitlementSourceEnum source;
    public Entitlement withSource(EntitlementSourceEnum source) {
        this.source = source;
        return this;
    }
    
    /**
     * Version of the entitlements. Version is to prevent to override an entitlements with an older one
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionNumber")
    public Long versionNumber;
    public Entitlement withVersionNumber(Long versionNumber) {
        this.versionNumber = versionNumber;
        return this;
    }
    
}
