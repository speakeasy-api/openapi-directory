"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import chargetier as shared_chargetier
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UsageVolumePricingOverridePriceChangeOptionEnum(str, Enum):
    r"""Specifies how Zuora changes the price of the charge each time the subscription renews.
    
    If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
    """
    NO_CHANGE = 'NoChange'
    SPECIFIC_PERCENTAGE_VALUE = 'SpecificPercentageValue'
    USE_LATEST_PRODUCT_CATALOG_PRICING = 'UseLatestProductCatalogPricing'

class UsageVolumePricingOverrideRatingGroupEnum(str, Enum):
    r"""Specifies how Zuora groups usage records when rating usage. See [Usage Rating by Group](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Usage/Usage_Rating_by_Group) for more information.
      * ByBillingPeriod (default): The rating is based on all the usages in a billing period.
      * ByUsageStartDate: The rating is based on all the usages on the same usage start date. 
      * ByUsageRecord: The rating is based on each usage record.
      * ByUsageUpload: The rating is based on all the usages in a uploaded usage file (.xls or .csv). If you import a mass usage in a single upload, which contains multiple usage files in .xls or .csv format, usage records are grouped for each usage file.
    """
    BY_BILLING_PERIOD = 'ByBillingPeriod'
    BY_USAGE_START_DATE = 'ByUsageStartDate'
    BY_USAGE_RECORD = 'ByUsageRecord'
    BY_USAGE_UPLOAD = 'ByUsageUpload'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UsageVolumePricingOverride:
    r"""Pricing information about a usage charge that uses the \\"volume pricing\\" charge model. In this charge model, the charge has a variable price per unit, depending on how many units are consumed."""
    
    price_change_option: Optional[UsageVolumePricingOverridePriceChangeOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceChangeOption'), 'exclude': lambda f: f is None }})
    r"""Specifies how Zuora changes the price of the charge each time the subscription renews.
    
    If the value of this field is `SpecificPercentageValue`, use the `priceIncreasePercentage` field to specify how much the price of the charge should change.
    """  
    price_increase_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceIncreasePercentage'), 'exclude': lambda f: f is None }})
    r"""Specifies the percentage by which the price of the charge should change each time the subscription renews. Only applicable if the value of the `priceChangeOption` field is `SpecificPercentageValue`."""  
    rating_group: Optional[UsageVolumePricingOverrideRatingGroupEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ratingGroup'), 'exclude': lambda f: f is None }})
    r"""Specifies how Zuora groups usage records when rating usage. See [Usage Rating by Group](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/J_Billing_Operations/Usage/Usage_Rating_by_Group) for more information.
      * ByBillingPeriod (default): The rating is based on all the usages in a billing period.
      * ByUsageStartDate: The rating is based on all the usages on the same usage start date. 
      * ByUsageRecord: The rating is based on each usage record.
      * ByUsageUpload: The rating is based on all the usages in a uploaded usage file (.xls or .csv). If you import a mass usage in a single upload, which contains multiple usage files in .xls or .csv format, usage records are grouped for each usage file.
    """  
    tiers: Optional[list[shared_chargetier.ChargeTier]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tiers'), 'exclude': lambda f: f is None }})
    r"""List of variable pricing tiers in the charge."""  
    