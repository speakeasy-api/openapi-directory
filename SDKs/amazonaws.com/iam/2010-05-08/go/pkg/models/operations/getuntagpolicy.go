// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUntagPolicyActionEnum
type GETUntagPolicyActionEnum string

const (
	GETUntagPolicyActionEnumUntagPolicy GETUntagPolicyActionEnum = "UntagPolicy"
)

func (e *GETUntagPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UntagPolicy":
		*e = GETUntagPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUntagPolicyActionEnum: %s", s)
	}
}

// GETUntagPolicyVersionEnum
type GETUntagPolicyVersionEnum string

const (
	GETUntagPolicyVersionEnumTwoThousandAndTen0508 GETUntagPolicyVersionEnum = "2010-05-08"
)

func (e *GETUntagPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETUntagPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUntagPolicyVersionEnum: %s", s)
	}
}

type GETUntagPolicyRequest struct {
	Action GETUntagPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The ARN of the IAM customer managed policy from which you want to remove tags.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	PolicyArn string `queryParam:"style=form,explode=true,name=PolicyArn"`
	// A list of key names as a simple array of strings. The tags with matching keys are removed from the specified policy.
	TagKeys           []string                  `queryParam:"style=form,explode=true,name=TagKeys"`
	Version           GETUntagPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUntagPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
