/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateDeviceCameraQualityAndRetentionSettingsRequestBody {
    /**
     * Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioRecordingEnabled")
    public Boolean audioRecordingEnabled;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withAudioRecordingEnabled(Boolean audioRecordingEnabled) {
        this.audioRecordingEnabled = audioRecordingEnabled;
        return this;
    }
    
    /**
     * Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("motionBasedRetentionEnabled")
    public Boolean motionBasedRetentionEnabled;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withMotionBasedRetentionEnabled(Boolean motionBasedRetentionEnabled) {
        this.motionBasedRetentionEnabled = motionBasedRetentionEnabled;
        return this;
    }
    
    /**
     * The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("motionDetectorVersion")
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBodyMotionDetectorVersionEnum motionDetectorVersion;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withMotionDetectorVersion(UpdateDeviceCameraQualityAndRetentionSettingsRequestBodyMotionDetectorVersionEnum motionDetectorVersion) {
        this.motionDetectorVersion = motionDetectorVersion;
        return this;
    }
    
    /**
     * The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profileId")
    public String profileId;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withProfileId(String profileId) {
        this.profileId = profileId;
        return this;
    }
    
    /**
     * Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quality")
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBodyQualityEnum quality;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withQuality(UpdateDeviceCameraQualityAndRetentionSettingsRequestBodyQualityEnum quality) {
        this.quality = quality;
        return this;
    }
    
    /**
     * Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080' or '2058x2058'. Not all resolutions are supported by every camera model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolution")
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBodyResolutionEnum resolution;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withResolution(UpdateDeviceCameraQualityAndRetentionSettingsRequestBodyResolutionEnum resolution) {
        this.resolution = resolution;
        return this;
    }
    
    /**
     * Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restrictedBandwidthModeEnabled")
    public Boolean restrictedBandwidthModeEnabled;
    public UpdateDeviceCameraQualityAndRetentionSettingsRequestBody withRestrictedBandwidthModeEnabled(Boolean restrictedBandwidthModeEnabled) {
        this.restrictedBandwidthModeEnabled = restrictedBandwidthModeEnabled;
        return this;
    }
    
}
