// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorldGenerationJobStatusEnum string

const (
	WorldGenerationJobStatusEnumPending       WorldGenerationJobStatusEnum = "Pending"
	WorldGenerationJobStatusEnumRunning       WorldGenerationJobStatusEnum = "Running"
	WorldGenerationJobStatusEnumCompleted     WorldGenerationJobStatusEnum = "Completed"
	WorldGenerationJobStatusEnumFailed        WorldGenerationJobStatusEnum = "Failed"
	WorldGenerationJobStatusEnumPartialFailed WorldGenerationJobStatusEnum = "PartialFailed"
	WorldGenerationJobStatusEnumCanceling     WorldGenerationJobStatusEnum = "Canceling"
	WorldGenerationJobStatusEnumCanceled      WorldGenerationJobStatusEnum = "Canceled"
)

func (e WorldGenerationJobStatusEnum) ToPointer() *WorldGenerationJobStatusEnum {
	return &e
}

func (e *WorldGenerationJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "Running":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "PartialFailed":
		fallthrough
	case "Canceling":
		fallthrough
	case "Canceled":
		*e = WorldGenerationJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorldGenerationJobStatusEnum: %v", v)
	}
}
