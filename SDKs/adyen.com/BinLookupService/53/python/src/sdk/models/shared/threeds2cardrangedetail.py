"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ThreeDs2CardRangeDetail:
    
    acs_info_ind: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acsInfoInd'), 'exclude': lambda f: f is None }})
    r"""Provides additional information to the 3DS Server.
    Possible values:
    - 01 (Authentication is available at ACS)
    - 02 (Attempts supported by ACS or DS)
    - 03 (Decoupled authentication supported)
    - 04 (Whitelisting supported)
    """  
    brand_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brandCode'), 'exclude': lambda f: f is None }})
    r"""Card brand."""  
    end_range: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endRange'), 'exclude': lambda f: f is None }})
    r"""BIN end range."""  
    start_range: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startRange'), 'exclude': lambda f: f is None }})
    r"""BIN start range."""  
    three_ds2_versions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threeDS2Versions'), 'exclude': lambda f: f is None }})
    r"""Supported 3D Secure protocol versions"""  
    three_ds_method_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threeDSMethodURL'), 'exclude': lambda f: f is None }})
    r"""In a 3D Secure 2 browser-based flow, this is the URL where you should send the device fingerprint to."""  
    