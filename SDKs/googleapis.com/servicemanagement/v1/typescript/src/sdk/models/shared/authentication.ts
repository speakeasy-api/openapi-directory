/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationRule } from "./authenticationrule";
import { AuthProvider } from "./authprovider";
import { Expose, Type } from "class-transformer";

/**
 * `Authentication` defines the authentication configuration for API methods provided by an API service. Example: name: calendar.googleapis.com authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: "*" requirements: provider_id: google_calendar_auth - selector: google.calendar.Delegate oauth: canonical_scopes: https://www.googleapis.com/auth/calendar.read
 */
export class Authentication extends SpeakeasyBase {
  /**
   * Defines a set of authentication providers that a service supports.
   */
  @SpeakeasyMetadata({ elemType: AuthProvider })
  @Expose({ name: "providers" })
  @Type(() => AuthProvider)
  providers?: AuthProvider[];

  /**
   * A list of authentication rules that apply to individual API methods. **NOTE:** All service configuration rules follow "last one wins" order.
   */
  @SpeakeasyMetadata({ elemType: AuthenticationRule })
  @Expose({ name: "rules" })
  @Type(() => AuthenticationRule)
  rules?: AuthenticationRule[];
}
