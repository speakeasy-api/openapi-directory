/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionConfiguration } from "./actionconfiguration";
import { ActionTypeId } from "./actiontypeid";
import { Artifact } from "./artifact";
import { AWSSessionCredentials } from "./awssessioncredentials";
import { EncryptionKey } from "./encryptionkey";
import { PipelineContext } from "./pipelinecontext";
import { Expose, Type } from "class-transformer";

/**
 * Represents information about the job data for a partner action.
 */
export class ThirdPartyJobData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "actionConfiguration" })
  @Type(() => ActionConfiguration)
  actionConfiguration?: ActionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "actionTypeId" })
  @Type(() => ActionTypeId)
  actionTypeId?: ActionTypeId;

  @SpeakeasyMetadata()
  @Expose({ name: "artifactCredentials" })
  @Type(() => AWSSessionCredentials)
  artifactCredentials?: AWSSessionCredentials;

  @SpeakeasyMetadata()
  @Expose({ name: "continuationToken" })
  continuationToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "encryptionKey" })
  @Type(() => EncryptionKey)
  encryptionKey?: EncryptionKey;

  @SpeakeasyMetadata({ elemType: Artifact })
  @Expose({ name: "inputArtifacts" })
  @Type(() => Artifact)
  inputArtifacts?: Artifact[];

  @SpeakeasyMetadata({ elemType: Artifact })
  @Expose({ name: "outputArtifacts" })
  @Type(() => Artifact)
  outputArtifacts?: Artifact[];

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineContext" })
  @Type(() => PipelineContext)
  pipelineContext?: PipelineContext;
}
