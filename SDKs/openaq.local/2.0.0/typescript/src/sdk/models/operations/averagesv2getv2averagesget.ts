/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum AveragesV2GetV2AveragesGetSortSortEnum {
  Asc = "asc",
  Desc = "desc",
}

export class AveragesV2GetV2AveragesGetRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. ?country=US or ?country=US&country=MX)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string[];

  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. /US)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country_id",
  })
  countryId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_from",
  })
  dateFrom?: any;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_to",
  })
  dateTo?: any;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=group" })
  group?: boolean;

  /**
   * Change the number of results returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location",
  })
  location?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Paginate through results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameter",
  })
  parameter?: any[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameter_id",
  })
  parameterId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=project",
  })
  project?: any[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=project_id",
  })
  projectId?: number;

  /**
   * Define sort order.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: AveragesV2GetV2AveragesGetSortSortEnum;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=spatial",
  })
  spatial: shared.SpatialEnum;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=temporal",
  })
  temporal: shared.TemporalEnum;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=unit" })
  unit?: string[];
}

export class AveragesV2GetV2AveragesGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  openAQResult?: shared.OpenAQResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
