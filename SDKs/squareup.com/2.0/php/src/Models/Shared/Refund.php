<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Refund - Represents a refund processed for a Square transaction.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Refund
{
    /**
     * Additional recipients (other than the merchant) receiving a portion of this refund.
     * 
     * For example, fees assessed on a refund of a purchase by a third party integration.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AdditionalRecipient> $additionalRecipients
     */
	#[\JMS\Serializer\Annotation\SerializedName('additional_recipients')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AdditionalRecipient>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalRecipients = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    public Money $amountMoney;
    
    /**
     * The timestamp for when the refund was created, in RFC 3339 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The refund's unique ID.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The ID of the refund's associated location.
     * 
     * @var string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $locationId;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $processingFeeMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('processing_fee_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $processingFeeMoney = null;
    
    /**
     * The reason for the refund being issued.
     * 
     * @var string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reason;
    
    /**
     * The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,
     * 
     * or `FAILED`).
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
    /**
     * The ID of the refunded tender.
     * 
     * @var string $tenderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('tender_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tenderId;
    
    /**
     * The ID of the transaction that the refunded tender is part of.
     * 
     * @var string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transactionId;
    
	public function __construct()
	{
		$this->additionalRecipients = null;
		$this->amountMoney = new \OpenAPI\OpenAPI\Models\Shared\Money();
		$this->createdAt = null;
		$this->id = "";
		$this->locationId = "";
		$this->processingFeeMoney = null;
		$this->reason = "";
		$this->status = "";
		$this->tenderId = "";
		$this->transactionId = "";
	}
}
