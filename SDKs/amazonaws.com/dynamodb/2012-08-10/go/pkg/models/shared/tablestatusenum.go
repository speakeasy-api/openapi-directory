// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TableStatusEnum string

const (
	TableStatusEnumCreating                          TableStatusEnum = "CREATING"
	TableStatusEnumUpdating                          TableStatusEnum = "UPDATING"
	TableStatusEnumDeleting                          TableStatusEnum = "DELETING"
	TableStatusEnumActive                            TableStatusEnum = "ACTIVE"
	TableStatusEnumInaccessibleEncryptionCredentials TableStatusEnum = "INACCESSIBLE_ENCRYPTION_CREDENTIALS"
	TableStatusEnumArchiving                         TableStatusEnum = "ARCHIVING"
	TableStatusEnumArchived                          TableStatusEnum = "ARCHIVED"
)

func (e TableStatusEnum) ToPointer() *TableStatusEnum {
	return &e
}

func (e *TableStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "INACCESSIBLE_ENCRYPTION_CREDENTIALS":
		fallthrough
	case "ARCHIVING":
		fallthrough
	case "ARCHIVED":
		*e = TableStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TableStatusEnum: %v", v)
	}
}
