/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetPublicationsPublicationTypesEnum {
  PublishProducts = "PublishProducts",
  PublishOffers = "PublishOffers",
  Unpublish = "Unpublish",
  PublishRelationshipsEnum = "PublishRelationshipsEnum",
  PublishProductImagesEnum = "PublishProductImagesEnum",
  PublishInventoryEnum = "PublishInventoryEnum",
  PublishPricingEnum = "PublishPricingEnum",
}

export class GetPublicationsRequest extends SpeakeasyBase {
  /**
   * Account Id to query (required)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=accountId",
  })
  accountId: number;

  /**
   * Channel Catalog Id by which to filter (optional)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=channelCatalogId",
  })
  channelCatalogId?: string;

  /**
   * Amount of entries to fetch (optional, default set to 10)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * Marketplace Technical Code to query (required)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=marketplaceTechnicalCode",
  })
  marketplaceTechnicalCode: string;

  /**
   * Publication types by which to filter (optional)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=publicationTypes",
  })
  publicationTypes: GetPublicationsPublicationTypesEnum[];
}

export class GetPublicationsResponse extends SpeakeasyBase {
  /**
   * Occurs when something goes wrong
   */
  @SpeakeasyMetadata()
  beezUPCommonErrorResponseMessage?: shared.BeezUPCommonErrorResponseMessage;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successfully fetched channel catalog settings
   */
  @SpeakeasyMetadata()
  accountPublications?: shared.AccountPublications;
}
