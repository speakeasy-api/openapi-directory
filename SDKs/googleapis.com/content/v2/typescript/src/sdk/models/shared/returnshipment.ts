/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ShipmentTrackingInfo } from "./shipmenttrackinginfo";
import { Expose, Type } from "class-transformer";

export class ReturnShipment extends SpeakeasyBase {
  /**
   * The date of creation of the shipment, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  creationDate?: string;

  /**
   * The date of delivery of the shipment, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryDate" })
  deliveryDate?: string;

  /**
   * Type of the return method. Acceptable values are: - "`byMail`" - "`contactCustomerSupport`" - "`returnless`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnMethodType" })
  returnMethodType?: string;

  /**
   * Shipment ID generated by Google.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipmentId" })
  shipmentId?: string;

  /**
   * Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.
   */
  @SpeakeasyMetadata({ elemType: ShipmentTrackingInfo })
  @Expose({ name: "shipmentTrackingInfos" })
  @Type(() => ShipmentTrackingInfo)
  shipmentTrackingInfos?: ShipmentTrackingInfo[];

  /**
   * The date of shipping of the shipment, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shippingDate" })
  shippingDate?: string;

  /**
   * State of the shipment. Acceptable values are: - "`completed`" - "`new`" - "`shipped`" - "`undeliverable`" - "`pending`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;
}
