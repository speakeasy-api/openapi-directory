// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateOpsMetadataXAmzTargetEnum
type CreateOpsMetadataXAmzTargetEnum string

const (
	CreateOpsMetadataXAmzTargetEnumAmazonSsmCreateOpsMetadata CreateOpsMetadataXAmzTargetEnum = "AmazonSSM.CreateOpsMetadata"
)

func (e *CreateOpsMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.CreateOpsMetadata":
		*e = CreateOpsMetadataXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOpsMetadataXAmzTargetEnum: %s", s)
	}
}

type CreateOpsMetadataHeaders struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreateOpsMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateOpsMetadataRequest struct {
	Headers CreateOpsMetadataHeaders
	Request shared.CreateOpsMetadataRequest `request:"mediaType=application/json"`
}

type CreateOpsMetadataResponse struct {
	ContentType string
	// Success
	CreateOpsMetadataResult *shared.CreateOpsMetadataResult
	// InternalServerError
	InternalServerError interface{}
	// OpsMetadataAlreadyExistsException
	OpsMetadataAlreadyExistsException interface{}
	// OpsMetadataInvalidArgumentException
	OpsMetadataInvalidArgumentException interface{}
	// OpsMetadataLimitExceededException
	OpsMetadataLimitExceededException interface{}
	// OpsMetadataTooManyUpdatesException
	OpsMetadataTooManyUpdatesException interface{}
	StatusCode                         int
	RawResponse                        *http.Response
}
