"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetDomainDomainnameRequest:
    
    domainname: str = dataclasses.field(metadata={'path_param': { 'field_name': 'domainname', 'style': 'simple', 'explode': False }})
    r"""The domain ID integrated in the `sub` property."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetDomainDomainname200ApplicationJSON:
    r"""OK"""
    
    at_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('@id'), 'exclude': lambda f: f is None }})
    r"""The URL of the domain's JSON representation."""  
    logo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logo'), 'exclude': lambda f: f is None }})
    r"""The URL of the domain logo. The image from this address is displayed on the webpage of the domain."""  
    members: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members'), 'exclude': lambda f: f is None }})
    r"""The tenants included in a domain."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The displayed domain name."""  
    profile: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profile'), 'exclude': lambda f: f is None }})
    r"""The URL of the domain's webpage."""  
    sub: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sub'), 'exclude': lambda f: f is None }})
    r"""The fully qualified DNS name of the domain (e.g. phantauth.net)."""  
    

@dataclasses.dataclass
class GetDomainDomainnameResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_domain_domainname_200_application_json_object: Optional[GetDomainDomainname200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    