// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRulesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type ListRulesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListRulesRequestBodyLockStateEnum - The lock state of the retention rules to list. Only retention rules with the specified lock state are returned.
type ListRulesRequestBodyLockStateEnum string

const (
	ListRulesRequestBodyLockStateEnumLocked        ListRulesRequestBodyLockStateEnum = "locked"
	ListRulesRequestBodyLockStateEnumPendingUnlock ListRulesRequestBodyLockStateEnum = "pending_unlock"
	ListRulesRequestBodyLockStateEnumUnlocked      ListRulesRequestBodyLockStateEnum = "unlocked"
)

func (e *ListRulesRequestBodyLockStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "locked":
		fallthrough
	case "pending_unlock":
		fallthrough
	case "unlocked":
		*e = ListRulesRequestBodyLockStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRulesRequestBodyLockStateEnum: %s", s)
	}
}

// ListRulesRequestBodyResourceTypeEnum - The resource type retained by the retention rule. Only retention rules that retain the specified resource type are listed. Currently, only Amazon EBS snapshots and EBS-backed AMIs are supported. To list retention rules that retain snapshots, specify <code>EBS_SNAPSHOT</code>. To list retention rules that retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>.
type ListRulesRequestBodyResourceTypeEnum string

const (
	ListRulesRequestBodyResourceTypeEnumEbsSnapshot ListRulesRequestBodyResourceTypeEnum = "EBS_SNAPSHOT"
	ListRulesRequestBodyResourceTypeEnumEc2Image    ListRulesRequestBodyResourceTypeEnum = "EC2_IMAGE"
)

func (e *ListRulesRequestBodyResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EBS_SNAPSHOT":
		fallthrough
	case "EC2_IMAGE":
		*e = ListRulesRequestBodyResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRulesRequestBodyResourceTypeEnum: %s", s)
	}
}

type ListRulesRequestBody struct {
	// The lock state of the retention rules to list. Only retention rules with the specified lock state are returned.
	LockState *ListRulesRequestBodyLockStateEnum `json:"LockState,omitempty"`
	// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>NextToken</code> value.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// The token for the next page of results.
	NextToken *string `json:"NextToken,omitempty"`
	// Information about the resource tags used to identify resources that are retained by the retention rule.
	ResourceTags []shared.ResourceTag `json:"ResourceTags,omitempty"`
	// The resource type retained by the retention rule. Only retention rules that retain the specified resource type are listed. Currently, only Amazon EBS snapshots and EBS-backed AMIs are supported. To list retention rules that retain snapshots, specify <code>EBS_SNAPSHOT</code>. To list retention rules that retain EBS-backed AMIs, specify <code>EC2_IMAGE</code>.
	ResourceType ListRulesRequestBodyResourceTypeEnum `json:"ResourceType"`
}

type ListRulesRequest struct {
	QueryParams ListRulesQueryParams
	Headers     ListRulesHeaders
	Request     ListRulesRequestBody `request:"mediaType=application/json"`
}

type ListRulesResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListRulesResponse *shared.ListRulesResponse
	StatusCode        int
	RawResponse       *http.Response
	// ValidationException
	ValidationException interface{}
}
