"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlacementStatistics:
    r"""An object that contains inbox placement data for an email provider."""
    
    dkim_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DkimPercentage'), 'exclude': lambda f: f is None }})  
    inbox_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InboxPercentage'), 'exclude': lambda f: f is None }})  
    missing_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MissingPercentage'), 'exclude': lambda f: f is None }})  
    spam_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpamPercentage'), 'exclude': lambda f: f is None }})  
    spf_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpfPercentage'), 'exclude': lambda f: f is None }})  
    