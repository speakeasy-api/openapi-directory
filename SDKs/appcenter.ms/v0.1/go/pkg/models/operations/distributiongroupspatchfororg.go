// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DistributionGroupsPatchForOrgSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// DistributionGroupsPatchForOrgRequestBody - The attributes to update for the distribution group
type DistributionGroupsPatchForOrgRequestBody struct {
	// Whether the distribution group is public
	IsPublic *bool `json:"is_public,omitempty"`
	// The name of the distribution group
	Name *string `json:"name,omitempty"`
}

type DistributionGroupsPatchForOrgRequest struct {
	// The attributes to update for the distribution group
	RequestBody *DistributionGroupsPatchForOrgRequestBody `request:"mediaType=application/json"`
	// The name of the distribution group
	DistributionGroupName string `pathParam:"style=simple,explode=false,name=distribution_group_name"`
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

type DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DistributionGroupsPatchForOrgDefaultApplicationJSONError struct {
	Code    DistributionGroupsPatchForOrgDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                           `json:"message"`
}

// DistributionGroupsPatchForOrgDefaultApplicationJSON - Error
type DistributionGroupsPatchForOrgDefaultApplicationJSON struct {
	Error DistributionGroupsPatchForOrgDefaultApplicationJSONError `json:"error"`
}

// DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum - The creation origin of this distribution group
type DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum string

const (
	DistributionGroupsPatchForOrg200ApplicationJSONOriginEnumAppcenter DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum = "appcenter"
	DistributionGroupsPatchForOrg200ApplicationJSONOriginEnumHockeyapp DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum = "hockeyapp"
)

func (e *DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum: %s", s)
	}
}

// DistributionGroupsPatchForOrg200ApplicationJSON - Success
type DistributionGroupsPatchForOrg200ApplicationJSON struct {
	// The name of the distribution group
	DisplayName *string `json:"display_name,omitempty"`
	// The unique ID of the distribution group
	ID string `json:"id"`
	// Whether the distribution group is public
	IsPublic bool `json:"is_public"`
	// The name of the distribution group used in URLs
	Name string `json:"name"`
	// The creation origin of this distribution group
	Origin DistributionGroupsPatchForOrg200ApplicationJSONOriginEnum `json:"origin"`
}

type DistributionGroupsPatchForOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DistributionGroupsPatchForOrg200ApplicationJSONObject *DistributionGroupsPatchForOrg200ApplicationJSON
	// Error
	DistributionGroupsPatchForOrgDefaultApplicationJSONObject *DistributionGroupsPatchForOrgDefaultApplicationJSON
}
