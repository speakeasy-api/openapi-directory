// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AssociateResourceErrorReasonEnum string

const (
	AssociateResourceErrorReasonEnumInvalidArn                AssociateResourceErrorReasonEnum = "INVALID_ARN"
	AssociateResourceErrorReasonEnumServiceLimitExceeded      AssociateResourceErrorReasonEnum = "SERVICE_LIMIT_EXCEEDED"
	AssociateResourceErrorReasonEnumIllegalCustomlineitem     AssociateResourceErrorReasonEnum = "ILLEGAL_CUSTOMLINEITEM"
	AssociateResourceErrorReasonEnumInternalServerException   AssociateResourceErrorReasonEnum = "INTERNAL_SERVER_EXCEPTION"
	AssociateResourceErrorReasonEnumInvalidBillingPeriodRange AssociateResourceErrorReasonEnum = "INVALID_BILLING_PERIOD_RANGE"
)

func (e AssociateResourceErrorReasonEnum) ToPointer() *AssociateResourceErrorReasonEnum {
	return &e
}

func (e *AssociateResourceErrorReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVALID_ARN":
		fallthrough
	case "SERVICE_LIMIT_EXCEEDED":
		fallthrough
	case "ILLEGAL_CUSTOMLINEITEM":
		fallthrough
	case "INTERNAL_SERVER_EXCEPTION":
		fallthrough
	case "INVALID_BILLING_PERIOD_RANGE":
		*e = AssociateResourceErrorReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateResourceErrorReasonEnum: %v", v)
	}
}
