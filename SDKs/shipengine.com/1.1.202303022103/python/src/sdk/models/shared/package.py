"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensions as shared_dimensions
from ..shared import label_messages as shared_label_messages
from ..shared import weight as shared_weight
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageMonetaryValue:
    r"""A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance."""
    
    amount: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The monetary amount, in the specified currency."""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageInput:
    r"""A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/)"""
    
    weight: shared_weight.Weight = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight') }})
    r"""The package weight"""  
    content_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_description'), 'exclude': lambda f: f is None }})
    r"""A short description of the package content. Required for shipments moving to, from, and through Mexico."""  
    dimensions: Optional[shared_dimensions.Dimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""The package dimensions"""  
    external_package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('external_package_id'), 'exclude': lambda f: f is None }})
    r"""An external package id."""  
    insured_value: Optional[PackageMonetaryValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insured_value'), 'exclude': lambda f: f is None }})
    r"""The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set."""  
    label_messages: Optional[shared_label_messages.LabelMessages] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_messages'), 'exclude': lambda f: f is None }})  
    package_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_code'), 'exclude': lambda f: f is None }})
    r"""The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type."""  
    package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies this [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageOptionalLink:
    r"""A link to a related resource, or an empty object if there is no resource to link to"""
    
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""The URL of the linked resource, if any"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of resource, or the type of relationship to the parent resource"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageLabelDownload:
    r"""Reference to the various downloadable file formats for the generated label"""
    
    href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href'), 'exclude': lambda f: f is None }})
    r"""The URL of the linked resource, if any"""  
    pdf: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pdf'), 'exclude': lambda f: f is None }})
    r"""The URL for the pdf generated label"""  
    png: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('png'), 'exclude': lambda f: f is None }})
    r"""The URL for the png generated label"""  
    zpl: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zpl'), 'exclude': lambda f: f is None }})
    r"""The URL for the zpl generated label"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Package:
    r"""A package associated with a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/)"""
    
    weight: shared_weight.Weight = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight') }})
    r"""The package weight"""  
    content_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_description'), 'exclude': lambda f: f is None }})
    r"""A short description of the package content. Required for shipments moving to, from, and through Mexico."""  
    dimensions: Optional[shared_dimensions.Dimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""The package dimensions"""  
    external_package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('external_package_id'), 'exclude': lambda f: f is None }})
    r"""An external package id."""  
    form_download: Optional[PackageOptionalLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('form_download'), 'exclude': lambda f: f is None }})
    r"""The form download for any customs that are needed"""  
    insured_value: Optional[PackageMonetaryValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insured_value'), 'exclude': lambda f: f is None }})
    r"""The insured value of the package.  Requires the `insurance_provider` field of the shipment to be set."""  
    label_download: Optional[PackageLabelDownload] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_download'), 'exclude': lambda f: f is None }})
    r"""The label download for the package"""  
    label_messages: Optional[shared_label_messages.LabelMessages] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label_messages'), 'exclude': lambda f: f is None }})  
    package_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_code'), 'exclude': lambda f: f is None }})
    r"""The [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/), such as `thick_envelope`, `small_flat_rate_box`, `large_package`, etc.  The code `package` indicates a custom or unknown package type."""  
    package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies this [package type](https://www.shipengine.com/docs/reference/list-carrier-packages/)"""  
    sequence: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sequence'), 'exclude': lambda f: f is None }})
    r"""Package sequence"""  
    tracking_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tracking_number'), 'exclude': lambda f: f is None }})
    r"""The tracking number for the package.  The format depends on the carrier."""  
    