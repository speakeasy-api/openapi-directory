/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class InitiateMultipartUploadHeaders {
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public InitiateMultipartUploadHeaders withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public InitiateMultipartUploadHeaders withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public InitiateMultipartUploadHeaders withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public InitiateMultipartUploadHeaders withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public InitiateMultipartUploadHeaders withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public InitiateMultipartUploadHeaders withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public InitiateMultipartUploadHeaders withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    /**
     * &lt;p&gt;The archive description that you are uploading in parts.&lt;/p&gt; &lt;p&gt;The part size must be a megabyte (1024 KB) multiplied by a power of 2, for example 1048576 (1 MB), 2097152 (2 MB), 4194304 (4 MB), 8388608 (8 MB), and so on. The minimum allowable part size is 1 MB, and the maximum is 4 GB (4096 MB).&lt;/p&gt;
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-amz-archive-description")
    public String xAmzArchiveDescription;
    public InitiateMultipartUploadHeaders withXAmzArchiveDescription(String xAmzArchiveDescription) {
        this.xAmzArchiveDescription = xAmzArchiveDescription;
        return this;
    }
    
    /**
     * The size of each part except the last, in bytes. The last part can be smaller than this part size.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-amz-part-size")
    public String xAmzPartSize;
    public InitiateMultipartUploadHeaders withXAmzPartSize(String xAmzPartSize) {
        this.xAmzPartSize = xAmzPartSize;
        return this;
    }
    
}
