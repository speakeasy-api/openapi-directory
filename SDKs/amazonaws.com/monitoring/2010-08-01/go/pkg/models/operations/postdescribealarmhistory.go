// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeAlarmHistoryActionEnum
type POSTDescribeAlarmHistoryActionEnum string

const (
	POSTDescribeAlarmHistoryActionEnumDescribeAlarmHistory POSTDescribeAlarmHistoryActionEnum = "DescribeAlarmHistory"
)

func (e *POSTDescribeAlarmHistoryActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeAlarmHistory":
		*e = POSTDescribeAlarmHistoryActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAlarmHistoryActionEnum: %s", s)
	}
}

// POSTDescribeAlarmHistoryVersionEnum
type POSTDescribeAlarmHistoryVersionEnum string

const (
	POSTDescribeAlarmHistoryVersionEnumTwoThousandAndTen0801 POSTDescribeAlarmHistoryVersionEnum = "2010-08-01"
)

func (e *POSTDescribeAlarmHistoryVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-08-01":
		*e = POSTDescribeAlarmHistoryVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAlarmHistoryVersionEnum: %s", s)
	}
}

type POSTDescribeAlarmHistoryQueryParams struct {
	Action POSTDescribeAlarmHistoryActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxRecords *string `queryParam:"style=form,explode=true,name=MaxRecords"`
	// Pagination token
	NextToken *string                             `queryParam:"style=form,explode=true,name=NextToken"`
	Version   POSTDescribeAlarmHistoryVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeAlarmHistoryHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeAlarmHistoryRequest struct {
	QueryParams POSTDescribeAlarmHistoryQueryParams
	Headers     POSTDescribeAlarmHistoryHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeAlarmHistoryResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
