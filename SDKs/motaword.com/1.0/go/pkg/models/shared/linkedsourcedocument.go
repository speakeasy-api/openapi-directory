// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LinkedSourceDocumentSourceEnum - Preferred source names are listed as enum. If you have a custom file type, simply enter that name.
type LinkedSourceDocumentSourceEnum string

const (
	LinkedSourceDocumentSourceEnumDropbox     LinkedSourceDocumentSourceEnum = "dropbox"
	LinkedSourceDocumentSourceEnumGoogledrive LinkedSourceDocumentSourceEnum = "googledrive"
	LinkedSourceDocumentSourceEnumIcloud      LinkedSourceDocumentSourceEnum = "icloud"
)

func (e LinkedSourceDocumentSourceEnum) ToPointer() *LinkedSourceDocumentSourceEnum {
	return &e
}

func (e *LinkedSourceDocumentSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "dropbox":
		fallthrough
	case "googledrive":
		fallthrough
	case "icloud":
		*e = LinkedSourceDocumentSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LinkedSourceDocumentSourceEnum: %v", v)
	}
}

type LinkedSourceDocument struct {
	Name *string `json:"name,omitempty"`
	// file size in bytes. optional.
	Size *int64 `json:"size,omitempty"`
	// Preferred source names are listed as enum. If you have a custom file type, simply enter that name.
	Source *LinkedSourceDocumentSourceEnum `json:"source,omitempty"`
	URL    *string                         `json:"url,omitempty"`
}
