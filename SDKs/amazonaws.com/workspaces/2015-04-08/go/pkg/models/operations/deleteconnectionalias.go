// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteConnectionAliasXAmzTargetEnum
type DeleteConnectionAliasXAmzTargetEnum string

const (
	DeleteConnectionAliasXAmzTargetEnumWorkspacesServiceDeleteConnectionAlias DeleteConnectionAliasXAmzTargetEnum = "WorkspacesService.DeleteConnectionAlias"
)

func (e DeleteConnectionAliasXAmzTargetEnum) ToPointer() *DeleteConnectionAliasXAmzTargetEnum {
	return &e
}

func (e *DeleteConnectionAliasXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.DeleteConnectionAlias":
		*e = DeleteConnectionAliasXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConnectionAliasXAmzTargetEnum: %v", v)
	}
}

type DeleteConnectionAliasRequest struct {
	DeleteConnectionAliasRequest shared.DeleteConnectionAliasRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteConnectionAliasXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteConnectionAliasResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DeleteConnectionAliasResult map[string]interface{}
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceAssociatedException
	ResourceAssociatedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
