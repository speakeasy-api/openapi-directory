/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
 */
export enum RequestRoomActivitiesLogAsJsonXSdsDateFormatEnum {
  Utc = "UTC",
  Local = "LOCAL",
  Offset = "OFFSET",
  Epoch = "EPOCH",
  Leet = "LEET",
}

export class RequestRoomActivitiesLogAsJsonRequest extends SpeakeasyBase {
  /**
   * Authentication token
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Sds-Auth-Token",
  })
  xSdsAuthToken?: string;

  /**
   * Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Sds-Date-Format",
  })
  xSdsDateFormat?: RequestRoomActivitiesLogAsJsonXSdsDateFormatEnum;

  /**
   * Filter events until given date
   *
   * @remarks
   *
   * e.g. `2015-12-31T23:59:00`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_end",
  })
  dateEnd?: string;

  /**
   * Filter events from given date
   *
   * @remarks
   *
   * e.g. `2015-12-31T23:59:00`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_start",
  })
  dateStart?: string;

  /**
   * Range limit.
   *
   * @remarks
   *
   * Maximum 500.
   *
   *  For more results please use paging (`offset` + `limit`).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Range offset
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Room ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=room_id",
  })
  roomId: number;

  /**
   * Sort string
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Operation status:
   *
   * @remarks
   *
   * * `0` - Success
   *
   * * `2` - Error
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: number;

  /**
   * Operation ID
   *
   * @remarks
   *
   * cf. `GET /eventlog/operations`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: number;

  /**
   * User ID
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=user_id",
  })
  userId?: number;
}

export class RequestRoomActivitiesLogAsJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  logEventList?: shared.LogEventList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
