"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class DownloadRequest:
    
    ev_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-access-token', 'style': 'simple', 'explode': False }})
    r"""Access token required to make the API call."""  
    ev_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'ev-api-key', 'style': 'simple', 'explode': False }})
    r"""API Key required to make the API call."""  
    resources: list[str] = dataclasses.field(metadata={'query_param': { 'field_name': 'resources[]', 'style': 'form', 'explode': True }})
    r"""Path of file or folder to be downloaded, starting from the root. Can also be an array of paths."""  
    download_archive_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'downloadArchiveName', 'style': 'form', 'explode': True }})
    r"""When downloading multiple files, this will be used as the name of the zip file that is created."""  
    

@dataclasses.dataclass
class DownloadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    download_200_application_octet_stream_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""Content of the file"""  
    download_200_application_zip_binary_string: Optional[bytes] = dataclasses.field(default=None)
    r"""Content of the file"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    