/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentInSearch } from "./documentinsearch";
import { PagingMeta } from "./pagingmeta";
import { ProjectInSearch } from "./projectinsearch";
import { StringInSearch } from "./stringinsearch";
import { Expose, Type } from "class-transformer";

export class SearchEverywhereResultResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DocumentInSearch })
  @Expose({ name: "documents" })
  @Type(() => DocumentInSearch)
  documents?: DocumentInSearch[];

  @SpeakeasyMetadata({ elemType: ProjectInSearch })
  @Expose({ name: "projects" })
  @Type(() => ProjectInSearch)
  projects?: ProjectInSearch[];

  @SpeakeasyMetadata({ elemType: StringInSearch })
  @Expose({ name: "strings" })
  @Type(() => StringInSearch)
  strings?: StringInSearch[];
}

/**
 * Search result for multiple entities and paging
 */
export class SearchEverywhereResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => PagingMeta)
  meta?: PagingMeta;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  @Type(() => SearchEverywhereResultResult)
  result?: SearchEverywhereResultResult;
}
