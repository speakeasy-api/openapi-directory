// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SelectAggregateResourceConfigXAmzTargetEnum
type SelectAggregateResourceConfigXAmzTargetEnum string

const (
	SelectAggregateResourceConfigXAmzTargetEnumStarlingDoveServiceSelectAggregateResourceConfig SelectAggregateResourceConfigXAmzTargetEnum = "StarlingDoveService.SelectAggregateResourceConfig"
)

func (e *SelectAggregateResourceConfigXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "StarlingDoveService.SelectAggregateResourceConfig":
		*e = SelectAggregateResourceConfigXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SelectAggregateResourceConfigXAmzTargetEnum: %s", s)
	}
}

type SelectAggregateResourceConfigRequest struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	NextToken                            *string                                     `queryParam:"style=form,explode=true,name=NextToken"`
	SelectAggregateResourceConfigRequest shared.SelectAggregateResourceConfigRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           SelectAggregateResourceConfigXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SelectAggregateResourceConfigResponse struct {
	ContentType string
	// InvalidExpressionException
	InvalidExpressionException interface{}
	// InvalidLimitException
	InvalidLimitException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// NoSuchConfigurationAggregatorException
	NoSuchConfigurationAggregatorException interface{}
	// Success
	SelectAggregateResourceConfigResponse *shared.SelectAggregateResourceConfigResponse
	StatusCode                            int
	RawResponse                           *http.Response
}
