// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ScoresByWeekSimulationFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ScoresByWeekSimulationFormatEnum string

const (
	ScoresByWeekSimulationFormatEnumXML  ScoresByWeekSimulationFormatEnum = "XML"
	ScoresByWeekSimulationFormatEnumJSON ScoresByWeekSimulationFormatEnum = "JSON"
)

func (e ScoresByWeekSimulationFormatEnum) ToPointer() *ScoresByWeekSimulationFormatEnum {
	return &e
}

func (e *ScoresByWeekSimulationFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = ScoresByWeekSimulationFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScoresByWeekSimulationFormatEnum: %v", v)
	}
}

type ScoresByWeekSimulationRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ScoresByWeekSimulationFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// The number of plays to progress in this NFL live game simulation. Example entries are <code>0</code>, <code>1</code>, <code>2</code>, <code>3</code>, <code>150</code>, <code>200</code>, etc.
	Numberofplays string `pathParam:"style=simple,explode=false,name=numberofplays"`
}

type ScoresByWeekSimulationResponse struct {
	ContentType string
	Scores      []shared.Score
	StatusCode  int
	RawResponse *http.Response
}
