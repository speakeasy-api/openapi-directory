/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { BeezUPCommonAdditionalProductFiltersValue } from "./beezupcommonadditionalproductfiltersvalue";
import { Expose, Transform } from "class-transformer";

export class ChannelCatalogProductFilters extends SpeakeasyBase {
  /**
   * Describe a filter on a product's column.
   *
   * @remarks
   * The key is the column identifier of your catalog or a custom column.
   *
   */
  @SpeakeasyMetadata({ elemType: BeezUPCommonAdditionalProductFiltersValue })
  @Expose({ name: "additionalProductFilters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, BeezUPCommonAdditionalProductFiltersValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          BeezUPCommonAdditionalProductFiltersValue
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  additionalProductFilters?: Record<
    string,
    BeezUPCommonAdditionalProductFiltersValue
  >;

  /**
   * The catalog product EAN filter (multiple values)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalogEans" })
  catalogEans?: string[];

  /**
   * The catalog product MPN filter (multiple values)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalogMpns" })
  catalogMpns?: string[];

  /**
   * The catalog product SKU filter (multiple values)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalogSkus" })
  catalogSkus?: string[];

  /**
   * The channel product EAN filter (multiple values)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelEans" })
  channelEans?: string[];

  /**
   * The channel product MPN filter (multiple values)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelMpns" })
  channelMpns?: string[];

  /**
   * The channel product SKU filter (multiple values)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelSkus" })
  channelSkus?: string[];

  /**
   * The product title filter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
