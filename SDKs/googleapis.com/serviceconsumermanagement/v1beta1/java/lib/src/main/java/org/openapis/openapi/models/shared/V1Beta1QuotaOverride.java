/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * V1Beta1QuotaOverride - A quota override
 */
public class V1Beta1QuotaOverride {
    /**
     * The resource name of the ancestor that requested the override. For example: "organizations/12345" or "folders/67890". Used by admin overrides only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminOverrideAncestor")
    public String adminOverrideAncestor;
    public V1Beta1QuotaOverride withAdminOverrideAncestor(String adminOverrideAncestor) {
        this.adminOverrideAncestor = adminOverrideAncestor;
        return this;
    }
    
    /**
     *  If this map is nonempty, then this override applies only to specific values for dimensions defined in the limit unit. For example, an override on a limit with the unit 1/{project}/{region} could contain an entry with the key "region" and the value "us-east-1"; the override is only applied to quota consumed in that region. This map has the following restrictions: * Keys that are not defined in the limit's unit are not valid keys. Any string appearing in {brackets} in the unit (besides {project} or {user}) is a defined key. * "project" is not a valid key; the project is already specified in the parent resource name. * "user" is not a valid key; the API does not support quota overrides that apply only to a specific user. * If "region" appears as a key, its value must be a valid Cloud region. * If "zone" appears as a key, its value must be a valid Cloud zone. * If any valid key other than "region" or "zone" appears in the map, then all valid keys other than "region" or "zone" must also appear in the map.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public java.util.Map<String, String> dimensions;
    public V1Beta1QuotaOverride withDimensions(java.util.Map<String, String> dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * The name of the metric to which this override applies. An example name would be: `compute.googleapis.com/cpus`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metric")
    public String metric;
    public V1Beta1QuotaOverride withMetric(String metric) {
        this.metric = metric;
        return this;
    }
    
    /**
     * The resource name of the producer override. An example name would be: `services/compute.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/producerOverrides/4a3f2c1d`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public V1Beta1QuotaOverride withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The overriding quota limit value. Can be any nonnegative integer, or -1 (unlimited quota).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overrideValue")
    public String overrideValue;
    public V1Beta1QuotaOverride withOverrideValue(String overrideValue) {
        this.overrideValue = overrideValue;
        return this;
    }
    
    /**
     * The limit unit of the limit to which this override applies. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public String unit;
    public V1Beta1QuotaOverride withUnit(String unit) {
        this.unit = unit;
        return this;
    }
    
}
