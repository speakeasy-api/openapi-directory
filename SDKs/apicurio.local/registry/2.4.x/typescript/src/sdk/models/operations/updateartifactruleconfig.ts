/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The unique name/type of a rule.
 */
export enum UpdateArtifactRuleConfigRuleEnum {
  Validity = "VALIDITY",
  Compatibility = "COMPATIBILITY",
}

export class UpdateArtifactRuleConfigRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  rule1: shared.Rule;

  /**
   * The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=artifactId",
  })
  artifactId: string;

  /**
   * The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=groupId",
  })
  groupId: string;

  /**
   * The unique name/type of a rule.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=rule",
  })
  rulePathParameter: UpdateArtifactRuleConfigRuleEnum;
}

export class UpdateArtifactRuleConfigResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Common response for all operations that can return a `404` error.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Rule configuration was updated.
   */
  @SpeakeasyMetadata()
  rule?: shared.Rule;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
