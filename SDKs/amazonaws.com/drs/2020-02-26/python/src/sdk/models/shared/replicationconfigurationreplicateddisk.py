"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import replicationconfigurationreplicateddiskstagingdisktype_enum as shared_replicationconfigurationreplicateddiskstagingdisktype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplicationConfigurationReplicatedDisk:
    r"""The configuration of a disk of the Source Server to be replicated."""
    
    device_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceName'), 'exclude': lambda f: f is None }})  
    iops: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iops'), 'exclude': lambda f: f is None }})  
    is_boot_disk: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isBootDisk'), 'exclude': lambda f: f is None }})  
    optimized_staging_disk_type: Optional[shared_replicationconfigurationreplicateddiskstagingdisktype_enum.ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optimizedStagingDiskType'), 'exclude': lambda f: f is None }})  
    staging_disk_type: Optional[shared_replicationconfigurationreplicateddiskstagingdisktype_enum.ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stagingDiskType'), 'exclude': lambda f: f is None }})  
    throughput: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('throughput'), 'exclude': lambda f: f is None }})  
    