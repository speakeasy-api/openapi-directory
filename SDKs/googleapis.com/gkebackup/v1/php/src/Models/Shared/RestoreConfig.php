<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RestoreConfig - Configuration of a restore. Next id: 12
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RestoreConfig
{
    /**
     * Restore all namespaced resources in the Backup if set to "True". Specifying this field to "False" is an error.
     * 
     * @var ?bool $allNamespaces
     */
	#[\JMS\Serializer\Annotation\SerializedName('allNamespaces')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allNamespaces = null;
    
    /**
     * Defines the behavior for handling the situation where cluster-scoped resources being restored already exist in the target cluster. This MUST be set to a value other than CLUSTER_RESOURCE_CONFLICT_POLICY_UNSPECIFIED if cluster_resource_restore_scope is not empty.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RestoreConfigClusterResourceConflictPolicyEnum $clusterResourceConflictPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('clusterResourceConflictPolicy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RestoreConfigClusterResourceConflictPolicyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RestoreConfigClusterResourceConflictPolicyEnum $clusterResourceConflictPolicy = null;
    
    /**
     * Defines the scope of cluster-scoped resources to restore. Some group kinds are not reasonable choices for a restore, and will cause an error if selected here. Any scope selection that would restore "all valid" resources automatically excludes these group kinds. - gkebackup.gke.io/BackupJob - gkebackup.gke.io/RestoreJob - metrics.k8s.io/NodeMetrics - migration.k8s.io/StorageState - migration.k8s.io/StorageVersionMigration - Node - snapshot.storage.k8s.io/VolumeSnapshotContent - storage.k8s.io/CSINode Some group kinds are driven by restore configuration elsewhere, and will cause an error if selected here. - Namespace - PersistentVolume
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClusterResourceRestoreScope $clusterResourceRestoreScope
     */
	#[\JMS\Serializer\Annotation\SerializedName('clusterResourceRestoreScope')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ClusterResourceRestoreScope')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClusterResourceRestoreScope $clusterResourceRestoreScope = null;
    
    /**
     * Defines the behavior for handling the situation where sets of namespaced resources being restored already exist in the target cluster. This MUST be set to a value other than NAMESPACED_RESOURCE_RESTORE_MODE_UNSPECIFIED.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RestoreConfigNamespacedResourceRestoreModeEnum $namespacedResourceRestoreMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('namespacedResourceRestoreMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RestoreConfigNamespacedResourceRestoreModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RestoreConfigNamespacedResourceRestoreModeEnum $namespacedResourceRestoreMode = null;
    
    /**
     * A list of namespaced Kubernetes resources.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NamespacedNames $selectedApplications
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedApplications')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NamespacedNames')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NamespacedNames $selectedApplications = null;
    
    /**
     * A list of Kubernetes Namespaces
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Namespaces $selectedNamespaces
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedNamespaces')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Namespaces')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Namespaces $selectedNamespaces = null;
    
    /**
     * A list of transformation rules to be applied against Kubernetes resources as they are selected for restoration from a Backup. Rules are executed in order defined - this order matters, as changes made by a rule may impact the filtering logic of subsequent rules. An empty list means no substitution will occur.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SubstitutionRule> $substitutionRules
     */
	#[\JMS\Serializer\Annotation\SerializedName('substitutionRules')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SubstitutionRule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $substitutionRules = null;
    
    /**
     * Specifies the mechanism to be used to restore volume data. Default: VOLUME_DATA_RESTORE_POLICY_UNSPECIFIED (will be treated as NO_VOLUME_DATA_RESTORATION).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RestoreConfigVolumeDataRestorePolicyEnum $volumeDataRestorePolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('volumeDataRestorePolicy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RestoreConfigVolumeDataRestorePolicyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RestoreConfigVolumeDataRestorePolicyEnum $volumeDataRestorePolicy = null;
    
	public function __construct()
	{
		$this->allNamespaces = null;
		$this->clusterResourceConflictPolicy = null;
		$this->clusterResourceRestoreScope = null;
		$this->namespacedResourceRestoreMode = null;
		$this->selectedApplications = null;
		$this->selectedNamespaces = null;
		$this->substitutionRules = null;
		$this->volumeDataRestorePolicy = null;
	}
}
