// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// SongListAPIGetFeaturedListNamesFeaturedCategoryEnum - Filter by a specific featured category. If empty, all categories are returned.
type SongListAPIGetFeaturedListNamesFeaturedCategoryEnum string

const (
	SongListAPIGetFeaturedListNamesFeaturedCategoryEnumNothing         SongListAPIGetFeaturedListNamesFeaturedCategoryEnum = "Nothing"
	SongListAPIGetFeaturedListNamesFeaturedCategoryEnumConcerts        SongListAPIGetFeaturedListNamesFeaturedCategoryEnum = "Concerts"
	SongListAPIGetFeaturedListNamesFeaturedCategoryEnumVocaloidRanking SongListAPIGetFeaturedListNamesFeaturedCategoryEnum = "VocaloidRanking"
	SongListAPIGetFeaturedListNamesFeaturedCategoryEnumPools           SongListAPIGetFeaturedListNamesFeaturedCategoryEnum = "Pools"
	SongListAPIGetFeaturedListNamesFeaturedCategoryEnumOther           SongListAPIGetFeaturedListNamesFeaturedCategoryEnum = "Other"
)

func (e *SongListAPIGetFeaturedListNamesFeaturedCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Concerts":
		fallthrough
	case "VocaloidRanking":
		fallthrough
	case "Pools":
		fallthrough
	case "Other":
		*e = SongListAPIGetFeaturedListNamesFeaturedCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListNamesFeaturedCategoryEnum: %s", s)
	}
}

// SongListAPIGetFeaturedListNamesNameMatchModeEnum - Name match mode. Words is treated the same as Partial.
type SongListAPIGetFeaturedListNamesNameMatchModeEnum string

const (
	SongListAPIGetFeaturedListNamesNameMatchModeEnumAuto       SongListAPIGetFeaturedListNamesNameMatchModeEnum = "Auto"
	SongListAPIGetFeaturedListNamesNameMatchModeEnumPartial    SongListAPIGetFeaturedListNamesNameMatchModeEnum = "Partial"
	SongListAPIGetFeaturedListNamesNameMatchModeEnumStartsWith SongListAPIGetFeaturedListNamesNameMatchModeEnum = "StartsWith"
	SongListAPIGetFeaturedListNamesNameMatchModeEnumExact      SongListAPIGetFeaturedListNamesNameMatchModeEnum = "Exact"
	SongListAPIGetFeaturedListNamesNameMatchModeEnumWords      SongListAPIGetFeaturedListNamesNameMatchModeEnum = "Words"
)

func (e *SongListAPIGetFeaturedListNamesNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = SongListAPIGetFeaturedListNamesNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListAPIGetFeaturedListNamesNameMatchModeEnum: %s", s)
	}
}

type SongListAPIGetFeaturedListNamesQueryParams struct {
	// Filter by a specific featured category. If empty, all categories are returned.
	FeaturedCategory *SongListAPIGetFeaturedListNamesFeaturedCategoryEnum `queryParam:"style=form,explode=true,name=featuredCategory"`
	// Maximum number of results.
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Name match mode. Words is treated the same as Partial.
	NameMatchMode *SongListAPIGetFeaturedListNamesNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Text query.
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type SongListAPIGetFeaturedListNamesRequest struct {
	QueryParams SongListAPIGetFeaturedListNamesQueryParams
}

type SongListAPIGetFeaturedListNamesResponse struct {
	Body        []byte
	ContentType string
	// OK
	SongListAPIGetFeaturedListNames200ApplicationJSONStrings []string
	// OK
	SongListAPIGetFeaturedListNames200TextJSONStrings []string
	StatusCode                                        int
	RawResponse                                       *http.Response
	// OK
	SongListAPIGetFeaturedListNames200ApplicationJsonpStrings []string
}
