// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisablePolicyTypeXAmzTargetEnum
type DisablePolicyTypeXAmzTargetEnum string

const (
	DisablePolicyTypeXAmzTargetEnumAwsOrganizationsV20161128DisablePolicyType DisablePolicyTypeXAmzTargetEnum = "AWSOrganizationsV20161128.DisablePolicyType"
)

func (e *DisablePolicyTypeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSOrganizationsV20161128.DisablePolicyType":
		*e = DisablePolicyTypeXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisablePolicyTypeXAmzTargetEnum: %s", s)
	}
}

type DisablePolicyTypeRequest struct {
	DisablePolicyTypeRequest shared.DisablePolicyTypeRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               DisablePolicyTypeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisablePolicyTypeResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	// ConstraintViolationException
	ConstraintViolationException interface{}
	ContentType                  string
	// Success
	DisablePolicyTypeResponse *shared.DisablePolicyTypeResponse
	// InvalidInputException
	InvalidInputException interface{}
	// PolicyChangesInProgressException
	PolicyChangesInProgressException interface{}
	// PolicyTypeNotEnabledException
	PolicyTypeNotEnabledException interface{}
	// RootNotFoundException
	RootNotFoundException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ServiceException
	ServiceException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnsupportedAPIEndpointException
	UnsupportedAPIEndpointException interface{}
}
