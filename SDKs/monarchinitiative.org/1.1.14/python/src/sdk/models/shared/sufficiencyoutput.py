"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SufficiencyOutput:
    r"""Success"""
    
    categorical_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categorical_score'), 'exclude': lambda f: f is None }})
    r"""categorical score"""  
    scaled_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scaled_score'), 'exclude': lambda f: f is None }})
    r"""scaled score"""  
    simple_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('simple_score'), 'exclude': lambda f: f is None }})
    r"""simple score"""  
    