/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionsList } from "./connectionslist";
import { SessionCommand } from "./sessioncommand";
import { WorkerTypeEnum } from "./workertypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Request to create a new session.
 */
export class CreateSessionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Command" })
  @Type(() => SessionCommand)
  command: SessionCommand;

  @SpeakeasyMetadata()
  @Expose({ name: "Connections" })
  @Type(() => ConnectionsList)
  connections?: ConnectionsList;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultArguments" })
  defaultArguments?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GlueVersion" })
  glueVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdleTimeout" })
  idleTimeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfWorkers" })
  numberOfWorkers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestOrigin" })
  requestOrigin?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Timeout" })
  timeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerType" })
  workerType?: WorkerTypeEnum;
}
