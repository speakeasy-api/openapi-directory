/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const FetchConferenceServerList = [
  "https://insights.twilio.com",
] as const;

export class FetchConferenceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class FetchConferenceRequest extends SpeakeasyBase {
  /**
   * The unique SID identifier of the Conference.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ConferenceSid",
  })
  conferenceSid: string;
}

export class FetchConferenceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  insightsV1Conference?: shared.InsightsV1Conference;
}
