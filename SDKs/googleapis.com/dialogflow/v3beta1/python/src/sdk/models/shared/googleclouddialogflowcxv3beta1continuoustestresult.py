"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowCxV3beta1ContinuousTestResultResultEnum(str, Enum):
    r"""The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not."""
    AGGREGATED_TEST_RESULT_UNSPECIFIED = 'AGGREGATED_TEST_RESULT_UNSPECIFIED'
    PASSED = 'PASSED'
    FAILED = 'FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3beta1ContinuousTestResult:
    r"""Represents a result from running a test case in an agent environment."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`."""  
    result: Optional[GoogleCloudDialogflowCxV3beta1ContinuousTestResultResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not."""  
    run_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('runTime'), 'exclude': lambda f: f is None }})
    r"""Time when the continuous testing run starts."""  
    test_case_results: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testCaseResults'), 'exclude': lambda f: f is None }})
    r"""A list of individual test case results names in this continuous test run."""  
    