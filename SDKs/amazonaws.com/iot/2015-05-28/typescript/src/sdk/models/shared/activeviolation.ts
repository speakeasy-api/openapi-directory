/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Behavior } from "./behavior";
import { MetricValue } from "./metricvalue";
import { VerificationStateEnum } from "./verificationstateenum";
import { ViolationEventAdditionalInfo } from "./violationeventadditionalinfo";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an active Device Defender security profile behavior violation.
 */
export class ActiveViolation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "behavior" })
  @Type(() => Behavior)
  behavior?: Behavior;

  @SpeakeasyMetadata()
  @Expose({ name: "lastViolationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastViolationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastViolationValue" })
  @Type(() => MetricValue)
  lastViolationValue?: MetricValue;

  @SpeakeasyMetadata()
  @Expose({ name: "securityProfileName" })
  securityProfileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thingName" })
  thingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "verificationState" })
  verificationState?: VerificationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "verificationStateDescription" })
  verificationStateDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "violationEventAdditionalInfo" })
  @Type(() => ViolationEventAdditionalInfo)
  violationEventAdditionalInfo?: ViolationEventAdditionalInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "violationId" })
  violationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "violationStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  violationStartTime?: Date;
}
