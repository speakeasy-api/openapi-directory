// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDeleteSigningCertificateActionEnum
type POSTDeleteSigningCertificateActionEnum string

const (
	POSTDeleteSigningCertificateActionEnumDeleteSigningCertificate POSTDeleteSigningCertificateActionEnum = "DeleteSigningCertificate"
)

func (e POSTDeleteSigningCertificateActionEnum) ToPointer() *POSTDeleteSigningCertificateActionEnum {
	return &e
}

func (e *POSTDeleteSigningCertificateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteSigningCertificate":
		*e = POSTDeleteSigningCertificateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteSigningCertificateActionEnum: %v", v)
	}
}

// POSTDeleteSigningCertificateVersionEnum
type POSTDeleteSigningCertificateVersionEnum string

const (
	POSTDeleteSigningCertificateVersionEnumTwoThousandAndTen0508 POSTDeleteSigningCertificateVersionEnum = "2010-05-08"
)

func (e POSTDeleteSigningCertificateVersionEnum) ToPointer() *POSTDeleteSigningCertificateVersionEnum {
	return &e
}

func (e *POSTDeleteSigningCertificateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTDeleteSigningCertificateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDeleteSigningCertificateVersionEnum: %v", v)
	}
}

type POSTDeleteSigningCertificateRequest struct {
	Action            POSTDeleteSigningCertificateActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                  `request:"mediaType=text/xml"`
	Version           POSTDeleteSigningCertificateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDeleteSigningCertificateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
