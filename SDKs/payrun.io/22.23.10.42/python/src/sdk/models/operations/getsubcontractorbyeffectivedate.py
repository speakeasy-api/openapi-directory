"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errormodel as shared_errormodel
from ..shared import subcontractor as shared_subcontractor
from datetime import date
from typing import Optional


@dataclasses.dataclass
class GetSubContractorByEffectiveDateRequest:
    
    api_version: str = dataclasses.field(metadata={'header': { 'field_name': 'Api-Version', 'style': 'simple', 'explode': False }})
    r"""The version of the api to target. Omit or set as &apos;default&apos; to target the current api version."""  
    authorization: str = dataclasses.field(metadata={'header': { 'field_name': 'Authorization', 'style': 'simple', 'explode': False }})
    r"""The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete."""  
    effective_date: date = dataclasses.field(metadata={'path_param': { 'field_name': 'EffectiveDate', 'style': 'simple', 'explode': False }})
    r"""The effective date to be applied. E.g 2016-04-06"""  
    employer_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'EmployerId', 'style': 'simple', 'explode': False }})
    r"""The employers' unique identifier. E.g ER001"""  
    sub_contractor_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'SubContractorId', 'style': 'simple', 'explode': False }})
    r"""The sub contractors' unique identifier. E.g SUB001"""  
    

@dataclasses.dataclass
class GetSubContractorByEffectiveDateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_model: Optional[shared_errormodel.ErrorModel] = dataclasses.field(default=None)
    r"""Bad Request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sub_contractor: Optional[shared_subcontractor.SubContractor] = dataclasses.field(default=None)
    r"""The sub contractor object."""  
    