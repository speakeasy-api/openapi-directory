/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListEmployeeRolesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListEmployeeRolesRequest extends SpeakeasyBase {
  /**
   * A pagination cursor to retrieve the next set of results for your
   *
   * @remarks
   * original query to the endpoint.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=batch_token",
  })
  batchToken?: string;

  /**
   * The maximum integer number of employee entities to return in a single response. Default 100, maximum 200.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The order in which employees are listed in the response, based on their created_at field.Default value: ASC
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: string;
}

export class ListEmployeeRolesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.V1EmployeeRole })
  v1EmployeeRoles?: shared.V1EmployeeRole[];
}
