/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Custom attribute values that are either filterable or non-filterable.
 */
export class CustomAttribute extends SpeakeasyBase {
  /**
   * Optional. If the `filterable` flag is true, the custom field values may be used for custom attribute filters JobQuery.custom_attribute_filter. If false, these values may not be used for custom attribute filters. Default is false.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterable" })
  filterable?: boolean;

  /**
   * Optional but exactly one of string_values or long_values must be specified. This field is used to perform number range search. (`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. Currently at most 1 long_values is supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longValues" })
  longValues?: string[];

  /**
   * Optional but exactly one of string_values or long_values must be specified. This field is used to perform a string match (`CASE_SENSITIVE_MATCH` or `CASE_INSENSITIVE_MATCH`) search. For filterable `string_value`s, a maximum total number of 200 values is allowed, with each `string_value` has a byte size of no more than 500B. For unfilterable `string_values`, the maximum total byte size of unfilterable `string_values` is 50KB. Empty string is not allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValues" })
  stringValues?: string[];
}
