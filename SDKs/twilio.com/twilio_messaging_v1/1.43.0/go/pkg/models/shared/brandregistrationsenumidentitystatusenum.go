// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BrandRegistrationsEnumIdentityStatusEnum string

const (
	BrandRegistrationsEnumIdentityStatusEnumSelfDeclared   BrandRegistrationsEnumIdentityStatusEnum = "SELF_DECLARED"
	BrandRegistrationsEnumIdentityStatusEnumUnverified     BrandRegistrationsEnumIdentityStatusEnum = "UNVERIFIED"
	BrandRegistrationsEnumIdentityStatusEnumVerified       BrandRegistrationsEnumIdentityStatusEnum = "VERIFIED"
	BrandRegistrationsEnumIdentityStatusEnumVettedVerified BrandRegistrationsEnumIdentityStatusEnum = "VETTED_VERIFIED"
)

func (e BrandRegistrationsEnumIdentityStatusEnum) ToPointer() *BrandRegistrationsEnumIdentityStatusEnum {
	return &e
}

func (e *BrandRegistrationsEnumIdentityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SELF_DECLARED":
		fallthrough
	case "UNVERIFIED":
		fallthrough
	case "VERIFIED":
		fallthrough
	case "VETTED_VERIFIED":
		*e = BrandRegistrationsEnumIdentityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BrandRegistrationsEnumIdentityStatusEnum: %v", v)
	}
}
