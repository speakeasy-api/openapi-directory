<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StorageDescriptor - Describes the physical storage of table data.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StorageDescriptor
{
    /**
     * $additionalLocations
     * 
     * @var ?array<string> $additionalLocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('AdditionalLocations')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalLocations = null;
    
    /**
     * $bucketColumns
     * 
     * @var ?array<string> $bucketColumns
     */
	#[\JMS\Serializer\Annotation\SerializedName('BucketColumns')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bucketColumns = null;
    
    /**
     * $columns
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Column> $columns
     */
	#[\JMS\Serializer\Annotation\SerializedName('Columns')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Column>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $columns = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Compressed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $compressed = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InputFormat')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inputFormat = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NumberOfBuckets')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfBuckets = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OutputFormat')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $outputFormat = null;
    
    /**
     * $parameters
     * 
     * @var ?array<string, string> $parameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('Parameters')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameters = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SchemaReference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SchemaReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SchemaReference $schemaReference = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SerdeInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SerDeInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SerDeInfo $serdeInfo = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('SkewedInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SkewedInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SkewedInfo $skewedInfo = null;
    
    /**
     * $sortColumns
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Order> $sortColumns
     */
	#[\JMS\Serializer\Annotation\SerializedName('SortColumns')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Order>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sortColumns = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StoredAsSubDirectories')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $storedAsSubDirectories = null;
    
	public function __construct()
	{
		$this->additionalLocations = null;
		$this->bucketColumns = null;
		$this->columns = null;
		$this->compressed = null;
		$this->inputFormat = null;
		$this->location = null;
		$this->numberOfBuckets = null;
		$this->outputFormat = null;
		$this->parameters = null;
		$this->schemaReference = null;
		$this->serdeInfo = null;
		$this->skewedInfo = null;
		$this->sortColumns = null;
		$this->storedAsSubDirectories = null;
	}
}
