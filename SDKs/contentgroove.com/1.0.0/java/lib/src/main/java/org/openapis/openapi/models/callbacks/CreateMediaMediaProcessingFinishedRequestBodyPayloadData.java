/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.callbacks;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateMediaMediaProcessingFinishedRequestBodyPayloadData {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public CreateMediaMediaProcessingFinishedRequestBodyPayloadDataAttributes attributes;

    public CreateMediaMediaProcessingFinishedRequestBodyPayloadData withAttributes(CreateMediaMediaProcessingFinishedRequestBodyPayloadDataAttributes attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CreateMediaMediaProcessingFinishedRequestBodyPayloadData withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationships")
    public CreateMediaMediaProcessingFinishedRequestBodyPayloadDataRelationships relationships;

    public CreateMediaMediaProcessingFinishedRequestBodyPayloadData withRelationships(CreateMediaMediaProcessingFinishedRequestBodyPayloadDataRelationships relationships) {
        this.relationships = relationships;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcription")
    public CreateMediaMediaProcessingFinishedRequestBodyPayloadDataTranscription transcription;

    public CreateMediaMediaProcessingFinishedRequestBodyPayloadData withTranscription(CreateMediaMediaProcessingFinishedRequestBodyPayloadDataTranscription transcription) {
        this.transcription = transcription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public CreateMediaMediaProcessingFinishedRequestBodyPayloadData withType(String type) {
        this.type = type;
        return this;
    }
    
    public CreateMediaMediaProcessingFinishedRequestBodyPayloadData(){}
}
