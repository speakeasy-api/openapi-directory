// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteProductModuleSecurity struct {
	BasicAuth shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
}

type DeleteProductModulePathParams struct {
	// Unique number (across all Products of a Vendor) that identifies the Product Module.
	ProductModuleNumber string `pathParam:"style=simple,explode=false,name=productModuleNumber"`
}

type DeleteProductModuleQueryParams struct {
	// Force object deletion and all descendants.
	ForceCascade *bool `queryParam:"style=form,explode=true,name=forceCascade"`
}

type DeleteProductModuleRequest struct {
	PathParams  DeleteProductModulePathParams
	QueryParams DeleteProductModuleQueryParams
	Security    DeleteProductModuleSecurity
}

type DeleteProductModuleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful request
	Netlicensing *shared.Netlicensing
}
