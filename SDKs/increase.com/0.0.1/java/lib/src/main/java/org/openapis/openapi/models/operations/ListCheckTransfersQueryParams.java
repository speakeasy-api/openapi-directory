/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListCheckTransfersQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=account_id")
    public String accountId;
    public ListCheckTransfersQueryParams withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=created_at.after")
    public OffsetDateTime createdAtAfter;
    public ListCheckTransfersQueryParams withCreatedAtAfter(OffsetDateTime createdAtAfter) {
        this.createdAtAfter = createdAtAfter;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=created_at.before")
    public OffsetDateTime createdAtBefore;
    public ListCheckTransfersQueryParams withCreatedAtBefore(OffsetDateTime createdAtBefore) {
        this.createdAtBefore = createdAtBefore;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=created_at.on_or_after")
    public OffsetDateTime createdAtOnOrAfter;
    public ListCheckTransfersQueryParams withCreatedAtOnOrAfter(OffsetDateTime createdAtOnOrAfter) {
        this.createdAtOnOrAfter = createdAtOnOrAfter;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=created_at.on_or_before")
    public OffsetDateTime createdAtOnOrBefore;
    public ListCheckTransfersQueryParams withCreatedAtOnOrBefore(OffsetDateTime createdAtOnOrBefore) {
        this.createdAtOnOrBefore = createdAtOnOrBefore;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;
    public ListCheckTransfersQueryParams withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public ListCheckTransfersQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
}
