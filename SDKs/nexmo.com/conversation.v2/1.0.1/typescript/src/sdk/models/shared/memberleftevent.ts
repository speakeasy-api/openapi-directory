/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Member } from "./member";
import { Expose, Type } from "class-transformer";

export class MemberLeftEventLinksSelf extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class MemberLeftEventLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => MemberLeftEventLinksSelf)
  self?: MemberLeftEventLinksSelf;
}

/**
 * Member Left
 */
export class MemberLeftEvent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => MemberLeftEventLinks)
  links?: MemberLeftEventLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  @Type(() => Member)
  body?: Member;

  /**
   * The member ID of the sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * The ID of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The time that the event happened
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * The event type (`member:left`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
