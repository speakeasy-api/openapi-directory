"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputfilelocation as shared_inputfilelocation
from ..shared import overwriteexisting_enum as shared_overwriteexisting_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CopyStepDetails:
    r"""Each step type has its own <code>StepDetails</code> structure."""
    
    destination_file_location: Optional[shared_inputfilelocation.InputFileLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DestinationFileLocation'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    overwrite_existing: Optional[shared_overwriteexisting_enum.OverwriteExistingEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OverwriteExisting'), 'exclude': lambda f: f is None }})  
    source_file_location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceFileLocation'), 'exclude': lambda f: f is None }})  
    