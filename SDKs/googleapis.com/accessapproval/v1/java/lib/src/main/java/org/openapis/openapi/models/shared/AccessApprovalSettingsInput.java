/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccessApprovalSettingsInput - Settings on a Project/Folder/Organization related to Access Approval.
 */
public class AccessApprovalSettingsInput {
    /**
     * The asymmetric crypto key version to use for signing approval requests. Empty active_key_version indicates that a Google-managed key should be used for signing. This property will be ignored if set by an ancestor of this resource, and new non-empty values may not be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeKeyVersion")
    public String activeKeyVersion;

    public AccessApprovalSettingsInput withActiveKeyVersion(String activeKeyVersion) {
        this.activeKeyVersion = activeKeyVersion;
        return this;
    }
    
    /**
     * A list of Google Cloud Services for which the given resource has Access Approval enrolled. Access requests for the resource given by name against any of these services contained here will be required to have explicit approval. If name refers to an organization, enrollment can be done for individual services. If name refers to a folder or project, enrollment can only be done on an all or nothing basis. If a cloud_product is repeated in this list, the first entry will be honored and all following entries will be discarded. A maximum of 10 enrolled services will be enforced, to be expanded as the set of supported services is expanded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enrolledServices")
    public EnrolledService[] enrolledServices;

    public AccessApprovalSettingsInput withEnrolledServices(EnrolledService[] enrolledServices) {
        this.enrolledServices = enrolledServices;
        return this;
    }
    
    /**
     * The resource name of the settings. Format is one of: * "projects/{project}/accessApprovalSettings" * "folders/{folder}/accessApprovalSettings" * "organizations/{organization}/accessApprovalSettings"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AccessApprovalSettingsInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A list of email addresses to which notifications relating to approval requests should be sent. Notifications relating to a resource will be sent to all emails in the settings of ancestor resources of that resource. A maximum of 50 email addresses are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notificationEmails")
    public String[] notificationEmails;

    public AccessApprovalSettingsInput withNotificationEmails(String[] notificationEmails) {
        this.notificationEmails = notificationEmails;
        return this;
    }
    
    /**
     * This preference is communicated to Google personnel when sending an approval request but can be overridden if necessary.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferNoBroadApprovalRequests")
    public Boolean preferNoBroadApprovalRequests;

    public AccessApprovalSettingsInput withPreferNoBroadApprovalRequests(Boolean preferNoBroadApprovalRequests) {
        this.preferNoBroadApprovalRequests = preferNoBroadApprovalRequests;
        return this;
    }
    
    /**
     * This preference is shared with Google personnel, but can be overridden if said personnel deems necessary. The approver ultimately can set the expiration at approval time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredRequestExpirationDays")
    public Integer preferredRequestExpirationDays;

    public AccessApprovalSettingsInput withPreferredRequestExpirationDays(Integer preferredRequestExpirationDays) {
        this.preferredRequestExpirationDays = preferredRequestExpirationDays;
        return this;
    }
    
    public AccessApprovalSettingsInput(){}
}
