// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LogsPolicyDestinationEnum - Where logs should be saved.
type LogsPolicyDestinationEnum string

const (
	LogsPolicyDestinationEnumDestinationUnspecified LogsPolicyDestinationEnum = "DESTINATION_UNSPECIFIED"
	LogsPolicyDestinationEnumCloudLogging           LogsPolicyDestinationEnum = "CLOUD_LOGGING"
	LogsPolicyDestinationEnumPath                   LogsPolicyDestinationEnum = "PATH"
)

func (e LogsPolicyDestinationEnum) ToPointer() *LogsPolicyDestinationEnum {
	return &e
}

func (e *LogsPolicyDestinationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DESTINATION_UNSPECIFIED":
		fallthrough
	case "CLOUD_LOGGING":
		fallthrough
	case "PATH":
		*e = LogsPolicyDestinationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LogsPolicyDestinationEnum: %v", v)
	}
}

// LogsPolicy - LogsPolicy describes how outputs from a Job's Tasks (stdout/stderr) will be preserved.
type LogsPolicy struct {
	// Where logs should be saved.
	Destination *LogsPolicyDestinationEnum `json:"destination,omitempty"`
	// The path to which logs are saved when the destination = PATH. This can be a local file path on the VM, or under the mount point of a Persistent Disk or Filestore, or a Cloud Storage path.
	LogsPath *string `json:"logsPath,omitempty"`
}
