"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import page as shared_page
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SlideProperties:
    r"""The properties of Page that are only relevant for pages with page_type SLIDE."""
    
    is_skipped: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSkipped'), 'exclude': lambda f: f is None }})
    r"""Whether the slide is skipped in the presentation mode. Defaults to false."""  
    layout_object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layoutObjectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the layout that this slide is based on. This property is read-only."""  
    master_object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('masterObjectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the master that this slide is based on. This property is read-only."""  
    notes_page: Optional[shared_page.Page] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notesPage'), 'exclude': lambda f: f is None }})
    r"""A page in a presentation."""  
    