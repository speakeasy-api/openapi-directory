// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetPortfolioVideosPathParams struct {
	// The ID of the portfolio.
	PortfolioID float64 `pathParam:"style=simple,explode=false,name=portfolio_id"`
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

// GetPortfolioVideosFilterEnum - The attribute by which to filter the results.
type GetPortfolioVideosFilterEnum string

const (
	GetPortfolioVideosFilterEnumEmbeddable GetPortfolioVideosFilterEnum = "embeddable"
)

func (e *GetPortfolioVideosFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "embeddable":
		*e = GetPortfolioVideosFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPortfolioVideosFilterEnum: %s", s)
	}
}

// GetPortfolioVideosSortEnum - The way to sort the results.
//
// Option descriptions:
//   - `default` - This will sort to the default sort set on the portfolio.
type GetPortfolioVideosSortEnum string

const (
	GetPortfolioVideosSortEnumAlphabetical GetPortfolioVideosSortEnum = "alphabetical"
	GetPortfolioVideosSortEnumComments     GetPortfolioVideosSortEnum = "comments"
	GetPortfolioVideosSortEnumDate         GetPortfolioVideosSortEnum = "date"
	GetPortfolioVideosSortEnumDefault      GetPortfolioVideosSortEnum = "default"
	GetPortfolioVideosSortEnumLikes        GetPortfolioVideosSortEnum = "likes"
	GetPortfolioVideosSortEnumManual       GetPortfolioVideosSortEnum = "manual"
	GetPortfolioVideosSortEnumPlays        GetPortfolioVideosSortEnum = "plays"
)

func (e *GetPortfolioVideosSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "default":
		fallthrough
	case "likes":
		fallthrough
	case "manual":
		fallthrough
	case "plays":
		*e = GetPortfolioVideosSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPortfolioVideosSortEnum: %s", s)
	}
}

type GetPortfolioVideosQueryParams struct {
	// The page that contains the video URI.
	ContainingURI *string `queryParam:"style=form,explode=true,name=containing_uri"`
	// The attribute by which to filter the results.
	Filter *GetPortfolioVideosFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The way to sort the results.
	//
	// Option descriptions:
	//  * `default` - This will sort to the default sort set on the portfolio.
	//
	Sort *GetPortfolioVideosSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetPortfolioVideosRequest struct {
	PathParams  GetPortfolioVideosPathParams
	QueryParams GetPortfolioVideosQueryParams
}

type GetPortfolioVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The videos were returned.
	Videos []shared.Video
}
