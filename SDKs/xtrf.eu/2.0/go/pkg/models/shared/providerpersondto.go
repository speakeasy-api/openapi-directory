// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProviderPersonDTOGenderEnum string

const (
	ProviderPersonDTOGenderEnumFemale ProviderPersonDTOGenderEnum = "FEMALE"
	ProviderPersonDTOGenderEnumMale   ProviderPersonDTOGenderEnum = "MALE"
)

func (e *ProviderPersonDTOGenderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FEMALE":
		fallthrough
	case "MALE":
		*e = ProviderPersonDTOGenderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProviderPersonDTOGenderEnum: %s", s)
	}
}

// ProviderPersonDTO - Success
type ProviderPersonDTO struct {
	Active           *bool                        `json:"active,omitempty"`
	Contact          *PersonContactDTO            `json:"contact,omitempty"`
	CustomFields     []CustomFieldDTO             `json:"customFields,omitempty"`
	Gender           *ProviderPersonDTOGenderEnum `json:"gender,omitempty"`
	ID               *int64                       `json:"id,omitempty"`
	LastName         *string                      `json:"lastName,omitempty"`
	MotherTonguesIds []int64                      `json:"motherTonguesIds,omitempty"`
	Name             *string                      `json:"name,omitempty"`
	PositionID       *int64                       `json:"positionId,omitempty"`
	ProviderID       *int64                       `json:"providerId,omitempty"`
}
