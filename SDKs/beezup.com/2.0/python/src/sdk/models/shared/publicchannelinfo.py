"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PublicChannelInfo:
    
    home_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('homeUrl') }})
    r"""The channel home url"""  
    logo_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logoUrl') }})
    r"""The channel logo url"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The channel name"""  
    types: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('types') }})
    r"""The type list related to a channel"""  
    sectors: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectors'), 'exclude': lambda f: f is None }})
    r"""The sector list related to a channel"""  
    