/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SlideProperties - The properties of Page that are only relevant for pages with page_type SLIDE.
 */
public class SlideProperties {
    /**
     * Whether the slide is skipped in the presentation mode. Defaults to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isSkipped")
    public Boolean isSkipped;

    public SlideProperties withIsSkipped(Boolean isSkipped) {
        this.isSkipped = isSkipped;
        return this;
    }
    
    /**
     * The object ID of the layout that this slide is based on. This property is read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("layoutObjectId")
    public String layoutObjectId;

    public SlideProperties withLayoutObjectId(String layoutObjectId) {
        this.layoutObjectId = layoutObjectId;
        return this;
    }
    
    /**
     * The object ID of the master that this slide is based on. This property is read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterObjectId")
    public String masterObjectId;

    public SlideProperties withMasterObjectId(String masterObjectId) {
        this.masterObjectId = masterObjectId;
        return this;
    }
    
    /**
     * A page in a presentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notesPage")
    public Page notesPage;

    public SlideProperties withNotesPage(Page notesPage) {
        this.notesPage = notesPage;
        return this;
    }
    
    public SlideProperties(){}
}
