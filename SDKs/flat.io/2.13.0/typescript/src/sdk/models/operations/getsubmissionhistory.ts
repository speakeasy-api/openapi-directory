/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSubmissionHistorySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

export class GetSubmissionHistoryRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the assignment
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=assignment",
  })
  assignment: string;

  /**
   * Unique identifier of the class
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=class",
  })
  class: string;

  /**
   * Unique identifier of the submission
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=submission",
  })
  submission: string;
}

export class GetSubmissionHistoryResponse extends SpeakeasyBase {
  /**
   * The history of the submission
   */
  @SpeakeasyMetadata({ elemType: shared.AssignmentSubmissionHistory })
  assignmentSubmissionHistories?: shared.AssignmentSubmissionHistory[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not granted to access to this submission
   */
  @SpeakeasyMetadata()
  flatErrorResponse?: shared.FlatErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
