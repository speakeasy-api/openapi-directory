// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AllowListStatusCodeEnum - Indicates the current status of an allow list. Depending on the type of criteria that the list specifies, possible values are:
type AllowListStatusCodeEnum string

const (
	AllowListStatusCodeEnumOk                   AllowListStatusCodeEnum = "OK"
	AllowListStatusCodeEnumS3ObjectNotFound     AllowListStatusCodeEnum = "S3_OBJECT_NOT_FOUND"
	AllowListStatusCodeEnumS3UserAccessDenied   AllowListStatusCodeEnum = "S3_USER_ACCESS_DENIED"
	AllowListStatusCodeEnumS3ObjectAccessDenied AllowListStatusCodeEnum = "S3_OBJECT_ACCESS_DENIED"
	AllowListStatusCodeEnumS3Throttled          AllowListStatusCodeEnum = "S3_THROTTLED"
	AllowListStatusCodeEnumS3ObjectOversize     AllowListStatusCodeEnum = "S3_OBJECT_OVERSIZE"
	AllowListStatusCodeEnumS3ObjectEmpty        AllowListStatusCodeEnum = "S3_OBJECT_EMPTY"
	AllowListStatusCodeEnumUnknownError         AllowListStatusCodeEnum = "UNKNOWN_ERROR"
)

func (e AllowListStatusCodeEnum) ToPointer() *AllowListStatusCodeEnum {
	return &e
}

func (e *AllowListStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		fallthrough
	case "S3_OBJECT_NOT_FOUND":
		fallthrough
	case "S3_USER_ACCESS_DENIED":
		fallthrough
	case "S3_OBJECT_ACCESS_DENIED":
		fallthrough
	case "S3_THROTTLED":
		fallthrough
	case "S3_OBJECT_OVERSIZE":
		fallthrough
	case "S3_OBJECT_EMPTY":
		fallthrough
	case "UNKNOWN_ERROR":
		*e = AllowListStatusCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllowListStatusCodeEnum: %v", v)
	}
}
