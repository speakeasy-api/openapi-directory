/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryOracleDbV1Request {
    /**
     * Filters by effective SLA Domain ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=effective_sla_domain_id")
    public String effectiveSlaDomainId;

    public QueryOracleDbV1Request withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * Specifies whether to include the backup task information in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include_backup_task_info")
    public Boolean includeBackupTaskInfo;

    public QueryOracleDbV1Request withIncludeBackupTaskInfo(Boolean includeBackupTaskInfo) {
        this.includeBackupTaskInfo = includeBackupTaskInfo;
        return this;
    }
    
    /**
     * Limits the response to Oracle databases that have the specified value for the isDataGuardGroup flag.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_data_guard_group")
    public Boolean isDataGuardGroup;

    public QueryOracleDbV1Request withIsDataGuardGroup(Boolean isDataGuardGroup) {
        this.isDataGuardGroup = isDataGuardGroup;
        return this;
    }
    
    /**
     * Limits the response to Oracle databases that have the specified isLiveMount value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_live_mount")
    public Boolean isLiveMount;

    public QueryOracleDbV1Request withIsLiveMount(Boolean isLiveMount) {
        this.isLiveMount = isLiveMount;
        return this;
    }
    
    /**
     * Limits the response to Oracle databases that have the specified isRelic value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_relic")
    public Boolean isRelic;

    public QueryOracleDbV1Request withIsRelic(Boolean isRelic) {
        this.isRelic = isRelic;
        return this;
    }
    
    /**
     * Limits the summary information to the specified number of matches. Optionally, it can be used with offset to begin the count of matches at the number specified in the offset parameter, and with sort_by to sort the results by the specified attribute.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryOracleDbV1Request withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Filters a response by making an infix comparison of the database name, SID, and tablespaces in the response with the specified value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public QueryOracleDbV1Request withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Determines the elements to include in the response starting with the element at the index number specified here. Optionally used with limit to enable paging of the results by retrieving a smaller number of elements in the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryOracleDbV1Request withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Limits the response to Oracle databases that have the specified primary cluster value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QueryOracleDbV1Request withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Limits the response to Oracle databases that are protected by the specified type of SLA Domain assignment.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sla_assignment")
    public QueryOracleDbV1SLAAssignmentEnum slaAssignment;

    public QueryOracleDbV1Request withSlaAssignment(QueryOracleDbV1SLAAssignmentEnum slaAssignment) {
        this.slaAssignment = slaAssignment;
        return this;
    }
    
    /**
     * Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryOracleDbV1SortByEnum sortBy;

    public QueryOracleDbV1Request withSortBy(QueryOracleDbV1SortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Specifies the ascending or descending order to sort the elements in the response by the attributes specified in the sort_by parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryOracleDbV1SortOrderEnum sortOrder;

    public QueryOracleDbV1Request withSortOrder(QueryOracleDbV1SortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryOracleDbV1Request(){}
}
