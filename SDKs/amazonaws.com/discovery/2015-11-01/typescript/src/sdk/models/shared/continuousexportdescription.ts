/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContinuousExportStatusEnum } from "./continuousexportstatusenum";
import { DataSourceEnum } from "./datasourceenum";
import { Expose, Transform } from "class-transformer";

/**
 * A list of continuous export descriptions.
 */
export class ContinuousExportDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dataSource" })
  dataSource?: DataSourceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "exportId" })
  exportId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "s3Bucket" })
  s3Bucket?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schemaStorageConfig" })
  schemaStorageConfig?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ContinuousExportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusDetail" })
  statusDetail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stopTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopTime?: Date;
}
