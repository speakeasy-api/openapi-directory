<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class DescribeRecoverySnapshotsRequestBody
{
    /**
     * A set of filters by which to return Recovery Snapshots.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\DescribeRecoverySnapshotsRequestBodyFilters $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\DescribeRecoverySnapshotsRequestBodyFilters')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DescribeRecoverySnapshotsRequestBodyFilters $filters = null;
    
    /**
     * Maximum number of Recovery Snapshots to retrieve.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * The token of the next Recovery Snapshot to retrieve.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * The sorted ordering by which to return Recovery Snapshots.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\DescribeRecoverySnapshotsRequestBodyOrderEnum $order
     */
	#[\JMS\Serializer\Annotation\SerializedName('order')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\DescribeRecoverySnapshotsRequestBodyOrderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DescribeRecoverySnapshotsRequestBodyOrderEnum $order = null;
    
    /**
     * Filter Recovery Snapshots by Source Server ID.
     * 
     * @var string $sourceServerID
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceServerID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceServerID;
    
	public function __construct()
	{
		$this->filters = null;
		$this->maxResults = null;
		$this->nextToken = null;
		$this->order = null;
		$this->sourceServerID = "";
	}
}
