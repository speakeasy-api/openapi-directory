/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class UpdateUserPoolResponse {
    /**
     * ConcurrentModificationException
     */
    
    public Object concurrentModificationException;

    public UpdateUserPoolResponse withConcurrentModificationException(Object concurrentModificationException) {
        this.concurrentModificationException = concurrentModificationException;
        return this;
    }
    
    
    public String contentType;

    public UpdateUserPoolResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InternalErrorException
     */
    
    public Object internalErrorException;

    public UpdateUserPoolResponse withInternalErrorException(Object internalErrorException) {
        this.internalErrorException = internalErrorException;
        return this;
    }
    
    /**
     * InvalidEmailRoleAccessPolicyException
     */
    
    public Object invalidEmailRoleAccessPolicyException;

    public UpdateUserPoolResponse withInvalidEmailRoleAccessPolicyException(Object invalidEmailRoleAccessPolicyException) {
        this.invalidEmailRoleAccessPolicyException = invalidEmailRoleAccessPolicyException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public UpdateUserPoolResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidSmsRoleAccessPolicyException
     */
    
    public Object invalidSmsRoleAccessPolicyException;

    public UpdateUserPoolResponse withInvalidSmsRoleAccessPolicyException(Object invalidSmsRoleAccessPolicyException) {
        this.invalidSmsRoleAccessPolicyException = invalidSmsRoleAccessPolicyException;
        return this;
    }
    
    /**
     * InvalidSmsRoleTrustRelationshipException
     */
    
    public Object invalidSmsRoleTrustRelationshipException;

    public UpdateUserPoolResponse withInvalidSmsRoleTrustRelationshipException(Object invalidSmsRoleTrustRelationshipException) {
        this.invalidSmsRoleTrustRelationshipException = invalidSmsRoleTrustRelationshipException;
        return this;
    }
    
    /**
     * NotAuthorizedException
     */
    
    public Object notAuthorizedException;

    public UpdateUserPoolResponse withNotAuthorizedException(Object notAuthorizedException) {
        this.notAuthorizedException = notAuthorizedException;
        return this;
    }
    
    
    public Integer statusCode;

    public UpdateUserPoolResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public UpdateUserPoolResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public UpdateUserPoolResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * TooManyRequestsException
     */
    
    public Object tooManyRequestsException;

    public UpdateUserPoolResponse withTooManyRequestsException(Object tooManyRequestsException) {
        this.tooManyRequestsException = tooManyRequestsException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> updateUserPoolResponse;

    public UpdateUserPoolResponse withUpdateUserPoolResponse(java.util.Map<String, Object> updateUserPoolResponse) {
        this.updateUserPoolResponse = updateUserPoolResponse;
        return this;
    }
    
    /**
     * UserImportInProgressException
     */
    
    public Object userImportInProgressException;

    public UpdateUserPoolResponse withUserImportInProgressException(Object userImportInProgressException) {
        this.userImportInProgressException = userImportInProgressException;
        return this;
    }
    
    /**
     * UserPoolTaggingException
     */
    
    public Object userPoolTaggingException;

    public UpdateUserPoolResponse withUserPoolTaggingException(Object userPoolTaggingException) {
        this.userPoolTaggingException = userPoolTaggingException;
        return this;
    }
    
    public UpdateUserPoolResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
