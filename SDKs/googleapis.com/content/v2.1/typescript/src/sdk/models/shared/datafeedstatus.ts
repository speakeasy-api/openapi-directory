/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DatafeedStatusError } from "./datafeedstatuserror";
import { Expose, Type } from "class-transformer";

/**
 * The status of a datafeed, that is, the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.
 */
export class DatafeedStatus extends SpeakeasyBase {
  /**
   * The country for which the status is reported, represented as a CLDR territory code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * The ID of the feed for which the status is reported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "datafeedId" })
  datafeedId?: string;

  /**
   * The list of errors occurring in the feed.
   */
  @SpeakeasyMetadata({ elemType: DatafeedStatusError })
  @Expose({ name: "errors" })
  @Type(() => DatafeedStatusError)
  errors?: DatafeedStatusError[];

  /**
   * The feed label status is reported for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "feedLabel" })
  feedLabel?: string;

  /**
   * The number of items in the feed that were processed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemsTotal" })
  itemsTotal?: string;

  /**
   * The number of items in the feed that were valid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemsValid" })
  itemsValid?: string;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "`content#datafeedStatus`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The two-letter ISO 639-1 language for which the status is reported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * The last date at which the feed was uploaded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUploadDate" })
  lastUploadDate?: string;

  /**
   * The processing status of the feed. Acceptable values are: - "`"`failure`": The feed could not be processed or all items had errors.`" - "`in progress`": The feed is being processed. - "`none`": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - "`success`": The feed was processed successfully, though some items might have had errors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processingStatus" })
  processingStatus?: string;

  /**
   * The list of errors occurring in the feed.
   */
  @SpeakeasyMetadata({ elemType: DatafeedStatusError })
  @Expose({ name: "warnings" })
  @Type(() => DatafeedStatusError)
  warnings?: DatafeedStatusError[];
}
