"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListPhoneSitesRequest:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    

@dataclasses.dataclass
class ListPhoneSites200ApplicationXMLSitesCountry:
    r"""Site country"""
    
    code: Optional[str] = dataclasses.field(default=None)
    r"""Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the country."""  
    

@dataclasses.dataclass
class ListPhoneSites200ApplicationXMLSitesMainAutoReceptionist:
    r"""Auto Receptionist for each site."""
    
    extension_id: Optional[str] = dataclasses.field(default=None)
    r"""Extension ID"""  
    extension_number: Optional[str] = dataclasses.field(default=None)
    r"""Extension number"""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the auto receptionist."""  
    

@dataclasses.dataclass
class ListPhoneSites200ApplicationXMLSites:
    
    country: Optional[ListPhoneSites200ApplicationXMLSitesCountry] = dataclasses.field(default=None)
    r"""Site country"""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Site ID. Unique Identifier of the site."""  
    main_auto_receptionist: Optional[ListPhoneSites200ApplicationXMLSitesMainAutoReceptionist] = dataclasses.field(default=None)
    r"""Auto Receptionist for each site."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the Site."""  
    site_code: Optional[str] = dataclasses.field(default=None)
    r"""Site Code"""  
    

@dataclasses.dataclass
class ListPhoneSites200ApplicationXML:
    
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[str] = dataclasses.field(default=None)
    r"""The number of records returned within a single API call."""  
    sites: Optional[list[ListPhoneSites200ApplicationXMLSites]] = dataclasses.field(default=None)
    r"""List of site(s)."""  
    total_records: Optional[str] = dataclasses.field(default=None)
    r"""Total number of records returned."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneSites200ApplicationJSONSitesCountry:
    r"""Site country"""
    
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the country."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneSites200ApplicationJSONSitesMainAutoReceptionist:
    r"""Auto Receptionist for each site."""
    
    extension_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_id'), 'exclude': lambda f: f is None }})
    r"""Extension ID"""  
    extension_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the auto receptionist."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneSites200ApplicationJSONSites:
    
    country: Optional[ListPhoneSites200ApplicationJSONSitesCountry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Site country"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Site ID. Unique Identifier of the site."""  
    main_auto_receptionist: Optional[ListPhoneSites200ApplicationJSONSitesMainAutoReceptionist] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('main_auto_receptionist'), 'exclude': lambda f: f is None }})
    r"""Auto Receptionist for each site."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Site."""  
    site_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site_code'), 'exclude': lambda f: f is None }})
    r"""Site Code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListPhoneSites200ApplicationJSON:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned within a single API call."""  
    sites: Optional[list[ListPhoneSites200ApplicationJSONSites]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sites'), 'exclude': lambda f: f is None }})
    r"""List of site(s)."""  
    total_records: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""Total number of records returned."""  
    

@dataclasses.dataclass
class ListPhoneSitesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_phone_sites_200_application_json_object: Optional[ListPhoneSites200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    