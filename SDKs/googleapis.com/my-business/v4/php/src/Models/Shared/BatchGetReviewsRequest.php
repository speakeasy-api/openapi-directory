<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BatchGetReviewsRequest - Request message for Reviews.BatchGetReviews.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BatchGetReviewsRequest
{
    /**
     * Whether to ignore rating-only reviews.
     * 
     * @var ?bool $ignoreRatingOnlyReviews
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreRatingOnlyReviews')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreRatingOnlyReviews = null;
    
    /**
     * A collection of locations to fetch reviews for, specified by their names.
     * 
     * @var ?array<string> $locationNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locationNames = null;
    
    /**
     * Optional. Specifies the field to sort reviews by. If unspecified, the order of reviews returned will default to `update_time desc`. Valid orders to sort by are `rating`, `rating desc` and `update_time desc`. `rating` will return reviews in ascending order. `update_time`(i.e. ascending order) is not supported.
     * 
     * @var ?string $orderBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderBy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orderBy = null;
    
    /**
     * How many reviews to fetch per page. The default value is 200.
     * 
     * @var ?int $pageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pageSize = null;
    
    /**
     * If specified, it fetches the next page of reviews.
     * 
     * @var ?string $pageToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pageToken = null;
    
	public function __construct()
	{
		$this->ignoreRatingOnlyReviews = null;
		$this->locationNames = null;
		$this->orderBy = null;
		$this->pageSize = null;
		$this->pageToken = null;
	}
}
