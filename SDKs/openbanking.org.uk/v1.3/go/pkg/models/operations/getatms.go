// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetAtmsRequest struct {
	// Used for conditional request, to retrieve data only if modified since a given date
	IfModifiedSince *string `header:"style=simple,explode=false,name=If-Modified-Since"`
	// Used for conditional request, to retrieve data only if the given Etag value does not match
	IfNoneMatch *string `header:"style=simple,explode=false,name=If-None-Match"`
}

// GetAtmsErrorObject - A standard error response.
type GetAtmsErrorObject struct {
	// Further details describing the error
	Description string `json:"description"`
	// This corresponds to the HTTP status code
	Status string `json:"status"`
	// A short title of the type of error
	Title string `json:"title"`
}

type GetAtms503ErrorObjectDescriptionEnum string

const (
	GetAtms503ErrorObjectDescriptionEnumTheServiceIsTemporarilyUnavailable GetAtms503ErrorObjectDescriptionEnum = "The service is temporarily unavailable."
)

func (e GetAtms503ErrorObjectDescriptionEnum) ToPointer() *GetAtms503ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetAtms503ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "The service is temporarily unavailable.":
		*e = GetAtms503ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms503ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetAtms503ErrorObjectStatusEnum string

const (
	GetAtms503ErrorObjectStatusEnumFiveHundredAndThree GetAtms503ErrorObjectStatusEnum = "503"
)

func (e GetAtms503ErrorObjectStatusEnum) ToPointer() *GetAtms503ErrorObjectStatusEnum {
	return &e
}

func (e *GetAtms503ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "503":
		*e = GetAtms503ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms503ErrorObjectStatusEnum: %v", v)
	}
}

type GetAtms503ErrorObjectTitleEnum string

const (
	GetAtms503ErrorObjectTitleEnumServiceTemporarilyUnavailable GetAtms503ErrorObjectTitleEnum = "Service temporarily unavailable"
)

func (e GetAtms503ErrorObjectTitleEnum) ToPointer() *GetAtms503ErrorObjectTitleEnum {
	return &e
}

func (e *GetAtms503ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Service temporarily unavailable":
		*e = GetAtms503ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms503ErrorObjectTitleEnum: %v", v)
	}
}

// GetAtms503ErrorObject - The service is temporarily unavailable.
type GetAtms503ErrorObject struct {
	Description GetAtms503ErrorObjectDescriptionEnum `json:"description"`
	Status      GetAtms503ErrorObjectStatusEnum      `json:"status"`
	Title       GetAtms503ErrorObjectTitleEnum       `json:"title"`
}

type GetAtms500ErrorObjectDescriptionEnum string

const (
	GetAtms500ErrorObjectDescriptionEnumAnErrorOccurredOnTheServerNoFurtherInformationIsAvailable GetAtms500ErrorObjectDescriptionEnum = "An error occurred on the server. No further information is available."
)

func (e GetAtms500ErrorObjectDescriptionEnum) ToPointer() *GetAtms500ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetAtms500ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "An error occurred on the server. No further information is available.":
		*e = GetAtms500ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms500ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetAtms500ErrorObjectStatusEnum string

const (
	GetAtms500ErrorObjectStatusEnumFiveHundred GetAtms500ErrorObjectStatusEnum = "500"
)

func (e GetAtms500ErrorObjectStatusEnum) ToPointer() *GetAtms500ErrorObjectStatusEnum {
	return &e
}

func (e *GetAtms500ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "500":
		*e = GetAtms500ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms500ErrorObjectStatusEnum: %v", v)
	}
}

type GetAtms500ErrorObjectTitleEnum string

const (
	GetAtms500ErrorObjectTitleEnumInternalServerError GetAtms500ErrorObjectTitleEnum = "Internal server error"
)

func (e GetAtms500ErrorObjectTitleEnum) ToPointer() *GetAtms500ErrorObjectTitleEnum {
	return &e
}

func (e *GetAtms500ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Internal server error":
		*e = GetAtms500ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms500ErrorObjectTitleEnum: %v", v)
	}
}

// GetAtms500ErrorObject - An error occurred on the server. No further information is available.
type GetAtms500ErrorObject struct {
	Description GetAtms500ErrorObjectDescriptionEnum `json:"description"`
	Status      GetAtms500ErrorObjectStatusEnum      `json:"status"`
	Title       GetAtms500ErrorObjectTitleEnum       `json:"title"`
}

type GetAtms429ErrorObjectDescriptionEnum string

const (
	GetAtms429ErrorObjectDescriptionEnumYouHaveRequestedThisResourceTooOftenSlowDown GetAtms429ErrorObjectDescriptionEnum = "You have requested this resource too often. Slow down."
)

func (e GetAtms429ErrorObjectDescriptionEnum) ToPointer() *GetAtms429ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetAtms429ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "You have requested this resource too often. Slow down.":
		*e = GetAtms429ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms429ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetAtms429ErrorObjectStatusEnum string

const (
	GetAtms429ErrorObjectStatusEnumFourHundredAndTwentyNine GetAtms429ErrorObjectStatusEnum = "429"
)

func (e GetAtms429ErrorObjectStatusEnum) ToPointer() *GetAtms429ErrorObjectStatusEnum {
	return &e
}

func (e *GetAtms429ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "429":
		*e = GetAtms429ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms429ErrorObjectStatusEnum: %v", v)
	}
}

type GetAtms429ErrorObjectTitleEnum string

const (
	GetAtms429ErrorObjectTitleEnumTooManyRequests GetAtms429ErrorObjectTitleEnum = "Too many requests"
)

func (e GetAtms429ErrorObjectTitleEnum) ToPointer() *GetAtms429ErrorObjectTitleEnum {
	return &e
}

func (e *GetAtms429ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Too many requests":
		*e = GetAtms429ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms429ErrorObjectTitleEnum: %v", v)
	}
}

// GetAtms429ErrorObject - You have requested this resource too often. Slow down.
type GetAtms429ErrorObject struct {
	Description GetAtms429ErrorObjectDescriptionEnum `json:"description"`
	Status      GetAtms429ErrorObjectStatusEnum      `json:"status"`
	Title       GetAtms429ErrorObjectTitleEnum       `json:"title"`
}

type GetAtms408ErrorObjectDescriptionEnum string

const (
	GetAtms408ErrorObjectDescriptionEnumYourClientHasFailedToSubmitARequestAndATimeoutHasOccurred GetAtms408ErrorObjectDescriptionEnum = "Your client has failed to submit a request, and a timeout has occurred."
)

func (e GetAtms408ErrorObjectDescriptionEnum) ToPointer() *GetAtms408ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetAtms408ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Your client has failed to submit a request, and a timeout has occurred.":
		*e = GetAtms408ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms408ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetAtms408ErrorObjectStatusEnum string

const (
	GetAtms408ErrorObjectStatusEnumFourHundredAndEight GetAtms408ErrorObjectStatusEnum = "408"
)

func (e GetAtms408ErrorObjectStatusEnum) ToPointer() *GetAtms408ErrorObjectStatusEnum {
	return &e
}

func (e *GetAtms408ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "408":
		*e = GetAtms408ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms408ErrorObjectStatusEnum: %v", v)
	}
}

type GetAtms408ErrorObjectTitleEnum string

const (
	GetAtms408ErrorObjectTitleEnumClientTimeout GetAtms408ErrorObjectTitleEnum = "Client timeout"
)

func (e GetAtms408ErrorObjectTitleEnum) ToPointer() *GetAtms408ErrorObjectTitleEnum {
	return &e
}

func (e *GetAtms408ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Client timeout":
		*e = GetAtms408ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms408ErrorObjectTitleEnum: %v", v)
	}
}

// GetAtms408ErrorObject - Your client has failed to submit a request, and a timeout has occurred.
type GetAtms408ErrorObject struct {
	Description GetAtms408ErrorObjectDescriptionEnum `json:"description"`
	Status      GetAtms408ErrorObjectStatusEnum      `json:"status"`
	Title       GetAtms408ErrorObjectTitleEnum       `json:"title"`
}

type GetAtms400ErrorObjectDescriptionEnum string

const (
	GetAtms400ErrorObjectDescriptionEnumYouHaveSentARequestWhichCouldNotBeUnderstood GetAtms400ErrorObjectDescriptionEnum = "You have sent a request which could not be understood."
)

func (e GetAtms400ErrorObjectDescriptionEnum) ToPointer() *GetAtms400ErrorObjectDescriptionEnum {
	return &e
}

func (e *GetAtms400ErrorObjectDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "You have sent a request which could not be understood.":
		*e = GetAtms400ErrorObjectDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms400ErrorObjectDescriptionEnum: %v", v)
	}
}

type GetAtms400ErrorObjectStatusEnum string

const (
	GetAtms400ErrorObjectStatusEnumFourHundred GetAtms400ErrorObjectStatusEnum = "400"
)

func (e GetAtms400ErrorObjectStatusEnum) ToPointer() *GetAtms400ErrorObjectStatusEnum {
	return &e
}

func (e *GetAtms400ErrorObjectStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "400":
		*e = GetAtms400ErrorObjectStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms400ErrorObjectStatusEnum: %v", v)
	}
}

type GetAtms400ErrorObjectTitleEnum string

const (
	GetAtms400ErrorObjectTitleEnumBadRequest GetAtms400ErrorObjectTitleEnum = "Bad request"
)

func (e GetAtms400ErrorObjectTitleEnum) ToPointer() *GetAtms400ErrorObjectTitleEnum {
	return &e
}

func (e *GetAtms400ErrorObjectTitleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Bad request":
		*e = GetAtms400ErrorObjectTitleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms400ErrorObjectTitleEnum: %v", v)
	}
}

// GetAtms400ErrorObject - You have sent a request which could not be understood.
type GetAtms400ErrorObject struct {
	Description GetAtms400ErrorObjectDescriptionEnum `json:"description"`
	Status      GetAtms400ErrorObjectStatusEnum      `json:"status"`
	Title       GetAtms400ErrorObjectTitleEnum       `json:"title"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum - Information about ATM services
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumBalance                   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "Balance"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumBillPayments              GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "BillPayments"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumCashDeposits              GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "CashDeposits"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumCashWithdrawal            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "CashWithdrawal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumCharityDonation           GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "CharityDonation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumChequeBookRequest         GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "ChequeBookRequest"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumChequeDeposits            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "ChequeDeposits"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumFastCash                  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "FastCash"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumMiniStatement             GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "MiniStatement"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumMobileBankingRegistration GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "MobileBankingRegistration"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumMobilePaymentRegistration GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "MobilePaymentRegistration"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumMobilePhoneTopUp          GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "MobilePhoneTopUp"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumOrderStatement            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "OrderStatement"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumPinActivation             GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "PINActivation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnumPinChange                 GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum = "PINChange"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Balance":
		fallthrough
	case "BillPayments":
		fallthrough
	case "CashDeposits":
		fallthrough
	case "CashWithdrawal":
		fallthrough
	case "CharityDonation":
		fallthrough
	case "ChequeBookRequest":
		fallthrough
	case "ChequeDeposits":
		fallthrough
	case "FastCash":
		fallthrough
	case "MiniStatement":
		fallthrough
	case "MobileBankingRegistration":
		fallthrough
	case "MobilePaymentRegistration":
		fallthrough
	case "MobilePhoneTopUp":
		fallthrough
	case "OrderStatement":
		fallthrough
	case "PINActivation":
		fallthrough
	case "PINChange":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum - Information about the accessibility
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumAudioCashMachine  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "AudioCashMachine"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumAutomaticDoors    GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "AutomaticDoors"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumChairAccess       GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "ChairAccess"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumDriveThru         GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "DriveThru"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumExternalRamp      GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "ExternalRamp"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumInductionLoop     GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "InductionLoop"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumInternalRamp      GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "InternalRamp"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumLevelAccess       GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "LevelAccess"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumLowerLevelCounter GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "LowerLevelCounter"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnumWheelchairAccess  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum = "WheelchairAccess"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AudioCashMachine":
		fallthrough
	case "AutomaticDoors":
		fallthrough
	case "ChairAccess":
		fallthrough
	case "DriveThru":
		fallthrough
	case "ExternalRamp":
		fallthrough
	case "InductionLoop":
		fallthrough
	case "InternalRamp":
		fallthrough
	case "LevelAccess":
		fallthrough
	case "LowerLevelCounter":
		fallthrough
	case "WheelchairAccess":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAddress - Postal Address
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAddress struct {
	// Number or Name that identifies the position of a building on a street
	BuildingNumberOrName *string `json:"BuildingNumberOrName,omitempty"`
	// Nation with its own government
	Country string `json:"Country"`
	// Identifies a subdivision of a country such as state, region, county
	CountrySubDivision *string `json:"CountrySubDivision,omitempty"`
	// Directions for customers
	OptionalAddressField *string `json:"OptionalAddressField,omitempty"`
	// Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail
	PostCode string `json:"PostCode"`
	// Name of a street or thoroughfare
	StreetName string `json:"StreetName"`
	// Name of a built-up area, with defined boundaries, and a local government
	TownName *string `json:"TownName,omitempty"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMGeographicLocation - Geographic Coordinates
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMGeographicLocation struct {
	// The Latitude measured in decimal format according to ISO 213
	Latitude string `json:"Latitude"`
	// The longitude measured in decimal format according to ISO 213
	Longitude string `json:"Longitude"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum - Indicates the environment of the ATM
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumAirport                   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "Airport"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumBankSpecialisedOutlet     GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "BankSpecialisedOutlet"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumBranchExternal            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "BranchExternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumBranchInternal            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "BranchInternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumBranchLobby               GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "BranchLobby"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumBureauDeChange            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "BureauDeChange"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumCoachStation              GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "CoachStation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumCommercialSpaceInternal   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "CommercialSpaceInternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumConvenienceStore          GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "ConvenienceStore"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumExhibitionCentre          GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "ExhibitionCentre"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumFactoryOrOffice           GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "FactoryOrOffice"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumFillingStation            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "FillingStation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumFinancialInstitution      GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "FinancialInstitution"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumGovernmentOffice          GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "GovernmentOffice"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumHospital                  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "Hospital"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumHotel                     GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "Hotel"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumKioskPod                  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "KioskPod"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumLeisureCentre             GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "LeisureCentre"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumPleasurePark              GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "PleasurePark"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumPublicHouse               GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "PublicHouse"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumRailwayStation            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "RailwayStation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumRemoteUnit                GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "RemoteUnit"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumRetailerDepartmentStore   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "RetailerDepartmentStore"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumRetailerOutlet            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "RetailerOutlet"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumSeaportTerminal           GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "SeaportTerminal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumServiceStation            GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "ServiceStation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumShoppingCentreExternal    GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "ShoppingCentreExternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumShoppingCentreInternal    GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "ShoppingCentreInternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumStorageDepot              GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "StorageDepot"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumSupermarketExternal       GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "SupermarketExternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumSupermarketInternal       GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "SupermarketInternal"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumUndergroundRailwayStation GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "UndergroundRailwayStation"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnumUniversityOrCollege       GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum = "UniversityOrCollege"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Airport":
		fallthrough
	case "BankSpecialisedOutlet":
		fallthrough
	case "BranchExternal":
		fallthrough
	case "BranchInternal":
		fallthrough
	case "BranchLobby":
		fallthrough
	case "BureauDeChange":
		fallthrough
	case "CoachStation":
		fallthrough
	case "CommercialSpaceInternal":
		fallthrough
	case "ConvenienceStore":
		fallthrough
	case "ExhibitionCentre":
		fallthrough
	case "FactoryOrOffice":
		fallthrough
	case "FillingStation":
		fallthrough
	case "FinancialInstitution":
		fallthrough
	case "GovernmentOffice":
		fallthrough
	case "Hospital":
		fallthrough
	case "Hotel":
		fallthrough
	case "KioskPod":
		fallthrough
	case "LeisureCentre":
		fallthrough
	case "PleasurePark":
		fallthrough
	case "PublicHouse":
		fallthrough
	case "RailwayStation":
		fallthrough
	case "RemoteUnit":
		fallthrough
	case "RetailerDepartmentStore":
		fallthrough
	case "RetailerOutlet":
		fallthrough
	case "SeaportTerminal":
		fallthrough
	case "ServiceStation":
		fallthrough
	case "ShoppingCentreExternal":
		fallthrough
	case "ShoppingCentreInternal":
		fallthrough
	case "StorageDepot":
		fallthrough
	case "SupermarketExternal":
		fallthrough
	case "SupermarketInternal":
		fallthrough
	case "UndergroundRailwayStation":
		fallthrough
	case "UniversityOrCollege":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum - Minimum currency denominations usually available
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnumPound5   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum = "£5"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnumPound10  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum = "£10"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnumPound20  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum = "£20"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnumPound50  GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum = "£50"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnumPound100 GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum = "£100"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "£5":
		fallthrough
	case "£10":
		fallthrough
	case "£20":
		fallthrough
	case "£50":
		fallthrough
	case "£100":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum - The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnumUk GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum = "UK"
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnumEu GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum = "EU"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UK":
		fallthrough
	case "EU":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrand - Brand
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrand struct {
	// The trademark number that has been registered with the Intellectual Property Office. Note: The 2 letter IPO prefix should be omitted
	TrademarkID string `json:"TrademarkID"`
	// The Intellectual Property Office (IPO) is the official body responsible for intellectual property (IP) rights including patents, designs, trademarks and copyright. (Code: UK or EU only)
	TrademarkIPOCode GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrandTrademarkIPOCodeEnum `json:"TrademarkIPOCode"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationParentOrganisationOrganisationName - Organisation Name
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationParentOrganisationOrganisationName struct {
	// Legal Name of the organisation
	LegalName string `json:"LegalName"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationParentOrganisation - Parent organisation
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationParentOrganisation struct {
	// The BIC from the organisation
	Bic *string `json:"BIC,omitempty"`
	// The LEI ID of the organisation
	Lei *string `json:"LEI,omitempty"`
	// Organisation Name
	OrganisationName GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationParentOrganisationOrganisationName `json:"OrganisationName"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisation - Organisation
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisation struct {
	// Brand
	Brand GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationBrand `json:"Brand"`
	// Parent organisation
	ParentOrganisation GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisationParentOrganisation `json:"ParentOrganisation"`
}

type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATM struct {
	// ATM terminal device identification for the acquirer and the issuer
	Atmid string `json:"ATMID"`
	// Information about ATM services
	ATMServices []GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMATMServicesEnum `json:"ATMServices"`
	// Information about the accessibility
	AccessibilityTypes []GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAccessibilityTypesEnum `json:"AccessibilityTypes,omitempty"`
	// ATM Service Description
	AdditionalATMServices []string `json:"AdditionalATMServices,omitempty"`
	// Postal Address
	Address GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMAddress `json:"Address"`
	// Unique and unambiguous identification of a retail branch of a financial institution
	BranchIdentification *string `json:"BranchIdentification,omitempty"`
	// Defines currency type available for dispense
	Currency []string `json:"Currency"`
	// Geographic Coordinates
	GeographicLocation GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMGeographicLocation `json:"GeographicLocation"`
	// Indicates the environment of the ATM
	LocationCategory *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMLocationCategoryEnum `json:"LocationCategory,omitempty"`
	// Minimum currency denominations usually available
	MinimumValueDispensed *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMMinimumValueDispensedEnum `json:"MinimumValueDispensed,omitempty"`
	// Organisation
	Organisation GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATMOrganisation `json:"Organisation"`
	// Site identifying code, where ATM is located
	SiteID *string `json:"SiteID,omitempty"`
	// Site identifying name, where ATM is located
	SiteName *string `json:"SiteName,omitempty"`
	// Languages that the ATM supports
	SupportedLanguages []string `json:"SupportedLanguages"`
}

type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnumUseOfTheApIsAndAnyRelatedDataWillBeSubjectToTheTermsOfTheOpenLicenceAndSubjectToTermsAndConditions GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum = "Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Use of the APIs and any related data will be subject to the terms of the Open Licence and subject to terms and conditions":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum - Open Banking License
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnumHTTPSWwwOpenbankingOrgUkOpenLicence GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum = "https://www.openbanking.org.uk/open-licence"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "https://www.openbanking.org.uk/open-licence":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum: %v", v)
	}
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum - Open Banking Terms of Use
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum string

const (
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnumHTTPSWwwOpenbankingOrgUkTerms GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum = "https://www.openbanking.org.uk/terms"
)

func (e GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum) ToPointer() *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum {
	return &e
}

func (e *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "https://www.openbanking.org.uk/terms":
		*e = GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum: %v", v)
	}
}

type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaData struct {
	Agreement   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataAgreementEnum `json:"Agreement"`
	LastUpdated time.Time                                                                   `json:"LastUpdated"`
	// Open Banking License
	License GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataLicenseEnum `json:"License"`
	// Open Banking Terms of Use
	TermsOfUse   GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaDataTermsOfUseEnum `json:"TermsOfUse"`
	TotalResults int64                                                                        `json:"TotalResults"`
}

// GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSON - Successful response with a list of `ATM` data
type GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSON struct {
	Data []GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONATM    `json:"data"`
	Meta GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONMetaData `json:"meta"`
}

type GetAtmsResponse struct {
	// You have sent a request which could not be understood.
	FourHundredErrorObject *GetAtms400ErrorObject
	// Your client has failed to submit a request, and a timeout has occurred.
	FourHundredAndEightErrorObject *GetAtms408ErrorObject
	// You have requested this resource too often. Slow down.
	FourHundredAndTwentyNineErrorObject *GetAtms429ErrorObject
	// An error occurred on the server. No further information is available.
	FiveHundredErrorObject *GetAtms500ErrorObject
	// The service is temporarily unavailable.
	FiveHundredAndThreeErrorObject *GetAtms503ErrorObject
	ContentType                    string
	// A standard error response.
	ErrorObject *GetAtmsErrorObject
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful response with a list of `ATM` data
	GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSONObject *GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJSON
}
