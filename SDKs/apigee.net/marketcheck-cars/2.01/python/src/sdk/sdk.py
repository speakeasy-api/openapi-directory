"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .car_cached_image import CarCachedImage
from .car_search import CarSearch
from .cars_history_api import CarsHistoryAPI
from .cars_market_api import CarsMarketAPI
from .client_filters import ClientFilters
from .crm_cleanse_api import CRMCleanseAPI
from .dealer_api import DealerAPI
from .heavy_equipment_search import HeavyEquipmentSearch
from .motorcycle_search import MotorcycleSearch
from .oem_incentive_search import OEMIncentiveSearch
from .rank_car_listings import RankCarListings
from .recall_search import RecallSearch
from .rv_search import RVSearch
from .vin_decoder_api import VINDecoderAPI
from sdk.models import shared

SERVERS = [
    "https://marketcheck-prod.apigee.net/v2",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""One API serving data spanned across multiple verticals"""
    crm_cleanse_api: CRMCleanseAPI
    car_cached_image: CarCachedImage
    car_search: CarSearch
    cars_history_api: CarsHistoryAPI
    cars_market_api: CarsMarketAPI
    dealer_api: DealerAPI
    heavy_equipment_search: HeavyEquipmentSearch
    motorcycle_search: MotorcycleSearch
    oem_incentive_search: OEMIncentiveSearch
    rv_search: RVSearch
    rank_car_listings: RankCarListings
    recall_search: RecallSearch
    vin_decoder_api: VINDecoderAPI
    client_filters: ClientFilters

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 security: shared.Security = None,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param security: The security details required for authentication
        :type security: shared.Security
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = utils.configure_security_client(self._client, security)
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.crm_cleanse_api = CRMCleanseAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.car_cached_image = CarCachedImage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.car_search = CarSearch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cars_history_api = CarsHistoryAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cars_market_api = CarsMarketAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.dealer_api = DealerAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.heavy_equipment_search = HeavyEquipmentSearch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.motorcycle_search = MotorcycleSearch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.oem_incentive_search = OEMIncentiveSearch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rv_search = RVSearch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.rank_car_listings = RankCarListings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.recall_search = RecallSearch(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vin_decoder_api = VINDecoderAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.client_filters = ClientFilters(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    