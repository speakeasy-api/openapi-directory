"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import guestattributesvalue as shared_guestattributesvalue
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GuestAttributes:
    r"""A guest attributes."""
    
    query_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryPath'), 'exclude': lambda f: f is None }})
    r"""The path to be queried. This can be the default namespace ('/') or a nested namespace ('/\/') or a specified key ('/\/\')"""  
    query_value: Optional[shared_guestattributesvalue.GuestAttributesValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryValue'), 'exclude': lambda f: f is None }})
    r"""Array of guest attribute namespace/key/value tuples."""  
    