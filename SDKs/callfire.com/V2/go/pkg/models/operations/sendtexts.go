// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SendTextsSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type SendTextsRequest struct {
	// List of TextRecipient objects. By recipient we mean either phone number or contact with user-defined attributes added to action. Text messaging supports media files, provide a list of ids of media files for recipient to attach media to the message.
	RequestBody []shared.TextRecipient `request:"mediaType=application/json"`
	// Specifies a campaignId to send texts through a previously created campaign
	CampaignID *int64 `queryParam:"style=form,explode=true,name=campaignId"`
	// Text message can be overridden by TextRecipient.message field. If multiple recipients have the same text message to a different recipients it is better to specify a single default message and do not duplicate it in each recipient.
	DefaultMessage *string `queryParam:"style=form,explode=true,name=defaultMessage"`
	// Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Turns on strict validation for recipients
	StrictValidation *bool `queryParam:"style=form,explode=true,name=strictValidation"`
}

type SendTextsResponse struct {
	ContentType string
	// Bad request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// successful operation
	TextList *shared.TextList
}
