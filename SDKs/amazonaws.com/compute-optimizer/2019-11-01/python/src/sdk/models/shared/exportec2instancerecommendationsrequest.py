"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import exportableinstancefield_enum as shared_exportableinstancefield_enum
from ..shared import fileformat_enum as shared_fileformat_enum
from ..shared import filter as shared_filter
from ..shared import recommendationpreferences as shared_recommendationpreferences
from ..shared import s3destinationconfig as shared_s3destinationconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportEc2InstanceRecommendationsRequest:
    
    s3_destination_config: shared_s3destinationconfig.S3DestinationConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('s3DestinationConfig') }})  
    account_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountIds'), 'exclude': lambda f: f is None }})  
    fields_to_export: Optional[list[shared_exportableinstancefield_enum.ExportableInstanceFieldEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldsToExport'), 'exclude': lambda f: f is None }})  
    file_format: Optional[shared_fileformat_enum.FileFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileFormat'), 'exclude': lambda f: f is None }})  
    filters: Optional[list[shared_filter.Filter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filters'), 'exclude': lambda f: f is None }})  
    include_member_accounts: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includeMemberAccounts'), 'exclude': lambda f: f is None }})  
    recommendation_preferences: Optional[shared_recommendationpreferences.RecommendationPreferences] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recommendationPreferences'), 'exclude': lambda f: f is None }})  
    