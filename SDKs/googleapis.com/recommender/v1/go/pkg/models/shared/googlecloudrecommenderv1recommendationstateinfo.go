// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRecommenderV1RecommendationStateInfoStateEnum - The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.
type GoogleCloudRecommenderV1RecommendationStateInfoStateEnum string

const (
	GoogleCloudRecommenderV1RecommendationStateInfoStateEnumStateUnspecified GoogleCloudRecommenderV1RecommendationStateInfoStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudRecommenderV1RecommendationStateInfoStateEnumActive           GoogleCloudRecommenderV1RecommendationStateInfoStateEnum = "ACTIVE"
	GoogleCloudRecommenderV1RecommendationStateInfoStateEnumClaimed          GoogleCloudRecommenderV1RecommendationStateInfoStateEnum = "CLAIMED"
	GoogleCloudRecommenderV1RecommendationStateInfoStateEnumSucceeded        GoogleCloudRecommenderV1RecommendationStateInfoStateEnum = "SUCCEEDED"
	GoogleCloudRecommenderV1RecommendationStateInfoStateEnumFailed           GoogleCloudRecommenderV1RecommendationStateInfoStateEnum = "FAILED"
	GoogleCloudRecommenderV1RecommendationStateInfoStateEnumDismissed        GoogleCloudRecommenderV1RecommendationStateInfoStateEnum = "DISMISSED"
)

func (e *GoogleCloudRecommenderV1RecommendationStateInfoStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "CLAIMED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "DISMISSED":
		*e = GoogleCloudRecommenderV1RecommendationStateInfoStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRecommenderV1RecommendationStateInfoStateEnum: %s", s)
	}
}

// GoogleCloudRecommenderV1RecommendationStateInfo - Information for state. Contains state and metadata.
type GoogleCloudRecommenderV1RecommendationStateInfo struct {
	// The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.
	State *GoogleCloudRecommenderV1RecommendationStateInfoStateEnum `json:"state,omitempty"`
	// A map of metadata for the state, provided by user or automations systems.
	StateMetadata map[string]string `json:"stateMetadata,omitempty"`
}
