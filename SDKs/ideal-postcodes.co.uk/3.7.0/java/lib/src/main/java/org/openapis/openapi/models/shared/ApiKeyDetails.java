/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ApiKeyDetails {
    /**
     * A list of allowed URLs. An empty list means that allowed URLs are disabled.
     */
    @JsonProperty("allowed_urls")
    public String[] allowedUrls;
    public ApiKeyDetails withAllowedUrls(String[] allowedUrls) {
        this.allowedUrls = allowedUrls;
        return this;
    }
    
    /**
     * Automated topup status
     */
    @JsonProperty("automated_topups")
    public ApiKeyAutomatedTopup automatedTopups;
    public ApiKeyDetails withAutomatedTopups(ApiKeyAutomatedTopup automatedTopups) {
        this.automatedTopups = automatedTopups;
        return this;
    }
    
    /**
     * Current balance purchases attached to key.
     */
    @JsonProperty("current_purchases")
    public ApiKeyCurrentPurchase[] currentPurchases;
    public ApiKeyDetails withCurrentPurchases(ApiKeyCurrentPurchase[] currentPurchases) {
        this.currentPurchases = currentPurchases;
        return this;
    }
    
    @JsonProperty("daily_limit")
    public ApiKeyDailyLimit dailyLimit;
    public ApiKeyDetails withDailyLimit(ApiKeyDailyLimit dailyLimit) {
        this.dailyLimit = dailyLimit;
        return this;
    }
    
    /**
     * Indicates which datasets are available and added by default to the address responses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasets")
    public ApiKeyDatasets datasets;
    public ApiKeyDetails withDatasets(ApiKeyDatasets datasets) {
        this.datasets = datasets;
        return this;
    }
    
    @JsonProperty("individual_limit")
    public ApiKeyIndividualLimit individualLimit;
    public ApiKeyDetails withIndividualLimit(ApiKeyIndividualLimit individualLimit) {
        this.individualLimit = individualLimit;
        return this;
    }
    
    @JsonProperty("lookups_remaining")
    public Integer lookupsRemaining;
    public ApiKeyDetails withLookupsRemaining(Integer lookupsRemaining) {
        this.lookupsRemaining = lookupsRemaining;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifications")
    public ApiKeyNotifications notifications;
    public ApiKeyDetails withNotifications(ApiKeyNotifications notifications) {
        this.notifications = notifications;
        return this;
    }
    
}
