/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class RegistryUpdateApiVersionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  apiVersionInput: shared.ApiVersionInput;

  /**
   * If set to true, and the version is not found, a new version will be created. In this situation, `update_mask` is ignored.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allowMissing",
  })
  allowMissing?: boolean;

  /**
   * The api id.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=api" })
  api: string;

  /**
   * The location id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=location",
  })
  location: string;

  /**
   * The project id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project",
  })
  project: string;

  /**
   * The list of fields to be updated. If omitted, all fields are updated that are set in the request message (fields set to default values are ignored). If a "*" is specified, all fields are updated, including fields that are unspecified/default in the request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updateMask",
  })
  updateMask?: string;

  /**
   * The version id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=version",
  })
  version: string;
}

export class RegistryUpdateApiVersionResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  apiVersion?: shared.ApiVersion;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Default error response
   */
  @SpeakeasyMetadata()
  status?: shared.Status;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
