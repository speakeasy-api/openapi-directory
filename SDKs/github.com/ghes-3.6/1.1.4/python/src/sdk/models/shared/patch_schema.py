"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PatchSchemaOperationsOpEnum(str, Enum):
    ADD = 'add'
    REPLACE = 'replace'
    REMOVE = 'remove'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchSchemaOperations:
    
    op: PatchSchemaOperationsOpEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('op') }})  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Corresponding 'value' of that field specified by 'path'"""  
    
class PatchSchemaSchemasEnum(str, Enum):
    URN_IETF_PARAMS_SCIM_API_MESSAGES_2_0_PATCH_OP = 'urn:ietf:params:scim:api:messages:2.0:PatchOp'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatchSchema:
    
    operations: list[PatchSchemaOperations] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Operations') }})
    r"""patch operations list"""  
    schemas: list[PatchSchemaSchemasEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas') }})  
    