/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LogDescriptor - A description of a log type. Example in YAML format: - name: library.googleapis.com/activity_history description: The history of borrowing and returning library items. display_name: Activity labels: - key: /customer_id description: Identifier of a library customer
 */
public class LogDescriptor {
    /**
     * A human-readable description of this log. This information appears in the documentation and can contain details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public LogDescriptor withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The human-readable name for this log. This information appears on the user interface and should be concise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public LogDescriptor withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The set of labels that are available to describe a specific log entry. Runtime requests that contain labels not specified here are considered invalid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public LabelDescriptor[] labels;

    public LogDescriptor withLabels(LabelDescriptor[] labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The name of the log. It must be less than 512 characters long and can include the following characters: upper- and lower-case alphanumeric characters [A-Za-z0-9], and punctuation characters including slash, underscore, hyphen, period [/_-.].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public LogDescriptor withName(String name) {
        this.name = name;
        return this;
    }
    
    public LogDescriptor(){}
}
