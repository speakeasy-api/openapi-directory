"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import status as shared_status
from typing import Optional


@dataclasses.dataclass
class GetAPIV1AccountsIDStatusesSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAPIV1AccountsIDStatusesRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The id of the account in the database"""  
    

@dataclasses.dataclass
class GetAPIV1AccountsIDStatusesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Instance is in whitelist mode or running a version of Mastodon older than 2.7.0, and the Authorization header is invalid or missing"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    statuses: Optional[list[shared_status.Status]] = dataclasses.field(default=None)
    r"""Statuses posted to the given account. Public (for public statuses only), or user token + read:statuses (for private statuses the user is authorized to see)"""  
    