/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProductDetailsApiModel {
    /**
     * Product short link
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessToken")
    public String accessToken;

    public ProductDetailsApiModel withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * After payment description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AfterPaymentDescription")
    public String afterPaymentDescription;

    public ProductDetailsApiModel withAfterPaymentDescription(String afterPaymentDescription) {
        this.afterPaymentDescription = afterPaymentDescription;
        return this;
    }
    
    /**
     * Default button call to action
     * Ex: Buy now, subscribe, ...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ButtonCallToAction")
    public String buttonCallToAction;

    public ProductDetailsApiModel withButtonCallToAction(String buttonCallToAction) {
        this.buttonCallToAction = buttonCallToAction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Currency")
    public CurrencyDetailsApiModel currency;

    public ProductDetailsApiModel withCurrency(CurrencyDetailsApiModel currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Foreign key Currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrencyId")
    public Integer currencyId;

    public ProductDetailsApiModel withCurrencyId(Integer currencyId) {
        this.currencyId = currencyId;
        return this;
    }
    
    /**
     * Product description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public ProductDetailsApiModel withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Product id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;

    public ProductDetailsApiModel withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicate that the product is set as featured
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsFeatured")
    public Boolean isFeatured;

    public ProductDetailsApiModel withIsFeatured(Boolean isFeatured) {
        this.isFeatured = isFeatured;
        return this;
    }
    
    /**
     * Product alias
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public ProductDetailsApiModel withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Cost for shipping the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingAmount")
    public Double shippingAmount;

    public ProductDetailsApiModel withShippingAmount(Double shippingAmount) {
        this.shippingAmount = shippingAmount;
        return this;
    }
    
    /**
     * Client instructions for shipping
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingDescription")
    public String shippingDescription;

    public ProductDetailsApiModel withShippingDescription(String shippingDescription) {
        this.shippingDescription = shippingDescription;
        return this;
    }
    
    /**
     * Product availability status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public ProductDetailsApiModelStatusEnum status;

    public ProductDetailsApiModel withStatus(ProductDetailsApiModelStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subtotal amount of product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubTotalAmount")
    public Double subTotalAmount;

    public ProductDetailsApiModel withSubTotalAmount(Double subTotalAmount) {
        this.subTotalAmount = subTotalAmount;
        return this;
    }
    
    /**
     * Total amount of product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalAmount")
    public Double totalAmount;

    public ProductDetailsApiModel withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * Total amount of product with shipping
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalWithShipping")
    public Double totalWithShipping;

    public ProductDetailsApiModel withTotalWithShipping(Double totalWithShipping) {
        this.totalWithShipping = totalWithShipping;
        return this;
    }
    
    /**
     * What happens next description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WhatHappensNextDescription")
    public String whatHappensNextDescription;

    public ProductDetailsApiModel withWhatHappensNextDescription(String whatHappensNextDescription) {
        this.whatHappensNextDescription = whatHappensNextDescription;
        return this;
    }
    
    public ProductDetailsApiModel(){}
}
