// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DfareportingRemarketingListsListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// DfareportingRemarketingListsListSortFieldEnum - Field by which to sort the list.
type DfareportingRemarketingListsListSortFieldEnum string

const (
	DfareportingRemarketingListsListSortFieldEnumID   DfareportingRemarketingListsListSortFieldEnum = "ID"
	DfareportingRemarketingListsListSortFieldEnumName DfareportingRemarketingListsListSortFieldEnum = "NAME"
)

func (e DfareportingRemarketingListsListSortFieldEnum) ToPointer() *DfareportingRemarketingListsListSortFieldEnum {
	return &e
}

func (e *DfareportingRemarketingListsListSortFieldEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ID":
		fallthrough
	case "NAME":
		*e = DfareportingRemarketingListsListSortFieldEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingRemarketingListsListSortFieldEnum: %v", v)
	}
}

// DfareportingRemarketingListsListSortOrderEnum - Order of sorted results.
type DfareportingRemarketingListsListSortOrderEnum string

const (
	DfareportingRemarketingListsListSortOrderEnumAscending  DfareportingRemarketingListsListSortOrderEnum = "ASCENDING"
	DfareportingRemarketingListsListSortOrderEnumDescending DfareportingRemarketingListsListSortOrderEnum = "DESCENDING"
)

func (e DfareportingRemarketingListsListSortOrderEnum) ToPointer() *DfareportingRemarketingListsListSortOrderEnum {
	return &e
}

func (e *DfareportingRemarketingListsListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DfareportingRemarketingListsListSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingRemarketingListsListSortOrderEnum: %v", v)
	}
}

type DfareportingRemarketingListsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Select only active or only inactive remarketing lists.
	Active *bool `queryParam:"style=form,explode=true,name=active"`
	// Select only remarketing lists owned by this advertiser.
	AdvertiserID string `queryParam:"style=form,explode=true,name=advertiserId"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Select only remarketing lists that have this floodlight activity ID.
	FloodlightActivityID *string `queryParam:"style=form,explode=true,name=floodlightActivityId"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "remarketing list*2015" will return objects with names like "remarketing list June 2015", "remarketing list April 2015", or simply "remarketing list 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of "remarketing list" will match objects with name "my remarketing list", "remarketing list 2015", or simply "remarketing list".
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Value of the nextPageToken from the previous result page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// User profile ID associated with this request.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Field by which to sort the list.
	SortField *DfareportingRemarketingListsListSortFieldEnum `queryParam:"style=form,explode=true,name=sortField"`
	// Order of sorted results.
	SortOrder *DfareportingRemarketingListsListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DfareportingRemarketingListsListResponse struct {
	ContentType string
	// Successful response
	RemarketingListsListResponse *shared.RemarketingListsListResponse
	StatusCode                   int
	RawResponse                  *http.Response
}
