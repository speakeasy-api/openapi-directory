/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CancelJobExecutionQueryParams {
    /**
     * &lt;p&gt;(Optional) If &lt;code&gt;true&lt;/code&gt; the job execution will be canceled if it has status IN_PROGRESS or QUEUED, otherwise the job execution will be canceled only if it has status QUEUED. If you attempt to cancel a job execution that is IN_PROGRESS, and you do not set &lt;code&gt;force&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, then an &lt;code&gt;InvalidStateTransitionException&lt;/code&gt; will be thrown. The default is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Canceling a job execution which is "IN_PROGRESS", will cause the device to be unable to update the job execution status. Use caution and ensure that the device is able to recover to a valid state.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=force")
    public Boolean force;
    public CancelJobExecutionQueryParams withForce(Boolean force) {
        this.force = force;
        return this;
    }
    
}
