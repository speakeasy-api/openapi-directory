// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// LastTermPeriodTypeEnum - Specify only when the termType is 'TERMED'.
type LastTermPeriodTypeEnum string

const (
	LastTermPeriodTypeEnumMonth LastTermPeriodTypeEnum = "Month"
	LastTermPeriodTypeEnumYear  LastTermPeriodTypeEnum = "Year"
	LastTermPeriodTypeEnumDay   LastTermPeriodTypeEnum = "Day"
	LastTermPeriodTypeEnumWeek  LastTermPeriodTypeEnum = "Week"
)

func (e *LastTermPeriodTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Month":
		fallthrough
	case "Year":
		fallthrough
	case "Day":
		fallthrough
	case "Week":
		*e = LastTermPeriodTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LastTermPeriodTypeEnum: %s", s)
	}
}

type LastTermTermTypeEnum string

const (
	LastTermTermTypeEnumTermed    LastTermTermTypeEnum = "TERMED"
	LastTermTermTypeEnumEvergreen LastTermTermTypeEnum = "EVERGREEN"
)

func (e *LastTermTermTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TERMED":
		fallthrough
	case "EVERGREEN":
		*e = LastTermTermTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LastTermTermTypeEnum: %s", s)
	}
}

// LastTerm - The length of the period for the current subscription term.
type LastTerm struct {
	// Specify only when the termType is 'TERMED'.
	Period *int64 `json:"period,omitempty"`
	// Specify only when the termType is 'TERMED'.
	PeriodType *LastTermPeriodTypeEnum `json:"periodType,omitempty"`
	// The start date of the current term. You can change the term start date of a renewed subscription through a T&Cs order action. However, when changing it to an earlier date, this date must not be earlier than the term start date of the current term before this T&Cs.
	//
	StartDate *types.Date          `json:"startDate,omitempty"`
	TermType  LastTermTermTypeEnum `json:"termType"`
}
