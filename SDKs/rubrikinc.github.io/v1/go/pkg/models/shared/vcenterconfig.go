// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VcenterConfigConflictResolutionAuthzEnum - Set to 'AllowAutoConflictResolution' to link the relic virtual machine objects of a virtual machine to the current object for the virtual machine or to 'NoConflictResolution' to prevent linking. The Rubrik cluster generates a unique ID for each virtual machine when a vCenter Server is added. When a virtual machine changes to another vCenter Server or unregisters and registers with the same vCenter Server, a new unique ID is generated for that virtual machine. When this happens, the virtual machine object associated with the original ID becomes a relic. This option links relic virtual machine objects with the current virtual machine object of a specific virtual machine, and makes the collective snapshot history available through the current object. Default value is 'NoConflictResolution'.
type VcenterConfigConflictResolutionAuthzEnum string

const (
	VcenterConfigConflictResolutionAuthzEnumAllowAutoConflictResolution VcenterConfigConflictResolutionAuthzEnum = "AllowAutoConflictResolution"
	VcenterConfigConflictResolutionAuthzEnumNoConflictResolution        VcenterConfigConflictResolutionAuthzEnum = "NoConflictResolution"
)

func (e VcenterConfigConflictResolutionAuthzEnum) ToPointer() *VcenterConfigConflictResolutionAuthzEnum {
	return &e
}

func (e *VcenterConfigConflictResolutionAuthzEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AllowAutoConflictResolution":
		fallthrough
	case "NoConflictResolution":
		*e = VcenterConfigConflictResolutionAuthzEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VcenterConfigConflictResolutionAuthzEnum: %v", v)
	}
}

// VcenterConfig - IP address and account credentials of the vCenter Server server, and ID of the managing Rubrik cluster.
type VcenterConfig struct {
	// Concatenated X.509 certificates in Base64 encoded DER format. Each certificate must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----.
	CaCerts *string `json:"caCerts,omitempty"`
	// Select compute clusters that must be visible to this Rubrik cluster. All other compute resources are hidden. If 'computeVisibilityFilter' is not specified, all resources are visible. If 'hostGroupFilter' is not specified for a compute cluster, all compute resources in the compute cluster are visible. If 'hostGroupFilter' is specified for a compute cluster, only virtual machinesthat currently reside on these hosts are visible. For the stretched cluster configuration (vMSC), specify the appropriate host groups.
	ComputeVisibilityFilter []ClusterVisibilityConfig `json:"computeVisibilityFilter,omitempty"`
	// Set to 'AllowAutoConflictResolution' to link the relic virtual machine objects of a virtual machine to the current object for the virtual machine or to 'NoConflictResolution' to prevent linking. The Rubrik cluster generates a unique ID for each virtual machine when a vCenter Server is added. When a virtual machine changes to another vCenter Server or unregisters and registers with the same vCenter Server, a new unique ID is generated for that virtual machine. When this happens, the virtual machine object associated with the original ID becomes a relic. This option links relic virtual machine objects with the current virtual machine object of a specific virtual machine, and makes the collective snapshot history available through the current object. Default value is 'NoConflictResolution'.
	ConflictResolutionAuthz *VcenterConfigConflictResolutionAuthzEnum `json:"conflictResolutionAuthz,omitempty"`
	Hostname                string                                    `json:"hostname"`
	Password                string                                    `json:"password"`
	Username                string                                    `json:"username"`
}
