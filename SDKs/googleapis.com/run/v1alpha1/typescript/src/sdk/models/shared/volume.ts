/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigMapVolumeSource } from "./configmapvolumesource";
import { SecretVolumeSource } from "./secretvolumesource";
import { Expose, Type } from "class-transformer";

/**
 * Volume represents a named volume in a container.
 */
export class Volume extends SpeakeasyBase {
  /**
   * Not supported by Cloud Run Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configMap" })
  @Type(() => ConfigMapVolumeSource)
  configMap?: ConfigMapVolumeSource;

  /**
   * Volume's name. In Cloud Run Fully Managed, the name 'cloudsql' is reserved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret_name. The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  @Type(() => SecretVolumeSource)
  secret?: SecretVolumeSource;
}
