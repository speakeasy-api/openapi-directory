/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Category } from "./category";
import { Collection } from "./collection";
import { File } from "./file";
import { Logo } from "./logo";
import { Media } from "./media";
import { Partner } from "./partner";
import { Product } from "./product";
import { Screenshot } from "./screenshot";
import { Translation } from "./translation";
import { Expose, Transform, Type } from "class-transformer";

export class Listing extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "automate_id" })
  automateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "blendr_id" })
  blendrId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "card_background_color" })
  cardBackgroundColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "card_background_image" })
  @Type(() => File)
  cardBackgroundImage?: File;

  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "categories" })
  @Type(() => Category)
  categories?: Category[];

  @SpeakeasyMetadata()
  @Expose({ name: "cloud_service_id" })
  cloudServiceId?: string;

  @SpeakeasyMetadata({ elemType: Collection })
  @Expose({ name: "collections" })
  @Type(() => Collection)
  collections?: Collection[];

  @SpeakeasyMetadata()
  @Expose({ name: "combidesk_id" })
  combideskId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detail_page_disabled" })
  detailPageDisabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "external_id" })
  externalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "features" })
  features?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "integromat_id" })
  integromatId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logo" })
  @Type(() => Logo)
  logo?: Logo;

  @SpeakeasyMetadata({ elemType: Media })
  @Expose({ name: "media" })
  @Type(() => Media)
  media?: Media[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta_tag_description" })
  metaTagDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta_tag_keywords" })
  metaTagKeywords?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta_tag_title" })
  metaTagTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "microsoft_flow_id" })
  microsoftFlowId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "native_integration" })
  nativeIntegration?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "native_integration_link" })
  nativeIntegrationLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "partner" })
  @Type(() => Partner)
  partner?: Partner;

  @SpeakeasyMetadata()
  @Expose({ name: "piesync_id" })
  piesyncId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pricing" })
  pricing?: string;

  @SpeakeasyMetadata({ elemType: Product })
  @Expose({ name: "products" })
  @Type(() => Product)
  products?: Product[];

  @SpeakeasyMetadata()
  @Expose({ name: "published" })
  published?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "published_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishedAt?: Date;

  @SpeakeasyMetadata({ elemType: Screenshot })
  @Expose({ name: "screenshots" })
  @Type(() => Screenshot)
  screenshots?: Screenshot[];

  @SpeakeasyMetadata()
  @Expose({ name: "segment_id" })
  segmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sticky" })
  sticky?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "tag_line" })
  tagLine?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "third_party_integration" })
  thirdPartyIntegration?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "third_party_integration_link" })
  thirdPartyIntegrationLink?: string;

  @SpeakeasyMetadata({ elemType: Translation })
  @Expose({ name: "translations" })
  @Type(() => Translation)
  translations?: Translation[];

  @SpeakeasyMetadata()
  @Expose({ name: "tray_io_id" })
  trayIoId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unify_connector_id" })
  unifyConnectorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "upcoming" })
  upcoming?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "zapier_id" })
  zapierId?: string;
}
