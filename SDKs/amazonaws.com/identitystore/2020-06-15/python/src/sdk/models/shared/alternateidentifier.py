"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import externalid as shared_externalid
from ..shared import uniqueattribute as shared_uniqueattribute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlternateIdentifier:
    r"""A unique identifier for a user or group that is not the primary identifier. This value can be an identifier from an external identity provider (IdP) that is associated with the user, the group, or a unique attribute. For example, a unique <code>GroupDisplayName</code>."""
    
    external_id: Optional[shared_externalid.ExternalID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExternalId'), 'exclude': lambda f: f is None }})  
    unique_attribute: Optional[shared_uniqueattribute.UniqueAttribute] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UniqueAttribute'), 'exclude': lambda f: f is None }})  
    