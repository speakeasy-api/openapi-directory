"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import proxy_v1_service as shared_proxy_v1_service
from ..shared import service_enum_geo_match_level_enum as shared_service_enum_geo_match_level_enum
from ..shared import service_enum_number_selection_behavior_enum as shared_service_enum_number_selection_behavior_enum
from typing import Optional

CREATE_SERVICE_SERVERS = [
	"https://proxy.twilio.com",
]


@dataclasses.dataclass
class CreateServiceSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateServiceCreateServiceRequest:
    
    unique_name: str = dataclasses.field(metadata={'form': { 'field_name': 'UniqueName' }})
    r"""An application-defined string that uniquely identifies the resource. This value must be 191 characters or fewer in length and be unique. **This value should not have PII.**"""  
    callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackUrl' }})
    r"""The URL we should call when the interaction status changes."""  
    chat_instance_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ChatInstanceSid' }})
    r"""The SID of the Chat Service Instance managed by Proxy Service. The Chat Service enables Proxy to forward SMS and channel messages to this chat instance. This is a one-to-one relationship."""  
    default_ttl: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DefaultTtl' }})
    r"""The default `ttl` value to set for Sessions created in the Service. The TTL (time to live) is measured in seconds after the Session's last create or last Interaction. The default value of `0` indicates an unlimited Session length. You can override a Session's default TTL value by setting its `ttl` value."""  
    geo_match_level: Optional[shared_service_enum_geo_match_level_enum.ServiceEnumGeoMatchLevelEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'GeoMatchLevel' }})  
    intercept_callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'InterceptCallbackUrl' }})
    r"""The URL we call on each interaction. If we receive a 403 status, we block the interaction; otherwise the interaction continues."""  
    number_selection_behavior: Optional[shared_service_enum_number_selection_behavior_enum.ServiceEnumNumberSelectionBehaviorEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'NumberSelectionBehavior' }})  
    out_of_session_callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'OutOfSessionCallbackUrl' }})
    r"""The URL we should call when an inbound call or SMS action occurs on a closed or non-existent Session. If your server (or a Twilio [function](https://www.twilio.com/functions)) responds with valid [TwiML](https://www.twilio.com/docs/voice/twiml), we will process it. This means it is possible, for example, to play a message for a call, send an automated text message response, or redirect a call to another Phone Number. See [Out-of-Session Callback Response Guide](https://www.twilio.com/docs/proxy/out-session-callback-response-guide) for more information."""  
    

@dataclasses.dataclass
class CreateServiceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    proxy_v1_service: Optional[shared_proxy_v1_service.ProxyV1Service] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    