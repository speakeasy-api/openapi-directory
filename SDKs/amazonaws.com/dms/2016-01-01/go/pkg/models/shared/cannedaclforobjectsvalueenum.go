// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CannedACLForObjectsValueEnum string

const (
	CannedACLForObjectsValueEnumNone                   CannedACLForObjectsValueEnum = "none"
	CannedACLForObjectsValueEnumPrivate                CannedACLForObjectsValueEnum = "private"
	CannedACLForObjectsValueEnumPublicRead             CannedACLForObjectsValueEnum = "public-read"
	CannedACLForObjectsValueEnumPublicReadWrite        CannedACLForObjectsValueEnum = "public-read-write"
	CannedACLForObjectsValueEnumAuthenticatedRead      CannedACLForObjectsValueEnum = "authenticated-read"
	CannedACLForObjectsValueEnumAwsExecRead            CannedACLForObjectsValueEnum = "aws-exec-read"
	CannedACLForObjectsValueEnumBucketOwnerRead        CannedACLForObjectsValueEnum = "bucket-owner-read"
	CannedACLForObjectsValueEnumBucketOwnerFullControl CannedACLForObjectsValueEnum = "bucket-owner-full-control"
)

func (e CannedACLForObjectsValueEnum) ToPointer() *CannedACLForObjectsValueEnum {
	return &e
}

func (e *CannedACLForObjectsValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "private":
		fallthrough
	case "public-read":
		fallthrough
	case "public-read-write":
		fallthrough
	case "authenticated-read":
		fallthrough
	case "aws-exec-read":
		fallthrough
	case "bucket-owner-read":
		fallthrough
	case "bucket-owner-full-control":
		*e = CannedACLForObjectsValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CannedACLForObjectsValueEnum: %v", v)
	}
}
