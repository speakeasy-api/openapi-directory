// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CandidateStepTypeEnum string

const (
	CandidateStepTypeEnumAwsSageMakerTrainingJob   CandidateStepTypeEnum = "AWS::SageMaker::TrainingJob"
	CandidateStepTypeEnumAwsSageMakerTransformJob  CandidateStepTypeEnum = "AWS::SageMaker::TransformJob"
	CandidateStepTypeEnumAwsSageMakerProcessingJob CandidateStepTypeEnum = "AWS::SageMaker::ProcessingJob"
)

func (e CandidateStepTypeEnum) ToPointer() *CandidateStepTypeEnum {
	return &e
}

func (e *CandidateStepTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS::SageMaker::TrainingJob":
		fallthrough
	case "AWS::SageMaker::TransformJob":
		fallthrough
	case "AWS::SageMaker::ProcessingJob":
		*e = CandidateStepTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CandidateStepTypeEnum: %v", v)
	}
}
