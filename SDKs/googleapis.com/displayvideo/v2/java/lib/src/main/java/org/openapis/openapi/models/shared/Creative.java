/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Creative - A single Creative.
 */
public class Creative {
    /**
     * Additional dimensions. Applicable when creative_type is one of: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_LIGHTBOX` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_PUBLISHER_HOSTED` If this field is specified, width_pixels and height_pixels are both required and must be greater than or equal to 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalDimensions")
    public Dimensions[] additionalDimensions;
    public Creative withAdditionalDimensions(Dimensions[] additionalDimensions) {
        this.additionalDimensions = additionalDimensions;
        return this;
    }
    
    /**
     * Output only. The unique ID of the advertiser the creative belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;
    public Creative withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * Third-party HTML tracking tag to be appended to the creative tag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appendedTag")
    public String appendedTag;
    public Creative withAppendedTag(String appendedTag) {
        this.appendedTag = appendedTag;
        return this;
    }
    
    /**
     * Required. Assets associated to this creative. Assets can be associated to the creative in one of following roles: * `ASSET_ROLE_UNSPECIFIED` * `ASSET_ROLE_MAIN` * `ASSET_ROLE_BACKUP` * `ASSET_ROLE_POLITE_LOAD`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assets")
    public AssetAssociation[] assets;
    public Creative withAssets(AssetAssociation[] assets) {
        this.assets = assets;
        return this;
    }
    
    /**
     * Output only. The unique ID of the Campaign Manager 360 placement associated with the creative. This field is only applicable for creatives that are synced from Campaign Manager.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cmPlacementId")
    public String cmPlacementId;
    public Creative withCmPlacementId(String cmPlacementId) {
        this.cmPlacementId = cmPlacementId;
        return this;
    }
    
    /**
     * A Campaign Manager 360 tracking ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cmTrackingAd")
    public CmTrackingAd cmTrackingAd;
    public Creative withCmTrackingAd(CmTrackingAd cmTrackingAd) {
        this.cmTrackingAd = cmTrackingAd;
        return this;
    }
    
    /**
     * The IDs of companion creatives for a video creative. You can assign existing display creatives (with image or HTML5 assets) to serve surrounding the publisher's video player. Companions display around the video player while the video is playing and remain after the video has completed. Creatives contain additional dimensions can not be companion creatives. This field is only supported for following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companionCreativeIds")
    public String[] companionCreativeIds;
    public Creative withCompanionCreativeIds(String[] companionCreativeIds) {
        this.companionCreativeIds = companionCreativeIds;
        return this;
    }
    
    /**
     * Counter events for a rich media creative. Counters track the number of times that a user interacts with any part of a rich media creative in a specified way (mouse-overs, mouse-outs, clicks, taps, data loading, keyboard entries, etc.). Any event that can be captured in the creative can be recorded as a counter. Leave it empty or unset for creatives containing image assets only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("counterEvents")
    public CounterEvent[] counterEvents;
    public Creative withCounterEvents(CounterEvent[] counterEvents) {
        this.counterEvents = counterEvents;
        return this;
    }
    
    /**
     * Output only. The timestamp when the creative was created. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Creative withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. A list of attributes of the creative that is generated by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeAttributes")
    public CreativeCreativeAttributesEnum[] creativeAttributes;
    public Creative withCreativeAttributes(CreativeCreativeAttributesEnum[] creativeAttributes) {
        this.creativeAttributes = creativeAttributes;
        return this;
    }
    
    /**
     * Output only. The unique ID of the creative. Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeId")
    public String creativeId;
    public Creative withCreativeId(String creativeId) {
        this.creativeId = creativeId;
        return this;
    }
    
    /**
     * Required. Immutable. The type of the creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeType")
    public CreativeCreativeTypeEnum creativeType;
    public Creative withCreativeType(CreativeCreativeTypeEnum creativeType) {
        this.creativeType = creativeType;
        return this;
    }
    
    /**
     * Dimensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public Dimensions dimensions;
    public Creative withDimensions(Dimensions dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * Required. The display name of the creative. Must be UTF-8 encoded with a maximum size of 240 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public Creative withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Output only. Indicates whether the creative is dynamic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamic")
    public Boolean dynamic;
    public Creative withDynamic(Boolean dynamic) {
        this.dynamic = dynamic;
        return this;
    }
    
    /**
     * Required. Controls whether or not the creative can serve. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED` * `ENTITY_STATUS_PAUSED`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityStatus")
    public CreativeEntityStatusEnum entityStatus;
    public Creative withEntityStatus(CreativeEntityStatusEnum entityStatus) {
        this.entityStatus = entityStatus;
        return this;
    }
    
    /**
     * Required. Exit events for this creative. An exit (also known as a click tag) is any area in your creative that someone can click or tap to open an advertiser's landing page. Every creative must include at least one exit. You can add an exit to your creative in any of the following ways: * Use Google Web Designer's tap area. * Define a JavaScript variable called "clickTag". * Use the Enabler (Enabler.exit()) to track exits in rich media formats.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exitEvents")
    public ExitEvent[] exitEvents;
    public Creative withExitEvents(ExitEvent[] exitEvents) {
        this.exitEvents = exitEvents;
        return this;
    }
    
    /**
     * Optional. Indicates the creative will automatically expand on hover. Optional and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expandOnHover")
    public Boolean expandOnHover;
    public Creative withExpandOnHover(Boolean expandOnHover) {
        this.expandOnHover = expandOnHover;
        return this;
    }
    
    /**
     * Optional. Specifies the expanding direction of the creative. Required and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expandingDirection")
    public CreativeExpandingDirectionEnum expandingDirection;
    public Creative withExpandingDirection(CreativeExpandingDirectionEnum expandingDirection) {
        this.expandingDirection = expandingDirection;
        return this;
    }
    
    /**
     * Required. Indicates where the creative is hosted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostingSource")
    public CreativeHostingSourceEnum hostingSource;
    public Creative withHostingSource(CreativeHostingSourceEnum hostingSource) {
        this.hostingSource = hostingSource;
        return this;
    }
    
    /**
     * Output only. Indicates the third-party VAST tag creative requires HTML5 Video support. Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html5Video")
    public Boolean html5Video;
    public Creative withHtml5Video(Boolean html5Video) {
        this.html5Video = html5Video;
        return this;
    }
    
    /**
     * Indicates whether Integral Ad Science (IAS) campaign monitoring is enabled. To enable this for the creative, make sure the Advertiser.creative_config.ias_client_id has been set to your IAS client ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iasCampaignMonitoring")
    public Boolean iasCampaignMonitoring;
    public Creative withIasCampaignMonitoring(Boolean iasCampaignMonitoring) {
        this.iasCampaignMonitoring = iasCampaignMonitoring;
        return this;
    }
    
    /**
     * ID information used to link this creative to an external system. Must be UTF-8 encoded with a length of no more than 10,000 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrationCode")
    public String integrationCode;
    public Creative withIntegrationCode(String integrationCode) {
        this.integrationCode = integrationCode;
        return this;
    }
    
    /**
     * JavaScript measurement URL from supported third-party verification providers (ComScore, DoubleVerify, IAS, Moat). HTML script tags are not supported. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsTrackerUrl")
    public String jsTrackerUrl;
    public Creative withJsTrackerUrl(String jsTrackerUrl) {
        this.jsTrackerUrl = jsTrackerUrl;
        return this;
    }
    
    /**
     * Output only. The IDs of the line items this creative is associated with. To associate a creative to a line item, use LineItem.creative_ids instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItemIds")
    public String[] lineItemIds;
    public Creative withLineItemIds(String[] lineItemIds) {
        this.lineItemIds = lineItemIds;
        return this;
    }
    
    /**
     * Output only. Media duration of the creative. Applicable when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_PUBLISHER_HOSTED`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaDuration")
    public String mediaDuration;
    public Creative withMediaDuration(String mediaDuration) {
        this.mediaDuration = mediaDuration;
        return this;
    }
    
    /**
     * Output only. Indicates the third-party audio creative supports MP3. Output only and only valid for third-party audio creatives. Third-party audio creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mp3Audio")
    public Boolean mp3Audio;
    public Creative withMp3Audio(Boolean mp3Audio) {
        this.mp3Audio = mp3Audio;
        return this;
    }
    
    /**
     * Output only. The resource name of the creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Creative withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes for this creative. Must be UTF-8 encoded with a length of no more than 20,000 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public Creative withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * OBA Icon for a Creative
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obaIcon")
    public ObaIcon obaIcon;
    public Creative withObaIcon(ObaIcon obaIcon) {
        this.obaIcon = obaIcon;
        return this;
    }
    
    /**
     * Output only. Indicates the third-party audio creative supports OGG. Output only and only valid for third-party audio creatives. Third-party audio creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oggAudio")
    public Boolean oggAudio;
    public Creative withOggAudio(Boolean oggAudio) {
        this.oggAudio = oggAudio;
        return this;
    }
    
    /**
     * The length an audio or a video has been played.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progressOffset")
    public AudioVideoOffset progressOffset;
    public Creative withProgressOffset(AudioVideoOffset progressOffset) {
        this.progressOffset = progressOffset;
        return this;
    }
    
    /**
     * Optional. Indicates that the creative relies on HTML5 to render properly. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requireHtml5")
    public Boolean requireHtml5;
    public Creative withRequireHtml5(Boolean requireHtml5) {
        this.requireHtml5 = requireHtml5;
        return this;
    }
    
    /**
     * Optional. Indicates that the creative requires MRAID (Mobile Rich Media Ad Interface Definitions system). Set this if the creative relies on mobile gestures for interactivity, such as swiping or tapping. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requireMraid")
    public Boolean requireMraid;
    public Creative withRequireMraid(Boolean requireMraid) {
        this.requireMraid = requireMraid;
        return this;
    }
    
    /**
     * Optional. Indicates that the creative will wait for a return ping for attribution. Only valid when using a Campaign Manager 360 tracking ad with a third-party ad server parameter and the ${DC_DBM_TOKEN} macro. Optional and only valid for third-party tag creatives or third-party VAST tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requirePingForAttribution")
    public Boolean requirePingForAttribution;
    public Creative withRequirePingForAttribution(Boolean requirePingForAttribution) {
        this.requirePingForAttribution = requirePingForAttribution;
        return this;
    }
    
    /**
     * Review statuses for the creative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewStatus")
    public ReviewStatusInfo reviewStatus;
    public Creative withReviewStatus(ReviewStatusInfo reviewStatus) {
        this.reviewStatus = reviewStatus;
        return this;
    }
    
    /**
     * The length an audio or a video has been played.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skipOffset")
    public AudioVideoOffset skipOffset;
    public Creative withSkipOffset(AudioVideoOffset skipOffset) {
        this.skipOffset = skipOffset;
        return this;
    }
    
    /**
     * Whether the user can choose to skip a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skippable")
    public Boolean skippable;
    public Creative withSkippable(Boolean skippable) {
        this.skippable = skippable;
        return this;
    }
    
    /**
     * Optional. The original third-party tag used for the creative. Required and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thirdPartyTag")
    public String thirdPartyTag;
    public Creative withThirdPartyTag(String thirdPartyTag) {
        this.thirdPartyTag = thirdPartyTag;
        return this;
    }
    
    /**
     * Tracking URLs from third parties to track interactions with a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thirdPartyUrls")
    public ThirdPartyUrl[] thirdPartyUrls;
    public Creative withThirdPartyUrls(ThirdPartyUrl[] thirdPartyUrls) {
        this.thirdPartyUrls = thirdPartyUrls;
        return this;
    }
    
    /**
     * Timer custom events for a rich media creative. Timers track the time during which a user views and interacts with a specified part of a rich media creative. A creative can have multiple timer events, each timed independently. Leave it empty or unset for creatives containing image assets only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timerEvents")
    public TimerEvent[] timerEvents;
    public Creative withTimerEvents(TimerEvent[] timerEvents) {
        this.timerEvents = timerEvents;
        return this;
    }
    
    /**
     * Tracking URLs for analytics providers or third-party ad technology vendors. The URLs must start with https (except on inventory that doesn't require SSL compliance). If using macros in your URL, use only macros supported by Display &amp; Video 360. Standard URLs only, no IMG or SCRIPT tags. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackerUrls")
    public String[] trackerUrls;
    public Creative withTrackerUrls(String[] trackerUrls) {
        this.trackerUrls = trackerUrls;
        return this;
    }
    
    /**
     * Output only. Audio/Video transcodes. Display &amp; Video 360 transcodes the main asset into a number of alternative versions that use different file formats or have different properties (resolution, audio bit rate, and video bit rate), each designed for specific video players or bandwidths. These transcodes give a publisher's system more options to choose from for each impression on your video and ensures that the appropriate file serves based on the viewer\u2019s connection and screen size. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_AUDIO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcodes")
    public Transcode[] transcodes;
    public Creative withTranscodes(Transcode[] transcodes) {
        this.transcodes = transcodes;
        return this;
    }
    
    /**
     * A creative identifier provided by a registry that is unique across all platforms. This is part of the VAST 4.0 standard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("universalAdId")
    public UniversalAdId universalAdId;
    public Creative withUniversalAdId(UniversalAdId universalAdId) {
        this.universalAdId = universalAdId;
        return this;
    }
    
    /**
     * Output only. The timestamp when the creative was last updated, either by the user or system (e.g. creative review). Assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Creative withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Optional. The URL of the VAST tag for a third-party VAST tag creative. Required and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vastTagUrl")
    public String vastTagUrl;
    public Creative withVastTagUrl(String vastTagUrl) {
        this.vastTagUrl = vastTagUrl;
        return this;
    }
    
    /**
     * Output only. Indicates the third-party VAST tag creative requires VPAID (Digital Video Player-Ad Interface). Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpaid")
    public Boolean vpaid;
    public Creative withVpaid(Boolean vpaid) {
        this.vpaid = vpaid;
        return this;
    }
    
}
