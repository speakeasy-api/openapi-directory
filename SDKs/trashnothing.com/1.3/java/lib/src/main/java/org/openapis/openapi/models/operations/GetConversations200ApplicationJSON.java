/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetConversations200ApplicationJSON - The conversations and paging data.
 */
public class GetConversations200ApplicationJSON {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversations")
    public org.openapis.openapi.models.shared.Conversation[] conversations;
    public GetConversations200ApplicationJSON withConversations(org.openapis.openapi.models.shared.Conversation[] conversations) {
        this.conversations = conversations;
        return this;
    }
    
    /**
     * If the include_num_unread parameter is set to 1, this will be set to the total number of conversations that have unread messages matching the query parameters of the request.  If the include_num_unread parameter is set to 0, this will be null.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("num_unread")
    public Long numUnread;
    public GetConversations200ApplicationJSON withNumUnread(Long numUnread) {
        this.numUnread = numUnread;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;
    public GetConversations200ApplicationJSON withPage(Long page) {
        this.page = page;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per_page")
    public Long perPage;
    public GetConversations200ApplicationJSON withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
}
