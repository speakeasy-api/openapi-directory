"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import scim_enterprise_group_list as shared_scim_enterprise_group_list
from ..shared import scim_error as shared_scim_error
from typing import Optional


@dataclasses.dataclass
class EnterpriseAdminListProvisionedGroupsEnterpriseRequest:
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""Used for pagination: the number of results to return per page."""  
    excluded_attributes: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'excludedAttributes', 'style': 'form', 'explode': True }})
    r"""Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time."""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""If specified, only results that match the specified filter will be returned. Multiple filters are not supported. Possible filters are `externalId`, `id`, and `displayName`. For example, `?filter=\\"externalId eq '9138790-10932-109120392-12321'\\"`."""  
    start_index: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startIndex', 'style': 'form', 'explode': True }})
    r"""Used for pagination: the starting index of the first result to return when paginating through values."""  
    

@dataclasses.dataclass
class EnterpriseAdminListProvisionedGroupsEnterpriseResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    scim_enterprise_group_list: Optional[shared_scim_enterprise_group_list.ScimEnterpriseGroupList] = dataclasses.field(default=None)
    r"""Success, either groups were found or not found"""  
    scim_error: Optional[shared_scim_error.ScimError] = dataclasses.field(default=None)
    r"""Bad request"""  
    