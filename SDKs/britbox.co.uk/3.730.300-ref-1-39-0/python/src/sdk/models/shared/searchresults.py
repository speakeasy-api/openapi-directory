"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import itemlist as shared_itemlist
from ..shared import person as shared_person
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchResults:
    r"""OK."""
    
    term: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('term') }})
    r"""The search term."""  
    total: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of results."""  
    items: Optional[shared_itemlist.ItemList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    r"""A pageable list of items."""  
    movies: Optional[shared_itemlist.ItemList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('movies'), 'exclude': lambda f: f is None }})
    r"""A pageable list of items."""  
    other: Optional[shared_itemlist.ItemList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('other'), 'exclude': lambda f: f is None }})
    r"""A pageable list of items."""  
    people: Optional[list[shared_person.Person]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('people'), 'exclude': lambda f: f is None }})
    r"""The list of people relevant to the search term."""  
    tv: Optional[shared_itemlist.ItemList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tv'), 'exclude': lambda f: f is None }})
    r"""A pageable list of items."""  
    