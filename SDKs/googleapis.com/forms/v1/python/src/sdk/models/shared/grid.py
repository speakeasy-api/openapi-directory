"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import choicequestion as shared_choicequestion
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Grid:
    r"""A grid of choices (radio or check boxes) with each row constituting a separate question. Each row has the same choices, which are shown as the columns."""
    
    columns: Optional[shared_choicequestion.ChoiceQuestion] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columns'), 'exclude': lambda f: f is None }})
    r"""A radio/checkbox/dropdown question."""  
    shuffle_questions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shuffleQuestions'), 'exclude': lambda f: f is None }})
    r"""If `true`, the questions are randomly ordered. In other words, the rows appear in a different order for every respondent."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GridInput:
    r"""A grid of choices (radio or check boxes) with each row constituting a separate question. Each row has the same choices, which are shown as the columns."""
    
    columns: Optional[shared_choicequestion.ChoiceQuestionInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columns'), 'exclude': lambda f: f is None }})
    r"""A radio/checkbox/dropdown question."""  
    shuffle_questions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shuffleQuestions'), 'exclude': lambda f: f is None }})
    r"""If `true`, the questions are randomly ordered. In other words, the rows appear in a different order for every respondent."""  
    