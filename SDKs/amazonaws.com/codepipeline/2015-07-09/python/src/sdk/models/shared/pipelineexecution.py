"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import artifactrevision as shared_artifactrevision
from ..shared import pipelineexecutionstatus_enum as shared_pipelineexecutionstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PipelineExecution:
    r"""Represents information about an execution of a pipeline."""
    
    artifact_revisions: Optional[list[shared_artifactrevision.ArtifactRevision]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artifactRevisions'), 'exclude': lambda f: f is None }})  
    pipeline_execution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipelineExecutionId'), 'exclude': lambda f: f is None }})  
    pipeline_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipelineName'), 'exclude': lambda f: f is None }})  
    pipeline_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pipelineVersion'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_pipelineexecutionstatus_enum.PipelineExecutionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    status_summary: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusSummary'), 'exclude': lambda f: f is None }})  
    