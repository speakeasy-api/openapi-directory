/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ServicePipeline } from "./servicepipeline";
import { ServiceStatusEnum } from "./servicestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Detailed data of an Proton service resource.
 */
export class Service extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "branchName" })
  branchName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pipeline" })
  @Type(() => ServicePipeline)
  pipeline?: ServicePipeline;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryConnectionArn" })
  repositoryConnectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryId" })
  repositoryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "spec" })
  spec: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ServiceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateName" })
  templateName: string;
}
