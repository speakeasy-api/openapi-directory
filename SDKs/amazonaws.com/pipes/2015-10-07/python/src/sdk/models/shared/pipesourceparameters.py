"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filtercriteria as shared_filtercriteria
from ..shared import pipesourceactivemqbrokerparameters as shared_pipesourceactivemqbrokerparameters
from ..shared import pipesourcedynamodbstreamparameters as shared_pipesourcedynamodbstreamparameters
from ..shared import pipesourcekinesisstreamparameters as shared_pipesourcekinesisstreamparameters
from ..shared import pipesourcemanagedstreamingkafkaparameters as shared_pipesourcemanagedstreamingkafkaparameters
from ..shared import pipesourcerabbitmqbrokerparameters as shared_pipesourcerabbitmqbrokerparameters
from ..shared import pipesourceselfmanagedkafkaparameters as shared_pipesourceselfmanagedkafkaparameters
from ..shared import pipesourcesqsqueueparameters as shared_pipesourcesqsqueueparameters
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PipeSourceParameters:
    r"""The parameters required to set up a source for your pipe."""
    
    active_mq_broker_parameters: Optional[shared_pipesourceactivemqbrokerparameters.PipeSourceActiveMQBrokerParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ActiveMQBrokerParameters'), 'exclude': lambda f: f is None }})  
    dynamo_db_stream_parameters: Optional[shared_pipesourcedynamodbstreamparameters.PipeSourceDynamoDBStreamParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DynamoDBStreamParameters'), 'exclude': lambda f: f is None }})  
    filter_criteria: Optional[shared_filtercriteria.FilterCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FilterCriteria'), 'exclude': lambda f: f is None }})  
    kinesis_stream_parameters: Optional[shared_pipesourcekinesisstreamparameters.PipeSourceKinesisStreamParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisStreamParameters'), 'exclude': lambda f: f is None }})  
    managed_streaming_kafka_parameters: Optional[shared_pipesourcemanagedstreamingkafkaparameters.PipeSourceManagedStreamingKafkaParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ManagedStreamingKafkaParameters'), 'exclude': lambda f: f is None }})  
    rabbit_mq_broker_parameters: Optional[shared_pipesourcerabbitmqbrokerparameters.PipeSourceRabbitMQBrokerParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RabbitMQBrokerParameters'), 'exclude': lambda f: f is None }})  
    self_managed_kafka_parameters: Optional[shared_pipesourceselfmanagedkafkaparameters.PipeSourceSelfManagedKafkaParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SelfManagedKafkaParameters'), 'exclude': lambda f: f is None }})  
    sqs_queue_parameters: Optional[shared_pipesourcesqsqueueparameters.PipeSourceSqsQueueParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqsQueueParameters'), 'exclude': lambda f: f is None }})  
    