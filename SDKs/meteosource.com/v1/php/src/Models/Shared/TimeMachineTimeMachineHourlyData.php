<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TimeMachineTimeMachineHourlyData
{
    /**
     * Convective available potential energy.
     * 
     * Unit: J/kg
     * 
     * @var ?int $cape
     */
	#[\JMS\Serializer\Annotation\SerializedName('cape')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cape = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('cloud_cover')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeMachineTimeMachineCloudCoverData')]
    public TimeMachineTimeMachineCloudCoverData $cloudCover;
    
    /**
     * Datetime in YYYY-MM-DDTHH:MM:SS format.
     * 
     * @var ?\DateTime $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $date = null;
    
    /**
     * Units: metric = °C, us = °F, uk = °C, ca = °C
     * 
     * @var ?float $dewPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('dew_point')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $dewPoint = null;
    
    /**
     * Evaporation of liquid water into water vapor.
     * 
     * Unit: mm/h
     * 
     * @var ?int $evaporation
     */
	#[\JMS\Serializer\Annotation\SerializedName('evaporation')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $evaporation = null;
    
    /**
     * Feels like temperature.
     * 
     * Units: metric = °C, us = °F, uk = °C, ca = °C
     * 
     * @var ?float $feelsLike
     */
	#[\JMS\Serializer\Annotation\SerializedName('feels_like')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $feelsLike = null;
    
    /**
     * Relative humidity.
     * 
     * Unit: \%
     * 
     * @var ?int $humidity
     */
	#[\JMS\Serializer\Annotation\SerializedName('humidity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $humidity = null;
    
    /**
     * Numeric identifier of the weather icon. The following values can appear:
     * 
     * 
     * * 1 - Not available
     * * 2 - Sunny
     * * 3 - Mostly sunny
     * * 4 - Partly sunny
     * * 5 - Mostly cloudy
     * * 6 - Cloudy
     * * 7 - Overcast
     * * 8 - Overcast with low clouds
     * * 9 - Fog
     * * 10 - Light rain
     * * 11 - Rain
     * * 12 - Possible rain
     * * 13 - Rain shower
     * * 14 - Thunderstorm
     * * 15 - Local thunderstorms
     * * 16 - Light snow
     * * 17 - Snow
     * * 18 - Possible snow
     * * 19 - Snow shower
     * * 20 - Rain and snow
     * * 21 - Possible rain and snow
     * * 22 - Rain and snow
     * * 23 - Freezing rain
     * * 24 - Possible freezing rain
     * * 25 - Hail
     * * 26 - Clear (night)
     * * 27 - Mostly clear (night)
     * * 28 - Partly clear (night)
     * * 29 - Mostly cloudy (night)
     * * 30 - Cloudy (night)
     * * 31 - Overcast with low clouds (night)
     * * 32 - Rain shower (night)
     * * 33 - Local thunderstorms (night)
     * * 34 - Snow shower (night)
     * * 35 - Rain and snow (night)
     * * 36 - Possible freezing rain (night)
     * 
     * Unit: N/A
     * 
     * @var ?int $icon
     */
	#[\JMS\Serializer\Annotation\SerializedName('icon')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $icon = null;
    
    /**
     * Global downward short-wave radiation flux.
     * 
     * Unit: W/m2
     * 
     * @var ?int $irradiance
     */
	#[\JMS\Serializer\Annotation\SerializedName('irradiance')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $irradiance = null;
    
    /**
     * Total column of ozone.
     * 
     * Unit: Dobson
     * 
     * @var ?int $ozone
     */
	#[\JMS\Serializer\Annotation\SerializedName('ozone')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ozone = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('precipitation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeMachineTimeMachinePrecipitationData')]
    public TimeMachineTimeMachinePrecipitationData $precipitation;
    
    /**
     * Atmospheric pressure at mean sea level.
     * 
     * Units: metric = hPa, us = Hg, uk = hPa, ca = kPa
     * 
     * @var ?float $pressure
     */
	#[\JMS\Serializer\Annotation\SerializedName('pressure')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $pressure = null;
    
    /**
     * Units: metric = °C, us = °F, uk = °C, ca = °C
     * 
     * @var ?float $soilTemperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('soil_temperature')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $soilTemperature = null;
    
    /**
     * Units: metric = °C, us = °F, uk = °C, ca = °C
     * 
     * @var ?float $surfaceTemperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('surface_temperature')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $surfaceTemperature = null;
    
    /**
     * Units: metric = °C, us = °F, uk = °C, ca = °C
     * 
     * @var ?float $temperature
     */
	#[\JMS\Serializer\Annotation\SerializedName('temperature')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $temperature = null;
    
    /**
     * String identifier of the weather icon, e.g. `light_rain`.
     * 
     * @var ?string $weather
     */
	#[\JMS\Serializer\Annotation\SerializedName('weather')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $weather = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('wind')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeMachineTimeMachineWindData')]
    public TimeMachineTimeMachineWindData $wind;
    
    /**
     * Windchill temperature.
     * 
     * Units: metric = °C, us = °F, uk = °C, ca = °C
     * 
     * @var ?float $windChill
     */
	#[\JMS\Serializer\Annotation\SerializedName('wind_chill')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $windChill = null;
    
	public function __construct()
	{
		$this->cape = null;
		$this->cloudCover = new \OpenAPI\OpenAPI\Models\Shared\TimeMachineTimeMachineCloudCoverData();
		$this->date = null;
		$this->dewPoint = null;
		$this->evaporation = null;
		$this->feelsLike = null;
		$this->humidity = null;
		$this->icon = null;
		$this->irradiance = null;
		$this->ozone = null;
		$this->precipitation = new \OpenAPI\OpenAPI\Models\Shared\TimeMachineTimeMachinePrecipitationData();
		$this->pressure = null;
		$this->soilTemperature = null;
		$this->surfaceTemperature = null;
		$this->temperature = null;
		$this->weather = null;
		$this->wind = new \OpenAPI\OpenAPI\Models\Shared\TimeMachineTimeMachineWindData();
		$this->windChill = null;
	}
}
