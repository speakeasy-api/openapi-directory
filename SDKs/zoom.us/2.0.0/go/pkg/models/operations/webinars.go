// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type WebinarsSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type WebinarsRequest struct {
	// **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
	//
	// The page number of the current page in the returned records.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page_number"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type WebinarsUserListWebinars struct {
	// Webinar Description. The length of agenda gets truncated to 250 characters when you list all webinars for a user. To view the complete agenda, retrieve details for a single webinar [here](https://marketplace.zoom.us/docs/api-reference/zoom-api/webinars/webinar).
	Agenda *string `json:"agenda,omitempty"`
	// Time of webinar creation.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Meeting duration.
	Duration *int64 `json:"duration,omitempty"`
	// ID of the host of the webinar.
	HostID *string `json:"host_id,omitempty"`
	// Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
	ID *int64 `json:"id,omitempty"`
	// Join URL of the webinar (using which others can join the webinar).
	JoinURL *string `json:"join_url,omitempty"`
	// Scheduled start time of the Webinar.
	StartTime *time.Time `json:"start_time,omitempty"`
	// [Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) for the Webinar.
	Timezone *string `json:"timezone,omitempty"`
	// Meeting topic.
	Topic *string `json:"topic,omitempty"`
	// Webinar Types:<br>`5` - Webinar.<br>`6` - Recurring webinar with no fixed time.<br>`9` - Recurring webinar with a fixed time.
	Type *string `json:"type,omitempty"`
	// Unique identifier of a Webinar. Each webinar instance will generate its own UUID. Once a Webinar ends, the value of uuid for the same webinar will be different from when it was scheduled.
	UUID *string `json:"uuid,omitempty"`
}

// WebinarsUserList - Pagination Object.
type WebinarsUserList struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// **Deprecated**: This field has been deprecated. Please use the "next_page_token" field for pagination instead of this field.
	//
	// The page number of the current results.
	PageNumber *int64 `json:"page_number,omitempty"`
	// The number of records returned with a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// The total number of all the records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
	// List of webinar objects.
	Webinars []WebinarsUserListWebinars `json:"webinars,omitempty"`
}

type WebinarsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// List of webinar objects returned.
	UserList *WebinarsUserList
}
