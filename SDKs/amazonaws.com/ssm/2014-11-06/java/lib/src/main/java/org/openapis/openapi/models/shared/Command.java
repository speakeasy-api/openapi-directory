/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Command - Describes a command request.
 */
public class Command {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AlarmConfiguration")
    public AlarmConfiguration alarmConfiguration;

    public Command withAlarmConfiguration(AlarmConfiguration alarmConfiguration) {
        this.alarmConfiguration = alarmConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CloudWatchOutputConfig")
    public CloudWatchOutputConfig cloudWatchOutputConfig;

    public Command withCloudWatchOutputConfig(CloudWatchOutputConfig cloudWatchOutputConfig) {
        this.cloudWatchOutputConfig = cloudWatchOutputConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommandId")
    public String commandId;

    public Command withCommandId(String commandId) {
        this.commandId = commandId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Comment")
    public String comment;

    public Command withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompletedCount")
    public Long completedCount;

    public Command withCompletedCount(Long completedCount) {
        this.completedCount = completedCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DeliveryTimedOutCount")
    public Long deliveryTimedOutCount;

    public Command withDeliveryTimedOutCount(Long deliveryTimedOutCount) {
        this.deliveryTimedOutCount = deliveryTimedOutCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentName")
    public String documentName;

    public Command withDocumentName(String documentName) {
        this.documentName = documentName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentVersion")
    public String documentVersion;

    public Command withDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorCount")
    public Long errorCount;

    public Command withErrorCount(Long errorCount) {
        this.errorCount = errorCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExpiresAfter")
    public OffsetDateTime expiresAfter;

    public Command withExpiresAfter(OffsetDateTime expiresAfter) {
        this.expiresAfter = expiresAfter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceIds")
    public String[] instanceIds;

    public Command withInstanceIds(String[] instanceIds) {
        this.instanceIds = instanceIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxConcurrency")
    public String maxConcurrency;

    public Command withMaxConcurrency(String maxConcurrency) {
        this.maxConcurrency = maxConcurrency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxErrors")
    public String maxErrors;

    public Command withMaxErrors(String maxErrors) {
        this.maxErrors = maxErrors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationConfig")
    public NotificationConfig notificationConfig;

    public Command withNotificationConfig(NotificationConfig notificationConfig) {
        this.notificationConfig = notificationConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputS3BucketName")
    public String outputS3BucketName;

    public Command withOutputS3BucketName(String outputS3BucketName) {
        this.outputS3BucketName = outputS3BucketName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputS3KeyPrefix")
    public String outputS3KeyPrefix;

    public Command withOutputS3KeyPrefix(String outputS3KeyPrefix) {
        this.outputS3KeyPrefix = outputS3KeyPrefix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputS3Region")
    public String outputS3Region;

    public Command withOutputS3Region(String outputS3Region) {
        this.outputS3Region = outputS3Region;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parameters")
    public java.util.Map<String, String[]> parameters;

    public Command withParameters(java.util.Map<String, String[]> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RequestedDateTime")
    public OffsetDateTime requestedDateTime;

    public Command withRequestedDateTime(OffsetDateTime requestedDateTime) {
        this.requestedDateTime = requestedDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServiceRole")
    public String serviceRole;

    public Command withServiceRole(String serviceRole) {
        this.serviceRole = serviceRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public CommandStatusEnum status;

    public Command withStatus(CommandStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatusDetails")
    public String statusDetails;

    public Command withStatusDetails(String statusDetails) {
        this.statusDetails = statusDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetCount")
    public Long targetCount;

    public Command withTargetCount(Long targetCount) {
        this.targetCount = targetCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Targets")
    public Target[] targets;

    public Command withTargets(Target[] targets) {
        this.targets = targets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeoutSeconds")
    public Long timeoutSeconds;

    public Command withTimeoutSeconds(Long timeoutSeconds) {
        this.timeoutSeconds = timeoutSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TriggeredAlarms")
    public AlarmStateInformation[] triggeredAlarms;

    public Command withTriggeredAlarms(AlarmStateInformation[] triggeredAlarms) {
        this.triggeredAlarms = triggeredAlarms;
        return this;
    }
    
    public Command(){}
}
