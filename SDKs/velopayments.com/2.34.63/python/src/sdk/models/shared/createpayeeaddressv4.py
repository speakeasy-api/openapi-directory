"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreatePayeeAddressV4:
    
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})
    r"""Valid ISO 3166 2 character country code. See the <a href=\\"https://www.iso.org/iso-3166-country-codes.html\\" target=\\"_blank\\" a>ISO specification</a> for details."""  
    line1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line1') }})  
    county_or_province: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countyOrProvince'), 'exclude': lambda f: f is None }})  
    line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line2'), 'exclude': lambda f: f is None }})  
    line3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line3'), 'exclude': lambda f: f is None }})  
    line4: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line4'), 'exclude': lambda f: f is None }})  
    zip_or_postcode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipOrPostcode'), 'exclude': lambda f: f is None }})  
    