<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class QueryMembersRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('created_at_after')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtAfter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at_after_or_equal')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtAfterOrEqual = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at_before')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtBefore = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at_before_or_equal')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAtBeforeOrEqual = null;
    
    /**
     * Filter to apply to members
     * 
     * @var array<string, mixed> $filterConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter_conditions')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $filterConditions;
    
    /**
     * Channel ID to interact with
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Number of records to return
     * 
     * @var ?float $limit
     */
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $limit = null;
    
    /**
     * List of members to search in distinct channels
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ChannelMember> $members
     */
	#[\JMS\Serializer\Annotation\SerializedName('members')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ChannelMember>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $members = null;
    
    /**
     * Number of records to offset
     * 
     * @var ?float $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $offset = null;
    
    /**
     * Array of sort parameters
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SortParam> $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SortParam>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sort = null;
    
    /**
     * Channel type to interact with
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * Represents chat user
     * 
     * @var ?array<string, mixed> $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $user = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id_gt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userIdGt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id_gte')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userIdGte = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id_lt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userIdLt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id_lte')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userIdLte = null;
    
	public function __construct()
	{
		$this->createdAtAfter = null;
		$this->createdAtAfterOrEqual = null;
		$this->createdAtBefore = null;
		$this->createdAtBeforeOrEqual = null;
		$this->filterConditions = [];
		$this->id = null;
		$this->limit = null;
		$this->members = null;
		$this->offset = null;
		$this->sort = null;
		$this->type = "";
		$this->user = null;
		$this->userId = null;
		$this->userIdGt = null;
		$this->userIdGte = null;
		$this->userIdLt = null;
		$this->userIdLte = null;
	}
}
