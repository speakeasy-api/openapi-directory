"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datauploadfrequency_enum as shared_datauploadfrequency_enum
from ..shared import inferenceinputconfiguration as shared_inferenceinputconfiguration
from ..shared import inferenceoutputconfiguration as shared_inferenceoutputconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateInferenceSchedulerRequest:
    
    inference_scheduler_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InferenceSchedulerName') }})  
    data_delay_offset_in_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataDelayOffsetInMinutes'), 'exclude': lambda f: f is None }})  
    data_input_configuration: Optional[shared_inferenceinputconfiguration.InferenceInputConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataInputConfiguration'), 'exclude': lambda f: f is None }})  
    data_output_configuration: Optional[shared_inferenceoutputconfiguration.InferenceOutputConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataOutputConfiguration'), 'exclude': lambda f: f is None }})  
    data_upload_frequency: Optional[shared_datauploadfrequency_enum.DataUploadFrequencyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataUploadFrequency'), 'exclude': lambda f: f is None }})  
    role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleArn'), 'exclude': lambda f: f is None }})  
    