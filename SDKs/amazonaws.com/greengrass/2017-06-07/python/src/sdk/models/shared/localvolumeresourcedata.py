"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import groupownersetting as shared_groupownersetting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocalVolumeResourceData:
    r"""Attributes that define a local volume resource."""
    
    destination_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DestinationPath'), 'exclude': lambda f: f is None }})  
    group_owner_setting: Optional[shared_groupownersetting.GroupOwnerSetting] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GroupOwnerSetting'), 'exclude': lambda f: f is None }})  
    source_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourcePath'), 'exclude': lambda f: f is None }})  
    