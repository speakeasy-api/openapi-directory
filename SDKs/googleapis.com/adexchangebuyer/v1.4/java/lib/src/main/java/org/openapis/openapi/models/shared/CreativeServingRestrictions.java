/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreativeServingRestrictions {
    /**
     * All known contexts/restrictions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contexts")
    public CreativeServingRestrictionsContexts[] contexts;
    public CreativeServingRestrictions withContexts(CreativeServingRestrictionsContexts[] contexts) {
        this.contexts = contexts;
        return this;
    }
    
    /**
     * The reasons for disapproval within this restriction, if any. Note that not all disapproval reasons may be categorized, so it is possible for the creative to have a status of DISAPPROVED or CONDITIONALLY_APPROVED with an empty list for disapproval_reasons. In this case, please reach out to your TAM to help debug the issue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disapprovalReasons")
    public CreativeServingRestrictionsDisapprovalReasons[] disapprovalReasons;
    public CreativeServingRestrictions withDisapprovalReasons(CreativeServingRestrictionsDisapprovalReasons[] disapprovalReasons) {
        this.disapprovalReasons = disapprovalReasons;
        return this;
    }
    
    /**
     * Why the creative is ineligible to serve in this context (e.g., it has been explicitly disapproved or is pending review).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;
    public CreativeServingRestrictions withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
}
