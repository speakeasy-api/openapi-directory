/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PrivateInstitutionArticlesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * The field by which to order. Default varies by endpoint/resource.
 */
export enum PrivateInstitutionArticlesOrderEnum {
  PublishedDate = "published_date",
  ModifiedDate = "modified_date",
  Views = "views",
  Shares = "shares",
  Downloads = "downloads",
  Cites = "cites",
}

export enum PrivateInstitutionArticlesOrderDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

export class PrivateInstitutionArticlesRequest extends SpeakeasyBase {
  /**
   * Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=item_type",
  })
  itemType?: number;

  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modified_since",
  })
  modifiedSince?: string;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * The field by which to order. Default varies by endpoint/resource.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: PrivateInstitutionArticlesOrderEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_direction",
  })
  orderDirection?: PrivateInstitutionArticlesOrderDirectionEnum;

  /**
   * Page number. Used for pagination with page_size
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results included on a page. Used for pagination with page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=published_since",
  })
  publishedSince?: string;

  /**
   * only return collections with this resource_doi
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resource_doi",
  })
  resourceDoi?: string;

  /**
   * only return collections with this status
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: number;
}

export class PrivateInstitutionArticlesResponse extends SpeakeasyBase {
  /**
   * OK. An array of articles belonging to the institution
   */
  @SpeakeasyMetadata({ elemType: shared.Article })
  articles?: shared.Article[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  errorMessage?: shared.ErrorMessage;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
