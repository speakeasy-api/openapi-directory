"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grafeasv1filelocation as shared_grafeasv1filelocation
from ..shared import version as shared_version
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PackageIssueEffectiveSeverityEnum(str, Enum):
    r"""Output only. The distro or language system assigned severity for this vulnerability when that is available and note provider assigned severity when it is not available."""
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    MINIMAL = 'MINIMAL'
    LOW = 'LOW'
    MEDIUM = 'MEDIUM'
    HIGH = 'HIGH'
    CRITICAL = 'CRITICAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageIssue:
    r"""A detail for a distro and package this vulnerability occurrence was found in and its associated fix (if one is available)."""
    
    affected_cpe_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affectedCpeUri'), 'exclude': lambda f: f is None }})
    r"""Required. The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability was found in."""  
    affected_package: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affectedPackage'), 'exclude': lambda f: f is None }})
    r"""Required. The package this vulnerability was found in."""  
    affected_version: Optional[shared_version.Version] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affectedVersion'), 'exclude': lambda f: f is None }})
    r"""Version contains structured information about the version of a package."""  
    effective_severity: Optional[PackageIssueEffectiveSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effectiveSeverity'), 'exclude': lambda f: f is None }})
    r"""Output only. The distro or language system assigned severity for this vulnerability when that is available and note provider assigned severity when it is not available."""  
    file_location: Optional[list[shared_grafeasv1filelocation.GrafeasV1FileLocation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileLocation'), 'exclude': lambda f: f is None }})
    r"""The location at which this package was found."""  
    fix_available: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixAvailable'), 'exclude': lambda f: f is None }})
    r"""Output only. Whether a fix is available for this package."""  
    fixed_cpe_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedCpeUri'), 'exclude': lambda f: f is None }})
    r"""The [CPE URI](https://cpe.mitre.org/specification/) this vulnerability was fixed in. It is possible for this to be different from the affected_cpe_uri."""  
    fixed_package: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedPackage'), 'exclude': lambda f: f is None }})
    r"""The package this vulnerability was fixed in. It is possible for this to be different from the affected_package."""  
    fixed_version: Optional[shared_version.Version] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedVersion'), 'exclude': lambda f: f is None }})
    r"""Version contains structured information about the version of a package."""  
    package_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageType'), 'exclude': lambda f: f is None }})
    r"""The type of package (e.g. OS, MAVEN, GO)."""  
    