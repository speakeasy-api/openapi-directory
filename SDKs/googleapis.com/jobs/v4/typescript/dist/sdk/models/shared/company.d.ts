import { SpeakeasyBase } from "../../../internal/utils";
import { CompanyDerivedInfo } from "./companyderivedinfo";
/**
 * The employer's company size.
 */
export declare enum CompanySizeEnum {
    CompanySizeUnspecified = "COMPANY_SIZE_UNSPECIFIED",
    Mini = "MINI",
    Small = "SMALL",
    Smedium = "SMEDIUM",
    Medium = "MEDIUM",
    Big = "BIG",
    Bigger = "BIGGER",
    Giant = "GIANT"
}
/**
 * A Company resource represents a company in the service. A company is the entity that owns job postings, that is, the hiring entity responsible for employing applicants for the job position.
 */
export declare class Company extends SpeakeasyBase {
    /**
     * The URI to employer's career site or careers page on the employer's web site, for example, "https://careers.google.com".
     */
    careerSiteUri?: string;
    /**
     * Derived details about the company.
     */
    derivedInfo?: CompanyDerivedInfo;
    /**
     * Required. The display name of the company, for example, "Google LLC".
     */
    displayName?: string;
    /**
     * Equal Employment Opportunity legal disclaimer text to be associated with all jobs, and typically to be displayed in all roles. The maximum number of allowed characters is 500.
     */
    eeoText?: string;
    /**
     * Required. Client side company identifier, used to uniquely identify the company. The maximum number of allowed characters is 255.
     */
    externalId?: string;
    /**
     * The street address of the company's main headquarters, which may be different from the job location. The service attempts to geolocate the provided address, and populates a more specific location wherever possible in DerivedInfo.headquarters_location.
     */
    headquartersAddress?: string;
    /**
     * Set to true if it is the hiring agency that post jobs for other employers. Defaults to false if not provided.
     */
    hiringAgency?: boolean;
    /**
     * A URI that hosts the employer's company logo.
     */
    imageUri?: string;
    /**
     * This field is deprecated. Please set the searchability of the custom attribute in the Job.custom_attributes going forward. A list of keys of filterable Job.custom_attributes, whose corresponding `string_values` are used in keyword searches. Jobs with `string_values` under these specified field keys are returned if any of the values match the search keyword. Custom field values with parenthesis, brackets and special symbols are not searchable as-is, and those keyword queries must be surrounded by quotes.
     */
    keywordSearchableJobCustomAttributes?: string[];
    /**
     * Required during company update. The resource name for a company. This is generated by the service when a company is created. The format is "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for example, "projects/foo/tenants/bar/companies/baz".
     */
    name?: string;
    /**
     * The employer's company size.
     */
    size?: CompanySizeEnum;
    /**
     * Output only. Indicates whether a company is flagged to be suspended from public availability by the service when job content appears suspicious, abusive, or spammy.
     */
    suspended?: boolean;
    /**
     * The URI representing the company's primary web site or home page, for example, "https://www.google.com". The maximum number of allowed characters is 255.
     */
    websiteUri?: string;
}
/**
 * A Company resource represents a company in the service. A company is the entity that owns job postings, that is, the hiring entity responsible for employing applicants for the job position.
 */
export declare class CompanyInput extends SpeakeasyBase {
    /**
     * The URI to employer's career site or careers page on the employer's web site, for example, "https://careers.google.com".
     */
    careerSiteUri?: string;
    /**
     * Derived details about the company.
     */
    derivedInfo?: CompanyDerivedInfo;
    /**
     * Required. The display name of the company, for example, "Google LLC".
     */
    displayName?: string;
    /**
     * Equal Employment Opportunity legal disclaimer text to be associated with all jobs, and typically to be displayed in all roles. The maximum number of allowed characters is 500.
     */
    eeoText?: string;
    /**
     * Required. Client side company identifier, used to uniquely identify the company. The maximum number of allowed characters is 255.
     */
    externalId?: string;
    /**
     * The street address of the company's main headquarters, which may be different from the job location. The service attempts to geolocate the provided address, and populates a more specific location wherever possible in DerivedInfo.headquarters_location.
     */
    headquartersAddress?: string;
    /**
     * Set to true if it is the hiring agency that post jobs for other employers. Defaults to false if not provided.
     */
    hiringAgency?: boolean;
    /**
     * A URI that hosts the employer's company logo.
     */
    imageUri?: string;
    /**
     * This field is deprecated. Please set the searchability of the custom attribute in the Job.custom_attributes going forward. A list of keys of filterable Job.custom_attributes, whose corresponding `string_values` are used in keyword searches. Jobs with `string_values` under these specified field keys are returned if any of the values match the search keyword. Custom field values with parenthesis, brackets and special symbols are not searchable as-is, and those keyword queries must be surrounded by quotes.
     */
    keywordSearchableJobCustomAttributes?: string[];
    /**
     * Required during company update. The resource name for a company. This is generated by the service when a company is created. The format is "projects/{project_id}/tenants/{tenant_id}/companies/{company_id}", for example, "projects/foo/tenants/bar/companies/baz".
     */
    name?: string;
    /**
     * The employer's company size.
     */
    size?: CompanySizeEnum;
    /**
     * The URI representing the company's primary web site or home page, for example, "https://www.google.com". The maximum number of allowed characters is 255.
     */
    websiteUri?: string;
}
