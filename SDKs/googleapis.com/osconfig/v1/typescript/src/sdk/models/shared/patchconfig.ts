/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AptSettings } from "./aptsettings";
import { ExecStep } from "./execstep";
import { WindowsUpdateSettings } from "./windowsupdatesettings";
import { YumSettings } from "./yumsettings";
import { ZypperSettings } from "./zyppersettings";
import { Expose, Type } from "class-transformer";

/**
 * Post-patch reboot settings.
 */
export enum PatchConfigRebootConfigEnum {
  RebootConfigUnspecified = "REBOOT_CONFIG_UNSPECIFIED",
  Default = "DEFAULT",
  Always = "ALWAYS",
  Never = "NEVER",
}

/**
 * Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
 */
export class PatchConfig extends SpeakeasyBase {
  /**
   * Apt patching is completed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apt" })
  @Type(() => AptSettings)
  apt?: AptSettings;

  /**
   * Googet patching is performed by running `googet update`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "goo" })
  goo?: Record<string, any>;

  /**
   * Allows the patch job to run on Managed instance groups (MIGs).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "migInstancesAllowed" })
  migInstancesAllowed?: boolean;

  /**
   * A step that runs an executable for a PatchJob.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postStep" })
  @Type(() => ExecStep)
  postStep?: ExecStep;

  /**
   * A step that runs an executable for a PatchJob.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preStep" })
  @Type(() => ExecStep)
  preStep?: ExecStep;

  /**
   * Post-patch reboot settings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rebootConfig" })
  rebootConfig?: PatchConfigRebootConfigEnum;

  /**
   * Windows patching is performed using the Windows Update Agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "windowsUpdate" })
  @Type(() => WindowsUpdateSettings)
  windowsUpdate?: WindowsUpdateSettings;

  /**
   * Yum patching is performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "yum" })
  @Type(() => YumSettings)
  yum?: YumSettings;

  /**
   * Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zypper" })
  @Type(() => ZypperSettings)
  zypper?: ZypperSettings;
}
