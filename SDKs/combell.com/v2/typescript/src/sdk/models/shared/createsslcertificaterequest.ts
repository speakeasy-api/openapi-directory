/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalValidationAttribute } from "./additionalvalidationattribute";
import { SslCertificateTypeEnum } from "./sslcertificatetypeenum";
import { SslCertificateValidationLevelEnum } from "./sslcertificatevalidationlevelenum";
import { Expose, Type } from "class-transformer";

export class CreateSslCertificateRequest extends SpeakeasyBase {
  /**
   * List of additional validation attributes for the certificate when choosing organization or extended validation.
   *
   * @remarks
   * <table><tr><th>Name</th><th>Info</th><th>Required</th></tr><tr><td>Firstname</td><td>Firstname of the technical contact</td><td>Yes</td></tr><tr><td>Lastname</td><td>Lastname of the technical contact</td><td>Yes</td></tr><tr><td>Phone</td><td>Phone of the technical contact</td><td>Yes</td></tr><tr><td>EmailAddress</td><td>Email address of the technical contact</td><td>Yes</td></tr><tr><td>Street</td><td>Address street of the organization</td><td>Yes</td></tr><tr><td>Number</td><td>Address house number of the organization</td><td>Yes</td></tr><tr><td>PostalCode</td><td>Address postal code of the organization</td><td>Yes</td></tr><tr><td>VatCountryCode</td><td>VAT country code of the organization, ISO 3166-1 alpha-2 country code</td><td>Yes</td></tr><tr><td>OrganizationNumber</td><td>Business number of the organization</td><td>No</td></tr></table>
   */
  @SpeakeasyMetadata({ elemType: AdditionalValidationAttribute })
  @Expose({ name: "additional_validation_attributes" })
  @Type(() => AdditionalValidationAttribute)
  additionalValidationAttributes?: AdditionalValidationAttribute[];

  /**
   * The type of the certificate:
   *
   * @remarks
   * <ul><li>Standard: Certificate for a single domain.</li><li>Multi domain: Certificate for multiple (sub)domains belonging to the same owner.</li><li>Wildcard: Certificate for all the subdomains.</li></ul>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificate_type" })
  certificateType?: SslCertificateTypeEnum;

  /**
   * The certificate signing request data.<br />
   *
   * @remarks
   * The certificate signing request subject should contain following attributes:<br /><table><tr><th>Name</th><th>Code</th><th>Format</th></tr><tr><td>CommonName</td><td>CN</td><td>Valid domain name, for example site.be, alias.site.be or *.site.be</td></tr><tr><td>Country</td><td>C</td><td>ISO 3166-1 alpha-2 country code</td></tr><tr><td>State</td><td>ST</td><td></td></tr><tr><td>Locality</td><td>L</td><td></td></tr><tr><td>Organization</td><td>O</td><td></td></tr><tr><td>EmailAddress</td><td>E</td><td>Valid email address</td></tr></table>
   * The certificate signing request should also contain all the additional aliases and domains (SAN's) for the certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "csr" })
  csr?: string;

  /**
   * The validation level of the certificate:
   *
   * @remarks
   * <ul><li>Domain validated: Basic check of the identity of the owner of the domain name.</li><li>Organization validated: Company details are verified and integrated in the certificate.</li><li>Extended validated: A thorough verification of your domain name and company details.</li></ul>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validation_level" })
  validationLevel?: SslCertificateValidationLevelEnum;
}
