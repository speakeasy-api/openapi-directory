/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReposCreateCommitCommentRequestBody extends SpeakeasyBase {
  /**
   * The contents of the comment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body: string;

  /**
   * **Deprecated**. Use **position** parameter instead. Line number in the file to comment on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line" })
  line?: number;

  /**
   * Relative path of the file to comment on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Line index in the diff to comment on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position?: number;
}

export class ReposCreateCommitCommentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReposCreateCommitCommentRequestBody;

  /**
   * commit_sha parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=commit_sha",
  })
  commitSha: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ReposCreateCommitCommentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  commitComment?: shared.CommitComment;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
