// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetUserLevelChannelSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetUserLevelChannelRequest struct {
	// Channel ID: Unique Identifier of a channel.
	ChannelID string `pathParam:"style=simple,explode=false,name=channelId"`
}

// GetUserLevelChannel200ApplicationXMLTypeEnum - Type of the channel. The value can be one of the following:<br>
// `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
// `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
// `3`: Public channel. Anyone can search for this channel and join the channel.<br>
type GetUserLevelChannel200ApplicationXMLTypeEnum string

const (
	GetUserLevelChannel200ApplicationXMLTypeEnumOne   GetUserLevelChannel200ApplicationXMLTypeEnum = "1"
	GetUserLevelChannel200ApplicationXMLTypeEnumTwo   GetUserLevelChannel200ApplicationXMLTypeEnum = "2"
	GetUserLevelChannel200ApplicationXMLTypeEnumThree GetUserLevelChannel200ApplicationXMLTypeEnum = "3"
)

func (e *GetUserLevelChannel200ApplicationXMLTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		*e = GetUserLevelChannel200ApplicationXMLTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserLevelChannel200ApplicationXMLTypeEnum: %s", s)
	}
}

// GetUserLevelChannel200ApplicationXML - The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-).
type GetUserLevelChannel200ApplicationXML struct {
	// Channel Id.
	ID *string
	// Name of the channel.
	Name *string
	// Type of the channel. The value can be one of the following:<br>
	// `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
	// `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
	// `3`: Public channel. Anyone can search for this channel and join the channel.<br>
	Type *GetUserLevelChannel200ApplicationXMLTypeEnum
}

// GetUserLevelChannel200ApplicationJSONTypeEnum - Type of the channel. The value can be one of the following:<br>
// `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
// `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
// `3`: Public channel. Anyone can search for this channel and join the channel.<br>
type GetUserLevelChannel200ApplicationJSONTypeEnum string

const (
	GetUserLevelChannel200ApplicationJSONTypeEnumOne   GetUserLevelChannel200ApplicationJSONTypeEnum = "1"
	GetUserLevelChannel200ApplicationJSONTypeEnumTwo   GetUserLevelChannel200ApplicationJSONTypeEnum = "2"
	GetUserLevelChannel200ApplicationJSONTypeEnumThree GetUserLevelChannel200ApplicationJSONTypeEnum = "3"
)

func (e *GetUserLevelChannel200ApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		*e = GetUserLevelChannel200ApplicationJSONTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserLevelChannel200ApplicationJSONTypeEnum: %s", s)
	}
}

// GetUserLevelChannel200ApplicationJSON - The channel object represents a Zoom chat [channel](https://support.zoom.us/hc/en-us/articles/200912909-Getting-Started-With-Channels-Group-Messaging-).
type GetUserLevelChannel200ApplicationJSON struct {
	// Channel Id.
	ID *string `json:"id,omitempty"`
	// Name of the channel.
	Name *string `json:"name,omitempty"`
	// Type of the channel. The value can be one of the following:<br>
	// `1`: Private channel. In this type of channel, members must be invited to join a channel.<br>
	// `2`: Private channel with members that belong to one Zoom account. Members in this channel should be invited and the members should be from the same organization.<br>
	// `3`: Public channel. Anyone can search for this channel and join the channel.<br>
	Type *GetUserLevelChannel200ApplicationJSONTypeEnum `json:"type,omitempty"`
}

type GetUserLevelChannelResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Channel returned.<br>
	//
	//
	//
	//
	GetUserLevelChannel200ApplicationJSONObject *GetUserLevelChannel200ApplicationJSON
}
