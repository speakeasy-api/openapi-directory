/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

/**
 * A page view required a page number from the story outline to be created
 */
export class SessionsIdViewsPostRequiredParametersToCreateAView extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "activeMSecs" })
  activeMSecs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "additional" })
  additional?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pageNumber" })
  pageNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;
}

export class SessionsIdViewsPostRequest extends SpeakeasyBase {
  /**
   * Collaborator user id and permission type
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: SessionsIdViewsPostRequiredParametersToCreateAView;

  /**
   * The primary key for a view session
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=session_id",
  })
  sessionId: string;
}

export class SessionsIdViewsPostResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  problemDetail?: shared.ProblemDetail;

  /**
   * A new view object
   */
  @SpeakeasyMetadata()
  view?: shared.View;
}
