"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum(str, Enum):
    r"""The current Book on Google price accuracy score."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponseCurrentOverallScoreEnum(str, Enum):
    r"""The current price accuracy score combining both website and Book on Google scores."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponseCurrentScoreEnum(str, Enum):
    r"""The current price accuracy score. Contains the same value as `current_website_score`. For clarity, use either `current_website_score` or 'current_overall_score` depending upon which is needed."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum(str, Enum):
    r"""The current website price accuracy score."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum(str, Enum):
    r"""The predicted Book on Google price accuracy score."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponsePredictedOverallScoreEnum(str, Enum):
    r"""The predicted price accuracy score combining both website and Book on Google scores."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponsePredictedScoreEnum(str, Enum):
    r"""The predicted price accuracy score. Contains the same value as `predicted_website_score`. For clarity, use either `predicted_website_score` or 'predicted_overall_score` depending upon which is needed."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'

class SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum(str, Enum):
    r"""The predicted website price accuracy score."""
    PRICE_ACCURACY_STATE_UNSPECIFIED = 'PRICE_ACCURACY_STATE_UNSPECIFIED'
    PRICE_ACCURACY_STATE_UNKNOWN = 'PRICE_ACCURACY_STATE_UNKNOWN'
    EXCELLENT = 'EXCELLENT'
    GOOD = 'GOOD'
    POOR = 'POOR'
    AT_RISK = 'AT_RISK'
    FAILED = 'FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SummarizePriceAccuracyResponse:
    r"""Response message for PriceAccuracyViewService.SummarizePriceAccuracy."""
    
    current_book_on_google_score: Optional[SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentBookOnGoogleScore'), 'exclude': lambda f: f is None }})
    r"""The current Book on Google price accuracy score."""  
    current_overall_score: Optional[SummarizePriceAccuracyResponseCurrentOverallScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentOverallScore'), 'exclude': lambda f: f is None }})
    r"""The current price accuracy score combining both website and Book on Google scores."""  
    current_score: Optional[SummarizePriceAccuracyResponseCurrentScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentScore'), 'exclude': lambda f: f is None }})
    r"""The current price accuracy score. Contains the same value as `current_website_score`. For clarity, use either `current_website_score` or 'current_overall_score` depending upon which is needed."""  
    current_website_score: Optional[SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentWebsiteScore'), 'exclude': lambda f: f is None }})
    r"""The current website price accuracy score."""  
    predicted_book_on_google_score: Optional[SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedBookOnGoogleScore'), 'exclude': lambda f: f is None }})
    r"""The predicted Book on Google price accuracy score."""  
    predicted_overall_score: Optional[SummarizePriceAccuracyResponsePredictedOverallScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedOverallScore'), 'exclude': lambda f: f is None }})
    r"""The predicted price accuracy score combining both website and Book on Google scores."""  
    predicted_score: Optional[SummarizePriceAccuracyResponsePredictedScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedScore'), 'exclude': lambda f: f is None }})
    r"""The predicted price accuracy score. Contains the same value as `predicted_website_score`. For clarity, use either `predicted_website_score` or 'predicted_overall_score` depending upon which is needed."""  
    predicted_website_score: Optional[SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedWebsiteScore'), 'exclude': lambda f: f is None }})
    r"""The predicted website price accuracy score."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""The update timestamp for the current score."""  
    