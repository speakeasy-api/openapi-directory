// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETModifyUserActionEnum
type GETModifyUserActionEnum string

const (
	GETModifyUserActionEnumModifyUser GETModifyUserActionEnum = "ModifyUser"
)

func (e *GETModifyUserActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyUser":
		*e = GETModifyUserActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyUserActionEnum: %s", s)
	}
}

// GETModifyUserAuthenticationMode - Specifies the authentication mode to use.
type GETModifyUserAuthenticationMode struct {
	Passwords []string                            `queryParam:"name=Passwords"`
	Type      *shared.InputAuthenticationTypeEnum `queryParam:"name=Type"`
}

// GETModifyUserVersionEnum
type GETModifyUserVersionEnum string

const (
	GETModifyUserVersionEnumTwoThousandAndFifteen0202 GETModifyUserVersionEnum = "2015-02-02"
)

func (e *GETModifyUserVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETModifyUserVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyUserVersionEnum: %s", s)
	}
}

type GETModifyUserQueryParams struct {
	// Access permissions string used for this user.
	AccessString *string                 `queryParam:"style=form,explode=true,name=AccessString"`
	Action       GETModifyUserActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Adds additional user permissions to the access string.
	AppendAccessString *string `queryParam:"style=form,explode=true,name=AppendAccessString"`
	// Specifies how to authenticate the user.
	AuthenticationMode *GETModifyUserAuthenticationMode `queryParam:"style=form,explode=true,name=AuthenticationMode"`
	// Indicates no password is required for the user.
	NoPasswordRequired *bool `queryParam:"style=form,explode=true,name=NoPasswordRequired"`
	// The passwords belonging to the user. You are allowed up to two.
	Passwords []string `queryParam:"style=form,explode=true,name=Passwords"`
	// The ID of the user.
	UserID  string                   `queryParam:"style=form,explode=true,name=UserId"`
	Version GETModifyUserVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETModifyUserHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyUserRequest struct {
	QueryParams GETModifyUserQueryParams
	Headers     GETModifyUserHeaders
}

type GETModifyUserResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
