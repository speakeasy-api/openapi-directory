"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentdimensions as shared_documentdimensions
from ..shared import documentinputconfig as shared_documentinputconfig
from ..shared import layout as shared_layout
from ..shared import textsnippet as shared_textsnippet
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Document:
    r"""A structured text document e.g. a PDF."""
    
    document_dimensions: Optional[shared_documentdimensions.DocumentDimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentDimensions'), 'exclude': lambda f: f is None }})
    r"""Message that describes dimension of a document."""  
    document_text: Optional[shared_textsnippet.TextSnippet] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentText'), 'exclude': lambda f: f is None }})
    r"""A representation of a text snippet."""  
    input_config: Optional[shared_documentinputconfig.DocumentInputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputConfig'), 'exclude': lambda f: f is None }})
    r"""Input configuration of a Document."""  
    layout: Optional[list[shared_layout.Layout]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('layout'), 'exclude': lambda f: f is None }})
    r"""Describes the layout of the document. Sorted by page_number."""  
    page_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageCount'), 'exclude': lambda f: f is None }})
    r"""Number of pages in the document."""  
    