/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetCatalogueAssetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=apikey",
  })
  apikey: string;
}

export class GetCatalogueAssetRequest extends SpeakeasyBase {
  /**
   * Flag to display Legacy and Provider Ids.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aliases",
  })
  aliases?: boolean;

  /**
   * The identifier for the selected catalogue.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=catalogueId",
  })
  catalogueId: string;

  /**
   * The End Date for the catalogue date range.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=end" })
  end?: string;

  /**
   * Restrict number of returned items Min = 1, Max = 500.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The Start Date for the catalogue date range.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=start" })
  start?: string;

  /**
   * The query string for a title search
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=title" })
  title?: string;

  /**
   * Retrieve items only that have been updated after this point.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=updatedAfter",
  })
  updatedAfter?: string;
}

export class GetCatalogueAssetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  getCatalogueAsset200ApplicationJSONObject?: Record<string, any>;
}
