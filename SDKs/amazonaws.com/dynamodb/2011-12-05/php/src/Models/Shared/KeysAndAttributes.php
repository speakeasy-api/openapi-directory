<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class KeysAndAttributes
{
    /**
     * List of <code>Attribute</code> names. If attribute names are not specified then all attributes will be returned. If some attributes are not found, they will not appear in the result.
     * 
     * @var ?array<string> $attributesToGet
     */
	#[\JMS\Serializer\Annotation\SerializedName('AttributesToGet')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attributesToGet = null;
    
    /**
     * If set to <code>true</code>, then a consistent read is issued. Otherwise eventually-consistent is used.
     * 
     * @var ?bool $consistentRead
     */
	#[\JMS\Serializer\Annotation\SerializedName('ConsistentRead')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $consistentRead = null;
    
    /**
     * $keys
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Key> $keys
     */
	#[\JMS\Serializer\Annotation\SerializedName('Keys')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Key>')]
    public array $keys;
    
	public function __construct()
	{
		$this->attributesToGet = null;
		$this->consistentRead = null;
		$this->keys = [];
	}
}
