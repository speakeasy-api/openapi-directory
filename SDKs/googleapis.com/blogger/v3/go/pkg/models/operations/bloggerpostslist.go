// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BloggerPostsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BloggerPostsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BloggerPostsListSecurity struct {
	Option1 *BloggerPostsListSecurityOption1 `security:"option"`
	Option2 *BloggerPostsListSecurityOption2 `security:"option"`
}

// BloggerPostsListOrderByEnum
type BloggerPostsListOrderByEnum string

const (
	BloggerPostsListOrderByEnumOrderByUnspecified BloggerPostsListOrderByEnum = "ORDER_BY_UNSPECIFIED"
	BloggerPostsListOrderByEnumPublished          BloggerPostsListOrderByEnum = "PUBLISHED"
	BloggerPostsListOrderByEnumUpdated            BloggerPostsListOrderByEnum = "UPDATED"
)

func (e BloggerPostsListOrderByEnum) ToPointer() *BloggerPostsListOrderByEnum {
	return &e
}

func (e *BloggerPostsListOrderByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ORDER_BY_UNSPECIFIED":
		fallthrough
	case "PUBLISHED":
		fallthrough
	case "UPDATED":
		*e = BloggerPostsListOrderByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BloggerPostsListOrderByEnum: %v", v)
	}
}

// BloggerPostsListSortOptionEnum - Sort direction applied to post list.
type BloggerPostsListSortOptionEnum string

const (
	BloggerPostsListSortOptionEnumSortOptionUnspecified BloggerPostsListSortOptionEnum = "SORT_OPTION_UNSPECIFIED"
	BloggerPostsListSortOptionEnumDescending            BloggerPostsListSortOptionEnum = "DESCENDING"
	BloggerPostsListSortOptionEnumAscending             BloggerPostsListSortOptionEnum = "ASCENDING"
)

func (e BloggerPostsListSortOptionEnum) ToPointer() *BloggerPostsListSortOptionEnum {
	return &e
}

func (e *BloggerPostsListSortOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SORT_OPTION_UNSPECIFIED":
		fallthrough
	case "DESCENDING":
		fallthrough
	case "ASCENDING":
		*e = BloggerPostsListSortOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BloggerPostsListSortOptionEnum: %v", v)
	}
}

type BloggerPostsListStatusEnum string

const (
	BloggerPostsListStatusEnumLive        BloggerPostsListStatusEnum = "LIVE"
	BloggerPostsListStatusEnumDraft       BloggerPostsListStatusEnum = "DRAFT"
	BloggerPostsListStatusEnumScheduled   BloggerPostsListStatusEnum = "SCHEDULED"
	BloggerPostsListStatusEnumSoftTrashed BloggerPostsListStatusEnum = "SOFT_TRASHED"
)

func (e BloggerPostsListStatusEnum) ToPointer() *BloggerPostsListStatusEnum {
	return &e
}

func (e *BloggerPostsListStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LIVE":
		fallthrough
	case "DRAFT":
		fallthrough
	case "SCHEDULED":
		fallthrough
	case "SOFT_TRASHED":
		*e = BloggerPostsListStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BloggerPostsListStatusEnum: %v", v)
	}
}

// BloggerPostsListViewEnum
type BloggerPostsListViewEnum string

const (
	BloggerPostsListViewEnumViewTypeUnspecified BloggerPostsListViewEnum = "VIEW_TYPE_UNSPECIFIED"
	BloggerPostsListViewEnumReader              BloggerPostsListViewEnum = "READER"
	BloggerPostsListViewEnumAuthor              BloggerPostsListViewEnum = "AUTHOR"
	BloggerPostsListViewEnumAdmin               BloggerPostsListViewEnum = "ADMIN"
)

func (e BloggerPostsListViewEnum) ToPointer() *BloggerPostsListViewEnum {
	return &e
}

func (e *BloggerPostsListViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VIEW_TYPE_UNSPECIFIED":
		fallthrough
	case "READER":
		fallthrough
	case "AUTHOR":
		fallthrough
	case "ADMIN":
		*e = BloggerPostsListViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BloggerPostsListViewEnum: %v", v)
	}
}

type BloggerPostsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt    *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	BlogID string          `pathParam:"style=simple,explode=false,name=blogId"`
	// JSONP
	Callback    *string `queryParam:"style=form,explode=true,name=callback"`
	EndDate     *string `queryParam:"style=form,explode=true,name=endDate"`
	FetchBodies *bool   `queryParam:"style=form,explode=true,name=fetchBodies"`
	FetchImages *bool   `queryParam:"style=form,explode=true,name=fetchImages"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key        *string `queryParam:"style=form,explode=true,name=key"`
	Labels     *string `queryParam:"style=form,explode=true,name=labels"`
	MaxResults *int64  `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string                      `queryParam:"style=form,explode=true,name=oauth_token"`
	OrderBy    *BloggerPostsListOrderByEnum `queryParam:"style=form,explode=true,name=orderBy"`
	PageToken  *string                      `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Sort direction applied to post list.
	SortOption *BloggerPostsListSortOptionEnum `queryParam:"style=form,explode=true,name=sortOption"`
	StartDate  *string                         `queryParam:"style=form,explode=true,name=startDate"`
	Status     []BloggerPostsListStatusEnum    `queryParam:"style=form,explode=true,name=status"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string                   `queryParam:"style=form,explode=true,name=upload_protocol"`
	View           *BloggerPostsListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type BloggerPostsListResponse struct {
	ContentType string
	// Successful response
	PostList    *shared.PostList
	StatusCode  int
	RawResponse *http.Response
}
