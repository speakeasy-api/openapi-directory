/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2Action } from "./googleprivacydlpv2action";
import { GooglePrivacyDlpV2InspectConfig } from "./googleprivacydlpv2inspectconfig";
import { GooglePrivacyDlpV2StorageConfig } from "./googleprivacydlpv2storageconfig";
import { Expose, Type } from "class-transformer";

/**
 * Controls what and how to inspect for findings.
 */
export class GooglePrivacyDlpV2InspectJobConfig extends SpeakeasyBase {
  /**
   * Actions to execute at the completion of the job.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2Action })
  @Expose({ name: "actions" })
  @Type(() => GooglePrivacyDlpV2Action)
  actions?: GooglePrivacyDlpV2Action[];

  /**
   * Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inspectConfig" })
  @Type(() => GooglePrivacyDlpV2InspectConfig)
  inspectConfig?: GooglePrivacyDlpV2InspectConfig;

  /**
   * If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inspectTemplateName" })
  inspectTemplateName?: string;

  /**
   * Shared message indicating Cloud storage type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageConfig" })
  @Type(() => GooglePrivacyDlpV2StorageConfig)
  storageConfig?: GooglePrivacyDlpV2StorageConfig;
}
