// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ScoreConfidenceEnum - Enumeration for query score confidence.
type ScoreConfidenceEnum string

const (
	ScoreConfidenceEnumVeryHigh     ScoreConfidenceEnum = "VERY_HIGH"
	ScoreConfidenceEnumHigh         ScoreConfidenceEnum = "HIGH"
	ScoreConfidenceEnumMedium       ScoreConfidenceEnum = "MEDIUM"
	ScoreConfidenceEnumLow          ScoreConfidenceEnum = "LOW"
	ScoreConfidenceEnumNotAvailable ScoreConfidenceEnum = "NOT_AVAILABLE"
)

func (e ScoreConfidenceEnum) ToPointer() *ScoreConfidenceEnum {
	return &e
}

func (e *ScoreConfidenceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VERY_HIGH":
		fallthrough
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		fallthrough
	case "NOT_AVAILABLE":
		*e = ScoreConfidenceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ScoreConfidenceEnum: %v", v)
	}
}
