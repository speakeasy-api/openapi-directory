// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListMobileDeviceAccessOverridesQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListMobileDeviceAccessOverridesXAmzTargetEnum
type ListMobileDeviceAccessOverridesXAmzTargetEnum string

const (
	ListMobileDeviceAccessOverridesXAmzTargetEnumWorkMailServiceListMobileDeviceAccessOverrides ListMobileDeviceAccessOverridesXAmzTargetEnum = "WorkMailService.ListMobileDeviceAccessOverrides"
)

func (e *ListMobileDeviceAccessOverridesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkMailService.ListMobileDeviceAccessOverrides":
		*e = ListMobileDeviceAccessOverridesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListMobileDeviceAccessOverridesXAmzTargetEnum: %s", s)
	}
}

type ListMobileDeviceAccessOverridesHeaders struct {
	XAmzAlgorithm     *string                                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListMobileDeviceAccessOverridesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListMobileDeviceAccessOverridesRequest struct {
	QueryParams ListMobileDeviceAccessOverridesQueryParams
	Headers     ListMobileDeviceAccessOverridesHeaders
	Request     shared.ListMobileDeviceAccessOverridesRequest `request:"mediaType=application/json"`
}

type ListMobileDeviceAccessOverridesResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	ListMobileDeviceAccessOverridesResponse *shared.ListMobileDeviceAccessOverridesResponse
	// OrganizationNotFoundException
	OrganizationNotFoundException interface{}
	// OrganizationStateException
	OrganizationStateException interface{}
	StatusCode                 int
	RawResponse                *http.Response
}
