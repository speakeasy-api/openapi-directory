"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import v3_disruptionsresponse as shared_v3_disruptionsresponse
from ..shared import v3_errorresponse as shared_v3_errorresponse
from enum import Enum
from typing import Optional

class DisruptionsGetAllDisruptionsDisruptionModesEnum(str, Enum):
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    ELEVEN = '11'
    TWELVE = '12'
    THIRTEEN = '13'
    FOURTEEN = '14'
    ONE_HUNDRED = '100'

class DisruptionsGetAllDisruptionsDisruptionStatusEnum(str, Enum):
    r"""Filter by status of disruption"""
    CURRENT = 'current'
    PLANNED = 'planned'

class DisruptionsGetAllDisruptionsRouteTypesEnum(str, Enum):
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'


@dataclasses.dataclass
class DisruptionsGetAllDisruptionsRequest:
    
    devid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'devid', 'style': 'form', 'explode': True }})
    r"""Your developer id"""  
    disruption_modes: Optional[list[DisruptionsGetAllDisruptionsDisruptionModesEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'disruption_modes', 'style': 'form', 'explode': True }})
    r"""Filter by disruption_mode; values returned via v3/disruptions/modes API"""  
    disruption_status: Optional[DisruptionsGetAllDisruptionsDisruptionStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'disruption_status', 'style': 'form', 'explode': True }})
    r"""Filter by status of disruption"""  
    route_types: Optional[list[DisruptionsGetAllDisruptionsRouteTypesEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'route_types', 'style': 'form', 'explode': True }})
    r"""Filter by route_type; values returned via RouteTypes API"""  
    signature: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'signature', 'style': 'form', 'explode': True }})
    r"""Authentication signature for request"""  
    token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'token', 'style': 'form', 'explode': True }})
    r"""Please ignore"""  
    

@dataclasses.dataclass
class DisruptionsGetAllDisruptionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    v3_disruptions_response: Optional[shared_v3_disruptionsresponse.V3DisruptionsResponse] = dataclasses.field(default=None)
    r"""All disruption information for all route types."""  
    v3_error_response: Optional[shared_v3_errorresponse.V3ErrorResponse] = dataclasses.field(default=None)
    r"""Invalid Request"""  
    