"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GymArticleDetailsDTO:
    r"""The GymArticleDetailsDTO Class.
    Contains fields of GymArticleDetails DTO in application.
    """
    
    article_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('articleId'), 'exclude': lambda f: f is None }})  
    available_qty: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availableQty'), 'exclude': lambda f: f is None }})  
    created_user: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdUser'), 'exclude': lambda f: f is None }})
    r"""Created User"""  
    employee_discount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeeDiscount'), 'exclude': lambda f: f is None }})  
    employee_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employeePrice'), 'exclude': lambda f: f is None }})  
    gym_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gymId'), 'exclude': lambda f: f is None }})
    r"""Gym Id where article is related"""  
    gym_id_list: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gymIdList'), 'exclude': lambda f: f is None }})
    r"""GymId - Gym Id string with comma separated GymIds"""  
    gym_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gymName'), 'exclude': lambda f: f is None }})
    r"""Gym Name"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    is_default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDefault'), 'exclude': lambda f: f is None }})
    r"""Set as the default values for the article"""  
    is_inventory_item: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isInventoryItem'), 'exclude': lambda f: f is None }})  
    is_obsolete: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isObsolete'), 'exclude': lambda f: f is None }})  
    modified_user: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modifiedUser'), 'exclude': lambda f: f is None }})
    r"""Modified user"""  
    reorder_level: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reorderLevel'), 'exclude': lambda f: f is None }})  
    revenue_account_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revenueAccountId'), 'exclude': lambda f: f is None }})
    r"""Revenue account Id"""  
    selling_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sellingPrice'), 'exclude': lambda f: f is None }})  
    