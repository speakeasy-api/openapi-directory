/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ScheduleAByStateRecipientTotals {
    /**
     * The one-letter type code of the organization:
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_type")
    public String committeeType;

    public ScheduleAByStateRecipientTotals withCommitteeType(String committeeType) {
        this.committeeType = committeeType;
        return this;
    }
    
    /**
     * The one-letter type code of the organization:
     *         - C communication cost
     *         - D delegate
     *         - E electioneering communication
     *         - H House
     *         - I independent expenditure filer (not a committee)
     *         - N PAC - nonqualified
     *         - O independent expenditure-only (super PACs)
     *         - P presidential
     *         - Q PAC - qualified
     *         - S Senate
     *         - U single candidate independent expenditure
     *         - V PAC with non-contribution account, nonqualified
     *         - W PAC with non-contribution account, qualified
     *         - X party, nonqualified
     *         - Y party, qualified
     *         - Z national party non-federal account
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("committee_type_full")
    public String committeeTypeFull;

    public ScheduleAByStateRecipientTotals withCommitteeTypeFull(String committeeTypeFull) {
        this.committeeTypeFull = committeeTypeFull;
        return this;
    }
    
    /**
     * Number of records making up the total.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Integer count;

    public ScheduleAByStateRecipientTotals withCount(Integer count) {
        this.count = count;
        return this;
    }
    
    /**
     * Filter records to only those that are applicable to a given two-year
     * period. This cycle follows the traditional House election cycle and
     * subdivides the presidential and Senate elections into comparable
     * two-year blocks. The cycle begins with an odd year and is named for its
     * ending, even year.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cycle")
    public Integer cycle;

    public ScheduleAByStateRecipientTotals withCycle(Integer cycle) {
        this.cycle = cycle;
        return this;
    }
    
    /**
     * US state or territory
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public ScheduleAByStateRecipientTotals withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * US state or territory
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state_full")
    public String stateFull;

    public ScheduleAByStateRecipientTotals withStateFull(String stateFull) {
        this.stateFull = stateFull;
        return this;
    }
    
    /**
     * The calculated total.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public ScheduleAByStateRecipientTotals withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    public ScheduleAByStateRecipientTotals(){}
}
