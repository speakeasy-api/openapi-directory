/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyTrafficMirrorSessionRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyTrafficMirrorSessionActionEnum action;
    public GETModifyTrafficMirrorSessionRequest withAction(GETModifyTrafficMirrorSessionActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The description to assign to the Traffic Mirror session.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Description")
    public String description;
    public GETModifyTrafficMirrorSessionRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETModifyTrafficMirrorSessionRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The number of bytes in each packet to mirror. These are bytes after the VXLAN header. To mirror a subset, set this to the length (in bytes) to mirror. For example, if you set this value to 100, then the first 100 bytes that meet the filter criteria are copied to the target. Do not specify this parameter when you want to mirror the entire packet.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PacketLength")
    public Long packetLength;
    public GETModifyTrafficMirrorSessionRequest withPacketLength(Long packetLength) {
        this.packetLength = packetLength;
        return this;
    }
    
    /**
     * &lt;p&gt;The properties that you want to remove from the Traffic Mirror session.&lt;/p&gt; &lt;p&gt;When you remove a property from a Traffic Mirror session, the property is set to the default.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RemoveField")
    public org.openapis.openapi.models.shared.TrafficMirrorSessionFieldEnum[] removeField;
    public GETModifyTrafficMirrorSessionRequest withRemoveField(org.openapis.openapi.models.shared.TrafficMirrorSessionFieldEnum[] removeField) {
        this.removeField = removeField;
        return this;
    }
    
    /**
     * &lt;p&gt;The session number determines the order in which sessions are evaluated when an interface is used by multiple sessions. The first session with a matching filter is the one that mirrors the packets.&lt;/p&gt; &lt;p&gt;Valid values are 1-32766.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SessionNumber")
    public Long sessionNumber;
    public GETModifyTrafficMirrorSessionRequest withSessionNumber(Long sessionNumber) {
        this.sessionNumber = sessionNumber;
        return this;
    }
    
    /**
     * The ID of the Traffic Mirror filter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TrafficMirrorFilterId")
    public String trafficMirrorFilterId;
    public GETModifyTrafficMirrorSessionRequest withTrafficMirrorFilterId(String trafficMirrorFilterId) {
        this.trafficMirrorFilterId = trafficMirrorFilterId;
        return this;
    }
    
    /**
     * The ID of the Traffic Mirror session.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TrafficMirrorSessionId")
    public String trafficMirrorSessionId;
    public GETModifyTrafficMirrorSessionRequest withTrafficMirrorSessionId(String trafficMirrorSessionId) {
        this.trafficMirrorSessionId = trafficMirrorSessionId;
        return this;
    }
    
    /**
     * The Traffic Mirror target. The target must be in the same VPC as the source, or have a VPC peering connection with the source.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TrafficMirrorTargetId")
    public String trafficMirrorTargetId;
    public GETModifyTrafficMirrorSessionRequest withTrafficMirrorTargetId(String trafficMirrorTargetId) {
        this.trafficMirrorTargetId = trafficMirrorTargetId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyTrafficMirrorSessionVersionEnum version;
    public GETModifyTrafficMirrorSessionRequest withVersion(GETModifyTrafficMirrorSessionVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The virtual network ID of the Traffic Mirror session.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VirtualNetworkId")
    public Long virtualNetworkId;
    public GETModifyTrafficMirrorSessionRequest withVirtualNetworkId(Long virtualNetworkId) {
        this.virtualNetworkId = virtualNetworkId;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public GETModifyTrafficMirrorSessionRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public GETModifyTrafficMirrorSessionRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public GETModifyTrafficMirrorSessionRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public GETModifyTrafficMirrorSessionRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public GETModifyTrafficMirrorSessionRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public GETModifyTrafficMirrorSessionRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public GETModifyTrafficMirrorSessionRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
}
