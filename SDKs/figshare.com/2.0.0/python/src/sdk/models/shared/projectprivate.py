"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ProjectPrivateRoleEnum(str, Enum):
    r"""Role inside this project"""
    OWNER = 'Owner'
    COLLABORATOR = 'Collaborator'
    VIEWER = 'Viewer'

class ProjectPrivateStorageEnum(str, Enum):
    r"""Project storage type"""
    INDIVIDUAL = 'individual'
    GROUP = 'group'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProjectPrivate:
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Project id"""  
    published_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('published_date') }})
    r"""Date when project was published"""  
    role: ProjectPrivateRoleEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""Role inside this project"""  
    storage: ProjectPrivateStorageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storage') }})
    r"""Project storage type"""  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Project title"""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""Api endpoint"""  
    