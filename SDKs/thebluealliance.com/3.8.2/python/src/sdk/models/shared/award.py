"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import award_recipient as shared_award_recipient
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Award:
    
    award_type: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('award_type') }})
    r"""Type of award given. See https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/award_type.py#L6"""  
    event_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_key') }})
    r"""The event_key of the event the award was won at."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the award as provided by FIRST. May vary for the same award type."""  
    recipient_list: list[shared_award_recipient.AwardRecipient] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recipient_list') }})
    r"""A list of recipients of the award at the event. May have either a team_key or an awardee, both, or neither (in the case the award wasn't awarded at the event)."""  
    year: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('year') }})
    r"""The year this award was won."""  
    