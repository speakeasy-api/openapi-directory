"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum(str, Enum):
    r"""'Deny' traffic specified by this rule"""
    DENY = 'deny'

class UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum(str, Enum):
    r"""Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"""
    APPLICATION = 'application'
    APPLICATION_CATEGORY = 'applicationCategory'
    HOST = 'host'
    IP_RANGE = 'ipRange'
    PORT = 'port'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRules:
    
    policy: Optional[UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policy'), 'exclude': lambda f: f is None }})
    r"""'Deny' traffic specified by this rule"""  
    type: Optional[UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'"""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBody:
    
    rules: Optional[list[UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRules]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rules'), 'exclude': lambda f: f is None }})
    r"""An array of L7 firewall rules for this SSID. Rules will get applied in the same order user has specified in request. Empty array will clear the L7 firewall rule configuration."""  
    

@dataclasses.dataclass
class UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    number: str = dataclasses.field(metadata={'path_param': { 'field_name': 'number', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkWirelessSsidFirewallL7FirewallRulesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_wireless_ssid_firewall_l7_firewall_rules_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    