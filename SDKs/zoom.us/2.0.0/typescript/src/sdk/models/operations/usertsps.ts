/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UserTSPsRequest extends SpeakeasyBase {
  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

/**
 * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
 *
 * @remarks
 * `media_link` - Media link
 */
export enum UserTSPs200ApplicationXMLTSPAccountsListDialInNumbersTypeEnum {
  Toll = "toll",
  Tollfree = "tollfree",
  MediaLink = "media_link",
}

export class UserTSPs200ApplicationXMLTSPAccountsListDialInNumbers extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  code?: string;

  /**
   * Country Label, if passed, will display in place of code.
   */
  @SpeakeasyMetadata()
  countryLabel?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  number?: string;

  /**
   * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
   *
   * @remarks
   * `media_link` - Media link
   */
  @SpeakeasyMetadata()
  type?: UserTSPs200ApplicationXMLTSPAccountsListDialInNumbersTypeEnum;
}

/**
 * The ID of the TSP account.
 */
export enum UserTSPs200ApplicationXMLTSPAccountsListIdEnum {
  One = "1",
  Two = "2",
}

/**
 * Telephony bridge
 *
 * @remarks
 *
 */
export enum UserTSPs200ApplicationXMLTSPAccountsListTSPBridgeEnum {
  UsTspTb = "US_TSP_TB",
  EuTspTb = "EU_TSP_TB",
}

/**
 * List of TSP accounts.
 */
export class UserTSPs200ApplicationXMLTSPAccountsList extends SpeakeasyBase {
  /**
   * Conference code: numeric value, length is less than 16.
   */
  @SpeakeasyMetadata()
  conferenceCode: string;

  /**
   * List of dial in numbers.
   */
  @SpeakeasyMetadata({
    elemType: UserTSPs200ApplicationXMLTSPAccountsListDialInNumbers,
  })
  dialInNumbers?: UserTSPs200ApplicationXMLTSPAccountsListDialInNumbers[];

  /**
   * The ID of the TSP account.
   */
  @SpeakeasyMetadata()
  id?: UserTSPs200ApplicationXMLTSPAccountsListIdEnum;

  /**
   * Leader PIN: numeric value, length is less than 16.
   */
  @SpeakeasyMetadata()
  leaderPin: string;

  /**
   * Telephony bridge
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  tspBridge?: UserTSPs200ApplicationXMLTSPAccountsListTSPBridgeEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * TSP account list returned successfully.
 */
export class UserTSPs200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: UserTSPs200ApplicationXMLTSPAccountsList })
  tspAccounts?: UserTSPs200ApplicationXMLTSPAccountsList[];
}

/**
 * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
 *
 * @remarks
 * `media_link` - Media link
 */
export enum UserTSPs200ApplicationJSONTSPAccountsListDialInNumbersTypeEnum {
  Toll = "toll",
  Tollfree = "tollfree",
  MediaLink = "media_link",
}

export class UserTSPs200ApplicationJSONTSPAccountsListDialInNumbers extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Country Label, if passed, will display in place of code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country_label" })
  countryLabel?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number.<br>
   *
   * @remarks
   * `media_link` - Media link
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UserTSPs200ApplicationJSONTSPAccountsListDialInNumbersTypeEnum;
}

/**
 * The ID of the TSP account.
 */
export enum UserTSPs200ApplicationJSONTSPAccountsListIdEnum {
  One = "1",
  Two = "2",
}

/**
 * Telephony bridge
 *
 * @remarks
 *
 */
export enum UserTSPs200ApplicationJSONTSPAccountsListTSPBridgeEnum {
  UsTspTb = "US_TSP_TB",
  EuTspTb = "EU_TSP_TB",
}

/**
 * List of TSP accounts.
 */
export class UserTSPs200ApplicationJSONTSPAccountsList extends SpeakeasyBase {
  /**
   * Conference code: numeric value, length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conference_code" })
  conferenceCode: string;

  /**
   * List of dial in numbers.
   */
  @SpeakeasyMetadata({
    elemType: UserTSPs200ApplicationJSONTSPAccountsListDialInNumbers,
  })
  @Expose({ name: "dial_in_numbers" })
  @Type(() => UserTSPs200ApplicationJSONTSPAccountsListDialInNumbers)
  dialInNumbers?: UserTSPs200ApplicationJSONTSPAccountsListDialInNumbers[];

  /**
   * The ID of the TSP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: UserTSPs200ApplicationJSONTSPAccountsListIdEnum;

  /**
   * Leader PIN: numeric value, length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leader_pin" })
  leaderPin: string;

  /**
   * Telephony bridge
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tsp_bridge" })
  tspBridge?: UserTSPs200ApplicationJSONTSPAccountsListTSPBridgeEnum;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * TSP account list returned successfully.
 */
export class UserTSPs200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: UserTSPs200ApplicationJSONTSPAccountsList })
  @Expose({ name: "tsp_accounts" })
  @Type(() => UserTSPs200ApplicationJSONTSPAccountsList)
  tspAccounts?: UserTSPs200ApplicationJSONTSPAccountsList[];
}

export class UserTSPsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * TSP account list returned successfully.
   */
  @SpeakeasyMetadata()
  userTSPs200ApplicationJSONObject?: UserTSPs200ApplicationJSON;
}
