/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Certificate - Certificate details retrieved
 */
public class Certificate {
    /**
     * The unique identifier of the certificate request. Only present if no errors returned
     */
    @JsonProperty("certificateId")
    public String certificateId;

    public Certificate withCertificateId(String certificateId) {
        this.certificateId = certificateId;
        return this;
    }
    
    /**
     * Common name of certificate
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commonName")
    public String commonName;

    public Certificate withCommonName(String commonName) {
        this.commonName = commonName;
        return this;
    }
    
    @JsonProperty("contact")
    public CertificateContact contact;

    public Certificate withContact(CertificateContact contact) {
        this.contact = contact;
        return this;
    }
    
    /**
     * The date the certificate was ordered.
     */
    @JsonProperty("createdAt")
    public String createdAt;

    public Certificate withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Only present if certificate order has been denied
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deniedReason")
    public String deniedReason;

    public Certificate withDeniedReason(String deniedReason) {
        this.deniedReason = deniedReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    public CertificateOrganization organization;

    public Certificate withOrganization(CertificateOrganization organization) {
        this.organization = organization;
        return this;
    }
    
    /**
     * Validity period of order. Specified in years
     */
    @JsonProperty("period")
    public Long period;

    public Certificate withPeriod(Long period) {
        this.period = period;
        return this;
    }
    
    /**
     * Certificate product type
     */
    @JsonProperty("productType")
    public CertificateProductTypeEnum productType;

    public Certificate withProductType(CertificateProductTypeEnum productType) {
        this.productType = productType;
        return this;
    }
    
    /**
     * Percentage of completion for certificate vetting
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progress")
    public Long progress;

    public Certificate withProgress(Long progress) {
        this.progress = progress;
        return this;
    }
    
    /**
     * The revocation date of certificate (if revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revokedAt")
    public String revokedAt;

    public Certificate withRevokedAt(String revokedAt) {
        this.revokedAt = revokedAt;
        return this;
    }
    
    /**
     * Root Type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootType")
    public CertificateRootTypeEnum rootType;

    public Certificate withRootType(CertificateRootTypeEnum rootType) {
        this.rootType = rootType;
        return this;
    }
    
    /**
     * Serial number of certificate (if issued or revoked)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;

    public Certificate withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * Hexadecmial format for Serial number of certificate(if issued or revoked)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumberHex")
    public String serialNumberHex;

    public Certificate withSerialNumberHex(String serialNumberHex) {
        this.serialNumberHex = serialNumberHex;
        return this;
    }
    
    /**
     * Number of subject alternative names(SAN) to be included in certificate 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slotSize")
    public CertificateSlotSizeEnum slotSize;

    public Certificate withSlotSize(CertificateSlotSizeEnum slotSize) {
        this.slotSize = slotSize;
        return this;
    }
    
    /**
     * Status of certificate
     */
    @JsonProperty("status")
    public CertificateStatusEnum status;

    public Certificate withStatus(CertificateStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Contains subject alternative names set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjectAlternativeNames")
    public SubjectAlternativeNameDetails[] subjectAlternativeNames;

    public Certificate withSubjectAlternativeNames(SubjectAlternativeNameDetails[] subjectAlternativeNames) {
        this.subjectAlternativeNames = subjectAlternativeNames;
        return this;
    }
    
    /**
     * The end date of the certificate's validity (if issued or revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validEnd")
    public String validEnd;

    public Certificate withValidEnd(String validEnd) {
        this.validEnd = validEnd;
        return this;
    }
    
    /**
     * The start date of the certificate's validity (if issued or revoked).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validStart")
    public String validStart;

    public Certificate withValidStart(String validStart) {
        this.validStart = validStart;
        return this;
    }
    
    public Certificate(@JsonProperty("certificateId") String certificateId, @JsonProperty("contact") CertificateContact contact, @JsonProperty("createdAt") String createdAt, @JsonProperty("period") Long period, @JsonProperty("productType") CertificateProductTypeEnum productType, @JsonProperty("status") CertificateStatusEnum status) {
        this.certificateId = certificateId;
        this.contact = contact;
        this.createdAt = createdAt;
        this.period = period;
        this.productType = productType;
        this.status = status;
  }
}
