"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountSupportingEntityCapabilityAllowedLevelEnum(str, Enum):
    r"""The capability level that is allowed for the account holder.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """
    HIGH = 'high'
    LOW = 'low'
    MEDIUM = 'medium'
    NOT_APPLICABLE = 'notApplicable'

class AccountSupportingEntityCapabilityRequestedLevelEnum(str, Enum):
    r"""The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """
    HIGH = 'high'
    LOW = 'low'
    MEDIUM = 'medium'
    NOT_APPLICABLE = 'notApplicable'

class AccountSupportingEntityCapabilityVerificationStatusEnum(str, Enum):
    r"""The status of the verification checks for the supporting entity capability.
    
    Possible values:
    
    * **pending**: Adyen is running the verification.
    
    * **invalid**: The verification failed. Check if the `errors` array contains more information.
    
    * **valid**: The verification has been successfully completed.
    
    * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
    """
    INVALID = 'invalid'
    PENDING = 'pending'
    REJECTED = 'rejected'
    VALID = 'valid'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountSupportingEntityCapability:
    
    allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the supporting entity capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability."""  
    allowed_level: Optional[AccountSupportingEntityCapabilityAllowedLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedLevel'), 'exclude': lambda f: f is None }})
    r"""The capability level that is allowed for the account holder.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the supporting entity."""  
    requested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requested'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field."""  
    requested_level: Optional[AccountSupportingEntityCapabilityRequestedLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedLevel'), 'exclude': lambda f: f is None }})
    r"""The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """  
    verification_status: Optional[AccountSupportingEntityCapabilityVerificationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationStatus'), 'exclude': lambda f: f is None }})
    r"""The status of the verification checks for the supporting entity capability.
    
    Possible values:
    
    * **pending**: Adyen is running the verification.
    
    * **invalid**: The verification failed. Check if the `errors` array contains more information.
    
    * **valid**: The verification has been successfully completed.
    
    * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountSupportingEntityCapabilityInput:
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder."""  
    requested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requested'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field."""  
    requested_level: Optional[AccountSupportingEntityCapabilityRequestedLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedLevel'), 'exclude': lambda f: f is None }})
    r"""The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
    
    Possible values: **notApplicable**, **low**, **medium**, **high**.
    """  
    