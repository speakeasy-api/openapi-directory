<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VmwareNodePool - Resource VmwareNodePool represents a VMware node pool. ##
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VmwareNodePool
{
    /**
     * Annotations on the node pool. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     * 
     * @var ?array<string, string> $annotations
     */
	#[\JMS\Serializer\Annotation\SerializedName('annotations')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $annotations = null;
    
    /**
     * Parameters that describe the configuration of all nodes within a given node pool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VmwareNodeConfig $config
     */
	#[\JMS\Serializer\Annotation\SerializedName('config')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VmwareNodeConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareNodeConfig $config = null;
    
    /**
     * Output only. The time at which this node pool was created.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Output only. The time at which this node pool was deleted. If the resource is not deleted, this must be empty
     * 
     * @var ?string $deleteTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleteTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deleteTime = null;
    
    /**
     * The display name for the node pool.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Immutable. The resource name of this node pool.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * NodePoolAutoscaling config for the NodePool to allow for the kubernetes to scale NodePool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VmwareNodePoolAutoscalingConfig $nodePoolAutoscaling
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodePoolAutoscaling')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VmwareNodePoolAutoscalingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareNodePoolAutoscalingConfig $nodePoolAutoscaling = null;
    
    /**
     * Anthos version for the node pool. Defaults to the user cluster version.
     * 
     * @var ?string $onPremVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('onPremVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $onPremVersion = null;
    
    /**
     * Output only. If set, there are currently changes in flight to the node pool.
     * 
     * @var ?bool $reconciling
     */
	#[\JMS\Serializer\Annotation\SerializedName('reconciling')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reconciling = null;
    
    /**
     * Output only. The current state of the node pool.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VmwareNodePoolStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VmwareNodePoolStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VmwareNodePoolStateEnum $state = null;
    
    /**
     * ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourceStatus $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResourceStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourceStatus $status = null;
    
    /**
     * Output only. The unique identifier of the node pool.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
    /**
     * Output only. The time at which this node pool was last updated.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
	public function __construct()
	{
		$this->annotations = null;
		$this->config = null;
		$this->createTime = null;
		$this->deleteTime = null;
		$this->displayName = null;
		$this->etag = null;
		$this->name = null;
		$this->nodePoolAutoscaling = null;
		$this->onPremVersion = null;
		$this->reconciling = null;
		$this->state = null;
		$this->status = null;
		$this->uid = null;
		$this->updateTime = null;
	}
}
