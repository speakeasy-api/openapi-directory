/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CatalogItemModifierListInfo - Options to control the properties of a `CatalogModifierList` applied to a `CatalogItem` instance.
 */
public class CatalogItemModifierListInfo {
    /**
     * If `true`, enable this `CatalogModifierList`. The default value is `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public CatalogItemModifierListInfo withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_selected_modifiers")
    public Long maxSelectedModifiers;
    public CatalogItemModifierListInfo withMaxSelectedModifiers(Long maxSelectedModifiers) {
        this.maxSelectedModifiers = maxSelectedModifiers;
        return this;
    }
    
    /**
     * If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("min_selected_modifiers")
    public Long minSelectedModifiers;
    public CatalogItemModifierListInfo withMinSelectedModifiers(Long minSelectedModifiers) {
        this.minSelectedModifiers = minSelectedModifiers;
        return this;
    }
    
    /**
     * The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`.
     */
    @JsonProperty("modifier_list_id")
    public String modifierListId;
    public CatalogItemModifierListInfo withModifierListId(String modifierListId) {
        this.modifierListId = modifierListId;
        return this;
    }
    
    /**
     * A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifier_overrides")
    public CatalogModifierOverride[] modifierOverrides;
    public CatalogItemModifierListInfo withModifierOverrides(CatalogModifierOverride[] modifierOverrides) {
        this.modifierOverrides = modifierOverrides;
        return this;
    }
    
}
