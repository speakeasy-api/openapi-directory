/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InputDataConfig } from "./inputdataconfig";
import { JobStatusEnum } from "./jobstatusenum";
import { LanguageCodeEnum } from "./languagecodeenum";
import { PiiEntitiesDetectionModeEnum } from "./piientitiesdetectionmodeenum";
import { PiiOutputDataConfig } from "./piioutputdataconfig";
import { RedactionConfig } from "./redactionconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides information about a PII entities detection job.
 */
export class PiiEntitiesDetectionJobProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataAccessRoleArn" })
  dataAccessRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataConfig" })
  @Type(() => InputDataConfig)
  inputDataConfig?: InputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "JobArn" })
  jobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobId" })
  jobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobStatus" })
  jobStatus?: JobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LanguageCode" })
  languageCode?: LanguageCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Mode" })
  mode?: PiiEntitiesDetectionModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputDataConfig" })
  @Type(() => PiiOutputDataConfig)
  outputDataConfig?: PiiOutputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RedactionConfig" })
  @Type(() => RedactionConfig)
  redactionConfig?: RedactionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "SubmitTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  submitTime?: Date;
}
