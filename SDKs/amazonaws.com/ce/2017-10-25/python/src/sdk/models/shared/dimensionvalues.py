"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension_enum as shared_dimension_enum
from ..shared import matchoption_enum as shared_matchoption_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DimensionValues:
    r"""The metadata that you can use to filter and group your results. You can use <code>GetDimensionValues</code> to find specific values."""
    
    key: Optional[shared_dimension_enum.DimensionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Key'), 'exclude': lambda f: f is None }})  
    match_options: Optional[list[shared_matchoption_enum.MatchOptionEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MatchOptions'), 'exclude': lambda f: f is None }})  
    values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Values'), 'exclude': lambda f: f is None }})  
    