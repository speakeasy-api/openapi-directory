"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventfilter as shared_eventfilter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventStartCondition:
    r"""Specifies the settings for an event that causes a journey activity to start."""
    
    event_filter: Optional[shared_eventfilter.EventFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventFilter'), 'exclude': lambda f: f is None }})
    r"""Specifies the settings for an event that causes a campaign to be sent or a journey activity to be performed."""  
    segment_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SegmentId'), 'exclude': lambda f: f is None }})  
    