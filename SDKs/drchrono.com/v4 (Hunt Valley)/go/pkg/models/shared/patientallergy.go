// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PatientAllergySnomedReactionEnum - SNOMED code for the reaction. For possible SnoMED codes, please see [this link from PHIN VADS](https://phinvads.cdc.gov/vads/ViewValueSet.action?id=896AABB4-5ACD-DE11-913D-0015173D1785)
type PatientAllergySnomedReactionEnum string

const (
	PatientAllergySnomedReactionEnumUnknown                                                                 PatientAllergySnomedReactionEnum = ""
	PatientAllergySnomedReactionEnumFourteenMillionSixHundredAndSixtyNineThousandAndOne                     PatientAllergySnomedReactionEnum = "14669001"
	PatientAllergySnomedReactionEnumThirtyNineMillionFiveHundredAndSeventyNineThousandAndOne                PatientAllergySnomedReactionEnum = "39579001"
	PatientAllergySnomedReactionEnumFiftySevenMillionSixHundredAndSeventySixThousandAndTwo                  PatientAllergySnomedReactionEnum = "57676002"
	PatientAllergySnomedReactionEnumFortyThreeMillionSevenHundredAndTwentyFourThousandAndTwo                PatientAllergySnomedReactionEnum = "43724002"
	PatientAllergySnomedReactionEnumFortyNineMillionSevenHundredAndTwentySevenThousandAndTwo                PatientAllergySnomedReactionEnum = "49727002"
	PatientAllergySnomedReactionEnumThreeHundredAndEightySixMillionSixHundredAndSixtyOneThousandAndSix      PatientAllergySnomedReactionEnum = "386661006"
	PatientAllergySnomedReactionEnumTwentyFiveMillionSixtyFourThousandAndTwo                                PatientAllergySnomedReactionEnum = "25064002"
	PatientAllergySnomedReactionEnumTwoHundredAndFortySevenMillionFourHundredAndSeventyTwoThousandAndFour   PatientAllergySnomedReactionEnum = "247472004"
	PatientAllergySnomedReactionEnumTwoHundredAndSeventyOneMillionSevenHundredAndNinetyFiveThousandAndSix   PatientAllergySnomedReactionEnum = "271795006"
	PatientAllergySnomedReactionEnumSixtyEightMillionNineHundredAndSixtyTwoThousandAndOne                   PatientAllergySnomedReactionEnum = "68962001"
	PatientAllergySnomedReactionEnumSixtyEightMillionTwoHundredAndThirtyFiveThousand                        PatientAllergySnomedReactionEnum = "68235000"
	PatientAllergySnomedReactionEnumFourHundredAndTwentyTwoMillionFiveHundredAndEightySevenThousandAndSeven PatientAllergySnomedReactionEnum = "422587007"
	PatientAllergySnomedReactionEnumNinetyFiveMillionThreeHundredAndEightyEightThousand                     PatientAllergySnomedReactionEnum = "95388000"
	PatientAllergySnomedReactionEnumTwoHundredAndSeventyOneMillionEightHundredAndSevenThousandAndThree      PatientAllergySnomedReactionEnum = "271807003"
	PatientAllergySnomedReactionEnumTwoHundredAndSeventyOneMillionEightHundredAndTwentyFiveThousandAndFive  PatientAllergySnomedReactionEnum = "271825005"
	PatientAllergySnomedReactionEnumSixtyFourMillionFiveHundredAndThirtyOneThousandAndThree                 PatientAllergySnomedReactionEnum = "64531003"
	PatientAllergySnomedReactionEnumTwoHundredAndSixtySevenMillionThirtySixThousandAndSeven                 PatientAllergySnomedReactionEnum = "267036007"
	PatientAllergySnomedReactionEnumOneHundredAndSixtyTwoMillionThreeHundredAndNinetySevenThousandAndThree  PatientAllergySnomedReactionEnum = "162397003"
	PatientAllergySnomedReactionEnumSixtyFiveMillionOneHundredAndTwentyFourThousandAndFour                  PatientAllergySnomedReactionEnum = "65124004"
)

func (e *PatientAllergySnomedReactionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "":
		fallthrough
	case "14669001":
		fallthrough
	case "39579001":
		fallthrough
	case "57676002":
		fallthrough
	case "43724002":
		fallthrough
	case "49727002":
		fallthrough
	case "386661006":
		fallthrough
	case "25064002":
		fallthrough
	case "247472004":
		fallthrough
	case "271795006":
		fallthrough
	case "68962001":
		fallthrough
	case "68235000":
		fallthrough
	case "422587007":
		fallthrough
	case "95388000":
		fallthrough
	case "271807003":
		fallthrough
	case "271825005":
		fallthrough
	case "64531003":
		fallthrough
	case "267036007":
		fallthrough
	case "162397003":
		fallthrough
	case "65124004":
		*e = PatientAllergySnomedReactionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientAllergySnomedReactionEnum: %s", s)
	}
}

// PatientAllergyStatusEnum - One of `"active"`, `"inactive"`. If absent in `POST`, default to `"active"`
type PatientAllergyStatusEnum string

const (
	PatientAllergyStatusEnumActive   PatientAllergyStatusEnum = "active"
	PatientAllergyStatusEnumInactive PatientAllergyStatusEnum = "inactive"
)

func (e *PatientAllergyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = PatientAllergyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientAllergyStatusEnum: %s", s)
	}
}

// PatientAllergy - Created
type PatientAllergy struct {
	// Description of the allergy, such as `"Cat hair"`
	Description *string `json:"description,omitempty"`
	// Id of the doctor who diagnosed the allergy
	Doctor int64  `json:"doctor"`
	ID     *int64 `json:"id,omitempty"`
	// Any additional notes from the provider
	Notes   *string `json:"notes,omitempty"`
	Patient int64   `json:"patient"`
	// Short description of the patient's allergic reaction, such as `"Hives"`
	Reaction *string `json:"reaction,omitempty"`
	// If the allergy is a drug allergy, this is the RxNorm code of the drug
	Rxnorm *string `json:"rxnorm,omitempty"`
	// SNOMED code for the reaction. For possible SnoMED codes, please see [this link from PHIN VADS](https://phinvads.cdc.gov/vads/ViewValueSet.action?id=896AABB4-5ACD-DE11-913D-0015173D1785)
	SnomedReaction *PatientAllergySnomedReactionEnum `json:"snomed_reaction,omitempty"`
	// One of `"active"`, `"inactive"`. If absent in `POST`, default to `"active"`
	Status *PatientAllergyStatusEnum `json:"status,omitempty"`
}
