// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SelectEnum string

const (
	SelectEnumAllAttributes          SelectEnum = "ALL_ATTRIBUTES"
	SelectEnumAllProjectedAttributes SelectEnum = "ALL_PROJECTED_ATTRIBUTES"
	SelectEnumSpecificAttributes     SelectEnum = "SPECIFIC_ATTRIBUTES"
	SelectEnumCount                  SelectEnum = "COUNT"
)

func (e SelectEnum) ToPointer() *SelectEnum {
	return &e
}

func (e *SelectEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALL_ATTRIBUTES":
		fallthrough
	case "ALL_PROJECTED_ATTRIBUTES":
		fallthrough
	case "SPECIFIC_ATTRIBUTES":
		fallthrough
	case "COUNT":
		*e = SelectEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SelectEnum: %v", v)
	}
}
