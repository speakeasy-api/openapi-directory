<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ExportTransactionsCsvv4Request
{
    /**
     * End date, inclusive. Format is YYYY-MM-DD
     * 
     * @var ?\DateTime $endDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=endDate,dateTimeFormat=Y-m-d')]
    public ?\DateTime $endDate = null;
    
    /**
     * <p>Mode to determine whether to include other Payor's data in the results.</p>
     * 
     * <p>May only be used if payorId is specified.</p>
     * <p>Can be omitted or set to 'payorOnly' or 'payorAndDescendants'.</p>
     * <p>payorOnly: Only include results for the specified Payor. This is the default if 'include' is omitted.</p>
     * <p>payorAndDescendants: Aggregate results for all descendant Payors of the specified Payor. Should only be used if the Payor with the specified payorId has at least one child Payor.</p>
     * <p>Note when a Payor requests the report and include=payorAndDescendants is used, the following additional columns are included in the CSV: Payor Name, Payor Id</p>
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ExportTransactionsCsvv4IncludeEnum $include
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include')]
    public ?ExportTransactionsCsvv4IncludeEnum $include = null;
    
    /**
     * <p>The Payor ID for whom you wish to run the report.</p>
     * 
     * <p>For a Payor requesting the report, this could be their exact Payor, or it could be a child/descendant Payor.</p>
     * 
     * 
     * @var ?string $payorId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=payorId')]
    public ?string $payorId = null;
    
    /**
     * Start date, inclusive. Format is YYYY-MM-DD
     * 
     * @var ?\DateTime $startDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=startDate,dateTimeFormat=Y-m-d')]
    public ?\DateTime $startDate = null;
    
	public function __construct()
	{
		$this->endDate = null;
		$this->include = null;
		$this->payorId = null;
		$this->startDate = null;
	}
}
