"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import cvssscore as shared_cvssscore
from ..shared import vulnerablepackage as shared_vulnerablepackage
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageVulnerabilityDetails:
    r"""Information about a package vulnerability finding."""
    
    source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})  
    vulnerability_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vulnerabilityId') }})  
    cvss: Optional[list[shared_cvssscore.CvssScore]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cvss'), 'exclude': lambda f: f is None }})  
    reference_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceUrls'), 'exclude': lambda f: f is None }})  
    related_vulnerabilities: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedVulnerabilities'), 'exclude': lambda f: f is None }})  
    source_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceUrl'), 'exclude': lambda f: f is None }})  
    vendor_created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorCreatedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    vendor_severity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorSeverity'), 'exclude': lambda f: f is None }})  
    vendor_updated_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendorUpdatedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    vulnerable_packages: Optional[list[shared_vulnerablepackage.VulnerablePackage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vulnerablePackages'), 'exclude': lambda f: f is None }})  
    