// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesSpaceIDFoldersIDCommonFoldersSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesSpaceIDFoldersIDCommonFoldersPathParams struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum string

const (
	PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnumConfidential PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum = "confidential"
	PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnumRegular      PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum = "regular"
	PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnumPublic       PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum = "public"
)

func (e *PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum: %s", s)
	}
}

// PostSpacesSpaceIDFoldersIDCommonFoldersRequestBody - Common Folder to add
type PostSpacesSpaceIDFoldersIDCommonFoldersRequestBody struct {
	About        *string                                                      `json:"About,omitempty"`
	ArchivalDate *string                                                      `json:"ArchivalDate,omitempty"`
	Home         *bool                                                        `json:"Home,omitempty"`
	Keywords     []string                                                     `json:"Keywords,omitempty"`
	Level        *PostSpacesSpaceIDFoldersIDCommonFoldersRequestBodyLevelEnum `json:"Level,omitempty"`
	Name         string                                                       `json:"Name"`
	Rights       *bool                                                        `json:"Rights,omitempty"`
}

type PostSpacesSpaceIDFoldersIDCommonFoldersRequest struct {
	PathParams PostSpacesSpaceIDFoldersIDCommonFoldersPathParams
	// Common Folder to add
	Request  PostSpacesSpaceIDFoldersIDCommonFoldersRequestBody `request:"mediaType=application/json"`
	Security PostSpacesSpaceIDFoldersIDCommonFoldersSecurity
}

// PostSpacesSpaceIDFoldersIDCommonFolders201ApplicationJSON - Id of folder created
type PostSpacesSpaceIDFoldersIDCommonFolders201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDFoldersIDCommonFoldersResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of folder created
	PostSpacesSpaceIDFoldersIDCommonFolders201ApplicationJSONObject *PostSpacesSpaceIDFoldersIDCommonFolders201ApplicationJSON
}
