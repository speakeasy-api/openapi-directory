// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRuleXAmzTargetEnum
type UpdateRuleXAmzTargetEnum string

const (
	UpdateRuleXAmzTargetEnumAwswaf20150824UpdateRule UpdateRuleXAmzTargetEnum = "AWSWAF_20150824.UpdateRule"
)

func (e UpdateRuleXAmzTargetEnum) ToPointer() *UpdateRuleXAmzTargetEnum {
	return &e
}

func (e *UpdateRuleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_20150824.UpdateRule":
		*e = UpdateRuleXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateRuleXAmzTargetEnum: %v", v)
	}
}

type UpdateRuleRequest struct {
	UpdateRuleRequest shared.UpdateRuleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateRuleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateRuleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UpdateRuleResponse *shared.UpdateRuleResponse
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFInvalidOperationException
	WAFInvalidOperationException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFLimitsExceededException
	WAFLimitsExceededException interface{}
	// WAFNonexistentContainerException
	WAFNonexistentContainerException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
	// WAFReferencedItemException
	WAFReferencedItemException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
}
