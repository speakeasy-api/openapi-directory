/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomEmailLambdaVersionConfigType } from "./customemaillambdaversionconfigtype";
import { CustomSMSLambdaVersionConfigType } from "./customsmslambdaversionconfigtype";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the configuration for Lambda triggers.
 */
export class LambdaConfigType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreateAuthChallenge" })
  createAuthChallenge?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomEmailSender" })
  @Type(() => CustomEmailLambdaVersionConfigType)
  customEmailSender?: CustomEmailLambdaVersionConfigType;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomMessage" })
  customMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomSMSSender" })
  @Type(() => CustomSMSLambdaVersionConfigType)
  customSMSSender?: CustomSMSLambdaVersionConfigType;

  @SpeakeasyMetadata()
  @Expose({ name: "DefineAuthChallenge" })
  defineAuthChallenge?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KMSKeyID" })
  kmsKeyID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PostAuthentication" })
  postAuthentication?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PostConfirmation" })
  postConfirmation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreAuthentication" })
  preAuthentication?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreSignUp" })
  preSignUp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreTokenGeneration" })
  preTokenGeneration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UserMigration" })
  userMigration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VerifyAuthChallengeResponse" })
  verifyAuthChallengeResponse?: string;
}
