/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The flavor of the target platform (Windows, Linux, ARM, or GPU)
 */
export enum ExportIterationFlavorEnum {
  Linux = "Linux",
  Windows = "Windows",
}

/**
 * The target platform (coreml or tensorflow)
 */
export enum ExportIterationPlatformEnum {
  CoreML = "CoreML",
  TensorFlow = "TensorFlow",
  DockerFile = "DockerFile",
  Onnx = "ONNX",
}

export class ExportIterationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Training-Key",
  })
  trainingKey: string;

  /**
   * The flavor of the target platform (Windows, Linux, ARM, or GPU)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=flavor",
  })
  flavor?: ExportIterationFlavorEnum;

  /**
   * The iteration id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=iterationId",
  })
  iterationId: string;

  /**
   * The target platform (coreml or tensorflow)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=platform",
  })
  platform: ExportIterationPlatformEnum;

  /**
   * The project id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;
}

export class ExportIterationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  export?: shared.Export;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
