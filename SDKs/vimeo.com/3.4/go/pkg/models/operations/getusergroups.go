// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetUserGroupsPathParams struct {
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

// GetUserGroupsDirectionEnum - The sort direction of the results.
type GetUserGroupsDirectionEnum string

const (
	GetUserGroupsDirectionEnumAsc  GetUserGroupsDirectionEnum = "asc"
	GetUserGroupsDirectionEnumDesc GetUserGroupsDirectionEnum = "desc"
)

func (e *GetUserGroupsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetUserGroupsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserGroupsDirectionEnum: %s", s)
	}
}

// GetUserGroupsFilterEnum - The attribute by which to filter the results.
type GetUserGroupsFilterEnum string

const (
	GetUserGroupsFilterEnumModerated GetUserGroupsFilterEnum = "moderated"
)

func (e *GetUserGroupsFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "moderated":
		*e = GetUserGroupsFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserGroupsFilterEnum: %s", s)
	}
}

// GetUserGroupsSortEnum - The way to sort the results.
type GetUserGroupsSortEnum string

const (
	GetUserGroupsSortEnumAlphabetical GetUserGroupsSortEnum = "alphabetical"
	GetUserGroupsSortEnumDate         GetUserGroupsSortEnum = "date"
	GetUserGroupsSortEnumMembers      GetUserGroupsSortEnum = "members"
	GetUserGroupsSortEnumVideos       GetUserGroupsSortEnum = "videos"
)

func (e *GetUserGroupsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "members":
		fallthrough
	case "videos":
		*e = GetUserGroupsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUserGroupsSortEnum: %s", s)
	}
}

type GetUserGroupsQueryParams struct {
	// The sort direction of the results.
	Direction *GetUserGroupsDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetUserGroupsFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetUserGroupsSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetUserGroupsRequest struct {
	PathParams  GetUserGroupsPathParams
	QueryParams GetUserGroupsQueryParams
}

type GetUserGroupsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The groups were returned.
	Groups []shared.Group
}
