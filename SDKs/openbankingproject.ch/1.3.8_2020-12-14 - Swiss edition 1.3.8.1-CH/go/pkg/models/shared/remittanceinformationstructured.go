// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RemittanceInformationStructuredSCORorQRRorIPIEnum string

const (
	RemittanceInformationStructuredSCORorQRRorIPIEnumScor RemittanceInformationStructuredSCORorQRRorIPIEnum = "SCOR"
	RemittanceInformationStructuredSCORorQRRorIPIEnumQrr  RemittanceInformationStructuredSCORorQRRorIPIEnum = "QRR"
	RemittanceInformationStructuredSCORorQRRorIPIEnumIpi  RemittanceInformationStructuredSCORorQRRorIPIEnum = "IPI"
)

func (e *RemittanceInformationStructuredSCORorQRRorIPIEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SCOR":
		fallthrough
	case "QRR":
		fallthrough
	case "IPI":
		*e = RemittanceInformationStructuredSCORorQRRorIPIEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RemittanceInformationStructuredSCORorQRRorIPIEnum: %s", s)
	}
}

// RemittanceInformationStructured - Structured remittance information.
type RemittanceInformationStructured struct {
	SCORorQRRorIPI                  *RemittanceInformationStructuredSCORorQRRorIPIEnum `json:"SCORorQRRorIPI,omitempty"`
	AdditionalRemittanceInformation *string                                            `json:"additionalRemittanceInformation,omitempty"`
	Reference                       string                                             `json:"reference"`
	ReferenceIssuer                 *string                                            `json:"referenceIssuer,omitempty"`
	ReferenceType                   *string                                            `json:"referenceType,omitempty"`
}
