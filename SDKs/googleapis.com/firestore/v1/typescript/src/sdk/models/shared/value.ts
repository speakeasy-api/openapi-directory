/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArrayValue } from "./arrayvalue";
import { LatLng } from "./latlng";
import { MapValue } from "./mapvalue";
import { Expose, Type } from "class-transformer";

/**
 * A null value.
 */
export enum ValueNullValueEnum {
  NullValue = "NULL_VALUE",
}

/**
 * A message that can hold any of the supported value types.
 */
export class Value extends SpeakeasyBase {
  /**
   * An array value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "arrayValue" })
  @Type(() => ArrayValue)
  arrayValue?: ArrayValue;

  /**
   * A boolean value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "booleanValue" })
  booleanValue?: boolean;

  /**
   * A bytes value. Must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes are considered by queries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bytesValue" })
  bytesValue?: string;

  /**
   * A double value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doubleValue" })
  doubleValue?: number;

  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoPointValue" })
  @Type(() => LatLng)
  geoPointValue?: LatLng;

  /**
   * An integer value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integerValue" })
  integerValue?: string;

  /**
   * A map value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mapValue" })
  @Type(() => MapValue)
  mapValue?: MapValue;

  /**
   * A null value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nullValue" })
  nullValue?: ValueNullValueEnum;

  /**
   * A reference to a document. For example: `projects/{project_id}/databases/{database_id}/documents/{document_path}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "referenceValue" })
  referenceValue?: string;

  /**
   * A string value. The string, represented as UTF-8, must not exceed 1 MiB - 89 bytes. Only the first 1,500 bytes of the UTF-8 representation are considered by queries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;

  /**
   * A timestamp value. Precise only to microseconds. When stored, any additional precision is rounded down.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestampValue" })
  timestampValue?: string;
}
