"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import allowedoperation_enum as shared_allowedoperation_enum
from ..shared import grantstatus_enum as shared_grantstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Grant:
    r"""Describes a grant."""
    
    grant_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrantArn') }})  
    granted_operations: list[shared_allowedoperation_enum.AllowedOperationEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrantedOperations') }})  
    grantee_principal_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GranteePrincipalArn') }})  
    grant_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrantName') }})  
    grant_status: shared_grantstatus_enum.GrantStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrantStatus') }})  
    home_region: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRegion') }})  
    license_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LicenseArn') }})  
    parent_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParentArn') }})  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Version') }})  
    status_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusReason'), 'exclude': lambda f: f is None }})  
    