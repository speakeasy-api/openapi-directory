// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum string

const (
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumCab PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "CAB"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumIkm PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "IKM"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumPrk PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "PRK"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumTxi PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "TXI"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumVoy PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "VOY"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumPtt PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "PTT"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumFhr PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "FHR"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumDiv PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "DIV"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnumRes PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum = "RES"
)

func (e PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum) ToPointer() *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum {
	return &e
}

func (e *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAB":
		fallthrough
	case "IKM":
		fallthrough
	case "PRK":
		fallthrough
	case "TXI":
		fallthrough
	case "VOY":
		fallthrough
	case "PTT":
		fallthrough
	case "FHR":
		fallthrough
	case "DIV":
		fallthrough
	case "RES":
		*e = PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum: %v", v)
	}
}

type PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum string

const (
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnumR PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum = "R"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnumV PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum = "V"
	PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnumW PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum = "W"
)

func (e PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum) ToPointer() *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum {
	return &e
}

func (e *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "R":
		fallthrough
	case "V":
		fallthrough
	case "W":
		*e = PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum: %v", v)
	}
}

// PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBody - An expense proof to modify
type PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBody struct {
	Account         *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyAccountEnum `json:"Account,omitempty"`
	ArchivalDate    *string                                                                         `json:"ArchivalDate,omitempty"`
	BeforeVAT       *float64                                                                        `json:"BeforeVAT,omitempty"`
	ExpenseDate     *string                                                                         `json:"ExpenseDate,omitempty"`
	ExpenseReportID *string                                                                         `json:"ExpenseReportId,omitempty"`
	Provider        *string                                                                         `json:"Provider,omitempty"`
	Reason          *string                                                                         `json:"Reason,omitempty"`
	Status          *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBodyStatusEnum  `json:"Status,omitempty"`
	Vat             *float64                                                                        `json:"VAT,omitempty"`
}

type PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequest struct {
	// An expense proof to modify
	RequestBody *PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDRequestBody `request:"mediaType=application/json"`
	// Id of the document
	DocumentID string `pathParam:"style=simple,explode=false,name=documentId"`
	// Id of the folder
	FolderID string `pathParam:"style=simple,explode=false,name=folderId"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersFolderIDExpenseProofsDocumentIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
