/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { V1Money } from "./v1money";
import { V1PaymentSurcharge } from "./v1paymentsurcharge";
import { V1PaymentTax } from "./v1paymenttax";
import { Expose, Type } from "class-transformer";

/**
 * V1Refund
 */
export class V1Refund extends SpeakeasyBase {
  /**
   * The time when the merchant initiated the refund for Square to process, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * Indicates whether or not the refund is associated with an exchange. If is_exchange is true, the refund reflects the value of goods returned in the exchange not the total money refunded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_exchange" })
  isExchange?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "merchant_id" })
  merchantId?: string;

  /**
   * A Square-issued ID associated with the refund. For single-tender refunds, payment_id is the ID of the original payment ID. For split-tender refunds, payment_id is the ID of the original tender. For exchange-based refunds (is_exchange == true), payment_id is the ID of the original payment ID even if the payment includes other tenders.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payment_id" })
  paymentId?: string;

  /**
   * The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processed_at" })
  processedAt?: string;

  /**
   * The merchant-specified reason for the refund.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * All of the additive taxes associated with the refund.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentTax })
  @Expose({ name: "refunded_additive_tax" })
  @Type(() => V1PaymentTax)
  refundedAdditiveTax?: V1PaymentTax[];

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_additive_tax_money" })
  @Type(() => V1Money)
  refundedAdditiveTaxMoney?: V1Money;

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_discount_money" })
  @Type(() => V1Money)
  refundedDiscountMoney?: V1Money;

  /**
   * All of the inclusive taxes associated with the refund.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentTax })
  @Expose({ name: "refunded_inclusive_tax" })
  @Type(() => V1PaymentTax)
  refundedInclusiveTax?: V1PaymentTax[];

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_inclusive_tax_money" })
  @Type(() => V1Money)
  refundedInclusiveTaxMoney?: V1Money;

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_money" })
  @Type(() => V1Money)
  refundedMoney?: V1Money;

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_processing_fee_money" })
  @Type(() => V1Money)
  refundedProcessingFeeMoney?: V1Money;

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_surcharge_money" })
  @Type(() => V1Money)
  refundedSurchargeMoney?: V1Money;

  /**
   * A list of all surcharges associated with the refund.
   */
  @SpeakeasyMetadata({ elemType: V1PaymentSurcharge })
  @Expose({ name: "refunded_surcharges" })
  @Type(() => V1PaymentSurcharge)
  refundedSurcharges?: V1PaymentSurcharge[];

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_tax_money" })
  @Type(() => V1Money)
  refundedTaxMoney?: V1Money;

  @SpeakeasyMetadata()
  @Expose({ name: "refunded_tip_money" })
  @Type(() => V1Money)
  refundedTipMoney?: V1Money;

  /**
   * The type of refund
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
