"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ssmexternalparameter as shared_ssmexternalparameter
from ..shared import ssmparameterstoreparameter as shared_ssmparameterstoreparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SsmDocument:
    r"""AWS Systems Manager Document."""
    
    action_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionName') }})  
    ssm_document_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssmDocumentName') }})  
    external_parameters: Optional[dict[str, shared_ssmexternalparameter.SsmExternalParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalParameters'), 'exclude': lambda f: f is None }})  
    must_succeed_for_cutover: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mustSucceedForCutover'), 'exclude': lambda f: f is None }})  
    parameters: Optional[dict[str, list[shared_ssmparameterstoreparameter.SsmParameterStoreParameter]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameters'), 'exclude': lambda f: f is None }})  
    timeout_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeoutSeconds'), 'exclude': lambda f: f is None }})  
    