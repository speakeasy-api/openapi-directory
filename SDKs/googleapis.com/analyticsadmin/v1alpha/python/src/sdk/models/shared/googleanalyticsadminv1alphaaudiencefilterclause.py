"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleanalyticsadminv1alphaaudiencesequencefilter as shared_googleanalyticsadminv1alphaaudiencesequencefilter
from ..shared import googleanalyticsadminv1alphaaudiencesimplefilter as shared_googleanalyticsadminv1alphaaudiencesimplefilter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaAudienceFilterClauseClauseTypeEnum(str, Enum):
    r"""Required. Specifies whether this is an include or exclude filter clause."""
    AUDIENCE_CLAUSE_TYPE_UNSPECIFIED = 'AUDIENCE_CLAUSE_TYPE_UNSPECIFIED'
    INCLUDE = 'INCLUDE'
    EXCLUDE = 'EXCLUDE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaAudienceFilterClause:
    r"""A clause for defining either a simple or sequence filter. A filter can be inclusive (i.e., users satisfying the filter clause are included in the Audience) or exclusive (i.e., users satisfying the filter clause are excluded from the Audience)."""
    
    clause_type: Optional[GoogleAnalyticsAdminV1alphaAudienceFilterClauseClauseTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clauseType'), 'exclude': lambda f: f is None }})
    r"""Required. Specifies whether this is an include or exclude filter clause."""  
    sequence_filter: Optional[shared_googleanalyticsadminv1alphaaudiencesequencefilter.GoogleAnalyticsAdminV1alphaAudienceSequenceFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sequenceFilter'), 'exclude': lambda f: f is None }})
    r"""Defines filters that must occur in a specific order for the user to be a member of the Audience."""  
    simple_filter: Optional[shared_googleanalyticsadminv1alphaaudiencesimplefilter.GoogleAnalyticsAdminV1alphaAudienceSimpleFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('simpleFilter'), 'exclude': lambda f: f is None }})
    r"""Defines a simple filter that a user must satisfy to be a member of the Audience."""  
    