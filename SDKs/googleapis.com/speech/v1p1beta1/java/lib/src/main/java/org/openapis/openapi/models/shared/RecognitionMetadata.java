/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RecognitionMetadata - Description of audio data to be recognized.
 */
public class RecognitionMetadata {
    /**
     * Description of the content. Eg. "Recordings of federal supreme court hearings from 2012".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioTopic")
    public String audioTopic;

    public RecognitionMetadata withAudioTopic(String audioTopic) {
        this.audioTopic = audioTopic;
        return this;
    }
    
    /**
     * The industry vertical to which this speech recognition request most closely applies. This is most indicative of the topics contained in the audio. Use the 6-digit NAICS code to identify the industry vertical - see https://www.naics.com/search/.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("industryNaicsCodeOfAudio")
    public Long industryNaicsCodeOfAudio;

    public RecognitionMetadata withIndustryNaicsCodeOfAudio(Long industryNaicsCodeOfAudio) {
        this.industryNaicsCodeOfAudio = industryNaicsCodeOfAudio;
        return this;
    }
    
    /**
     * The use case most closely describing the audio content to be recognized.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interactionType")
    public RecognitionMetadataInteractionTypeEnum interactionType;

    public RecognitionMetadata withInteractionType(RecognitionMetadataInteractionTypeEnum interactionType) {
        this.interactionType = interactionType;
        return this;
    }
    
    /**
     * The audio type that most closely describes the audio being recognized.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("microphoneDistance")
    public RecognitionMetadataMicrophoneDistanceEnum microphoneDistance;

    public RecognitionMetadata withMicrophoneDistance(RecognitionMetadataMicrophoneDistanceEnum microphoneDistance) {
        this.microphoneDistance = microphoneDistance;
        return this;
    }
    
    /**
     * Obfuscated (privacy-protected) ID of the user, to identify number of unique users using the service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obfuscatedId")
    public String obfuscatedId;

    public RecognitionMetadata withObfuscatedId(String obfuscatedId) {
        this.obfuscatedId = obfuscatedId;
        return this;
    }
    
    /**
     * The original media the speech was recorded on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalMediaType")
    public RecognitionMetadataOriginalMediaTypeEnum originalMediaType;

    public RecognitionMetadata withOriginalMediaType(RecognitionMetadataOriginalMediaTypeEnum originalMediaType) {
        this.originalMediaType = originalMediaType;
        return this;
    }
    
    /**
     * Mime type of the original audio file. For example `audio/m4a`, `audio/x-alaw-basic`, `audio/mp3`, `audio/3gpp`. A list of possible audio mime types is maintained at http://www.iana.org/assignments/media-types/media-types.xhtml#audio
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalMimeType")
    public String originalMimeType;

    public RecognitionMetadata withOriginalMimeType(String originalMimeType) {
        this.originalMimeType = originalMimeType;
        return this;
    }
    
    /**
     * The device used to make the recording. Examples 'Nexus 5X' or 'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or 'Cardioid Microphone'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordingDeviceName")
    public String recordingDeviceName;

    public RecognitionMetadata withRecordingDeviceName(String recordingDeviceName) {
        this.recordingDeviceName = recordingDeviceName;
        return this;
    }
    
    /**
     * The type of device the speech was recorded with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordingDeviceType")
    public RecognitionMetadataRecordingDeviceTypeEnum recordingDeviceType;

    public RecognitionMetadata withRecordingDeviceType(RecognitionMetadataRecordingDeviceTypeEnum recordingDeviceType) {
        this.recordingDeviceType = recordingDeviceType;
        return this;
    }
    
    public RecognitionMetadata(){}
}
