"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grouptype_enum as shared_grouptype_enum
from ..shared import propertygroupupdatetype_enum as shared_propertygroupupdatetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComponentPropertyGroupRequest:
    r"""The component property group request."""
    
    group_type: Optional[shared_grouptype_enum.GroupTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupType'), 'exclude': lambda f: f is None }})  
    property_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('propertyNames'), 'exclude': lambda f: f is None }})  
    update_type: Optional[shared_propertygroupupdatetype_enum.PropertyGroupUpdateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateType'), 'exclude': lambda f: f is None }})  
    