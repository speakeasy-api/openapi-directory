// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListEntitledApplicationsXAmzTargetEnum
type ListEntitledApplicationsXAmzTargetEnum string

const (
	ListEntitledApplicationsXAmzTargetEnumPhotonAdminProxyServiceListEntitledApplications ListEntitledApplicationsXAmzTargetEnum = "PhotonAdminProxyService.ListEntitledApplications"
)

func (e *ListEntitledApplicationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PhotonAdminProxyService.ListEntitledApplications":
		*e = ListEntitledApplicationsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEntitledApplicationsXAmzTargetEnum: %s", s)
	}
}

type ListEntitledApplicationsHeaders struct {
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListEntitledApplicationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListEntitledApplicationsRequest struct {
	Headers ListEntitledApplicationsHeaders
	Request shared.ListEntitledApplicationsRequest `request:"mediaType=application/json"`
}

type ListEntitledApplicationsResponse struct {
	ContentType string
	// EntitlementNotFoundException
	EntitlementNotFoundException interface{}
	// Success
	ListEntitledApplicationsResult *shared.ListEntitledApplicationsResult
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
