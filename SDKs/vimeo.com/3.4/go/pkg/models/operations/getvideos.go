// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVideosDirectionEnum - The sort direction of the results.
type GetVideosDirectionEnum string

const (
	GetVideosDirectionEnumAsc  GetVideosDirectionEnum = "asc"
	GetVideosDirectionEnumDesc GetVideosDirectionEnum = "desc"
)

func (e *GetVideosDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetVideosDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosDirectionEnum: %s", s)
	}
}

// GetVideosFilterEnum - The attribute by which to filter the results.
type GetVideosFilterEnum string

const (
	GetVideosFilterEnumAppOnly    GetVideosFilterEnum = "app_only"
	GetVideosFilterEnumEmbeddable GetVideosFilterEnum = "embeddable"
	GetVideosFilterEnumFeatured   GetVideosFilterEnum = "featured"
	GetVideosFilterEnumPlayable   GetVideosFilterEnum = "playable"
)

func (e *GetVideosFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "app_only":
		fallthrough
	case "embeddable":
		fallthrough
	case "featured":
		fallthrough
	case "playable":
		*e = GetVideosFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosFilterEnum: %s", s)
	}
}

// GetVideosSortEnum - The way to sort the results.
type GetVideosSortEnum string

const (
	GetVideosSortEnumAlphabetical            GetVideosSortEnum = "alphabetical"
	GetVideosSortEnumComments                GetVideosSortEnum = "comments"
	GetVideosSortEnumDate                    GetVideosSortEnum = "date"
	GetVideosSortEnumDefault                 GetVideosSortEnum = "default"
	GetVideosSortEnumDuration                GetVideosSortEnum = "duration"
	GetVideosSortEnumLastUserActionEventDate GetVideosSortEnum = "last_user_action_event_date"
	GetVideosSortEnumLikes                   GetVideosSortEnum = "likes"
	GetVideosSortEnumModifiedTime            GetVideosSortEnum = "modified_time"
	GetVideosSortEnumPlays                   GetVideosSortEnum = "plays"
)

func (e *GetVideosSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "default":
		fallthrough
	case "duration":
		fallthrough
	case "last_user_action_event_date":
		fallthrough
	case "likes":
		fallthrough
	case "modified_time":
		fallthrough
	case "plays":
		*e = GetVideosSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVideosSortEnum: %s", s)
	}
}

type GetVideosRequest struct {
	// The page that contains the video URI. Only available when not paired with `query`.
	ContainingURI *string `queryParam:"style=form,explode=true,name=containing_uri"`
	// The sort direction of the results.
	Direction *GetVideosDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetVideosFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// Whether to filter by all playable videos or by all videos that are not  playable.
	FilterPlayable *bool `queryParam:"style=form,explode=true,name=filter_playable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetVideosSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

type GetVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The videos were returned.
	Videos []shared.Video
}
