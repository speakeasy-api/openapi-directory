<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UpsertVector
{
    /**
     * The unique ID of a vector
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * $metadata
     * 
     * @var ?array<string, mixed> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * Vector sparse data. Represented as a list of indices and a list of corresponded values, which must be the same length.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SparseVectorData $sparseValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('sparseValues')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SparseVectorData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SparseVectorData $sparseValues = null;
    
    /**
     * Vector dense data. This should be the same length as the dimension of the index being queried.
     * 
     * @var ?array<float> $values
     */
	#[\JMS\Serializer\Annotation\SerializedName('values')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $values = null;
    
	public function __construct()
	{
		$this->id = null;
		$this->metadata = null;
		$this->sparseValues = null;
		$this->values = null;
	}
}
