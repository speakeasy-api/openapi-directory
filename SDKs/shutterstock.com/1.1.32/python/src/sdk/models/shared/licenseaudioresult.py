"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import audiourl as shared_audiourl
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LicenseAudioResult:
    r"""The response to a licensing request for an audio track"""
    
    audio_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audio_id') }})
    r"""ID of the track that was licensed"""  
    allotment_charge: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allotment_charge'), 'exclude': lambda f: f is None }})
    r"""Number of credits that this licensing event used"""  
    download: Optional[shared_audiourl.AudioURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download'), 'exclude': lambda f: f is None }})
    r"""Audio License URL object"""  
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error information if applicable"""  
    license_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('license_id'), 'exclude': lambda f: f is None }})
    r"""ID of the license event"""  
    