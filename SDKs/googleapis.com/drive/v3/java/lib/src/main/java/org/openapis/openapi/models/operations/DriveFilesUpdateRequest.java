/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DriveFilesUpdateRequest {
    @SpeakeasyMetadata("request:mediaType=application/octet-stream")
    public byte[] requestBody;

    public DriveFilesUpdateRequest withRequestBody(byte[] requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    /**
     * A comma-separated list of parent IDs to add.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=addParents")
    public String addParents;

    public DriveFilesUpdateRequest withAddParents(String addParents) {
        this.addParents = addParents;
        return this;
    }
    
    /**
     * Data format for the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public DriveFilesUpdateRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * Deprecated. Adding files to multiple folders is no longer supported. Use shortcuts instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=enforceSingleParent")
    public Boolean enforceSingleParent;

    public DriveFilesUpdateRequest withEnforceSingleParent(Boolean enforceSingleParent) {
        this.enforceSingleParent = enforceSingleParent;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public DriveFilesUpdateRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * The ID of the file.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=fileId")
    public String fileId;

    public DriveFilesUpdateRequest withFileId(String fileId) {
        this.fileId = fileId;
        return this;
    }
    
    /**
     * A comma-separated list of IDs of labels to include in the labelInfo part of the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeLabels")
    public String includeLabels;

    public DriveFilesUpdateRequest withIncludeLabels(String includeLabels) {
        this.includeLabels = includeLabels;
        return this;
    }
    
    /**
     * Specifies which additional view's permissions to include in the response. Only 'published' is supported.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includePermissionsForView")
    public String includePermissionsForView;

    public DriveFilesUpdateRequest withIncludePermissionsForView(String includePermissionsForView) {
        this.includePermissionsForView = includePermissionsForView;
        return this;
    }
    
    /**
     * Whether to set the 'keepForever' field in the new head revision. This is only applicable to files with binary content in Google Drive. Only 200 revisions for the file can be kept forever. If the limit is reached, try deleting pinned revisions.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=keepRevisionForever")
    public Boolean keepRevisionForever;

    public DriveFilesUpdateRequest withKeepRevisionForever(Boolean keepRevisionForever) {
        this.keepRevisionForever = keepRevisionForever;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public DriveFilesUpdateRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public DriveFilesUpdateRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * A language hint for OCR processing during image import (ISO 639-1 code).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ocrLanguage")
    public String ocrLanguage;

    public DriveFilesUpdateRequest withOcrLanguage(String ocrLanguage) {
        this.ocrLanguage = ocrLanguage;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public DriveFilesUpdateRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public DriveFilesUpdateRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * A comma-separated list of parent IDs to remove.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=removeParents")
    public String removeParents;

    public DriveFilesUpdateRequest withRemoveParents(String removeParents) {
        this.removeParents = removeParents;
        return this;
    }
    
    /**
     * Whether the requesting application supports both My Drives and shared drives.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=supportsAllDrives")
    public Boolean supportsAllDrives;

    public DriveFilesUpdateRequest withSupportsAllDrives(Boolean supportsAllDrives) {
        this.supportsAllDrives = supportsAllDrives;
        return this;
    }
    
    /**
     * Deprecated use supportsAllDrives instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=supportsTeamDrives")
    public Boolean supportsTeamDrives;

    public DriveFilesUpdateRequest withSupportsTeamDrives(Boolean supportsTeamDrives) {
        this.supportsTeamDrives = supportsTeamDrives;
        return this;
    }
    
    /**
     * Whether to use the uploaded content as indexable text.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=useContentAsIndexableText")
    public Boolean useContentAsIndexableText;

    public DriveFilesUpdateRequest withUseContentAsIndexableText(Boolean useContentAsIndexableText) {
        this.useContentAsIndexableText = useContentAsIndexableText;
        return this;
    }
    
    /**
     * Deprecated. Please use quotaUser instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userIp")
    public String userIp;

    public DriveFilesUpdateRequest withUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }
    
    public DriveFilesUpdateRequest(@JsonProperty("fileId") String fileId) {
        this.fileId = fileId;
  }
}
