/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionalMetricValue } from "./dimensionalmetricvalue";
import { Expose, Type } from "class-transformer";

/**
 * The metric for which the value applies.
 */
export enum MetricValueMetricEnum {
  MetricUnspecified = "METRIC_UNSPECIFIED",
  All = "ALL",
  QueriesDirect = "QUERIES_DIRECT",
  QueriesIndirect = "QUERIES_INDIRECT",
  QueriesChain = "QUERIES_CHAIN",
  ViewsMaps = "VIEWS_MAPS",
  ViewsSearch = "VIEWS_SEARCH",
  ActionsWebsite = "ACTIONS_WEBSITE",
  ActionsPhone = "ACTIONS_PHONE",
  ActionsDrivingDirections = "ACTIONS_DRIVING_DIRECTIONS",
  PhotosViewsMerchant = "PHOTOS_VIEWS_MERCHANT",
  PhotosViewsCustomers = "PHOTOS_VIEWS_CUSTOMERS",
  PhotosCountMerchant = "PHOTOS_COUNT_MERCHANT",
  PhotosCountCustomers = "PHOTOS_COUNT_CUSTOMERS",
  LocalPostViewsSearch = "LOCAL_POST_VIEWS_SEARCH",
  LocalPostActionsCallToAction = "LOCAL_POST_ACTIONS_CALL_TO_ACTION",
}

/**
 * A value for a single Metric from a starting time.
 */
export class MetricValue extends SpeakeasyBase {
  /**
   * Dimensional values for this metric.
   */
  @SpeakeasyMetadata({ elemType: DimensionalMetricValue })
  @Expose({ name: "dimensionalValues" })
  @Type(() => DimensionalMetricValue)
  dimensionalValues?: DimensionalMetricValue[];

  /**
   * The metric for which the value applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metric" })
  metric?: MetricValueMetricEnum;

  /**
   * A value for a single metric with a given time dimension.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValue" })
  @Type(() => DimensionalMetricValue)
  totalValue?: DimensionalMetricValue;
}
