"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from ..shared import publishcatalogtomarketplacerequest as shared_publishcatalogtomarketplacerequest
from typing import Optional


@dataclasses.dataclass
class PublishCatalogToMarketplaceRequest:
    
    account_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""Account Id to query (required)"""  
    marketplace_technical_code: str = dataclasses.field(metadata={'path_param': { 'field_name': 'marketplaceTechnicalCode', 'style': 'simple', 'explode': False }})
    r"""Marketplace Technical Code to query (required)"""  
    publish_catalog_to_marketplace_request: shared_publishcatalogtomarketplacerequest.PublishCatalogToMarketplaceRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class PublishCatalogToMarketplaceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""One or more channel catalog marketplace property keys or values are invalid for requested marketplace channel catalog. See response for details."""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    