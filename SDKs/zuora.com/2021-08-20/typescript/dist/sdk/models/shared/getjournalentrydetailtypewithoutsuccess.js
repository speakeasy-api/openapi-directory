"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETJournalEntryDetailTypeWithoutSuccess = exports.GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum = exports.GETJournalEntryDetailTypeWithoutSuccessStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var getjournalentryitemtype_1 = require("./getjournalentryitemtype");
var getjournalentrysegmenttype_1 = require("./getjournalentrysegmenttype");
var class_transformer_1 = require("class-transformer");
/**
 * Status of journal entry.
 */
var GETJournalEntryDetailTypeWithoutSuccessStatusEnum;
(function (GETJournalEntryDetailTypeWithoutSuccessStatusEnum) {
    GETJournalEntryDetailTypeWithoutSuccessStatusEnum["Created"] = "Created";
    GETJournalEntryDetailTypeWithoutSuccessStatusEnum["Cancelled"] = "Cancelled";
})(GETJournalEntryDetailTypeWithoutSuccessStatusEnum = exports.GETJournalEntryDetailTypeWithoutSuccessStatusEnum || (exports.GETJournalEntryDetailTypeWithoutSuccessStatusEnum = {}));
/**
 * Status shows whether the journal entry has been transferred to an accounting system.
 */
var GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum;
(function (GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum) {
    GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum["No"] = "No";
    GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum["Processing"] = "Processing";
    GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum["Yes"] = "Yes";
    GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum["Error"] = "Error";
    GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum["Ignore"] = "Ignore";
})(GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum = exports.GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum || (exports.GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum = {}));
/**
 * Container for custom fields of a Journal Entry object.
 *
 * @remarks
 *
 */
var GETJournalEntryDetailTypeWithoutSuccess = /** @class */ (function (_super) {
    __extends(GETJournalEntryDetailTypeWithoutSuccess, _super);
    function GETJournalEntryDetailTypeWithoutSuccess() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountingPeriodName" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "accountingPeriodName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "aggregateCurrency" }),
        __metadata("design:type", Boolean)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "aggregateCurrency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "homeCurrency" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "homeCurrency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "journalEntryDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "journalEntryDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: getjournalentryitemtype_1.GETJournalEntryItemType }),
        (0, class_transformer_1.Expose)({ name: "journalEntryItems" }),
        (0, class_transformer_1.Type)(function () { return getjournalentryitemtype_1.GETJournalEntryItemType; }),
        __metadata("design:type", Array)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "journalEntryItems", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: getjournalentrysegmenttype_1.GETJournalEntrySegmentType }),
        (0, class_transformer_1.Expose)({ name: "segments" }),
        (0, class_transformer_1.Type)(function () { return getjournalentrysegmenttype_1.GETJournalEntrySegmentType; }),
        __metadata("design:type", Array)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "segments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timePeriodEnd" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "timePeriodEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timePeriodStart" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "timePeriodStart", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactionType" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "transactionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferDateTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "transferDateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredBy" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "transferredBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredToAccounting" }),
        __metadata("design:type", String)
    ], GETJournalEntryDetailTypeWithoutSuccess.prototype, "transferredToAccounting", void 0);
    return GETJournalEntryDetailTypeWithoutSuccess;
}(utils_1.SpeakeasyBase));
exports.GETJournalEntryDetailTypeWithoutSuccess = GETJournalEntryDetailTypeWithoutSuccess;
