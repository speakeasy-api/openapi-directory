// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorCategoryHTTPStatusEnum string

const (
	ErrorCategoryHTTPStatusEnumContinue                      ErrorCategoryHTTPStatusEnum = "CONTINUE"
	ErrorCategoryHTTPStatusEnumSwitchingProtocols            ErrorCategoryHTTPStatusEnum = "SWITCHING_PROTOCOLS"
	ErrorCategoryHTTPStatusEnumProcessing                    ErrorCategoryHTTPStatusEnum = "PROCESSING"
	ErrorCategoryHTTPStatusEnumOk                            ErrorCategoryHTTPStatusEnum = "OK"
	ErrorCategoryHTTPStatusEnumCreated                       ErrorCategoryHTTPStatusEnum = "CREATED"
	ErrorCategoryHTTPStatusEnumAccepted                      ErrorCategoryHTTPStatusEnum = "ACCEPTED"
	ErrorCategoryHTTPStatusEnumNonAuthoritativeInformation   ErrorCategoryHTTPStatusEnum = "NON_AUTHORITATIVE_INFORMATION"
	ErrorCategoryHTTPStatusEnumNoContent                     ErrorCategoryHTTPStatusEnum = "NO_CONTENT"
	ErrorCategoryHTTPStatusEnumResetContent                  ErrorCategoryHTTPStatusEnum = "RESET_CONTENT"
	ErrorCategoryHTTPStatusEnumPartialContent                ErrorCategoryHTTPStatusEnum = "PARTIAL_CONTENT"
	ErrorCategoryHTTPStatusEnumMultiStatus                   ErrorCategoryHTTPStatusEnum = "MULTI_STATUS"
	ErrorCategoryHTTPStatusEnumAlreadyReported               ErrorCategoryHTTPStatusEnum = "ALREADY_REPORTED"
	ErrorCategoryHTTPStatusEnumImUsed                        ErrorCategoryHTTPStatusEnum = "IM_USED"
	ErrorCategoryHTTPStatusEnumMultipleChoices               ErrorCategoryHTTPStatusEnum = "MULTIPLE_CHOICES"
	ErrorCategoryHTTPStatusEnumMovedPermanently              ErrorCategoryHTTPStatusEnum = "MOVED_PERMANENTLY"
	ErrorCategoryHTTPStatusEnumFound                         ErrorCategoryHTTPStatusEnum = "FOUND"
	ErrorCategoryHTTPStatusEnumSeeOther                      ErrorCategoryHTTPStatusEnum = "SEE_OTHER"
	ErrorCategoryHTTPStatusEnumNotModified                   ErrorCategoryHTTPStatusEnum = "NOT_MODIFIED"
	ErrorCategoryHTTPStatusEnumUseProxy                      ErrorCategoryHTTPStatusEnum = "USE_PROXY"
	ErrorCategoryHTTPStatusEnumTemporaryRedirect             ErrorCategoryHTTPStatusEnum = "TEMPORARY_REDIRECT"
	ErrorCategoryHTTPStatusEnumPermanentRedirect             ErrorCategoryHTTPStatusEnum = "PERMANENT_REDIRECT"
	ErrorCategoryHTTPStatusEnumBadRequest                    ErrorCategoryHTTPStatusEnum = "BAD_REQUEST"
	ErrorCategoryHTTPStatusEnumUnauthorized                  ErrorCategoryHTTPStatusEnum = "UNAUTHORIZED"
	ErrorCategoryHTTPStatusEnumPaymentRequired               ErrorCategoryHTTPStatusEnum = "PAYMENT_REQUIRED"
	ErrorCategoryHTTPStatusEnumForbidden                     ErrorCategoryHTTPStatusEnum = "FORBIDDEN"
	ErrorCategoryHTTPStatusEnumNotFound                      ErrorCategoryHTTPStatusEnum = "NOT_FOUND"
	ErrorCategoryHTTPStatusEnumMethodNotAllowed              ErrorCategoryHTTPStatusEnum = "METHOD_NOT_ALLOWED"
	ErrorCategoryHTTPStatusEnumNotAcceptable                 ErrorCategoryHTTPStatusEnum = "NOT_ACCEPTABLE"
	ErrorCategoryHTTPStatusEnumProxyAuthenticationRequired   ErrorCategoryHTTPStatusEnum = "PROXY_AUTHENTICATION_REQUIRED"
	ErrorCategoryHTTPStatusEnumRequestTimeout                ErrorCategoryHTTPStatusEnum = "REQUEST_TIMEOUT"
	ErrorCategoryHTTPStatusEnumConflict                      ErrorCategoryHTTPStatusEnum = "CONFLICT"
	ErrorCategoryHTTPStatusEnumGone                          ErrorCategoryHTTPStatusEnum = "GONE"
	ErrorCategoryHTTPStatusEnumLengthRequired                ErrorCategoryHTTPStatusEnum = "LENGTH_REQUIRED"
	ErrorCategoryHTTPStatusEnumPreconditionFailed            ErrorCategoryHTTPStatusEnum = "PRECONDITION_FAILED"
	ErrorCategoryHTTPStatusEnumRequestEntityTooLarge         ErrorCategoryHTTPStatusEnum = "REQUEST_ENTITY_TOO_LARGE"
	ErrorCategoryHTTPStatusEnumRequestURITooLong             ErrorCategoryHTTPStatusEnum = "REQUEST_URI_TOO_LONG"
	ErrorCategoryHTTPStatusEnumUnsupportedMediaType          ErrorCategoryHTTPStatusEnum = "UNSUPPORTED_MEDIA_TYPE"
	ErrorCategoryHTTPStatusEnumRequestedRangeNotSatisfiable  ErrorCategoryHTTPStatusEnum = "REQUESTED_RANGE_NOT_SATISFIABLE"
	ErrorCategoryHTTPStatusEnumExpectationFailed             ErrorCategoryHTTPStatusEnum = "EXPECTATION_FAILED"
	ErrorCategoryHTTPStatusEnumImATeapot                     ErrorCategoryHTTPStatusEnum = "IM_A_TEAPOT"
	ErrorCategoryHTTPStatusEnumMisdirectedRequest            ErrorCategoryHTTPStatusEnum = "MISDIRECTED_REQUEST"
	ErrorCategoryHTTPStatusEnumUnprocessableEntity           ErrorCategoryHTTPStatusEnum = "UNPROCESSABLE_ENTITY"
	ErrorCategoryHTTPStatusEnumLocked                        ErrorCategoryHTTPStatusEnum = "LOCKED"
	ErrorCategoryHTTPStatusEnumFailedDependency              ErrorCategoryHTTPStatusEnum = "FAILED_DEPENDENCY"
	ErrorCategoryHTTPStatusEnumUpgradeRequired               ErrorCategoryHTTPStatusEnum = "UPGRADE_REQUIRED"
	ErrorCategoryHTTPStatusEnumPreconditionRequired          ErrorCategoryHTTPStatusEnum = "PRECONDITION_REQUIRED"
	ErrorCategoryHTTPStatusEnumTooManyRequests               ErrorCategoryHTTPStatusEnum = "TOO_MANY_REQUESTS"
	ErrorCategoryHTTPStatusEnumRequestHeadersFieldsTooLarge  ErrorCategoryHTTPStatusEnum = "REQUEST_HEADERS_FIELDS_TOO_LARGE"
	ErrorCategoryHTTPStatusEnumInternalStaleServiceDiscovery ErrorCategoryHTTPStatusEnum = "INTERNAL_STALE_SERVICE_DISCOVERY"
	ErrorCategoryHTTPStatusEnumUnavailableForLegalReasons    ErrorCategoryHTTPStatusEnum = "UNAVAILABLE_FOR_LEGAL_REASONS"
	ErrorCategoryHTTPStatusEnumMigrationInProgress           ErrorCategoryHTTPStatusEnum = "MIGRATION_IN_PROGRESS"
	ErrorCategoryHTTPStatusEnumInternalServerError           ErrorCategoryHTTPStatusEnum = "INTERNAL_SERVER_ERROR"
	ErrorCategoryHTTPStatusEnumNotImplemented                ErrorCategoryHTTPStatusEnum = "NOT_IMPLEMENTED"
	ErrorCategoryHTTPStatusEnumBadGateway                    ErrorCategoryHTTPStatusEnum = "BAD_GATEWAY"
	ErrorCategoryHTTPStatusEnumServiceUnavailable            ErrorCategoryHTTPStatusEnum = "SERVICE_UNAVAILABLE"
	ErrorCategoryHTTPStatusEnumGatewayTimeout                ErrorCategoryHTTPStatusEnum = "GATEWAY_TIMEOUT"
	ErrorCategoryHTTPStatusEnumHTTPVersionNotSupported       ErrorCategoryHTTPStatusEnum = "HTTP_VERSION_NOT_SUPPORTED"
	ErrorCategoryHTTPStatusEnumVariantAlsoNegotiates         ErrorCategoryHTTPStatusEnum = "VARIANT_ALSO_NEGOTIATES"
	ErrorCategoryHTTPStatusEnumInsufficientStorage           ErrorCategoryHTTPStatusEnum = "INSUFFICIENT_STORAGE"
	ErrorCategoryHTTPStatusEnumLoopDetected                  ErrorCategoryHTTPStatusEnum = "LOOP_DETECTED"
	ErrorCategoryHTTPStatusEnumNotExtended                   ErrorCategoryHTTPStatusEnum = "NOT_EXTENDED"
	ErrorCategoryHTTPStatusEnumNetworkAuthenticationRequired ErrorCategoryHTTPStatusEnum = "NETWORK_AUTHENTICATION_REQUIRED"
)

func (e ErrorCategoryHTTPStatusEnum) ToPointer() *ErrorCategoryHTTPStatusEnum {
	return &e
}

func (e *ErrorCategoryHTTPStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTINUE":
		fallthrough
	case "SWITCHING_PROTOCOLS":
		fallthrough
	case "PROCESSING":
		fallthrough
	case "OK":
		fallthrough
	case "CREATED":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "NON_AUTHORITATIVE_INFORMATION":
		fallthrough
	case "NO_CONTENT":
		fallthrough
	case "RESET_CONTENT":
		fallthrough
	case "PARTIAL_CONTENT":
		fallthrough
	case "MULTI_STATUS":
		fallthrough
	case "ALREADY_REPORTED":
		fallthrough
	case "IM_USED":
		fallthrough
	case "MULTIPLE_CHOICES":
		fallthrough
	case "MOVED_PERMANENTLY":
		fallthrough
	case "FOUND":
		fallthrough
	case "SEE_OTHER":
		fallthrough
	case "NOT_MODIFIED":
		fallthrough
	case "USE_PROXY":
		fallthrough
	case "TEMPORARY_REDIRECT":
		fallthrough
	case "PERMANENT_REDIRECT":
		fallthrough
	case "BAD_REQUEST":
		fallthrough
	case "UNAUTHORIZED":
		fallthrough
	case "PAYMENT_REQUIRED":
		fallthrough
	case "FORBIDDEN":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "METHOD_NOT_ALLOWED":
		fallthrough
	case "NOT_ACCEPTABLE":
		fallthrough
	case "PROXY_AUTHENTICATION_REQUIRED":
		fallthrough
	case "REQUEST_TIMEOUT":
		fallthrough
	case "CONFLICT":
		fallthrough
	case "GONE":
		fallthrough
	case "LENGTH_REQUIRED":
		fallthrough
	case "PRECONDITION_FAILED":
		fallthrough
	case "REQUEST_ENTITY_TOO_LARGE":
		fallthrough
	case "REQUEST_URI_TOO_LONG":
		fallthrough
	case "UNSUPPORTED_MEDIA_TYPE":
		fallthrough
	case "REQUESTED_RANGE_NOT_SATISFIABLE":
		fallthrough
	case "EXPECTATION_FAILED":
		fallthrough
	case "IM_A_TEAPOT":
		fallthrough
	case "MISDIRECTED_REQUEST":
		fallthrough
	case "UNPROCESSABLE_ENTITY":
		fallthrough
	case "LOCKED":
		fallthrough
	case "FAILED_DEPENDENCY":
		fallthrough
	case "UPGRADE_REQUIRED":
		fallthrough
	case "PRECONDITION_REQUIRED":
		fallthrough
	case "TOO_MANY_REQUESTS":
		fallthrough
	case "REQUEST_HEADERS_FIELDS_TOO_LARGE":
		fallthrough
	case "INTERNAL_STALE_SERVICE_DISCOVERY":
		fallthrough
	case "UNAVAILABLE_FOR_LEGAL_REASONS":
		fallthrough
	case "MIGRATION_IN_PROGRESS":
		fallthrough
	case "INTERNAL_SERVER_ERROR":
		fallthrough
	case "NOT_IMPLEMENTED":
		fallthrough
	case "BAD_GATEWAY":
		fallthrough
	case "SERVICE_UNAVAILABLE":
		fallthrough
	case "GATEWAY_TIMEOUT":
		fallthrough
	case "HTTP_VERSION_NOT_SUPPORTED":
		fallthrough
	case "VARIANT_ALSO_NEGOTIATES":
		fallthrough
	case "INSUFFICIENT_STORAGE":
		fallthrough
	case "LOOP_DETECTED":
		fallthrough
	case "NOT_EXTENDED":
		fallthrough
	case "NETWORK_AUTHENTICATION_REQUIRED":
		*e = ErrorCategoryHTTPStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCategoryHTTPStatusEnum: %v", v)
	}
}

type ErrorCategory struct {
	HTTPStatus ErrorCategoryHTTPStatusEnum `json:"httpStatus"`
	Name       string                      `json:"name"`
}
