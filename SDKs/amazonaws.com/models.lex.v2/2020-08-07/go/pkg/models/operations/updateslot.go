// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateSlotRequestBodyMultipleValuesSetting - Indicates whether a slot can return multiple values.
type UpdateSlotRequestBodyMultipleValuesSetting struct {
	AllowMultipleValues *bool `json:"allowMultipleValues,omitempty"`
}

// UpdateSlotRequestBodyObfuscationSetting - Determines whether Amazon Lex obscures slot values in conversation logs.
type UpdateSlotRequestBodyObfuscationSetting struct {
	ObfuscationSettingType *shared.ObfuscationSettingTypeEnum `json:"obfuscationSettingType,omitempty"`
}

// UpdateSlotRequestBodySubSlotSetting - Specifications for the constituent sub slots and the expression for the composite slot.
type UpdateSlotRequestBodySubSlotSetting struct {
	Expression         *string                          `json:"expression,omitempty"`
	SlotSpecifications map[string]shared.Specifications `json:"slotSpecifications,omitempty"`
}

// UpdateSlotRequestBodyValueElicitationSetting - Specifies the elicitation setting details for constituent sub slots of a composite slot.
type UpdateSlotRequestBodyValueElicitationSetting struct {
	DefaultValueSpecification *shared.SlotDefaultValueSpecification `json:"defaultValueSpecification,omitempty"`
	PromptSpecification       *shared.PromptSpecification           `json:"promptSpecification,omitempty"`
	SampleUtterances          []shared.SampleUtterance              `json:"sampleUtterances,omitempty"`
	SlotCaptureSetting        *shared.SlotCaptureSetting            `json:"slotCaptureSetting,omitempty"`
	SlotConstraint            *shared.SlotConstraintEnum            `json:"slotConstraint,omitempty"`
	// Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input.
	WaitAndContinueSpecification *shared.WaitAndContinueSpecification `json:"waitAndContinueSpecification,omitempty"`
}

type UpdateSlotRequestBody struct {
	// The new description for the slot.
	Description *string `json:"description,omitempty"`
	// Indicates whether a slot can return multiple values.
	MultipleValuesSetting *UpdateSlotRequestBodyMultipleValuesSetting `json:"multipleValuesSetting,omitempty"`
	// Determines whether Amazon Lex obscures slot values in conversation logs.
	ObfuscationSetting *UpdateSlotRequestBodyObfuscationSetting `json:"obfuscationSetting,omitempty"`
	// The new name for the slot.
	SlotName string `json:"slotName"`
	// The unique identifier of the new slot type to associate with this slot.
	SlotTypeID *string `json:"slotTypeId,omitempty"`
	// Specifications for the constituent sub slots and the expression for the composite slot.
	SubSlotSetting *UpdateSlotRequestBodySubSlotSetting `json:"subSlotSetting,omitempty"`
	// Specifies the elicitation setting details for constituent sub slots of a composite slot.
	ValueElicitationSetting UpdateSlotRequestBodyValueElicitationSetting `json:"valueElicitationSetting"`
}

type UpdateSlotRequest struct {
	RequestBody       UpdateSlotRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier of the bot that contains the slot.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The version of the bot that contains the slot. Must always be <code>DRAFT</code>.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
	// The identifier of the intent that contains the slot.
	IntentID string `pathParam:"style=simple,explode=false,name=intentId"`
	// The identifier of the language and locale that contains the slot. The string must match one of the supported locales. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
	// The unique identifier for the slot to update.
	SlotID string `pathParam:"style=simple,explode=false,name=slotId"`
}

type UpdateSlotResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateSlotResponse *shared.UpdateSlotResponse
	// ValidationException
	ValidationException interface{}
}
