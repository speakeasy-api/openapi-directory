// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartDataIngestionJobXAmzTargetEnum
type StartDataIngestionJobXAmzTargetEnum string

const (
	StartDataIngestionJobXAmzTargetEnumAwsLookoutEquipmentFrontendServiceStartDataIngestionJob StartDataIngestionJobXAmzTargetEnum = "AWSLookoutEquipmentFrontendService.StartDataIngestionJob"
)

func (e *StartDataIngestionJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSLookoutEquipmentFrontendService.StartDataIngestionJob":
		*e = StartDataIngestionJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartDataIngestionJobXAmzTargetEnum: %s", s)
	}
}

type StartDataIngestionJobRequest struct {
	StartDataIngestionJobRequest shared.StartDataIngestionJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   StartDataIngestionJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartDataIngestionJobResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StartDataIngestionJobResponse *shared.StartDataIngestionJobResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
