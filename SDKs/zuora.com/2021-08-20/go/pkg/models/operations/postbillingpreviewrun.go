// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type POSTBillingPreviewRunHeaders struct {
	// An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
	//
	ZuoraEntityIds *string `header:"style=simple,explode=false,name=Zuora-Entity-Ids"`
	// A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
	//
	// The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
	//
	ZuoraTrackID *string `header:"style=simple,explode=false,name=Zuora-Track-Id"`
}

type POSTBillingPreviewRunRequest struct {
	Headers POSTBillingPreviewRunHeaders
	Request shared.PostBillingPreviewRunParam `request:"mediaType=application/json"`
}

type POSTBillingPreviewRun200ApplicationJSON struct {
	// Id of the billing preview run.
	//
	BillingPreviewRunID *string `json:"billingPreviewRunId,omitempty"`
	// Returns `true` if the request was processed successfully.
	//
	Success *bool `json:"success,omitempty"`
}

type POSTBillingPreviewRunResponse struct {
	ContentType                                   string
	Headers                                       map[string][]string
	POSTBillingPreviewRun200ApplicationJSONObject *POSTBillingPreviewRun200ApplicationJSON
	StatusCode                                    int
	RawResponse                                   *http.Response
}
