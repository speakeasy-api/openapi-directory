// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// TransportationIncentivesLawsCategoriesOutputFormatEnum - Response format
type TransportationIncentivesLawsCategoriesOutputFormatEnum string

const (
	TransportationIncentivesLawsCategoriesOutputFormatEnumJSON TransportationIncentivesLawsCategoriesOutputFormatEnum = "json"
	TransportationIncentivesLawsCategoriesOutputFormatEnumXML  TransportationIncentivesLawsCategoriesOutputFormatEnum = "xml"
)

func (e *TransportationIncentivesLawsCategoriesOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = TransportationIncentivesLawsCategoriesOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransportationIncentivesLawsCategoriesOutputFormatEnum: %s", s)
	}
}

type TransportationIncentivesLawsCategoriesPathParams struct {
	// Response format
	OutputFormat TransportationIncentivesLawsCategoriesOutputFormatEnum `pathParam:"style=simple,explode=false,name=output_format"`
}

// TransportationIncentivesLawsCategoriesTypeEnum - Search by the category type.
type TransportationIncentivesLawsCategoriesTypeEnum string

const (
	TransportationIncentivesLawsCategoriesTypeEnumTech       TransportationIncentivesLawsCategoriesTypeEnum = "tech"
	TransportationIncentivesLawsCategoriesTypeEnumUser       TransportationIncentivesLawsCategoriesTypeEnum = "user"
	TransportationIncentivesLawsCategoriesTypeEnumRegulation TransportationIncentivesLawsCategoriesTypeEnum = "regulation"
	TransportationIncentivesLawsCategoriesTypeEnumIncentive  TransportationIncentivesLawsCategoriesTypeEnum = "incentive"
)

func (e *TransportationIncentivesLawsCategoriesTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tech":
		fallthrough
	case "user":
		fallthrough
	case "regulation":
		fallthrough
	case "incentive":
		*e = TransportationIncentivesLawsCategoriesTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransportationIncentivesLawsCategoriesTypeEnum: %s", s)
	}
}

type TransportationIncentivesLawsCategoriesQueryParams struct {
	// API Key
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// Search by the category type.
	Type *TransportationIncentivesLawsCategoriesTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type TransportationIncentivesLawsCategoriesRequest struct {
	PathParams  TransportationIncentivesLawsCategoriesPathParams
	QueryParams TransportationIncentivesLawsCategoriesQueryParams
}

type TransportationIncentivesLawsCategoriesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
