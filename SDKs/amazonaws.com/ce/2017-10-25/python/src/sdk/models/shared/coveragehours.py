"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CoverageHours:
    r"""How long a running instance either used a reservation or was On-Demand."""
    
    coverage_hours_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CoverageHoursPercentage'), 'exclude': lambda f: f is None }})  
    on_demand_hours: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnDemandHours'), 'exclude': lambda f: f is None }})  
    reserved_hours: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReservedHours'), 'exclude': lambda f: f is None }})  
    total_running_hours: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalRunningHours'), 'exclude': lambda f: f is None }})  
    