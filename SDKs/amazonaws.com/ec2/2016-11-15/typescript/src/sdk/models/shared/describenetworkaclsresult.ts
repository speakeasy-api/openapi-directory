/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Describes an association between a network ACL and a subnet.
 */
export class DescribeNetworkAclsResultNetworkAclsAssociations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  networkAclAssociationId?: string;

  @SpeakeasyMetadata()
  networkAclId?: string;

  @SpeakeasyMetadata()
  subnetId?: string;
}

/**
 * ICMP protocol: The ICMP type and code.
 */
export class DescribeNetworkAclsResultNetworkAclsEntriesIcmpTypeCode extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: number;

  @SpeakeasyMetadata()
  type?: number;
}

/**
 * TCP or UDP protocols: The range of ports the rule applies to.
 */
export class DescribeNetworkAclsResultNetworkAclsEntriesPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Indicates whether to allow or deny the traffic that matches the rule.
 */
export enum DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum {
  Allow = "allow",
  Deny = "deny",
}

/**
 * Describes an entry in a network ACL.
 */
export class DescribeNetworkAclsResultNetworkAclsEntries extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidrBlock?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  icmpTypeCode?: DescribeNetworkAclsResultNetworkAclsEntriesIcmpTypeCode;

  @SpeakeasyMetadata()
  ipv6CidrBlock?: string;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkAclsResultNetworkAclsEntriesPortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: DescribeNetworkAclsResultNetworkAclsEntriesRuleActionEnum;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * Describes a tag.
 */
export class DescribeNetworkAclsResultNetworkAclsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a network ACL.
 */
export class DescribeNetworkAclsResultNetworkAcls extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeNetworkAclsResultNetworkAclsAssociations,
  })
  associations?: DescribeNetworkAclsResultNetworkAclsAssociations[];

  @SpeakeasyMetadata({ elemType: DescribeNetworkAclsResultNetworkAclsEntries })
  entries?: DescribeNetworkAclsResultNetworkAclsEntries[];

  @SpeakeasyMetadata()
  isDefault?: boolean;

  @SpeakeasyMetadata()
  networkAclId?: string;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata({ elemType: DescribeNetworkAclsResultNetworkAclsTags })
  tags?: DescribeNetworkAclsResultNetworkAclsTags[];

  @SpeakeasyMetadata()
  vpcId?: string;
}

/**
 * Success
 */
export class DescribeNetworkAclsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DescribeNetworkAclsResultNetworkAcls })
  networkAcls?: DescribeNetworkAclsResultNetworkAcls[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
