/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KeyedAppState - Represents a keyed app state containing a key, timestamp, severity level, optional description, and optional data.
 */
public class KeyedAppState {
    /**
     * Additional field intended for machine-readable data. For example, a number or JSON object. To prevent XSS, we recommend removing any HTML from the data before displaying it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public String data;

    public KeyedAppState withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * Key indicating what the app is providing a state for. The content of the key is set by the app's developer. To prevent XSS, we recommend removing any HTML from the key before displaying it. This field will always be present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public KeyedAppState withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Free-form, human-readable message describing the app state. For example, an error message. To prevent XSS, we recommend removing any HTML from the message before displaying it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;

    public KeyedAppState withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Severity of the app state. This field will always be present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public KeyedAppStateSeverityEnum severity;

    public KeyedAppState withSeverity(KeyedAppStateSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * Timestamp of when the app set the state in milliseconds since epoch. This field will always be present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateTimestampMillis")
    public String stateTimestampMillis;

    public KeyedAppState withStateTimestampMillis(String stateTimestampMillis) {
        this.stateTimestampMillis = stateTimestampMillis;
        return this;
    }
    
    public KeyedAppState(){}
}
