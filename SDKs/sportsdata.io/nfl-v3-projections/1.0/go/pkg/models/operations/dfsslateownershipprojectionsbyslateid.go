// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DfsSlateOwnershipProjectionsBySlateidFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type DfsSlateOwnershipProjectionsBySlateidFormatEnum string

const (
	DfsSlateOwnershipProjectionsBySlateidFormatEnumXML  DfsSlateOwnershipProjectionsBySlateidFormatEnum = "XML"
	DfsSlateOwnershipProjectionsBySlateidFormatEnumJSON DfsSlateOwnershipProjectionsBySlateidFormatEnum = "JSON"
)

func (e DfsSlateOwnershipProjectionsBySlateidFormatEnum) ToPointer() *DfsSlateOwnershipProjectionsBySlateidFormatEnum {
	return &e
}

func (e *DfsSlateOwnershipProjectionsBySlateidFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = DfsSlateOwnershipProjectionsBySlateidFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DfsSlateOwnershipProjectionsBySlateidFormatEnum: %v", v)
	}
}

type DfsSlateOwnershipProjectionsBySlateidRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format DfsSlateOwnershipProjectionsBySlateidFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// SlateID of the DFS Slate you wish to get ownership projections for. Will have an empty SlateOwnershipProjections if this slate was not projected
	SlateID string `pathParam:"style=simple,explode=false,name=slateId"`
}

type DfsSlateOwnershipProjectionsBySlateidResponse struct {
	ContentType                     string
	DfsSlateWithOwnershipProjection *shared.DfsSlateWithOwnershipProjection
	StatusCode                      int
	RawResponse                     *http.Response
}
