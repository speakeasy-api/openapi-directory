// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateWorkerServerList = []string{
	"https://taskrouter.twilio.com",
}

type UpdateWorkerSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateWorkerUpdateWorkerRequest struct {
	// The SID of a valid Activity that will describe the Worker's initial state. See [Activities](https://www.twilio.com/docs/taskrouter/api/activity) for more information.
	ActivitySid *string `form:"name=ActivitySid"`
	// The JSON string that describes the Worker. For example: `{ "email": "Bob@example.com", "phone": "+5095551234" }`. This data is passed to the `assignment_callback_url` when TaskRouter assigns a Task to the Worker. Defaults to {}.
	Attributes *string `form:"name=Attributes"`
	// A descriptive string that you create to describe the Worker. It can be up to 64 characters long.
	FriendlyName *string `form:"name=FriendlyName"`
	// Whether to reject the Worker's pending reservations. This option is only valid if the Worker's new [Activity](https://www.twilio.com/docs/taskrouter/api/activity) resource has its `availability` property set to `False`.
	RejectPendingReservations *bool `form:"name=RejectPendingReservations"`
}

type UpdateWorkerRequest struct {
	// The If-Match HTTP request header
	IfMatch     *string                          `header:"style=simple,explode=false,name=If-Match"`
	RequestBody *UpdateWorkerUpdateWorkerRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The SID of the Worker resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
	// The SID of the Workspace with the Worker to update.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type UpdateWorkerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TaskrouterV1WorkspaceWorker *shared.TaskrouterV1WorkspaceWorker
}
