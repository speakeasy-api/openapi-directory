// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConsumerConnectionStateEnum string

const (
	ConsumerConnectionStateEnumAvailable  ConsumerConnectionStateEnum = "available"
	ConsumerConnectionStateEnumCallable   ConsumerConnectionStateEnum = "callable"
	ConsumerConnectionStateEnumAdded      ConsumerConnectionStateEnum = "added"
	ConsumerConnectionStateEnumConfigured ConsumerConnectionStateEnum = "configured"
	ConsumerConnectionStateEnumAuthorized ConsumerConnectionStateEnum = "authorized"
)

func (e ConsumerConnectionStateEnum) ToPointer() *ConsumerConnectionStateEnum {
	return &e
}

func (e *ConsumerConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "available":
		fallthrough
	case "callable":
		fallthrough
	case "added":
		fallthrough
	case "configured":
		fallthrough
	case "authorized":
		*e = ConsumerConnectionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsumerConnectionStateEnum: %v", v)
	}
}

type ConsumerConnection struct {
	// Type of authorization used by the connector
	AuthType   *AuthTypeEnum `json:"auth_type,omitempty"`
	ConsumerID *string       `json:"consumer_id,omitempty"`
	CreatedAt  *string       `json:"created_at,omitempty"`
	Enabled    *bool         `json:"enabled,omitempty"`
	Icon       *string       `json:"icon,omitempty"`
	ID         *string       `json:"id,omitempty"`
	Logo       *string       `json:"logo,omitempty"`
	// Attach your own consumer specific metadata
	Metadata  map[string]interface{} `json:"metadata,omitempty"`
	Name      *string                `json:"name,omitempty"`
	ServiceID *string                `json:"service_id,omitempty"`
	// Connection settings. Values will persist to `form_fields` with corresponding id
	Settings   map[string]interface{}       `json:"settings,omitempty"`
	State      *ConsumerConnectionStateEnum `json:"state,omitempty"`
	TagLine    *string                      `json:"tag_line,omitempty"`
	UnifiedAPI *string                      `json:"unified_api,omitempty"`
	UpdatedAt  *string                      `json:"updated_at,omitempty"`
	Website    *string                      `json:"website,omitempty"`
}
