/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents a bank account. For more information about
 *
 * @remarks
 * linking a bank account to a Square account, see
 * [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
 */
export class BankAccount extends SpeakeasyBase {
  /**
   * The last few digits of the account number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_number_suffix" })
  accountNumberSuffix: string;

  /**
   * The financial purpose of the associated bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_type" })
  accountType: string;

  /**
   * Read only. Name of actual financial institution.
   *
   * @remarks
   * For example "Bank of America".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bank_name" })
  bankName?: string;

  /**
   * The ISO 3166 Alpha-2 country code where the bank account is based.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  /**
   * Indicates whether it is possible for Square to send money to this bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creditable" })
  creditable: boolean;

  /**
   * The 3-character ISO 4217 currency code indicating the operating
   *
   * @remarks
   * currency of the bank account. For example, the currency code for US dollars
   * is `USD`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * Reference identifier that will be displayed to UK bank account owners
   *
   * @remarks
   * when collecting direct debit authorization. Only required for UK bank accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debit_mandate_reference_id" })
  debitMandateReferenceId?: string;

  /**
   * Indicates whether it is possible for Square to take money from this
   *
   * @remarks
   * bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "debitable" })
  debitable: boolean;

  /**
   * A Square-assigned, unique identifier for the bank account based on the
   *
   * @remarks
   * account information. The account fingerprint can be used to compare account
   * entries and determine if the they represent the same real-world bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  /**
   * Name of the account holder. This name must match the name
   *
   * @remarks
   * on the targeted bank account record.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "holder_name" })
  holderName: string;

  /**
   * The unique, Square-issued identifier for the bank account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The location to which the bank account belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * Primary identifier for the bank. For more information, see
   *
   * @remarks
   * [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primary_bank_identification_number" })
  primaryBankIdentificationNumber: string;

  /**
   * Client-provided identifier for linking the banking account to an entity
   *
   * @remarks
   * in a third-party system (for example, a bank account number or a user identifier).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference_id" })
  referenceId?: string;

  /**
   * Secondary identifier for the bank. For more information, see
   *
   * @remarks
   * [Bank Accounts API](https://developer.squareup.com/docs/bank-accounts-api).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secondary_bank_identification_number" })
  secondaryBankIdentificationNumber?: string;

  /**
   * Read-only. The current verification status of this BankAccount object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * The current version of the `BankAccount`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
