// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteConstraintXAmzTargetEnum
type DeleteConstraintXAmzTargetEnum string

const (
	DeleteConstraintXAmzTargetEnumAws242ServiceCatalogServiceDeleteConstraint DeleteConstraintXAmzTargetEnum = "AWS242ServiceCatalogService.DeleteConstraint"
)

func (e DeleteConstraintXAmzTargetEnum) ToPointer() *DeleteConstraintXAmzTargetEnum {
	return &e
}

func (e *DeleteConstraintXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.DeleteConstraint":
		*e = DeleteConstraintXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConstraintXAmzTargetEnum: %v", v)
	}
}

type DeleteConstraintRequest struct {
	DeleteConstraintInput shared.DeleteConstraintInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteConstraintXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteConstraintResponse struct {
	ContentType string
	// Success
	DeleteConstraintOutput map[string]interface{}
	// InvalidParametersException
	InvalidParametersException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
