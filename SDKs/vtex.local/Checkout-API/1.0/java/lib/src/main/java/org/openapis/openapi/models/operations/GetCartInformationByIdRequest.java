/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetCartInformationByIdRequest {
    /**
     * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Accept")
    public String accept;
    public GetCartInformationByIdRequest withAccept(String accept) {
        this.accept = accept;
        return this;
    }
    
    /**
     * Type of the content being sent.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Content-Type")
    public String contentType;
    public GetCartInformationByIdRequest withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * ID of the orderForm corresponding to the cart whose information you want to retrieve.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=orderFormId")
    public String orderFormId;
    public GetCartInformationByIdRequest withOrderFormId(String orderFormId) {
        this.orderFormId = orderFormId;
        return this;
    }
    
    /**
     * It is possible to use the [Update cart items request](https://developers.vtex.com/vtex-rest-api/reference/cart-update#itemsupdate) so as to allow outdated information in the `orderForm`, which may improve performance in some cases. To guarantee that all cart information is updated, send this request with this parameter as `true`. We recommend doing this in the final stages of the shopping experience, starting from the checkout page.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=refreshOutdatedData")
    public Boolean refreshOutdatedData;
    public GetCartInformationByIdRequest withRefreshOutdatedData(Boolean refreshOutdatedData) {
        this.refreshOutdatedData = refreshOutdatedData;
        return this;
    }
    
}
