// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type MeetingStatusSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// MeetingStatusApplicationJSONActionEnum - `end` - End a meeting.<br>
// `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.
type MeetingStatusApplicationJSONActionEnum string

const (
	MeetingStatusApplicationJSONActionEnumEnd     MeetingStatusApplicationJSONActionEnum = "end"
	MeetingStatusApplicationJSONActionEnumRecover MeetingStatusApplicationJSONActionEnum = "recover"
)

func (e *MeetingStatusApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "end":
		fallthrough
	case "recover":
		*e = MeetingStatusApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MeetingStatusApplicationJSONActionEnum: %s", s)
	}
}

type MeetingStatusApplicationJSON struct {
	// `end` - End a meeting.<br>
	// `recover` - [Recover](https://support.zoom.us/hc/en-us/articles/360038297111-Recover-a-deleted-meeting) a deleted meeting.
	//
	Action *MeetingStatusApplicationJSONActionEnum `json:"action,omitempty"`
}

type MeetingStatusRequest struct {
	RequestBody MeetingStatusApplicationJSON `request:"mediaType=application/json"`
	// The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
	//
	// While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
	MeetingID int64 `pathParam:"style=simple,explode=false,name=meetingId"`
}

type MeetingStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
