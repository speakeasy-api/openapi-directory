<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PricingConfiguration - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PricingConfiguration
{
    /**
     * Defines if access to the Pricing APIs is blocked for external requests.
     * 
     * @var ?bool $blockAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('blockAccount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $blockAccount = null;
    
    /**
     * Array with all blocked routes.
     * 
     * @var ?array<string> $blockedRoutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('blockedRoutes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $blockedRoutes = null;
    
    /**
     * Account default markup.
     * 
     * @var int $defaultMarkup
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultMarkup')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $defaultMarkup;
    
    /**
     * Defines if the account has migrated to Pricing V2.
     * 
     * @var bool $hasMigrated
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasMigrated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hasMigrated;
    
    /**
     * Defines if optional base price is allowed.
     * 
     * @var ?bool $hasOptionalBasePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasOptionalBasePrice')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasOptionalBasePrice = null;
    
    /**
     * Deprecated. Use the `priceInheritance` field instead.
     * 
     * @var ?bool $hasPriceInheritance
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasPriceInheritance')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasPriceInheritance = null;
    
    /**
     * Pricing V2 migration status.
     * 
     * @var ?string $migrationStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('migrationStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $migrationStatus = null;
    
    /**
     * Account minimum markup.
     * 
     * @var array<string, int> $minimumMarkups
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimumMarkups')]
    #[\JMS\Serializer\Annotation\Type('array<string, int>')]
    public array $minimumMarkups;
    
    /**
     * Condition of price inheritance from its parent account. This field can have three possible values: `never` if the store should never inherit prices, `nonexistent` if the store should only inherit prices in case of nonexistent prices for a given product, or `always` if the store should always inherit prices, regardless of its own prices.
     * 
     * @var ?string $priceInheritance
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceInheritance')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceInheritance = null;
    
    /**
     * Price Table Limit.
     * 
     * @var ?int $priceTableLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceTableLimit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $priceTableLimit = null;
    
    /**
     * The strategy used to get prices when there is more than one option. Possible values: `first`, `highest`, `lowest`. Default: `first`.
     * 
     * @var ?string $priceTableSelectionStrategy
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceTableSelectionStrategy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceTableSelectionStrategy = null;
    
    /**
     * Price Variation object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PricingConfigurationPriceVariation $priceVariation
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceVariation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PricingConfigurationPriceVariation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PricingConfigurationPriceVariation $priceVariation = null;
    
    /**
     * Overrides prices from sellers.
     * 
     * @var ?array<mixed> $sellersToOverride
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellersToOverride')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sellersToOverride = null;
    
    /**
     * Trade Policy Configurations array.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PricingConfigurationTradePolicyConfigs> $tradePolicyConfigs
     */
	#[\JMS\Serializer\Annotation\SerializedName('tradePolicyConfigs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PricingConfigurationTradePolicyConfigs>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tradePolicyConfigs = null;
    
	public function __construct()
	{
		$this->blockAccount = null;
		$this->blockedRoutes = null;
		$this->defaultMarkup = 0;
		$this->hasMigrated = false;
		$this->hasOptionalBasePrice = null;
		$this->hasPriceInheritance = null;
		$this->migrationStatus = null;
		$this->minimumMarkups = [];
		$this->priceInheritance = null;
		$this->priceTableLimit = null;
		$this->priceTableSelectionStrategy = null;
		$this->priceVariation = null;
		$this->sellersToOverride = null;
		$this->tradePolicyConfigs = null;
	}
}
