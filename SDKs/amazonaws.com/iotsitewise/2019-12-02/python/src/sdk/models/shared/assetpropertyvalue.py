"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import quality_enum as shared_quality_enum
from ..shared import timeinnanos as shared_timeinnanos
from ..shared import variant as shared_variant
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssetPropertyValue:
    r"""Contains asset property value information."""
    
    timestamp: shared_timeinnanos.TimeInNanos = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp') }})  
    value: shared_variant.Variant = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})  
    quality: Optional[shared_quality_enum.QualityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality'), 'exclude': lambda f: f is None }})  
    