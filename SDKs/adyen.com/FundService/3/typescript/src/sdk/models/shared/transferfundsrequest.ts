/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Amount } from "./amount";
import { Expose, Type } from "class-transformer";

export class TransferFundsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  @Type(() => Amount)
  amount: Amount;

  /**
   * The code of the account to which the funds are to be credited.
   *
   * @remarks
   * >The state of the Account Holder of this account must be Active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationAccountCode" })
  destinationAccountCode: string;

  /**
   * A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantReference" })
  merchantReference?: string;

  /**
   * The code of the account from which the funds are to be debited.
   *
   * @remarks
   * >The state of the Account Holder of this account must be Active and allow payouts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountCode" })
  sourceAccountCode: string;

  /**
   * The code related to the type of transfer being performed.
   *
   * @remarks
   * >The permitted codes differ for each platform account and are defined in their service level agreement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transferCode" })
  transferCode: string;
}
