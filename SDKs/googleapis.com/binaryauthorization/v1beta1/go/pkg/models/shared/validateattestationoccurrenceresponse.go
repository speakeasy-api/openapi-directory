// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ValidateAttestationOccurrenceResponseResultEnum - The result of the Attestation validation.
type ValidateAttestationOccurrenceResponseResultEnum string

const (
	ValidateAttestationOccurrenceResponseResultEnumResultUnspecified        ValidateAttestationOccurrenceResponseResultEnum = "RESULT_UNSPECIFIED"
	ValidateAttestationOccurrenceResponseResultEnumVerified                 ValidateAttestationOccurrenceResponseResultEnum = "VERIFIED"
	ValidateAttestationOccurrenceResponseResultEnumAttestationNotVerifiable ValidateAttestationOccurrenceResponseResultEnum = "ATTESTATION_NOT_VERIFIABLE"
)

func (e *ValidateAttestationOccurrenceResponseResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RESULT_UNSPECIFIED":
		fallthrough
	case "VERIFIED":
		fallthrough
	case "ATTESTATION_NOT_VERIFIABLE":
		*e = ValidateAttestationOccurrenceResponseResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ValidateAttestationOccurrenceResponseResultEnum: %s", s)
	}
}

// ValidateAttestationOccurrenceResponse - Response message for ValidationHelperV1.ValidateAttestationOccurrence.
type ValidateAttestationOccurrenceResponse struct {
	// The reason for denial if the Attestation couldn't be validated.
	DenialReason *string `json:"denialReason,omitempty"`
	// The result of the Attestation validation.
	Result *ValidateAttestationOccurrenceResponseResultEnum `json:"result,omitempty"`
}
