"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyVpnTunnelOptionsSpecification = exports.ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms = exports.ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms = exports.ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers = exports.ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms = exports.ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms = exports.ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers = exports.ModifyVpnTunnelOptionsSpecificationIKEVersions = void 0;
var utils_1 = require("../../../internal/utils");
var vpntunnellogoptionsspecification_1 = require("./vpntunnellogoptionsspecification");
/**
 * The IKE version that is permitted for the VPN tunnel.
 */
var ModifyVpnTunnelOptionsSpecificationIKEVersions = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationIKEVersions, _super);
    function ModifyVpnTunnelOptionsSpecificationIKEVersions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecificationIKEVersions.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationIKEVersions;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationIKEVersions = ModifyVpnTunnelOptionsSpecificationIKEVersions;
/**
 * Specifies a Diffie-Hellman group number for the VPN tunnel for phase 1 IKE negotiations.
 */
var ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers, _super);
    function ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers = ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers;
/**
 * Specifies the encryption algorithm for the VPN tunnel for phase 1 IKE negotiations.
 */
var ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms, _super);
    function ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms = ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms;
/**
 * Specifies the integrity algorithm for the VPN tunnel for phase 1 IKE negotiations.
 */
var ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms, _super);
    function ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms = ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms;
/**
 * Specifies a Diffie-Hellman group number for the VPN tunnel for phase 2 IKE negotiations.
 */
var ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers, _super);
    function ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers = ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers;
/**
 * Specifies the encryption algorithm for the VPN tunnel for phase 2 IKE negotiations.
 */
var ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms, _super);
    function ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms = ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms;
/**
 * Specifies the integrity algorithm for the VPN tunnel for phase 2 IKE negotiations.
 */
var ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms, _super);
    function ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms.prototype, "value", void 0);
    return ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms = ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms;
/**
 * The Amazon Web Services Site-to-Site VPN tunnel options to modify.
 */
var ModifyVpnTunnelOptionsSpecification = /** @class */ (function (_super) {
    __extends(ModifyVpnTunnelOptionsSpecification, _super);
    function ModifyVpnTunnelOptionsSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "dpdTimeoutAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "dpdTimeoutSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationIKEVersions,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "ikeVersions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", vpntunnellogoptionsspecification_1.VpnTunnelLogOptionsSpecification)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "logOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationPhase1DHGroupNumbers,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase1DHGroupNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationPhase1EncryptionAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase1EncryptionAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationPhase1IntegrityAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase1IntegrityAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase1LifetimeSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationPhase2DHGroupNumbers,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase2DHGroupNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationPhase2EncryptionAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase2EncryptionAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnTunnelOptionsSpecificationPhase2IntegrityAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase2IntegrityAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "phase2LifetimeSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "preSharedKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "rekeyFuzzPercentage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "rekeyMarginTimeSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "replayWindowSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "startupAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "tunnelInsideCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnTunnelOptionsSpecification.prototype, "tunnelInsideIpv6Cidr", void 0);
    return ModifyVpnTunnelOptionsSpecification;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnTunnelOptionsSpecification = ModifyVpnTunnelOptionsSpecification;
