/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Direction of the event
 */
export enum EventDirectionEnum {
  Inbound = "INBOUND",
  Outbound = "OUTBOUND",
}

/**
 * Status of the event
 */
export enum EventStateEnum {
  Initializing = "INITIALIZING",
  Ringing = "RINGING",
  Active = "ACTIVE",
  Held = "HELD",
  RemoteHeld = "REMOTE_HELD",
  Detached = "DETACHED",
  Rejected = "REJECTED",
  Cancelled = "CANCELLED",
  Answered = "ANSWERED",
  Missed = "MISSED",
}

/**
 * Record type
 */
export enum EventTypeEnum {
  Call = "CALL",
}

export class Event extends SpeakeasyBase {
  /**
   * Unique identifier of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId: number;

  /**
   * Time to answer the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answerTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  answerTime?: Date;

  /**
   * Remote caller ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callerId" })
  callerId?: string;

  /**
   * Direction of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction: EventDirectionEnum;

  /**
   * Duration of the call in milliseconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * End time of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  /**
   * External identifier of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId?: string;

  /**
   * Unique identifier of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Unique identifier of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  phoneNumber: string;

  @SpeakeasyMetadata()
  @Expose({ name: "smsData" })
  smsData?: string;

  /**
   * Start time of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;

  /**
   * Status of the event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: EventStateEnum;

  /**
   * Record type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: EventTypeEnum;

  /**
   * Unique identifier of communications provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uciId" })
  uciId: number;

  /**
   * Unique identifier of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId: number;
}
