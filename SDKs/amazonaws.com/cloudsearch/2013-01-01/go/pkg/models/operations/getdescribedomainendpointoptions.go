// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeDomainEndpointOptionsActionEnum
type GETDescribeDomainEndpointOptionsActionEnum string

const (
	GETDescribeDomainEndpointOptionsActionEnumDescribeDomainEndpointOptions GETDescribeDomainEndpointOptionsActionEnum = "DescribeDomainEndpointOptions"
)

func (e *GETDescribeDomainEndpointOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeDomainEndpointOptions":
		*e = GETDescribeDomainEndpointOptionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDomainEndpointOptionsActionEnum: %s", s)
	}
}

// GETDescribeDomainEndpointOptionsVersionEnum
type GETDescribeDomainEndpointOptionsVersionEnum string

const (
	GETDescribeDomainEndpointOptionsVersionEnumTwoThousandAndThirteen0101 GETDescribeDomainEndpointOptionsVersionEnum = "2013-01-01"
)

func (e *GETDescribeDomainEndpointOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-01":
		*e = GETDescribeDomainEndpointOptionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDomainEndpointOptionsVersionEnum: %s", s)
	}
}

type GETDescribeDomainEndpointOptionsQueryParams struct {
	Action GETDescribeDomainEndpointOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Whether to retrieve the latest configuration (which might be in a Processing state) or the current, active configuration. Defaults to <code>false</code>.
	Deployed *bool `queryParam:"style=form,explode=true,name=Deployed"`
	// A string that represents the name of a domain.
	DomainName string                                      `queryParam:"style=form,explode=true,name=DomainName"`
	Version    GETDescribeDomainEndpointOptionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeDomainEndpointOptionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeDomainEndpointOptionsRequest struct {
	QueryParams GETDescribeDomainEndpointOptionsQueryParams
	Headers     GETDescribeDomainEndpointOptionsHeaders
}

type GETDescribeDomainEndpointOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
