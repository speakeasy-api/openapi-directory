/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateTaskRequestBody {
    /**
     * A token ensuring that the action is called only once with the specified details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public CreateTaskRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The command given to the device to execute.
     */
    @JsonProperty("command")
    public CreateTaskRequestBodyCommand command;

    public CreateTaskRequestBody withCommand(CreateTaskRequestBodyCommand command) {
        this.command = command;
        return this;
    }
    
    /**
     * A description of the task and its targets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateTaskRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional metadata that you assign to a resource. You can use tags to categorize a resource in different ways, such as by purpose, owner, or environment. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateTaskRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * A list of managed device IDs.
     */
    @JsonProperty("targets")
    public String[] targets;

    public CreateTaskRequestBody withTargets(String[] targets) {
        this.targets = targets;
        return this;
    }
    
    public CreateTaskRequestBody(@JsonProperty("command") CreateTaskRequestBodyCommand command, @JsonProperty("targets") String[] targets) {
        this.command = command;
        this.targets = targets;
  }
}
