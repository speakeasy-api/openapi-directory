/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { PreservedStatePreservedDisk } from "./preservedstatepreserveddisk";
import { PreservedStatePreservedNetworkIp } from "./preservedstatepreservednetworkip";
import { Expose, Transform } from "class-transformer";

/**
 * Preserved state for a given instance.
 */
export class PreservedState extends SpeakeasyBase {
  /**
   * Preserved disks defined for this instance. This map is keyed with the device names of the disks.
   */
  @SpeakeasyMetadata({ elemType: PreservedStatePreservedDisk })
  @Expose({ name: "disks" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PreservedStatePreservedDisk> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PreservedStatePreservedDisk);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  disks?: Record<string, PreservedStatePreservedDisk>;

  /**
   * Preserved external IPs defined for this instance. This map is keyed with the name of the network interface.
   */
  @SpeakeasyMetadata({ elemType: PreservedStatePreservedNetworkIp })
  @Expose({ name: "externalIPs" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PreservedStatePreservedNetworkIp> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PreservedStatePreservedNetworkIp);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  externalIPs?: Record<string, PreservedStatePreservedNetworkIp>;

  /**
   * Preserved internal IPs defined for this instance. This map is keyed with the name of the network interface.
   */
  @SpeakeasyMetadata({ elemType: PreservedStatePreservedNetworkIp })
  @Expose({ name: "internalIPs" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PreservedStatePreservedNetworkIp> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PreservedStatePreservedNetworkIp);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  internalIPs?: Record<string, PreservedStatePreservedNetworkIp>;

  /**
   * Preserved metadata defined for this instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, string>;
}
