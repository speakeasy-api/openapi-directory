"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex:
    r"""Rule used to validate strings."""
    
    exclusive: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exclusive'), 'exclude': lambda f: f is None }})
    r"""Whether the regex matcher is applied exclusively (if true, matching values will be rejected)."""  
    regex: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regex'), 'exclude': lambda f: f is None }})
    r"""The regex applied to the input value(s)."""  
    