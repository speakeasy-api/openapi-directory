"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PhoneUserVoiceMailsSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class PhoneUserVoiceMailsStatusEnum(str, Enum):
    r"""Status of the voice mail"""
    ALL = 'all'
    READ = 'read'
    UNREAD = 'unread'


@dataclasses.dataclass
class PhoneUserVoiceMailsRequest:
    
    to: date = dataclasses.field(metadata={'query_param': { 'field_name': 'to', 'style': 'form', 'explode': True }})
    r"""End date."""  
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})
    r"""The user ID or email address of the user. For user-level apps, pass `me` as the value for userId."""  
    from_: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'from', 'style': 'form', 'explode': True }})
    r"""Start date for the query in 'yyyy-mm-dd' format. The date range defined by the \\"from\\" and \\"to\\" parameters should only be one month as the response includes only one month worth of voicemail data. The month defined should fall within the last six months."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    status: Optional[PhoneUserVoiceMailsStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Status of the voice mail"""  
    
class PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum(str, Enum):
    r"""Status of the voice mail. Can be either 'read' or 'unread'"""
    READ = 'read'
    UNREAD = 'unread'


@dataclasses.dataclass
class PhoneUserVoiceMails200ApplicationXMLVoiceMails:
    
    callee_name: Optional[str] = dataclasses.field(default=None)
    r"""Contact name of callee"""  
    callee_number: Optional[str] = dataclasses.field(default=None)
    r"""Number of callee"""  
    callee_number_type: Optional[str] = dataclasses.field(default=None)
    r"""Type of callee's number. 1 - internal | 2 - external"""  
    caller_name: Optional[str] = dataclasses.field(default=None)
    r"""Contact name of caller"""  
    caller_number: Optional[str] = dataclasses.field(default=None)
    r"""Number of caller"""  
    caller_number_type: Optional[str] = dataclasses.field(default=None)
    r"""Type of caller's number. 1 - internal | 2 - external"""  
    date_time: Optional[str] = dataclasses.field(default=None)
    r"""Date the voice mail started"""  
    download_url: Optional[str] = dataclasses.field(default=None)
    r"""Download url of attachment"""  
    duration: Optional[str] = dataclasses.field(default=None)
    r"""Duration of the voice mail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Id of voice mail"""  
    status: Optional[PhoneUserVoiceMails200ApplicationXMLVoiceMailsStatusEnum] = dataclasses.field(default=None)
    r"""Status of the voice mail. Can be either 'read' or 'unread'"""  
    

@dataclasses.dataclass
class PhoneUserVoiceMails200ApplicationXML:
    r"""Phone User Voice Mails"""
    
    from_: Optional[date] = dataclasses.field(default=None)
    r"""Start date for the query."""  
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_count: Optional[int] = dataclasses.field(default=None)
    r"""Total number of page"""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""Size of each page"""  
    to: Optional[date] = dataclasses.field(default=None)
    r"""End date."""  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""Total number of records"""  
    voice_mails: Optional[list[PhoneUserVoiceMails200ApplicationXMLVoiceMails]] = dataclasses.field(default=None)
    r"""Voice Mails"""  
    
class PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum(str, Enum):
    r"""Status of the voice mail. Can be either 'read' or 'unread'"""
    READ = 'read'
    UNREAD = 'unread'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PhoneUserVoiceMails200ApplicationJSONVoiceMails:
    
    callee_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callee_name'), 'exclude': lambda f: f is None }})
    r"""Contact name of callee"""  
    callee_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callee_number'), 'exclude': lambda f: f is None }})
    r"""Number of callee"""  
    callee_number_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callee_number_type'), 'exclude': lambda f: f is None }})
    r"""Type of callee's number. 1 - internal | 2 - external"""  
    caller_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller_name'), 'exclude': lambda f: f is None }})
    r"""Contact name of caller"""  
    caller_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller_number'), 'exclude': lambda f: f is None }})
    r"""Number of caller"""  
    caller_number_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caller_number_type'), 'exclude': lambda f: f is None }})
    r"""Type of caller's number. 1 - internal | 2 - external"""  
    date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_time'), 'exclude': lambda f: f is None }})
    r"""Date the voice mail started"""  
    download_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url'), 'exclude': lambda f: f is None }})
    r"""Download url of attachment"""  
    duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration'), 'exclude': lambda f: f is None }})
    r"""Duration of the voice mail, formatted as hh:mm:ss, for example: `06:30` for six minutes and thirty seconds."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Id of voice mail"""  
    status: Optional[PhoneUserVoiceMails200ApplicationJSONVoiceMailsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the voice mail. Can be either 'read' or 'unread'"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PhoneUserVoiceMails200ApplicationJSON:
    r"""Phone User Voice Mails"""
    
    from_: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Start date for the query."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_count'), 'exclude': lambda f: f is None }})
    r"""Total number of page"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""Size of each page"""  
    to: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""End date."""  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""Total number of records"""  
    voice_mails: Optional[list[PhoneUserVoiceMails200ApplicationJSONVoiceMails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_mails'), 'exclude': lambda f: f is None }})
    r"""Voice Mails"""  
    

@dataclasses.dataclass
class PhoneUserVoiceMailsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    phone_user_voice_mails_200_application_json_object: Optional[PhoneUserVoiceMails200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    User object returned.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    