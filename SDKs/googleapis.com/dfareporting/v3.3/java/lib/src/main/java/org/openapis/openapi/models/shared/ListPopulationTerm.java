/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListPopulationTerm - Remarketing List Population Rule Term.
 */
public class ListPopulationTerm {
    /**
     * Will be true if the term should check if the user is in the list and false if the term should check if the user is not in the list. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM. False by default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contains")
    public Boolean contains;

    public ListPopulationTerm withContains(Boolean contains) {
        this.contains = contains;
        return this;
    }
    
    /**
     * Whether to negate the comparison result of this term during rule evaluation. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("negation")
    public Boolean negation;

    public ListPopulationTerm withNegation(Boolean negation) {
        this.negation = negation;
        return this;
    }
    
    /**
     * Comparison operator of this term. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public ListPopulationTermOperatorEnum operator;

    public ListPopulationTerm withOperator(ListPopulationTermOperatorEnum operator) {
        this.operator = operator;
        return this;
    }
    
    /**
     * ID of the list in question. This field is only relevant when type is set to LIST_MEMBERSHIP_TERM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remarketingListId")
    public String remarketingListId;

    public ListPopulationTerm withRemarketingListId(String remarketingListId) {
        this.remarketingListId = remarketingListId;
        return this;
    }
    
    /**
     * List population term type determines the applicable fields in this object. If left unset or set to CUSTOM_VARIABLE_TERM, then variableName, variableFriendlyName, operator, value, and negation are applicable. If set to LIST_MEMBERSHIP_TERM then remarketingListId and contains are applicable. If set to REFERRER_TERM then operator, value, and negation are applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public ListPopulationTermTypeEnum type;

    public ListPopulationTerm withType(ListPopulationTermTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Literal to compare the variable to. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM or REFERRER_TERM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public ListPopulationTerm withValue(String value) {
        this.value = value;
        return this;
    }
    
    /**
     * Friendly name of this term's variable. This is a read-only, auto-generated field. This field is only relevant when type is left unset or set to CUSTOM_VARIABLE_TERM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variableFriendlyName")
    public String variableFriendlyName;

    public ListPopulationTerm withVariableFriendlyName(String variableFriendlyName) {
        this.variableFriendlyName = variableFriendlyName;
        return this;
    }
    
    /**
     * Name of the variable (U1, U2, etc.) being compared in this term. This field is only relevant when type is set to null, CUSTOM_VARIABLE_TERM or REFERRER_TERM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variableName")
    public String variableName;

    public ListPopulationTerm withVariableName(String variableName) {
        this.variableName = variableName;
        return this;
    }
    
    public ListPopulationTerm(){}
}
