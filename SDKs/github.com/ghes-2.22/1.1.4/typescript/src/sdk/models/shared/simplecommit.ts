/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class SimpleCommitAuthor extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class SimpleCommitCommitter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * Simple Commit
 */
export class SimpleCommit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  @Type(() => SimpleCommitAuthor)
  author: SimpleCommitAuthor;

  @SpeakeasyMetadata()
  @Expose({ name: "committer" })
  @Type(() => SimpleCommitCommitter)
  committer: SimpleCommitCommitter;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "tree_id" })
  treeId: string;
}
