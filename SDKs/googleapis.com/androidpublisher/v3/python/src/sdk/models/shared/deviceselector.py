"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deviceid as shared_deviceid
from ..shared import deviceram as shared_deviceram
from ..shared import systemfeature as shared_systemfeature
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceSelector:
    r"""Selector for a device group. A selector consists of a set of conditions on the device that should all match (logical AND) to determine a device group eligibility. For instance, if a selector specifies RAM conditions, device model inclusion and device model exclusion, a device is considered to match if: device matches RAM conditions AND device matches one of the included device models AND device doesn't match excluded device models"""
    
    device_ram: Optional[shared_deviceram.DeviceRAM] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceRam'), 'exclude': lambda f: f is None }})
    r"""Conditions about a device's RAM capabilities."""  
    excluded_device_ids: Optional[list[shared_deviceid.DeviceID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludedDeviceIds'), 'exclude': lambda f: f is None }})
    r"""Device models excluded by this selector, even if they match all other conditions."""  
    forbidden_system_features: Optional[list[shared_systemfeature.SystemFeature]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('forbiddenSystemFeatures'), 'exclude': lambda f: f is None }})
    r"""A device that has any of these system features is excluded by this selector, even if it matches all other conditions."""  
    included_device_ids: Optional[list[shared_deviceid.DeviceID]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includedDeviceIds'), 'exclude': lambda f: f is None }})
    r"""Device models included by this selector."""  
    required_system_features: Optional[list[shared_systemfeature.SystemFeature]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiredSystemFeatures'), 'exclude': lambda f: f is None }})
    r"""A device needs to have all these system features to be included by the selector."""  
    