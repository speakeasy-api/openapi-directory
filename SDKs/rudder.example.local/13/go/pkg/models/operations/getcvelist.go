// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCVEListRequestBody - cveList
type GetCVEListRequestBody struct {
	CveIds []string `json:"cveIds,omitempty"`
}

type GetCVEListRequest struct {
	Request *GetCVEListRequestBody `request:"mediaType=application/json"`
}

// GetCVEList200ApplicationJSONActionEnum - The id of the action
type GetCVEList200ApplicationJSONActionEnum string

const (
	GetCVEList200ApplicationJSONActionEnumGetCveList GetCVEList200ApplicationJSONActionEnum = "getCVEList"
)

func (e *GetCVEList200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getCVEList":
		*e = GetCVEList200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCVEList200ApplicationJSONActionEnum: %s", s)
	}
}

type GetCVEList200ApplicationJSONData struct {
	CVEs []shared.CveDetails `json:"CVEs"`
}

// GetCVEList200ApplicationJSONResultEnum - Result of the request
type GetCVEList200ApplicationJSONResultEnum string

const (
	GetCVEList200ApplicationJSONResultEnumSuccess GetCVEList200ApplicationJSONResultEnum = "success"
	GetCVEList200ApplicationJSONResultEnumError   GetCVEList200ApplicationJSONResultEnum = "error"
)

func (e *GetCVEList200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetCVEList200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCVEList200ApplicationJSONResultEnum: %s", s)
	}
}

// GetCVEList200ApplicationJSON - CVE list
type GetCVEList200ApplicationJSON struct {
	// The id of the action
	Action GetCVEList200ApplicationJSONActionEnum `json:"action"`
	Data   GetCVEList200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result GetCVEList200ApplicationJSONResultEnum `json:"result"`
}

type GetCVEListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// CVE list
	GetCVEList200ApplicationJSONObject *GetCVEList200ApplicationJSON
}
