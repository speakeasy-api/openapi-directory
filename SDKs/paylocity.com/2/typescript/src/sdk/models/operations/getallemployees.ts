/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetAllEmployeesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  paylocityAuth: string;
}

export class GetAllEmployeesRequest extends SpeakeasyBase {
  /**
   * Company Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=companyId",
  })
  companyId: string;

  /**
   * Whether to include the total record count in the header's X-Pcty-Total-Count property. Default value is true.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=includetotalcount",
  })
  includetotalcount?: boolean;

  /**
   * Page number to retrieve; page numbers are 0-based (so to get the first page of results, pass pagenumber=0). Default value is 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pagenumber",
  })
  pagenumber?: number;

  /**
   * Number of records per page. Default value is 25.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pagesize",
  })
  pagesize?: number;
}

export class GetAllEmployeesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successfully Retrieved
   */
  @SpeakeasyMetadata({ elemType: shared.EmployeeInfo })
  employeeInfos?: shared.EmployeeInfo[];

  /**
   * The company does not exist
   */
  @SpeakeasyMetadata({ elemType: shared.ErrorT })
  errors?: shared.ErrorT[];
}
