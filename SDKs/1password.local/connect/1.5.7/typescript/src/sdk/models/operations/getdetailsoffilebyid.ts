/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetDetailsOfFileByIdSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  connectToken: string;
}

export class GetDetailsOfFileByIdRequest extends SpeakeasyBase {
  /**
   * The UUID of the File to fetch
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=fileUuid",
  })
  fileUuid: string;

  /**
   * Tells server to return the base64-encoded file contents in the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=inline_files",
  })
  inlineFiles?: boolean;

  /**
   * The UUID of the Item to fetch File from
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=itemUuid",
  })
  itemUuid: string;

  /**
   * The UUID of the Vault to fetch Item from
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=vaultUuid",
  })
  vaultUuid: string;
}

export class GetDetailsOfFileByIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing token
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  file?: shared.File;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
