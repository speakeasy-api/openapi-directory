"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import substringmatchcriteria as shared_substringmatchcriteria
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplaceAllTextRequest:
    r"""Replaces all instances of text matching a criteria with replace text."""
    
    contains_text: Optional[shared_substringmatchcriteria.SubstringMatchCriteria] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containsText'), 'exclude': lambda f: f is None }})
    r"""A criteria that matches a specific string of text in the document."""  
    replace_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('replaceText'), 'exclude': lambda f: f is None }})
    r"""The text that will replace the matched text."""  
    