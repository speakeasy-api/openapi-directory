// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type GetElectioneeringRequest struct {
	// API key for https://api.data.gov. Get one at https://api.data.gov/signup.
	//
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	// First character indicates office - [P]residential, [H]ouse, [S]enate].
	// Second character is the last digit of the two-year period the ID was created.
	// Third and fourth is the candidate state. Presidential IDs don't have state.
	// Fifth and sixth is the district when the candidate first ran. This does not change if the
	// candidate/member's district changes during re-districting. Presidential IDs don't have districts.
	// The rest is sequence.
	//
	CandidateID []string `queryParam:"style=form,explode=true,name=candidate_id"`
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID []string `queryParam:"style=form,explode=true,name=committee_id"`
	Description *string  `queryParam:"style=form,explode=true,name=description"`
	// Index of last result from previous page
	LastIndex *int `queryParam:"style=form,explode=true,name=last_index"`
	// Filter for all amounts less than a value.
	MaxAmount *string `queryParam:"style=form,explode=true,name=max_amount"`
	// Maximum disbursement date
	MaxDate *types.Date `queryParam:"style=form,explode=true,name=max_date"`
	// Filter for all amounts greater than a value.
	MinAmount *string `queryParam:"style=form,explode=true,name=min_amount"`
	// Minimum disbursement date
	MinDate *types.Date `queryParam:"style=form,explode=true,name=min_date"`
	// For paginating through results, starting at page 1
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// The number of results returned per page. Defaults to 20.
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Forms with coverage date -
	//     year from the coverage ending date.
	// Forms without coverage date -
	//     year from the receipt date.
	//
	ReportYear []int `queryParam:"style=form,explode=true,name=report_year"`
	// Provide a field to sort by. Use `-` for descending order.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Hide null values on sorted column(s).
	SortHideNull *bool `queryParam:"style=form,explode=true,name=sort_hide_null"`
	// Toggle that filters out all rows having sort column that is non-null
	SortNullOnly *bool `queryParam:"style=form,explode=true,name=sort_null_only"`
	// Toggle that sorts null values last
	SortNullsLast *bool `queryParam:"style=form,explode=true,name=sort_nulls_last"`
}

type GetElectioneeringResponse struct {
	ContentType        string
	ElectioneeringPage *shared.ElectioneeringPage
	StatusCode         int
	RawResponse        *http.Response
}
