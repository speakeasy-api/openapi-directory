/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetMembersRequest extends SpeakeasyBase {
  /**
   * Conversation ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=conversation_id",
  })
  conversationId: string;
}

export class GetMembers200ApplicationJSON extends SpeakeasyBase {
  /**
   * Unique name for a user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: shared.MemberStateEnum;

  /**
   * User ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId: string;

  /**
   * Unique name for a user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName: string;
}

export class GetMembersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Members List Object
   */
  @SpeakeasyMetadata({ elemType: GetMembers200ApplicationJSON })
  getMembers200ApplicationJSONObjects?: GetMembers200ApplicationJSON[];
}
