"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class HooksPOSTActionEnum(str, Enum):
    r"""Determines the action to execute."""
    SUBSCRIBE = 'subscribe'
    UNSUBSCRIBE = 'unsubscribe'

class HooksPOSTEventTypeEnum(str, Enum):
    r"""Type of event for which you would like to receive a webhook."""
    ALL = 'all'
    SMS_MO = 'sms_mo'
    DLR = 'dlr'
    VOICE_STATUS = 'voice_status'

class HooksPOSTRequestMethodEnum(str, Enum):
    r"""Request method in which you want to receive the webhook."""
    POST = 'POST'
    JSON = 'JSON'
    GET = 'GET'


@dataclasses.dataclass
class HooksPOSTRequest:
    
    action: HooksPOSTActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'action', 'style': 'form', 'explode': True }})
    r"""Determines the action to execute."""  
    event_type: Optional[HooksPOSTEventTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'event_type', 'style': 'form', 'explode': True }})
    r"""Type of event for which you would like to receive a webhook."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'style': 'form', 'explode': True }})
    r"""The Webhook ID you wish to unsubscribe."""  
    request_method: Optional[HooksPOSTRequestMethodEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'request_method', 'style': 'form', 'explode': True }})
    r"""Request method in which you want to receive the webhook."""  
    target_url: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'target_url', 'style': 'form', 'explode': True }})
    r"""Target URL of your Webhook."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HooksPOST200ApplicationJSON:
    r"""Hook subscribed"""
    
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class HooksPOSTResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    hooks_post_200_application_json_object: Optional[HooksPOST200ApplicationJSON] = dataclasses.field(default=None)
    r"""Hook subscribed"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    