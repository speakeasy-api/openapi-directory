/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DescribeStreamProcessorResponse - Success
 */
public class DescribeStreamProcessorResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTimestamp")
    public OffsetDateTime creationTimestamp;

    public DescribeStreamProcessorResponse withCreationTimestamp(OffsetDateTime creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataSharingPreference")
    public StreamProcessorDataSharingPreference dataSharingPreference;

    public DescribeStreamProcessorResponse withDataSharingPreference(StreamProcessorDataSharingPreference dataSharingPreference) {
        this.dataSharingPreference = dataSharingPreference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Input")
    public StreamProcessorInput input;

    public DescribeStreamProcessorResponse withInput(StreamProcessorInput input) {
        this.input = input;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKeyId")
    public String kmsKeyId;

    public DescribeStreamProcessorResponse withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdateTimestamp")
    public OffsetDateTime lastUpdateTimestamp;

    public DescribeStreamProcessorResponse withLastUpdateTimestamp(OffsetDateTime lastUpdateTimestamp) {
        this.lastUpdateTimestamp = lastUpdateTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public DescribeStreamProcessorResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * &lt;p&gt;The Amazon Simple Notification Service topic to which Amazon Rekognition publishes the object detection results and completion status of a video analysis operation.&lt;/p&gt; &lt;p&gt;Amazon Rekognition publishes a notification the first time an object of interest or a person is detected in the video stream. For example, if Amazon Rekognition detects a person at second 2, a pet at second 4, and a person again at second 5, Amazon Rekognition sends 2 object class detected notifications, one for a person at second 2 and one for a pet at second 4.&lt;/p&gt; &lt;p&gt;Amazon Rekognition also publishes an an end-of-session notification with a summary when the stream processing session is complete.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationChannel")
    public StreamProcessorNotificationChannel notificationChannel;

    public DescribeStreamProcessorResponse withNotificationChannel(StreamProcessorNotificationChannel notificationChannel) {
        this.notificationChannel = notificationChannel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Output")
    public StreamProcessorOutput output;

    public DescribeStreamProcessorResponse withOutput(StreamProcessorOutput output) {
        this.output = output;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RegionsOfInterest")
    public RegionOfInterest[] regionsOfInterest;

    public DescribeStreamProcessorResponse withRegionsOfInterest(RegionOfInterest[] regionsOfInterest) {
        this.regionsOfInterest = regionsOfInterest;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoleArn")
    public String roleArn;

    public DescribeStreamProcessorResponse withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Settings")
    public StreamProcessorSettings settings;

    public DescribeStreamProcessorResponse withSettings(StreamProcessorSettings settings) {
        this.settings = settings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public StreamProcessorStatusEnum status;

    public DescribeStreamProcessorResponse withStatus(StreamProcessorStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatusMessage")
    public String statusMessage;

    public DescribeStreamProcessorResponse withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StreamProcessorArn")
    public String streamProcessorArn;

    public DescribeStreamProcessorResponse withStreamProcessorArn(String streamProcessorArn) {
        this.streamProcessorArn = streamProcessorArn;
        return this;
    }
    
    public DescribeStreamProcessorResponse(){}
}
