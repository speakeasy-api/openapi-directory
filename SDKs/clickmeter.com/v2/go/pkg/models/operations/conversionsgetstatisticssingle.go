// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConversionsGetStatisticsSingleTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type ConversionsGetStatisticsSingleTimeFrameEnum string

const (
	ConversionsGetStatisticsSingleTimeFrameEnumToday         ConversionsGetStatisticsSingleTimeFrameEnum = "today"
	ConversionsGetStatisticsSingleTimeFrameEnumYesterday     ConversionsGetStatisticsSingleTimeFrameEnum = "yesterday"
	ConversionsGetStatisticsSingleTimeFrameEnumLast7         ConversionsGetStatisticsSingleTimeFrameEnum = "last7"
	ConversionsGetStatisticsSingleTimeFrameEnumLast30        ConversionsGetStatisticsSingleTimeFrameEnum = "last30"
	ConversionsGetStatisticsSingleTimeFrameEnumLastmonth     ConversionsGetStatisticsSingleTimeFrameEnum = "lastmonth"
	ConversionsGetStatisticsSingleTimeFrameEnumCurrentmonth  ConversionsGetStatisticsSingleTimeFrameEnum = "currentmonth"
	ConversionsGetStatisticsSingleTimeFrameEnumPreviousmonth ConversionsGetStatisticsSingleTimeFrameEnum = "previousmonth"
	ConversionsGetStatisticsSingleTimeFrameEnumLast90        ConversionsGetStatisticsSingleTimeFrameEnum = "last90"
	ConversionsGetStatisticsSingleTimeFrameEnumLast120       ConversionsGetStatisticsSingleTimeFrameEnum = "last120"
	ConversionsGetStatisticsSingleTimeFrameEnumLast180       ConversionsGetStatisticsSingleTimeFrameEnum = "last180"
	ConversionsGetStatisticsSingleTimeFrameEnumLast12months  ConversionsGetStatisticsSingleTimeFrameEnum = "last12months"
	ConversionsGetStatisticsSingleTimeFrameEnumLastyear      ConversionsGetStatisticsSingleTimeFrameEnum = "lastyear"
	ConversionsGetStatisticsSingleTimeFrameEnumCurrentyear   ConversionsGetStatisticsSingleTimeFrameEnum = "currentyear"
	ConversionsGetStatisticsSingleTimeFrameEnumBeginning     ConversionsGetStatisticsSingleTimeFrameEnum = "beginning"
	ConversionsGetStatisticsSingleTimeFrameEnumCustom        ConversionsGetStatisticsSingleTimeFrameEnum = "custom"
)

func (e *ConversionsGetStatisticsSingleTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = ConversionsGetStatisticsSingleTimeFrameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatisticsSingleTimeFrameEnum: %s", s)
	}
}

type ConversionsGetStatisticsSingleRequest struct {
	// Id of the conversion
	ConversionID int64 `pathParam:"style=simple,explode=false,name=conversionId"`
	// Is the datapoint marked as favourite
	Favourite *bool `queryParam:"style=form,explode=true,name=favourite"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// If using "yesterday" or "today" timeframe you can ask for the hourly detail
	Hourly *bool `queryParam:"style=form,explode=true,name=hourly"`
	// Filter by this tag name
	Tag *string `queryParam:"style=form,explode=true,name=tag"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame ConversionsGetStatisticsSingleTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type ConversionsGetStatisticsSingleResponse struct {
	APICoreDtoAggregatedAggregatedResult *shared.APICoreDtoAggregatedAggregatedResult
	ContentType                          string
	StatusCode                           int
	RawResponse                          *http.Response
}
