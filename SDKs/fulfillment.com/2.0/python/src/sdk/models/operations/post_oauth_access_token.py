"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import oneorders_get_responses_404_content_application_1json_schema as shared_oneorders_get_responses_404_content_application_1json_schema
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2GrantTypeEnum(str, Enum):
    r"""Indicates how you're authenticating your request"""
    PASSWORD = 'password'
    REFRESH_TOKEN = 'refresh_token'

class PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2ScopeEnum(str, Enum):
    r"""Currently limited to Order Management System"""
    OMS = 'oms'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV3:
    
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id') }})
    r"""Id and secret provided by FDC"""  
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_secret') }})  
    grant_type: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2GrantTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grant_type') }})
    r"""Indicates how you're authenticating your request"""  
    refresh_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh_token') }})
    r"""You may request future tokens with the `refresh_token` from your previous `/oauth/access_token` request"""  
    scope: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2ScopeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope') }})
    r"""Currently limited to Order Management System"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2:
    
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id') }})
    r"""Id and secret provided by FDC"""  
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_secret') }})  
    grant_type: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2GrantTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grant_type') }})
    r"""Indicates how you're authenticating your request"""  
    password: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password') }})  
    scope: PostOauthAccessTokenRequestBodyAccessTokenRequestBaseV2ScopeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope') }})
    r"""Currently limited to Order Management System"""  
    username: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostOauthAccessTokenAccessTokenResponseV2:
    r"""Authorized"""
    
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token'), 'exclude': lambda f: f is None }})  
    expires_in: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_in'), 'exclude': lambda f: f is None }})  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh_token'), 'exclude': lambda f: f is None }})  
    token_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_type'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostOauthAccessTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    oneorders_get_responses_404_content_application_1json_schema: Optional[shared_oneorders_get_responses_404_content_application_1json_schema.OneordersGetResponses404ContentApplication1jsonSchema] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    access_token_response_v2: Optional[PostOauthAccessTokenAccessTokenResponseV2] = dataclasses.field(default=None)
    r"""Authorized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    