"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import client as shared_client
from typing import Optional


@dataclasses.dataclass
class PutClientsIDClientRequestBody:
    
    config: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'config' }})
    r"""custom config about the client"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description' }})
    r"""text to display as a default description"""  
    description_banks: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description_banks' }})
    r"""text to display as a description for banks"""  
    description_providers: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'description_providers' }})
    r"""text to display as a description for providers"""  
    generate_keys: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'generate_keys' }})
    r"""set a rsa key pair for the client, which make it possible to generate a jwt user token using this client. No effect if the client already has a set of keys(default: False)"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""name of client"""  
    primary_color: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'primary_color' }})
    r"""hexadecimal code of the client primary color (e.g F45B9A)"""  
    pro: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'pro' }})
    r"""Wether the client should display the company manager page"""  
    redirect_uris: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'redirect_uris' }})
    r"""list of allowed redirect uris"""  
    secondary_color: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'secondary_color' }})
    r"""hexadecimal code of the client secondary color (e.g F45B9A)"""  
    secret: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'secret' }})
    r"""reset the secret"""  
    update_config: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'update_config' }})
    r"""update the custom information about the client instead of replacing the existing one (default: True)"""  
    

@dataclasses.dataclass
class PutClientsIDClientRequest:
    
    id_client: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_client', 'style': 'simple', 'explode': False }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    request_body: Optional[PutClientsIDClientRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class PutClientsIDClientResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    client: Optional[shared_client.Client] = dataclasses.field(default=None)
    r"""Successful PUT on Client resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    