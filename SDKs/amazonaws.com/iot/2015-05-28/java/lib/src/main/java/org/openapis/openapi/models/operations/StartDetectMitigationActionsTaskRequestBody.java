/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartDetectMitigationActionsTaskRequestBody {
    /**
     *  The actions to be performed when a device has unexpected behavior. 
     */
    @JsonProperty("actions")
    public String[] actions;

    public StartDetectMitigationActionsTaskRequestBody withActions(String[] actions) {
        this.actions = actions;
        return this;
    }
    
    /**
     *  Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request. 
     */
    @JsonProperty("clientRequestToken")
    public String clientRequestToken;

    public StartDetectMitigationActionsTaskRequestBody withClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
        return this;
    }
    
    /**
     *  Specifies to list only active violations. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeOnlyActiveViolations")
    public Boolean includeOnlyActiveViolations;

    public StartDetectMitigationActionsTaskRequestBody withIncludeOnlyActiveViolations(Boolean includeOnlyActiveViolations) {
        this.includeOnlyActiveViolations = includeOnlyActiveViolations;
        return this;
    }
    
    /**
     *  Specifies to include suppressed alerts. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeSuppressedAlerts")
    public Boolean includeSuppressedAlerts;

    public StartDetectMitigationActionsTaskRequestBody withIncludeSuppressedAlerts(Boolean includeSuppressedAlerts) {
        this.includeSuppressedAlerts = includeSuppressedAlerts;
        return this;
    }
    
    /**
     *  The target of a mitigation action task. 
     */
    @JsonProperty("target")
    public StartDetectMitigationActionsTaskRequestBodyTarget target;

    public StartDetectMitigationActionsTaskRequestBody withTarget(StartDetectMitigationActionsTaskRequestBodyTarget target) {
        this.target = target;
        return this;
    }
    
    /**
     *  Specifies the time period of which violation events occurred between. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("violationEventOccurrenceRange")
    public StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange violationEventOccurrenceRange;

    public StartDetectMitigationActionsTaskRequestBody withViolationEventOccurrenceRange(StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange violationEventOccurrenceRange) {
        this.violationEventOccurrenceRange = violationEventOccurrenceRange;
        return this;
    }
    
    public StartDetectMitigationActionsTaskRequestBody(@JsonProperty("actions") String[] actions, @JsonProperty("clientRequestToken") String clientRequestToken, @JsonProperty("target") StartDetectMitigationActionsTaskRequestBodyTarget target) {
        this.actions = actions;
        this.clientRequestToken = clientRequestToken;
        this.target = target;
  }
}
