/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NAUserAdministrative {
    /**
     * user country
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public NAUserAdministrative withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * algorithm used to compute feel like temperature, 0 -&gt; humidex, 1 -&gt; heat-index
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feel_like_algo")
    public String feelLikeAlgo;

    public NAUserAdministrative withFeelLikeAlgo(String feelLikeAlgo) {
        this.feelLikeAlgo = feelLikeAlgo;
        return this;
    }
    
    /**
     * user locale
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lang")
    public String lang;

    public NAUserAdministrative withLang(String lang) {
        this.lang = lang;
        return this;
    }
    
    /**
     * 0 -&gt; mbar, 1 -&gt; inHg, 2 -&gt; mmHg
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pressureunit")
    public String pressureunit;

    public NAUserAdministrative withPressureunit(String pressureunit) {
        this.pressureunit = pressureunit;
        return this;
    }
    
    /**
     * user regional preferences (used for displaying date)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reg_locale")
    public String regLocale;

    public NAUserAdministrative withRegLocale(String regLocale) {
        this.regLocale = regLocale;
        return this;
    }
    
    /**
     * 0 -&gt; metric system, 1 -&gt; imperial system
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public String unit;

    public NAUserAdministrative withUnit(String unit) {
        this.unit = unit;
        return this;
    }
    
    /**
     * 0 -&gt; kph, 1 -&gt; mph, 2 -&gt; ms, 3 -&gt; beaufort, 4 -&gt; knot
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("windunit")
    public String windunit;

    public NAUserAdministrative withWindunit(String windunit) {
        this.windunit = windunit;
        return this;
    }
    
    public NAUserAdministrative(){}
}
