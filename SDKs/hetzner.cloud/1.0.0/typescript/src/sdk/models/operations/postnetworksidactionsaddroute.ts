/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostNetworksIdActionsAddRouteAddDeleteRouteRequest extends SpeakeasyBase {
  /**
   * Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  destination: string;

  /**
   * Gateway for the route. Cannot be the first IP of the networks ip_range, an IP behind a vSwitch or 172.31.1.1, as this IP is being used as a gateway for the public network interface of Servers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gateway" })
  gateway: string;
}

export class PostNetworksIdActionsAddRouteRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostNetworksIdActionsAddRouteAddDeleteRouteRequest;

  /**
   * ID of the Network
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Error message for the Action if error occurred, otherwise null
 */
export class PostNetworksIdActionsAddRouteActionResponseActionError extends SpeakeasyBase {
  /**
   * Fixed machine readable code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * Humanized error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class PostNetworksIdActionsAddRouteActionResponseActionResources extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Status of the Action
 */
export enum PostNetworksIdActionsAddRouteActionResponseActionStatusEnum {
  Success = "success",
  Running = "running",
  Error = "error",
}

export class PostNetworksIdActionsAddRouteActionResponseAction extends SpeakeasyBase {
  /**
   * Command executed in the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "command" })
  command: string;

  /**
   * Error message for the Action if error occurred, otherwise null
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => PostNetworksIdActionsAddRouteActionResponseActionError)
  error: PostNetworksIdActionsAddRouteActionResponseActionError;

  /**
   * Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finished" })
  finished: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Progress of Action in percent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress: number;

  /**
   * Resources the Action relates to
   */
  @SpeakeasyMetadata({
    elemType: PostNetworksIdActionsAddRouteActionResponseActionResources,
  })
  @Expose({ name: "resources" })
  @Type(() => PostNetworksIdActionsAddRouteActionResponseActionResources)
  resources: PostNetworksIdActionsAddRouteActionResponseActionResources[];

  /**
   * Point in time when the Action was started (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "started" })
  started: string;

  /**
   * Status of the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: PostNetworksIdActionsAddRouteActionResponseActionStatusEnum;
}

/**
 * The `action` key contains the `add_route` Action
 */
export class PostNetworksIdActionsAddRouteActionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  @Type(() => PostNetworksIdActionsAddRouteActionResponseAction)
  action: PostNetworksIdActionsAddRouteActionResponseAction;
}

export class PostNetworksIdActionsAddRouteResponse extends SpeakeasyBase {
  /**
   * The `action` key contains the `add_route` Action
   */
  @SpeakeasyMetadata()
  actionResponse?: PostNetworksIdActionsAddRouteActionResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
