"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class PUTSpecificDateAllocationTypeDistributionTypeEnum(str, Enum):
    r"""How to distribute the revenue for milestone-based recognition."""
    SPECIFIC_DATE_DELTA_FIXED_AMOUNT_ = 'specific date (delta fixed amount)'
    SPECIFIC_DATE_DELTA_PERCENT_TOTAL_ = 'specific date (delta percent total)'
    SPECIFIC_DATE_DELTA_PERCENT_UNDISTRIBUTED_ = 'specific date (delta percent undistributed)'

class PUTSpecificDateAllocationTypeEventTypeEnum(str, Enum):
    r"""Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
    
    Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
    """
    INVOICE_POSTED = 'Invoice Posted'
    INVOICE_ITEM_ADJUSTMENT_CREATED = 'Invoice Item Adjustment Created'
    INVOICE_CANCELED = 'Invoice Canceled'
    INVOICE_ITEM_ADJUSTMENT_CANCELED = 'Invoice Item Adjustment Canceled'
    REVENUE_DISTRIBUTED = 'Revenue Distributed'
    CREDIT_MEMO_POSTED = 'Credit Memo Posted'
    DEBIT_MEMO_POSTED = 'Debit Memo Posted'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PUTSpecificDateAllocationType:
    r"""Container for custom fields of a Revenue Event object."""
    
    distribute_on: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distributeOn'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""The recognition date on which to distribute revenue for milestone-based recognition.
    
    Type: date in `yyyy-mm-dd` format.
    """  
    distribution_type: PUTSpecificDateAllocationTypeDistributionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distributionType') }})
    r"""How to distribute the revenue for milestone-based recognition."""  
    amount: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`"""  
    event_type: Optional[PUTSpecificDateAllocationTypeEventTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventType'), 'exclude': lambda f: f is None }})
    r"""Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.
    
    Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
    """  
    event_type_system_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTypeSystemId'), 'exclude': lambda f: f is None }})
    r"""System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Additional information about this record."""  
    percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage'), 'exclude': lambda f: f is None }})
    r"""Percentage of the total recognition amount or total undistributed to distribute.
    
    Required if distributionType is either:
    * specific date (delta percent total)
    * specific date (delta percent undistributed)
    """  
    