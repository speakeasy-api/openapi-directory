"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class QuittungTSERequest:
    
    account: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'account', 'style': 'form', 'explode': True }})
    r"""Quittung Identifier  (serialnumber generated during receipt generation process)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuittungTSE200ApplicationJSON:
    r"""Success"""
    
    data: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})
    r"""JSON object that got signed by TSE."""  
    publickey: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publickey'), 'exclude': lambda f: f is None }})
    r"""Public Key of TSE"""  
    raw: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('raw'), 'exclude': lambda f: f is None }})
    r"""Datastring of JSON Object as it got used to create signature."""  
    signature: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature'), 'exclude': lambda f: f is None }})
    r"""Resulting signature by signing raw datastring using private key of TSE."""  
    

@dataclasses.dataclass
class QuittungTSEResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    quittung_tse_200_application_json_object: Optional[QuittungTSE200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    