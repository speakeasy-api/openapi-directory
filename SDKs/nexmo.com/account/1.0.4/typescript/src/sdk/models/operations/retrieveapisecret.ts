/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RetrieveAPISecretSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class RetrieveAPISecretRequest extends SpeakeasyBase {
  /**
   * The API key to manage secrets for
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=api_key",
  })
  apiKey: string;

  /**
   * ID of the API Secret
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=secret_id",
  })
  secretId: string;
}

/**
 * Credentials are missing or invalid
 */
export class RetrieveAPISecret401ApplicationJSON extends SpeakeasyBase {
  /**
   * More detail regarding this error, including the expected value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * Internal Trace ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instance" })
  instance?: string;

  /**
   * Description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * URL for further information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class RetrieveAPISecretResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Credentials are missing or invalid
   */
  @SpeakeasyMetadata()
  retrieveAPISecret401ApplicationJSONObject?: RetrieveAPISecret401ApplicationJSON;

  /**
   * Item not found
   */
  @SpeakeasyMetadata()
  retrieveAPISecret404ApplicationJSONOneOf?: any;

  /**
   * API secret response
   */
  @SpeakeasyMetadata()
  secretInfo?: shared.SecretInfo;
}
