/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ChannelTypeConfig } from "./channeltypeconfig";
import { Expose, Transform } from "class-transformer";

/**
 * Successful response
 */
export class ListChannelTypesResponse extends SpeakeasyBase {
  /**
   * Object with all channel types
   */
  @SpeakeasyMetadata({ elemType: ChannelTypeConfig })
  @Expose({ name: "channel_types" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ChannelTypeConfig> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ChannelTypeConfig);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  channelTypes: Record<string, ChannelTypeConfig>;

  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: string;
}
