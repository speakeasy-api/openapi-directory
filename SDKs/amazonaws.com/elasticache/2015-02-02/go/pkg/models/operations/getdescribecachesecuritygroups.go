// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeCacheSecurityGroupsActionEnum
type GETDescribeCacheSecurityGroupsActionEnum string

const (
	GETDescribeCacheSecurityGroupsActionEnumDescribeCacheSecurityGroups GETDescribeCacheSecurityGroupsActionEnum = "DescribeCacheSecurityGroups"
)

func (e *GETDescribeCacheSecurityGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeCacheSecurityGroups":
		*e = GETDescribeCacheSecurityGroupsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeCacheSecurityGroupsActionEnum: %s", s)
	}
}

// GETDescribeCacheSecurityGroupsVersionEnum
type GETDescribeCacheSecurityGroupsVersionEnum string

const (
	GETDescribeCacheSecurityGroupsVersionEnumTwoThousandAndFifteen0202 GETDescribeCacheSecurityGroupsVersionEnum = "2015-02-02"
)

func (e *GETDescribeCacheSecurityGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-02-02":
		*e = GETDescribeCacheSecurityGroupsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeCacheSecurityGroupsVersionEnum: %s", s)
	}
}

type GETDescribeCacheSecurityGroupsRequest struct {
	Action GETDescribeCacheSecurityGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the cache security group to return details for.
	CacheSecurityGroupName *string `queryParam:"style=form,explode=true,name=CacheSecurityGroupName"`
	// An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a marker is included in the response so that the remaining results can be retrieved.</p> <p>Default: 100</p> <p>Constraints: minimum 20; maximum 100.</p>
	MaxRecords        *int64                                    `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version           GETDescribeCacheSecurityGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeCacheSecurityGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
