/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * EventsV1Sink - Created
 */
public class EventsV1Sink {
    /**
     * The date that this Sink was created, given in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public EventsV1Sink withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date that this Sink was updated, given in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public EventsV1Sink withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * A human readable description for the Sink
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public EventsV1Sink withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Contains a dictionary of URL links to nested resources of this Sink.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;
    public EventsV1Sink withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * A 34 character string that uniquely identifies this Sink.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public EventsV1Sink withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * The information required for Twilio to connect to the provided Sink encoded as JSON.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sink_configuration")
    public Object sinkConfiguration;
    public EventsV1Sink withSinkConfiguration(Object sinkConfiguration) {
        this.sinkConfiguration = sinkConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sink_type")
    public SinkEnumSinkTypeEnum sinkType;
    public EventsV1Sink withSinkType(SinkEnumSinkTypeEnum sinkType) {
        this.sinkType = sinkType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public SinkEnumStatusEnum status;
    public EventsV1Sink withStatus(SinkEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The URL of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public EventsV1Sink withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
