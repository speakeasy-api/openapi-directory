<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CommitSearchResultItem - Commit Search Result Item
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CommitSearchResultItem
{
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $author;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('commit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommitSearchResultItemCommit')]
    public CommitSearchResultItemCommit $commit;
    
    /**
     * Metaproperties for Git author/committer information.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableGitUser $committer
     */
	#[\JMS\Serializer\Annotation\SerializedName('committer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableGitUser')]
    public NullableGitUser $committer;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * $parents
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\CommitSearchResultItemParents> $parents
     */
	#[\JMS\Serializer\Annotation\SerializedName('parents')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CommitSearchResultItemParents>')]
    public array $parents;
    
    /**
     * Minimal Repository
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\MinimalRepository $repository
     */
	#[\JMS\Serializer\Annotation\SerializedName('repository')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MinimalRepository')]
    public MinimalRepository $repository;
    
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $score;
    
	#[\JMS\Serializer\Annotation\SerializedName('sha')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sha;
    
    /**
     * $textMatches
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SearchResultTextMatches> $textMatches
     */
	#[\JMS\Serializer\Annotation\SerializedName('text_matches')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SearchResultTextMatches>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $textMatches = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->author = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->commentsUrl = "";
		$this->commit = new \OpenAPI\OpenAPI\Models\Shared\CommitSearchResultItemCommit();
		$this->committer = new \OpenAPI\OpenAPI\Models\Shared\NullableGitUser();
		$this->htmlUrl = "";
		$this->nodeId = "";
		$this->parents = [];
		$this->repository = new \OpenAPI\OpenAPI\Models\Shared\MinimalRepository();
		$this->score = 0;
		$this->sha = "";
		$this->textMatches = null;
		$this->url = "";
	}
}
