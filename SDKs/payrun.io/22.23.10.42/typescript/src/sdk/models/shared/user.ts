/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class UserUserPermissionPermission extends SpeakeasyBase {
  /**
   * The links' href
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@href" })
  atHref?: string;

  /**
   * The links' target type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@rel" })
  atRel?: string;

  /**
   * The links' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@title" })
  atTitle?: string;
}

/**
 * The users' permissions
 */
export class UserUserPermission extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: UserUserPermissionPermission })
  @Expose({ name: "Permission" })
  @Type(() => UserUserPermissionPermission)
  permission?: UserUserPermissionPermission[];
}

/**
 * The users' roles
 */
export class UserUserRoles extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role?: string[];
}

export class UserUser extends SpeakeasyBase {
  /**
   * The users' meta data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MetaData" })
  metaData?: Record<string, any>;

  /**
   * The users' permissions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Permissions" })
  @Type(() => UserUserPermission)
  permissions?: UserUserPermission;

  /**
   * The users' roles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Roles" })
  @Type(() => UserUserRoles)
  roles?: UserUserRoles;

  /**
   * The users' user identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UserIdentifier" })
  userIdentifier?: string;
}

/**
 * The user object.
 */
export class User extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "User" })
  @Type(() => UserUser)
  user?: UserUser;
}
