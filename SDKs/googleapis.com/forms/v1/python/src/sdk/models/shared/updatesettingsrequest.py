"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import formsettings as shared_formsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSettingsRequest:
    r"""Update Form's FormSettings."""
    
    settings: Optional[shared_formsettings.FormSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settings'), 'exclude': lambda f: f is None }})
    r"""A form's settings."""  
    update_mask: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateMask'), 'exclude': lambda f: f is None }})
    r"""Required. Only values named in this mask are changed. At least one field must be specified. The root `settings` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for updating every field."""  
    