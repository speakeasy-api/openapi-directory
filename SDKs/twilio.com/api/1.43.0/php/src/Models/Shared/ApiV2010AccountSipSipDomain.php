<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ApiV2010AccountSipSipDomain - Created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ApiV2010AccountSipSipDomain
{
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the SipDomain resource.
     * 
     * @var ?string $accountSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountSid = null;
    
    /**
     * The API version used to process the call.
     * 
     * @var ?string $apiVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiVersion = null;
    
    /**
     * The types of authentication you have mapped to your domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If you have both defined for your domain, both will be returned in a comma delimited string. If `auth_type` is not defined, the domain will not be able to receive any traffic.
     * 
     * @var ?string $authType
     */
	#[\JMS\Serializer\Annotation\SerializedName('auth_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authType = null;
    
    /**
     * The SID of the BYOC Trunk(Bring Your Own Carrier) resource that the Sip Domain will be associated with.
     * 
     * @var ?string $byocTrunkSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('byoc_trunk_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $byocTrunkSid = null;
    
    /**
     * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateCreated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateCreated = null;
    
    /**
     * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateUpdated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateUpdated = null;
    
    /**
     * The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and "-" and must end with `sip.twilio.com`.
     * 
     * @var ?string $domainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domainName = null;
    
    /**
     * Whether an emergency caller sid is configured for the domain. If present, this phone number will be used as the callback for the emergency call.
     * 
     * @var ?string $emergencyCallerSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('emergency_caller_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emergencyCallerSid = null;
    
    /**
     * Whether emergency calling is enabled for the domain. If enabled, allows emergency calls on the domain from phone numbers with validated addresses.
     * 
     * @var ?bool $emergencyCallingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('emergency_calling_enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $emergencyCallingEnabled = null;
    
    /**
     * The string that you assigned to describe the resource.
     * 
     * @var ?string $friendlyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('friendly_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $friendlyName = null;
    
    /**
     * Whether secure SIP is enabled for the domain. If enabled, TLS will be enforced and SRTP will be negotiated on all incoming calls to this sip domain.
     * 
     * @var ?bool $secure
     */
	#[\JMS\Serializer\Annotation\SerializedName('secure')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $secure = null;
    
    /**
     * The unique string that that we created to identify the SipDomain resource.
     * 
     * @var ?string $sid
     */
	#[\JMS\Serializer\Annotation\SerializedName('sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sid = null;
    
    /**
     * Whether to allow SIP Endpoints to register with the domain to receive calls.
     * 
     * @var ?bool $sipRegistration
     */
	#[\JMS\Serializer\Annotation\SerializedName('sip_registration')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $sipRegistration = null;
    
    /**
     * A list of mapping resources associated with the SIP Domain resource identified by their relative URIs.
     * 
     * @var ?array<string, mixed> $subresourceUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('subresource_uris')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subresourceUris = null;
    
    /**
     * The URI of the resource, relative to `https://api.twilio.com`.
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
    /**
     * The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountSipSipDomainVoiceFallbackMethodEnum $voiceFallbackMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice_fallback_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountSipSipDomainVoiceFallbackMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiV2010AccountSipSipDomainVoiceFallbackMethodEnum $voiceFallbackMethod = null;
    
    /**
     * The URL that we call when an error occurs while retrieving or executing the TwiML requested from `voice_url`.
     * 
     * @var ?string $voiceFallbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice_fallback_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $voiceFallbackUrl = null;
    
    /**
     * The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountSipSipDomainVoiceMethodEnum $voiceMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountSipSipDomainVoiceMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiV2010AccountSipSipDomainVoiceMethodEnum $voiceMethod = null;
    
    /**
     * The HTTP method we use to call `voice_status_callback_url`. Either `GET` or `POST`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountSipSipDomainVoiceStatusCallbackMethodEnum $voiceStatusCallbackMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice_status_callback_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountSipSipDomainVoiceStatusCallbackMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiV2010AccountSipSipDomainVoiceStatusCallbackMethodEnum $voiceStatusCallbackMethod = null;
    
    /**
     * The URL that we call to pass status parameters (such as call ended) to your application.
     * 
     * @var ?string $voiceStatusCallbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice_status_callback_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $voiceStatusCallbackUrl = null;
    
    /**
     * The URL we call using the `voice_method` when the domain receives a call.
     * 
     * @var ?string $voiceUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $voiceUrl = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->apiVersion = null;
		$this->authType = null;
		$this->byocTrunkSid = null;
		$this->dateCreated = null;
		$this->dateUpdated = null;
		$this->domainName = null;
		$this->emergencyCallerSid = null;
		$this->emergencyCallingEnabled = null;
		$this->friendlyName = null;
		$this->secure = null;
		$this->sid = null;
		$this->sipRegistration = null;
		$this->subresourceUris = null;
		$this->uri = null;
		$this->voiceFallbackMethod = null;
		$this->voiceFallbackUrl = null;
		$this->voiceMethod = null;
		$this->voiceStatusCallbackMethod = null;
		$this->voiceStatusCallbackUrl = null;
		$this->voiceUrl = null;
	}
}
