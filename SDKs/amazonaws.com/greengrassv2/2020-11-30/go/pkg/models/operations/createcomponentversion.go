// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateComponentVersionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateComponentVersionRequestBodyLambdaFunction - Contains information about an Lambda function to import to create a component.
type CreateComponentVersionRequestBodyLambdaFunction struct {
	ComponentDependencies     map[string]shared.ComponentDependencyRequirement `json:"componentDependencies,omitempty"`
	ComponentLambdaParameters *shared.LambdaExecutionParameters                `json:"componentLambdaParameters,omitempty"`
	ComponentName             *string                                          `json:"componentName,omitempty"`
	ComponentPlatforms        []shared.ComponentPlatform                       `json:"componentPlatforms,omitempty"`
	ComponentVersion          *string                                          `json:"componentVersion,omitempty"`
	LambdaArn                 *string                                          `json:"lambdaArn,omitempty"`
}

type CreateComponentVersionRequestBody struct {
	// A unique, case-sensitive identifier that you can provide to ensure that the request is idempotent. Idempotency means that the request is successfully processed only once, even if you send the request multiple times. When a request succeeds, and you specify the same client token for subsequent successful requests, the IoT Greengrass V2 service returns the successful response that it caches from the previous request. IoT Greengrass V2 caches successful responses for idempotent requests for up to 8 hours.
	ClientToken *string `json:"clientToken,omitempty"`
	// <p>The recipe to use to create the component. The recipe defines the component's metadata, parameters, dependencies, lifecycle, artifacts, and platform compatibility.</p> <p>You must specify either <code>inlineRecipe</code> or <code>lambdaFunction</code>.</p>
	InlineRecipe *string `json:"inlineRecipe,omitempty"`
	// Contains information about an Lambda function to import to create a component.
	LambdaFunction *CreateComponentVersionRequestBodyLambdaFunction `json:"lambdaFunction,omitempty"`
	// A list of key-value pairs that contain metadata for the resource. For more information, see <a href="https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html">Tag your resources</a> in the <i>IoT Greengrass V2 Developer Guide</i>.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateComponentVersionRequest struct {
	Headers CreateComponentVersionHeaders
	Request CreateComponentVersionRequestBody `request:"mediaType=application/json"`
}

type CreateComponentVersionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateComponentVersionResponse *shared.CreateComponentVersionResponse
	// InternalServerException
	InternalServerException interface{}
	// RequestAlreadyInProgressException
	RequestAlreadyInProgressException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
