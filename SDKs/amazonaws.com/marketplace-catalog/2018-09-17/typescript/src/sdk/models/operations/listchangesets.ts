/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.
 */
export class ListChangeSetsRequestBodySort extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "SortBy" })
  sortBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: shared.SortOrderEnum;
}

export class ListChangeSetsRequestBody extends SpeakeasyBase {
  /**
   * The catalog related to the request. Fixed value: <code>AWSMarketplace</code>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Catalog" })
  catalog: string;

  /**
   * An array of filter objects.
   */
  @SpeakeasyMetadata({ elemType: shared.Filter })
  @Expose({ name: "FilterList" })
  @Type(() => shared.Filter)
  filterList?: shared.Filter[];

  /**
   * The maximum number of results returned by a single call. This value must be provided in the next call to retrieve the next set of results. By default, this value is 20.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   * The token value retrieved from a previous call to access the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  /**
   * An object that contains two attributes, <code>SortBy</code> and <code>SortOrder</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Sort" })
  @Type(() => ListChangeSetsRequestBodySort)
  sort?: ListChangeSetsRequestBodySort;
}

export class ListChangeSetsRequest extends SpeakeasyBase {
  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListChangeSetsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListChangeSetsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServiceException
   */
  @SpeakeasyMetadata()
  internalServiceException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listChangeSetsResponse?: shared.ListChangeSetsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
