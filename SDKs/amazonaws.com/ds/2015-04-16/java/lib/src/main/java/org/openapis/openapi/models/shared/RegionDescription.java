/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * RegionDescription - The replicated Region information for a directory.
 */
public class RegionDescription {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DesiredNumberOfDomainControllers")
    public Long desiredNumberOfDomainControllers;
    public RegionDescription withDesiredNumberOfDomainControllers(Long desiredNumberOfDomainControllers) {
        this.desiredNumberOfDomainControllers = desiredNumberOfDomainControllers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DirectoryId")
    public String directoryId;
    public RegionDescription withDirectoryId(String directoryId) {
        this.directoryId = directoryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedDateTime")
    public OffsetDateTime lastUpdatedDateTime;
    public RegionDescription withLastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
        this.lastUpdatedDateTime = lastUpdatedDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LaunchTime")
    public OffsetDateTime launchTime;
    public RegionDescription withLaunchTime(OffsetDateTime launchTime) {
        this.launchTime = launchTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RegionName")
    public String regionName;
    public RegionDescription withRegionName(String regionName) {
        this.regionName = regionName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RegionType")
    public RegionTypeEnum regionType;
    public RegionDescription withRegionType(RegionTypeEnum regionType) {
        this.regionType = regionType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public DirectoryStageEnum status;
    public RegionDescription withStatus(DirectoryStageEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StatusLastUpdatedDateTime")
    public OffsetDateTime statusLastUpdatedDateTime;
    public RegionDescription withStatusLastUpdatedDateTime(OffsetDateTime statusLastUpdatedDateTime) {
        this.statusLastUpdatedDateTime = statusLastUpdatedDateTime;
        return this;
    }
    
    /**
     * Contains VPC information for the &lt;a&gt;CreateDirectory&lt;/a&gt; or &lt;a&gt;CreateMicrosoftAD&lt;/a&gt; operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcSettings")
    public DirectoryVpcSettings vpcSettings;
    public RegionDescription withVpcSettings(DirectoryVpcSettings vpcSettings) {
        this.vpcSettings = vpcSettings;
        return this;
    }
    
}
