/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum AlgorithmObjectiveEnum {
  TransportTime = "transport_time",
  CompletionTime = "completion_time",
}

export enum AlgorithmProblemTypeEnum {
  Min = "min",
  MinMax = "min-max",
}

/**
 * Use `objectives` instead.
 */
export class Algorithm extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "objective" })
  objective?: AlgorithmObjectiveEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "problem_type" })
  problemType?: AlgorithmProblemTypeEnum;
}
