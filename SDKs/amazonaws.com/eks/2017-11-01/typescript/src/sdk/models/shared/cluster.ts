/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Certificate } from "./certificate";
import { ClusterHealth } from "./clusterhealth";
import { ClusterStatusEnum } from "./clusterstatusenum";
import { ConnectorConfigResponse } from "./connectorconfigresponse";
import { EncryptionConfig } from "./encryptionconfig";
import { Identity } from "./identity";
import { KubernetesNetworkConfigResponse } from "./kubernetesnetworkconfigresponse";
import { Logging } from "./logging";
import { OutpostConfigResponse } from "./outpostconfigresponse";
import { VpcConfigResponse } from "./vpcconfigresponse";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object representing an Amazon EKS cluster.
 */
export class Cluster extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "certificateAuthority" })
  @Type(() => Certificate)
  certificateAuthority?: Certificate;

  @SpeakeasyMetadata()
  @Expose({ name: "clientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorConfig" })
  @Type(() => ConnectorConfigResponse)
  connectorConfig?: ConnectorConfigResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata({ elemType: EncryptionConfig })
  @Expose({ name: "encryptionConfig" })
  @Type(() => EncryptionConfig)
  encryptionConfig?: EncryptionConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  endpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "health" })
  @Type(() => ClusterHealth)
  health?: ClusterHealth;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  @Type(() => Identity)
  identity?: Identity;

  @SpeakeasyMetadata()
  @Expose({ name: "kubernetesNetworkConfig" })
  @Type(() => KubernetesNetworkConfigResponse)
  kubernetesNetworkConfig?: KubernetesNetworkConfigResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "logging" })
  @Type(() => Logging)
  logging?: Logging;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "outpostConfig" })
  @Type(() => OutpostConfigResponse)
  outpostConfig?: OutpostConfigResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "platformVersion" })
  platformVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourcesVpcConfig" })
  @Type(() => VpcConfigResponse)
  resourcesVpcConfig?: VpcConfigResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ClusterStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
