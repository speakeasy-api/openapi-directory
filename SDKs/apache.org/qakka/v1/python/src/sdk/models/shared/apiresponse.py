"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import queue as shared_queue
from ..shared import queuemessage as shared_queuemessage
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResponse:
    r"""Response returned by most Queue API calls."""
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Count of Queues or QueueMessages returned by the call."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Informative message intended for client."""  
    queue_messages: Optional[list[shared_queuemessage.QueueMessage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queueMessages'), 'exclude': lambda f: f is None }})
    r"""Queues Messages returned by the call, or empty if not applicable."""  
    queues: Optional[list[shared_queue.Queue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queues'), 'exclude': lambda f: f is None }})
    r"""Queues returned but the call, or empty if not applicable."""  
    