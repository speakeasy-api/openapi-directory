// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterScalableTargetXAmzTargetEnum
type RegisterScalableTargetXAmzTargetEnum string

const (
	RegisterScalableTargetXAmzTargetEnumAnyScaleFrontendServiceRegisterScalableTarget RegisterScalableTargetXAmzTargetEnum = "AnyScaleFrontendService.RegisterScalableTarget"
)

func (e RegisterScalableTargetXAmzTargetEnum) ToPointer() *RegisterScalableTargetXAmzTargetEnum {
	return &e
}

func (e *RegisterScalableTargetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AnyScaleFrontendService.RegisterScalableTarget":
		*e = RegisterScalableTargetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterScalableTargetXAmzTargetEnum: %v", v)
	}
}

type RegisterScalableTargetRequest struct {
	RegisterScalableTargetRequest shared.RegisterScalableTargetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    RegisterScalableTargetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterScalableTargetResponse struct {
	// ConcurrentUpdateException
	ConcurrentUpdateException interface{}
	ContentType               string
	// InternalServiceException
	InternalServiceException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	RegisterScalableTargetResponse *shared.RegisterScalableTargetResponse
	StatusCode                     int
	RawResponse                    *http.Response
	// ValidationException
	ValidationException interface{}
}
