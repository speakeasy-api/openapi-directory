/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClassStateEnum } from "./classstateenum";
import { GroupDetails } from "./groupdetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Meta information provided by Canvs LMS
 */
export class ClassDetailsCanvas extends SpeakeasyBase {
  /**
   * Canvas instance domain (e.g. "canvas.instructure.com")
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * Unique identifier of the course on Canvas
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * Normalized subject of the course
 */
export enum ClassDetailsCleverSubjectEnum {
  EnglishLanguageArts = "english/language arts",
  Math = "math",
  Science = "science",
  SocialStudies = "social studies",
  Language = "language",
  HomeroomAdvisory = "homeroom/advisory",
  InterventionsOnlineLearning = "interventions/online learning",
  TechnologyAndEngineering = "technology and engineering",
  PEAndHealth = "PE and health",
  ArtsAndMusic = "arts and music",
  Other = "other",
}

/**
 * Clever.com section-related information
 */
export class ClassDetailsClever extends SpeakeasyBase {
  /**
   * The creation date of the section on clever
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * Clever section unique identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The last modification date of the section on clever
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modificationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modificationDate?: Date;

  /**
   * Normalized subject of the course
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: ClassDetailsCleverSubjectEnum;

  /**
   * End date of the term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "termEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  termEndDate?: Date;

  /**
   * Name of the term when this course happens
   */
  @SpeakeasyMetadata()
  @Expose({ name: "termName" })
  termName?: string;

  /**
   * Beginning date of the term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "termStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  termStartDate?: Date;
}

/**
 * Google Classroom course-related information
 */
export class ClassDetailsGoogleClassroom extends SpeakeasyBase {
  /**
   * Absolute link to this course in the Classroom web UI
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alternateLink" })
  alternateLink?: string;

  /**
   * The course identifier on Google Classroom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * Google Drive course-related information provided by Google Classroom
 */
export class ClassDetailsGoogleDrive extends SpeakeasyBase {
  /**
   * [Teachers only] The Drive URL of the teachers' folder
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teacherFolderAlternateLink" })
  teacherFolderAlternateLink?: string;

  /**
   * [Teachers only] The Drive directory identifier of the teachers' folder
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teacherFolderId" })
  teacherFolderId?: string;
}

/**
 * The reason why the account cannot be synced
 */
export enum ClassDetailsIssuesSyncReasonEnum {
  OtherOrgnanization = "otherOrgnanization",
  PersonalSubscription = "personalSubscription",
}

/**
 * A sync issue
 */
export class ClassDetailsIssuesSync extends SpeakeasyBase {
  /**
   * The email address of the user concerned by this sync issue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * The account user identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The reason why the account cannot be synced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: ClassDetailsIssuesSyncReasonEnum;
}

/**
 * Detected issues for this class
 */
export class ClassDetailsIssues extends SpeakeasyBase {
  /**
   * Synchronization issues for the class
   */
  @SpeakeasyMetadata({ elemType: ClassDetailsIssuesSync })
  @Expose({ name: "sync" })
  @Type(() => ClassDetailsIssuesSync)
  sync?: ClassDetailsIssuesSync[];
}

/**
 * Meta information provided by the LTI consumer
 */
export class ClassDetailsLti extends SpeakeasyBase {
  /**
   * Unique context identifier provided
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextId" })
  contextId?: string;

  /**
   * Context label
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextLabel" })
  contextLabel?: string;

  /**
   * Context title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextTitle" })
  contextTitle?: string;
}

/**
 * Meta information provided by Canvs LMS
 */
export class ClassDetailsMfc extends SpeakeasyBase {
  /**
   * Link to MusicFirst Classroom class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alternateLink" })
  alternateLink?: string;

  /**
   * Unique identifier of the course on MusicFirst Classroom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class ClassDetailsMicrosoftGraph extends SpeakeasyBase {
  /**
   * The course identifier on Microsoft Graph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

/**
 * A classroom
 */
export class ClassDetails extends SpeakeasyBase {
  /**
   * The number of assignments created in the class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignmentsCount" })
  assignmentsCount?: number;

  /**
   * Meta information provided by Canvs LMS
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canvas" })
  @Type(() => ClassDetailsCanvas)
  canvas?: ClassDetailsCanvas;

  /**
   * Clever.com section-related information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clever" })
  @Type(() => ClassDetailsClever)
  clever?: ClassDetailsClever;

  /**
   * The date when the class was create
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * An optionnal description for this class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * [Teachers only] The enrollment code that can be used by the students to join the class
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enrollmentCode" })
  enrollmentCode?: string;

  /**
   * Google Classroom course-related information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleClassroom" })
  @Type(() => ClassDetailsGoogleClassroom)
  googleClassroom?: ClassDetailsGoogleClassroom;

  /**
   * Google Drive course-related information provided by Google Classroom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleDrive" })
  @Type(() => ClassDetailsGoogleDrive)
  googleDrive?: ClassDetailsGoogleDrive;

  /**
   * The unique identifier of the class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Detected issues for this class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issues" })
  @Type(() => ClassDetailsIssues)
  issues?: ClassDetailsIssues;

  /**
   * Meta information provided by the LTI consumer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lti" })
  @Type(() => ClassDetailsLti)
  lti?: ClassDetailsLti;

  /**
   * Meta information provided by Canvs LMS
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mfc" })
  @Type(() => ClassDetailsMfc)
  mfc?: ClassDetailsMfc;

  @SpeakeasyMetadata()
  @Expose({ name: "microsoftGraph" })
  @Type(() => ClassDetailsMicrosoftGraph)
  microsoftGraph?: ClassDetailsMicrosoftGraph;

  /**
   * The name of the class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The unique identifier of the Organization owning this class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization?: string;

  /**
   * The unique identifier of the User owning this class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  /**
   * The section of the class
   */
  @SpeakeasyMetadata()
  @Expose({ name: "section" })
  section?: string;

  /**
   * The state of a classroom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ClassStateEnum;

  /**
   * The details of a group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "studentsGroup" })
  @Type(() => GroupDetails)
  studentsGroup?: GroupDetails;

  /**
   * The details of a group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "teachersGroup" })
  @Type(() => GroupDetails)
  teachersGroup?: GroupDetails;

  /**
   * The theme identifier using in Flat User Interface
   */
  @SpeakeasyMetadata()
  @Expose({ name: "theme" })
  theme?: string;
}
