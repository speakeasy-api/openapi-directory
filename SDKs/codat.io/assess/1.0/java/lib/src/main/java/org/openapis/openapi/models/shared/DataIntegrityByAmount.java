/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DataIntegrityByAmount {
    /**
     * The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
     * 
     * ## Unknown currencies
     * 
     * In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. 
     * 
     * There are only a very small number of edge cases where this currency code is returned by the Codat system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public DataIntegrityByAmount withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The percentage of the absolute value of transactions of the type specified in the route which have a match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matchPercentage")
    public Double matchPercentage;

    public DataIntegrityByAmount withMatchPercentage(Double matchPercentage) {
        this.matchPercentage = matchPercentage;
        return this;
    }
    
    /**
     * The sum of the absolute value of transactions of the type specified in the route which have a match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matched")
    public Double matched;

    public DataIntegrityByAmount withMatched(Double matched) {
        this.matched = matched;
        return this;
    }
    
    /**
     * The total of unmatched and matched.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;

    public DataIntegrityByAmount withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    /**
     * The sum of the absolute value of transactions of the type specified in the route which don't have a match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unmatched")
    public Double unmatched;

    public DataIntegrityByAmount withUnmatched(Double unmatched) {
        this.unmatched = unmatched;
        return this;
    }
    
    public DataIntegrityByAmount(){}
}
