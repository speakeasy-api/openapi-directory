/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VappExportSnapshotJobConfig - Configuration for the request to export the specified vApp snapshot.
 */
public class VappExportSnapshotJobConfig {
    /**
     * Target type for the specified vApp export.
     */
    @JsonProperty("exportMode")
    public VappExportModeEnum exportMode;

    public VappExportSnapshotJobConfig withExportMode(VappExportModeEnum exportMode) {
        this.exportMode = exportMode;
        return this;
    }
    
    /**
     * Array of vApp networks that are in the specified vApp snapshot and should be set up as part of the export operation. A vApp network that is not included in the array will not be set up in the exported vApp.
     */
    @JsonProperty("networksToRestore")
    public CreateVappNetworkParams[] networksToRestore;

    public VappExportSnapshotJobConfig withNetworksToRestore(CreateVappNetworkParams[] networksToRestore) {
        this.networksToRestore = networksToRestore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newVappParams")
    public CreateNewVappParams newVappParams;

    public VappExportSnapshotJobConfig withNewVappParams(CreateNewVappParams newVappParams) {
        this.newVappParams = newVappParams;
        return this;
    }
    
    /**
     * Boolean value that indicates whether to power on the exported vApp. Use 'true' to turn the power on for the exported vApp or use 'false' to leave the power off for the exported vApp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shouldPowerOnVappAfterExport")
    public Boolean shouldPowerOnVappAfterExport;

    public VappExportSnapshotJobConfig withShouldPowerOnVappAfterExport(Boolean shouldPowerOnVappAfterExport) {
        this.shouldPowerOnVappAfterExport = shouldPowerOnVappAfterExport;
        return this;
    }
    
    /**
     * ID assigned to the target vApp object, when the export is into an existing vApp. When the export is not into a target vApp, remove the 'targetVappId' member.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetVappId")
    public String targetVappId;

    public VappExportSnapshotJobConfig withTargetVappId(String targetVappId) {
        this.targetVappId = targetVappId;
        return this;
    }
    
    /**
     * An array containing summary information for the virtual machines included in the vApp export.
     */
    @JsonProperty("vmsToExport")
    public VappVmRestoreSpec[] vmsToExport;

    public VappExportSnapshotJobConfig withVmsToExport(VappVmRestoreSpec[] vmsToExport) {
        this.vmsToExport = vmsToExport;
        return this;
    }
    
    public VappExportSnapshotJobConfig(@JsonProperty("exportMode") VappExportModeEnum exportMode, @JsonProperty("networksToRestore") CreateVappNetworkParams[] networksToRestore, @JsonProperty("vmsToExport") VappVmRestoreSpec[] vmsToExport) {
        this.exportMode = exportMode;
        this.networksToRestore = networksToRestore;
        this.vmsToExport = vmsToExport;
  }
}
