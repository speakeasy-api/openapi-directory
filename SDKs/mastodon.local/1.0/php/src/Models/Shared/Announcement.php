<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Announcement - Represents an announcement set by an administrator.
 * 
 * https://docs.joinmastodon.org/entities/announcement/
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://docs.joinmastodon.org/entities/announcement/
 */
class Announcement
{
    /**
     * Whether the announcement has a start/end time.
     * 
     * @var bool $allDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('all_day')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $allDay;
    
    /**
     * When the announcement was created.
     * 
     * @var string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdAt;
    
    /**
     * When the future announcement will end. ISO 8601 Datetime.
     * 
     * @var ?string $endsAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('ends_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endsAt = null;
    
    /**
     * The announcement id. Cast from an integer, but not guaranteed to be a number.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Whether the announcement is currently active.
     * 
     * @var bool $published
     */
	#[\JMS\Serializer\Annotation\SerializedName('published')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $published;
    
    /**
     * Whether the announcement has been read by the user.
     * 
     * @var bool $read
     */
	#[\JMS\Serializer\Annotation\SerializedName('read')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $read;
    
    /**
     * When the future announcement was scheduled. ISO 8601 Datetime.
     * 
     * @var ?string $scheduledAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduled_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduledAt = null;
    
    /**
     * When the future announcement will start. ISO 8601 Datetime.
     * 
     * @var ?string $startsAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('starts_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startsAt = null;
    
    /**
     * The content of the announcement.
     * 
     * @var string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $text;
    
    /**
     * When the announcement was last updated. ISO 8601 Datetime.
     * 
     * @var string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $updatedAt;
    
	public function __construct()
	{
		$this->allDay = false;
		$this->createdAt = "";
		$this->endsAt = null;
		$this->id = "";
		$this->published = false;
		$this->read = false;
		$this->scheduledAt = null;
		$this->startsAt = null;
		$this->text = "";
		$this->updatedAt = "";
	}
}
