"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateDeviceCameraQualityAndRetentionRequestBodyMotionDetectorVersionEnum(str, Enum):
    r"""The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."""
    ONE = '1'
    TWO = '2'

class UpdateDeviceCameraQualityAndRetentionRequestBodyQualityEnum(str, Enum):
    r"""Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model."""
    ENHANCED = 'Enhanced'
    HIGH = 'High'
    STANDARD = 'Standard'

class UpdateDeviceCameraQualityAndRetentionRequestBodyResolutionEnum(str, Enum):
    r"""Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2058x2058', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model."""
    ONE_THOUSAND_AND_EIGHTYX1080 = '1080x1080'
    ONE_THOUSAND_TWO_HUNDRED_AND_EIGHTYX720 = '1280x720'
    ONE_THOUSAND_NINE_HUNDRED_AND_TWENTYX1080 = '1920x1080'
    TWO_THOUSAND_AND_FIFTY_EIGHTX2058 = '2058x2058'
    TWO_THOUSAND_ONE_HUNDRED_AND_TWELVEX2112 = '2112x2112'
    TWO_THOUSAND_SIX_HUNDRED_AND_EIGHTY_EIGHTX1512 = '2688x1512'
    TWO_THOUSAND_EIGHT_HUNDRED_AND_EIGHTYX2880 = '2880x2880'
    THREE_THOUSAND_EIGHT_HUNDRED_AND_FORTYX2160 = '3840x2160'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceCameraQualityAndRetentionRequestBody:
    
    audio_recording_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioRecordingEnabled'), 'exclude': lambda f: f is None }})
    r"""Boolean indicating if audio recording is enabled(true) or disabled(false) on the camera"""  
    motion_based_retention_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('motionBasedRetentionEnabled'), 'exclude': lambda f: f is None }})
    r"""Boolean indicating if motion-based retention is enabled(true) or disabled(false) on the camera."""  
    motion_detector_version: Optional[UpdateDeviceCameraQualityAndRetentionRequestBodyMotionDetectorVersionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('motionDetectorVersion'), 'exclude': lambda f: f is None }})
    r"""The version of the motion detector that will be used by the camera. Only applies to Gen 2 cameras. Defaults to v2."""  
    profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileId'), 'exclude': lambda f: f is None }})
    r"""The ID of a quality and retention profile to assign to the camera. The profile's settings will override all of the per-camera quality and retention settings. If the value of this parameter is null, any existing profile will be unassigned from the camera."""  
    quality: Optional[UpdateDeviceCameraQualityAndRetentionRequestBodyQualityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quality'), 'exclude': lambda f: f is None }})
    r"""Quality of the camera. Can be one of 'Standard', 'High' or 'Enhanced'. Not all qualities are supported by every camera model."""  
    resolution: Optional[UpdateDeviceCameraQualityAndRetentionRequestBodyResolutionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution'), 'exclude': lambda f: f is None }})
    r"""Resolution of the camera. Can be one of '1280x720', '1920x1080', '1080x1080', '2058x2058', '2112x2112', '2880x2880', '2688x1512' or '3840x2160'.Not all resolutions are supported by every camera model."""  
    restricted_bandwidth_mode_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('restrictedBandwidthModeEnabled'), 'exclude': lambda f: f is None }})
    r"""Boolean indicating if restricted bandwidth is enabled(true) or disabled(false) on the camera. This setting does not apply to MV2 cameras."""  
    

@dataclasses.dataclass
class UpdateDeviceCameraQualityAndRetentionRequest:
    
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateDeviceCameraQualityAndRetentionRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateDeviceCameraQualityAndRetentionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_device_camera_quality_and_retention_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    