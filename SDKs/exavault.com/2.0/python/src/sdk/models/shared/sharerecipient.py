"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class ShareRecipientReceivedEnum(str, Enum):
    r"""Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file."""
    TRUE = 'true'
    FALSE = 'false'

class ShareRecipientSentEnum(str, Enum):
    r"""Set to true if invite email was sent; false otherwise."""
    TRUE = 'true'
    FALSE = 'false'

class ShareRecipientTypeEnum(str, Enum):
    r"""Type of the recipient."""
    OWNER = 'owner'
    DIRECT = 'direct'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShareRecipient:
    
    created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Timestamp of adding recipient to the share."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Recipient email address."""  
    hash: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hash'), 'exclude': lambda f: f is None }})
    r"""Share hash."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of the recipient."""  
    received: Optional[ShareRecipientReceivedEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('received'), 'exclude': lambda f: f is None }})
    r"""Set to true if recipient has accessed the share. Note this is set to true when the recipient clicks the link to access the share; not when they download a file."""  
    sent: Optional[ShareRecipientSentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sent'), 'exclude': lambda f: f is None }})
    r"""Set to true if invite email was sent; false otherwise."""  
    share_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareId'), 'exclude': lambda f: f is None }})
    r"""ID of the share that the recipoient belongs to."""  
    type: Optional[ShareRecipientTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the recipient."""  
    