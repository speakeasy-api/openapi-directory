/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class JournalEntriesAllQueryParams {
    /**
     * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;
    public JournalEntriesAllQueryParams withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. &lt;br /&gt;&lt;br /&gt;Example: `fields=name,email,addresses.city`&lt;br /&gt;&lt;br /&gt;In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public JournalEntriesAllQueryParams withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Number of records to return
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public JournalEntriesAllQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Optional unmapped key/values that will be passed through to downstream as query parameters
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=pass_through")
    public java.util.Map<String, Object> passThrough;
    public JournalEntriesAllQueryParams withPassThrough(java.util.Map<String, Object> passThrough) {
        this.passThrough = passThrough;
        return this;
    }
    
    /**
     * Include raw response. Mostly used for debugging purposes
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=raw")
    public Boolean raw;
    public JournalEntriesAllQueryParams withRaw(Boolean raw) {
        this.raw = raw;
        return this;
    }
    
}
