/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AffinityInformation } from "./affinityinformation";
import { ComputeNodeInformation } from "./computenodeinformation";
import { EnvironmentSetting } from "./environmentsetting";
import { MultiInstanceSettings } from "./multiinstancesettings";
import { ResourceFile } from "./resourcefile";
import { TaskConstraints } from "./taskconstraints";
import { TaskDependencies } from "./taskdependencies";
import { TaskExecutionInformation } from "./taskexecutioninformation";
import { TaskStatistics } from "./taskstatistics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Gets or sets the previous state of the task. This property is not set if the task is in its initial Active state.
 */
export enum CloudTaskPreviousStateEnum {
  Active = "active",
  Preparing = "preparing",
  Running = "running",
  Completed = "completed",
}

/**
 * Gets or sets the current state of the task.
 */
export enum CloudTaskStateEnum {
  Active = "active",
  Preparing = "preparing",
  Running = "running",
  Completed = "completed",
}

/**
 * An Azure Batch task.
 */
export class CloudTask extends SpeakeasyBase {
  /**
   * A locality hint that can be used by the Batch service to select a compute node on which to start a task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "affinityInfo" })
  @Type(() => AffinityInformation)
  affinityInfo?: AffinityInformation;

  /**
   * Gets or sets the command line of the task. For multi-instance tasks, the command line is executed on the primary subtask after all the subtasks have finished executing the coordination command line.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commandLine" })
  commandLine?: string;

  /**
   * Constraints to apply to the Job Manager task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "constraints" })
  @Type(() => TaskConstraints)
  constraints?: TaskConstraints;

  /**
   * Gets or sets the creation time of the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  /**
   * Specifies any dependencies of a task.  Any task that is explicitly specified or within a dependency range must complete before the dependant task will be scheduled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dependsOn" })
  @Type(() => TaskDependencies)
  dependsOn?: TaskDependencies;

  /**
   * Gets or sets a display name for the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Gets or sets the ETag of the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eTag" })
  eTag?: string;

  /**
   * Gets or sets a list of environment variable settings for the task.
   */
  @SpeakeasyMetadata({ elemType: EnvironmentSetting })
  @Expose({ name: "environmentSettings" })
  @Type(() => EnvironmentSetting)
  environmentSettings?: EnvironmentSetting[];

  /**
   * Information about the execution of a task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "executionInfo" })
  @Type(() => TaskExecutionInformation)
  executionInfo?: TaskExecutionInformation;

  /**
   * Gets or sets a string that uniquely identifies the task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores, and cannot contain more than 64 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Gets or sets the last modified time of the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModified?: Date;

  /**
   * Information about the settings required for multi-instance task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multiInstanceSettings" })
  @Type(() => MultiInstanceSettings)
  multiInstanceSettings?: MultiInstanceSettings;

  /**
   * Information about the compute node on which a task ran.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeInfo" })
  @Type(() => ComputeNodeInformation)
  nodeInfo?: ComputeNodeInformation;

  /**
   * Gets or sets the previous state of the task. This property is not set if the task is in its initial Active state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previousState" })
  previousState?: CloudTaskPreviousStateEnum;

  /**
   * Gets or sets the time at which the task entered its previous state. This property is not set if the task is in its initial Active state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previousStateTransitionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  previousStateTransitionTime?: Date;

  /**
   * Gets or sets a list of files that Batch will download to the compute node before running the command line. For multi-instance tasks, the resource files will only be downloaded to the compute node on which the primary subtask is executed.
   */
  @SpeakeasyMetadata({ elemType: ResourceFile })
  @Expose({ name: "resourceFiles" })
  @Type(() => ResourceFile)
  resourceFiles?: ResourceFile[];

  /**
   * Gets or sets whether to run the task in elevated mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runElevated" })
  runElevated?: boolean;

  /**
   * Gets or sets the current state of the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: CloudTaskStateEnum;

  /**
   * Gets or sets the time at which the task entered its current state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateTransitionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stateTransitionTime?: Date;

  /**
   * Resource usage statistics for a task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stats" })
  @Type(() => TaskStatistics)
  stats?: TaskStatistics;

  /**
   * Gets or sets the URL of the task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
