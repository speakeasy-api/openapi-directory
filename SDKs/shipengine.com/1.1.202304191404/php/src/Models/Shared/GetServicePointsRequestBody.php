<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetServicePointsRequestBody - A get service points request body. Caller must provide exactly one of address_query, address, or lat / long pair.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetServicePointsRequestBody
{
    /**
     * Structured address to search by.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GetServicePointsRequestBodyAddress $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GetServicePointsRequestBodyAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetServicePointsRequestBodyAddress $address = null;
    
    /**
     * Unstructured text to search for service points by.
     * 
     * @var ?string $addressQuery
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_query')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressQuery = null;
    
    /**
     * The latitude of the point. Represented as signed degrees. Required if long is provided. http://www.geomidpoint.com/latlon.html
     * 
     * @var ?float $lat
     */
	#[\JMS\Serializer\Annotation\SerializedName('lat')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $lat = null;
    
    /**
     * The longitude of the point. Represented as signed degrees. Required if lat is provided. http://www.geomidpoint.com/latlon.html
     * 
     * @var ?float $long
     */
	#[\JMS\Serializer\Annotation\SerializedName('long')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $long = null;
    
    /**
     * The maximum number of service points to return
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('max_results')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * An array of shipping service providers and service codes
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\GetServicePointsRequestBodyProviders> $providers
     */
	#[\JMS\Serializer\Annotation\SerializedName('providers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GetServicePointsRequestBodyProviders>')]
    public array $providers;
    
    /**
     * Search radius in kilometers
     * 
     * @var ?int $radius
     */
	#[\JMS\Serializer\Annotation\SerializedName('radius')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $radius = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->addressQuery = null;
		$this->lat = null;
		$this->long = null;
		$this->maxResults = null;
		$this->providers = [];
		$this->radius = null;
	}
}
