// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntityChangeStatusEnum - Represents how the entity has been changed in the workspace.
type EntityChangeStatusEnum string

const (
	EntityChangeStatusEnumChangeStatusUnspecified EntityChangeStatusEnum = "changeStatusUnspecified"
	EntityChangeStatusEnumNone                    EntityChangeStatusEnum = "none"
	EntityChangeStatusEnumAdded                   EntityChangeStatusEnum = "added"
	EntityChangeStatusEnumDeleted                 EntityChangeStatusEnum = "deleted"
	EntityChangeStatusEnumUpdated                 EntityChangeStatusEnum = "updated"
)

func (e *EntityChangeStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "changeStatusUnspecified":
		fallthrough
	case "none":
		fallthrough
	case "added":
		fallthrough
	case "deleted":
		fallthrough
	case "updated":
		*e = EntityChangeStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntityChangeStatusEnum: %s", s)
	}
}

// Entity - A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.
type Entity struct {
	// Represents how the entity has been changed in the workspace.
	ChangeStatus *EntityChangeStatusEnum `json:"changeStatus,omitempty"`
	Client       *Client                 `json:"client,omitempty"`
	// Represents a Google Tag Manager Folder.
	Folder *Folder `json:"folder,omitempty"`
	// Represents a Google Tag Manager Tag.
	Tag *Tag `json:"tag,omitempty"`
	// Represents a Google Tag Manager Trigger
	Trigger *Trigger `json:"trigger,omitempty"`
	// Represents a Google Tag Manager Variable.
	Variable *Variable `json:"variable,omitempty"`
}
