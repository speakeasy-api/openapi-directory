/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaxSubtotal - The total amount of tax of this type in the invoice.
 */
public class TaxSubtotal {
    /**
     * The tax category. For a description see &lt;&lt;_openapi_tax&gt;&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category")public TaxSubtotalTaxCategoryEnum category;
    public TaxSubtotal withCategory(TaxSubtotalTaxCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * An ISO 3166-1 alpha-2 country code.
     */
    @JsonProperty("country")public CountryEnum country;
    public TaxSubtotal withCountry(CountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     * The tax percentage. This should be a valid tax percentage in the country at the time of the taxpointDate of this invoice.
     */
    @JsonProperty("percentage")public Double percentage;
    public TaxSubtotal withPercentage(Double percentage) {
        this.percentage = percentage;
        return this;
    }
    
    /**
     * The amount of tax.
     */
    @JsonProperty("taxAmount")public Double taxAmount;
    public TaxSubtotal withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The amount on which the tax is levied.
     */
    @JsonProperty("taxableAmount")public Double taxableAmount;
    public TaxSubtotal withTaxableAmount(Double taxableAmount) {
        this.taxableAmount = taxableAmount;
        return this;
    }
    
}
