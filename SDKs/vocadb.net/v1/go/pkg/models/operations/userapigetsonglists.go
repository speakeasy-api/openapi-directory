// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UserAPIGetSongListsPathParams struct {
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// UserAPIGetSongListsFieldsEnum
type UserAPIGetSongListsFieldsEnum string

const (
	UserAPIGetSongListsFieldsEnumNone        UserAPIGetSongListsFieldsEnum = "None"
	UserAPIGetSongListsFieldsEnumDescription UserAPIGetSongListsFieldsEnum = "Description"
	UserAPIGetSongListsFieldsEnumEvents      UserAPIGetSongListsFieldsEnum = "Events"
	UserAPIGetSongListsFieldsEnumMainPicture UserAPIGetSongListsFieldsEnum = "MainPicture"
	UserAPIGetSongListsFieldsEnumTags        UserAPIGetSongListsFieldsEnum = "Tags"
)

func (e *UserAPIGetSongListsFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Description":
		fallthrough
	case "Events":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Tags":
		*e = UserAPIGetSongListsFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongListsFieldsEnum: %s", s)
	}
}

// UserAPIGetSongListsNameMatchModeEnum
type UserAPIGetSongListsNameMatchModeEnum string

const (
	UserAPIGetSongListsNameMatchModeEnumAuto       UserAPIGetSongListsNameMatchModeEnum = "Auto"
	UserAPIGetSongListsNameMatchModeEnumPartial    UserAPIGetSongListsNameMatchModeEnum = "Partial"
	UserAPIGetSongListsNameMatchModeEnumStartsWith UserAPIGetSongListsNameMatchModeEnum = "StartsWith"
	UserAPIGetSongListsNameMatchModeEnumExact      UserAPIGetSongListsNameMatchModeEnum = "Exact"
	UserAPIGetSongListsNameMatchModeEnumWords      UserAPIGetSongListsNameMatchModeEnum = "Words"
)

func (e *UserAPIGetSongListsNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = UserAPIGetSongListsNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongListsNameMatchModeEnum: %s", s)
	}
}

// UserAPIGetSongListsSortEnum
type UserAPIGetSongListsSortEnum string

const (
	UserAPIGetSongListsSortEnumNone       UserAPIGetSongListsSortEnum = "None"
	UserAPIGetSongListsSortEnumName       UserAPIGetSongListsSortEnum = "Name"
	UserAPIGetSongListsSortEnumDate       UserAPIGetSongListsSortEnum = "Date"
	UserAPIGetSongListsSortEnumCreateDate UserAPIGetSongListsSortEnum = "CreateDate"
)

func (e *UserAPIGetSongListsSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Name":
		fallthrough
	case "Date":
		fallthrough
	case "CreateDate":
		*e = UserAPIGetSongListsSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserAPIGetSongListsSortEnum: %s", s)
	}
}

type UserAPIGetSongListsQueryParams struct {
	ChildTags     *bool                                 `queryParam:"style=form,explode=true,name=childTags"`
	Fields        *UserAPIGetSongListsFieldsEnum        `queryParam:"style=form,explode=true,name=fields"`
	GetTotalCount *bool                                 `queryParam:"style=form,explode=true,name=getTotalCount"`
	MaxResults    *int                                  `queryParam:"style=form,explode=true,name=maxResults"`
	NameMatchMode *UserAPIGetSongListsNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	Query         *string                               `queryParam:"style=form,explode=true,name=query"`
	Sort          *UserAPIGetSongListsSortEnum          `queryParam:"style=form,explode=true,name=sort"`
	Start         *int                                  `queryParam:"style=form,explode=true,name=start"`
	TagID         []int                                 `queryParam:"style=form,explode=true,name=tagId"`
}

type UserAPIGetSongListsRequest struct {
	PathParams  UserAPIGetSongListsPathParams
	QueryParams UserAPIGetSongListsQueryParams
}

type UserAPIGetSongListsResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultSongListForAPIContract *shared.PartialFindResultSongListForAPIContract
	StatusCode                              int
	RawResponse                             *http.Response
}
