"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class User:
    r"""The User Object contains information about the user associated with a GIF and URLs to assets such as that user's avatar image, profile, and more."""
    
    avatar_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avatar_url'), 'exclude': lambda f: f is None }})
    r"""The URL for this user's avatar image."""  
    banner_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('banner_url'), 'exclude': lambda f: f is None }})
    r"""The URL for the banner image that appears atop this user's profile page."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""The display name associated with this user (contains formatting the base username might not)."""  
    profile_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profile_url'), 'exclude': lambda f: f is None }})
    r"""The URL for this user's profile."""  
    twitter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('twitter'), 'exclude': lambda f: f is None }})
    r"""The Twitter username associated with this user, if applicable."""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""The username associated with this user."""  
    