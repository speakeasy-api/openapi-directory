// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDevEndpointXAmzTargetEnum
type UpdateDevEndpointXAmzTargetEnum string

const (
	UpdateDevEndpointXAmzTargetEnumAwsGlueUpdateDevEndpoint UpdateDevEndpointXAmzTargetEnum = "AWSGlue.UpdateDevEndpoint"
)

func (e UpdateDevEndpointXAmzTargetEnum) ToPointer() *UpdateDevEndpointXAmzTargetEnum {
	return &e
}

func (e *UpdateDevEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.UpdateDevEndpoint":
		*e = UpdateDevEndpointXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDevEndpointXAmzTargetEnum: %v", v)
	}
}

type UpdateDevEndpointRequest struct {
	UpdateDevEndpointRequest shared.UpdateDevEndpointRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               UpdateDevEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateDevEndpointResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateDevEndpointResponse map[string]interface{}
	// ValidationException
	ValidationException interface{}
}
