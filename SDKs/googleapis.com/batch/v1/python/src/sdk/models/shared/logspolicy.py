"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LogsPolicyDestinationEnum(str, Enum):
    r"""Where logs should be saved."""
    DESTINATION_UNSPECIFIED = 'DESTINATION_UNSPECIFIED'
    CLOUD_LOGGING = 'CLOUD_LOGGING'
    PATH = 'PATH'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LogsPolicy:
    r"""LogsPolicy describes how outputs from a Job's Tasks (stdout/stderr) will be preserved."""
    
    destination: Optional[LogsPolicyDestinationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination'), 'exclude': lambda f: f is None }})
    r"""Where logs should be saved."""  
    logs_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logsPath'), 'exclude': lambda f: f is None }})
    r"""The path to which logs are saved when the destination = PATH. This can be a local file path on the VM, or under the mount point of a Persistent Disk or Filestore, or a Cloud Storage path."""  
    