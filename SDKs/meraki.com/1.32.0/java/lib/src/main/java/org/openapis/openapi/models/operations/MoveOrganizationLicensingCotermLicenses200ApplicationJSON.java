/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MoveOrganizationLicensingCotermLicenses200ApplicationJSON - Successful operation
 */
public class MoveOrganizationLicensingCotermLicenses200ApplicationJSON {
    /**
     * Newly moved licenses created in the destination organization of the license move operation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("movedLicenses")
    public MoveOrganizationLicensingCotermLicenses200ApplicationJSONMovedLicenses[] movedLicenses;

    public MoveOrganizationLicensingCotermLicenses200ApplicationJSON withMovedLicenses(MoveOrganizationLicensingCotermLicenses200ApplicationJSONMovedLicenses[] movedLicenses) {
        this.movedLicenses = movedLicenses;
        return this;
    }
    
    /**
     * Remainder licenses created in the source organization as a result of moving a subset of the counts of a license
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remainderLicenses")
    public MoveOrganizationLicensingCotermLicenses200ApplicationJSONRemainderLicenses[] remainderLicenses;

    public MoveOrganizationLicensingCotermLicenses200ApplicationJSON withRemainderLicenses(MoveOrganizationLicensingCotermLicenses200ApplicationJSONRemainderLicenses[] remainderLicenses) {
        this.remainderLicenses = remainderLicenses;
        return this;
    }
    
    public MoveOrganizationLicensingCotermLicenses200ApplicationJSON(){}
}
