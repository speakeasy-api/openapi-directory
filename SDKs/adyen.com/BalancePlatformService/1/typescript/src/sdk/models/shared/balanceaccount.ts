/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Balance } from "./balance";
import { PaymentInstrumentReference } from "./paymentinstrumentreference";
import { SweepConfiguration } from "./sweepconfiguration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The status of the balance account, set to **Active** by default.
 *
 * @remarks
 *
 */
export enum BalanceAccountStatusEnum {
  Active = "Active",
  Closed = "Closed",
  Inactive = "Inactive",
  Suspended = "Suspended",
}

/**
 * OK - the request has succeeded.
 */
export class BalanceAccount extends SpeakeasyBase {
  /**
   * The unique identifier of the [account holder](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/accountHolders__resParam_id) associated with the balance account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderId" })
  accountHolderId: string;

  /**
   * List of balances with the amount and currency.
   */
  @SpeakeasyMetadata({ elemType: Balance })
  @Expose({ name: "balances" })
  @Type(() => Balance)
  balances?: Balance[];

  /**
   * The default three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) of the balance account.
   *
   * @remarks
   * The default value is **EUR**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultCurrencyCode" })
  defaultCurrencyCode?: string;

  /**
   * A human-readable description of the balance account, maximum 300 characters. You can use this parameter to distinguish between multiple balance accounts under an account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The unique identifier of the balance account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * List of [payment instruments](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments) associated with the balance account.
   */
  @SpeakeasyMetadata({ elemType: PaymentInstrumentReference })
  @Expose({ name: "paymentInstruments" })
  @Type(() => PaymentInstrumentReference)
  paymentInstruments?: PaymentInstrumentReference[];

  /**
   * Your reference for the balance account, maximum 150 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * The status of the balance account, set to **Active** by default.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: BalanceAccountStatusEnum;

  /**
   * Contains key-value pairs that specify configurations for balance sweeps per currency code. A sweep pulls in or pushes out funds based on a defined schedule, amount, and a source (for pulling funds) or a destination (for pushing funds).
   *
   * @remarks
   *
   * The key must be a three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes) in uppercase. For example, **EUR**. The value must be an object containing the sweep configuration.
   */
  @SpeakeasyMetadata({ elemType: SweepConfiguration })
  @Expose({ name: "sweepConfigurations" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SweepConfiguration> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SweepConfiguration);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  sweepConfigurations?: Record<string, SweepConfiguration>;

  /**
   * The [time zone](https://www.iana.org/time-zones) of the balance account. For example, **Europe/Amsterdam**.
   *
   * @remarks
   * Defaults to the time zone of the account holder if no time zone is set. For possible values, see the [list of time zone codes](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;
}
