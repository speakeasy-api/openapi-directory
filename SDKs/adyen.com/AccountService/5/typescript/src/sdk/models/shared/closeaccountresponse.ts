/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorFieldType } from "./errorfieldtype";
import { Expose, Type } from "class-transformer";

/**
 * The new status of the account.
 *
 * @remarks
 * >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
 */
export enum CloseAccountResponseStatusEnum {
  Active = "Active",
  Closed = "Closed",
  Inactive = "Inactive",
  Suspended = "Suspended",
}

/**
 * OK - the request has succeeded.
 */
export class CloseAccountResponse extends SpeakeasyBase {
  /**
   * The account code of the account that is closed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountCode" })
  accountCode?: string;

  /**
   * Contains field validation errors that would prevent requests from being processed.
   */
  @SpeakeasyMetadata({ elemType: ErrorFieldType })
  @Expose({ name: "invalidFields" })
  @Type(() => ErrorFieldType)
  invalidFields?: ErrorFieldType[];

  /**
   * The reference of a request. Can be used to uniquely identify the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * The result code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: string;

  /**
   * The new status of the account.
   *
   * @remarks
   * >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CloseAccountResponseStatusEnum;
}
