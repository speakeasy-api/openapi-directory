/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CancelReplicationTaskAssessmentRunResponse {
    /**
     * AccessDeniedFault
     */
    
    public Object accessDeniedFault;
    public CancelReplicationTaskAssessmentRunResponse withAccessDeniedFault(Object accessDeniedFault) {
        this.accessDeniedFault = accessDeniedFault;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CancelReplicationTaskAssessmentRunResponse cancelReplicationTaskAssessmentRunResponse;
    public CancelReplicationTaskAssessmentRunResponse withCancelReplicationTaskAssessmentRunResponse(org.openapis.openapi.models.shared.CancelReplicationTaskAssessmentRunResponse cancelReplicationTaskAssessmentRunResponse) {
        this.cancelReplicationTaskAssessmentRunResponse = cancelReplicationTaskAssessmentRunResponse;
        return this;
    }
    
    
    public String contentType;
    public CancelReplicationTaskAssessmentRunResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InvalidResourceStateFault
     */
    
    public Object invalidResourceStateFault;
    public CancelReplicationTaskAssessmentRunResponse withInvalidResourceStateFault(Object invalidResourceStateFault) {
        this.invalidResourceStateFault = invalidResourceStateFault;
        return this;
    }
    
    
    public Integer statusCode;
    public CancelReplicationTaskAssessmentRunResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CancelReplicationTaskAssessmentRunResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundFault
     */
    
    public Object resourceNotFoundFault;
    public CancelReplicationTaskAssessmentRunResponse withResourceNotFoundFault(Object resourceNotFoundFault) {
        this.resourceNotFoundFault = resourceNotFoundFault;
        return this;
    }
    
}
