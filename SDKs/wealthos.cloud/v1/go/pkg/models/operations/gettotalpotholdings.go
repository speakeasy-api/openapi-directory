// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetTotalPotHoldingsSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

type GetTotalPotHoldingsRequest struct {
	// Id of the investor
	InvestorID string `pathParam:"style=simple,explode=false,name=investor_id"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// GetTotalPotHoldings500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type GetTotalPotHoldings500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetTotalPotHoldings429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type GetTotalPotHoldings429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetTotalPotHoldings404ApplicationJSON - The specified resource was not found
type GetTotalPotHoldings404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetTotalPotHoldings403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type GetTotalPotHoldings403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// GetTotalPotHoldings401ApplicationJSON - You do not have permissions to access this resource.
type GetTotalPotHoldings401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

type GetTotalPotHoldings200ApplicationJSONPotsHoldings struct {
	// Additional external details of the holding. This may be populated in reconciliation process
	AdditionalExternalDetails map[string]interface{} `json:"additional_external_details,omitempty"`
	// Per-unit book cost for a particular holding (applicable for investment product holdings only)
	AverageBookCost *string `json:"average_book_cost,omitempty"`
	// Total book cost for the total units currently held within the pot (applicable for investment product holdings only)
	CostOfHolding *string `json:"cost_of_holding,omitempty"`
	// Currency of the pot
	Currency string `json:"currency"`
	// Free quantity of the investment product holding. Will be empty for the cash holding
	FreeQuantity *string `json:"free_quantity,omitempty"`
	// Free value of the holding
	FreeValue string `json:"free_value"`
	// Investment product id of the holding. Will be 'cash' for cash holdings
	InvestmentProductID string `json:"investment_product_id"`
	// Investment product name of the holding. Will be empty for cash holdings
	InvestmentProductName *string `json:"investment_product_name,omitempty"`
	// Locked quantity of the investment product holding. Will be empty for the cash holding
	LockedQuantity *string `json:"locked_quantity,omitempty"`
	// Locked value of the holding
	LockedValue string `json:"locked_value"`
	// Last price available for the investment product. Will be empty for the cash holding
	Price *string `json:"price,omitempty"`
	// Last price updated date for the investment product. Will be empty for the cash holding
	PriceDate *string `json:"price_date,omitempty"`
	// Settled cash amount within the pot (applicable for cash holdings only)
	SettledCashPosition *string `json:"settled_cash_position,omitempty"`
	// Total quantity of the investment product holding. Will be empty for the cash holding
	TotalQuantity *string `json:"total_quantity,omitempty"`
	// Total value of the holding
	TotalValue string `json:"total_value"`
}

type GetTotalPotHoldings200ApplicationJSONPots struct {
	// Array of holdings belonging to a respective pot
	Holdings []GetTotalPotHoldings200ApplicationJSONPotsHoldings `json:"holdings"`
	PotID    string                                              `json:"pot_id"`
}

// GetTotalPotHoldings200ApplicationJSON - success
type GetTotalPotHoldings200ApplicationJSON struct {
	Pots []GetTotalPotHoldings200ApplicationJSONPots `json:"pots"`
}

type GetTotalPotHoldingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	GetTotalPotHoldings200ApplicationJSONObject *GetTotalPotHoldings200ApplicationJSON
	// You do not have permissions to access this resource.
	GetTotalPotHoldings401ApplicationJSONObject *GetTotalPotHoldings401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	GetTotalPotHoldings403ApplicationJSONObject *GetTotalPotHoldings403ApplicationJSON
	// The specified resource was not found
	GetTotalPotHoldings404ApplicationJSONObject *GetTotalPotHoldings404ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	GetTotalPotHoldings429ApplicationJSONObject *GetTotalPotHoldings429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	GetTotalPotHoldings500ApplicationJSONObject *GetTotalPotHoldings500ApplicationJSON
}
