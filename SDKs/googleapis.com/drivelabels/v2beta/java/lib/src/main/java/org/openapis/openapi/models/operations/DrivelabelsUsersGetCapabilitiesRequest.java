/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DrivelabelsUsersGetCapabilitiesRequest {
    /**
     * V1 error format.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=$.xgafv")
    public org.openapis.openapi.models.shared.XgafvEnum dollarXgafv;

    public DrivelabelsUsersGetCapabilitiesRequest withDollarXgafv(org.openapis.openapi.models.shared.XgafvEnum dollarXgafv) {
        this.dollarXgafv = dollarXgafv;
        return this;
    }
    
    /**
     * OAuth access token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=access_token")
    public String accessToken;

    public DrivelabelsUsersGetCapabilitiesRequest withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * Data format for response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public DrivelabelsUsersGetCapabilitiesRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * JSONP
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callback")
    public String callback;

    public DrivelabelsUsersGetCapabilitiesRequest withCallback(String callback) {
        this.callback = callback;
        return this;
    }
    
    /**
     * The customer to scope this request to. For example: "customers/abcd1234". If unset, will return settings within the current customer.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=customer")
    public String customer;

    public DrivelabelsUsersGetCapabilitiesRequest withCustomer(String customer) {
        this.customer = customer;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public DrivelabelsUsersGetCapabilitiesRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public DrivelabelsUsersGetCapabilitiesRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Required. The resource name of the user. Only "users/me/capabilities" is supported.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=name")
    public String name;

    public DrivelabelsUsersGetCapabilitiesRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public DrivelabelsUsersGetCapabilitiesRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public DrivelabelsUsersGetCapabilitiesRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public DrivelabelsUsersGetCapabilitiesRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Legacy upload protocol for media (e.g. "media", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public DrivelabelsUsersGetCapabilitiesRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "raw", "multipart").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=upload_protocol")
    public String uploadProtocol;

    public DrivelabelsUsersGetCapabilitiesRequest withUploadProtocol(String uploadProtocol) {
        this.uploadProtocol = uploadProtocol;
        return this;
    }
    
    /**
     * Set to `true` in order to use the user's admin credentials. The server verifies that the user is an admin for the label before allowing access.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=useAdminAccess")
    public Boolean useAdminAccess;

    public DrivelabelsUsersGetCapabilitiesRequest withUseAdminAccess(Boolean useAdminAccess) {
        this.useAdminAccess = useAdminAccess;
        return this;
    }
    
    /**
     * When specified, only certain fields belonging to the indicated view are returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=view")
    public DrivelabelsUsersGetCapabilitiesViewEnum view;

    public DrivelabelsUsersGetCapabilitiesRequest withView(DrivelabelsUsersGetCapabilitiesViewEnum view) {
        this.view = view;
        return this;
    }
    
    public DrivelabelsUsersGetCapabilitiesRequest(@JsonProperty("name") String name) {
        this.name = name;
  }
}
