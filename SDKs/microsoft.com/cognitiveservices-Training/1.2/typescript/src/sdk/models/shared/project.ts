/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectSettings } from "./projectsettings";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a project
 */
export class ProjectInput extends SpeakeasyBase {
  /**
   * Gets or sets the description of the project
   */
  @SpeakeasyMetadata({ data: "form, name=Description" })
  @Expose({ name: "Description" })
  description?: string;

  /**
   * Gets or sets the name of the project
   */
  @SpeakeasyMetadata({ data: "form, name=Name" })
  @Expose({ name: "Name" })
  name?: string;

  /**
   * Represents settings associated with a project
   */
  @SpeakeasyMetadata({ data: "form, name=Settings;json=true" })
  @Expose({ name: "Settings" })
  @Type(() => ProjectSettings)
  settings?: ProjectSettings;
}

/**
 * Represents a project
 */
export class Project extends SpeakeasyBase {
  /**
   * Gets the date this project was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Gets the current iteration id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrentIterationId" })
  currentIterationId?: string;

  /**
   * Gets or sets the description of the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * Gets the project id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   * Gets the date this project was last modified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastModified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModified?: Date;

  /**
   * Gets or sets the name of the project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * Represents settings associated with a project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Settings" })
  @Type(() => ProjectSettings)
  settings?: ProjectSettings;

  /**
   * Gets the thumbnail url representing the image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ThumbnailUri" })
  thumbnailUri?: string;
}
