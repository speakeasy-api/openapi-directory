// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateTagOptionWithResourceXAmzTargetEnum
type AssociateTagOptionWithResourceXAmzTargetEnum string

const (
	AssociateTagOptionWithResourceXAmzTargetEnumAws242ServiceCatalogServiceAssociateTagOptionWithResource AssociateTagOptionWithResourceXAmzTargetEnum = "AWS242ServiceCatalogService.AssociateTagOptionWithResource"
)

func (e *AssociateTagOptionWithResourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.AssociateTagOptionWithResource":
		*e = AssociateTagOptionWithResourceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateTagOptionWithResourceXAmzTargetEnum: %s", s)
	}
}

type AssociateTagOptionWithResourceRequest struct {
	AssociateTagOptionWithResourceInput shared.AssociateTagOptionWithResourceInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          AssociateTagOptionWithResourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateTagOptionWithResourceResponse struct {
	// Success
	AssociateTagOptionWithResourceOutput map[string]interface{}
	ContentType                          string
	// DuplicateResourceException
	DuplicateResourceException interface{}
	// InvalidParametersException
	InvalidParametersException interface{}
	// InvalidStateException
	InvalidStateException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TagOptionNotMigratedException
	TagOptionNotMigratedException interface{}
}
