/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetNearbyFacilitiesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=apikey",
  })
  apikey: string;
}

/**
 * Filter to only include facilities that are within the specified number of drive time minutes from the requested location.
 */
export enum GetNearbyFacilitiesDriveTimeEnum {
  Ten = "10",
  Twenty = "20",
  Thirty = "30",
  Forty = "40",
  Fifty = "50",
  Sixty = "60",
  Seventy = "70",
  Eighty = "80",
  Ninety = "90",
}

export class GetNearbyFacilitiesRequest extends SpeakeasyBase {
  /**
   * City of the location from which drive time will be calculated.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=city" })
  city?: string;

  /**
   * Filter to only include facilities that are within the specified number of drive time minutes from the requested location.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=drive_time",
  })
  driveTime?: GetNearbyFacilitiesDriveTimeEnum;

  /**
   * Latitude of the location from which drive time will be calculated.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lat" })
  lat?: number;

  /**
   * Longitude of the location from which drive time will be calculated.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lng" })
  lng?: number;

  /**
   * Page of results to return per paginated response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of results to return per paginated response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Optional facility service search filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=services[]",
  })
  services?: string[];

  /**
   * Two character state code of the location from which drive time will be calculated.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: string;

  /**
   * Street address of the location from which drive time will be calculated.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=street_address",
  })
  streetAddress?: string;

  /**
   * Zip code of the location from which drive time will be calculated.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=zip" })
  zip?: string;
}

export class GetNearbyFacilitiesResponse extends SpeakeasyBase {
  /**
   * Requested format unacceptable
   */
  @SpeakeasyMetadata()
  apiError?: shared.ApiError;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Missing Required Or Ambiguous Parameters
   */
  @SpeakeasyMetadata()
  genericError?: shared.GenericError;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  nearbyResponse?: shared.NearbyResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
