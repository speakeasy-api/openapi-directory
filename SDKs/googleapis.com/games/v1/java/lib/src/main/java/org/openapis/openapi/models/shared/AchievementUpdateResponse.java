/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AchievementUpdateResponse - An updated achievement.
 */
public class AchievementUpdateResponse {
    /**
     * The achievement this update is was applied to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("achievementId")
    public String achievementId;

    public AchievementUpdateResponse withAchievementId(String achievementId) {
        this.achievementId = achievementId;
        return this;
    }
    
    /**
     * The current state of the achievement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentState")
    public AchievementUpdateResponseCurrentStateEnum currentState;

    public AchievementUpdateResponse withCurrentState(AchievementUpdateResponseCurrentStateEnum currentState) {
        this.currentState = currentState;
        return this;
    }
    
    /**
     * The current steps recorded for this achievement if it is incremental.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentSteps")
    public Integer currentSteps;

    public AchievementUpdateResponse withCurrentSteps(Integer currentSteps) {
        this.currentSteps = currentSteps;
        return this;
    }
    
    /**
     * Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateResponse`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public AchievementUpdateResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Whether this achievement was newly unlocked (that is, whether the unlock request for the achievement was the first for the player).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("newlyUnlocked")
    public Boolean newlyUnlocked;

    public AchievementUpdateResponse withNewlyUnlocked(Boolean newlyUnlocked) {
        this.newlyUnlocked = newlyUnlocked;
        return this;
    }
    
    /**
     * Whether the requested updates actually affected the achievement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateOccurred")
    public Boolean updateOccurred;

    public AchievementUpdateResponse withUpdateOccurred(Boolean updateOccurred) {
        this.updateOccurred = updateOccurred;
        return this;
    }
    
    public AchievementUpdateResponse(){}
}
