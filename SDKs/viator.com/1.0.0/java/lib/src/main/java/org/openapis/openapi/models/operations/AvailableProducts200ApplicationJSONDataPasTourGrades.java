/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AvailableProducts200ApplicationJSONDataPasTourGrades {
    /**
     * **array of objects** with availability and pricing information for *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availDates")
    public AvailableProducts200ApplicationJSONDataPasTourGradesAvailDates[] availDates;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withAvailDates(AvailableProducts200ApplicationJSONDataPasTourGradesAvailDates[] availDates) {
        this.availDates = availDates;
        return this;
    }
    
    /**
     * **booking modality specifier** for *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bookingEngine")
    public String bookingEngine;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withBookingEngine(String bookingEngine) {
        this.bookingEngine = bookingEngine;
        return this;
    }
    
    /**
     * **natural-language description** of *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * **dictionary** of language codes to array of textual language service descriptors available for *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageServices")
    public java.util.Map<String, Object[]> languageServices;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withLanguageServices(java.util.Map<String, Object[]> languageServices) {
        this.languageServices = languageServices;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sapi")
    public Boolean sapi;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withSapi(Boolean sapi) {
        this.sapi = sapi;
        return this;
    }
    
    /**
     * **natural-language title** of *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * **alphanumeric identifier** for *this* tour grade
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tourGradeCode")
    public String tourGradeCode;

    public AvailableProducts200ApplicationJSONDataPasTourGrades withTourGradeCode(String tourGradeCode) {
        this.tourGradeCode = tourGradeCode;
        return this;
    }
    
    public AvailableProducts200ApplicationJSONDataPasTourGrades(){}
}
