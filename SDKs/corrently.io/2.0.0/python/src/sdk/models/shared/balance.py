"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import transactions as shared_transactions
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BalanceVariationEnum(str, Enum):
    r"""Type of subbalance (sub account)"""
    GSB = 'gsb'
    ERZEUGUNG = 'erzeugung'
    EIGENSTROM = 'eigenstrom'
    CO2 = 'co2'
    BAEUME = 'baeume'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Balance:
    
    balance: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""Sum owned - sum due by account"""  
    haben: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('haben'), 'exclude': lambda f: f is None }})
    r"""Sum owned by account"""  
    soll: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('soll'), 'exclude': lambda f: f is None }})
    r"""Sum due by account"""  
    txs: Optional[list[shared_transactions.Transactions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('txs'), 'exclude': lambda f: f is None }})  
    variation: Optional[BalanceVariationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variation'), 'exclude': lambda f: f is None }})
    r"""Type of subbalance (sub account)"""  
    