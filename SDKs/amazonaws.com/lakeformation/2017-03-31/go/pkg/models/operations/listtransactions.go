// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTransactionsRequestBodyStatusFilterEnum -  A filter indicating the status of transactions to return. Options are ALL | COMPLETED | COMMITTED | ABORTED | ACTIVE. The default is <code>ALL</code>.
type ListTransactionsRequestBodyStatusFilterEnum string

const (
	ListTransactionsRequestBodyStatusFilterEnumAll       ListTransactionsRequestBodyStatusFilterEnum = "ALL"
	ListTransactionsRequestBodyStatusFilterEnumCompleted ListTransactionsRequestBodyStatusFilterEnum = "COMPLETED"
	ListTransactionsRequestBodyStatusFilterEnumActive    ListTransactionsRequestBodyStatusFilterEnum = "ACTIVE"
	ListTransactionsRequestBodyStatusFilterEnumCommitted ListTransactionsRequestBodyStatusFilterEnum = "COMMITTED"
	ListTransactionsRequestBodyStatusFilterEnumAborted   ListTransactionsRequestBodyStatusFilterEnum = "ABORTED"
)

func (e *ListTransactionsRequestBodyStatusFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALL":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "COMMITTED":
		fallthrough
	case "ABORTED":
		*e = ListTransactionsRequestBodyStatusFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTransactionsRequestBodyStatusFilterEnum: %s", s)
	}
}

type ListTransactionsRequestBody struct {
	// The catalog for which to list transactions. Defaults to the account ID of the caller.
	CatalogID *string `json:"CatalogId,omitempty"`
	// The maximum number of transactions to return in a single call.
	MaxResults *int64 `json:"MaxResults,omitempty"`
	// A continuation token if this is not the first call to retrieve transactions.
	NextToken *string `json:"NextToken,omitempty"`
	//  A filter indicating the status of transactions to return. Options are ALL | COMPLETED | COMMITTED | ABORTED | ACTIVE. The default is <code>ALL</code>.
	StatusFilter *ListTransactionsRequestBodyStatusFilterEnum `json:"StatusFilter,omitempty"`
}

type ListTransactionsRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                     `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       ListTransactionsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListTransactionsResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListTransactionsResponse *shared.ListTransactionsResponse
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
