/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalInstanceConfiguration } from "./additionalinstanceconfiguration";
import { ComponentConfiguration } from "./componentconfiguration";
import { ImageTypeEnum } from "./imagetypeenum";
import { InstanceBlockDeviceMapping } from "./instanceblockdevicemapping";
import { PlatformEnum } from "./platformenum";
import { Expose, Type } from "class-transformer";

/**
 * An image recipe.
 */
export class ImageRecipe extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInstanceConfiguration" })
  @Type(() => AdditionalInstanceConfiguration)
  additionalInstanceConfiguration?: AdditionalInstanceConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata({ elemType: InstanceBlockDeviceMapping })
  @Expose({ name: "blockDeviceMappings" })
  @Type(() => InstanceBlockDeviceMapping)
  blockDeviceMappings?: InstanceBlockDeviceMapping[];

  @SpeakeasyMetadata({ elemType: ComponentConfiguration })
  @Expose({ name: "components" })
  @Type(() => ComponentConfiguration)
  components?: ComponentConfiguration[];

  @SpeakeasyMetadata()
  @Expose({ name: "dateCreated" })
  dateCreated?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parentImage" })
  parentImage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: PlatformEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ImageTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workingDirectory" })
  workingDirectory?: string;
}
