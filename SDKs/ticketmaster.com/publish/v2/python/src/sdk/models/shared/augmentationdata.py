"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import change as shared_change
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AugmentationDataRelatedEntityTypeEnum(str, Enum):
    r"""The type of the entity to apply the augmentation data."""
    EVENT = 'event'
    ATTRACTION = 'attraction'
    VENUE = 'venue'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AugmentationData:
    r"""This class defines the Augmentation Data on the Publish API"""
    
    changes: list[shared_change.Change] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('changes') }})
    r"""List of changes to apply to the related entity"""  
    related_entity_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedEntityId') }})
    r"""Id of the entity to apply the augmentation data."""  
    related_entity_type: AugmentationDataRelatedEntityTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relatedEntityType') }})
    r"""The type of the entity to apply the augmentation data."""  
    source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source') }})
    r"""The source where the augementation data came from"""  
    version_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionNumber') }})
    r"""Vesion of this augmentation data. This field is to avoid updating entity with old data."""  
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""The confidence (%) level of the accuracy of this augmention data. 100 is the better"""  
    