"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class PlayParametersLegsEnum(str, Enum):
    r"""Call leg(s) for which the media will be played; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable."""
    ALEG = 'aleg'
    BLEG = 'bleg'
    BOTH = 'both'


@dataclasses.dataclass
class PlayParameters:
    r"""POST parameters"""
    
    call_uuid: str = dataclasses.field(metadata={'form': { 'field_name': 'CallUUID' }})
    r"""Unique identifier of the call to play media into"""  
    sounds: str = dataclasses.field(metadata={'form': { 'field_name': 'Sounds' }})
    r"""Comma separated list of file paths/URIs to be played"""  
    legs: Optional[PlayParametersLegsEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Legs' }})
    r"""Call leg(s) for which the media will be played; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable."""  
    length: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Length' }})
    r"""Maximum amount of time (in seconds) to playback the media"""  
    loop: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Loop' }})
    r"""Loops the media file(s) indefinitely"""  
    mix: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Mix' }})
    r"""Whether the media should be mixed with the call's audio stream"""  
    