/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Schema - The type of API resource. For Schema resources, this is always `admin#directory#schema`.
 */
public class Schema {
    /**
     * Display name for the schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Schema withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Schema withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * A list of fields in the schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public SchemaFieldSpec[] fields;

    public Schema withFields(SchemaFieldSpec[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Kind of resource this is.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Schema withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The unique identifier of the schema (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schemaId")
    public String schemaId;

    public Schema withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }
    
    /**
     * The schema's name. Each `schema_name` must be unique within a customer. Reusing a name results in a `409: Entity already exists` error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schemaName")
    public String schemaName;

    public Schema withSchemaName(String schemaName) {
        this.schemaName = schemaName;
        return this;
    }
    
    public Schema(){}
}
