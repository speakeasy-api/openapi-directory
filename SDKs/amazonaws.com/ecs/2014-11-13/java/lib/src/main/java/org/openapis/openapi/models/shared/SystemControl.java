/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SystemControl - &lt;p&gt;A list of namespaced kernel parameters to set in the container. This parameter maps to &lt;code&gt;Sysctls&lt;/code&gt; in the &lt;a href="https://docs.docker.com/engine/api/v1.35/#operation/ContainerCreate"&gt;Create a container&lt;/a&gt; section of the &lt;a href="https://docs.docker.com/engine/api/v1.35/"&gt;Docker Remote API&lt;/a&gt; and the &lt;code&gt;--sysctl&lt;/code&gt; option to &lt;a href="https://docs.docker.com/engine/reference/run/#security-configuration"&gt;docker run&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;We don't recommend that you specify network-related &lt;code&gt;systemControls&lt;/code&gt; parameters for multiple containers in a single task. This task also uses either the &lt;code&gt;awsvpc&lt;/code&gt; or &lt;code&gt;host&lt;/code&gt; network mode. It does it for the following reasons.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For tasks that use the &lt;code&gt;awsvpc&lt;/code&gt; network mode, if you set &lt;code&gt;systemControls&lt;/code&gt; for any container, it applies to all containers in the task. If you set different &lt;code&gt;systemControls&lt;/code&gt; for multiple containers in a single task, the container that's started last determines which &lt;code&gt;systemControls&lt;/code&gt; take effect.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For tasks that use the &lt;code&gt;host&lt;/code&gt; network mode, the &lt;code&gt;systemControls&lt;/code&gt; parameter applies to the container instance's kernel parameter and that of all containers of any tasks running on that container instance.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public class SystemControl {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespace")
    public String namespace;
    public SystemControl withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;
    public SystemControl withValue(String value) {
        this.value = value;
        return this;
    }
    
}
