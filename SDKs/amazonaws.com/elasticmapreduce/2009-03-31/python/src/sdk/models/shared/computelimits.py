"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import computelimitsunittype_enum as shared_computelimitsunittype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComputeLimits:
    r"""The EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster can not be above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration."""
    
    maximum_capacity_units: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumCapacityUnits') }})  
    minimum_capacity_units: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumCapacityUnits') }})  
    unit_type: shared_computelimitsunittype_enum.ComputeLimitsUnitTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnitType') }})  
    maximum_core_capacity_units: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumCoreCapacityUnits'), 'exclude': lambda f: f is None }})  
    maximum_on_demand_capacity_units: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumOnDemandCapacityUnits'), 'exclude': lambda f: f is None }})  
    