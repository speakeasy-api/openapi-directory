"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import regionofinterest as shared_regionofinterest
from ..shared import streamprocessordatasharingpreference as shared_streamprocessordatasharingpreference
from ..shared import streamprocessorparametertodelete_enum as shared_streamprocessorparametertodelete_enum
from ..shared import streamprocessorsettingsforupdate as shared_streamprocessorsettingsforupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateStreamProcessorRequest:
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    data_sharing_preference_for_update: Optional[shared_streamprocessordatasharingpreference.StreamProcessorDataSharingPreference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSharingPreferenceForUpdate'), 'exclude': lambda f: f is None }})  
    parameters_to_delete: Optional[list[shared_streamprocessorparametertodelete_enum.StreamProcessorParameterToDeleteEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParametersToDelete'), 'exclude': lambda f: f is None }})  
    regions_of_interest_for_update: Optional[list[shared_regionofinterest.RegionOfInterest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RegionsOfInterestForUpdate'), 'exclude': lambda f: f is None }})  
    settings_for_update: Optional[shared_streamprocessorsettingsforupdate.StreamProcessorSettingsForUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SettingsForUpdate'), 'exclude': lambda f: f is None }})  
    