<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetClientClientId200ApplicationJSON - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetClientClientId200ApplicationJSON
{
    /**
     * URL of the Client's JSON representation.
     * 
     * @var ?string $atId
     */
	#[\JMS\Serializer\Annotation\SerializedName('@id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $atId = null;
    
    /**
     * OAuth 2.0 client identifier string.
     * 
     * @var string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientId;
    
    /**
     * Human-readable string name of the client to be presented to the end-user during authorization.
     * 
     * @var ?string $clientName
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientName = null;
    
    /**
     * OAuth 2.0 client secret string. 
     * 
     * @var ?string $clientSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientSecret = null;
    
    /**
     * URL string of a web page providing information about the client.
     * 
     * @var ?string $clientUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientUri = null;
    
    /**
     * Array of strings representing ways to contact people responsible for this client, typically email addresses.
     * 
     * @var ?array<mixed> $contacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('contacts')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $contacts = null;
    
    /**
     * Array of OAuth 2.0 grant type strings that the client can use at the token endpoint.
     * 
     * @var ?array<mixed> $grantTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('grant_types')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $grantTypes = null;
    
    /**
     * Client's JSON Web Key Set [RFC7517] document value, which contains the client's public keys.  The value of this field MUST be a JSON object containing a valid JWK Set.
     * 
     * @var ?array<mixed> $jwks
     */
	#[\JMS\Serializer\Annotation\SerializedName('jwks')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $jwks = null;
    
    /**
     * URL string referencing the client's JSON Web Key (JWK) Set [RFC7517] document, which contains the client's public keys.
     * 
     * @var ?string $jwksUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('jwks_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jwksUri = null;
    
    /**
     * An email address used to generate a gravatar.com logo_uri.
     * 
     * @var ?string $logoEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('logo_email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logoEmail = null;
    
    /**
     * URL string that references a logo for the client.
     * 
     * @var ?string $logoUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('logo_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logoUri = null;
    
    /**
     * URL string that points to a human-readable privacy policy document that describes how the deployment organization collects, uses, retains, and discloses personal data.
     * 
     * @var ?string $policyUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('policy_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $policyUri = null;
    
    /**
     * Array of redirection URI strings for use in redirect-based flows such as the authorization code and implicit flows.
     * 
     * @var ?array<mixed> $redirectUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('redirect_uris')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $redirectUris = null;
    
    /**
     * Array of the OAuth 2.0 response type strings that the client can use at the authorization endpoint.
     * 
     * @var ?array<mixed> $responseTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('response_types')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $responseTypes = null;
    
    /**
     * String containing a space-separated list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749]) that the client can use when requesting access tokens.
     * 
     * @var ?string $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scope = null;
    
    /**
     * A unique identifier string (e.g., a Universally Unique Identifier (UUID)) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
     * 
     * @var ?string $softwareId
     */
	#[\JMS\Serializer\Annotation\SerializedName('software_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $softwareId = null;
    
    /**
     * A version identifier string for the client software identified by software_id.
     * 
     * @var ?string $softwareVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('software_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $softwareVersion = null;
    
    /**
     * String indicator of the requested authentication method for the token endpoint.
     * 
     * @var ?string $tokenEndpointAuthMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('token_endpoint_auth_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tokenEndpointAuthMethod = null;
    
    /**
     * URL string that points to a human-readable terms of service document for the client that describes a contractual relationship between the end-user and the client that the end-user accepts when authorizing the client.
     * 
     * @var ?string $tosUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('tos_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tosUri = null;
    
	public function __construct()
	{
		$this->atId = null;
		$this->clientId = "";
		$this->clientName = null;
		$this->clientSecret = null;
		$this->clientUri = null;
		$this->contacts = null;
		$this->grantTypes = null;
		$this->jwks = null;
		$this->jwksUri = null;
		$this->logoEmail = null;
		$this->logoUri = null;
		$this->policyUri = null;
		$this->redirectUris = null;
		$this->responseTypes = null;
		$this->scope = null;
		$this->softwareId = null;
		$this->softwareVersion = null;
		$this->tokenEndpointAuthMethod = null;
		$this->tosUri = null;
	}
}
