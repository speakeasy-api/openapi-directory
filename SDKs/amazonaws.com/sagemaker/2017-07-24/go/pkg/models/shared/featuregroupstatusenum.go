// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FeatureGroupStatusEnum string

const (
	FeatureGroupStatusEnumCreating     FeatureGroupStatusEnum = "Creating"
	FeatureGroupStatusEnumCreated      FeatureGroupStatusEnum = "Created"
	FeatureGroupStatusEnumCreateFailed FeatureGroupStatusEnum = "CreateFailed"
	FeatureGroupStatusEnumDeleting     FeatureGroupStatusEnum = "Deleting"
	FeatureGroupStatusEnumDeleteFailed FeatureGroupStatusEnum = "DeleteFailed"
)

func (e FeatureGroupStatusEnum) ToPointer() *FeatureGroupStatusEnum {
	return &e
}

func (e *FeatureGroupStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Creating":
		fallthrough
	case "Created":
		fallthrough
	case "CreateFailed":
		fallthrough
	case "Deleting":
		fallthrough
	case "DeleteFailed":
		*e = FeatureGroupStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureGroupStatusEnum: %v", v)
	}
}
