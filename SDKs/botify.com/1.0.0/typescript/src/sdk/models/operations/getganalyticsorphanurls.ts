/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)
 */
export enum GetGanalyticsOrphanURLsMediumEnum {
  Organic = "organic",
  Social = "social",
}

/**
 * Traffic source, value: name of the search engine or social network
 */
export enum GetGanalyticsOrphanURLsSourceEnum {
  All = "all",
  Aol = "aol",
  Ask = "ask",
  Baidu = "baidu",
  Bing = "bing",
  Facebook = "facebook",
  Google = "google",
  GooglePlus = "google+",
  Linkedin = "linkedin",
  Naver = "naver",
  Pinterest = "pinterest",
  Reddit = "reddit",
  Tumblr = "tumblr",
  Twitter = "twitter",
  Yahoo = "yahoo",
  Yandex = "yandex",
}

export class GetGanalyticsOrphanURLsRequest extends SpeakeasyBase {
  /**
   * Analysis' identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=analysis_slug",
  })
  analysisSlug: string;

  /**
   * Type of traffic, value: 'organic' (from search engine)or 'social' (from a social network)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=medium",
  })
  medium: GetGanalyticsOrphanURLsMediumEnum;

  /**
   * Page Number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Project's identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_slug",
  })
  projectSlug: string;

  /**
   * Page Size
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size?: number;

  /**
   * Traffic source, value: name of the search engine or social network
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=source",
  })
  source: GetGanalyticsOrphanURLsSourceEnum;

  /**
   * User's identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

/**
 * Successful operation
 */
export class GetGanalyticsOrphanURLs200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata({ elemType: shared.CrawlOrphanURLs })
  @Expose({ name: "results" })
  @Type(() => shared.CrawlOrphanURLs)
  results?: shared.CrawlOrphanURLs[];

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;
}

export class GetGanalyticsOrphanURLsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * error payload
   */
  @SpeakeasyMetadata()
  defaultPayload?: shared.DefaultPayload;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getGanalyticsOrphanURLs200ApplicationJSONObject?: GetGanalyticsOrphanURLs200ApplicationJSON;
}
