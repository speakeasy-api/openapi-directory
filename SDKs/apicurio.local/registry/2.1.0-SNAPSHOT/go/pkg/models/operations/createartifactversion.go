// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateArtifactVersionPathParams struct {
	// The artifact ID.  Can be a string (client-provided) or UUID (server-generated), representing the unique artifact identifier.
	ArtifactID string `pathParam:"style=simple,explode=false,name=artifactId"`
	// The artifact group ID.  Must be a string provided by the client, representing the name of the grouping of artifacts.
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
}

type CreateArtifactVersionHeaders struct {
	// Specifies the artifact description of this new version of the artifact content. Description must be ASCII-only string. If this is not provided, the server will extract the description from the artifact content.
	XRegistryDescription *string `header:"style=simple,explode=false,name=X-Registry-Description"`
	// Specifies the artifact description of this new version of the artifact content. Value of this must be Base64 encoded string. If this is not provided, the server will extract the description from the artifact content.
	XRegistryDescriptionEncoded *string `header:"style=simple,explode=false,name=X-Registry-Description-Encoded"`
	// Specifies the artifact name of this new version of the artifact content. Name must be ASCII-only string. If this is not
	// provided, the server will extract the name from the artifact content.
	XRegistryName *string `header:"style=simple,explode=false,name=X-Registry-Name"`
	// Specifies the artifact name of this new version of the artifact content. Value of this must be Base64 encoded string. If this is not provided, the server will extract the name from the artifact content.
	XRegistryNameEncoded *string `header:"style=simple,explode=false,name=X-Registry-Name-Encoded"`
	// Specifies the version number of this new version of the artifact content.  This would typically
	// be a simple integer or a SemVer value.  It must be unique within the artifact.  If this is not
	// provided, the server will generate a new, unique version number for this new updated content.
	XRegistryVersion *string `header:"style=simple,explode=false,name=X-Registry-Version"`
}

type CreateArtifactVersionRequest struct {
	PathParams CreateArtifactVersionPathParams
	Headers    CreateArtifactVersionHeaders
	// The content of the artifact version being created. This is often, but not always, JSON data
	// representing one of the supported artifact types:
	//
	// * Avro (`AVRO`)
	// * Protobuf (`PROTOBUF`)
	// * JSON Schema (`JSON`)
	// * Kafka Connect (`KCONNECT`)
	// * OpenAPI (`OPENAPI`)
	// * AsyncAPI (`ASYNCAPI`)
	// * GraphQL (`GRAPHQL`)
	// * Web Services Description Language (`WSDL`)
	// * XML Schema (`XSD`)
	//
	Request []byte `request:"mediaType=*/*"`
}

type CreateArtifactVersionResponse struct {
	ContentType string
	// Common response for all operations that can return a `404` error.
	Error *shared.Error
	// Common response used when an input conflicts with existing data.
	RuleViolationError *shared.RuleViolationError
	StatusCode         int
	RawResponse        *http.Response
	// The artifact version was successfully created.
	VersionMetaData *shared.VersionMetaData
}
