/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2HybridFindingDetails - Populate to associate additional data with each finding.
 */
public class GooglePrivacyDlpV2HybridFindingDetails {
    /**
     * Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerDetails")
    public GooglePrivacyDlpV2Container containerDetails;

    public GooglePrivacyDlpV2HybridFindingDetails withContainerDetails(GooglePrivacyDlpV2Container containerDetails) {
        this.containerDetails = containerDetails;
        return this;
    }
    
    /**
     * Offset in bytes of the line, from the beginning of the file, where the finding is located. Populate if the item being scanned is only part of a bigger item, such as a shard of a file and you want to track the absolute position of the finding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileOffset")
    public String fileOffset;

    public GooglePrivacyDlpV2HybridFindingDetails withFileOffset(String fileOffset) {
        this.fileOffset = fileOffset;
        return this;
    }
    
    /**
     * Labels to represent user provided metadata about the data being inspected. If configured by the job, some key values may be required. The labels associated with `Finding`'s produced by hybrid inspection. Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. No more than 10 labels can be associated with a given finding. Examples: * `"environment" : "production"` * `"pipeline" : "etl"`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GooglePrivacyDlpV2HybridFindingDetails withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Offset of the row for tables. Populate if the row(s) being scanned are part of a bigger dataset and you want to keep track of their absolute position.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rowOffset")
    public String rowOffset;

    public GooglePrivacyDlpV2HybridFindingDetails withRowOffset(String rowOffset) {
        this.rowOffset = rowOffset;
        return this;
    }
    
    /**
     * Instructions regarding the table content being inspected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableOptions")
    public GooglePrivacyDlpV2TableOptions tableOptions;

    public GooglePrivacyDlpV2HybridFindingDetails withTableOptions(GooglePrivacyDlpV2TableOptions tableOptions) {
        this.tableOptions = tableOptions;
        return this;
    }
    
    public GooglePrivacyDlpV2HybridFindingDetails(){}
}
