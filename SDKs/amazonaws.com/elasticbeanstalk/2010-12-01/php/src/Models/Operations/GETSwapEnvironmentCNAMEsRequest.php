<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETSwapEnvironmentCNAMEsRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETSwapEnvironmentCNAMEsActionEnum $action;
    
    /**
     * <p>The ID of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentId</code> with the <code>DestinationEnvironmentId</code>. </p>
     * 
     * @var ?string $destinationEnvironmentId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationEnvironmentId')]
    public ?string $destinationEnvironmentId = null;
    
    /**
     * <p>The name of the destination environment.</p> <p> Condition: You must specify at least the <code>DestinationEnvironmentID</code> or the <code>DestinationEnvironmentName</code>. You may also specify both. You must specify the <code>SourceEnvironmentName</code> with the <code>DestinationEnvironmentName</code>. </p>
     * 
     * @var ?string $destinationEnvironmentName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationEnvironmentName')]
    public ?string $destinationEnvironmentName = null;
    
    /**
     * <p>The ID of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentId</code>, you must specify the <code>DestinationEnvironmentId</code>. </p>
     * 
     * @var ?string $sourceEnvironmentId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourceEnvironmentId')]
    public ?string $sourceEnvironmentId = null;
    
    /**
     * <p>The name of the source environment.</p> <p> Condition: You must specify at least the <code>SourceEnvironmentID</code> or the <code>SourceEnvironmentName</code>. You may also specify both. If you specify the <code>SourceEnvironmentName</code>, you must specify the <code>DestinationEnvironmentName</code>. </p>
     * 
     * @var ?string $sourceEnvironmentName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=SourceEnvironmentName')]
    public ?string $sourceEnvironmentName = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETSwapEnvironmentCNAMEsVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETSwapEnvironmentCNAMEsActionEnum::SWAP_ENVIRONMENT_CNAM_ES;
		$this->destinationEnvironmentId = null;
		$this->destinationEnvironmentName = null;
		$this->sourceEnvironmentId = null;
		$this->sourceEnvironmentName = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETSwapEnvironmentCNAMEsVersionEnum::TWO_THOUSAND_AND_TEN1201;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
