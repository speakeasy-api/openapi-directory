"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidPhoneNumber = exports.InvalidPhoneNumberValidEnum = exports.InvalidPhoneNumberOriginalCarrierEnum = exports.InvalidPhoneNumberNationalFormatEnum = exports.InvalidPhoneNumberIsoCountry2Enum = exports.InvalidPhoneNumberIsoCountryEnum = exports.InvalidPhoneNumberInternationalFormatEnum = exports.InvalidPhoneNumberCurrentCarrierEnum = exports.InvalidPhoneNumberCountryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Full country name
 */
var InvalidPhoneNumberCountryEnum;
(function (InvalidPhoneNumberCountryEnum) {
    InvalidPhoneNumberCountryEnum["Null"] = "null";
})(InvalidPhoneNumberCountryEnum = exports.InvalidPhoneNumberCountryEnum || (exports.InvalidPhoneNumberCountryEnum = {}));
/**
 * Representation of current phone carrier information like network code, name, country, network type
 */
var InvalidPhoneNumberCurrentCarrierEnum;
(function (InvalidPhoneNumberCurrentCarrierEnum) {
    InvalidPhoneNumberCurrentCarrierEnum["Null"] = "null";
})(InvalidPhoneNumberCurrentCarrierEnum = exports.InvalidPhoneNumberCurrentCarrierEnum || (exports.InvalidPhoneNumberCurrentCarrierEnum = {}));
/**
 * Phone number formatted to international standard
 */
var InvalidPhoneNumberInternationalFormatEnum;
(function (InvalidPhoneNumberInternationalFormatEnum) {
    InvalidPhoneNumberInternationalFormatEnum["Null"] = "null";
})(InvalidPhoneNumberInternationalFormatEnum = exports.InvalidPhoneNumberInternationalFormatEnum || (exports.InvalidPhoneNumberInternationalFormatEnum = {}));
/**
 * Country code in 3 letter ISO format
 */
var InvalidPhoneNumberIsoCountryEnum;
(function (InvalidPhoneNumberIsoCountryEnum) {
    InvalidPhoneNumberIsoCountryEnum["Null"] = "null";
})(InvalidPhoneNumberIsoCountryEnum = exports.InvalidPhoneNumberIsoCountryEnum || (exports.InvalidPhoneNumberIsoCountryEnum = {}));
/**
 * Country code in 2 letter ISO format
 */
var InvalidPhoneNumberIsoCountry2Enum;
(function (InvalidPhoneNumberIsoCountry2Enum) {
    InvalidPhoneNumberIsoCountry2Enum["Null"] = "null";
})(InvalidPhoneNumberIsoCountry2Enum = exports.InvalidPhoneNumberIsoCountry2Enum || (exports.InvalidPhoneNumberIsoCountry2Enum = {}));
/**
 * Phone number formatted to local standard
 */
var InvalidPhoneNumberNationalFormatEnum;
(function (InvalidPhoneNumberNationalFormatEnum) {
    InvalidPhoneNumberNationalFormatEnum["Null"] = "null";
})(InvalidPhoneNumberNationalFormatEnum = exports.InvalidPhoneNumberNationalFormatEnum || (exports.InvalidPhoneNumberNationalFormatEnum = {}));
/**
 * Representation of original phone carrier information like network code, name, country, network type
 */
var InvalidPhoneNumberOriginalCarrierEnum;
(function (InvalidPhoneNumberOriginalCarrierEnum) {
    InvalidPhoneNumberOriginalCarrierEnum["Null"] = "null";
})(InvalidPhoneNumberOriginalCarrierEnum = exports.InvalidPhoneNumberOriginalCarrierEnum || (exports.InvalidPhoneNumberOriginalCarrierEnum = {}));
var InvalidPhoneNumberValidEnum;
(function (InvalidPhoneNumberValidEnum) {
    InvalidPhoneNumberValidEnum["False"] = "false";
})(InvalidPhoneNumberValidEnum = exports.InvalidPhoneNumberValidEnum || (exports.InvalidPhoneNumberValidEnum = {}));
var InvalidPhoneNumber = /** @class */ (function (_super) {
    __extends(InvalidPhoneNumber, _super);
    function InvalidPhoneNumber() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "current_carrier" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "currentCarrier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "international_format" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "internationalFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iso_country" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "isoCountry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iso_country_2" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "isoCountry2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "national_format" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "nationalFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "original_carrier" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "originalCarrier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "valid" }),
        __metadata("design:type", String)
    ], InvalidPhoneNumber.prototype, "valid", void 0);
    return InvalidPhoneNumber;
}(utils_1.SpeakeasyBase));
exports.InvalidPhoneNumber = InvalidPhoneNumber;
