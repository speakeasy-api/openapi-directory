<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateNetworkNetflowRequestBody
{
    /**
     * The IPv4 address of the NetFlow collector.
     * 
     * @var ?string $collectorIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('collectorIp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $collectorIp = null;
    
    /**
     * The port that the NetFlow collector will be listening on.
     * 
     * @var ?int $collectorPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('collectorPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $collectorPort = null;
    
    /**
     * The port that the Encrypted Traffic Analytics collector will be listening on.
     * 
     * @var ?int $etaDstPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('etaDstPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $etaDstPort = null;
    
    /**
     * Boolean indicating whether Encrypted Traffic Analytics is enabled (true) or disabled (false).
     * 
     * @var ?bool $etaEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('etaEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $etaEnabled = null;
    
    /**
     * Boolean indicating whether NetFlow traffic reporting is enabled (true) or disabled (false).
     * 
     * @var ?bool $reportingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportingEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reportingEnabled = null;
    
	public function __construct()
	{
		$this->collectorIp = null;
		$this->collectorPort = null;
		$this->etaDstPort = null;
		$this->etaEnabled = null;
		$this->reportingEnabled = null;
	}
}
