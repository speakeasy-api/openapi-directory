/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IoTJobAbortCriteria - &lt;p&gt;Contains criteria that define when and how to cancel a job.&lt;/p&gt; &lt;p&gt;The deployment stops if the following conditions are true:&lt;/p&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;The number of things that receive the deployment exceeds the &lt;code&gt;minNumberOfExecutedThings&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The percentage of failures with type &lt;code&gt;failureType&lt;/code&gt; exceeds the &lt;code&gt;thresholdPercentage&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ol&gt;
 */
public class IoTJobAbortCriteria {
    @JsonProperty("action")
    public IoTJobAbortActionEnum action;

    public IoTJobAbortCriteria withAction(IoTJobAbortActionEnum action) {
        this.action = action;
        return this;
    }
    
    @JsonProperty("failureType")
    public IoTJobExecutionFailureTypeEnum failureType;

    public IoTJobAbortCriteria withFailureType(IoTJobExecutionFailureTypeEnum failureType) {
        this.failureType = failureType;
        return this;
    }
    
    @JsonProperty("minNumberOfExecutedThings")
    public Long minNumberOfExecutedThings;

    public IoTJobAbortCriteria withMinNumberOfExecutedThings(Long minNumberOfExecutedThings) {
        this.minNumberOfExecutedThings = minNumberOfExecutedThings;
        return this;
    }
    
    @JsonProperty("thresholdPercentage")
    public Double thresholdPercentage;

    public IoTJobAbortCriteria withThresholdPercentage(Double thresholdPercentage) {
        this.thresholdPercentage = thresholdPercentage;
        return this;
    }
    
    public IoTJobAbortCriteria(@JsonProperty("action") IoTJobAbortActionEnum action, @JsonProperty("failureType") IoTJobExecutionFailureTypeEnum failureType, @JsonProperty("minNumberOfExecutedThings") Long minNumberOfExecutedThings, @JsonProperty("thresholdPercentage") Double thresholdPercentage) {
        this.action = action;
        this.failureType = failureType;
        this.minNumberOfExecutedThings = minNumberOfExecutedThings;
        this.thresholdPercentage = thresholdPercentage;
  }
}
