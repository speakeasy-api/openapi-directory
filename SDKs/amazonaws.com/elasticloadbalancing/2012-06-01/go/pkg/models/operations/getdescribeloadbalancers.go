// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeLoadBalancersActionEnum
type GETDescribeLoadBalancersActionEnum string

const (
	GETDescribeLoadBalancersActionEnumDescribeLoadBalancers GETDescribeLoadBalancersActionEnum = "DescribeLoadBalancers"
)

func (e *GETDescribeLoadBalancersActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeLoadBalancers":
		*e = GETDescribeLoadBalancersActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoadBalancersActionEnum: %s", s)
	}
}

// GETDescribeLoadBalancersVersionEnum
type GETDescribeLoadBalancersVersionEnum string

const (
	GETDescribeLoadBalancersVersionEnumTwoThousandAndTwelve0601 GETDescribeLoadBalancersVersionEnum = "2012-06-01"
)

func (e *GETDescribeLoadBalancersVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-06-01":
		*e = GETDescribeLoadBalancersVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeLoadBalancersVersionEnum: %s", s)
	}
}

type GETDescribeLoadBalancersQueryParams struct {
	Action GETDescribeLoadBalancersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The names of the load balancers.
	LoadBalancerNames []string `queryParam:"style=form,explode=true,name=LoadBalancerNames"`
	// The marker for the next set of results. (You received this marker from a previous call.)
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// The maximum number of results to return with this call (a number from 1 to 400). The default is 400.
	PageSize *int64                              `queryParam:"style=form,explode=true,name=PageSize"`
	Version  GETDescribeLoadBalancersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDescribeLoadBalancersHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeLoadBalancersRequest struct {
	QueryParams GETDescribeLoadBalancersQueryParams
	Headers     GETDescribeLoadBalancersHeaders
}

type GETDescribeLoadBalancersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
