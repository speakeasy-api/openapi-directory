/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateConversationScopedWebhookCreateConversationScopedWebhookRequest {
    /**
     * The list of events, firing webhook event for this Conversation.
     */
    @SpeakeasyMetadata("form:name=Configuration.Filters")
    public String[] configurationFilters;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withConfigurationFilters(String[] configurationFilters) {
        this.configurationFilters = configurationFilters;
        return this;
    }
    
    /**
     * The studio flow SID, where the webhook should be sent to.
     */
    @SpeakeasyMetadata("form:name=Configuration.FlowSid")
    public String configurationFlowSid;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withConfigurationFlowSid(String configurationFlowSid) {
        this.configurationFlowSid = configurationFlowSid;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=Configuration.Method")
    public org.openapis.openapi.models.shared.ConversationScopedWebhookEnumMethodEnum configurationMethod;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withConfigurationMethod(org.openapis.openapi.models.shared.ConversationScopedWebhookEnumMethodEnum configurationMethod) {
        this.configurationMethod = configurationMethod;
        return this;
    }
    
    /**
     * The message index for which and it's successors the webhook will be replayed. Not set by default
     */
    @SpeakeasyMetadata("form:name=Configuration.ReplayAfter")
    public Long configurationReplayAfter;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withConfigurationReplayAfter(Long configurationReplayAfter) {
        this.configurationReplayAfter = configurationReplayAfter;
        return this;
    }
    
    /**
     * The list of keywords, firing webhook event for this Conversation.
     */
    @SpeakeasyMetadata("form:name=Configuration.Triggers")
    public String[] configurationTriggers;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withConfigurationTriggers(String[] configurationTriggers) {
        this.configurationTriggers = configurationTriggers;
        return this;
    }
    
    /**
     * The absolute url the webhook request should be sent to.
     */
    @SpeakeasyMetadata("form:name=Configuration.Url")
    public String configurationUrl;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withConfigurationUrl(String configurationUrl) {
        this.configurationUrl = configurationUrl;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=Target")
    public org.openapis.openapi.models.shared.ConversationScopedWebhookEnumTargetEnum target;

    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest withTarget(org.openapis.openapi.models.shared.ConversationScopedWebhookEnumTargetEnum target) {
        this.target = target;
        return this;
    }
    
    public CreateConversationScopedWebhookCreateConversationScopedWebhookRequest(@JsonProperty("Target") org.openapis.openapi.models.shared.ConversationScopedWebhookEnumTargetEnum target) {
        this.target = target;
  }
}
