/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetOrganizationDevicesStatusesRequest {
    /**
     * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endingBefore")
    public String endingBefore;
    public GetOrganizationDevicesStatusesRequest withEndingBefore(String endingBefore) {
        this.endingBefore = endingBefore;
        return this;
    }
    
    /**
     * Optional parameter to filter devices by models.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=models")
    public String[] models;
    public GetOrganizationDevicesStatusesRequest withModels(String[] models) {
        this.models = models;
        return this;
    }
    
    /**
     * Optional parameter to filter devices by network ids.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=networkIds")
    public String[] networkIds;
    public GetOrganizationDevicesStatusesRequest withNetworkIds(String[] networkIds) {
        this.networkIds = networkIds;
        return this;
    }
    
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=organizationId")
    public String organizationId;
    public GetOrganizationDevicesStatusesRequest withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=perPage")
    public Long perPage;
    public GetOrganizationDevicesStatusesRequest withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * An optional parameter to filter device statuses by product type. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and sensor.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=productTypes")
    public GetOrganizationDevicesStatusesProductTypesEnum[] productTypes;
    public GetOrganizationDevicesStatusesRequest withProductTypes(GetOrganizationDevicesStatusesProductTypesEnum[] productTypes) {
        this.productTypes = productTypes;
        return this;
    }
    
    /**
     * Optional parameter to filter devices by serials.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=serials")
    public String[] serials;
    public GetOrganizationDevicesStatusesRequest withSerials(String[] serials) {
        this.serials = serials;
        return this;
    }
    
    /**
     * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startingAfter")
    public String startingAfter;
    public GetOrganizationDevicesStatusesRequest withStartingAfter(String startingAfter) {
        this.startingAfter = startingAfter;
        return this;
    }
    
    /**
     * Optional parameter to filter devices by statuses. Valid statuses are ["online", "alerting", "offline", "dormant"].
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=statuses")
    public GetOrganizationDevicesStatusesStatusesEnum[] statuses;
    public GetOrganizationDevicesStatusesRequest withStatuses(GetOrganizationDevicesStatusesStatusesEnum[] statuses) {
        this.statuses = statuses;
        return this;
    }
    
    /**
     * An optional parameter to filter devices by tags. The filtering is case-sensitive. If tags are included, 'tagsFilterType' should also be included (see below).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=tags")
    public String[] tags;
    public GetOrganizationDevicesStatusesRequest withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * An optional parameter of value 'withAnyTags' or 'withAllTags' to indicate whether to return devices which contain ANY or ALL of the included tags. If no type is included, 'withAnyTags' will be selected.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=tagsFilterType")
    public GetOrganizationDevicesStatusesTagsFilterTypeEnum tagsFilterType;
    public GetOrganizationDevicesStatusesRequest withTagsFilterType(GetOrganizationDevicesStatusesTagsFilterTypeEnum tagsFilterType) {
        this.tagsFilterType = tagsFilterType;
        return this;
    }
    
}
