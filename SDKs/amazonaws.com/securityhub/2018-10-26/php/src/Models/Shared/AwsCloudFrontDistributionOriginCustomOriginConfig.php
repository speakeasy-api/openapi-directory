<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AwsCloudFrontDistributionOriginCustomOriginConfig - A custom origin. A custom origin is any origin that is not an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">configured with static website hosting</a> is a custom origin. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AwsCloudFrontDistributionOriginCustomOriginConfig
{
	#[\JMS\Serializer\Annotation\SerializedName('HttpPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $httpPort = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('HttpsPort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $httpsPort = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OriginKeepaliveTimeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $originKeepaliveTimeout = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OriginProtocolPolicy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originProtocolPolicy = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OriginReadTimeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $originReadTimeout = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OriginSslProtocols')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AwsCloudFrontDistributionOriginSslProtocols')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AwsCloudFrontDistributionOriginSslProtocols $originSslProtocols = null;
    
	public function __construct()
	{
		$this->httpPort = null;
		$this->httpsPort = null;
		$this->originKeepaliveTimeout = null;
		$this->originProtocolPolicy = null;
		$this->originReadTimeout = null;
		$this->originSslProtocols = null;
	}
}
