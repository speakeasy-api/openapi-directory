/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Channel } from "./channel";
import { GeocodingSummary } from "./geocodingsummary";
import { SimpleAddressType } from "./simpleaddresstype";
import { Expose, Type } from "class-transformer";

/**
 * Information about a person holding an elected office.
 */
export class Official extends SpeakeasyBase {
  /**
   * Addresses at which to contact the official.
   */
  @SpeakeasyMetadata({ elemType: SimpleAddressType })
  @Expose({ name: "address" })
  @Type(() => SimpleAddressType)
  address?: SimpleAddressType[];

  /**
   * A list of known (social) media channels for this official.
   */
  @SpeakeasyMetadata({ elemType: Channel })
  @Expose({ name: "channels" })
  @Type(() => Channel)
  channels?: Channel[];

  /**
   * The direct email addresses for the official.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emails" })
  emails?: string[];

  /**
   * Detailed summary about the official's address's geocoding
   */
  @SpeakeasyMetadata({ elemType: GeocodingSummary })
  @Expose({ name: "geocodingSummaries" })
  @Type(() => GeocodingSummary)
  geocodingSummaries?: GeocodingSummary[];

  /**
   * The official's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The full name of the party the official belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "party" })
  party?: string;

  /**
   * The official's public contact phone numbers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phones" })
  phones?: string[];

  /**
   * A URL for a photo of the official.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * The official's public website URLs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urls" })
  urls?: string[];
}
