<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PendingTransactionPendingTransactionSourceInboundFundsHold - A Inbound Funds Hold object. This field will be present in the JSON response if and only if `category` is equal to `inbound_funds_hold`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PendingTransactionPendingTransactionSourceInboundFundsHold
{
    /**
     * The held amount in the minor unit of the account's currency. For dollars, for example, this is cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * When the hold will be released automatically. Certain conditions may cause it to be released before this time.
     * 
     * @var \DateTime $automaticallyReleasesAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('automatically_releases_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $automaticallyReleasesAt;
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the hold was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the hold's currency.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHoldCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHoldCurrencyEnum>')]
    public PendingTransactionPendingTransactionSourceInboundFundsHoldCurrencyEnum $currency;
    
    /**
     * The ID of the Transaction for which funds were held.
     * 
     * @var string $heldTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('held_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $heldTransactionId;
    
    /**
     * The ID of the Pending Transaction representing the held funds.
     * 
     * @var string $pendingTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('pending_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $pendingTransactionId;
    
    /**
     * When the hold was released (if it has been released).
     * 
     * @var \DateTime $releasedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('released_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $releasedAt;
    
    /**
     * The status of the hold.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHoldStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHoldStatusEnum>')]
    public PendingTransactionPendingTransactionSourceInboundFundsHoldStatusEnum $status;
    
	public function __construct()
	{
		$this->amount = 0;
		$this->automaticallyReleasesAt = new \DateTime();
		$this->createdAt = new \DateTime();
		$this->currency = \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHoldCurrencyEnum::CAD;
		$this->heldTransactionId = "";
		$this->pendingTransactionId = "";
		$this->releasedAt = new \DateTime();
		$this->status = \OpenAPI\OpenAPI\Models\Shared\PendingTransactionPendingTransactionSourceInboundFundsHoldStatusEnum::HELD;
	}
}
