// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyPrivateDNSNameOptionsActionEnum
type GETModifyPrivateDNSNameOptionsActionEnum string

const (
	GETModifyPrivateDNSNameOptionsActionEnumModifyPrivateDNSNameOptions GETModifyPrivateDNSNameOptionsActionEnum = "ModifyPrivateDnsNameOptions"
)

func (e GETModifyPrivateDNSNameOptionsActionEnum) ToPointer() *GETModifyPrivateDNSNameOptionsActionEnum {
	return &e
}

func (e *GETModifyPrivateDNSNameOptionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyPrivateDnsNameOptions":
		*e = GETModifyPrivateDNSNameOptionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyPrivateDNSNameOptionsActionEnum: %v", v)
	}
}

// GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum - The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID.
type GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum string

const (
	GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnumIPName       GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum = "ip-name"
	GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnumResourceName GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum = "resource-name"
)

func (e GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum) ToPointer() *GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum {
	return &e
}

func (e *GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ip-name":
		fallthrough
	case "resource-name":
		*e = GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum: %v", v)
	}
}

// GETModifyPrivateDNSNameOptionsVersionEnum
type GETModifyPrivateDNSNameOptionsVersionEnum string

const (
	GETModifyPrivateDNSNameOptionsVersionEnumTwoThousandAndSixteen1115 GETModifyPrivateDNSNameOptionsVersionEnum = "2016-11-15"
)

func (e GETModifyPrivateDNSNameOptionsVersionEnum) ToPointer() *GETModifyPrivateDNSNameOptionsVersionEnum {
	return &e
}

func (e *GETModifyPrivateDNSNameOptionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETModifyPrivateDNSNameOptionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyPrivateDNSNameOptionsVersionEnum: %v", v)
	}
}

type GETModifyPrivateDNSNameOptionsRequest struct {
	Action GETModifyPrivateDNSNameOptionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.
	EnableResourceNameDNSAAAARecord *bool `queryParam:"style=form,explode=true,name=EnableResourceNameDnsAAAARecord"`
	// Indicates whether to respond to DNS queries for instance hostnames with DNS A records.
	EnableResourceNameDNSARecord *bool `queryParam:"style=form,explode=true,name=EnableResourceNameDnsARecord"`
	// The ID of the instance.
	InstanceID string `queryParam:"style=form,explode=true,name=InstanceId"`
	// The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID.
	PrivateDNSHostnameType *GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum `queryParam:"style=form,explode=true,name=PrivateDnsHostnameType"`
	Version                GETModifyPrivateDNSNameOptionsVersionEnum                 `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm          *string                                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyPrivateDNSNameOptionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
