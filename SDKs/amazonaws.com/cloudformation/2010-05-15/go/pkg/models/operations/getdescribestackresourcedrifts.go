// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETDescribeStackResourceDriftsActionEnum
type GETDescribeStackResourceDriftsActionEnum string

const (
	GETDescribeStackResourceDriftsActionEnumDescribeStackResourceDrifts GETDescribeStackResourceDriftsActionEnum = "DescribeStackResourceDrifts"
)

func (e GETDescribeStackResourceDriftsActionEnum) ToPointer() *GETDescribeStackResourceDriftsActionEnum {
	return &e
}

func (e *GETDescribeStackResourceDriftsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeStackResourceDrifts":
		*e = GETDescribeStackResourceDriftsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeStackResourceDriftsActionEnum: %v", v)
	}
}

// GETDescribeStackResourceDriftsVersionEnum
type GETDescribeStackResourceDriftsVersionEnum string

const (
	GETDescribeStackResourceDriftsVersionEnumTwoThousandAndTen0515 GETDescribeStackResourceDriftsVersionEnum = "2010-05-15"
)

func (e GETDescribeStackResourceDriftsVersionEnum) ToPointer() *GETDescribeStackResourceDriftsVersionEnum {
	return &e
}

func (e *GETDescribeStackResourceDriftsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-15":
		*e = GETDescribeStackResourceDriftsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeStackResourceDriftsVersionEnum: %v", v)
	}
}

type GETDescribeStackResourceDriftsRequest struct {
	Action GETDescribeStackResourceDriftsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a <code>NextToken</code> value that you can assign to the <code>NextToken</code> request parameter to get the next set of results.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// A string that identifies the next page of stack resource drift results.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The name of the stack for which you want drift information.
	StackName string `queryParam:"style=form,explode=true,name=StackName"`
	// <p>The resource drift status values to use as filters for the resource drift results returned.</p> <ul> <li> <p> <code>DELETED</code>: The resource differs from its expected template configuration in that the resource has been deleted.</p> </li> <li> <p> <code>MODIFIED</code>: One or more resource properties differ from their expected template values.</p> </li> <li> <p> <code>IN_SYNC</code>: The resource's actual configuration matches its expected template configuration.</p> </li> <li> <p> <code>NOT_CHECKED</code>: CloudFormation doesn't currently return this value.</p> </li> </ul>
	StackResourceDriftStatusFilters []shared.StackResourceDriftStatusEnum     `queryParam:"style=form,explode=true,name=StackResourceDriftStatusFilters"`
	Version                         GETDescribeStackResourceDriftsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                   *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeStackResourceDriftsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
