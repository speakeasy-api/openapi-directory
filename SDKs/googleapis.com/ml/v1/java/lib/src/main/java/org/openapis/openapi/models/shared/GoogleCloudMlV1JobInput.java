/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudMlV1JobInput - Represents a training or prediction job.
 */
public class GoogleCloudMlV1JobInput {
    /**
     * Output only. When the job was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public GoogleCloudMlV1JobInput withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. When the job processing was completed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public GoogleCloudMlV1JobInput withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Output only. The details of a failure or a cancellation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;

    public GoogleCloudMlV1JobInput withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleCloudMlV1JobInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Required. The user-specified id of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobId")
    public String jobId;

    public GoogleCloudMlV1JobInput withJobId(String jobId) {
        this.jobId = jobId;
        return this;
    }
    
    /**
     * Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GoogleCloudMlV1JobInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Represents input parameters for a prediction job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predictionInput")
    public GoogleCloudMlV1PredictionInput predictionInput;

    public GoogleCloudMlV1JobInput withPredictionInput(GoogleCloudMlV1PredictionInput predictionInput) {
        this.predictionInput = predictionInput;
        return this;
    }
    
    /**
     * Represents results of a prediction job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predictionOutput")
    public GoogleCloudMlV1PredictionOutput predictionOutput;

    public GoogleCloudMlV1JobInput withPredictionOutput(GoogleCloudMlV1PredictionOutput predictionOutput) {
        this.predictionOutput = predictionOutput;
        return this;
    }
    
    /**
     * Output only. When the job processing was started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public GoogleCloudMlV1JobInput withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Output only. The detailed state of a job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public GoogleCloudMlV1JobStateEnum state;

    public GoogleCloudMlV1JobInput withState(GoogleCloudMlV1JobStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Represents input parameters for a training job. When using the gcloud command to submit your training job, you can specify the input parameters as command-line arguments and/or in a YAML configuration file referenced from the --config command-line argument. For details, see the guide to [submitting a training job](/ai-platform/training/docs/training-jobs).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingInput")
    public GoogleCloudMlV1TrainingInput trainingInput;

    public GoogleCloudMlV1JobInput withTrainingInput(GoogleCloudMlV1TrainingInput trainingInput) {
        this.trainingInput = trainingInput;
        return this;
    }
    
    /**
     * Represents results of a training job. Output only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingOutput")
    public GoogleCloudMlV1TrainingOutputInput trainingOutput;

    public GoogleCloudMlV1JobInput withTrainingOutput(GoogleCloudMlV1TrainingOutputInput trainingOutput) {
        this.trainingOutput = trainingOutput;
        return this;
    }
    
    public GoogleCloudMlV1JobInput(){}
}
