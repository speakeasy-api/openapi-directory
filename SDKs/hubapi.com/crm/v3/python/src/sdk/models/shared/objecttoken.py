"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ObjectTokenDataTypeEnum(str, Enum):
    BOOLEAN = 'BOOLEAN'
    CURRENCY = 'CURRENCY'
    DATE = 'DATE'
    DATETIME = 'DATETIME'
    EMAIL = 'EMAIL'
    LINK = 'LINK'
    NUMERIC = 'NUMERIC'
    STRING = 'STRING'
    STATUS = 'STATUS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ObjectToken:
    
    value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})  
    data_type: Optional[ObjectTokenDataTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataType'), 'exclude': lambda f: f is None }})  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    