"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import shareattributes as shared_shareattributes
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FairsharePolicy:
    r"""The fair share policy for a scheduling policy."""
    
    compute_reservation: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeReservation'), 'exclude': lambda f: f is None }})  
    share_decay_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareDecaySeconds'), 'exclude': lambda f: f is None }})  
    share_distribution: Optional[list[shared_shareattributes.ShareAttributes]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareDistribution'), 'exclude': lambda f: f is None }})  
    