"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import trialminutes as shared_trialminutes
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountSettings:
    r"""A container for account-level settings in AWS Device Farm."""
    
    aws_account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('awsAccountNumber'), 'exclude': lambda f: f is None }})  
    default_job_timeout_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultJobTimeoutMinutes'), 'exclude': lambda f: f is None }})  
    max_job_timeout_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxJobTimeoutMinutes'), 'exclude': lambda f: f is None }})  
    max_slots: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxSlots'), 'exclude': lambda f: f is None }})  
    skip_app_resign: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skipAppResign'), 'exclude': lambda f: f is None }})  
    trial_minutes: Optional[shared_trialminutes.TrialMinutes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trialMinutes'), 'exclude': lambda f: f is None }})  
    unmetered_devices: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unmeteredDevices'), 'exclude': lambda f: f is None }})  
    unmetered_remote_access_devices: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unmeteredRemoteAccessDevices'), 'exclude': lambda f: f is None }})  
    