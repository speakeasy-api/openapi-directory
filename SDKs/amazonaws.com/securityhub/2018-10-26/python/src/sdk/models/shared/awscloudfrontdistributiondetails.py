"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awscloudfrontdistributioncachebehaviors as shared_awscloudfrontdistributioncachebehaviors
from ..shared import awscloudfrontdistributiondefaultcachebehavior as shared_awscloudfrontdistributiondefaultcachebehavior
from ..shared import awscloudfrontdistributionlogging as shared_awscloudfrontdistributionlogging
from ..shared import awscloudfrontdistributionorigingroups as shared_awscloudfrontdistributionorigingroups
from ..shared import awscloudfrontdistributionorigins as shared_awscloudfrontdistributionorigins
from ..shared import awscloudfrontdistributionviewercertificate as shared_awscloudfrontdistributionviewercertificate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsCloudFrontDistributionDetails:
    r"""A CloudFront distribution configuration."""
    
    cache_behaviors: Optional[shared_awscloudfrontdistributioncachebehaviors.AwsCloudFrontDistributionCacheBehaviors] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CacheBehaviors'), 'exclude': lambda f: f is None }})  
    default_cache_behavior: Optional[shared_awscloudfrontdistributiondefaultcachebehavior.AwsCloudFrontDistributionDefaultCacheBehavior] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultCacheBehavior'), 'exclude': lambda f: f is None }})  
    default_root_object: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultRootObject'), 'exclude': lambda f: f is None }})  
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainName'), 'exclude': lambda f: f is None }})  
    e_tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ETag'), 'exclude': lambda f: f is None }})  
    last_modified_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedTime'), 'exclude': lambda f: f is None }})  
    logging: Optional[shared_awscloudfrontdistributionlogging.AwsCloudFrontDistributionLogging] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Logging'), 'exclude': lambda f: f is None }})  
    origin_groups: Optional[shared_awscloudfrontdistributionorigingroups.AwsCloudFrontDistributionOriginGroups] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OriginGroups'), 'exclude': lambda f: f is None }})  
    origins: Optional[shared_awscloudfrontdistributionorigins.AwsCloudFrontDistributionOrigins] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Origins'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    viewer_certificate: Optional[shared_awscloudfrontdistributionviewercertificate.AwsCloudFrontDistributionViewerCertificate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ViewerCertificate'), 'exclude': lambda f: f is None }})  
    web_acl_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WebAclId'), 'exclude': lambda f: f is None }})  
    