"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import linuxsubscriptionsdiscovery_enum as shared_linuxsubscriptionsdiscovery_enum
from ..shared import linuxsubscriptionsdiscoverysettings as shared_linuxsubscriptionsdiscoverysettings
from ..shared import status_enum as shared_status_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetServiceSettingsResponse:
    r"""Success"""
    
    home_regions: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRegions'), 'exclude': lambda f: f is None }})  
    linux_subscriptions_discovery: Optional[shared_linuxsubscriptionsdiscovery_enum.LinuxSubscriptionsDiscoveryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LinuxSubscriptionsDiscovery'), 'exclude': lambda f: f is None }})  
    linux_subscriptions_discovery_settings: Optional[shared_linuxsubscriptionsdiscoverysettings.LinuxSubscriptionsDiscoverySettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LinuxSubscriptionsDiscoverySettings'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_status_enum.StatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    status_message: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StatusMessage'), 'exclude': lambda f: f is None }})  
    