// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomerFieldsStatusEnum - Status of the Customer
type CustomerFieldsStatusEnum string

const (
	CustomerFieldsStatusEnumApproved CustomerFieldsStatusEnum = "approved"
	CustomerFieldsStatusEnumPending  CustomerFieldsStatusEnum = "pending"
	CustomerFieldsStatusEnumDisabled CustomerFieldsStatusEnum = "disabled"
)

func (e CustomerFieldsStatusEnum) ToPointer() *CustomerFieldsStatusEnum {
	return &e
}

func (e *CustomerFieldsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "approved":
		fallthrough
	case "pending":
		fallthrough
	case "disabled":
		*e = CustomerFieldsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerFieldsStatusEnum: %v", v)
	}
}

type CustomerFields struct {
	BillingAddress           *BillingAddress           `json:"billing_address,omitempty"`
	CustomerAdditionalFields []CustomerAdditionalField `json:"customer_additional_fields,omitempty"`
	CustomerCategories       []CustomerCategory        `json:"customer_categories,omitempty"`
	// Email of the Customer
	Email *string `json:"email,omitempty"`
	// Unique identifier of the Customer
	ID *int `json:"id,omitempty"`
	// Name of the Customer
	Name *string `json:"name,omitempty"`
	// Phone of the Customer
	Phone           *string          `json:"phone,omitempty"`
	ShippingAddress *ShippingAddress `json:"shipping_address,omitempty"`
	// Status of the Customer
	Status *CustomerFieldsStatusEnum `json:"status,omitempty"`
	// Surname of the Customer
	Surname *string `json:"surname,omitempty"`
}
