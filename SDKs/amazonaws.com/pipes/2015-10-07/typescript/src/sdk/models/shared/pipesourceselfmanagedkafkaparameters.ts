/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SelfManagedKafkaAccessConfigurationCredentials } from "./selfmanagedkafkaaccessconfigurationcredentials";
import { SelfManagedKafkaAccessConfigurationVpc } from "./selfmanagedkafkaaccessconfigurationvpc";
import { SelfManagedKafkaStartPositionEnum } from "./selfmanagedkafkastartpositionenum";
import { Expose, Type } from "class-transformer";

/**
 * The parameters for using a self-managed Apache Kafka stream as a source.
 */
export class PipeSourceSelfManagedKafkaParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AdditionalBootstrapServers" })
  additionalBootstrapServers?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "BatchSize" })
  batchSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ConsumerGroupID" })
  consumerGroupID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Credentials" })
  @Type(() => SelfManagedKafkaAccessConfigurationCredentials)
  credentials?: SelfManagedKafkaAccessConfigurationCredentials;

  @SpeakeasyMetadata()
  @Expose({ name: "MaximumBatchingWindowInSeconds" })
  maximumBatchingWindowInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerRootCaCertificate" })
  serverRootCaCertificate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartingPosition" })
  startingPosition?: SelfManagedKafkaStartPositionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TopicName" })
  topicName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Vpc" })
  @Type(() => SelfManagedKafkaAccessConfigurationVpc)
  vpc?: SelfManagedKafkaAccessConfigurationVpc;
}
