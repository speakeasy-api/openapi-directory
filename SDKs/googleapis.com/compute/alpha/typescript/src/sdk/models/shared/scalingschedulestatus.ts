/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * [Output Only] The current state of a scaling schedule.
 */
export enum ScalingScheduleStatusStateEnum {
  Active = "ACTIVE",
  Disabled = "DISABLED",
  Obsolete = "OBSOLETE",
  Ready = "READY",
}

export class ScalingScheduleStatus extends SpeakeasyBase {
  /**
   * [Output Only] The last time the scaling schedule became active. Note: this is a timestamp when a schedule actually became active, not when it was planned to do so. The timestamp is in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastStartTime" })
  lastStartTime?: string;

  /**
   * [Output Only] The next time the scaling schedule is to become active. Note: this is a timestamp when a schedule is planned to run, but the actual time might be slightly different. The timestamp is in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextStartTime" })
  nextStartTime?: string;

  /**
   * [Output Only] The current state of a scaling schedule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ScalingScheduleStatusStateEnum;
}
