// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteDBClusterActionEnum
type GETDeleteDBClusterActionEnum string

const (
	GETDeleteDBClusterActionEnumDeleteDbCluster GETDeleteDBClusterActionEnum = "DeleteDBCluster"
)

func (e GETDeleteDBClusterActionEnum) ToPointer() *GETDeleteDBClusterActionEnum {
	return &e
}

func (e *GETDeleteDBClusterActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteDBCluster":
		*e = GETDeleteDBClusterActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDBClusterActionEnum: %v", v)
	}
}

// GETDeleteDBClusterVersionEnum
type GETDeleteDBClusterVersionEnum string

const (
	GETDeleteDBClusterVersionEnumTwoThousandAndFourteen1031 GETDeleteDBClusterVersionEnum = "2014-10-31"
)

func (e GETDeleteDBClusterVersionEnum) ToPointer() *GETDeleteDBClusterVersionEnum {
	return &e
}

func (e *GETDeleteDBClusterVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETDeleteDBClusterVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDBClusterVersionEnum: %v", v)
	}
}

type GETDeleteDBClusterRequest struct {
	Action GETDeleteDBClusterActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The DB cluster identifier for the DB cluster to be deleted. This parameter isn't case-sensitive.</p> <p>Constraints:</p> <ul> <li> <p>Must match an existing DBClusterIdentifier.</p> </li> </ul>
	DBClusterIdentifier string `queryParam:"style=form,explode=true,name=DBClusterIdentifier"`
	// <p> The DB cluster snapshot identifier of the new DB cluster snapshot created when <code>SkipFinalSnapshot</code> is set to <code>false</code>.</p> <note> <p> Specifying this parameter and also setting the <code>SkipFinalShapshot</code> parameter to true results in an error.</p> </note> <p>Constraints:</p> <ul> <li> <p>Must be 1 to 255 letters, numbers, or hyphens.</p> </li> <li> <p>First character must be a letter</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens</p> </li> </ul>
	FinalDBSnapshotIdentifier *string `queryParam:"style=form,explode=true,name=FinalDBSnapshotIdentifier"`
	// <p> Determines whether a final DB cluster snapshot is created before the DB cluster is deleted. If <code>true</code> is specified, no DB cluster snapshot is created. If <code>false</code> is specified, a DB cluster snapshot is created before the DB cluster is deleted.</p> <note> <p>You must specify a <code>FinalDBSnapshotIdentifier</code> parameter if <code>SkipFinalSnapshot</code> is <code>false</code>.</p> </note> <p>Default: <code>false</code> </p>
	SkipFinalSnapshot *bool                         `queryParam:"style=form,explode=true,name=SkipFinalSnapshot"`
	Version           GETDeleteDBClusterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteDBClusterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
