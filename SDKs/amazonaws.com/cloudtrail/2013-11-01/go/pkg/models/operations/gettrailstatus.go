// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetTrailStatusXAmzTargetEnum
type GetTrailStatusXAmzTargetEnum string

const (
	GetTrailStatusXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101GetTrailStatus GetTrailStatusXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetTrailStatus"
)

func (e GetTrailStatusXAmzTargetEnum) ToPointer() *GetTrailStatusXAmzTargetEnum {
	return &e
}

func (e *GetTrailStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetTrailStatus":
		*e = GetTrailStatusXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTrailStatusXAmzTargetEnum: %v", v)
	}
}

type GetTrailStatusRequest struct {
	GetTrailStatusRequest shared.GetTrailStatusRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            GetTrailStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetTrailStatusResponse struct {
	// CloudTrailARNInvalidException
	CloudTrailARNInvalidException interface{}
	ContentType                   string
	// Success
	GetTrailStatusResponse *shared.GetTrailStatusResponse
	// InvalidTrailNameException
	InvalidTrailNameException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// TrailNotFoundException
	TrailNotFoundException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
