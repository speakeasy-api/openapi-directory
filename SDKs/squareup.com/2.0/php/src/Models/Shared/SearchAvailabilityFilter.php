<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SearchAvailabilityFilter - A query filter to search for availabilities by.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SearchAvailabilityFilter
{
    /**
     * The query expression to search for availabilities for an existing booking by matching the specified `booking_id` value.
     * 
     * This is commonly used to reschedule an appointment.
     * If this expression is specified, the `location_id` and `segment_filters` expressions are not allowed.
     * 
     * @var ?string $bookingId
     */
	#[\JMS\Serializer\Annotation\SerializedName('booking_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bookingId = null;
    
    /**
     * The query expression to search for availabilities matching the specified seller location IDs.
     * 
     * This query expression is not applicable when `booking_id` is present.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * The list of segment filters to apply. A query with `n` segment filters returns availabilities with `n` segments per
     * 
     * availability. It is not applicable when `booking_id` is present.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SegmentFilter> $segmentFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('segment_filters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SegmentFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $segmentFilters = null;
    
    /**
     * Represents a generic time range. The start and end values are
     * 
     * represented in RFC 3339 format. Time ranges are customized to be
     * inclusive or exclusive based on the needs of a particular endpoint.
     * Refer to the relevant endpoint-specific documentation to determine
     * how time ranges are handled.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TimeRange $startAtRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_at_range')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TimeRange')]
    public TimeRange $startAtRange;
    
	public function __construct()
	{
		$this->bookingId = null;
		$this->locationId = null;
		$this->segmentFilters = null;
		$this->startAtRange = new \OpenAPI\OpenAPI\Models\Shared\TimeRange();
	}
}
