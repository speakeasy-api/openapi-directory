// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JobMonitoringRetryStatusEnum - Monitoring retry status of the job (default is NotRetried).
type JobMonitoringRetryStatusEnum string

const (
	JobMonitoringRetryStatusEnumRequestReceived JobMonitoringRetryStatusEnum = "RequestReceived"
	JobMonitoringRetryStatusEnumScheduleSuccess JobMonitoringRetryStatusEnum = "ScheduleSuccess"
	JobMonitoringRetryStatusEnumScheduleFailure JobMonitoringRetryStatusEnum = "ScheduleFailure"
	JobMonitoringRetryStatusEnumNotRetried      JobMonitoringRetryStatusEnum = "NotRetried"
)

func (e JobMonitoringRetryStatusEnum) ToPointer() *JobMonitoringRetryStatusEnum {
	return &e
}

func (e *JobMonitoringRetryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestReceived":
		fallthrough
	case "ScheduleSuccess":
		fallthrough
	case "ScheduleFailure":
		fallthrough
	case "NotRetried":
		*e = JobMonitoringRetryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobMonitoringRetryStatusEnum: %v", v)
	}
}
