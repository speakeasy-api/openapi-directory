// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConsoleServerPortTemplateTypeLabelEnum string

const (
	ConsoleServerPortTemplateTypeLabelEnumDe9       ConsoleServerPortTemplateTypeLabelEnum = "DE-9"
	ConsoleServerPortTemplateTypeLabelEnumDb25      ConsoleServerPortTemplateTypeLabelEnum = "DB-25"
	ConsoleServerPortTemplateTypeLabelEnumRj11      ConsoleServerPortTemplateTypeLabelEnum = "RJ-11"
	ConsoleServerPortTemplateTypeLabelEnumRj12      ConsoleServerPortTemplateTypeLabelEnum = "RJ-12"
	ConsoleServerPortTemplateTypeLabelEnumRj45      ConsoleServerPortTemplateTypeLabelEnum = "RJ-45"
	ConsoleServerPortTemplateTypeLabelEnumUsbTypeA  ConsoleServerPortTemplateTypeLabelEnum = "USB Type A"
	ConsoleServerPortTemplateTypeLabelEnumUsbTypeB  ConsoleServerPortTemplateTypeLabelEnum = "USB Type B"
	ConsoleServerPortTemplateTypeLabelEnumUsbTypeC  ConsoleServerPortTemplateTypeLabelEnum = "USB Type C"
	ConsoleServerPortTemplateTypeLabelEnumUsbMiniA  ConsoleServerPortTemplateTypeLabelEnum = "USB Mini A"
	ConsoleServerPortTemplateTypeLabelEnumUsbMiniB  ConsoleServerPortTemplateTypeLabelEnum = "USB Mini B"
	ConsoleServerPortTemplateTypeLabelEnumUsbMicroA ConsoleServerPortTemplateTypeLabelEnum = "USB Micro A"
	ConsoleServerPortTemplateTypeLabelEnumUsbMicroB ConsoleServerPortTemplateTypeLabelEnum = "USB Micro B"
	ConsoleServerPortTemplateTypeLabelEnumOther     ConsoleServerPortTemplateTypeLabelEnum = "Other"
)

func (e *ConsoleServerPortTemplateTypeLabelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DE-9":
		fallthrough
	case "DB-25":
		fallthrough
	case "RJ-11":
		fallthrough
	case "RJ-12":
		fallthrough
	case "RJ-45":
		fallthrough
	case "USB Type A":
		fallthrough
	case "USB Type B":
		fallthrough
	case "USB Type C":
		fallthrough
	case "USB Mini A":
		fallthrough
	case "USB Mini B":
		fallthrough
	case "USB Micro A":
		fallthrough
	case "USB Micro B":
		fallthrough
	case "Other":
		*e = ConsoleServerPortTemplateTypeLabelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsoleServerPortTemplateTypeLabelEnum: %s", s)
	}
}

type ConsoleServerPortTemplateTypeValueEnum string

const (
	ConsoleServerPortTemplateTypeValueEnumDe9       ConsoleServerPortTemplateTypeValueEnum = "de-9"
	ConsoleServerPortTemplateTypeValueEnumDb25      ConsoleServerPortTemplateTypeValueEnum = "db-25"
	ConsoleServerPortTemplateTypeValueEnumRj11      ConsoleServerPortTemplateTypeValueEnum = "rj-11"
	ConsoleServerPortTemplateTypeValueEnumRj12      ConsoleServerPortTemplateTypeValueEnum = "rj-12"
	ConsoleServerPortTemplateTypeValueEnumRj45      ConsoleServerPortTemplateTypeValueEnum = "rj-45"
	ConsoleServerPortTemplateTypeValueEnumUsbA      ConsoleServerPortTemplateTypeValueEnum = "usb-a"
	ConsoleServerPortTemplateTypeValueEnumUsbB      ConsoleServerPortTemplateTypeValueEnum = "usb-b"
	ConsoleServerPortTemplateTypeValueEnumUsbC      ConsoleServerPortTemplateTypeValueEnum = "usb-c"
	ConsoleServerPortTemplateTypeValueEnumUsbMiniA  ConsoleServerPortTemplateTypeValueEnum = "usb-mini-a"
	ConsoleServerPortTemplateTypeValueEnumUsbMiniB  ConsoleServerPortTemplateTypeValueEnum = "usb-mini-b"
	ConsoleServerPortTemplateTypeValueEnumUsbMicroA ConsoleServerPortTemplateTypeValueEnum = "usb-micro-a"
	ConsoleServerPortTemplateTypeValueEnumUsbMicroB ConsoleServerPortTemplateTypeValueEnum = "usb-micro-b"
	ConsoleServerPortTemplateTypeValueEnumOther     ConsoleServerPortTemplateTypeValueEnum = "other"
)

func (e *ConsoleServerPortTemplateTypeValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "de-9":
		fallthrough
	case "db-25":
		fallthrough
	case "rj-11":
		fallthrough
	case "rj-12":
		fallthrough
	case "rj-45":
		fallthrough
	case "usb-a":
		fallthrough
	case "usb-b":
		fallthrough
	case "usb-c":
		fallthrough
	case "usb-mini-a":
		fallthrough
	case "usb-mini-b":
		fallthrough
	case "usb-micro-a":
		fallthrough
	case "usb-micro-b":
		fallthrough
	case "other":
		*e = ConsoleServerPortTemplateTypeValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsoleServerPortTemplateTypeValueEnum: %s", s)
	}
}

type ConsoleServerPortTemplateType struct {
	Label ConsoleServerPortTemplateTypeLabelEnum `json:"label"`
	Value ConsoleServerPortTemplateTypeValueEnum `json:"value"`
}

type ConsoleServerPortTemplate struct {
	DeviceType NestedDeviceType               `json:"device_type"`
	ID         *int64                         `json:"id,omitempty"`
	Name       string                         `json:"name"`
	Type       *ConsoleServerPortTemplateType `json:"type,omitempty"`
}
