// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListClustersQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListClustersXAmzTargetEnum
type ListClustersXAmzTargetEnum string

const (
	ListClustersXAmzTargetEnumAwsieSnowballJobManagementServiceListClusters ListClustersXAmzTargetEnum = "AWSIESnowballJobManagementService.ListClusters"
)

func (e *ListClustersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSIESnowballJobManagementService.ListClusters":
		*e = ListClustersXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListClustersXAmzTargetEnum: %s", s)
	}
}

type ListClustersHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListClustersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListClustersRequest struct {
	QueryParams ListClustersQueryParams
	Headers     ListClustersHeaders
	Request     shared.ListClustersRequest `request:"mediaType=application/json"`
}

type ListClustersResponse struct {
	ContentType string
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListClustersResult *shared.ListClustersResult
	StatusCode         int
	RawResponse        *http.Response
}
