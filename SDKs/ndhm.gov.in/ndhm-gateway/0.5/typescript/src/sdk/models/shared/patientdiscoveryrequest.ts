/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Identifier } from "./identifier";
import { PatientGenderEnum } from "./patientgenderenum";
import { Expose, Transform, Type } from "class-transformer";

export class PatientDiscoveryRequestPatient extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender: PatientGenderEnum;

  /**
   * Identifier of patient at consent manager
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: Identifier })
  @Expose({ name: "unverifiedIdentifiers" })
  @Type(() => Identifier)
  unverifiedIdentifiers?: Identifier[];

  @SpeakeasyMetadata({ elemType: Identifier })
  @Expose({ name: "verifiedIdentifiers" })
  @Type(() => Identifier)
  verifiedIdentifiers: Identifier[];

  @SpeakeasyMetadata()
  @Expose({ name: "yearOfBirth" })
  yearOfBirth: number;
}

export class PatientDiscoveryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  @Type(() => PatientDiscoveryRequestPatient)
  patient: PatientDiscoveryRequestPatient;

  /**
   * a nonce, unique for each HTTP request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  /**
   * correlation-Id for patient discovery and subsequent care context linkage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId: string;
}
