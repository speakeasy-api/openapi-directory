/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PullsRemoveRequestedReviewersRequestBody extends SpeakeasyBase {
  /**
   * An array of user `login`s that will be removed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewers" })
  reviewers: string[];

  /**
   * An array of team `slug`s that will be removed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "team_reviewers" })
  teamReviewers?: string[];
}

export class PullsRemoveRequestedReviewersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PullsRemoveRequestedReviewersRequestBody;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The number that identifies the pull request.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pull_number",
  })
  pullNumber: number;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class PullsRemoveRequestedReviewersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  pullRequestSimple?: shared.PullRequestSimple;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
