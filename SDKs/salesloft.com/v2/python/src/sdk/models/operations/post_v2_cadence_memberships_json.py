"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PostV2CadenceMembershipsJSONRequest:
    
    cadence_id: int = dataclasses.field(metadata={'query_param': { 'field_name': 'cadence_id', 'style': 'form', 'explode': True }})
    r"""ID of the cadence to create a cadence membership for"""  
    person_id: int = dataclasses.field(metadata={'query_param': { 'field_name': 'person_id', 'style': 'form', 'explode': True }})
    r"""ID of the person to create a cadence membership for"""  
    step_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'step_id', 'style': 'form', 'explode': True }})
    r"""ID of the step on which the person should start the cadence. Start on first step is the default behavior without this parameter."""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'user_id', 'style': 'form', 'explode': True }})
    r"""ID of the user to create a cadence membership for. The associated cadence must be owned by the user, or it must be a team cadence"""  
    

@dataclasses.dataclass
class PostV2CadenceMembershipsJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    