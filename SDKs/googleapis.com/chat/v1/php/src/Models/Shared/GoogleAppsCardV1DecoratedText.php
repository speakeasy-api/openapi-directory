<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAppsCardV1DecoratedText - A widget that displays text with optional decorations such as a label above or below the text, an icon in front of the text, a selection widget or a button after the text.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAppsCardV1DecoratedText
{
    /**
     * The text that appears below `text`. Always truncates.
     * 
     * @var ?string $bottomLabel
     */
	#[\JMS\Serializer\Annotation\SerializedName('bottomLabel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bottomLabel = null;
    
    /**
     * A text, icon, or text + icon button that users can click. To make an image a clickable button, specify an Image (not an ImageComponent) and set an `onClick` action.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Button $button
     */
	#[\JMS\Serializer\Annotation\SerializedName('button')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Button')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Button $button = null;
    
    /**
     * An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Icon $endIcon
     */
	#[\JMS\Serializer\Annotation\SerializedName('endIcon')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Icon')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Icon $endIcon = null;
    
    /**
     * An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Icon $icon
     */
	#[\JMS\Serializer\Annotation\SerializedName('icon')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Icon')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Icon $icon = null;
    
    /**
     * Represents how to respond when users click an interactive element on a card, such as a button.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1OnClick $onClick
     */
	#[\JMS\Serializer\Annotation\SerializedName('onClick')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1OnClick')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1OnClick $onClick = null;
    
    /**
     * An icon displayed in a widget on a card. Supports [built-in](https://developers.google.com/chat/api/guides/message-formats/cards#builtinicons) and [custom](https://developers.google.com/chat/api/guides/message-formats/cards#customicons) icons.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Icon $startIcon
     */
	#[\JMS\Serializer\Annotation\SerializedName('startIcon')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Icon')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Icon $startIcon = null;
    
    /**
     * Either a toggle-style switch or a checkbox inside a `decoratedText` widget. Only supported on the `decoratedText` widget.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1SwitchControl $switchControl
     */
	#[\JMS\Serializer\Annotation\SerializedName('switchControl')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1SwitchControl')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1SwitchControl $switchControl = null;
    
    /**
     * Required. The primary text. Supports simple formatting. For more information about formatting text, see Formatting text in Google Chat apps and Formatting text in Google Workspace Add-ons.
     * 
     * @var ?string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $text = null;
    
    /**
     * The text that appears above `text`. Always truncates.
     * 
     * @var ?string $topLabel
     */
	#[\JMS\Serializer\Annotation\SerializedName('topLabel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $topLabel = null;
    
    /**
     * The wrap text setting. If `true`, the text wraps and displays on multiple lines. Otherwise, the text is truncated. Only applies to `text`, not `topLabel` and `bottomLabel`.
     * 
     * @var ?bool $wrapText
     */
	#[\JMS\Serializer\Annotation\SerializedName('wrapText')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $wrapText = null;
    
	public function __construct()
	{
		$this->bottomLabel = null;
		$this->button = null;
		$this->endIcon = null;
		$this->icon = null;
		$this->onClick = null;
		$this->startIcon = null;
		$this->switchControl = null;
		$this->text = null;
		$this->topLabel = null;
		$this->wrapText = null;
	}
}
