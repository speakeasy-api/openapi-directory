/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapacityProviderStrategyItem } from "./capacityproviderstrategyitem";
import { DeploymentConfiguration } from "./deploymentconfiguration";
import { LoadBalancer } from "./loadbalancer";
import { NetworkConfiguration } from "./networkconfiguration";
import { PlacementConstraint } from "./placementconstraint";
import { PlacementStrategy } from "./placementstrategy";
import { PropagateTagsEnum } from "./propagatetagsenum";
import { ServiceConnectConfiguration } from "./serviceconnectconfiguration";
import { ServiceRegistry } from "./serviceregistry";
import { Expose, Type } from "class-transformer";

export class UpdateServiceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CapacityProviderStrategyItem })
  @Expose({ name: "capacityProviderStrategy" })
  @Type(() => CapacityProviderStrategyItem)
  capacityProviderStrategy?: CapacityProviderStrategyItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "cluster" })
  cluster?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentConfiguration" })
  @Type(() => DeploymentConfiguration)
  deploymentConfiguration?: DeploymentConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "desiredCount" })
  desiredCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "enableECSManagedTags" })
  enableECSManagedTags?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enableExecuteCommand" })
  enableExecuteCommand?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "forceNewDeployment" })
  forceNewDeployment?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "healthCheckGracePeriodSeconds" })
  healthCheckGracePeriodSeconds?: number;

  @SpeakeasyMetadata({ elemType: LoadBalancer })
  @Expose({ name: "loadBalancers" })
  @Type(() => LoadBalancer)
  loadBalancers?: LoadBalancer[];

  @SpeakeasyMetadata()
  @Expose({ name: "networkConfiguration" })
  @Type(() => NetworkConfiguration)
  networkConfiguration?: NetworkConfiguration;

  @SpeakeasyMetadata({ elemType: PlacementConstraint })
  @Expose({ name: "placementConstraints" })
  @Type(() => PlacementConstraint)
  placementConstraints?: PlacementConstraint[];

  @SpeakeasyMetadata({ elemType: PlacementStrategy })
  @Expose({ name: "placementStrategy" })
  @Type(() => PlacementStrategy)
  placementStrategy?: PlacementStrategy[];

  @SpeakeasyMetadata()
  @Expose({ name: "platformVersion" })
  platformVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "propagateTags" })
  propagateTags?: PropagateTagsEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceConnectConfiguration" })
  @Type(() => ServiceConnectConfiguration)
  serviceConnectConfiguration?: ServiceConnectConfiguration;

  @SpeakeasyMetadata({ elemType: ServiceRegistry })
  @Expose({ name: "serviceRegistries" })
  @Type(() => ServiceRegistry)
  serviceRegistries?: ServiceRegistry[];

  @SpeakeasyMetadata()
  @Expose({ name: "taskDefinition" })
  taskDefinition?: string;
}
