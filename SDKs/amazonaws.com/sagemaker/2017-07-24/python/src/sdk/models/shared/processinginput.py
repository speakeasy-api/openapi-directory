"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasetdefinition as shared_datasetdefinition
from ..shared import processings3input as shared_processings3input
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProcessingInput:
    r"""The inputs for a processing job. The processing input must specify exactly one of either <code>S3Input</code> or <code>DatasetDefinition</code> types."""
    
    input_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputName') }})  
    app_managed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AppManaged'), 'exclude': lambda f: f is None }})  
    dataset_definition: Optional[shared_datasetdefinition.DatasetDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatasetDefinition'), 'exclude': lambda f: f is None }})  
    s3_input: Optional[shared_processings3input.ProcessingS3Input] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3Input'), 'exclude': lambda f: f is None }})  
    