"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import triggereventtype_enum as shared_triggereventtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TriggerConfig:
    r"""Information about notification triggers for the deployment group."""
    
    trigger_events: Optional[list[shared_triggereventtype_enum.TriggerEventTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerEvents'), 'exclude': lambda f: f is None }})  
    trigger_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerName'), 'exclude': lambda f: f is None }})  
    trigger_target_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerTargetArn'), 'exclude': lambda f: f is None }})  
    