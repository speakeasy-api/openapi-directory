/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * What kind of authentication was used
 */
export enum GetAuthinfo200ApplicationJSONAuthMethodEnum {
  UserSession = "user_session",
  Internal = "internal",
  StaticApiKey = "static_api_key",
}

export class GetAuthinfo200ApplicationJSONPermissions extends SpeakeasyBase {
  /**
   * Whether or not this session can mutate resources
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mutate" })
  mutate?: boolean;
}

/**
 * A JSON object containing the authentication information
 */
export class GetAuthinfo200ApplicationJSON extends SpeakeasyBase {
  /**
   * Reference to the static API key (/api/keys) used to authenticate this request (when auth_method=static_api_key)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_key_id" })
  apiKeyId?: string;

  /**
   * What kind of authentication was used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auth_method" })
  authMethod?: GetAuthinfo200ApplicationJSONAuthMethodEnum;

  /**
   * Whether or not you are authenticated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authenticated" })
  authenticated?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => GetAuthinfo200ApplicationJSONPermissions)
  permissions?: GetAuthinfo200ApplicationJSONPermissions;

  /**
   * Url to the individual resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Reference to the user account (/api/users) used to authenticate this request (when auth_method=user_session)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;
}

export class GetAuthinfoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A JSON object containing the authentication information
   */
  @SpeakeasyMetadata()
  getAuthinfo200ApplicationJSONObject?: GetAuthinfo200ApplicationJSON;
}
