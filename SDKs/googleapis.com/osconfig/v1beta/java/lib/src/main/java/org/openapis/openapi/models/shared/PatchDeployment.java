/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PatchDeployment - Patch deployments are configurations that individual patch jobs use to complete a patch. These configurations include instance filter, package repository settings, and a schedule. For more information about creating and managing patch deployments, see [Scheduling patch jobs](https://cloud.google.com/compute/docs/os-patch-management/schedule-patch-jobs).
 */
public class PatchDeployment {
    /**
     * Output only. Time the patch deployment was created. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public PatchDeployment withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PatchDeployment withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional. Duration of the patch. After the duration ends, the patch times out.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;
    public PatchDeployment withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceFilter")
    public PatchInstanceFilter instanceFilter;
    public PatchDeployment withInstanceFilter(PatchInstanceFilter instanceFilter) {
        this.instanceFilter = instanceFilter;
        return this;
    }
    
    /**
     * Output only. The last time a patch job was started by this deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastExecuteTime")
    public String lastExecuteTime;
    public PatchDeployment withLastExecuteTime(String lastExecuteTime) {
        this.lastExecuteTime = lastExecuteTime;
        return this;
    }
    
    /**
     * Unique name for the patch deployment resource in a project. The patch deployment name is in the form: `projects/{project_id}/patchDeployments/{patch_deployment_id}`. This field is ignored when you create a new patch deployment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PatchDeployment withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Sets the time for a one time patch deployment. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oneTimeSchedule")
    public OneTimeSchedule oneTimeSchedule;
    public PatchDeployment withOneTimeSchedule(OneTimeSchedule oneTimeSchedule) {
        this.oneTimeSchedule = oneTimeSchedule;
        return this;
    }
    
    /**
     * Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patchConfig")
    public PatchConfig patchConfig;
    public PatchDeployment withPatchConfig(PatchConfig patchConfig) {
        this.patchConfig = patchConfig;
        return this;
    }
    
    /**
     * Sets the time for recurring patch deployments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recurringSchedule")
    public RecurringSchedule recurringSchedule;
    public PatchDeployment withRecurringSchedule(RecurringSchedule recurringSchedule) {
        this.recurringSchedule = recurringSchedule;
        return this;
    }
    
    /**
     * Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rollout")
    public PatchRollout rollout;
    public PatchDeployment withRollout(PatchRollout rollout) {
        this.rollout = rollout;
        return this;
    }
    
    /**
     * Output only. Current state of the patch deployment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PatchDeploymentStateEnum state;
    public PatchDeployment withState(PatchDeploymentStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Time the patch deployment was last updated. Timestamp is in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public PatchDeployment withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
