"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_v2010_account_incoming_phone_number as shared_api_v2010_account_incoming_phone_number
from ..shared import incoming_phone_number_enum_emergency_status_enum as shared_incoming_phone_number_enum_emergency_status_enum
from ..shared import incoming_phone_number_enum_voice_receive_mode_enum as shared_incoming_phone_number_enum_voice_receive_mode_enum
from enum import Enum
from typing import Optional

UPDATE_INCOMING_PHONE_NUMBER_SERVERS = [
	"https://api.twilio.com",
]


@dataclasses.dataclass
class UpdateIncomingPhoneNumberSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestSmsFallbackMethodEnum(str, Enum):
    r"""The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestSmsMethodEnum(str, Enum):
    r"""The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestStatusCallbackMethodEnum(str, Enum):
    r"""The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestVoiceFallbackMethodEnum(str, Enum):
    r"""The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestVoiceMethodEnum(str, Enum):
    r"""The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclasses.dataclass
class UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequest:
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AccountSid' }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers)."""  
    address_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'AddressSid' }})
    r"""The SID of the Address resource we should associate with the phone number. Some regions require addresses to meet local regulations."""  
    api_version: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ApiVersion' }})
    r"""The API version to use for incoming calls made to the phone number. The default is `2010-04-01`."""  
    bundle_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'BundleSid' }})
    r"""The SID of the Bundle resource that you associate with the phone number. Some regions require a Bundle to meet local Regulations."""  
    emergency_address_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'EmergencyAddressSid' }})
    r"""The SID of the emergency address configuration to use for emergency calling from this phone number."""  
    emergency_status: Optional[shared_incoming_phone_number_enum_emergency_status_enum.IncomingPhoneNumberEnumEmergencyStatusEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'EmergencyStatus' }})  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you created to describe this phone number. It can be up to 64 characters long. By default, this is a formatted version of the phone number."""  
    identity_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'IdentitySid' }})
    r"""The SID of the Identity resource that we should associate with the phone number. Some regions require an identity to meet local regulations."""  
    sms_application_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SmsApplicationSid' }})
    r"""The SID of the application that should handle SMS messages sent to the number. If an `sms_application_sid` is present, we ignore all of the `sms_*_url` urls and use those set on the application."""  
    sms_fallback_method: Optional[UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestSmsFallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SmsFallbackMethod' }})
    r"""The HTTP method that we should use to call `sms_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`."""  
    sms_fallback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SmsFallbackUrl' }})
    r"""The URL that we should call when an error occurs while requesting or executing the TwiML defined by `sms_url`."""  
    sms_method: Optional[UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestSmsMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SmsMethod' }})
    r"""The HTTP method that we should use to call `sms_url`. Can be: `GET` or `POST` and defaults to `POST`."""  
    sms_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'SmsUrl' }})
    r"""The URL we should call when the phone number receives an incoming SMS message."""  
    status_callback: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'StatusCallback' }})
    r"""The URL we should call using the `status_callback_method` to send status information to your application."""  
    status_callback_method: Optional[UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestStatusCallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'StatusCallbackMethod' }})
    r"""The HTTP method we should use to call `status_callback`. Can be: `GET` or `POST` and defaults to `POST`."""  
    trunk_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'TrunkSid' }})
    r"""The SID of the Trunk we should use to handle phone calls to the phone number. If a `trunk_sid` is present, we ignore all of the voice urls and voice applications and use only those set on the Trunk. Setting a `trunk_sid` will automatically delete your `voice_application_sid` and vice versa."""  
    voice_application_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceApplicationSid' }})
    r"""The SID of the application we should use to handle phone calls to the phone number. If a `voice_application_sid` is present, we ignore all of the voice urls and use only those set on the application. Setting a `voice_application_sid` will automatically delete your `trunk_sid` and vice versa."""  
    voice_caller_id_lookup: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceCallerIdLookup' }})
    r"""Whether to lookup the caller's name from the CNAM database and post it to your app. Can be: `true` or `false` and defaults to `false`."""  
    voice_fallback_method: Optional[UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestVoiceFallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceFallbackMethod' }})
    r"""The HTTP method that we should use to call `voice_fallback_url`. Can be: `GET` or `POST` and defaults to `POST`."""  
    voice_fallback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceFallbackUrl' }})
    r"""The URL that we should call when an error occurs retrieving or executing the TwiML requested by `url`."""  
    voice_method: Optional[UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequestVoiceMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceMethod' }})
    r"""The HTTP method that we should use to call `voice_url`. Can be: `GET` or `POST` and defaults to `POST`."""  
    voice_receive_mode: Optional[shared_incoming_phone_number_enum_voice_receive_mode_enum.IncomingPhoneNumberEnumVoiceReceiveModeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceReceiveMode' }})  
    voice_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'VoiceUrl' }})
    r"""The URL that we should call to answer a call to the phone number. The `voice_url` will not be called if a `voice_application_sid` or a `trunk_sid` is set."""  
    

@dataclasses.dataclass
class UpdateIncomingPhoneNumberRequest:
    
    account_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AccountSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the IncomingPhoneNumber resource to update.  For more information, see [Exchanging Numbers Between Subaccounts](https://www.twilio.com/docs/iam/api/subaccounts#exchanging-numbers)."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the IncomingPhoneNumber resource to update."""  
    request_body: Optional[UpdateIncomingPhoneNumberUpdateIncomingPhoneNumberRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateIncomingPhoneNumberResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_v2010_account_incoming_phone_number: Optional[shared_api_v2010_account_incoming_phone_number.APIV2010AccountIncomingPhoneNumber] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    