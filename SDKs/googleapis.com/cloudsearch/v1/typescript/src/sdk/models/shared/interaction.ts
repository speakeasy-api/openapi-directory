/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Principal } from "./principal";
import { Expose, Type } from "class-transformer";

export enum InteractionTypeEnum {
  Unspecified = "UNSPECIFIED",
  View = "VIEW",
  Edit = "EDIT",
}

/**
 * Represents an interaction between a user and an item.
 */
export class Interaction extends SpeakeasyBase {
  /**
   * The time when the user acted on the item. If multiple actions of the same type exist for a single user, only the most recent action is recorded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interactionTime" })
  interactionTime?: string;

  /**
   * Reference to a user, group, or domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "principal" })
  @Type(() => Principal)
  principal?: Principal;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: InteractionTypeEnum;
}
