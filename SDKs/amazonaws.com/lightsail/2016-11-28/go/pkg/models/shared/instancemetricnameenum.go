// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceMetricNameEnum string

const (
	InstanceMetricNameEnumCPUUtilization            InstanceMetricNameEnum = "CPUUtilization"
	InstanceMetricNameEnumNetworkIn                 InstanceMetricNameEnum = "NetworkIn"
	InstanceMetricNameEnumNetworkOut                InstanceMetricNameEnum = "NetworkOut"
	InstanceMetricNameEnumStatusCheckFailed         InstanceMetricNameEnum = "StatusCheckFailed"
	InstanceMetricNameEnumStatusCheckFailedInstance InstanceMetricNameEnum = "StatusCheckFailed_Instance"
	InstanceMetricNameEnumStatusCheckFailedSystem   InstanceMetricNameEnum = "StatusCheckFailed_System"
	InstanceMetricNameEnumBurstCapacityTime         InstanceMetricNameEnum = "BurstCapacityTime"
	InstanceMetricNameEnumBurstCapacityPercentage   InstanceMetricNameEnum = "BurstCapacityPercentage"
	InstanceMetricNameEnumMetadataNoToken           InstanceMetricNameEnum = "MetadataNoToken"
)

func (e InstanceMetricNameEnum) ToPointer() *InstanceMetricNameEnum {
	return &e
}

func (e *InstanceMetricNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CPUUtilization":
		fallthrough
	case "NetworkIn":
		fallthrough
	case "NetworkOut":
		fallthrough
	case "StatusCheckFailed":
		fallthrough
	case "StatusCheckFailed_Instance":
		fallthrough
	case "StatusCheckFailed_System":
		fallthrough
	case "BurstCapacityTime":
		fallthrough
	case "BurstCapacityPercentage":
		fallthrough
	case "MetadataNoToken":
		*e = InstanceMetricNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceMetricNameEnum: %v", v)
	}
}
