"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsTestAudienceResponse = exports.AnalyticsTestAudience200ApplicationJSON = exports.AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum = exports.AnalyticsTestAudienceDefaultApplicationJSON = exports.AnalyticsTestAudienceDefaultApplicationJSONError = exports.AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum = exports.AnalyticsTestAudienceRequest = exports.AnalyticsTestAudienceRequestBody = exports.AnalyticsTestAudienceRequestBodyCustomPropertiesEnum = exports.AnalyticsTestAudienceSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var AnalyticsTestAudienceSecurity = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudienceSecurity, _super);
    function AnalyticsTestAudienceSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceSecurity.prototype, "apiToken", void 0);
    return AnalyticsTestAudienceSecurity;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudienceSecurity = AnalyticsTestAudienceSecurity;
var AnalyticsTestAudienceRequestBodyCustomPropertiesEnum;
(function (AnalyticsTestAudienceRequestBodyCustomPropertiesEnum) {
    AnalyticsTestAudienceRequestBodyCustomPropertiesEnum["String"] = "string";
    AnalyticsTestAudienceRequestBodyCustomPropertiesEnum["Number"] = "number";
    AnalyticsTestAudienceRequestBodyCustomPropertiesEnum["Boolean"] = "boolean";
    AnalyticsTestAudienceRequestBodyCustomPropertiesEnum["DateTime"] = "date_time";
})(AnalyticsTestAudienceRequestBodyCustomPropertiesEnum = exports.AnalyticsTestAudienceRequestBodyCustomPropertiesEnum || (exports.AnalyticsTestAudienceRequestBodyCustomPropertiesEnum = {}));
/**
 * Audience definition.
 */
var AnalyticsTestAudienceRequestBody = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudienceRequestBody, _super);
    function AnalyticsTestAudienceRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_properties" }),
        __metadata("design:type", Object)
    ], AnalyticsTestAudienceRequestBody.prototype, "customProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "definition" }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceRequestBody.prototype, "definition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceRequestBody.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], AnalyticsTestAudienceRequestBody.prototype, "enabled", void 0);
    return AnalyticsTestAudienceRequestBody;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudienceRequestBody = AnalyticsTestAudienceRequestBody;
var AnalyticsTestAudienceRequest = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudienceRequest, _super);
    function AnalyticsTestAudienceRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", AnalyticsTestAudienceRequestBody)
    ], AnalyticsTestAudienceRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceRequest.prototype, "ownerName", void 0);
    return AnalyticsTestAudienceRequest;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudienceRequest = AnalyticsTestAudienceRequest;
var AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum;
(function (AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum) {
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["BadRequest"] = "BadRequest";
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["Conflict"] = "Conflict";
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["NotAcceptable"] = "NotAcceptable";
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["NotFound"] = "NotFound";
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["InternalServerError"] = "InternalServerError";
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["Unauthorized"] = "Unauthorized";
    AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum["TooManyRequests"] = "TooManyRequests";
})(AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum = exports.AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum || (exports.AnalyticsTestAudienceDefaultApplicationJSONErrorCodeEnum = {}));
var AnalyticsTestAudienceDefaultApplicationJSONError = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudienceDefaultApplicationJSONError, _super);
    function AnalyticsTestAudienceDefaultApplicationJSONError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceDefaultApplicationJSONError.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceDefaultApplicationJSONError.prototype, "message", void 0);
    return AnalyticsTestAudienceDefaultApplicationJSONError;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudienceDefaultApplicationJSONError = AnalyticsTestAudienceDefaultApplicationJSONError;
/**
 * Error code with reason
 */
var AnalyticsTestAudienceDefaultApplicationJSON = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudienceDefaultApplicationJSON, _super);
    function AnalyticsTestAudienceDefaultApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return AnalyticsTestAudienceDefaultApplicationJSONError; }),
        __metadata("design:type", AnalyticsTestAudienceDefaultApplicationJSONError)
    ], AnalyticsTestAudienceDefaultApplicationJSON.prototype, "error", void 0);
    return AnalyticsTestAudienceDefaultApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudienceDefaultApplicationJSON = AnalyticsTestAudienceDefaultApplicationJSON;
var AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum;
(function (AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum) {
    AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum["String"] = "string";
    AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum["Number"] = "number";
    AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum["Boolean"] = "boolean";
    AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum["DateTime"] = "date_time";
})(AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum = exports.AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum || (exports.AnalyticsTestAudience200ApplicationJSONCustomPropertiesEnum = {}));
/**
 * Audience test result.
 */
var AnalyticsTestAudience200ApplicationJSON = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudience200ApplicationJSON, _super);
    function AnalyticsTestAudience200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_properties" }),
        __metadata("design:type", Object)
    ], AnalyticsTestAudience200ApplicationJSON.prototype, "customProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "definition" }),
        __metadata("design:type", String)
    ], AnalyticsTestAudience200ApplicationJSON.prototype, "definition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "estimated_count" }),
        __metadata("design:type", Number)
    ], AnalyticsTestAudience200ApplicationJSON.prototype, "estimatedCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "estimated_total_count" }),
        __metadata("design:type", Number)
    ], AnalyticsTestAudience200ApplicationJSON.prototype, "estimatedTotalCount", void 0);
    return AnalyticsTestAudience200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudience200ApplicationJSON = AnalyticsTestAudience200ApplicationJSON;
var AnalyticsTestAudienceResponse = /** @class */ (function (_super) {
    __extends(AnalyticsTestAudienceResponse, _super);
    function AnalyticsTestAudienceResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AnalyticsTestAudience200ApplicationJSON)
    ], AnalyticsTestAudienceResponse.prototype, "analyticsTestAudience200ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AnalyticsTestAudienceDefaultApplicationJSON)
    ], AnalyticsTestAudienceResponse.prototype, "analyticsTestAudienceDefaultApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AnalyticsTestAudienceResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AnalyticsTestAudienceResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AnalyticsTestAudienceResponse.prototype, "rawResponse", void 0);
    return AnalyticsTestAudienceResponse;
}(utils_1.SpeakeasyBase));
exports.AnalyticsTestAudienceResponse = AnalyticsTestAudienceResponse;
