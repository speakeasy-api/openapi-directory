// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum - The medium on which the data is stored. Acceptable values today is only MEMORY or none. When none, the default will currently be backed by memory but could change over time. +optional
type GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum string

const (
	GoogleCloudRunV2EmptyDirVolumeSourceMediumEnumMediumUnspecified GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum = "MEDIUM_UNSPECIFIED"
	GoogleCloudRunV2EmptyDirVolumeSourceMediumEnumMemory            GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum = "MEMORY"
)

func (e GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum) ToPointer() *GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum {
	return &e
}

func (e *GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MEDIUM_UNSPECIFIED":
		fallthrough
	case "MEMORY":
		*e = GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum: %v", v)
	}
}

// GoogleCloudRunV2EmptyDirVolumeSource - Ephemeral storage which can be backed by real disks (HD, SSD), network storage or memory (i.e. tmpfs). For now only in memory (tmpfs) is supported. It is ephemeral in the sense that when the sandbox is taken down, the data is destroyed with it (it does not persist across sandbox runs).
type GoogleCloudRunV2EmptyDirVolumeSource struct {
	// The medium on which the data is stored. Acceptable values today is only MEMORY or none. When none, the default will currently be backed by memory but could change over time. +optional
	Medium *GoogleCloudRunV2EmptyDirVolumeSourceMediumEnum `json:"medium,omitempty"`
	// Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. This field's values are of the 'Quantity' k8s type: https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir +optional
	SizeLimit *string `json:"sizeLimit,omitempty"`
}
