/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InferenceExperimentSchedule } from "./inferenceexperimentschedule";
import { InferenceExperimentStatusEnum } from "./inferenceexperimentstatusenum";
import { InferenceExperimentTypeEnum } from "./inferenceexperimenttypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Lists a summary of properties of an inference experiment.
 */
export class InferenceExperimentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompletionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completionTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Schedule" })
  @Type(() => InferenceExperimentSchedule)
  schedule?: InferenceExperimentSchedule;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: InferenceExperimentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: InferenceExperimentTypeEnum;
}
