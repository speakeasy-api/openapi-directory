"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AbuseTicketCreateTypeEnum(str, Enum):
    r"""The type of abuse being reported."""
    A_RECORD = 'A_RECORD'
    CHILD_ABUSE = 'CHILD_ABUSE'
    CONTENT = 'CONTENT'
    FRAUD_WIRE = 'FRAUD_WIRE'
    IP_BLOCK = 'IP_BLOCK'
    MALWARE = 'MALWARE'
    NETWORK_ABUSE = 'NETWORK_ABUSE'
    PHISHING = 'PHISHING'
    SPAM = 'SPAM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AbuseTicketCreate:
    r"""The endpoint which allows the Reporter to create a new abuse ticket"""
    
    info: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('info'), 'exclude': lambda f: f is None }})
    r"""Additional information that may assist the abuse investigator. ie: server logs or email headers/body for SPAM"""  
    info_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('infoUrl'), 'exclude': lambda f: f is None }})
    r"""Reporter URL if housing additional information that may assist the abuse investigator"""  
    intentional: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intentional'), 'exclude': lambda f: f is None }})
    r"""Do you believe this is intentional abuse by the domain holder?"""  
    proxy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proxy'), 'exclude': lambda f: f is None }})
    r"""The Proxy information required to view the abuse being reported. ie: Specific IP used, or country of IP viewing from"""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""The URL or IP where live abuse content is located at. ie: https://www.example.com/bad_stuff/bad.php"""  
    target: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target'), 'exclude': lambda f: f is None }})
    r"""The brand/company the abuse is targeting. ie: brand name/bank name"""  
    type: Optional[AbuseTicketCreateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of abuse being reported."""  
    