// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigurationItemStatusEnum string

const (
	ConfigurationItemStatusEnumOk                         ConfigurationItemStatusEnum = "OK"
	ConfigurationItemStatusEnumResourceDiscovered         ConfigurationItemStatusEnum = "ResourceDiscovered"
	ConfigurationItemStatusEnumResourceNotRecorded        ConfigurationItemStatusEnum = "ResourceNotRecorded"
	ConfigurationItemStatusEnumResourceDeleted            ConfigurationItemStatusEnum = "ResourceDeleted"
	ConfigurationItemStatusEnumResourceDeletedNotRecorded ConfigurationItemStatusEnum = "ResourceDeletedNotRecorded"
)

func (e ConfigurationItemStatusEnum) ToPointer() *ConfigurationItemStatusEnum {
	return &e
}

func (e *ConfigurationItemStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		fallthrough
	case "ResourceDiscovered":
		fallthrough
	case "ResourceNotRecorded":
		fallthrough
	case "ResourceDeleted":
		fallthrough
	case "ResourceDeletedNotRecorded":
		*e = ConfigurationItemStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigurationItemStatusEnum: %v", v)
	}
}
