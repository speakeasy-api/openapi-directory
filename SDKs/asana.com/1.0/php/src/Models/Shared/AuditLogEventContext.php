<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AuditLogEventContext - The context from which this event originated.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AuditLogEventContext
{
    /**
     * The authentication method used in the context of an API request.
     * 
     * Only present if the `context_type` is `api`. Can be one of `cookie`, `oauth`, `personal_access_token`, or `service_account`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditLogEventContextApiAuthenticationMethodEnum $apiAuthenticationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_authentication_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuditLogEventContextApiAuthenticationMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventContextApiAuthenticationMethodEnum $apiAuthenticationMethod = null;
    
    /**
     * The IP address of the client that initiated the event, if applicable.
     * 
     * @var ?string $clientIpAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_ip_address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientIpAddress = null;
    
    /**
     * The type of context.
     * 
     * Can be one of `web`, `desktop`, `mobile`, `asana_support`, `asana`, `email`, or `api`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditLogEventContextContextTypeEnum $contextType
     */
	#[\JMS\Serializer\Annotation\SerializedName('context_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuditLogEventContextContextTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventContextContextTypeEnum $contextType = null;
    
    /**
     * The name of the OAuth App that initiated the event.
     * 
     * Only present if the `api_authentication_method` is `oauth`.
     * 
     * @var ?string $oauthAppName
     */
	#[\JMS\Serializer\Annotation\SerializedName('oauth_app_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oauthAppName = null;
    
    /**
     * The user agent of the client that initiated the event, if applicable.
     * 
     * @var ?string $userAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_agent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userAgent = null;
    
	public function __construct()
	{
		$this->apiAuthenticationMethod = null;
		$this->clientIpAddress = null;
		$this->contextType = null;
		$this->oauthAppName = null;
		$this->userAgent = null;
	}
}
