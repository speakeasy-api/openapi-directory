/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity - If you are playing in an activity, this is some information about it.
 * Note that we cannot guarantee any of this resembles what ends up in the PGCR in any way. They are sourced by two entirely separate systems with their own logic, and the one we source this data from should be considered non-authoritative in comparison.
 */
public class DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity {
    /**
     * If you're still in it but it "ended" (like when folks are dancing around the loot after they beat a boss), this is when the activity ended.
     */
    
    public OffsetDateTime endTime;

    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * If you have human opponents, this is the highest opposing team's score.
     */
    
    public Float highestOpposingFactionScore;

    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity withHighestOpposingFactionScore(Float highestOpposingFactionScore) {
        this.highestOpposingFactionScore = highestOpposingFactionScore;
        return this;
    }
    
    /**
     * This is how many human or poorly crafted aimbot opponents you have.
     */
    
    public Integer numberOfOpponents;

    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity withNumberOfOpponents(Integer numberOfOpponents) {
        this.numberOfOpponents = numberOfOpponents;
        return this;
    }
    
    /**
     * This is how many human or poorly crafted aimbots are on your team.
     */
    
    public Integer numberOfPlayers;

    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity withNumberOfPlayers(Integer numberOfPlayers) {
        this.numberOfPlayers = numberOfPlayers;
        return this;
    }
    
    /**
     * This is what our non-authoritative source thought the score was.
     */
    
    public Float score;

    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity withScore(Float score) {
        this.score = score;
        return this;
    }
    
    /**
     * When the activity started.
     */
    
    public OffsetDateTime startTime;

    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    public DestinyComponentsProfilesDestinyProfileTransitoryComponentCurrentActivity(){}
}
