"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awswafregionalrulegrouprulesdetails as shared_awswafregionalrulegrouprulesdetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsWafRegionalRuleGroupDetails:
    r"""Provides information about an WAF Regional rule group. The rule group is a collection of rules for inspecting and controlling web requests."""
    
    metric_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricName'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    rule_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RuleGroupId'), 'exclude': lambda f: f is None }})  
    rules: Optional[list[shared_awswafregionalrulegrouprulesdetails.AwsWafRegionalRuleGroupRulesDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rules'), 'exclude': lambda f: f is None }})  
    