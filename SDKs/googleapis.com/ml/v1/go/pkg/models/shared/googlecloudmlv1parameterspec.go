// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1ParameterSpecScaleTypeEnum - Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
type GoogleCloudMlV1ParameterSpecScaleTypeEnum string

const (
	GoogleCloudMlV1ParameterSpecScaleTypeEnumNone                GoogleCloudMlV1ParameterSpecScaleTypeEnum = "NONE"
	GoogleCloudMlV1ParameterSpecScaleTypeEnumUnitLinearScale     GoogleCloudMlV1ParameterSpecScaleTypeEnum = "UNIT_LINEAR_SCALE"
	GoogleCloudMlV1ParameterSpecScaleTypeEnumUnitLogScale        GoogleCloudMlV1ParameterSpecScaleTypeEnum = "UNIT_LOG_SCALE"
	GoogleCloudMlV1ParameterSpecScaleTypeEnumUnitReverseLogScale GoogleCloudMlV1ParameterSpecScaleTypeEnum = "UNIT_REVERSE_LOG_SCALE"
)

func (e GoogleCloudMlV1ParameterSpecScaleTypeEnum) ToPointer() *GoogleCloudMlV1ParameterSpecScaleTypeEnum {
	return &e
}

func (e *GoogleCloudMlV1ParameterSpecScaleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "UNIT_LINEAR_SCALE":
		fallthrough
	case "UNIT_LOG_SCALE":
		fallthrough
	case "UNIT_REVERSE_LOG_SCALE":
		*e = GoogleCloudMlV1ParameterSpecScaleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1ParameterSpecScaleTypeEnum: %v", v)
	}
}

// GoogleCloudMlV1ParameterSpecTypeEnum - Required. The type of the parameter.
type GoogleCloudMlV1ParameterSpecTypeEnum string

const (
	GoogleCloudMlV1ParameterSpecTypeEnumParameterTypeUnspecified GoogleCloudMlV1ParameterSpecTypeEnum = "PARAMETER_TYPE_UNSPECIFIED"
	GoogleCloudMlV1ParameterSpecTypeEnumDouble                   GoogleCloudMlV1ParameterSpecTypeEnum = "DOUBLE"
	GoogleCloudMlV1ParameterSpecTypeEnumInteger                  GoogleCloudMlV1ParameterSpecTypeEnum = "INTEGER"
	GoogleCloudMlV1ParameterSpecTypeEnumCategorical              GoogleCloudMlV1ParameterSpecTypeEnum = "CATEGORICAL"
	GoogleCloudMlV1ParameterSpecTypeEnumDiscrete                 GoogleCloudMlV1ParameterSpecTypeEnum = "DISCRETE"
)

func (e GoogleCloudMlV1ParameterSpecTypeEnum) ToPointer() *GoogleCloudMlV1ParameterSpecTypeEnum {
	return &e
}

func (e *GoogleCloudMlV1ParameterSpecTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PARAMETER_TYPE_UNSPECIFIED":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "INTEGER":
		fallthrough
	case "CATEGORICAL":
		fallthrough
	case "DISCRETE":
		*e = GoogleCloudMlV1ParameterSpecTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1ParameterSpecTypeEnum: %v", v)
	}
}

// GoogleCloudMlV1ParameterSpec - Represents a single hyperparameter to optimize.
type GoogleCloudMlV1ParameterSpec struct {
	// Required if type is `CATEGORICAL`. The list of possible categories.
	CategoricalValues []string `json:"categoricalValues,omitempty"`
	// Required if type is `DISCRETE`. A list of feasible points. The list should be in strictly increasing order. For instance, this parameter might have possible settings of 1.5, 2.5, and 4.0. This list should not contain more than 1,000 values.
	DiscreteValues []float64 `json:"discreteValues,omitempty"`
	// Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is `INTEGER`.
	MaxValue *float64 `json:"maxValue,omitempty"`
	// Required if type is `DOUBLE` or `INTEGER`. This field should be unset if type is `CATEGORICAL`. This value should be integers if type is INTEGER.
	MinValue *float64 `json:"minValue,omitempty"`
	// Required. The parameter name must be unique amongst all ParameterConfigs in a HyperparameterSpec message. E.g., "learning_rate".
	ParameterName *string `json:"parameterName,omitempty"`
	// Optional. How the parameter should be scaled to the hypercube. Leave unset for categorical parameters. Some kind of scaling is strongly recommended for real or integral parameters (e.g., `UNIT_LINEAR_SCALE`).
	ScaleType *GoogleCloudMlV1ParameterSpecScaleTypeEnum `json:"scaleType,omitempty"`
	// Required. The type of the parameter.
	Type *GoogleCloudMlV1ParameterSpecTypeEnum `json:"type,omitempty"`
}
