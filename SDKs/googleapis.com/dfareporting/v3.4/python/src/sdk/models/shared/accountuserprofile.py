"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import objectfilter as shared_objectfilter
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountUserProfileTraffickerTypeEnum(str, Enum):
    r"""Trafficker type of this user profile. This is a read-only field."""
    INTERNAL_NON_TRAFFICKER = 'INTERNAL_NON_TRAFFICKER'
    INTERNAL_TRAFFICKER = 'INTERNAL_TRAFFICKER'
    EXTERNAL_TRAFFICKER = 'EXTERNAL_TRAFFICKER'

class AccountUserProfileUserAccessTypeEnum(str, Enum):
    r"""User type of the user profile. This is a read-only field that can be left blank."""
    NORMAL_USER = 'NORMAL_USER'
    SUPER_USER = 'SUPER_USER'
    INTERNAL_ADMINISTRATOR = 'INTERNAL_ADMINISTRATOR'
    READ_ONLY_SUPER_USER = 'READ_ONLY_SUPER_USER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountUserProfile:
    r"""AccountUserProfiles contains properties of a Campaign Manager user profile. This resource is specifically for managing user profiles, whereas UserProfiles is for accessing the API."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""Account ID of the user profile. This is a read-only field that can be left blank."""  
    active: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active'), 'exclude': lambda f: f is None }})
    r"""Whether this user profile is active. This defaults to false, and must be set true on insert for the user profile to be usable."""  
    advertiser_filter: Optional[shared_objectfilter.ObjectFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserFilter'), 'exclude': lambda f: f is None }})
    r"""Object Filter."""  
    campaign_filter: Optional[shared_objectfilter.ObjectFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaignFilter'), 'exclude': lambda f: f is None }})
    r"""Object Filter."""  
    comments: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comments'), 'exclude': lambda f: f is None }})
    r"""Comments for this user profile."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Email of the user profile. The email addresss must be linked to a Google Account. This field is required on insertion and is read-only after insertion."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID of the user profile. This is a read-only, auto-generated field."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string \\"dfareporting#accountUserProfile\\"."""  
    locale: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locale'), 'exclude': lambda f: f is None }})
    r"""Locale of the user profile. This is a required field. Acceptable values are: - \\"cs\\" (Czech) - \\"de\\" (German) - \\"en\\" (English) - \\"en-GB\\" (English United Kingdom) - \\"es\\" (Spanish) - \\"fr\\" (French) - \\"it\\" (Italian) - \\"ja\\" (Japanese) - \\"ko\\" (Korean) - \\"pl\\" (Polish) - \\"pt-BR\\" (Portuguese Brazil) - \\"ru\\" (Russian) - \\"sv\\" (Swedish) - \\"tr\\" (Turkish) - \\"zh-CN\\" (Chinese Simplified) - \\"zh-TW\\" (Chinese Traditional)"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user profile. This is a required field. Must be less than 64 characters long, must be globally unique, and cannot contain whitespace or any of the following characters: \\"&;<>\\"#%,\\"."""  
    site_filter: Optional[shared_objectfilter.ObjectFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('siteFilter'), 'exclude': lambda f: f is None }})
    r"""Object Filter."""  
    subaccount_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subaccountId'), 'exclude': lambda f: f is None }})
    r"""Subaccount ID of the user profile. This is a read-only field that can be left blank."""  
    trafficker_type: Optional[AccountUserProfileTraffickerTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('traffickerType'), 'exclude': lambda f: f is None }})
    r"""Trafficker type of this user profile. This is a read-only field."""  
    user_access_type: Optional[AccountUserProfileUserAccessTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAccessType'), 'exclude': lambda f: f is None }})
    r"""User type of the user profile. This is a read-only field that can be left blank."""  
    user_role_filter: Optional[shared_objectfilter.ObjectFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRoleFilter'), 'exclude': lambda f: f is None }})
    r"""Object Filter."""  
    user_role_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRoleId'), 'exclude': lambda f: f is None }})
    r"""User role ID of the user profile. This is a required field."""  
    