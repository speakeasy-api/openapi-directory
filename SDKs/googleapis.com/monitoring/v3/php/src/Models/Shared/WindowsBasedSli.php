<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WindowsBasedSli - A WindowsBasedSli defines good_service as the count of time windows for which the provided service was of good quality. Criteria for determining if service was good are embedded in the window_criterion.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WindowsBasedSli
{
    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries with ValueType = BOOL. The window is good if any true values appear in the window.
     * 
     * @var ?string $goodBadMetricFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('goodBadMetricFilter')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $goodBadMetricFilter = null;
    
    /**
     * A PerformanceThreshold is used when each window is good when that window has a sufficiently high performance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PerformanceThreshold $goodTotalRatioThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('goodTotalRatioThreshold')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PerformanceThreshold')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PerformanceThreshold $goodTotalRatioThreshold = null;
    
    /**
     * A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min <= x <= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MetricRange $metricMeanInRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricMeanInRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MetricRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetricRange $metricMeanInRange = null;
    
    /**
     * A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min <= x <= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MetricRange $metricSumInRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricSumInRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MetricRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetricRange $metricSumInRange = null;
    
    /**
     * Duration over which window quality is evaluated. Must be an integer fraction of a day and at least 60s.
     * 
     * @var ?string $windowPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('windowPeriod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $windowPeriod = null;
    
	public function __construct()
	{
		$this->goodBadMetricFilter = null;
		$this->goodTotalRatioThreshold = null;
		$this->metricMeanInRange = null;
		$this->metricSumInRange = null;
		$this->windowPeriod = null;
	}
}
