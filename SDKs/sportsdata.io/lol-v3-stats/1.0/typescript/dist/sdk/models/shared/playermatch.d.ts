import { SpeakeasyBase } from "../../../internal/utils";
import { ChampionInfo } from "./championinfo";
import { Item } from "./item";
import { Spell } from "./spell";
export declare class PlayerMatch extends SpeakeasyBase {
    assists?: number;
    champion?: ChampionInfo;
    championId?: number;
    championLevel?: number;
    combatPlayerScore?: number;
    dateTime?: string;
    day?: string;
    deaths?: number;
    doubleKills?: number;
    fantasyPoints?: number;
    gameId?: number;
    games?: number;
    goldEarned?: number;
    goldSpent?: number;
    inhibitorKills?: number;
    isClosed?: boolean;
    items?: Item[];
    killingSpree?: number;
    kills?: number;
    lane?: string;
    largestCriticalStrike?: number;
    largestKillingSpree?: number;
    largestMultiKill?: number;
    longestTimeSpentLiving?: number;
    magicDamageDealt?: number;
    magicDamageDealtToChampions?: number;
    magicDamageTaken?: number;
    matchId?: number;
    matchName?: string;
    matches?: number;
    name?: string;
    neutralMinionsKIlled?: number;
    neutralMinionsKIlledTeamJungle?: number;
    neutralMinionsKilledEnemyJungle?: number;
    objectivePlayerScore?: number;
    opponent?: string;
    opponentId?: number;
    pentaKills?: number;
    physicalDamageDealt?: number;
    physicalDamageDealtToChampions?: number;
    physicalDamageTaken?: number;
    playerId?: number;
    position?: string;
    quadraKills?: number;
    role?: string;
    sightWardsBoughtInGame?: number;
    spells?: Spell[];
    team?: string;
    teamId?: number;
    tenKillsOrAssists?: number;
    totalDamageDealt?: number;
    totalDamageDealtToChampions?: number;
    totalDamageTaken?: number;
    totalHeal?: number;
    totalMinionsKilled?: number;
    totalPlayerScore?: number;
    totalTimeCrowdControlDealt?: number;
    totalUnitsHealed?: number;
    tripleKills?: number;
    trueDamageDealt?: number;
    trueDamageDealtToChampions?: number;
    trueDamageTaken?: number;
    turretKills?: number;
    unrealKills?: number;
    updated?: string;
    visionWardsBoughtInGame?: number;
    wardsKilled?: number;
    wardsPlaced?: number;
}
