"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import previewcontactinfo as shared_previewcontactinfo
from ..shared import taxinfo as shared_taxinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PreviewAccountInfo:
    r"""Information about the account that will own the order."""
    
    bill_cycle_day: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billCycleDay') }})
    r"""Day of the month that the account prefers billing periods to begin on. If set to 0, the bill cycle day will be set as \\"AutoSet\\"."""  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""ISO 3-letter currency code (uppercase). For example, USD."""  
    custom_fields: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})
    r"""Container for custom fields of an Account object."""  
    sold_to_contact: Optional[shared_previewcontactinfo.PreviewContactInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('soldToContact'), 'exclude': lambda f: f is None }})  
    tax_info: Optional[shared_taxinfo.TaxInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxInfo'), 'exclude': lambda f: f is None }})
    r"""Information about the tax exempt status of a customer account."""  
    