"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import line as shared_line
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TextRecognitionResultUnitEnum(str, Enum):
    r"""The unit used in the Width, Height and BoundingBox. For images, the unit is 'pixel'. For PDF, the unit is 'inch'."""
    PIXEL = 'pixel'
    INCH = 'inch'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextRecognitionResult:
    r"""An object representing a recognized text region"""
    
    lines: list[shared_line.Line] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lines') }})
    r"""A list of recognized text lines."""  
    clockwise_orientation: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clockwiseOrientation'), 'exclude': lambda f: f is None }})
    r"""The orientation of the image in degrees in the clockwise direction. Range between [0, 360)."""  
    height: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('height'), 'exclude': lambda f: f is None }})
    r"""The height of the image in pixels or the PDF in inches."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page'), 'exclude': lambda f: f is None }})
    r"""The 1-based page number of the recognition result."""  
    unit: Optional[TextRecognitionResultUnitEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unit'), 'exclude': lambda f: f is None }})
    r"""The unit used in the Width, Height and BoundingBox. For images, the unit is 'pixel'. For PDF, the unit is 'inch'."""  
    width: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('width'), 'exclude': lambda f: f is None }})
    r"""The width of the image in pixels or the PDF in inches."""  
    