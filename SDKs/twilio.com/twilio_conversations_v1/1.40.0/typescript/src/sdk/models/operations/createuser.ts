/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateUserServerList = [
  "https://conversations.twilio.com",
] as const;

export class CreateUserSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateUserCreateUserRequest extends SpeakeasyBase {
  /**
   * The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.
   */
  @SpeakeasyMetadata({ data: "form, name=Attributes" })
  attributes?: string;

  /**
   * The string that you assigned to describe the resource.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.
   */
  @SpeakeasyMetadata({ data: "form, name=Identity" })
  identity: string;

  /**
   * The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the user.
   */
  @SpeakeasyMetadata({ data: "form, name=RoleSid" })
  roleSid?: string;
}

export class CreateUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateUserCreateUserRequest;

  /**
   * The X-Twilio-Webhook-Enabled HTTP request header
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Twilio-Webhook-Enabled",
  })
  xTwilioWebhookEnabled?: shared.UserEnumWebhookEnabledTypeEnum;
}

export class CreateUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  conversationsV1User?: shared.ConversationsV1User;
}
