"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import deploymentstagestatussummary as shared_deploymentstagestatussummary
from ..shared import edgedeploymentmodelconfig as shared_edgedeploymentmodelconfig
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeEdgeDeploymentPlanResponse:
    r"""Success"""
    
    device_fleet_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeviceFleetName') }})  
    edge_deployment_plan_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgeDeploymentPlanArn') }})  
    edge_deployment_plan_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgeDeploymentPlanName') }})  
    model_configs: list[shared_edgedeploymentmodelconfig.EdgeDeploymentModelConfig] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelConfigs') }})  
    stages: list[shared_deploymentstagestatussummary.DeploymentStageStatusSummary] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Stages') }})  
    creation_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    edge_deployment_failed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgeDeploymentFailed'), 'exclude': lambda f: f is None }})  
    edge_deployment_pending: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgeDeploymentPending'), 'exclude': lambda f: f is None }})  
    edge_deployment_success: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EdgeDeploymentSuccess'), 'exclude': lambda f: f is None }})  
    last_modified_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    