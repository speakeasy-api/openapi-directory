// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkSmUsersRequest struct {
	// Filter users by email(s).
	Emails []string `queryParam:"style=form,explode=false,name=emails"`
	// Filter users by id(s).
	Ids       []string `queryParam:"style=form,explode=false,name=ids"`
	NetworkID string   `pathParam:"style=simple,explode=false,name=networkId"`
	// Specifiy a scope (one of all, none, withAny, withAll, withoutAny, withoutAll) and a set of tags.
	Scope []string `queryParam:"style=form,explode=false,name=scope"`
	// Filter users by username(s).
	Usernames []string `queryParam:"style=form,explode=false,name=usernames"`
}

type GetNetworkSmUsers200ApplicationJSON struct {
	// Active Directory Groups the user belongs to.
	AdGroups []string `json:"adGroups,omitempty"`
	// Apple School Manager Groups the user belongs to.
	AsmGroups []string `json:"asmGroups,omitempty"`
	// Azure Active Directory Groups the user belongs to.
	AzureAdGroups []string `json:"azureAdGroups,omitempty"`
	// The user display name.
	DisplayName *string `json:"displayName,omitempty"`
	// User email.
	Email *string `json:"email,omitempty"`
	// User full name.
	FullName *string `json:"fullName,omitempty"`
	// A boolean indicating if the user has an associated identity certificate..
	HasIdentityCertificate *bool `json:"hasIdentityCertificate,omitempty"`
	// A boolean denoting if the user has a password associated with the record.
	HasPassword *bool `json:"hasPassword,omitempty"`
	// The Meraki managed Id of the user record.
	ID *string `json:"id,omitempty"`
	// Whether the user was created using an external integration, or via the Meraki Dashboard.
	IsExternal *bool `json:"isExternal,omitempty"`
	// SAML Groups the user belongs to.
	SamlGroups []string `json:"samlGroups,omitempty"`
	// The set of tags the user is scoped to.
	Tags *string `json:"tags,omitempty"`
	// The url where the users thumbnail is hosted.
	UserThumbnail *string `json:"userThumbnail,omitempty"`
	// The users username.
	Username *string `json:"username,omitempty"`
}

type GetNetworkSmUsersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkSmUsers200ApplicationJSONObjects []GetNetworkSmUsers200ApplicationJSON
}
