/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomObjectDefinitionSchema - The schema of the custom object definition
 */
public class CustomObjectDefinitionSchema {
    /**
     * The set of fields that are allowed to be queried on. Queries on non-filterable fields will be rejected. You can not change a non-filterable field to filterable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filterable")
    public String[] filterable;
    public CustomObjectDefinitionSchema withFilterable(String[] filterable) {
        this.filterable = filterable;
        return this;
    }
    
    /**
     * A label for the custom object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public CustomObjectDefinitionSchema withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * The API name of the custom object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public String object;
    public CustomObjectDefinitionSchema withObject(String object) {
        this.object = object;
        return this;
    }
    
    /**
     * The definitions of all the fields in the custom object definition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, CustomObjectCustomFieldDefinition> properties;
    public CustomObjectDefinitionSchema withProperties(java.util.Map<String, CustomObjectCustomFieldDefinition> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * An array of relationships with Zuora objects or other custom objects
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationships")
    public CustomObjectDefinitionSchemaRelationships[] relationships;
    public CustomObjectDefinitionSchema withRelationships(CustomObjectDefinitionSchemaRelationships[] relationships) {
        this.relationships = relationships;
        return this;
    }
    
    /**
     * The required fields of the custom object definition. You can change required fields to optional. However, you can only change optional fields to required on the custom objects with no records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public String[] required;
    public CustomObjectDefinitionSchema withRequired(String[] required) {
        this.required = required;
        return this;
    }
    
    /**
     * The custom object definition type. Can only be `object` currently.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public CustomObjectDefinitionSchemaTypeEnum type;
    public CustomObjectDefinitionSchema withType(CustomObjectDefinitionSchemaTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
