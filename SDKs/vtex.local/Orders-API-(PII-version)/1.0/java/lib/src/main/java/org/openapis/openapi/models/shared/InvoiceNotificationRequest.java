/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InvoiceNotificationRequest {
    /**
     * Fiscal code used in Brazil.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cfop")
    public String cfop;

    public InvoiceNotificationRequest withCfop(String cfop) {
        this.cfop = cfop;
        return this;
    }
    
    /**
     * The name of the carrier responsible for delivering the order.
     * &gt; This field should only be used when sending **tracking** information. When the request is used for sending the invoice, this field should be left empty (`""`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("courier")
    public String courier;

    public InvoiceNotificationRequest withCourier(String courier) {
        this.courier = courier;
        return this;
    }
    
    /**
     * Extra value in the invoice in cents. Do not use any decimal separator. For instance, `$24.99` should be represented as `2499`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extraValue")
    public Long extraValue;

    public InvoiceNotificationRequest withExtraValue(Long extraValue) {
        this.extraValue = extraValue;
        return this;
    }
    
    /**
     * Invoice key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceKey")
    public String invoiceKey;

    public InvoiceNotificationRequest withInvoiceKey(String invoiceKey) {
        this.invoiceKey = invoiceKey;
        return this;
    }
    
    /**
     * Number that identifies the invoice.
     */
    @JsonProperty("invoiceNumber")
    public String invoiceNumber;

    public InvoiceNotificationRequest withInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
        return this;
    }
    
    /**
     * URL of the invoice. Can be used to send the URL of an XML file, for example, which is useful for some integrations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceUrl")
    public String invoiceUrl;

    public InvoiceNotificationRequest withInvoiceUrl(String invoiceUrl) {
        this.invoiceUrl = invoiceUrl;
        return this;
    }
    
    /**
     * Total amount being invoiced in cents. Do not use any decimal separator. For instance, `$24.99` should be represented as `2499`.
     */
    @JsonProperty("invoiceValue")
    public String invoiceValue;

    public InvoiceNotificationRequest withInvoiceValue(String invoiceValue) {
        this.invoiceValue = invoiceValue;
        return this;
    }
    
    /**
     * Issuance date of the invoice in ISO format.
     */
    @JsonProperty("issuedDate")
    public String issuedDate;

    public InvoiceNotificationRequest withIssuedDate(String issuedDate) {
        this.issuedDate = issuedDate;
        return this;
    }
    
    /**
     * Array containing the SKUs that are being invoiced.
     */
    @JsonProperty("items")
    public Item1[] items;

    public InvoiceNotificationRequest withItems(Item1[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Code that identifies the order tracking.
     * &gt; This field should only be used when sending the **tracking** information. When the request is used for sending the invoice, this field should be left empty (`""`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingNumber")
    public String trackingNumber;

    public InvoiceNotificationRequest withTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
        return this;
    }
    
    /**
     * URL used to track the order.
     * &gt; This field should only be used when sending the **tracking** information. When the request is used for sending the invoice, this field should be left empty (`""`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingUrl")
    public String trackingUrl;

    public InvoiceNotificationRequest withTrackingUrl(String trackingUrl) {
        this.trackingUrl = trackingUrl;
        return this;
    }
    
    /**
     * The type of invoice. There are two possible values: `"Output"` and `"Input"`. The `"Output"` type should be used when the invoice you are sending is a selling invoice. The `"Input"` type should be used when you send a return invoice.
     */
    @JsonProperty("type")
    public String type;

    public InvoiceNotificationRequest withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Number of volumes in the invoice.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumes")
    public Long volumes;

    public InvoiceNotificationRequest withVolumes(Long volumes) {
        this.volumes = volumes;
        return this;
    }
    
    public InvoiceNotificationRequest(@JsonProperty("invoiceNumber") String invoiceNumber, @JsonProperty("invoiceValue") String invoiceValue, @JsonProperty("issuedDate") String issuedDate, @JsonProperty("items") Item1[] items, @JsonProperty("type") String type) {
        this.invoiceNumber = invoiceNumber;
        this.invoiceValue = invoiceValue;
        this.issuedDate = issuedDate;
        this.items = items;
        this.type = type;
  }
}
