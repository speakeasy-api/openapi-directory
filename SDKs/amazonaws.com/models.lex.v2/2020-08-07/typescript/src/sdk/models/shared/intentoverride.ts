/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { SlotValueOverride } from "./slotvalueoverride";
import { Expose, Transform } from "class-transformer";

/**
 * Override settings to configure the intent state.
 */
export class IntentOverride extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: SlotValueOverride })
  @Expose({ name: "slots" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SlotValueOverride> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SlotValueOverride);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  slots?: Record<string, SlotValueOverride>;
}
