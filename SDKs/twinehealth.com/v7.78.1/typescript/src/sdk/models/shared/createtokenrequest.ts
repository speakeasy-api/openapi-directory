/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum CreateTokenRequestDataAttributesGrantTypeEnum {
  RefreshToken = "refresh_token",
  ClientCredentials = "client_credentials",
}

export class CreateTokenRequestDataAttributes extends SpeakeasyBase {
  /**
   * Contact Fitbit Plus API Support to get a client id and secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId: string;

  /**
   * Contact Fitbit Plus API Support to get a client id and secret. Secret is required if grant_type is "client_credentials"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "grant_type" })
  grantType: CreateTokenRequestDataAttributesGrantTypeEnum;

  /**
   * Required if grant_type is "refresh_token"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refresh_token" })
  refreshToken?: string;
}

export enum CreateTokenRequestDataTypeEnum {
  Token = "token",
}

export class CreateTokenRequestData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => CreateTokenRequestDataAttributes)
  attributes: CreateTokenRequestDataAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreateTokenRequestDataTypeEnum;
}

export class CreateTokenRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => CreateTokenRequestData)
  data: CreateTokenRequestData;
}
