// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposCreateUsingTemplatePathParams struct {
	TemplateOwner string `pathParam:"style=simple,explode=false,name=template_owner"`
	TemplateRepo  string `pathParam:"style=simple,explode=false,name=template_repo"`
}

type ReposCreateUsingTemplateRequestBody struct {
	// A short description of the new repository.
	Description *string `json:"description,omitempty"`
	// Set to `true` to include the directory structure and files from all branches in the template repository, and not just the default branch. Default: `false`.
	IncludeAllBranches *bool `json:"include_all_branches,omitempty"`
	// The name of the new repository.
	Name string `json:"name"`
	// The organization or person who will own the new repository. To create a new repository in an organization, the authenticated user must be a member of the specified organization.
	Owner *string `json:"owner,omitempty"`
	// Either `true` to create a new private repository or `false` to create a new public one.
	Private *bool `json:"private,omitempty"`
}

type ReposCreateUsingTemplateRequest struct {
	PathParams ReposCreateUsingTemplatePathParams
	Request    ReposCreateUsingTemplateRequestBody `request:"mediaType=application/json"`
}

type ReposCreateUsingTemplateResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Repository *shared.Repository
}
