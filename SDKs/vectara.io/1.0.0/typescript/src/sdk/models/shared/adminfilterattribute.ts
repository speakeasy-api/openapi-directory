/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdminFilterAttributeLevelEnum } from "./adminfilterattributelevelenum";
import { AdminFilterAttributeTypeEnum } from "./adminfilterattributetypeenum";
import { Expose } from "class-transformer";

/**
 * Defines metadata fields that can be used in predicate queries.
 */
export class AdminFilterAttribute extends SpeakeasyBase {
  /**
   * An optional description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Whether the field is indexed for maximum query speed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "indexed" })
  indexed?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "level" })
  level?: AdminFilterAttributeLevelEnum;

  /**
   * Name of the field, as seen in metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AdminFilterAttributeTypeEnum;
}
