<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class OrgsListMembersRequest
{
    /**
     * Filter members returned in the list. Can be one of:  
     * 
     * \* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  
     * \* `all` - All members the authenticated user can see.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\OrgsListMembersFilterEnum $filter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter')]
    public ?OrgsListMembersFilterEnum $filter = null;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=org')]
    public string $org;
    
    /**
     * Page number of the results to fetch.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Results per page (max 100)
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * Filter members returned by their role. Can be one of:  
     * 
     * \* `all` - All members of the organization, regardless of role.  
     * \* `admin` - Organization owners.  
     * \* `member` - Non-owner organization members.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\OrgsListMembersRoleEnum $role
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=role')]
    public ?OrgsListMembersRoleEnum $role = null;
    
	public function __construct()
	{
		$this->filter = null;
		$this->org = "";
		$this->page = null;
		$this->perPage = null;
		$this->role = null;
	}
}
