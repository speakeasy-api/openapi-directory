// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// SubmitFeedbackRequestBodyTypeEnum -  The feedback tpye. Thee are two valid values, <code>Positive</code> and <code>Negative</code>.
type SubmitFeedbackRequestBodyTypeEnum string

const (
	SubmitFeedbackRequestBodyTypeEnumPositive SubmitFeedbackRequestBodyTypeEnum = "Positive"
	SubmitFeedbackRequestBodyTypeEnumNegative SubmitFeedbackRequestBodyTypeEnum = "Negative"
)

func (e SubmitFeedbackRequestBodyTypeEnum) ToPointer() *SubmitFeedbackRequestBodyTypeEnum {
	return &e
}

func (e *SubmitFeedbackRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Positive":
		fallthrough
	case "Negative":
		*e = SubmitFeedbackRequestBodyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitFeedbackRequestBodyTypeEnum: %v", v)
	}
}

type SubmitFeedbackRequestBody struct {
	// Optional feedback about this anomaly.
	Comment *string `json:"comment,omitempty"`
	//  The feedback tpye. Thee are two valid values, <code>Positive</code> and <code>Negative</code>.
	Type SubmitFeedbackRequestBodyTypeEnum `json:"type"`
}

type SubmitFeedbackRequest struct {
	RequestBody       SubmitFeedbackRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The universally unique identifier (UUID) of the <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_AnomalyInstance.html"> <code>AnomalyInstance</code> </a> object that is included in the analysis data.
	AnomalyInstanceID string `pathParam:"style=simple,explode=false,name=anomalyInstanceId"`
	// The name of the profiling group that is associated with the analysis data.
	ProfilingGroupName string `pathParam:"style=simple,explode=false,name=profilingGroupName"`
}

type SubmitFeedbackResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	SubmitFeedbackResponse map[string]interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
