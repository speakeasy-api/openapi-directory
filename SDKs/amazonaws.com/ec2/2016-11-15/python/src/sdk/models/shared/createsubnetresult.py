"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class CreateSubnetResultSubnetIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum(str, Enum):
    r"""The state of a CIDR block."""
    ASSOCIATING = 'associating'
    ASSOCIATED = 'associated'
    DISASSOCIATING = 'disassociating'
    DISASSOCIATED = 'disassociated'
    FAILING = 'failing'
    FAILED = 'failed'


@dataclasses.dataclass
class CreateSubnetResultSubnetIpv6CidrBlockAssociationSetIpv6CidrBlockState:
    r"""The state of the CIDR block."""
    
    state: Optional[CreateSubnetResultSubnetIpv6CidrBlockAssociationSetIpv6CidrBlockStateStateEnum] = dataclasses.field(default=None)  
    status_message: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateSubnetResultSubnetIpv6CidrBlockAssociationSet:
    r"""Describes an association between a subnet and an IPv6 CIDR block."""
    
    association_id: Optional[str] = dataclasses.field(default=None)  
    ipv6_cidr_block: Optional[str] = dataclasses.field(default=None)  
    ipv6_cidr_block_state: Optional[CreateSubnetResultSubnetIpv6CidrBlockAssociationSetIpv6CidrBlockState] = dataclasses.field(default=None)  
    
class CreateSubnetResultSubnetPrivateDNSNameOptionsOnLaunchHostnameTypeEnum(str, Enum):
    r"""The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID."""
    IP_NAME = 'ip-name'
    RESOURCE_NAME = 'resource-name'


@dataclasses.dataclass
class CreateSubnetResultSubnetPrivateDNSNameOptionsOnLaunch:
    r"""The type of hostnames to assign to instances in the subnet at launch. An instance hostname is based on the IPv4 address or ID of the instance."""
    
    enable_resource_name_dns_aaaa_record: Optional[bool] = dataclasses.field(default=None)  
    enable_resource_name_dns_a_record: Optional[bool] = dataclasses.field(default=None)  
    hostname_type: Optional[CreateSubnetResultSubnetPrivateDNSNameOptionsOnLaunchHostnameTypeEnum] = dataclasses.field(default=None)  
    
class CreateSubnetResultSubnetStateEnum(str, Enum):
    r"""The current state of the subnet."""
    PENDING = 'pending'
    AVAILABLE = 'available'


@dataclasses.dataclass
class CreateSubnetResultSubnetTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateSubnetResultSubnet:
    r"""Information about the subnet."""
    
    assign_ipv6_address_on_creation: Optional[bool] = dataclasses.field(default=None)  
    availability_zone: Optional[str] = dataclasses.field(default=None)  
    availability_zone_id: Optional[str] = dataclasses.field(default=None)  
    available_ip_address_count: Optional[int] = dataclasses.field(default=None)  
    cidr_block: Optional[str] = dataclasses.field(default=None)  
    customer_owned_ipv4_pool: Optional[str] = dataclasses.field(default=None)  
    default_for_az: Optional[bool] = dataclasses.field(default=None)  
    enable_dns64: Optional[bool] = dataclasses.field(default=None)  
    enable_lni_at_device_index: Optional[int] = dataclasses.field(default=None)  
    ipv6_cidr_block_association_set: Optional[list[CreateSubnetResultSubnetIpv6CidrBlockAssociationSet]] = dataclasses.field(default=None)  
    ipv6_native: Optional[bool] = dataclasses.field(default=None)  
    map_customer_owned_ip_on_launch: Optional[bool] = dataclasses.field(default=None)  
    map_public_ip_on_launch: Optional[bool] = dataclasses.field(default=None)  
    outpost_arn: Optional[str] = dataclasses.field(default=None)  
    owner_id: Optional[str] = dataclasses.field(default=None)  
    private_dns_name_options_on_launch: Optional[CreateSubnetResultSubnetPrivateDNSNameOptionsOnLaunch] = dataclasses.field(default=None)  
    state: Optional[CreateSubnetResultSubnetStateEnum] = dataclasses.field(default=None)  
    subnet_arn: Optional[str] = dataclasses.field(default=None)  
    subnet_id: Optional[str] = dataclasses.field(default=None)  
    tags: Optional[list[CreateSubnetResultSubnetTags]] = dataclasses.field(default=None)  
    vpc_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateSubnetResult:
    r"""Success"""
    
    subnet: Optional[CreateSubnetResultSubnet] = dataclasses.field(default=None)  
    