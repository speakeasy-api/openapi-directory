// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCollectionXAmzTargetEnum
type CreateCollectionXAmzTargetEnum string

const (
	CreateCollectionXAmzTargetEnumOpenSearchServerlessCreateCollection CreateCollectionXAmzTargetEnum = "OpenSearchServerless.CreateCollection"
)

func (e CreateCollectionXAmzTargetEnum) ToPointer() *CreateCollectionXAmzTargetEnum {
	return &e
}

func (e *CreateCollectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OpenSearchServerless.CreateCollection":
		*e = CreateCollectionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCollectionXAmzTargetEnum: %v", v)
	}
}

type CreateCollectionRequest struct {
	CreateCollectionRequest shared.CreateCollectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              CreateCollectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateCollectionResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateCollectionResponse *shared.CreateCollectionResponse
	// InternalServerException
	InternalServerException interface{}
	// OcuLimitExceededException
	OcuLimitExceededException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ValidationException
	ValidationException interface{}
}
