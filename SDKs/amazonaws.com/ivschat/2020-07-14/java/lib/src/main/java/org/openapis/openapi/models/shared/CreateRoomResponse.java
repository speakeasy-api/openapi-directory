/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateRoomResponse - Success
 */
public class CreateRoomResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public CreateRoomResponse withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createTime")
    public OffsetDateTime createTime;

    public CreateRoomResponse withCreateTime(OffsetDateTime createTime) {
        this.createTime = createTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CreateRoomResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfigurationIdentifiers")
    public String[] loggingConfigurationIdentifiers;

    public CreateRoomResponse withLoggingConfigurationIdentifiers(String[] loggingConfigurationIdentifiers) {
        this.loggingConfigurationIdentifiers = loggingConfigurationIdentifiers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumMessageLength")
    public Long maximumMessageLength;

    public CreateRoomResponse withMaximumMessageLength(Long maximumMessageLength) {
        this.maximumMessageLength = maximumMessageLength;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumMessageRatePerSecond")
    public Long maximumMessageRatePerSecond;

    public CreateRoomResponse withMaximumMessageRatePerSecond(Long maximumMessageRatePerSecond) {
        this.maximumMessageRatePerSecond = maximumMessageRatePerSecond;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messageReviewHandler")
    public MessageReviewHandler messageReviewHandler;

    public CreateRoomResponse withMessageReviewHandler(MessageReviewHandler messageReviewHandler) {
        this.messageReviewHandler = messageReviewHandler;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CreateRoomResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateRoomResponse withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updateTime")
    public OffsetDateTime updateTime;

    public CreateRoomResponse withUpdateTime(OffsetDateTime updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public CreateRoomResponse(){}
}
