// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeImageAttributeActionEnum
type GETDescribeImageAttributeActionEnum string

const (
	GETDescribeImageAttributeActionEnumDescribeImageAttribute GETDescribeImageAttributeActionEnum = "DescribeImageAttribute"
)

func (e *GETDescribeImageAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeImageAttribute":
		*e = GETDescribeImageAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeImageAttributeActionEnum: %s", s)
	}
}

// GETDescribeImageAttributeAttributeEnum - <p>The AMI attribute.</p> <p> <b>Note</b>: The <code>blockDeviceMapping</code> attribute is deprecated. Using this attribute returns the <code>Client.AuthFailure</code> error. To get information about the block device mappings for an AMI, use the <a>DescribeImages</a> action.</p>
type GETDescribeImageAttributeAttributeEnum string

const (
	GETDescribeImageAttributeAttributeEnumDescription        GETDescribeImageAttributeAttributeEnum = "description"
	GETDescribeImageAttributeAttributeEnumKernel             GETDescribeImageAttributeAttributeEnum = "kernel"
	GETDescribeImageAttributeAttributeEnumRamdisk            GETDescribeImageAttributeAttributeEnum = "ramdisk"
	GETDescribeImageAttributeAttributeEnumLaunchPermission   GETDescribeImageAttributeAttributeEnum = "launchPermission"
	GETDescribeImageAttributeAttributeEnumProductCodes       GETDescribeImageAttributeAttributeEnum = "productCodes"
	GETDescribeImageAttributeAttributeEnumBlockDeviceMapping GETDescribeImageAttributeAttributeEnum = "blockDeviceMapping"
	GETDescribeImageAttributeAttributeEnumSriovNetSupport    GETDescribeImageAttributeAttributeEnum = "sriovNetSupport"
	GETDescribeImageAttributeAttributeEnumBootMode           GETDescribeImageAttributeAttributeEnum = "bootMode"
	GETDescribeImageAttributeAttributeEnumTpmSupport         GETDescribeImageAttributeAttributeEnum = "tpmSupport"
	GETDescribeImageAttributeAttributeEnumUefiData           GETDescribeImageAttributeAttributeEnum = "uefiData"
	GETDescribeImageAttributeAttributeEnumLastLaunchedTime   GETDescribeImageAttributeAttributeEnum = "lastLaunchedTime"
	GETDescribeImageAttributeAttributeEnumImdsSupport        GETDescribeImageAttributeAttributeEnum = "imdsSupport"
)

func (e *GETDescribeImageAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "description":
		fallthrough
	case "kernel":
		fallthrough
	case "ramdisk":
		fallthrough
	case "launchPermission":
		fallthrough
	case "productCodes":
		fallthrough
	case "blockDeviceMapping":
		fallthrough
	case "sriovNetSupport":
		fallthrough
	case "bootMode":
		fallthrough
	case "tpmSupport":
		fallthrough
	case "uefiData":
		fallthrough
	case "lastLaunchedTime":
		fallthrough
	case "imdsSupport":
		*e = GETDescribeImageAttributeAttributeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeImageAttributeAttributeEnum: %s", s)
	}
}

// GETDescribeImageAttributeVersionEnum
type GETDescribeImageAttributeVersionEnum string

const (
	GETDescribeImageAttributeVersionEnumTwoThousandAndSixteen1115 GETDescribeImageAttributeVersionEnum = "2016-11-15"
)

func (e *GETDescribeImageAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDescribeImageAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeImageAttributeVersionEnum: %s", s)
	}
}

type GETDescribeImageAttributeRequest struct {
	Action GETDescribeImageAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The AMI attribute.</p> <p> <b>Note</b>: The <code>blockDeviceMapping</code> attribute is deprecated. Using this attribute returns the <code>Client.AuthFailure</code> error. To get information about the block device mappings for an AMI, use the <a>DescribeImages</a> action.</p>
	Attribute GETDescribeImageAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the AMI.
	ImageID           string                               `queryParam:"style=form,explode=true,name=ImageId"`
	Version           GETDescribeImageAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeImageAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
