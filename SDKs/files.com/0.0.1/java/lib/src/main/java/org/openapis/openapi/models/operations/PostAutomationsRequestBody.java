/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostAutomationsRequestBody {
    /**
     * Automation type
     */
    @SpeakeasyMetadata("multipartForm:name=automation")
    public PostAutomationsRequestBodyAutomationEnum automation;
    public PostAutomationsRequestBody withAutomation(PostAutomationsRequestBodyAutomationEnum automation) {
        this.automation = automation;
        return this;
    }
    
    /**
     * Description for the this Automation.
     */
    @SpeakeasyMetadata("multipartForm:name=description")
    public String description;
    public PostAutomationsRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * DEPRECATED: Destination Path. Use `destinations` instead.
     */
    @SpeakeasyMetadata("multipartForm:name=destination")
    public String destination;
    public PostAutomationsRequestBody withDestination(String destination) {
        this.destination = destination;
        return this;
    }
    
    /**
     * If set, this string in the destination path will be replaced with the value in `destination_replace_to`.
     */
    @SpeakeasyMetadata("multipartForm:name=destination_replace_from")
    public String destinationReplaceFrom;
    public PostAutomationsRequestBody withDestinationReplaceFrom(String destinationReplaceFrom) {
        this.destinationReplaceFrom = destinationReplaceFrom;
        return this;
    }
    
    /**
     * If set, this string will replace the value `destination_replace_from` in the destination filename. You can use special patterns here.
     */
    @SpeakeasyMetadata("multipartForm:name=destination_replace_to")
    public String destinationReplaceTo;
    public PostAutomationsRequestBody withDestinationReplaceTo(String destinationReplaceTo) {
        this.destinationReplaceTo = destinationReplaceTo;
        return this;
    }
    
    /**
     * A list of String destination paths or Hash of folder_path and optional file_path.
     */
    @SpeakeasyMetadata("multipartForm:name=destinations")
    public String[] destinations;
    public PostAutomationsRequestBody withDestinations(String[] destinations) {
        this.destinations = destinations;
        return this;
    }
    
    /**
     * If true, this automation will not run.
     */
    @SpeakeasyMetadata("multipartForm:name=disabled")
    public Boolean disabled;
    public PostAutomationsRequestBody withDisabled(Boolean disabled) {
        this.disabled = disabled;
        return this;
    }
    
    /**
     * A list of group IDs the automation is associated with. If sent as a string, it should be comma-delimited.
     */
    @SpeakeasyMetadata("multipartForm:name=group_ids")
    public String groupIds;
    public PostAutomationsRequestBody withGroupIds(String groupIds) {
        this.groupIds = groupIds;
        return this;
    }
    
    /**
     * How often to run this automation? One of: `day`, `week`, `week_end`, `month`, `month_end`, `quarter`, `quarter_end`, `year`, `year_end`
     */
    @SpeakeasyMetadata("multipartForm:name=interval")
    public String interval;
    public PostAutomationsRequestBody withInterval(String interval) {
        this.interval = interval;
        return this;
    }
    
    /**
     * Name for this automation.
     */
    @SpeakeasyMetadata("multipartForm:name=name")
    public String name;
    public PostAutomationsRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Path on which this Automation runs.  Supports globs.
     */
    @SpeakeasyMetadata("multipartForm:name=path")
    public String path;
    public PostAutomationsRequestBody withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Custom schedule for running this automation.
     */
    @SpeakeasyMetadata("multipartForm:name=schedule,json")
    public java.util.Map<String, Object> schedule;
    public PostAutomationsRequestBody withSchedule(java.util.Map<String, Object> schedule) {
        this.schedule = schedule;
        return this;
    }
    
    /**
     * Source Path
     */
    @SpeakeasyMetadata("multipartForm:name=source")
    public String source;
    public PostAutomationsRequestBody withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * A list of sync IDs the automation is associated with. If sent as a string, it should be comma-delimited.
     */
    @SpeakeasyMetadata("multipartForm:name=sync_ids")
    public String syncIds;
    public PostAutomationsRequestBody withSyncIds(String syncIds) {
        this.syncIds = syncIds;
        return this;
    }
    
    /**
     * How this automation is triggered to run. One of: `realtime`, `daily`, `custom_schedule`, `webhook`, `email`, or `action`.
     */
    @SpeakeasyMetadata("multipartForm:name=trigger")
    public PostAutomationsRequestBodyTriggerEnum trigger;
    public PostAutomationsRequestBody withTrigger(PostAutomationsRequestBodyTriggerEnum trigger) {
        this.trigger = trigger;
        return this;
    }
    
    /**
     * If trigger is `action`, this is the list of action types on which to trigger the automation. Valid actions are create, read, update, destroy, move, copy
     */
    @SpeakeasyMetadata("multipartForm:name=trigger_actions")
    public String[] triggerActions;
    public PostAutomationsRequestBody withTriggerActions(String[] triggerActions) {
        this.triggerActions = triggerActions;
        return this;
    }
    
    /**
     * A list of user IDs the automation is associated with. If sent as a string, it should be comma-delimited.
     */
    @SpeakeasyMetadata("multipartForm:name=user_ids")
    public String userIds;
    public PostAutomationsRequestBody withUserIds(String userIds) {
        this.userIds = userIds;
        return this;
    }
    
    /**
     * A Hash of attributes specific to the automation type.
     */
    @SpeakeasyMetadata("multipartForm:name=value,json")
    public java.util.Map<String, Object> value;
    public PostAutomationsRequestBody withValue(java.util.Map<String, Object> value) {
        this.value = value;
        return this;
    }
    
}
