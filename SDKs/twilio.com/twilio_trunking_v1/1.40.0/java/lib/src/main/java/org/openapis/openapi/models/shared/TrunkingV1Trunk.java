/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TrunkingV1Trunk - Created
 */
public class TrunkingV1Trunk {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Trunk resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public TrunkingV1Trunk withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The types of authentication mapped to the domain. Can be: `IP_ACL` and `CREDENTIAL_LIST`. If both are mapped, the values are returned in a comma delimited list. If empty, the domain will not receive any traffic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_type")
    public String authType;
    public TrunkingV1Trunk withAuthType(String authType) {
        this.authType = authType;
        return this;
    }
    
    /**
     * Reserved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_type_set")
    public String[] authTypeSet;
    public TrunkingV1Trunk withAuthTypeSet(String[] authTypeSet) {
        this.authTypeSet = authTypeSet;
        return this;
    }
    
    /**
     * Whether Caller ID Name (CNAM) lookup is enabled for the trunk. If enabled, all inbound calls to the SIP Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cnam_lookup_enabled")
    public Boolean cnamLookupEnabled;
    public TrunkingV1Trunk withCnamLookupEnabled(Boolean cnamLookupEnabled) {
        this.cnamLookupEnabled = cnamLookupEnabled;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public TrunkingV1Trunk withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public TrunkingV1Trunk withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The HTTP method we use to call the `disaster_recovery_url`. Can be: `GET` or `POST`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disaster_recovery_method")
    public TrunkingV1TrunkDisasterRecoveryMethodEnum disasterRecoveryMethod;
    public TrunkingV1Trunk withDisasterRecoveryMethod(TrunkingV1TrunkDisasterRecoveryMethodEnum disasterRecoveryMethod) {
        this.disasterRecoveryMethod = disasterRecoveryMethod;
        return this;
    }
    
    /**
     * The URL we call using the `disaster_recovery_method` if an error occurs while sending SIP traffic towards the configured Origination URL. We retrieve TwiML from this URL and execute the instructions like any other normal TwiML call. See [Disaster Recovery](https://www.twilio.com/docs/sip-trunking#disaster-recovery) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disaster_recovery_url")
    public String disasterRecoveryUrl;
    public TrunkingV1Trunk withDisasterRecoveryUrl(String disasterRecoveryUrl) {
        this.disasterRecoveryUrl = disasterRecoveryUrl;
        return this;
    }
    
    /**
     * The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and `-` and must end with `pstn.twilio.com`. See [Termination Settings](https://www.twilio.com/docs/sip-trunking#termination) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain_name")
    public String domainName;
    public TrunkingV1Trunk withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * The string that you assigned to describe the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;
    public TrunkingV1Trunk withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;
    public TrunkingV1Trunk withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The recording settings for the trunk. Can be: `do-not-record`, `record-from-ringing`, `record-from-answer`. If set to `record-from-ringing` or `record-from-answer`, all calls going through the trunk will be recorded. The only way to change recording parameters is on a sub-resource of a Trunk after it has been created. e.g.`/Trunks/[Trunk_SID]/Recording -XPOST -d'Mode=record-from-answer'`. See [Recording](https://www.twilio.com/docs/sip-trunking#recording) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recording")
    public Object recording;
    public TrunkingV1Trunk withRecording(Object recording) {
        this.recording = recording;
        return this;
    }
    
    /**
     * Whether Secure Trunking is enabled for the trunk. If enabled, all calls going through the trunk will be secure using SRTP for media and TLS for signaling. If disabled, then RTP will be used for media. See [Secure Trunking](https://www.twilio.com/docs/sip-trunking#securetrunking) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secure")
    public Boolean secure;
    public TrunkingV1Trunk withSecure(Boolean secure) {
        this.secure = secure;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Trunk resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public TrunkingV1Trunk withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer_caller_id")
    public TrunkEnumTransferCallerIdEnum transferCallerId;
    public TrunkingV1Trunk withTransferCallerId(TrunkEnumTransferCallerIdEnum transferCallerId) {
        this.transferCallerId = transferCallerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transfer_mode")
    public TrunkEnumTransferSettingEnum transferMode;
    public TrunkingV1Trunk withTransferMode(TrunkEnumTransferSettingEnum transferMode) {
        this.transferMode = transferMode;
        return this;
    }
    
    /**
     * The absolute URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public TrunkingV1Trunk withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
