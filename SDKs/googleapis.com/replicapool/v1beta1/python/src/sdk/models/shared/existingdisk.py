"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import diskattachment as shared_diskattachment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExistingDisk:
    r"""A pre-existing persistent disk that will be attached to every Replica in the Pool in READ_ONLY mode."""
    
    attachment: Optional[shared_diskattachment.DiskAttachment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachment'), 'exclude': lambda f: f is None }})
    r"""Specifies how to attach a disk to a Replica."""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""The name of the Persistent Disk resource. The Persistent Disk resource must be in the same zone as the Pool."""  
    