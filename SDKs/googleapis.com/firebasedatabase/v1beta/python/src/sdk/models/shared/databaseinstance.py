"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DatabaseInstanceStateEnum(str, Enum):
    r"""Output only. The database's lifecycle state. Read-only."""
    LIFECYCLE_STATE_UNSPECIFIED = 'LIFECYCLE_STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    DISABLED = 'DISABLED'
    DELETED = 'DELETED'

class DatabaseInstanceTypeEnum(str, Enum):
    r"""Immutable. The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted."""
    DATABASE_INSTANCE_TYPE_UNSPECIFIED = 'DATABASE_INSTANCE_TYPE_UNSPECIFIED'
    DEFAULT_DATABASE = 'DEFAULT_DATABASE'
    USER_DATABASE = 'USER_DATABASE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatabaseInstance:
    r"""Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start."""
    
    database_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseUrl'), 'exclude': lambda f: f is None }})
    r"""Output only. Output Only. The globally unique hostname of the database."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`."""  
    project: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the project this instance belongs to. For example: `projects/{project-number}`."""  
    state: Optional[DatabaseInstanceStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The database's lifecycle state. Read-only."""  
    type: Optional[DatabaseInstanceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Immutable. The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatabaseInstanceInput:
    r"""Representation of a Realtime Database instance. Details on interacting with contents of a DatabaseInstance can be found at: https://firebase.google.com/docs/database/rest/start."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The fully qualified resource name of the database instance, in the form: `projects/{project-number}/locations/{location-id}/instances/{database-id}`."""  
    type: Optional[DatabaseInstanceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Immutable. The database instance type. On creation only USER_DATABASE is allowed, which is also the default when omitted."""  
    