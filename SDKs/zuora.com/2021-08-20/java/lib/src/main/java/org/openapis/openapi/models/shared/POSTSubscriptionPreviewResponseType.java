/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class POSTSubscriptionPreviewResponseType {
    /**
     * Invoice amount.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public POSTSubscriptionPreviewResponseType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Invoice amount minus tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountWithoutTax")
    public Double amountWithoutTax;
    public POSTSubscriptionPreviewResponseType withAmountWithoutTax(Double amountWithoutTax) {
        this.amountWithoutTax = amountWithoutTax;
        return this;
    }
    
    /**
     * Container for charge metrics.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeMetrics")
    public POSTSubscriptionPreviewResponseTypeChargeMetrics chargeMetrics;
    public POSTSubscriptionPreviewResponseType withChargeMetrics(POSTSubscriptionPreviewResponseTypeChargeMetrics chargeMetrics) {
        this.chargeMetrics = chargeMetrics;
        return this;
    }
    
    /**
     * Monthly recurring revenue of the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contractedMrr")
    public Double contractedMrr;
    public POSTSubscriptionPreviewResponseType withContractedMrr(Double contractedMrr) {
        this.contractedMrr = contractedMrr;
        return this;
    }
    
    /**
     * Container for credit memos.
     * 
     * **Note:** This container is only available if you set the Zuora REST API minor version to 207.0 or later in the request header, and you have  [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemo")
    public POSTSubscriptionPreviewResponseTypeCreditMemo creditMemo;
    public POSTSubscriptionPreviewResponseType withCreditMemo(POSTSubscriptionPreviewResponseTypeCreditMemo creditMemo) {
        this.creditMemo = creditMemo;
        return this;
    }
    
    /**
     * Container for invoices.
     * 
     * 
     *  **Note:** This field is only available if you set the Zuora REST API minor version to 207.0 or later in the request header. Also, the response structure is changed and the following invoice related response fields are moved to this **invoice** container:
     *   
     *    * amount
     *    * amountWithoutTax
     *    * taxAmount
     *    * invoiceItems
     *    * targetDate
     *    * chargeMetrics
     *    
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoice")
    public java.util.Map<String, Object> invoice;
    public POSTSubscriptionPreviewResponseType withInvoice(java.util.Map<String, Object> invoice) {
        this.invoice = invoice;
        return this;
    }
    
    /**
     * Container for invoice items.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceItems")
    public POSTSubscriptionPreviewInvoiceItemsType[] invoiceItems;
    public POSTSubscriptionPreviewResponseType withInvoiceItems(POSTSubscriptionPreviewInvoiceItemsType[] invoiceItems) {
        this.invoiceItems = invoiceItems;
        return this;
    }
    
    /**
     * Date through which charges are calculated on the invoice, as yyyy-mm-dd.
     * 
     * **Note:** This field is only available if you do not specify the Zuora REST API minor version or specify the minor version to 186.0, 187.0, 188.0, 189.0, and 196.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("invoiceTargetDate")
    public LocalDate invoiceTargetDate;
    public POSTSubscriptionPreviewResponseType withInvoiceTargetDate(LocalDate invoiceTargetDate) {
        this.invoiceTargetDate = invoiceTargetDate;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public POSTSubscriptionPreviewResponseType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.
     * 
     * **Note:** This field is only available if you set the Zuora REST API minor version to 207.0 or later in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("targetDate")
    public LocalDate targetDate;
    public POSTSubscriptionPreviewResponseType withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
    /**
     * Tax amount on the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public Double taxAmount;
    public POSTSubscriptionPreviewResponseType withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * Total contracted value of the subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalContractedValue")
    public Double totalContractedValue;
    public POSTSubscriptionPreviewResponseType withTotalContractedValue(Double totalContractedValue) {
        this.totalContractedValue = totalContractedValue;
        return this;
    }
    
}
