/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InterconnectDiagnosticsARPEntry } from "./interconnectdiagnosticsarpentry";
import { InterconnectDiagnosticsLinkLACPStatus } from "./interconnectdiagnosticslinklacpstatus";
import { InterconnectDiagnosticsLinkOpticalPower } from "./interconnectdiagnosticslinkopticalpower";
import { InterconnectDiagnosticsMacsecStatus } from "./interconnectdiagnosticsmacsecstatus";
import { Expose, Type } from "class-transformer";

/**
 * The operational status of the link.
 */
export enum InterconnectDiagnosticsLinkStatusOperationalStatusEnum {
  LinkOperationalStatusDown = "LINK_OPERATIONAL_STATUS_DOWN",
  LinkOperationalStatusUp = "LINK_OPERATIONAL_STATUS_UP",
}

export class InterconnectDiagnosticsLinkStatus extends SpeakeasyBase {
  /**
   * A list of InterconnectDiagnostics.ARPEntry objects, describing the ARP neighbor entries seen on this link. This will be empty if the link is bundled
   */
  @SpeakeasyMetadata({ elemType: InterconnectDiagnosticsARPEntry })
  @Expose({ name: "arpCaches" })
  @Type(() => InterconnectDiagnosticsARPEntry)
  arpCaches?: InterconnectDiagnosticsARPEntry[];

  /**
   * The unique ID for this link assigned during turn up by Google.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "circuitId" })
  circuitId?: string;

  /**
   * The Demarc address assigned by Google and provided in the LoA.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleDemarc" })
  googleDemarc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lacpStatus" })
  @Type(() => InterconnectDiagnosticsLinkLACPStatus)
  lacpStatus?: InterconnectDiagnosticsLinkLACPStatus;

  /**
   * Describes the status of MACsec encryption on the link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "macsec" })
  @Type(() => InterconnectDiagnosticsMacsecStatus)
  macsec?: InterconnectDiagnosticsMacsecStatus;

  /**
   * The operational status of the link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operationalStatus" })
  operationalStatus?: InterconnectDiagnosticsLinkStatusOperationalStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "receivingOpticalPower" })
  @Type(() => InterconnectDiagnosticsLinkOpticalPower)
  receivingOpticalPower?: InterconnectDiagnosticsLinkOpticalPower;

  @SpeakeasyMetadata()
  @Expose({ name: "transmittingOpticalPower" })
  @Type(() => InterconnectDiagnosticsLinkOpticalPower)
  transmittingOpticalPower?: InterconnectDiagnosticsLinkOpticalPower;
}
