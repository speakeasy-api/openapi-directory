// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CommonLanguageSettingsDestinationsEnum string

const (
	CommonLanguageSettingsDestinationsEnumClientLibraryDestinationUnspecified CommonLanguageSettingsDestinationsEnum = "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED"
	CommonLanguageSettingsDestinationsEnumGithub                              CommonLanguageSettingsDestinationsEnum = "GITHUB"
	CommonLanguageSettingsDestinationsEnumPackageManager                      CommonLanguageSettingsDestinationsEnum = "PACKAGE_MANAGER"
)

func (e CommonLanguageSettingsDestinationsEnum) ToPointer() *CommonLanguageSettingsDestinationsEnum {
	return &e
}

func (e *CommonLanguageSettingsDestinationsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLIENT_LIBRARY_DESTINATION_UNSPECIFIED":
		fallthrough
	case "GITHUB":
		fallthrough
	case "PACKAGE_MANAGER":
		*e = CommonLanguageSettingsDestinationsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommonLanguageSettingsDestinationsEnum: %v", v)
	}
}

// CommonLanguageSettings - Required information for every language.
type CommonLanguageSettings struct {
	// The destination where API teams want this client library to be published.
	Destinations []CommonLanguageSettingsDestinationsEnum `json:"destinations,omitempty"`
	// Link to automatically generated reference documentation. Example: https://cloud.google.com/nodejs/docs/reference/asset/latest
	ReferenceDocsURI *string `json:"referenceDocsUri,omitempty"`
}
