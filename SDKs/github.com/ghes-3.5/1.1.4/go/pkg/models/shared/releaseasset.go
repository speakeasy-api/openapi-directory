// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ReleaseAssetStateEnum - State of the release asset.
type ReleaseAssetStateEnum string

const (
	ReleaseAssetStateEnumUploaded ReleaseAssetStateEnum = "uploaded"
	ReleaseAssetStateEnumOpen     ReleaseAssetStateEnum = "open"
)

func (e ReleaseAssetStateEnum) ToPointer() *ReleaseAssetStateEnum {
	return &e
}

func (e *ReleaseAssetStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "uploaded":
		fallthrough
	case "open":
		*e = ReleaseAssetStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseAssetStateEnum: %v", v)
	}
}

// ReleaseAsset - Data related to a release.
type ReleaseAsset struct {
	BrowserDownloadURL string    `json:"browser_download_url"`
	ContentType        string    `json:"content_type"`
	CreatedAt          time.Time `json:"created_at"`
	DownloadCount      int64     `json:"download_count"`
	ID                 int64     `json:"id"`
	Label              string    `json:"label"`
	// The file name of the asset.
	Name   string `json:"name"`
	NodeID string `json:"node_id"`
	Size   int64  `json:"size"`
	// State of the release asset.
	State     ReleaseAssetStateEnum `json:"state"`
	UpdatedAt time.Time             `json:"updated_at"`
	// A GitHub user.
	Uploader NullableSimpleUser `json:"uploader"`
	URL      string             `json:"url"`
}
