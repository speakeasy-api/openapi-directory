/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowCxV3WebhookGenericWebService } from "./googleclouddialogflowcxv3webhookgenericwebservice";
import { GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig } from "./googleclouddialogflowcxv3webhookservicedirectoryconfig";
import { Expose, Type } from "class-transformer";

/**
 * Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
 */
export class GoogleCloudDialogflowCxV3Webhook extends SpeakeasyBase {
  /**
   * Indicates whether the webhook is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  /**
   * Required. The human-readable name of the webhook, unique within the agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Represents configuration for a generic web service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "genericWebService" })
  @Type(() => GoogleCloudDialogflowCxV3WebhookGenericWebService)
  genericWebService?: GoogleCloudDialogflowCxV3WebhookGenericWebService;

  /**
   * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceDirectory" })
  @Type(() => GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig)
  serviceDirectory?: GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig;

  /**
   * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout?: string;
}
