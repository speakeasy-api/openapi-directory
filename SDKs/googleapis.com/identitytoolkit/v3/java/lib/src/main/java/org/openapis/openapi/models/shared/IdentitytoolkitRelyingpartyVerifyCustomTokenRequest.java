/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IdentitytoolkitRelyingpartyVerifyCustomTokenRequest - Request to verify a custom token
 */
public class IdentitytoolkitRelyingpartyVerifyCustomTokenRequest {
    /**
     * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delegatedProjectNumber")
    public String delegatedProjectNumber;

    public IdentitytoolkitRelyingpartyVerifyCustomTokenRequest withDelegatedProjectNumber(String delegatedProjectNumber) {
        this.delegatedProjectNumber = delegatedProjectNumber;
        return this;
    }
    
    /**
     * Instance id token of the app.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceId")
    public String instanceId;

    public IdentitytoolkitRelyingpartyVerifyCustomTokenRequest withInstanceId(String instanceId) {
        this.instanceId = instanceId;
        return this;
    }
    
    /**
     * Whether return sts id token and refresh token instead of gitkit token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnSecureToken")
    public Boolean returnSecureToken;

    public IdentitytoolkitRelyingpartyVerifyCustomTokenRequest withReturnSecureToken(Boolean returnSecureToken) {
        this.returnSecureToken = returnSecureToken;
        return this;
    }
    
    /**
     * The custom token to verify
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public String token;

    public IdentitytoolkitRelyingpartyVerifyCustomTokenRequest withToken(String token) {
        this.token = token;
        return this;
    }
    
    public IdentitytoolkitRelyingpartyVerifyCustomTokenRequest(){}
}
