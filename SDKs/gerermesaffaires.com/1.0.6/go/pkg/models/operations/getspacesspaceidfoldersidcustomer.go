// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesSpaceIDFoldersIDCustomerPathParams struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type GetSpacesSpaceIDFoldersIDCustomerRequest struct {
	PathParams GetSpacesSpaceIDFoldersIDCustomerPathParams
}

type GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONActors struct {
	Active   *string `json:"Active,omitempty"`
	IsAdmin  *string `json:"IsAdmin,omitempty"`
	MemberID *string `json:"MemberId,omitempty"`
	Name     *string `json:"Name,omitempty"`
	Role     *string `json:"Role,omitempty"`
}

type GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum string

const (
	GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnumConfidential GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum = "confidential"
	GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnumRegular      GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum = "regular"
	GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnumPublic       GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum = "public"
)

func (e *GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum: %s", s)
	}
}

// GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSON - A customer folder
type GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSON struct {
	About                 *string                                                       `json:"About,omitempty"`
	Actors                []GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONActors   `json:"Actors,omitempty"`
	ArchivalDate          *string                                                       `json:"ArchivalDate,omitempty"`
	Class                 *string                                                       `json:"Class,omitempty"`
	ClientSpaceID         *string                                                       `json:"ClientSpaceId,omitempty"`
	Comment               *string                                                       `json:"Comment,omitempty"`
	CustomerNumber        *string                                                       `json:"CustomerNumber,omitempty"`
	Designation           *string                                                       `json:"Designation,omitempty"`
	End                   *string                                                       `json:"End,omitempty"`
	Home                  *bool                                                         `json:"Home,omitempty"`
	ID                    *string                                                       `json:"Id,omitempty"`
	Keywords              []string                                                      `json:"Keywords,omitempty"`
	Level                 *GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONLevelEnum `json:"Level,omitempty"`
	ModificationDate      *string                                                       `json:"ModificationDate,omitempty"`
	Name                  *string                                                       `json:"Name,omitempty"`
	Parent                *string                                                       `json:"Parent,omitempty"`
	PortfolioID           *string                                                       `json:"PortfolioId,omitempty"`
	SecondaryPortfolioIds []string                                                      `json:"SecondaryPortfolioIds,omitempty"`
	Start                 *string                                                       `json:"Start,omitempty"`
}

type GetSpacesSpaceIDFoldersIDCustomerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A customer folder
	GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSONObject *GetSpacesSpaceIDFoldersIDCustomer200ApplicationJSON
}
