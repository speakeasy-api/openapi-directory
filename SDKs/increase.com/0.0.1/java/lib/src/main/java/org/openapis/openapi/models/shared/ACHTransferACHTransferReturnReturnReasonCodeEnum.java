/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * ACHTransferACHTransferReturnReturnReasonCodeEnum - Why the ACH Transfer was returned.
 */
public enum ACHTransferACHTransferReturnReturnReasonCodeEnum {
    INSUFFICIENT_FUND("insufficient_fund"),
    NO_ACCOUNT("no_account"),
    ACCOUNT_CLOSED("account_closed"),
    INVALID_ACCOUNT_NUMBER_STRUCTURE("invalid_account_number_structure"),
    ACCOUNT_FROZEN_ENTRY_RETURNED_PER_OFAC_INSTRUCTION("account_frozen_entry_returned_per_ofac_instruction"),
    CREDIT_ENTRY_REFUSED_BY_RECEIVER("credit_entry_refused_by_receiver"),
    UNAUTHORIZED_DEBIT_TO_CONSUMER_ACCOUNT_USING_CORPORATE_SEC_CODE("unauthorized_debit_to_consumer_account_using_corporate_sec_code"),
    CORPORATE_CUSTOMER_ADVISED_NOT_AUTHORIZED("corporate_customer_advised_not_authorized"),
    PAYMENT_STOPPED("payment_stopped"),
    NON_TRANSACTION_ACCOUNT("non_transaction_account"),
    UNCOLLECTED_FUNDS("uncollected_funds"),
    ROUTING_NUMBER_CHECK_DIGIT_ERROR("routing_number_check_digit_error"),
    CUSTOMER_ADVISED_UNAUTHORIZED_IMPROPER_INELIGIBLE_OR_INCOMPLETE("customer_advised_unauthorized_improper_ineligible_or_incomplete"),
    AMOUNT_FIELD_ERROR("amount_field_error"),
    AUTHORIZATION_REVOKED_BY_CUSTOMER("authorization_revoked_by_customer"),
    INVALID_ACH_ROUTING_NUMBER("invalid_ach_routing_number"),
    FILE_RECORD_EDIT_CRITERIA("file_record_edit_criteria"),
    ENR_INVALID_INDIVIDUAL_NAME("enr_invalid_individual_name"),
    RETURNED_PER_ODFI_REQUEST("returned_per_odfi_request"),
    ADDENDA_ERROR("addenda_error"),
    LIMITED_PARTICIPATION_DFI("limited_participation_dfi"),
    INCORRECTLY_CODED_OUTBOUND_INTERNATIONAL_PAYMENT("incorrectly_coded_outbound_international_payment"),
    OTHER("other");

    @JsonValue
    public final String value;

    private ACHTransferACHTransferReturnReturnReasonCodeEnum(String value) {
        this.value = value;
    }
}
