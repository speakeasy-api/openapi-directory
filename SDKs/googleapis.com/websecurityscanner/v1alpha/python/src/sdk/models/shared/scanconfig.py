"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import authentication as shared_authentication
from ..shared import scanrun as shared_scanrun
from ..shared import schedule as shared_schedule
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ScanConfigTargetPlatformsEnum(str, Enum):
    TARGET_PLATFORM_UNSPECIFIED = 'TARGET_PLATFORM_UNSPECIFIED'
    APP_ENGINE = 'APP_ENGINE'
    COMPUTE = 'COMPUTE'
    CLOUD_RUN = 'CLOUD_RUN'
    CLOUD_FUNCTIONS = 'CLOUD_FUNCTIONS'

class ScanConfigUserAgentEnum(str, Enum):
    r"""The user agent used during scanning."""
    USER_AGENT_UNSPECIFIED = 'USER_AGENT_UNSPECIFIED'
    CHROME_LINUX = 'CHROME_LINUX'
    CHROME_ANDROID = 'CHROME_ANDROID'
    SAFARI_IPHONE = 'SAFARI_IPHONE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScanConfig:
    r"""A ScanConfig resource contains the configurations to launch a scan. next id: 12"""
    
    authentication: Optional[shared_authentication.Authentication] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authentication'), 'exclude': lambda f: f is None }})
    r"""Scan authentication configuration."""  
    blacklist_patterns: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blacklistPatterns'), 'exclude': lambda f: f is None }})
    r"""The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls"""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The user provided display name of the ScanConfig."""  
    latest_run: Optional[shared_scanrun.ScanRun] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latestRun'), 'exclude': lambda f: f is None }})
    r"""A ScanRun is a output-only resource representing an actual run of the scan."""  
    max_qps: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxQps'), 'exclude': lambda f: f is None }})
    r"""The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system."""  
    schedule: Optional[shared_schedule.Schedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedule'), 'exclude': lambda f: f is None }})
    r"""Scan schedule configuration."""  
    starting_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startingUrls'), 'exclude': lambda f: f is None }})
    r"""Required. The starting URLs from which the scanner finds site pages."""  
    target_platforms: Optional[list[ScanConfigTargetPlatformsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetPlatforms'), 'exclude': lambda f: f is None }})
    r"""Set of Google Cloud platforms targeted by the scan. If empty, APP_ENGINE will be used as a default."""  
    user_agent: Optional[ScanConfigUserAgentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userAgent'), 'exclude': lambda f: f is None }})
    r"""The user agent used during scanning."""  
    