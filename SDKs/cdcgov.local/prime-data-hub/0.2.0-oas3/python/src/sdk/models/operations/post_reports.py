"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import report as shared_report
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class PostReportsSecurity:
    
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'x-functions-key' }})  
    
class PostReportsOptionEnum(str, Enum):
    r"""Optional ways to process the request"""
    VALIDATE_PAYLOAD = 'ValidatePayload'
    CHECK_CONNECTIONS = 'CheckConnections'
    SEND_IMMEDIATELY = 'SendImmediately'
    SKIP_SEND = 'SkipSend'
    SKIP_INVALID_ITEMS = 'SkipInvalidItems'


@dataclasses.dataclass
class PostReportsRequest:
    
    client: str = dataclasses.field(metadata={'query_param': { 'field_name': 'client', 'style': 'form', 'explode': True }})
    r"""The client's name that matches the client name in metadata"""  
    request_body: str = dataclasses.field(metadata={'request': { 'media_type': 'text/csv' }})
    r"""The public health information being routed"""  
    default: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'default', 'style': 'form', 'explode': False }})
    r"""Dynamic default values for an element. ':' or %3A is used to seperate element name and value"""  
    option: Optional[PostReportsOptionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'option', 'style': 'form', 'explode': True }})
    r"""Optional ways to process the request"""  
    route_to: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'routeTo', 'style': 'form', 'explode': True }})
    r"""A comma speparated list of receiver names. Limit the list of possible receivers to these receivers."""  
    

@dataclasses.dataclass
class PostReportsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    report: Optional[shared_report.Report] = dataclasses.field(default=None)
    r"""OK"""  
    