<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BackupConfiguration - Database instance backup configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BackupConfiguration
{
    /**
     * We currently only support backup retention by specifying the number of backups we will retain.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BackupRetentionSettings $backupRetentionSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('backupRetentionSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BackupRetentionSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BackupRetentionSettings $backupRetentionSettings = null;
    
    /**
     * (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.
     * 
     * @var ?bool $binaryLogEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('binaryLogEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $binaryLogEnabled = null;
    
    /**
     * Whether this configuration is enabled.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * This is always `sql#backupConfiguration`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Location of the backup
     * 
     * @var ?string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $location = null;
    
    /**
     * (Postgres only) Whether point in time recovery is enabled.
     * 
     * @var ?bool $pointInTimeRecoveryEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('pointInTimeRecoveryEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pointInTimeRecoveryEnabled = null;
    
    /**
     * Reserved for future use.
     * 
     * @var ?bool $replicationLogArchivingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicationLogArchivingEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $replicationLogArchivingEnabled = null;
    
    /**
     * Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * The number of days of transaction logs we retain for point in time restore, from 1-7.
     * 
     * @var ?int $transactionLogRetentionDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionLogRetentionDays')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $transactionLogRetentionDays = null;
    
	public function __construct()
	{
		$this->backupRetentionSettings = null;
		$this->binaryLogEnabled = null;
		$this->enabled = null;
		$this->kind = null;
		$this->location = null;
		$this->pointInTimeRecoveryEnabled = null;
		$this->replicationLogArchivingEnabled = null;
		$this->startTime = null;
		$this->transactionLogRetentionDays = null;
	}
}
