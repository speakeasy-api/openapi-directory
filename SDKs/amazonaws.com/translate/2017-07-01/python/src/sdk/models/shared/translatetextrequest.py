"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import translationsettings as shared_translationsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TranslateTextRequest:
    
    source_language_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceLanguageCode') }})  
    target_language_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetLanguageCode') }})  
    text: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Text') }})  
    settings: Optional[shared_translationsettings.TranslationSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Settings'), 'exclude': lambda f: f is None }})  
    terminology_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TerminologyNames'), 'exclude': lambda f: f is None }})  
    