<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CloudInterconnectWorkload - Specifies usage for Cloud Interconnect resources.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CloudInterconnectWorkload
{
    /**
     * VLAN attachment used for interconnect.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\VlanAttachment> $interconnectAttachments
     */
	#[\JMS\Serializer\Annotation\SerializedName('interconnectAttachments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\VlanAttachment>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $interconnectAttachments = null;
    
    /**
     * Vlan attachment type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CloudInterconnectWorkloadInterconnectTypeEnum $interconnectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('interconnectType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CloudInterconnectWorkloadInterconnectTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CloudInterconnectWorkloadInterconnectTypeEnum $interconnectType = null;
    
    /**
     * Interconnect circuit link type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CloudInterconnectWorkloadLinkTypeEnum $linkType
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CloudInterconnectWorkloadLinkTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CloudInterconnectWorkloadLinkTypeEnum $linkType = null;
    
    /**
     * An amount of usage over a time frame.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Usage $provisionedLinkCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('provisionedLinkCount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Usage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Usage $provisionedLinkCount = null;
    
	public function __construct()
	{
		$this->interconnectAttachments = null;
		$this->interconnectType = null;
		$this->linkType = null;
		$this->provisionedLinkCount = null;
	}
}
