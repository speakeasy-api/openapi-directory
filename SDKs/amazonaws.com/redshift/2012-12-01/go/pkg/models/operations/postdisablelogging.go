// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDisableLoggingActionEnum
type POSTDisableLoggingActionEnum string

const (
	POSTDisableLoggingActionEnumDisableLogging POSTDisableLoggingActionEnum = "DisableLogging"
)

func (e POSTDisableLoggingActionEnum) ToPointer() *POSTDisableLoggingActionEnum {
	return &e
}

func (e *POSTDisableLoggingActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DisableLogging":
		*e = POSTDisableLoggingActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDisableLoggingActionEnum: %v", v)
	}
}

// POSTDisableLoggingVersionEnum
type POSTDisableLoggingVersionEnum string

const (
	POSTDisableLoggingVersionEnumTwoThousandAndTwelve1201 POSTDisableLoggingVersionEnum = "2012-12-01"
)

func (e POSTDisableLoggingVersionEnum) ToPointer() *POSTDisableLoggingVersionEnum {
	return &e
}

func (e *POSTDisableLoggingVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = POSTDisableLoggingVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDisableLoggingVersionEnum: %v", v)
	}
}

type POSTDisableLoggingRequest struct {
	Action            POSTDisableLoggingActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTDisableLoggingVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDisableLoggingResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
