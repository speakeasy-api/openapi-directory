/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class PlayerReceiving extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FantasyPoints" })
  fantasyPoints?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "FantasyPosition" })
  fantasyPosition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FumblesLost" })
  fumblesLost?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Number" })
  number?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PlayerGameID" })
  playerGameID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PlayerID" })
  playerID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Position" })
  position?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PositionCategory" })
  positionCategory?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceivingLong" })
  receivingLong?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceivingTargets" })
  receivingTargets?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceivingTouchdowns" })
  receivingTouchdowns?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceivingYards" })
  receivingYards?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceivingYardsPerReception" })
  receivingYardsPerReception?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceivingYardsPerTarget" })
  receivingYardsPerTarget?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ReceptionPercentage" })
  receptionPercentage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Receptions" })
  receptions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ShortName" })
  shortName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Team" })
  team?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TwoPointConversionReceptions" })
  twoPointConversionReceptions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Updated" })
  updated?: string;
}
