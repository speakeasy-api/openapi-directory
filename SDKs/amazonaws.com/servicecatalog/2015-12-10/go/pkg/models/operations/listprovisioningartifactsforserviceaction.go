// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListProvisioningArtifactsForServiceActionQueryParams struct {
	// Pagination limit
	PageSize *string `queryParam:"style=form,explode=true,name=PageSize"`
	// Pagination token
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
}

// ListProvisioningArtifactsForServiceActionXAmzTargetEnum
type ListProvisioningArtifactsForServiceActionXAmzTargetEnum string

const (
	ListProvisioningArtifactsForServiceActionXAmzTargetEnumAws242ServiceCatalogServiceListProvisioningArtifactsForServiceAction ListProvisioningArtifactsForServiceActionXAmzTargetEnum = "AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction"
)

func (e *ListProvisioningArtifactsForServiceActionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.ListProvisioningArtifactsForServiceAction":
		*e = ListProvisioningArtifactsForServiceActionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListProvisioningArtifactsForServiceActionXAmzTargetEnum: %s", s)
	}
}

type ListProvisioningArtifactsForServiceActionHeaders struct {
	XAmzAlgorithm     *string                                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListProvisioningArtifactsForServiceActionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListProvisioningArtifactsForServiceActionRequest struct {
	QueryParams ListProvisioningArtifactsForServiceActionQueryParams
	Headers     ListProvisioningArtifactsForServiceActionHeaders
	Request     shared.ListProvisioningArtifactsForServiceActionInput `request:"mediaType=application/json"`
}

type ListProvisioningArtifactsForServiceActionResponse struct {
	ContentType string
	// InvalidParametersException
	InvalidParametersException interface{}
	// Success
	ListProvisioningArtifactsForServiceActionOutput *shared.ListProvisioningArtifactsForServiceActionOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
