"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskStatistics:
    r"""Statistics for the checks performed during the audit."""
    
    canceled_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canceledChecks'), 'exclude': lambda f: f is None }})  
    compliant_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compliantChecks'), 'exclude': lambda f: f is None }})  
    failed_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failedChecks'), 'exclude': lambda f: f is None }})  
    in_progress_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inProgressChecks'), 'exclude': lambda f: f is None }})  
    non_compliant_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nonCompliantChecks'), 'exclude': lambda f: f is None }})  
    total_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalChecks'), 'exclude': lambda f: f is None }})  
    waiting_for_data_collection_checks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitingForDataCollectionChecks'), 'exclude': lambda f: f is None }})  
    