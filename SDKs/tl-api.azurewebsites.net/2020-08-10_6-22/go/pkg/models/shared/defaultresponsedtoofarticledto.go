// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"bytes"
	"encoding/json"
	"errors"
)

type DefaultResponseDTOOfArticleDTOResultType string

const (
	DefaultResponseDTOOfArticleDTOResultTypeArticleDTO DefaultResponseDTOOfArticleDTOResultType = "ArticleDTO"
)

type DefaultResponseDTOOfArticleDTOResult struct {
	ArticleDTO *ArticleDTO

	Type DefaultResponseDTOOfArticleDTOResultType
}

func CreateDefaultResponseDTOOfArticleDTOResultArticleDTO(articleDTO ArticleDTO) DefaultResponseDTOOfArticleDTOResult {
	typ := DefaultResponseDTOOfArticleDTOResultTypeArticleDTO

	return DefaultResponseDTOOfArticleDTOResult{
		ArticleDTO: &articleDTO,
		Type:       typ,
	}
}

func (u *DefaultResponseDTOOfArticleDTOResult) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	articleDTO := new(ArticleDTO)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&articleDTO); err == nil {
		u.ArticleDTO = articleDTO
		u.Type = DefaultResponseDTOOfArticleDTOResultTypeArticleDTO
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u DefaultResponseDTOOfArticleDTOResult) MarshalJSON() ([]byte, error) {
	if u.ArticleDTO != nil {
		return json.Marshal(u.ArticleDTO)
	}

	return nil, nil
}

// DefaultResponseDTOOfArticleDTO - The DefaultResponseDTO Class.
// Contains fields of DefaultResponse DTO in application.
type DefaultResponseDTOOfArticleDTO struct {
	IsError           *bool                                 `json:"isError,omitempty"`
	Message           *string                               `json:"message,omitempty"`
	ResponseException interface{}                           `json:"responseException,omitempty"`
	Result            *DefaultResponseDTOOfArticleDTOResult `json:"result,omitempty"`
}
