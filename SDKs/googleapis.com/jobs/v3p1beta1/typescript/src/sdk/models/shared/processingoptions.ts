/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Optional. Option for job HTML content sanitization. Applied fields are: * description * applicationInfo.instruction * incentives * qualifications * responsibilities HTML tags in these fields may be stripped if sanitiazation is not disabled. Defaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY.
 */
export enum ProcessingOptionsHtmlSanitizationEnum {
  HtmlSanitizationUnspecified = "HTML_SANITIZATION_UNSPECIFIED",
  HtmlSanitizationDisabled = "HTML_SANITIZATION_DISABLED",
  SimpleFormattingOnly = "SIMPLE_FORMATTING_ONLY",
}

/**
 * Input only. Options for job processing.
 */
export class ProcessingOptions extends SpeakeasyBase {
  /**
   * Optional. If set to `true`, the service does not attempt to resolve a more precise address for the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disableStreetAddressResolution" })
  disableStreetAddressResolution?: boolean;

  /**
   * Optional. Option for job HTML content sanitization. Applied fields are: * description * applicationInfo.instruction * incentives * qualifications * responsibilities HTML tags in these fields may be stripped if sanitiazation is not disabled. Defaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlSanitization" })
  htmlSanitization?: ProcessingOptionsHtmlSanitizationEnum;
}
