// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EcommerceDataActionTypeEnum - Action associated with this e-commerce action.
type EcommerceDataActionTypeEnum string

const (
	EcommerceDataActionTypeEnumUnknown        EcommerceDataActionTypeEnum = "UNKNOWN"
	EcommerceDataActionTypeEnumClick          EcommerceDataActionTypeEnum = "CLICK"
	EcommerceDataActionTypeEnumDetailsView    EcommerceDataActionTypeEnum = "DETAILS_VIEW"
	EcommerceDataActionTypeEnumAddToCart      EcommerceDataActionTypeEnum = "ADD_TO_CART"
	EcommerceDataActionTypeEnumRemoveFromCart EcommerceDataActionTypeEnum = "REMOVE_FROM_CART"
	EcommerceDataActionTypeEnumCheckout       EcommerceDataActionTypeEnum = "CHECKOUT"
	EcommerceDataActionTypeEnumPayment        EcommerceDataActionTypeEnum = "PAYMENT"
	EcommerceDataActionTypeEnumRefund         EcommerceDataActionTypeEnum = "REFUND"
	EcommerceDataActionTypeEnumCheckoutOption EcommerceDataActionTypeEnum = "CHECKOUT_OPTION"
)

func (e *EcommerceDataActionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "CLICK":
		fallthrough
	case "DETAILS_VIEW":
		fallthrough
	case "ADD_TO_CART":
		fallthrough
	case "REMOVE_FROM_CART":
		fallthrough
	case "CHECKOUT":
		fallthrough
	case "PAYMENT":
		fallthrough
	case "REFUND":
		fallthrough
	case "CHECKOUT_OPTION":
		*e = EcommerceDataActionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceDataActionTypeEnum: %s", s)
	}
}

// EcommerceDataEcommerceTypeEnum - The type of this e-commerce activity.
type EcommerceDataEcommerceTypeEnum string

const (
	EcommerceDataEcommerceTypeEnumEcommerceTypeUnspecified EcommerceDataEcommerceTypeEnum = "ECOMMERCE_TYPE_UNSPECIFIED"
	EcommerceDataEcommerceTypeEnumClassic                  EcommerceDataEcommerceTypeEnum = "CLASSIC"
	EcommerceDataEcommerceTypeEnumEnhanced                 EcommerceDataEcommerceTypeEnum = "ENHANCED"
)

func (e *EcommerceDataEcommerceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ECOMMERCE_TYPE_UNSPECIFIED":
		fallthrough
	case "CLASSIC":
		fallthrough
	case "ENHANCED":
		*e = EcommerceDataEcommerceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceDataEcommerceTypeEnum: %s", s)
	}
}

// EcommerceData - E-commerce details associated with the user activity.
type EcommerceData struct {
	// Action associated with this e-commerce action.
	ActionType *EcommerceDataActionTypeEnum `json:"actionType,omitempty"`
	// The type of this e-commerce activity.
	EcommerceType *EcommerceDataEcommerceTypeEnum `json:"ecommerceType,omitempty"`
	// Details of the products in this transaction.
	Products []ProductData `json:"products,omitempty"`
	// Represents details collected when the visitor performs a transaction on the page.
	Transaction *TransactionData `json:"transaction,omitempty"`
}
