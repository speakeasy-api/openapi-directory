"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CheckoutCustomFieldFieldsAreaEnum(str, Enum):
    r"""Area of the CheckoutCustomField"""
    CONTACT = 'contact'
    BILLING_SHIPPING = 'billing_shipping'
    OTHER = 'other'

class CheckoutCustomFieldFieldsTypeEnum(str, Enum):
    r"""Type of the CheckoutCustomField"""
    TEXT = 'text'
    SELECT = 'select'
    INPUT = 'input'
    CHECKBOX = 'checkbox'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckoutCustomFieldFields:
    
    area: Optional[CheckoutCustomFieldFieldsAreaEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('area'), 'exclude': lambda f: f is None }})
    r"""Area of the CheckoutCustomField"""  
    custom_field_select_options: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_field_select_options'), 'exclude': lambda f: f is None }})
    r"""The values for the CheckoutCustomField selection"""  
    deletable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deletable'), 'exclude': lambda f: f is None }})
    r"""True if the CheckoutCustomField can be removed from the store"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the CheckoutCustomField"""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""Label given to the CheckoutCustomField"""  
    position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Position of the CheckoutCustomField"""  
    required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required'), 'exclude': lambda f: f is None }})
    r"""True if the CheckoutCustomField is mandatory"""  
    type: Optional[CheckoutCustomFieldFieldsTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the CheckoutCustomField"""  
    