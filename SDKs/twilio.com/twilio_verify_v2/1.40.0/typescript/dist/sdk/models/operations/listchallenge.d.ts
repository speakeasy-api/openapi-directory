import { SpeakeasyBase } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export declare const ListChallengeServerList: readonly ["https://verify.twilio.com"];
export declare class ListChallengeSecurity extends SpeakeasyBase {
    password: string;
    username: string;
}
export declare class ListChallengeRequest extends SpeakeasyBase {
    /**
     * The unique SID identifier of the Factor.
     */
    factorSid?: string;
    /**
     * Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
     */
    identity: string;
    /**
     * The desired sort order of the Challenges list. One of `asc` or `desc` for ascending and descending respectively. Defaults to `asc`.
     */
    order?: shared.ChallengeEnumListOrdersEnum;
    /**
     * The page index. This value is simply for client state.
     */
    page?: number;
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     */
    pageSize?: number;
    /**
     * The page token. This is provided by the API.
     */
    pageToken?: string;
    /**
     * The unique SID identifier of the Service.
     */
    serviceSid: string;
    /**
     * The Status of the Challenges to fetch. One of `pending`, `expired`, `approved` or `denied`.
     */
    status?: shared.ChallengeEnumChallengeStatusesEnum;
}
export declare class ListChallengeListChallengeResponseMeta extends SpeakeasyBase {
    firstPageUrl?: string;
    key?: string;
    nextPageUrl?: string;
    page?: number;
    pageSize?: number;
    previousPageUrl?: string;
    url?: string;
}
/**
 * OK
 */
export declare class ListChallengeListChallengeResponse extends SpeakeasyBase {
    challenges?: shared.VerifyV2ServiceEntityChallenge[];
    meta?: ListChallengeListChallengeResponseMeta;
}
export declare class ListChallengeResponse extends SpeakeasyBase {
    contentType: string;
    /**
     * OK
     */
    listChallengeResponse?: ListChallengeListChallengeResponse;
    statusCode: number;
    rawResponse?: AxiosResponse;
}
