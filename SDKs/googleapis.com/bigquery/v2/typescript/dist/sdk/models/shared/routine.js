"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Routine = exports.RoutineInput = exports.RoutineRoutineTypeEnum = exports.RoutineLanguageEnum = exports.RoutineDeterminismLevelEnum = void 0;
var utils_1 = require("../../../internal/utils");
var argument_1 = require("./argument");
var remotefunctionoptions_1 = require("./remotefunctionoptions");
var routinereference_1 = require("./routinereference");
var sparkoptions_1 = require("./sparkoptions");
var standardsqldatatype_1 = require("./standardsqldatatype");
var standardsqltabletype_1 = require("./standardsqltabletype");
var class_transformer_1 = require("class-transformer");
/**
 * Optional. The determinism level of the JavaScript UDF, if defined.
 */
var RoutineDeterminismLevelEnum;
(function (RoutineDeterminismLevelEnum) {
    RoutineDeterminismLevelEnum["DeterminismLevelUnspecified"] = "DETERMINISM_LEVEL_UNSPECIFIED";
    RoutineDeterminismLevelEnum["Deterministic"] = "DETERMINISTIC";
    RoutineDeterminismLevelEnum["NotDeterministic"] = "NOT_DETERMINISTIC";
})(RoutineDeterminismLevelEnum = exports.RoutineDeterminismLevelEnum || (exports.RoutineDeterminismLevelEnum = {}));
/**
 * Optional. Defaults to "SQL" if remote_function_options field is absent, not set otherwise.
 */
var RoutineLanguageEnum;
(function (RoutineLanguageEnum) {
    RoutineLanguageEnum["LanguageUnspecified"] = "LANGUAGE_UNSPECIFIED";
    RoutineLanguageEnum["Sql"] = "SQL";
    RoutineLanguageEnum["Javascript"] = "JAVASCRIPT";
    RoutineLanguageEnum["Python"] = "PYTHON";
    RoutineLanguageEnum["Java"] = "JAVA";
    RoutineLanguageEnum["Scala"] = "SCALA";
})(RoutineLanguageEnum = exports.RoutineLanguageEnum || (exports.RoutineLanguageEnum = {}));
/**
 * Required. The type of routine.
 */
var RoutineRoutineTypeEnum;
(function (RoutineRoutineTypeEnum) {
    RoutineRoutineTypeEnum["RoutineTypeUnspecified"] = "ROUTINE_TYPE_UNSPECIFIED";
    RoutineRoutineTypeEnum["ScalarFunction"] = "SCALAR_FUNCTION";
    RoutineRoutineTypeEnum["Procedure"] = "PROCEDURE";
    RoutineRoutineTypeEnum["TableValuedFunction"] = "TABLE_VALUED_FUNCTION";
})(RoutineRoutineTypeEnum = exports.RoutineRoutineTypeEnum || (exports.RoutineRoutineTypeEnum = {}));
/**
 * A user-defined function or a stored procedure.
 */
var RoutineInput = /** @class */ (function (_super) {
    __extends(RoutineInput, _super);
    function RoutineInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: argument_1.Argument }),
        (0, class_transformer_1.Expose)({ name: "arguments" }),
        (0, class_transformer_1.Type)(function () { return argument_1.Argument; }),
        __metadata("design:type", Array)
    ], RoutineInput.prototype, "arguments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "definitionBody" }),
        __metadata("design:type", String)
    ], RoutineInput.prototype, "definitionBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], RoutineInput.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "determinismLevel" }),
        __metadata("design:type", String)
    ], RoutineInput.prototype, "determinismLevel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "importedLibraries" }),
        __metadata("design:type", Array)
    ], RoutineInput.prototype, "importedLibraries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "language" }),
        __metadata("design:type", String)
    ], RoutineInput.prototype, "language", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remoteFunctionOptions" }),
        (0, class_transformer_1.Type)(function () { return remotefunctionoptions_1.RemoteFunctionOptions; }),
        __metadata("design:type", remotefunctionoptions_1.RemoteFunctionOptions)
    ], RoutineInput.prototype, "remoteFunctionOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "returnTableType" }),
        (0, class_transformer_1.Type)(function () { return standardsqltabletype_1.StandardSqlTableType; }),
        __metadata("design:type", standardsqltabletype_1.StandardSqlTableType)
    ], RoutineInput.prototype, "returnTableType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "returnType" }),
        (0, class_transformer_1.Type)(function () { return standardsqldatatype_1.StandardSqlDataType; }),
        __metadata("design:type", standardsqldatatype_1.StandardSqlDataType)
    ], RoutineInput.prototype, "returnType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routineReference" }),
        (0, class_transformer_1.Type)(function () { return routinereference_1.RoutineReference; }),
        __metadata("design:type", routinereference_1.RoutineReference)
    ], RoutineInput.prototype, "routineReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routineType" }),
        __metadata("design:type", String)
    ], RoutineInput.prototype, "routineType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sparkOptions" }),
        (0, class_transformer_1.Type)(function () { return sparkoptions_1.SparkOptions; }),
        __metadata("design:type", sparkoptions_1.SparkOptions)
    ], RoutineInput.prototype, "sparkOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "strictMode" }),
        __metadata("design:type", Boolean)
    ], RoutineInput.prototype, "strictMode", void 0);
    return RoutineInput;
}(utils_1.SpeakeasyBase));
exports.RoutineInput = RoutineInput;
/**
 * A user-defined function or a stored procedure.
 */
var Routine = /** @class */ (function (_super) {
    __extends(Routine, _super);
    function Routine() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: argument_1.Argument }),
        (0, class_transformer_1.Expose)({ name: "arguments" }),
        (0, class_transformer_1.Type)(function () { return argument_1.Argument; }),
        __metadata("design:type", Array)
    ], Routine.prototype, "arguments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTime" }),
        __metadata("design:type", String)
    ], Routine.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "definitionBody" }),
        __metadata("design:type", String)
    ], Routine.prototype, "definitionBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Routine.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "determinismLevel" }),
        __metadata("design:type", String)
    ], Routine.prototype, "determinismLevel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], Routine.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "importedLibraries" }),
        __metadata("design:type", Array)
    ], Routine.prototype, "importedLibraries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "language" }),
        __metadata("design:type", String)
    ], Routine.prototype, "language", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastModifiedTime" }),
        __metadata("design:type", String)
    ], Routine.prototype, "lastModifiedTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "remoteFunctionOptions" }),
        (0, class_transformer_1.Type)(function () { return remotefunctionoptions_1.RemoteFunctionOptions; }),
        __metadata("design:type", remotefunctionoptions_1.RemoteFunctionOptions)
    ], Routine.prototype, "remoteFunctionOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "returnTableType" }),
        (0, class_transformer_1.Type)(function () { return standardsqltabletype_1.StandardSqlTableType; }),
        __metadata("design:type", standardsqltabletype_1.StandardSqlTableType)
    ], Routine.prototype, "returnTableType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "returnType" }),
        (0, class_transformer_1.Type)(function () { return standardsqldatatype_1.StandardSqlDataType; }),
        __metadata("design:type", standardsqldatatype_1.StandardSqlDataType)
    ], Routine.prototype, "returnType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routineReference" }),
        (0, class_transformer_1.Type)(function () { return routinereference_1.RoutineReference; }),
        __metadata("design:type", routinereference_1.RoutineReference)
    ], Routine.prototype, "routineReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routineType" }),
        __metadata("design:type", String)
    ], Routine.prototype, "routineType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sparkOptions" }),
        (0, class_transformer_1.Type)(function () { return sparkoptions_1.SparkOptions; }),
        __metadata("design:type", sparkoptions_1.SparkOptions)
    ], Routine.prototype, "sparkOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "strictMode" }),
        __metadata("design:type", Boolean)
    ], Routine.prototype, "strictMode", void 0);
    return Routine;
}(utils_1.SpeakeasyBase));
exports.Routine = Routine;
