// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConferenceParticipantEnumJitterBufferSizeEnum string

const (
	ConferenceParticipantEnumJitterBufferSizeEnumLarge  ConferenceParticipantEnumJitterBufferSizeEnum = "large"
	ConferenceParticipantEnumJitterBufferSizeEnumSmall  ConferenceParticipantEnumJitterBufferSizeEnum = "small"
	ConferenceParticipantEnumJitterBufferSizeEnumMedium ConferenceParticipantEnumJitterBufferSizeEnum = "medium"
	ConferenceParticipantEnumJitterBufferSizeEnumOff    ConferenceParticipantEnumJitterBufferSizeEnum = "off"
)

func (e *ConferenceParticipantEnumJitterBufferSizeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "large":
		fallthrough
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "off":
		*e = ConferenceParticipantEnumJitterBufferSizeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceParticipantEnumJitterBufferSizeEnum: %s", s)
	}
}
