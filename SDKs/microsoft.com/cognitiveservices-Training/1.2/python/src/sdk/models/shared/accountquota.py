"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import perprojectquota as shared_perprojectquota
from ..shared import quota as shared_quota
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountQuota:
    r"""Represents a set of quotas associated with an account"""
    
    per_project: Optional[list[shared_perprojectquota.PerProjectQuota]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PerProject'), 'exclude': lambda f: f is None }})
    r"""Gets a list of quotas that apply per-project for each project"""  
    predictions: Optional[shared_quota.Quota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Predictions'), 'exclude': lambda f: f is None }})
    r"""Represents a quota"""  
    projects: Optional[shared_quota.Quota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Projects'), 'exclude': lambda f: f is None }})
    r"""Represents a quota"""  
    tier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tier'), 'exclude': lambda f: f is None }})
    r"""Gets the tier of user"""  
    