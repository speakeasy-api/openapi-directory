// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProfileProfileTypeEnum - Type of profile. For offline mode, this must be specified when creating the profile. For online mode it is assigned and returned by the server.
type ProfileProfileTypeEnum string

const (
	ProfileProfileTypeEnumProfileTypeUnspecified ProfileProfileTypeEnum = "PROFILE_TYPE_UNSPECIFIED"
	ProfileProfileTypeEnumCPU                    ProfileProfileTypeEnum = "CPU"
	ProfileProfileTypeEnumWall                   ProfileProfileTypeEnum = "WALL"
	ProfileProfileTypeEnumHeap                   ProfileProfileTypeEnum = "HEAP"
	ProfileProfileTypeEnumThreads                ProfileProfileTypeEnum = "THREADS"
	ProfileProfileTypeEnumContention             ProfileProfileTypeEnum = "CONTENTION"
	ProfileProfileTypeEnumPeakHeap               ProfileProfileTypeEnum = "PEAK_HEAP"
	ProfileProfileTypeEnumHeapAlloc              ProfileProfileTypeEnum = "HEAP_ALLOC"
)

func (e ProfileProfileTypeEnum) ToPointer() *ProfileProfileTypeEnum {
	return &e
}

func (e *ProfileProfileTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROFILE_TYPE_UNSPECIFIED":
		fallthrough
	case "CPU":
		fallthrough
	case "WALL":
		fallthrough
	case "HEAP":
		fallthrough
	case "THREADS":
		fallthrough
	case "CONTENTION":
		fallthrough
	case "PEAK_HEAP":
		fallthrough
	case "HEAP_ALLOC":
		*e = ProfileProfileTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProfileProfileTypeEnum: %v", v)
	}
}

// ProfileInput - Profile resource.
type ProfileInput struct {
	// Deployment contains the deployment identification information.
	Deployment *Deployment `json:"deployment,omitempty"`
	// Duration of the profiling session. Input (for the offline mode) or output (for the online mode). The field represents requested profiling duration. It may slightly differ from the effective profiling duration, which is recorded in the profile data, in case the profiling can't be stopped immediately (e.g. in case stopping the profiling is handled asynchronously).
	Duration *string `json:"duration,omitempty"`
	// Input only. Labels associated to this specific profile. These labels will get merged with the deployment labels for the final data set. See documentation on deployment labels for validation rules and limits.
	Labels map[string]string `json:"labels,omitempty"`
	// Input only. Profile bytes, as a gzip compressed serialized proto, the format is https://github.com/google/pprof/blob/master/proto/profile.proto.
	ProfileBytes *string `json:"profileBytes,omitempty"`
	// Type of profile. For offline mode, this must be specified when creating the profile. For online mode it is assigned and returned by the server.
	ProfileType *ProfileProfileTypeEnum `json:"profileType,omitempty"`
}

// Profile - Profile resource.
type Profile struct {
	// Deployment contains the deployment identification information.
	Deployment *Deployment `json:"deployment,omitempty"`
	// Duration of the profiling session. Input (for the offline mode) or output (for the online mode). The field represents requested profiling duration. It may slightly differ from the effective profiling duration, which is recorded in the profile data, in case the profiling can't be stopped immediately (e.g. in case stopping the profiling is handled asynchronously).
	Duration *string `json:"duration,omitempty"`
	// Input only. Labels associated to this specific profile. These labels will get merged with the deployment labels for the final data set. See documentation on deployment labels for validation rules and limits.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. Opaque, server-assigned, unique ID for this profile.
	Name *string `json:"name,omitempty"`
	// Input only. Profile bytes, as a gzip compressed serialized proto, the format is https://github.com/google/pprof/blob/master/proto/profile.proto.
	ProfileBytes *string `json:"profileBytes,omitempty"`
	// Type of profile. For offline mode, this must be specified when creating the profile. For online mode it is assigned and returned by the server.
	ProfileType *ProfileProfileTypeEnum `json:"profileType,omitempty"`
}
