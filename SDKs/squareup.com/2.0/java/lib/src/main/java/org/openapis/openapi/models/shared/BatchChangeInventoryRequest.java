/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BatchChangeInventoryRequest - An object containing the fields to POST for the request.
 * 
 * See the corresponding object definition for field details.
 */
public class BatchChangeInventoryRequest {
    /**
     * The set of physical counts and inventory adjustments to be made.
     * Changes are applied based on the client-supplied timestamp and may be sent
     * out of order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("changes")
    public InventoryChange[] changes;

    public BatchChangeInventoryRequest withChanges(InventoryChange[] changes) {
        this.changes = changes;
        return this;
    }
    
    /**
     * A client-supplied, universally unique identifier (UUID) for the
     * request.
     * 
     * See [Idempotency](https://developer.squareup.com/docs/basics/api101/idempotency) in the
     * [API Development 101](https://developer.squareup.com/docs/basics/api101/overview) section for more
     * information.
     */
    @JsonProperty("idempotency_key")
    public String idempotencyKey;

    public BatchChangeInventoryRequest withIdempotencyKey(String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
        return this;
    }
    
    /**
     * Indicates whether the current physical count should be ignored if
     * the quantity is unchanged since the last physical count. Default: `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignore_unchanged_counts")
    public Boolean ignoreUnchangedCounts;

    public BatchChangeInventoryRequest withIgnoreUnchangedCounts(Boolean ignoreUnchangedCounts) {
        this.ignoreUnchangedCounts = ignoreUnchangedCounts;
        return this;
    }
    
    public BatchChangeInventoryRequest(@JsonProperty("idempotency_key") String idempotencyKey) {
        this.idempotencyKey = idempotencyKey;
  }
}
