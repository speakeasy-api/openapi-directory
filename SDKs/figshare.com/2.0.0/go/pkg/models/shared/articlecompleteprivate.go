// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ArticleCompletePrivate - OK. Article representation
type ArticleCompletePrivate struct {
	// List of article authors
	Authors []Author `json:"authors,omitempty"`
	// List of categories selected for the article
	Categories []Category `json:"categories,omitempty"`
	// Article citation
	Citation *string `json:"citation,omitempty"`
	// Confidentiality reason
	ConfidentialReason *string `json:"confidential_reason,omitempty"`
	// Date when article was created
	CreatedDate *string `json:"created_date,omitempty"`
	// List of custom fields values
	CustomFields []CustomArticleField `json:"custom_fields,omitempty"`
	// Type of article identificator
	DefinedType *int64 `json:"defined_type,omitempty"`
	// Name of the article type identificator
	DefinedTypeName *string `json:"defined_type_name,omitempty"`
	// Article description
	Description *string `json:"description,omitempty"`
	// DOI
	Doi *string `json:"doi,omitempty"`
	// Date when embargo lifts
	EmbargoDate *string `json:"embargo_date,omitempty"`
	// List of embargo options
	EmbargoOptions []GroupEmbargoOptions `json:"embargo_options,omitempty"`
	// Reason for embargo
	EmbargoReason *string `json:"embargo_reason,omitempty"`
	// Title for embargo
	EmbargoTitle *string `json:"embargo_title,omitempty"`
	// Article embargo
	EmbargoType *string `json:"embargo_type,omitempty"`
	// Article public url
	FigshareURL *string `json:"figshare_url,omitempty"`
	// List of article files
	Files []PublicFile `json:"files,omitempty"`
	// Article funding
	Funding     *string `json:"funding,omitempty"`
	FundingList []int64 `json:"funding_list,omitempty"`
	// Group ID
	GroupID *float64 `json:"group_id,omitempty"`
	// Group resource id
	GroupResourceID *string `json:"group_resource_id,omitempty"`
	// Handle
	Handle *string `json:"handle,omitempty"`
	// True if any files are linked to the article
	HasLinkedFile *bool `json:"has_linked_file,omitempty"`
	// Unique identifier for article
	ID *int64 `json:"id,omitempty"`
	// True if article is active
	IsActive *bool `json:"is_active,omitempty"`
	// Article Confidentiality
	IsConfidential *bool `json:"is_confidential,omitempty"`
	// True if article is embargoed
	IsEmbargoed *bool `json:"is_embargoed,omitempty"`
	// True if article has no files
	IsMetadataRecord *bool `json:"is_metadata_record,omitempty"`
	// True if article is published
	IsPublic *bool    `json:"is_public,omitempty"`
	License  *License `json:"license,omitempty"`
	// Article metadata reason
	MetadataReason *string `json:"metadata_reason,omitempty"`
	// Date when article was last modified
	ModifiedDate *string `json:"modified_date,omitempty"`
	// Posted date
	PublishedDate *string `json:"published_date,omitempty"`
	// List of references
	References []string `json:"references,omitempty"`
	// Article DOI
	ResourceDoi *string `json:"resource_doi,omitempty"`
	// Article resource title
	ResourceTitle *string `json:"resource_title,omitempty"`
	// Article size
	Size *int64 `json:"size,omitempty"`
	// Article status
	Status *string `json:"status,omitempty"`
	// List of article tags
	Tags []string `json:"tags,omitempty"`
	// Thumbnail image
	Thumb    *string   `json:"thumb,omitempty"`
	Timeline *Timeline `json:"timeline,omitempty"`
	// Title of article
	Title *string `json:"title,omitempty"`
	// Api endpoint for article
	URL *string `json:"url,omitempty"`
	// Private Api endpoint for article
	URLPrivateAPI *string `json:"url_private_api,omitempty"`
	// Private site endpoint for article
	URLPrivateHTML *string `json:"url_private_html,omitempty"`
	// Public Api endpoint for article
	URLPublicAPI *string `json:"url_public_api,omitempty"`
	// Public site endpoint for article
	URLPublicHTML *string `json:"url_public_html,omitempty"`
	// Article version
	Version *int64 `json:"version,omitempty"`
}
