/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetNetworkEventsQueryParams {
    /**
     * The IP of the client which the list of events will be filtered with. Only supported for track-by-IP networks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientIp")
    public String clientIp;
    public GetNetworkEventsQueryParams withClientIp(String clientIp) {
        this.clientIp = clientIp;
        return this;
    }
    
    /**
     * The MAC address of the client which the list of events will be filtered with. Only supported for track-by-MAC networks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientMac")
    public String clientMac;
    public GetNetworkEventsQueryParams withClientMac(String clientMac) {
        this.clientMac = clientMac;
        return this;
    }
    
    /**
     * The name, or partial name, of the client which the list of events will be filtered with
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=clientName")
    public String clientName;
    public GetNetworkEventsQueryParams withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    /**
     * The MAC address of the Meraki device which the list of events will be filtered with
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=deviceMac")
    public String deviceMac;
    public GetNetworkEventsQueryParams withDeviceMac(String deviceMac) {
        this.deviceMac = deviceMac;
        return this;
    }
    
    /**
     * The name of the Meraki device which the list of events will be filtered with
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=deviceName")
    public String deviceName;
    public GetNetworkEventsQueryParams withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }
    
    /**
     * The serial of the Meraki device which the list of events will be filtered with
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=deviceSerial")
    public String deviceSerial;
    public GetNetworkEventsQueryParams withDeviceSerial(String deviceSerial) {
        this.deviceSerial = deviceSerial;
        return this;
    }
    
    /**
     * A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endingBefore")
    public String endingBefore;
    public GetNetworkEventsQueryParams withEndingBefore(String endingBefore) {
        this.endingBefore = endingBefore;
        return this;
    }
    
    /**
     * A list of event types. The returned events will be filtered to exclude events with these types.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=excludedEventTypes")
    public String[] excludedEventTypes;
    public GetNetworkEventsQueryParams withExcludedEventTypes(String[] excludedEventTypes) {
        this.excludedEventTypes = excludedEventTypes;
        return this;
    }
    
    /**
     * A list of event types. The returned events will be filtered to only include events with these types.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=includedEventTypes")
    public String[] includedEventTypes;
    public GetNetworkEventsQueryParams withIncludedEventTypes(String[] includedEventTypes) {
        this.includedEventTypes = includedEventTypes;
        return this;
    }
    
    /**
     * The number of entries per page returned. Acceptable range is 3 - 1000. Default is 10.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=perPage")
    public Long perPage;
    public GetNetworkEventsQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * The product type to fetch events for. This parameter is required for networks with multiple device types. Valid types are wireless, appliance, switch, systemsManager, camera, cellularGateway, and environmental
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=productType")
    public String productType;
    public GetNetworkEventsQueryParams withProductType(String productType) {
        this.productType = productType;
        return this;
    }
    
    /**
     * The MAC address of the Systems Manager device which the list of events will be filtered with
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=smDeviceMac")
    public String smDeviceMac;
    public GetNetworkEventsQueryParams withSmDeviceMac(String smDeviceMac) {
        this.smDeviceMac = smDeviceMac;
        return this;
    }
    
    /**
     * The name of the Systems Manager device which the list of events will be filtered with
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=smDeviceName")
    public String smDeviceName;
    public GetNetworkEventsQueryParams withSmDeviceName(String smDeviceName) {
        this.smDeviceName = smDeviceName;
        return this;
    }
    
    /**
     * A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startingAfter")
    public String startingAfter;
    public GetNetworkEventsQueryParams withStartingAfter(String startingAfter) {
        this.startingAfter = startingAfter;
        return this;
    }
    
}
