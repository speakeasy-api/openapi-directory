/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateSubscribedEventServerList = [
  "https://events.twilio.com",
] as const;

export class UpdateSubscribedEventSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateSubscribedEventUpdateSubscribedEventRequest extends SpeakeasyBase {
  /**
   * The schema version that the subscription should use.
   */
  @SpeakeasyMetadata({ data: "form, name=SchemaVersion" })
  schemaVersion?: number;
}

export class UpdateSubscribedEventRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateSubscribedEventUpdateSubscribedEventRequest;

  /**
   * The unique SID identifier of the Subscription.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=SubscriptionSid",
  })
  subscriptionSid: string;

  /**
   * Type of event being subscribed to.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=Type",
  })
  type: string;
}

export class UpdateSubscribedEventResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  eventsV1SubscriptionSubscribedEvent?: shared.EventsV1SubscriptionSubscribedEvent;
}
