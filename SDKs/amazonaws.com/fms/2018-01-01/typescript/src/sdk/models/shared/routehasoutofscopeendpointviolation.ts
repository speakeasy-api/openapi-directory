/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Route } from "./route";
import { Expose, Type } from "class-transformer";

/**
 * Contains details about the route endpoint that violates the policy scope.
 */
export class RouteHasOutOfScopeEndpointViolation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CurrentFirewallSubnetRouteTable" })
  currentFirewallSubnetRouteTable?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentInternetGatewayRouteTable" })
  currentInternetGatewayRouteTable?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FirewallSubnetId" })
  firewallSubnetId?: string;

  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "FirewallSubnetRoutes" })
  @Type(() => Route)
  firewallSubnetRoutes?: Route[];

  @SpeakeasyMetadata()
  @Expose({ name: "InternetGatewayId" })
  internetGatewayId?: string;

  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "InternetGatewayRoutes" })
  @Type(() => Route)
  internetGatewayRoutes?: Route[];

  @SpeakeasyMetadata()
  @Expose({ name: "RouteTableId" })
  routeTableId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetAvailabilityZone" })
  subnetAvailabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetAvailabilityZoneId" })
  subnetAvailabilityZoneId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetId" })
  subnetId?: string;

  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "ViolatingRoutes" })
  @Type(() => Route)
  violatingRoutes?: Route[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;
}
