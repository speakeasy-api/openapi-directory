"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EndUserAgreementRequest:
    r"""EndUserAgreement."""
    
    institution_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('institution_id') }, 'form': { 'field_name': 'institution_id' }, 'multipart_form': { 'field_name': 'institution_id' }})
    r"""an Institution ID for this EUA"""  
    access_scope: Optional[list[list[Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_scope'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'access_scope', 'json': True }, 'multipart_form': { 'field_name': 'access_scope', 'json': True }})
    r"""Array containing one or several values of ['balances', 'details', 'transactions']"""  
    access_valid_for_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_valid_for_days'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'access_valid_for_days' }, 'multipart_form': { 'field_name': 'access_valid_for_days' }})
    r"""Number of days from acceptance that the access can be used."""  
    max_historical_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_historical_days'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'max_historical_days' }, 'multipart_form': { 'field_name': 'max_historical_days' }})
    r"""Maximum number of days of transaction data to retrieve."""  
    