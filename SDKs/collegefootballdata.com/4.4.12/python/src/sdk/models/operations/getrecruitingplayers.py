"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import recruit as shared_recruit
from typing import Optional


@dataclasses.dataclass
class GetRecruitingPlayersRequest:
    
    classification: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'classification', 'style': 'form', 'explode': True }})
    r"""Type of recruit (HighSchool, JUCO, PrepSchool)"""  
    position: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'position', 'style': 'form', 'explode': True }})
    r"""Position abbreviation filter"""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""State or province abbreviation filter"""  
    team: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'team', 'style': 'form', 'explode': True }})
    r"""Committed team filter (required if year not specified)"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'year', 'style': 'form', 'explode': True }})
    r"""Recruiting class year (required if team no specified)"""  
    

@dataclasses.dataclass
class GetRecruitingPlayersResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    recruits: Optional[list[shared_recruit.Recruit]] = dataclasses.field(default=None)
    r"""successful operation"""  
    