// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SchedulePlayResponseMessageEnum - Response message
type SchedulePlayResponseMessageEnum string

const (
	SchedulePlayResponseMessageEnumPlayExecuted                          SchedulePlayResponseMessageEnum = "Play Executed"
	SchedulePlayResponseMessageEnumCallUUIDParameterMissing              SchedulePlayResponseMessageEnum = "CallUUID Parameter Missing"
	SchedulePlayResponseMessageEnumSoundsParameterMissing                SchedulePlayResponseMessageEnum = "Sounds Parameter Missing"
	SchedulePlayResponseMessageEnumTimeParameterMissing                  SchedulePlayResponseMessageEnum = "Time Parameter Missing"
	SchedulePlayResponseMessageEnumTimeParameterMustBeGreaterThan0       SchedulePlayResponseMessageEnum = "Time Parameter must be > 0"
	SchedulePlayResponseMessageEnumLegsParameterIsInvalid                SchedulePlayResponseMessageEnum = "Legs Parameter is Invalid"
	SchedulePlayResponseMessageEnumLengthParameterMustBeAPositiveInteger SchedulePlayResponseMessageEnum = "Length Parameter must be a positive integer"
	SchedulePlayResponseMessageEnumSoundsParameterIsInvalid              SchedulePlayResponseMessageEnum = "Sounds Parameter is Invalid"
	SchedulePlayResponseMessageEnumPlayFailedCallNotFound                SchedulePlayResponseMessageEnum = "Play Failed -- Call not found"
	SchedulePlayResponseMessageEnumPlayFailed                            SchedulePlayResponseMessageEnum = "Play Failed"
)

func (e SchedulePlayResponseMessageEnum) ToPointer() *SchedulePlayResponseMessageEnum {
	return &e
}

func (e *SchedulePlayResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Play Executed":
		fallthrough
	case "CallUUID Parameter Missing":
		fallthrough
	case "Sounds Parameter Missing":
		fallthrough
	case "Time Parameter Missing":
		fallthrough
	case "Time Parameter must be > 0":
		fallthrough
	case "Legs Parameter is Invalid":
		fallthrough
	case "Length Parameter must be a positive integer":
		fallthrough
	case "Sounds Parameter is Invalid":
		fallthrough
	case "Play Failed -- Call not found":
		fallthrough
	case "Play Failed":
		*e = SchedulePlayResponseMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchedulePlayResponseMessageEnum: %v", v)
	}
}

// SchedulePlayResponse - Response
type SchedulePlayResponse struct {
	// Response message
	Message SchedulePlayResponseMessageEnum `json:"Message"`
	// Unique identifier of the scheduled playback request (UUIDv4)
	SchedPlayID string `json:"SchedPlayId"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
