<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetShipmentByExternalIdResponseBody - The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetShipmentByExternalIdResponseBody
{
    /**
     * Advanced shipment options.  These are entirely optional.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AdvancedShipmentOptions $advancedOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('advanced_options')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AdvancedShipmentOptions')]
    public AdvancedShipmentOptions $advancedOptions;
    
    /**
     * The carrier account that is billed for the shipping charges
     * 
     * @var string $carrierId
     */
	#[\JMS\Serializer\Annotation\SerializedName('carrier_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $carrierId;
    
    /**
     * The type of delivery confirmation that is required for this shipment.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyDeliveryConfirmationEnum $confirmation
     */
	#[\JMS\Serializer\Annotation\SerializedName('confirmation')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyDeliveryConfirmationEnum>')]
    public GetShipmentByExternalIdResponseBodyDeliveryConfirmationEnum $confirmation;
    
    /**
     * The date and time that the shipment was created in ShipEngine.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * Customs information.  This is usually only needed for international shipments.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyInternationalShipmentOptions $customs
     */
	#[\JMS\Serializer\Annotation\SerializedName('customs')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyInternationalShipmentOptions')]
    public GetShipmentByExternalIdResponseBodyInternationalShipmentOptions $customs;
    
    /**
     * ID that the Order Source assigned
     * 
     * @var ?string $externalOrderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_order_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalOrderId = null;
    
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.
     * 
     * 
     * > **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * 
     * 
     * @var ?string $externalShipmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_shipment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalShipmentId = null;
    
    /**
     * The insurance provider to use for any insured packages in the shipment.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyInsuranceProviderEnum $insuranceProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('insurance_provider')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyInsuranceProviderEnum>')]
    public GetShipmentByExternalIdResponseBodyInsuranceProviderEnum $insuranceProvider;
    
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * 
     * 
     * 
     * @var ?bool $isReturn
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_return')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isReturn = null;
    
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from
     * 
     * external order sources
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ShipmentItem> $items
     */
	#[\JMS\Serializer\Annotation\SerializedName('items')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ShipmentItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $items = null;
    
    /**
     * The date and time that the shipment was created or last modified.
     * 
     * @var \DateTime $modifiedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('modified_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $modifiedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('order_source_code')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OrderSourceNameEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderSourceNameEnum $orderSourceCode = null;
    
    /**
     * Indicates if the package will be picked up or dropped off by the carrier
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyOriginTypeEnum $originType
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyOriginTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetShipmentByExternalIdResponseBodyOriginTypeEnum $originType = null;
    
    /**
     * The packages in the shipment.
     * 
     * 
     * > **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.
     * 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Package> $packages
     */
	#[\JMS\Serializer\Annotation\SerializedName('packages')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Package>')]
    public array $packages;
    
    /**
     * The return address for this shipment.  Defaults to the `ship_from` address.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ShippingAddress $returnTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_to')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShippingAddress')]
    public ShippingAddress $returnTo;
    
    /**
     * The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * 
     * 
     * 
     * @var string $serviceCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('service_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serviceCode;
    
    /**
     * The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
     * 
     * 
     * 
     * @var \DateTime $shipDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ship_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $shipDate;
    
    /**
     * The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://www.shipengine.com/docs/reference/create-warehouse/).  Then you can simply specify the `warehouse_id` rather than the complete address each time.
     * 
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ShippingAddress $shipFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('ship_from')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShippingAddress')]
    public ShippingAddress $shipFrom;
    
    /**
     * The recipient's mailing address
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ShippingAddress $shipTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ship_to')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ShippingAddress')]
    public ShippingAddress $shipTo;
    
    /**
     * A string that uniquely identifies the shipment
     * 
     * @var string $shipmentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shipmentId;
    
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.
     * 
     * 
     * > **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * 
     * 
     * @var ?string $shipmentNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipment_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shipmentNumber = null;
    
    /**
     * The current status of the shipment
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyShipmentStatusEnum $shipmentStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('shipment_status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyShipmentStatusEnum>')]
    public GetShipmentByExternalIdResponseBodyShipmentStatusEnum $shipmentStatus;
    
    /**
     * Arbitrary tags associated with this shipment.  Tags can be used to categorize shipments, and shipments can be queried by their tags.
     * 
     * 
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    public array $tags;
    
    /**
     * $taxIdentifiers
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaxIdentifier> $taxIdentifiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('tax_identifiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaxIdentifier>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taxIdentifiers = null;
    
    /**
     * The combined weight of all packages in the shipment
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyWeight $totalWeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_weight')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyWeight')]
    public GetShipmentByExternalIdResponseBodyWeight $totalWeight;
    
    /**
     * The [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.
     * 
     * 
     * 
     * @var string $warehouseId
     */
	#[\JMS\Serializer\Annotation\SerializedName('warehouse_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $warehouseId;
    
	public function __construct()
	{
		$this->advancedOptions = new \OpenAPI\OpenAPI\Models\Shared\AdvancedShipmentOptions();
		$this->carrierId = "";
		$this->confirmation = \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyDeliveryConfirmationEnum::NONE;
		$this->createdAt = new \DateTime();
		$this->customs = new \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyInternationalShipmentOptions();
		$this->externalOrderId = null;
		$this->externalShipmentId = null;
		$this->insuranceProvider = \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyInsuranceProviderEnum::NONE;
		$this->isReturn = null;
		$this->items = null;
		$this->modifiedAt = new \DateTime();
		$this->orderSourceCode = null;
		$this->originType = null;
		$this->packages = [];
		$this->returnTo = new \OpenAPI\OpenAPI\Models\Shared\ShippingAddress();
		$this->serviceCode = "";
		$this->shipDate = new \DateTime();
		$this->shipFrom = new \OpenAPI\OpenAPI\Models\Shared\ShippingAddress();
		$this->shipTo = new \OpenAPI\OpenAPI\Models\Shared\ShippingAddress();
		$this->shipmentId = "";
		$this->shipmentNumber = null;
		$this->shipmentStatus = \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyShipmentStatusEnum::PENDING;
		$this->tags = [];
		$this->taxIdentifiers = null;
		$this->totalWeight = new \OpenAPI\OpenAPI\Models\Shared\GetShipmentByExternalIdResponseBodyWeight();
		$this->warehouseId = "";
	}
}
