/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleIdentityAccesscontextmanagerV1EgressPolicy - Policy for egress from perimeter. EgressPolicies match requests based on `egress_from` and `egress_to` stanzas. For an EgressPolicy to match, both `egress_from` and `egress_to` stanzas must be matched. If an EgressPolicy matches a request, the request is allowed to span the ServicePerimeter boundary. For example, an EgressPolicy can be used to allow VMs on networks within the ServicePerimeter to access a defined set of projects outside the perimeter in certain contexts (e.g. to read data from a Cloud Storage bucket or query against a BigQuery dataset). EgressPolicies are concerned with the *resources* that a request relates as well as the API services and API actions being used. They do not related to the direction of data movement. More detailed documentation for this concept can be found in the descriptions of EgressFrom and EgressTo.
 */
public class GoogleIdentityAccesscontextmanagerV1EgressPolicy {
    /**
     * Defines the conditions under which an EgressPolicy matches a request. Conditions based on information about the source of the request. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("egressFrom")
    public GoogleIdentityAccesscontextmanagerV1EgressFrom egressFrom;

    public GoogleIdentityAccesscontextmanagerV1EgressPolicy withEgressFrom(GoogleIdentityAccesscontextmanagerV1EgressFrom egressFrom) {
        this.egressFrom = egressFrom;
        return this;
    }
    
    /**
     * Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the `resources` specified. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed. The request must match `operations` AND `resources` fields in order to be allowed egress out of the perimeter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("egressTo")
    public GoogleIdentityAccesscontextmanagerV1EgressTo egressTo;

    public GoogleIdentityAccesscontextmanagerV1EgressPolicy withEgressTo(GoogleIdentityAccesscontextmanagerV1EgressTo egressTo) {
        this.egressTo = egressTo;
        return this;
    }
    
    public GoogleIdentityAccesscontextmanagerV1EgressPolicy(){}
}
