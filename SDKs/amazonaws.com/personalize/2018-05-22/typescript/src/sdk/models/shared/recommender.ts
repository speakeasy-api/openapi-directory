/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecommenderConfig } from "./recommenderconfig";
import { RecommenderUpdateSummary } from "./recommenderupdatesummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a recommendation generator for a Domain dataset group. You create a recommender in a Domain dataset group for a specific domain use case (domain recipe), and specify the recommender in a <a href="https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html">GetRecommendations</a> request.
 */
export class Recommender extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "datasetGroupArn" })
  datasetGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "failureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "latestRecommenderUpdate" })
  @Type(() => RecommenderUpdateSummary)
  latestRecommenderUpdate?: RecommenderUpdateSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "modelMetrics" })
  modelMetrics?: Record<string, number>;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipeArn" })
  recipeArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommenderArn" })
  recommenderArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommenderConfig" })
  @Type(() => RecommenderConfig)
  recommenderConfig?: RecommenderConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}
