// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChannelChannelTypeEnum - Type of channel.
type ChannelChannelTypeEnum string

const (
	ChannelChannelTypeEnumChannelTypeUnspecified ChannelChannelTypeEnum = "CHANNEL_TYPE_UNSPECIFIED"
	ChannelChannelTypeEnumStable                 ChannelChannelTypeEnum = "STABLE"
	ChannelChannelTypeEnumBeta                   ChannelChannelTypeEnum = "BETA"
	ChannelChannelTypeEnumDev                    ChannelChannelTypeEnum = "DEV"
	ChannelChannelTypeEnumCanary                 ChannelChannelTypeEnum = "CANARY"
	ChannelChannelTypeEnumCanaryAsan             ChannelChannelTypeEnum = "CANARY_ASAN"
	ChannelChannelTypeEnumAll                    ChannelChannelTypeEnum = "ALL"
	ChannelChannelTypeEnumExtended               ChannelChannelTypeEnum = "EXTENDED"
)

func (e ChannelChannelTypeEnum) ToPointer() *ChannelChannelTypeEnum {
	return &e
}

func (e *ChannelChannelTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CHANNEL_TYPE_UNSPECIFIED":
		fallthrough
	case "STABLE":
		fallthrough
	case "BETA":
		fallthrough
	case "DEV":
		fallthrough
	case "CANARY":
		fallthrough
	case "CANARY_ASAN":
		fallthrough
	case "ALL":
		fallthrough
	case "EXTENDED":
		*e = ChannelChannelTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChannelChannelTypeEnum: %v", v)
	}
}

// Channel - Each Channel is owned by a Platform and owns a collection of versions. Possible Channels are listed in the Channel enum below. Not all Channels are available for every Platform (e.g. CANARY does not exist for LINUX).
type Channel struct {
	// Type of channel.
	ChannelType *ChannelChannelTypeEnum `json:"channelType,omitempty"`
	// Channel name. Format is "{product}/platforms/{platform}/channels/{channel}"
	Name *string `json:"name,omitempty"`
}
