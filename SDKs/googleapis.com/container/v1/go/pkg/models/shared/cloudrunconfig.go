// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CloudRunConfigLoadBalancerTypeEnum - Which load balancer type is installed for Cloud Run.
type CloudRunConfigLoadBalancerTypeEnum string

const (
	CloudRunConfigLoadBalancerTypeEnumLoadBalancerTypeUnspecified CloudRunConfigLoadBalancerTypeEnum = "LOAD_BALANCER_TYPE_UNSPECIFIED"
	CloudRunConfigLoadBalancerTypeEnumLoadBalancerTypeExternal    CloudRunConfigLoadBalancerTypeEnum = "LOAD_BALANCER_TYPE_EXTERNAL"
	CloudRunConfigLoadBalancerTypeEnumLoadBalancerTypeInternal    CloudRunConfigLoadBalancerTypeEnum = "LOAD_BALANCER_TYPE_INTERNAL"
)

func (e CloudRunConfigLoadBalancerTypeEnum) ToPointer() *CloudRunConfigLoadBalancerTypeEnum {
	return &e
}

func (e *CloudRunConfigLoadBalancerTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOAD_BALANCER_TYPE_UNSPECIFIED":
		fallthrough
	case "LOAD_BALANCER_TYPE_EXTERNAL":
		fallthrough
	case "LOAD_BALANCER_TYPE_INTERNAL":
		*e = CloudRunConfigLoadBalancerTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloudRunConfigLoadBalancerTypeEnum: %v", v)
	}
}

// CloudRunConfig - Configuration options for the Cloud Run feature.
type CloudRunConfig struct {
	// Whether Cloud Run addon is enabled for this cluster.
	Disabled *bool `json:"disabled,omitempty"`
	// Which load balancer type is installed for Cloud Run.
	LoadBalancerType *CloudRunConfigLoadBalancerTypeEnum `json:"loadBalancerType,omitempty"`
}
