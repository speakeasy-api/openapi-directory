/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetFoodIngredientSearchPhpSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api_key",
  })
  apiKeyAuth: string;
}

/**
 * #### Set maximum number of records you want the API to return, per search term. The default value is "**1**."
 *
 * @remarks
 *
 * **Example**
 * > ```&limit=3```
 *
 */
export enum GetFoodIngredientSearchPhpLimitEnum {
  One = "1",
  Two = "2",
  Three = "3",
}

export class GetFoodIngredientSearchPhpRequest extends SpeakeasyBase {
  /**
   * Search our database for a single ingredient or a specific set of ingredients.
   *
   * @remarks
   *
   * **Example #1: Single Ingredient**
   * > ```&find=raw broccoli```
   *
   * **Example #2: Set of Ingredients**
   * > ```&find=raw broccoli,buttermilk waffle,mashed potatoes```
   *
   * **Important Notes**
   *   * Comma-separated lists cannot contain more than **10 ingredients**. You must perform additional API calls if you are looking up more than 10 ingredients.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=find" })
  find: string;

  /**
   * #### Set maximum number of records you want the API to return, per search term. The default value is "**1**."
   *
   * @remarks
   *
   * **Example**
   * > ```&limit=3```
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: GetFoodIngredientSearchPhpLimitEnum;
}

export class GetFoodIngredientSearchPhpResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * **Valid** - Will return an object containing any matching ingredient foods.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  ingredientObject?: shared.IngredientObject;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
