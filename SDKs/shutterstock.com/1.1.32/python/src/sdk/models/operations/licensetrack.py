"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import licenseaudiorequest as shared_licenseaudiorequest
from ..shared import licenseaudioresultdatalist as shared_licenseaudioresultdatalist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class LicenseTrackSecurity:
    
    customer_access_code: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class LicenseTrackLicenseEnum(str, Enum):
    r"""License type"""
    AUDIO_PLATFORM = 'audio_platform'
    PREMIER_MUSIC_BASIC = 'premier_music_basic'
    PREMIER_MUSIC_EXTENDED = 'premier_music_extended'
    PREMIER_MUSIC_PRO = 'premier_music_pro'
    PREMIER_MUSIC_COMP = 'premier_music_comp'
    ASSET_ALL_MUSIC = 'asset_all_music'


@dataclasses.dataclass
class LicenseTrackRequest:
    
    license_audio_request: shared_licenseaudiorequest.LicenseAudioRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Tracks to license"""  
    license: Optional[LicenseTrackLicenseEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'license', 'style': 'form', 'explode': True }})
    r"""License type"""  
    search_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search_id', 'style': 'form', 'explode': True }})
    r"""The ID of the search that led to licensing this track"""  
    

@dataclasses.dataclass
class LicenseTrackResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    license_audio_result_data_list: Optional[shared_licenseaudioresultdatalist.LicenseAudioResultDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    