/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DeviceUnderTest } from "./deviceundertest";
import { ProtocolEnum } from "./protocolenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the suite definition.
 */
export class SuiteDefinitionInformation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata({ elemType: DeviceUnderTest })
  @Expose({ name: "defaultDevices" })
  @Type(() => DeviceUnderTest)
  defaultDevices?: DeviceUnderTest[];

  @SpeakeasyMetadata()
  @Expose({ name: "intendedForQualification" })
  intendedForQualification?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isLongDurationTest" })
  isLongDurationTest?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: ProtocolEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "suiteDefinitionId" })
  suiteDefinitionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "suiteDefinitionName" })
  suiteDefinitionName?: string;
}
