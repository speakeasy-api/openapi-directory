// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserStatusTypeEnum string

const (
	UserStatusTypeEnumUnconfirmed         UserStatusTypeEnum = "UNCONFIRMED"
	UserStatusTypeEnumConfirmed           UserStatusTypeEnum = "CONFIRMED"
	UserStatusTypeEnumArchived            UserStatusTypeEnum = "ARCHIVED"
	UserStatusTypeEnumCompromised         UserStatusTypeEnum = "COMPROMISED"
	UserStatusTypeEnumUnknown             UserStatusTypeEnum = "UNKNOWN"
	UserStatusTypeEnumResetRequired       UserStatusTypeEnum = "RESET_REQUIRED"
	UserStatusTypeEnumForceChangePassword UserStatusTypeEnum = "FORCE_CHANGE_PASSWORD"
)

func (e UserStatusTypeEnum) ToPointer() *UserStatusTypeEnum {
	return &e
}

func (e *UserStatusTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNCONFIRMED":
		fallthrough
	case "CONFIRMED":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "COMPROMISED":
		fallthrough
	case "UNKNOWN":
		fallthrough
	case "RESET_REQUIRED":
		fallthrough
	case "FORCE_CHANGE_PASSWORD":
		*e = UserStatusTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserStatusTypeEnum: %v", v)
	}
}
