/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SoftwareConfig - Specifies the selection and config of software inside the cluster.
 */
public class SoftwareConfig {
    /**
     * Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageVersion")
    public String imageVersion;

    public SoftwareConfig withImageVersion(String imageVersion) {
        this.imageVersion = imageVersion;
        return this;
    }
    
    /**
     * Optional. The set of components to activate on the cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optionalComponents")
    public SoftwareConfigOptionalComponentsEnum[] optionalComponents;

    public SoftwareConfig withOptionalComponents(SoftwareConfigOptionalComponentsEnum[] optionalComponents) {
        this.optionalComponents = optionalComponents;
        return this;
    }
    
    /**
     * Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;

    public SoftwareConfig withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    public SoftwareConfig(){}
}
