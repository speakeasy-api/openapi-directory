/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CommentReply - A comment on a file in Google Drive.
 */
public class CommentReply {
    /**
     * Information about a Drive user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("author")
    public User author;
    public CommentReply withAuthor(User author) {
        this.author = author;
        return this;
    }
    
    /**
     * The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public CommentReply withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * The date when this reply was first created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public CommentReply withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;
    public CommentReply withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * HTML formatted content for this reply.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlContent")
    public String htmlContent;
    public CommentReply withHtmlContent(String htmlContent) {
        this.htmlContent = htmlContent;
        return this;
    }
    
    /**
     * This is always drive#commentReply.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public CommentReply withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The date when this reply was last modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modifiedDate")
    public OffsetDateTime modifiedDate;
    public CommentReply withModifiedDate(OffsetDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    /**
     * The ID of the reply.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replyId")
    public String replyId;
    public CommentReply withReplyId(String replyId) {
        this.replyId = replyId;
        return this;
    }
    
    /**
     * The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  
     * - "resolve" - To resolve a comment. 
     * - "reopen" - To reopen (un-resolve) a comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verb")
    public String verb;
    public CommentReply withVerb(String verb) {
        this.verb = verb;
        return this;
    }
    
}
