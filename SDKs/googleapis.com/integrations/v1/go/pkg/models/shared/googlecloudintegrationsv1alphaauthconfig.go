// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum - Credential type of the encrypted credential.
type GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum string

const (
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumCredentialTypeUnspecified      GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "CREDENTIAL_TYPE_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumUsernameAndPassword            GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "USERNAME_AND_PASSWORD"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumAPIKey                         GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "API_KEY"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumOauth2AuthorizationCode        GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "OAUTH2_AUTHORIZATION_CODE"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumOauth2Implicit                 GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "OAUTH2_IMPLICIT"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumOauth2ClientCredentials        GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "OAUTH2_CLIENT_CREDENTIALS"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumOauth2ResourceOwnerCredentials GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "OAUTH2_RESOURCE_OWNER_CREDENTIALS"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumJwt                            GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "JWT"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumAuthToken                      GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "AUTH_TOKEN"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumServiceAccount                 GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "SERVICE_ACCOUNT"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumClientCertificateOnly          GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "CLIENT_CERTIFICATE_ONLY"
	GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnumOidcToken                      GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum = "OIDC_TOKEN"
)

func (e GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum) ToPointer() *GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREDENTIAL_TYPE_UNSPECIFIED":
		fallthrough
	case "USERNAME_AND_PASSWORD":
		fallthrough
	case "API_KEY":
		fallthrough
	case "OAUTH2_AUTHORIZATION_CODE":
		fallthrough
	case "OAUTH2_IMPLICIT":
		fallthrough
	case "OAUTH2_CLIENT_CREDENTIALS":
		fallthrough
	case "OAUTH2_RESOURCE_OWNER_CREDENTIALS":
		fallthrough
	case "JWT":
		fallthrough
	case "AUTH_TOKEN":
		fallthrough
	case "SERVICE_ACCOUNT":
		fallthrough
	case "CLIENT_CERTIFICATE_ONLY":
		fallthrough
	case "OIDC_TOKEN":
		*e = GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaAuthConfigStateEnum - The status of the auth config.
type GoogleCloudIntegrationsV1alphaAuthConfigStateEnum string

const (
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumStateUnspecified GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumValid            GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "VALID"
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumInvalid          GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "INVALID"
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumSoftDeleted      GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "SOFT_DELETED"
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumExpired          GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "EXPIRED"
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumUnauthorized     GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "UNAUTHORIZED"
	GoogleCloudIntegrationsV1alphaAuthConfigStateEnumUnsupported      GoogleCloudIntegrationsV1alphaAuthConfigStateEnum = "UNSUPPORTED"
)

func (e GoogleCloudIntegrationsV1alphaAuthConfigStateEnum) ToPointer() *GoogleCloudIntegrationsV1alphaAuthConfigStateEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaAuthConfigStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "VALID":
		fallthrough
	case "INVALID":
		fallthrough
	case "SOFT_DELETED":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "UNAUTHORIZED":
		fallthrough
	case "UNSUPPORTED":
		*e = GoogleCloudIntegrationsV1alphaAuthConfigStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaAuthConfigStateEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum - The visibility of the auth config.
type GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum string

const (
	GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnumAuthConfigVisibilityUnspecified GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum = "AUTH_CONFIG_VISIBILITY_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnumPrivate                         GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum = "PRIVATE"
	GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnumClientVisible                   GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum = "CLIENT_VISIBLE"
)

func (e GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum) ToPointer() *GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTH_CONFIG_VISIBILITY_UNSPECIFIED":
		fallthrough
	case "PRIVATE":
		fallthrough
	case "CLIENT_VISIBLE":
		*e = GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaAuthConfig - The AuthConfig resource use to hold channels and connection config data.
type GoogleCloudIntegrationsV1alphaAuthConfig struct {
	// Certificate id for client certificate
	CertificateID *string `json:"certificateId,omitempty"`
	// Output only. The timestamp when the auth config is created.
	CreateTime *string `json:"createTime,omitempty"`
	// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail *string `json:"creatorEmail,omitempty"`
	// Credential type of the encrypted credential.
	CredentialType *GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum `json:"credentialType,omitempty"`
	// Defines parameters for a single, canonical credential.
	DecryptedCredential *GoogleCloudIntegrationsV1alphaCredential `json:"decryptedCredential,omitempty"`
	// A description of the auth config.
	Description *string `json:"description,omitempty"`
	// The name of the auth config.
	DisplayName *string `json:"displayName,omitempty"`
	// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
	EncryptedCredential *string `json:"encryptedCredential,omitempty"`
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
	ExpiryNotificationDuration []string `json:"expiryNotificationDuration,omitempty"`
	// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail *string `json:"lastModifierEmail,omitempty"`
	// Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
	Name *string `json:"name,omitempty"`
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
	OverrideValidTime *string `json:"overrideValidTime,omitempty"`
	// The reason / details of the current status.
	Reason *string `json:"reason,omitempty"`
	// The status of the auth config.
	State *GoogleCloudIntegrationsV1alphaAuthConfigStateEnum `json:"state,omitempty"`
	// Output only. The timestamp when the auth config is modified.
	UpdateTime *string `json:"updateTime,omitempty"`
	// The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
	ValidTime *string `json:"validTime,omitempty"`
	// The visibility of the auth config.
	Visibility *GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum `json:"visibility,omitempty"`
}

// GoogleCloudIntegrationsV1alphaAuthConfigInput - The AuthConfig resource use to hold channels and connection config data.
type GoogleCloudIntegrationsV1alphaAuthConfigInput struct {
	// Certificate id for client certificate
	CertificateID *string `json:"certificateId,omitempty"`
	// The creator's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	CreatorEmail *string `json:"creatorEmail,omitempty"`
	// Credential type of the encrypted credential.
	CredentialType *GoogleCloudIntegrationsV1alphaAuthConfigCredentialTypeEnum `json:"credentialType,omitempty"`
	// Defines parameters for a single, canonical credential.
	DecryptedCredential *GoogleCloudIntegrationsV1alphaCredential `json:"decryptedCredential,omitempty"`
	// A description of the auth config.
	Description *string `json:"description,omitempty"`
	// The name of the auth config.
	DisplayName *string `json:"displayName,omitempty"`
	// Auth credential encrypted by Cloud KMS. Can be decrypted as Credential with proper KMS key.
	EncryptedCredential *string `json:"encryptedCredential,omitempty"`
	// User can define the time to receive notification after which the auth config becomes invalid. Support up to 30 days. Support granularity in hours.
	ExpiryNotificationDuration []string `json:"expiryNotificationDuration,omitempty"`
	// The last modifier's email address. Generated based on the End User Credentials/LOAS role of the user making the call.
	LastModifierEmail *string `json:"lastModifierEmail,omitempty"`
	// Resource name of the SFDC instance projects/{project}/locations/{location}/authConfigs/{authConfig}.
	Name *string `json:"name,omitempty"`
	// User provided expiry time to override. For the example of Salesforce, username/password credentials can be valid for 6 months depending on the instance settings.
	OverrideValidTime *string `json:"overrideValidTime,omitempty"`
	// The reason / details of the current status.
	Reason *string `json:"reason,omitempty"`
	// The status of the auth config.
	State *GoogleCloudIntegrationsV1alphaAuthConfigStateEnum `json:"state,omitempty"`
	// The time until the auth config is valid. Empty or max value is considered the auth config won't expire.
	ValidTime *string `json:"validTime,omitempty"`
	// The visibility of the auth config.
	Visibility *GoogleCloudIntegrationsV1alphaAuthConfigVisibilityEnum `json:"visibility,omitempty"`
}
