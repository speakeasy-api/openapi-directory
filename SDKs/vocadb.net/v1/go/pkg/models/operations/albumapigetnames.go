// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// AlbumAPIGetNamesNameMatchModeEnum - Name match mode.
type AlbumAPIGetNamesNameMatchModeEnum string

const (
	AlbumAPIGetNamesNameMatchModeEnumAuto       AlbumAPIGetNamesNameMatchModeEnum = "Auto"
	AlbumAPIGetNamesNameMatchModeEnumPartial    AlbumAPIGetNamesNameMatchModeEnum = "Partial"
	AlbumAPIGetNamesNameMatchModeEnumStartsWith AlbumAPIGetNamesNameMatchModeEnum = "StartsWith"
	AlbumAPIGetNamesNameMatchModeEnumExact      AlbumAPIGetNamesNameMatchModeEnum = "Exact"
	AlbumAPIGetNamesNameMatchModeEnumWords      AlbumAPIGetNamesNameMatchModeEnum = "Words"
)

func (e *AlbumAPIGetNamesNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = AlbumAPIGetNamesNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetNamesNameMatchModeEnum: %s", s)
	}
}

type AlbumAPIGetNamesQueryParams struct {
	// Maximum number of results.
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Name match mode.
	NameMatchMode *AlbumAPIGetNamesNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Text query.
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type AlbumAPIGetNamesRequest struct {
	QueryParams AlbumAPIGetNamesQueryParams
}

type AlbumAPIGetNamesResponse struct {
	// OK
	AlbumAPIGetNames200ApplicationJSONStrings []string
	// OK
	AlbumAPIGetNames200ApplicationJsonpStrings []string
	// OK
	AlbumAPIGetNames200TextJSONStrings []string
	Body                               []byte
	ContentType                        string
	StatusCode                         int
	RawResponse                        *http.Response
}
