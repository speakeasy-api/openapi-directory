<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinationNotWorkingEvidence - Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinationNotWorkingEvidence
{
    /**
     * DNS lookup errors.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceDnsErrorEnum $dnsError
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsError')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceDnsErrorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DestinationNotWorkingEvidenceDnsErrorEnum $dnsError = null;
    
    /**
     * The full non-working URL.
     * 
     * @var ?string $expandedUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('expandedUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expandedUrl = null;
    
    /**
     * HTTP error code (for example, 404 or 5xx)
     * 
     * @var ?int $httpError
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpError')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $httpError = null;
    
    /**
     * Page was crawled successfully, but was detected as either a page with no content or an error page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceInvalidPageEnum $invalidPage
     */
	#[\JMS\Serializer\Annotation\SerializedName('invalidPage')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceInvalidPageEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DestinationNotWorkingEvidenceInvalidPageEnum $invalidPage = null;
    
    /**
     * Approximate time when the ad destination was last checked.
     * 
     * @var ?string $lastCheckTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastCheckTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastCheckTime = null;
    
    /**
     * Platform of the non-working URL.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidencePlatformEnum $platform
     */
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidencePlatformEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DestinationNotWorkingEvidencePlatformEnum $platform = null;
    
    /**
     * HTTP redirect chain error.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceRedirectionErrorEnum $redirectionError
     */
	#[\JMS\Serializer\Annotation\SerializedName('redirectionError')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceRedirectionErrorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DestinationNotWorkingEvidenceRedirectionErrorEnum $redirectionError = null;
    
    /**
     * Rejected because of malformed URLs or invalid requests.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceUrlRejectedEnum $urlRejected
     */
	#[\JMS\Serializer\Annotation\SerializedName('urlRejected')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DestinationNotWorkingEvidenceUrlRejectedEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DestinationNotWorkingEvidenceUrlRejectedEnum $urlRejected = null;
    
	public function __construct()
	{
		$this->dnsError = null;
		$this->expandedUrl = null;
		$this->httpError = null;
		$this->invalidPage = null;
		$this->lastCheckTime = null;
		$this->platform = null;
		$this->redirectionError = null;
		$this->urlRejected = null;
	}
}
