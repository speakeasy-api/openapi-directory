/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ResetActiveWidgetTokenRequest extends SpeakeasyBase {
  /**
   * Continuous Project ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: number;

  /**
   * Active widget ID belonging to this Continuous Project
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=widgetId",
  })
  widgetId: number;
}

export class ResetActiveWidgetTokenResponse extends SpeakeasyBase {
  /**
   * Updated widget details
   */
  @SpeakeasyMetadata()
  activeWidget?: shared.ActiveWidget;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ProjectNotFound | ActiveWidgetNotFound | UnauthorizedUser
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
