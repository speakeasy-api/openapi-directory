/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapabilitySettings } from "./capabilitysettings";
import { SupportingEntityCapability } from "./supportingentitycapability";
import { Expose, Type } from "class-transformer";

/**
 * The capability level that is allowed for the legal entity.
 *
 * @remarks
 *
 * Possible values: **notApplicable**, **low**, **medium**, **high**.
 */
export enum LegalEntityCapabilityAllowedLevelEnum {
  High = "high",
  Low = "low",
  Medium = "medium",
  NotApplicable = "notApplicable",
}

/**
 * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
 *
 * @remarks
 *
 * Possible values: **notApplicable**, **low**, **medium**, **high**.
 */
export enum LegalEntityCapabilityRequestedLevelEnum {
  High = "high",
  Low = "low",
  Medium = "medium",
  NotApplicable = "notApplicable",
}

export class LegalEntityCapability extends SpeakeasyBase {
  /**
   * Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed" })
  allowed?: boolean;

  /**
   * The capability level that is allowed for the legal entity.
   *
   * @remarks
   *
   * Possible values: **notApplicable**, **low**, **medium**, **high**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedLevel" })
  allowedLevel?: LegalEntityCapabilityAllowedLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "allowedSettings" })
  @Type(() => CapabilitySettings)
  allowedSettings?: CapabilitySettings;

  /**
   * Indicates whether the capability is requested. To check whether the Legal Entity is permitted to use the capability,
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requested" })
  requested?: boolean;

  /**
   * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
   *
   * @remarks
   *
   * Possible values: **notApplicable**, **low**, **medium**, **high**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedLevel" })
  requestedLevel?: LegalEntityCapabilityRequestedLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedSettings" })
  @Type(() => CapabilitySettings)
  requestedSettings?: CapabilitySettings;

  /**
   * Capability status for transfer instruments associated with legal entity
   */
  @SpeakeasyMetadata({ elemType: SupportingEntityCapability })
  @Expose({ name: "transferInstruments" })
  @Type(() => SupportingEntityCapability)
  transferInstruments?: SupportingEntityCapability[];

  /**
   * The status of the verification checks for the capability.
   *
   * @remarks
   *
   * Possible values:
   *
   * * **pending**: Adyen is running the verification.
   *
   * * **invalid**: The verification failed. Check if the `errors` array contains more information.
   *
   * * **valid**: The verification has been successfully completed.
   *
   * * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verificationStatus" })
  verificationStatus?: string;
}
