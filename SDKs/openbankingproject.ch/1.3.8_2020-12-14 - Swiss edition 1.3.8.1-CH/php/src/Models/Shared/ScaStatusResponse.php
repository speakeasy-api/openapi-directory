<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ScaStatusResponse - Body of the JSON response with SCA Status.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ScaStatusResponse
{
    /**
     * Text to be displayed to the PSU.
     * 
     * @var ?string $psuMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('psuMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $psuMessage = null;
    
    /**
     * This data element is containing information about the status of the SCA method applied.
     * 
     * 
     * The following codes are defined for this data type.
     * 
     *   * 'received':
     *     An authorisation or cancellation-authorisation resource has been created successfully.
     *   * 'psuIdentified':
     *     The PSU related to the authorisation or cancellation-authorisation resource has been identified.
     *   * 'psuAuthenticated':
     *     The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.
     *   * 'scaMethodSelected':
     *     The PSU/TPP has selected the related SCA routine.
     *     If the SCA method is chosen implicitly since only one SCA method is available,
     *     then this is the first status to be reported instead of 'received'.
     *   * 'unconfirmed':
     *     SCA is technically successfully finalised by the PSU, but the authorisation resource needs a confirmation command by the TPP yet. 
     *   * 'started':
     *     The addressed SCA routine has been started.
     *   * 'finalised':
     *     The SCA routine has been finalised successfully (including a potential confirmation command). 
     *     This is a final status of the authorisation resource.
     *   * 'failed':
     *     The SCA routine failed.
     *     This is a final status of the authorisation resource.
     *   * 'exempted':
     *     SCA was exempted for the related transaction, the related authorisation is successful.
     *     This is a final status of the authorisation resource.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ScaStatusEnum $scaStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('scaStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScaStatusEnum>')]
    public ScaStatusEnum $scaStatus;
    
    /**
     * Additional Service: Trusted Benificiaries
     * 
     * Within this data element, the ASPSP might optionally communicate towards the TPP whether the creditor was part of the related trusted beneficiary list. 
     * This attribute is only contained in case of a final scaStatus.
     * 
     * 
     * @var ?bool $trustedBeneficiaryFlag
     */
	#[\JMS\Serializer\Annotation\SerializedName('trustedBeneficiaryFlag')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $trustedBeneficiaryFlag = null;
    
	public function __construct()
	{
		$this->psuMessage = null;
		$this->scaStatus = \OpenAPI\OpenAPI\Models\Shared\ScaStatusEnum::RECEIVED;
		$this->trustedBeneficiaryFlag = null;
	}
}
