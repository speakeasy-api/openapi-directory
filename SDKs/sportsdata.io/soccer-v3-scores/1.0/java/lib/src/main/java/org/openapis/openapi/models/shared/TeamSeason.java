/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamSeason {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assists")
    public Double assists;

    public TeamSeason withAssists(Double assists) {
        this.assists = assists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedShots")
    public Double blockedShots;

    public TeamSeason withBlockedShots(Double blockedShots) {
        this.blockedShots = blockedShots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CornersWon")
    public Double cornersWon;

    public TeamSeason withCornersWon(Double cornersWon) {
        this.cornersWon = cornersWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Crosses")
    public Double crosses;

    public TeamSeason withCrosses(Double crosses) {
        this.crosses = crosses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefenderCleanSheets")
    public Double defenderCleanSheets;

    public TeamSeason withDefenderCleanSheets(Double defenderCleanSheets) {
        this.defenderCleanSheets = defenderCleanSheets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;

    public TeamSeason withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;

    public TeamSeason withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;

    public TeamSeason withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsMondogoal")
    public Double fantasyPointsMondogoal;

    public TeamSeason withFantasyPointsMondogoal(Double fantasyPointsMondogoal) {
        this.fantasyPointsMondogoal = fantasyPointsMondogoal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;

    public TeamSeason withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Fouled")
    public Double fouled;

    public TeamSeason withFouled(Double fouled) {
        this.fouled = fouled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Fouls")
    public Double fouls;

    public TeamSeason withFouls(Double fouls) {
        this.fouls = fouls;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;

    public TeamSeason withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamId")
    public Long globalTeamId;

    public TeamSeason withGlobalTeamId(Long globalTeamId) {
        this.globalTeamId = globalTeamId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperCleanSheets")
    public Double goalkeeperCleanSheets;

    public TeamSeason withGoalkeeperCleanSheets(Double goalkeeperCleanSheets) {
        this.goalkeeperCleanSheets = goalkeeperCleanSheets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperGoalsAgainst")
    public Double goalkeeperGoalsAgainst;

    public TeamSeason withGoalkeeperGoalsAgainst(Double goalkeeperGoalsAgainst) {
        this.goalkeeperGoalsAgainst = goalkeeperGoalsAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperSaves")
    public Double goalkeeperSaves;

    public TeamSeason withGoalkeeperSaves(Double goalkeeperSaves) {
        this.goalkeeperSaves = goalkeeperSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperSingleGoalAgainst")
    public Double goalkeeperSingleGoalAgainst;

    public TeamSeason withGoalkeeperSingleGoalAgainst(Double goalkeeperSingleGoalAgainst) {
        this.goalkeeperSingleGoalAgainst = goalkeeperSingleGoalAgainst;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GoalkeeperWins")
    public Double goalkeeperWins;

    public TeamSeason withGoalkeeperWins(Double goalkeeperWins) {
        this.goalkeeperWins = goalkeeperWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Goals")
    public Double goals;

    public TeamSeason withGoals(Double goals) {
        this.goals = goals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Interceptions")
    public Double interceptions;

    public TeamSeason withInterceptions(Double interceptions) {
        this.interceptions = interceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastManTackle")
    public Double lastManTackle;

    public TeamSeason withLastManTackle(Double lastManTackle) {
        this.lastManTackle = lastManTackle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Minutes")
    public Double minutes;

    public TeamSeason withMinutes(Double minutes) {
        this.minutes = minutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public TeamSeason withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Offsides")
    public Double offsides;

    public TeamSeason withOffsides(Double offsides) {
        this.offsides = offsides;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentScore")
    public Double opponentScore;

    public TeamSeason withOpponentScore(Double opponentScore) {
        this.opponentScore = opponentScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OwnGoals")
    public Double ownGoals;

    public TeamSeason withOwnGoals(Double ownGoals) {
        this.ownGoals = ownGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Passes")
    public Double passes;

    public TeamSeason withPasses(Double passes) {
        this.passes = passes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassesCompleted")
    public Double passesCompleted;

    public TeamSeason withPassesCompleted(Double passesCompleted) {
        this.passesCompleted = passesCompleted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltiesConceded")
    public Double penaltiesConceded;

    public TeamSeason withPenaltiesConceded(Double penaltiesConceded) {
        this.penaltiesConceded = penaltiesConceded;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltiesWon")
    public Double penaltiesWon;

    public TeamSeason withPenaltiesWon(Double penaltiesWon) {
        this.penaltiesWon = penaltiesWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyKickGoals")
    public Double penaltyKickGoals;

    public TeamSeason withPenaltyKickGoals(Double penaltyKickGoals) {
        this.penaltyKickGoals = penaltyKickGoals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyKickMisses")
    public Double penaltyKickMisses;

    public TeamSeason withPenaltyKickMisses(Double penaltyKickMisses) {
        this.penaltyKickMisses = penaltyKickMisses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PenaltyKickSaves")
    public Double penaltyKickSaves;

    public TeamSeason withPenaltyKickSaves(Double penaltyKickSaves) {
        this.penaltyKickSaves = penaltyKickSaves;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Possession")
    public Double possession;

    public TeamSeason withPossession(Double possession) {
        this.possession = possession;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RedCards")
    public Double redCards;

    public TeamSeason withRedCards(Double redCards) {
        this.redCards = redCards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoundId")
    public Long roundId;

    public TeamSeason withRoundId(Long roundId) {
        this.roundId = roundId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Double score;

    public TeamSeason withScore(Double score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public TeamSeason withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public TeamSeason withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Shots")
    public Double shots;

    public TeamSeason withShots(Double shots) {
        this.shots = shots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShotsOnGoal")
    public Double shotsOnGoal;

    public TeamSeason withShotsOnGoal(Double shotsOnGoal) {
        this.shotsOnGoal = shotsOnGoal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatId")
    public Long statId;

    public TeamSeason withStatId(Long statId) {
        this.statId = statId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tackles")
    public Double tackles;

    public TeamSeason withTackles(Double tackles) {
        this.tackles = tackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TacklesWon")
    public Double tacklesWon;

    public TeamSeason withTacklesWon(Double tacklesWon) {
        this.tacklesWon = tacklesWon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public TeamSeason withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamId")
    public Long teamId;

    public TeamSeason withTeamId(Long teamId) {
        this.teamId = teamId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Touches")
    public Double touches;

    public TeamSeason withTouches(Double touches) {
        this.touches = touches;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public TeamSeason withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedUtc")
    public String updatedUtc;

    public TeamSeason withUpdatedUtc(String updatedUtc) {
        this.updatedUtc = updatedUtc;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YellowCards")
    public Double yellowCards;

    public TeamSeason withYellowCards(Double yellowCards) {
        this.yellowCards = yellowCards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YellowRedCards")
    public Double yellowRedCards;

    public TeamSeason withYellowRedCards(Double yellowRedCards) {
        this.yellowRedCards = yellowRedCards;
        return this;
    }
    
    public TeamSeason(){}
}
