/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ActivityLogSummaryV1 {
    /**
     * The serialized AfterId of the response, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("afterId")
    public String afterId;

    public ActivityLogSummaryV1 withAfterId(String afterId) {
        this.afterId = afterId;
        return this;
    }
    
    /**
     * List of the events in the event series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventDetailList")
    public EventSummaryV1[] eventDetailList;

    public ActivityLogSummaryV1 withEventDetailList(EventSummaryV1[] eventDetailList) {
        this.eventDetailList = eventDetailList;
        return this;
    }
    
    /**
     * Status of an event series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSeriesStatus")
    public EventSeriesStatusV1Enum eventSeriesStatus;

    public ActivityLogSummaryV1 withEventSeriesStatus(EventSeriesStatusV1Enum eventSeriesStatus) {
        this.eventSeriesStatus = eventSeriesStatus;
        return this;
    }
    
    @JsonProperty("latestEvent")
    public EventSummaryV1 latestEvent;

    public ActivityLogSummaryV1 withLatestEvent(EventSummaryV1 latestEvent) {
        this.latestEvent = latestEvent;
        return this;
    }
    
    /**
     * The number of events in the same series as the specified event that have the warning status.
     */
    @JsonProperty("warningCount")
    public Integer warningCount;

    public ActivityLogSummaryV1 withWarningCount(Integer warningCount) {
        this.warningCount = warningCount;
        return this;
    }
    
    public ActivityLogSummaryV1(@JsonProperty("latestEvent") EventSummaryV1 latestEvent, @JsonProperty("warningCount") Integer warningCount) {
        this.latestEvent = latestEvent;
        this.warningCount = warningCount;
  }
}
