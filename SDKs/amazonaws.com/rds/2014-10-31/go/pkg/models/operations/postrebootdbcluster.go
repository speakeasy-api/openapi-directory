// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTRebootDBClusterActionEnum
type POSTRebootDBClusterActionEnum string

const (
	POSTRebootDBClusterActionEnumRebootDbCluster POSTRebootDBClusterActionEnum = "RebootDBCluster"
)

func (e POSTRebootDBClusterActionEnum) ToPointer() *POSTRebootDBClusterActionEnum {
	return &e
}

func (e *POSTRebootDBClusterActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RebootDBCluster":
		*e = POSTRebootDBClusterActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRebootDBClusterActionEnum: %v", v)
	}
}

// POSTRebootDBClusterVersionEnum
type POSTRebootDBClusterVersionEnum string

const (
	POSTRebootDBClusterVersionEnumTwoThousandAndFourteen1031 POSTRebootDBClusterVersionEnum = "2014-10-31"
)

func (e POSTRebootDBClusterVersionEnum) ToPointer() *POSTRebootDBClusterVersionEnum {
	return &e
}

func (e *POSTRebootDBClusterVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = POSTRebootDBClusterVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRebootDBClusterVersionEnum: %v", v)
	}
}

type POSTRebootDBClusterRequest struct {
	Action            POSTRebootDBClusterActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                         `request:"mediaType=text/xml"`
	Version           POSTRebootDBClusterVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTRebootDBClusterResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
