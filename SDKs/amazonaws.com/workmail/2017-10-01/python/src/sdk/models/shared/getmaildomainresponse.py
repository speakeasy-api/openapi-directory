"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dnsrecord as shared_dnsrecord
from ..shared import dnsrecordverificationstatus_enum as shared_dnsrecordverificationstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetMailDomainResponse:
    r"""Success"""
    
    dkim_verification_status: Optional[shared_dnsrecordverificationstatus_enum.DNSRecordVerificationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DkimVerificationStatus'), 'exclude': lambda f: f is None }})  
    is_default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDefault'), 'exclude': lambda f: f is None }})  
    is_test_domain: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsTestDomain'), 'exclude': lambda f: f is None }})  
    ownership_verification_status: Optional[shared_dnsrecordverificationstatus_enum.DNSRecordVerificationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnershipVerificationStatus'), 'exclude': lambda f: f is None }})  
    records: Optional[list[shared_dnsrecord.DNSRecord]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Records'), 'exclude': lambda f: f is None }})  
    