<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VideoMetadataInteractions - A list of resource URIs related to the video.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VideoMetadataInteractions
{
    /**
     * The Buy interaction for a On Demand video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsBuy $buy
     */
	#[\JMS\Serializer\Annotation\SerializedName('buy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsBuy')]
    public VideoMetadataInteractionsBuy $buy;
    
    /**
     * When a video is referenced by a channel URI, if the user is a moderator of the channel, include information about removing the video from the channel.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsChannel $channel
     */
	#[\JMS\Serializer\Annotation\SerializedName('channel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsChannel')]
    public VideoMetadataInteractionsChannel $channel;
    
    /**
     * Information about whether the authenticated user has liked this video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsLike $like
     */
	#[\JMS\Serializer\Annotation\SerializedName('like')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsLike')]
    public VideoMetadataInteractionsLike $like;
    
    /**
     * The Rent interaction for an On Demand video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsRent $rent
     */
	#[\JMS\Serializer\Annotation\SerializedName('rent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsRent')]
    public VideoMetadataInteractionsRent $rent;
    
    /**
     * Information about where and how to report a video.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsReport $report
     */
	#[\JMS\Serializer\Annotation\SerializedName('report')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsReport')]
    public VideoMetadataInteractionsReport $report;
    
    /**
     * Subscription information for an On Demand video.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsSubscribe $subscribe
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscribe')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsSubscribe')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VideoMetadataInteractionsSubscribe $subscribe = null;
    
    /**
     * Information about removing this video from the user's list of watched videos.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsWatched $watched
     */
	#[\JMS\Serializer\Annotation\SerializedName('watched')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsWatched')]
    public VideoMetadataInteractionsWatched $watched;
    
    /**
     * Information about whether this video appears on the authenticated user's Watch Later list.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsWatchlater $watchlater
     */
	#[\JMS\Serializer\Annotation\SerializedName('watchlater')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsWatchlater')]
    public VideoMetadataInteractionsWatchlater $watchlater;
    
	public function __construct()
	{
		$this->buy = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsBuy();
		$this->channel = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsChannel();
		$this->like = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsLike();
		$this->rent = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsRent();
		$this->report = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsReport();
		$this->subscribe = null;
		$this->watched = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsWatched();
		$this->watchlater = new \OpenAPI\OpenAPI\Models\Shared\VideoMetadataInteractionsWatchlater();
	}
}
