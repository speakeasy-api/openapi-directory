/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderFilter {
    /**
     * Internal use only &amp; should not be set on your filter (your subscription is already locked to your account). If set subscription will fail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountIds")
    public Long[] accountIds;
    public OrderFilter withAccountIds(Long[] accountIds) {
        this.accountIds = accountIds;
        return this;
    }
    
    /**
     * Restricts to specified customerStrategyRefs; this will filter orders and StrategyMatchChanges accordingly (Note: overall postition is not filtered)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerStrategyRefs")
    public String[] customerStrategyRefs;
    public OrderFilter withCustomerStrategyRefs(String[] customerStrategyRefs) {
        this.customerStrategyRefs = customerStrategyRefs;
        return this;
    }
    
    /**
     * Returns overall / net position (See: OrderRunnerChange.mb / OrderRunnerChange.ml). Default=true
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeOverallPosition")
    public Boolean includeOverallPosition;
    public OrderFilter withIncludeOverallPosition(Boolean includeOverallPosition) {
        this.includeOverallPosition = includeOverallPosition;
        return this;
    }
    
    /**
     * Returns strategy positions (See: OrderRunnerChange.smc=Map&lt;customerStrategyRef, StrategyMatchChange&gt;) - these are sent in delta format as per overall position. Default=false
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partitionMatchedByStrategyRef")
    public Boolean partitionMatchedByStrategyRef;
    public OrderFilter withPartitionMatchedByStrategyRef(Boolean partitionMatchedByStrategyRef) {
        this.partitionMatchedByStrategyRef = partitionMatchedByStrategyRef;
        return this;
    }
    
}
