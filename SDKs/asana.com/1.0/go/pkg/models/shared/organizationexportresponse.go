// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// OrganizationExportResponseStateEnum - The current state of the export.
type OrganizationExportResponseStateEnum string

const (
	OrganizationExportResponseStateEnumPending  OrganizationExportResponseStateEnum = "pending"
	OrganizationExportResponseStateEnumStarted  OrganizationExportResponseStateEnum = "started"
	OrganizationExportResponseStateEnumFinished OrganizationExportResponseStateEnum = "finished"
	OrganizationExportResponseStateEnumError    OrganizationExportResponseStateEnum = "error"
)

func (e *OrganizationExportResponseStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "started":
		fallthrough
	case "finished":
		fallthrough
	case "error":
		*e = OrganizationExportResponseStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationExportResponseStateEnum: %s", s)
	}
}

// OrganizationExportResponse - An *organization_export* object represents a request to export the complete data of an Organization in JSON format.
type OrganizationExportResponse struct {
	// The time at which this resource was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Download this URL to retreive the full export of the organization
	// in JSON format. It will be compressed in a gzip (.gz) container.
	//
	// *Note: May be null if the export is still in progress or
	// failed.  If present, this URL may only be valid for 1 hour from
	// the time of retrieval. You should avoid persisting this URL
	// somewhere and rather refresh on demand to ensure you do not keep
	// stale URLs.*
	DownloadURL *string `json:"download_url,omitempty"`
	// Globally unique identifier of the resource, as a string.
	Gid          *string           `json:"gid,omitempty"`
	Organization *WorkspaceCompact `json:"organization,omitempty"`
	// The base type of this resource.
	ResourceType *string `json:"resource_type,omitempty"`
	// The current state of the export.
	State *OrganizationExportResponseStateEnum `json:"state,omitempty"`
}
