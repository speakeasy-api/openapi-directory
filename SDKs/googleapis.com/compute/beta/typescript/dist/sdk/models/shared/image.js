"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Image = exports.ImageStatusEnum = exports.ImageSourceTypeEnum = exports.ImageRawDisk = exports.ImageRawDiskContainerTypeEnum = exports.ImageArchitectureEnum = void 0;
var utils_1 = require("../../../internal/utils");
var customerencryptionkey_1 = require("./customerencryptionkey");
var deprecationstatus_1 = require("./deprecationstatus");
var guestosfeature_1 = require("./guestosfeature");
var initialstateconfig_1 = require("./initialstateconfig");
var rolloutpolicy_1 = require("./rolloutpolicy");
var class_transformer_1 = require("class-transformer");
/**
 * The architecture of the image. Valid values are ARM64 or X86_64.
 */
var ImageArchitectureEnum;
(function (ImageArchitectureEnum) {
    ImageArchitectureEnum["ArchitectureUnspecified"] = "ARCHITECTURE_UNSPECIFIED";
    ImageArchitectureEnum["Arm64"] = "ARM64";
    ImageArchitectureEnum["X8664"] = "X86_64";
})(ImageArchitectureEnum = exports.ImageArchitectureEnum || (exports.ImageArchitectureEnum = {}));
/**
 * The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
 */
var ImageRawDiskContainerTypeEnum;
(function (ImageRawDiskContainerTypeEnum) {
    ImageRawDiskContainerTypeEnum["Tar"] = "TAR";
})(ImageRawDiskContainerTypeEnum = exports.ImageRawDiskContainerTypeEnum || (exports.ImageRawDiskContainerTypeEnum = {}));
/**
 * The parameters of the raw disk image.
 */
var ImageRawDisk = /** @class */ (function (_super) {
    __extends(ImageRawDisk, _super);
    function ImageRawDisk() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "containerType" }),
        __metadata("design:type", String)
    ], ImageRawDisk.prototype, "containerType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sha1Checksum" }),
        __metadata("design:type", String)
    ], ImageRawDisk.prototype, "sha1Checksum", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "source" }),
        __metadata("design:type", String)
    ], ImageRawDisk.prototype, "source", void 0);
    return ImageRawDisk;
}(utils_1.SpeakeasyBase));
exports.ImageRawDisk = ImageRawDisk;
/**
 * The type of the image used to create this disk. The default and only valid value is RAW.
 */
var ImageSourceTypeEnum;
(function (ImageSourceTypeEnum) {
    ImageSourceTypeEnum["Raw"] = "RAW";
})(ImageSourceTypeEnum = exports.ImageSourceTypeEnum || (exports.ImageSourceTypeEnum = {}));
/**
 * [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
 */
var ImageStatusEnum;
(function (ImageStatusEnum) {
    ImageStatusEnum["Deleting"] = "DELETING";
    ImageStatusEnum["Failed"] = "FAILED";
    ImageStatusEnum["Pending"] = "PENDING";
    ImageStatusEnum["Ready"] = "READY";
})(ImageStatusEnum = exports.ImageStatusEnum || (exports.ImageStatusEnum = {}));
/**
 * Represents an Image resource. You can use images to create boot disks for your VM instances. For more information, read Images.
 */
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "architecture" }),
        __metadata("design:type", String)
    ], Image.prototype, "architecture", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "archiveSizeBytes" }),
        __metadata("design:type", String)
    ], Image.prototype, "archiveSizeBytes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], Image.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deprecated" }),
        (0, class_transformer_1.Type)(function () { return deprecationstatus_1.DeprecationStatus; }),
        __metadata("design:type", deprecationstatus_1.DeprecationStatus)
    ], Image.prototype, "deprecated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Image.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskSizeGb" }),
        __metadata("design:type", String)
    ], Image.prototype, "diskSizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "family" }),
        __metadata("design:type", String)
    ], Image.prototype, "family", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: guestosfeature_1.GuestOsFeature }),
        (0, class_transformer_1.Expose)({ name: "guestOsFeatures" }),
        (0, class_transformer_1.Type)(function () { return guestosfeature_1.GuestOsFeature; }),
        __metadata("design:type", Array)
    ], Image.prototype, "guestOsFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Image.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], Image.prototype, "imageEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Image.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labelFingerprint" }),
        __metadata("design:type", String)
    ], Image.prototype, "labelFingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], Image.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licenseCodes" }),
        __metadata("design:type", Array)
    ], Image.prototype, "licenseCodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licenses" }),
        __metadata("design:type", Array)
    ], Image.prototype, "licenses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locked" }),
        __metadata("design:type", Boolean)
    ], Image.prototype, "locked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Image.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rawDisk" }),
        (0, class_transformer_1.Type)(function () { return ImageRawDisk; }),
        __metadata("design:type", ImageRawDisk)
    ], Image.prototype, "rawDisk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rolloutOverride" }),
        (0, class_transformer_1.Type)(function () { return rolloutpolicy_1.RolloutPolicy; }),
        __metadata("design:type", rolloutpolicy_1.RolloutPolicy)
    ], Image.prototype, "rolloutOverride", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "satisfiesPzs" }),
        __metadata("design:type", Boolean)
    ], Image.prototype, "satisfiesPzs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Image.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shieldedInstanceInitialState" }),
        (0, class_transformer_1.Type)(function () { return initialstateconfig_1.InitialStateConfig; }),
        __metadata("design:type", initialstateconfig_1.InitialStateConfig)
    ], Image.prototype, "shieldedInstanceInitialState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceDisk" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceDisk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceDiskEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], Image.prototype, "sourceDiskEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceDiskId" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceDiskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceImage" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceImage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceImageEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], Image.prototype, "sourceImageEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceImageId" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceImageId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshot" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceSnapshot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshotEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], Image.prototype, "sourceSnapshotEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshotId" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceSnapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceType" }),
        __metadata("design:type", String)
    ], Image.prototype, "sourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Image.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageLocations" }),
        __metadata("design:type", Array)
    ], Image.prototype, "storageLocations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userLicenses" }),
        __metadata("design:type", Array)
    ], Image.prototype, "userLicenses", void 0);
    return Image;
}(utils_1.SpeakeasyBase));
exports.Image = Image;
