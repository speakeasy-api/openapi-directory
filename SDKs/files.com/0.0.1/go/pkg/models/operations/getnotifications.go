// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetNotificationsQueryParams struct {
	// Used for pagination.  Send a cursor value to resume an existing list from the point at which you left off.  Get a cursor from an existing list via the X-Files-Cursor-Next header.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// If set, return records where the specifiied field is equal to the supplied value. Valid fields are `user_id`, `group_id` or `path`.
	Filter map[string]interface{} `queryParam:"style=form,explode=true,name=filter"`
	// If set, return records where the specifiied field is greater than the supplied value. Valid fields are `user_id`, `group_id` or `path`.
	FilterGt map[string]interface{} `queryParam:"style=form,explode=true,name=filter_gt"`
	// If set, return records where the specifiied field is greater than or equal to the supplied value. Valid fields are `user_id`, `group_id` or `path`.
	FilterGteq map[string]interface{} `queryParam:"style=form,explode=true,name=filter_gteq"`
	// If set, return records where the specifiied field is equal to the supplied value. Valid fields are `user_id`, `group_id` or `path`.
	FilterLike map[string]interface{} `queryParam:"style=form,explode=true,name=filter_like"`
	// If set, return records where the specifiied field is less than the supplied value. Valid fields are `user_id`, `group_id` or `path`.
	FilterLt map[string]interface{} `queryParam:"style=form,explode=true,name=filter_lt"`
	// If set, return records where the specifiied field is less than or equal to the supplied value. Valid fields are `user_id`, `group_id` or `path`.
	FilterLteq map[string]interface{} `queryParam:"style=form,explode=true,name=filter_lteq"`
	// DEPRECATED: Show notifications for this Group ID. Use `filter[group_id]` instead.
	GroupID *int `queryParam:"style=form,explode=true,name=group_id"`
	// If `include_ancestors` is `true` and `path` is specified, include notifications for any parent paths. Ignored if `path` is not specified.
	IncludeAncestors *bool `queryParam:"style=form,explode=true,name=include_ancestors"`
	// Show notifications for this Path.
	Path *string `queryParam:"style=form,explode=true,name=path"`
	// Number of records to show per page.  (Max: 10,000, 1,000 or less is recommended).
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// If set, sort records by the specified field in either 'asc' or 'desc' direction (e.g. sort_by[last_login_at]=desc). Valid fields are `path`, `user_id` or `group_id`.
	SortBy map[string]interface{} `queryParam:"style=form,explode=true,name=sort_by"`
	// DEPRECATED: Show notifications for this User ID. Use `filter[user_id]` instead.
	UserID *int `queryParam:"style=form,explode=true,name=user_id"`
}

type GetNotificationsRequest struct {
	QueryParams GetNotificationsQueryParams
}

type GetNotificationsResponse struct {
	ContentType string
	// A list of Notifications objects.
	NotificationEntities []shared.NotificationEntity
	StatusCode           int
	RawResponse          *http.Response
}
