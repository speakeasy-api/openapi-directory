// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateVpcEndpointXAmzTargetEnum
type CreateVpcEndpointXAmzTargetEnum string

const (
	CreateVpcEndpointXAmzTargetEnumOpenSearchServerlessCreateVpcEndpoint CreateVpcEndpointXAmzTargetEnum = "OpenSearchServerless.CreateVpcEndpoint"
)

func (e CreateVpcEndpointXAmzTargetEnum) ToPointer() *CreateVpcEndpointXAmzTargetEnum {
	return &e
}

func (e *CreateVpcEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OpenSearchServerless.CreateVpcEndpoint":
		*e = CreateVpcEndpointXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcEndpointXAmzTargetEnum: %v", v)
	}
}

type CreateVpcEndpointRequest struct {
	CreateVpcEndpointRequest shared.CreateVpcEndpointRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               CreateVpcEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateVpcEndpointResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateVpcEndpointResponse *shared.CreateVpcEndpointResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ValidationException
	ValidationException interface{}
}
