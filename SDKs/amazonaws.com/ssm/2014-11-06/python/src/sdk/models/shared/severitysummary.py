"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SeveritySummary:
    r"""The number of managed nodes found for each patch severity level defined in the request filter."""
    
    critical_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CriticalCount'), 'exclude': lambda f: f is None }})  
    high_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HighCount'), 'exclude': lambda f: f is None }})  
    informational_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InformationalCount'), 'exclude': lambda f: f is None }})  
    low_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LowCount'), 'exclude': lambda f: f is None }})  
    medium_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MediumCount'), 'exclude': lambda f: f is None }})  
    unspecified_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnspecifiedCount'), 'exclude': lambda f: f is None }})  
    