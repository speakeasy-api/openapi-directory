<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleMapsPlayablelocationsV3SamplePlayableLocation - A geographical point suitable for placing game objects in location-based games.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleMapsPlayablelocationsV3SamplePlayableLocation
{
    /**
     * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleTypeLatLng $centerPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('centerPoint')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleTypeLatLng')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleTypeLatLng $centerPoint = null;
    
    /**
     * Required. The name of this playable location.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A [place ID] (https://developers.google.com/places/place-id)
     * 
     * @var ?string $placeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('placeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $placeId = null;
    
    /**
     * A [plus code] (http://openlocationcode.com)
     * 
     * @var ?string $plusCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('plusCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $plusCode = null;
    
    /**
     * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleTypeLatLng $snappedPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('snappedPoint')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleTypeLatLng')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleTypeLatLng $snappedPoint = null;
    
    /**
     * A collection of [Playable Location Types](/maps/documentation/gaming/tt/types) for this playable location. The first type in the collection is the primary type. Type information might not be available for all playable locations.
     * 
     * @var ?array<string> $types
     */
	#[\JMS\Serializer\Annotation\SerializedName('types')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $types = null;
    
	public function __construct()
	{
		$this->centerPoint = null;
		$this->name = null;
		$this->placeId = null;
		$this->plusCode = null;
		$this->snappedPoint = null;
		$this->types = null;
	}
}
