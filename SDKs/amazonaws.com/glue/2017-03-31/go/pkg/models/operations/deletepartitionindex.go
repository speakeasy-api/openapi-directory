// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeletePartitionIndexXAmzTargetEnum
type DeletePartitionIndexXAmzTargetEnum string

const (
	DeletePartitionIndexXAmzTargetEnumAwsGlueDeletePartitionIndex DeletePartitionIndexXAmzTargetEnum = "AWSGlue.DeletePartitionIndex"
)

func (e *DeletePartitionIndexXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.DeletePartitionIndex":
		*e = DeletePartitionIndexXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeletePartitionIndexXAmzTargetEnum: %s", s)
	}
}

type DeletePartitionIndexRequest struct {
	DeletePartitionIndexRequest shared.DeletePartitionIndexRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DeletePartitionIndexXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeletePartitionIndexResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	DeletePartitionIndexResponse map[string]interface{}
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// GlueEncryptionException
	GlueEncryptionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
