// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRuleGroupXAmzTargetEnum
type UpdateRuleGroupXAmzTargetEnum string

const (
	UpdateRuleGroupXAmzTargetEnumAwswaf20150824UpdateRuleGroup UpdateRuleGroupXAmzTargetEnum = "AWSWAF_20150824.UpdateRuleGroup"
)

func (e *UpdateRuleGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_20150824.UpdateRuleGroup":
		*e = UpdateRuleGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateRuleGroupXAmzTargetEnum: %s", s)
	}
}

type UpdateRuleGroupHeaders struct {
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateRuleGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateRuleGroupRequest struct {
	Headers UpdateRuleGroupHeaders
	Request shared.UpdateRuleGroupRequest `request:"mediaType=application/json"`
}

type UpdateRuleGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UpdateRuleGroupResponse *shared.UpdateRuleGroupResponse
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidOperationException
	WAFInvalidOperationException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFLimitsExceededException
	WAFLimitsExceededException interface{}
	// WAFNonexistentContainerException
	WAFNonexistentContainerException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
}
