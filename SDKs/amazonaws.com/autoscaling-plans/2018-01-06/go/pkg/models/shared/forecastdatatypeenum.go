// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ForecastDataTypeEnum string

const (
	ForecastDataTypeEnumCapacityForecast           ForecastDataTypeEnum = "CapacityForecast"
	ForecastDataTypeEnumLoadForecast               ForecastDataTypeEnum = "LoadForecast"
	ForecastDataTypeEnumScheduledActionMinCapacity ForecastDataTypeEnum = "ScheduledActionMinCapacity"
	ForecastDataTypeEnumScheduledActionMaxCapacity ForecastDataTypeEnum = "ScheduledActionMaxCapacity"
)

func (e ForecastDataTypeEnum) ToPointer() *ForecastDataTypeEnum {
	return &e
}

func (e *ForecastDataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CapacityForecast":
		fallthrough
	case "LoadForecast":
		fallthrough
	case "ScheduledActionMinCapacity":
		fallthrough
	case "ScheduledActionMaxCapacity":
		*e = ForecastDataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ForecastDataTypeEnum: %v", v)
	}
}
