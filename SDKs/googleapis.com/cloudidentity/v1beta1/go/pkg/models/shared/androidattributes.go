// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AndroidAttributesOwnershipPrivilegeEnum - Ownership privileges on device.
type AndroidAttributesOwnershipPrivilegeEnum string

const (
	AndroidAttributesOwnershipPrivilegeEnumOwnershipPrivilegeUnspecified AndroidAttributesOwnershipPrivilegeEnum = "OWNERSHIP_PRIVILEGE_UNSPECIFIED"
	AndroidAttributesOwnershipPrivilegeEnumDeviceAdministrator           AndroidAttributesOwnershipPrivilegeEnum = "DEVICE_ADMINISTRATOR"
	AndroidAttributesOwnershipPrivilegeEnumProfileOwner                  AndroidAttributesOwnershipPrivilegeEnum = "PROFILE_OWNER"
	AndroidAttributesOwnershipPrivilegeEnumDeviceOwner                   AndroidAttributesOwnershipPrivilegeEnum = "DEVICE_OWNER"
)

func (e *AndroidAttributesOwnershipPrivilegeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OWNERSHIP_PRIVILEGE_UNSPECIFIED":
		fallthrough
	case "DEVICE_ADMINISTRATOR":
		fallthrough
	case "PROFILE_OWNER":
		fallthrough
	case "DEVICE_OWNER":
		*e = AndroidAttributesOwnershipPrivilegeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AndroidAttributesOwnershipPrivilegeEnum: %s", s)
	}
}

// AndroidAttributes - Resource representing the Android specific attributes of a Device.
type AndroidAttributes struct {
	// Whether applications from unknown sources can be installed on device.
	EnabledUnknownSources *bool `json:"enabledUnknownSources,omitempty"`
	// Whether this account is on an owner/primary profile. For phones, only true for owner profiles. Android 4+ devices can have secondary or restricted user profiles.
	OwnerProfileAccount *bool `json:"ownerProfileAccount,omitempty"`
	// Ownership privileges on device.
	OwnershipPrivilege *AndroidAttributesOwnershipPrivilegeEnum `json:"ownershipPrivilege,omitempty"`
	// Whether device supports Android work profiles. If false, this service will not block access to corp data even if an administrator turns on the "Enforce Work Profile" policy.
	SupportsWorkProfile *bool `json:"supportsWorkProfile,omitempty"`
}
