/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AmazonOpenSearchServerlessDestinationUpdate } from "./amazonopensearchserverlessdestinationupdate";
import { AmazonopensearchserviceDestinationUpdate } from "./amazonopensearchservicedestinationupdate";
import { BufferingHints } from "./bufferinghints";
import { CloudWatchLoggingOptions } from "./cloudwatchloggingoptions";
import { CompressionFormatEnum } from "./compressionformatenum";
import { ElasticsearchDestinationUpdate } from "./elasticsearchdestinationupdate";
import { EncryptionConfiguration } from "./encryptionconfiguration";
import { ExtendedS3DestinationUpdate } from "./extendeds3destinationupdate";
import { HttpEndpointDestinationUpdate } from "./httpendpointdestinationupdate";
import { RedshiftDestinationUpdate } from "./redshiftdestinationupdate";
import { SplunkDestinationUpdate } from "./splunkdestinationupdate";
import { Expose, Type } from "class-transformer";

/**
 * [Deprecated] Describes an update for a destination in Amazon S3.
 */
export class UpdateDestinationInputS3DestinationUpdate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BucketARN" })
  bucketARN?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BufferingHints" })
  @Type(() => BufferingHints)
  bufferingHints?: BufferingHints;

  @SpeakeasyMetadata()
  @Expose({ name: "CloudWatchLoggingOptions" })
  @Type(() => CloudWatchLoggingOptions)
  cloudWatchLoggingOptions?: CloudWatchLoggingOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "CompressionFormat" })
  compressionFormat?: CompressionFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionConfiguration" })
  @Type(() => EncryptionConfiguration)
  encryptionConfiguration?: EncryptionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorOutputPrefix" })
  errorOutputPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Prefix" })
  prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleARN" })
  roleARN?: string;
}

export class UpdateDestinationInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AmazonOpenSearchServerlessDestinationUpdate" })
  @Type(() => AmazonOpenSearchServerlessDestinationUpdate)
  amazonOpenSearchServerlessDestinationUpdate?: AmazonOpenSearchServerlessDestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "AmazonopensearchserviceDestinationUpdate" })
  @Type(() => AmazonopensearchserviceDestinationUpdate)
  amazonopensearchserviceDestinationUpdate?: AmazonopensearchserviceDestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentDeliveryStreamVersionId" })
  currentDeliveryStreamVersionId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeliveryStreamName" })
  deliveryStreamName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DestinationId" })
  destinationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ElasticsearchDestinationUpdate" })
  @Type(() => ElasticsearchDestinationUpdate)
  elasticsearchDestinationUpdate?: ElasticsearchDestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "ExtendedS3DestinationUpdate" })
  @Type(() => ExtendedS3DestinationUpdate)
  extendedS3DestinationUpdate?: ExtendedS3DestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "HttpEndpointDestinationUpdate" })
  @Type(() => HttpEndpointDestinationUpdate)
  httpEndpointDestinationUpdate?: HttpEndpointDestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "RedshiftDestinationUpdate" })
  @Type(() => RedshiftDestinationUpdate)
  redshiftDestinationUpdate?: RedshiftDestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "S3DestinationUpdate" })
  @Type(() => UpdateDestinationInputS3DestinationUpdate)
  s3DestinationUpdate?: UpdateDestinationInputS3DestinationUpdate;

  @SpeakeasyMetadata()
  @Expose({ name: "SplunkDestinationUpdate" })
  @Type(() => SplunkDestinationUpdate)
  splunkDestinationUpdate?: SplunkDestinationUpdate;
}
