/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class SubscriptionPlan {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CancellatedOn")
    public OffsetDateTime cancellatedOn;
    public SubscriptionPlan withCancellatedOn(OffsetDateTime cancellatedOn) {
        this.cancellatedOn = cancellatedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CouponCode")
    public String couponCode;
    public SubscriptionPlan withCouponCode(String couponCode) {
        this.couponCode = couponCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrencyCode")
    public String currencyCode;
    public SubscriptionPlan withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExternalIdentifier")
    public String externalIdentifier;
    public SubscriptionPlan withExternalIdentifier(String externalIdentifier) {
        this.externalIdentifier = externalIdentifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Features")
    public SubscriptionPlanFeaturesEnum[] features;
    public SubscriptionPlan withFeatures(SubscriptionPlanFeaturesEnum[] features) {
        this.features = features;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HasDuePayment")
    public Boolean hasDuePayment;
    public SubscriptionPlan withHasDuePayment(Boolean hasDuePayment) {
        this.hasDuePayment = hasDuePayment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("HasDuePaymentSince")
    public OffsetDateTime hasDuePaymentSince;
    public SubscriptionPlan withHasDuePaymentSince(OffsetDateTime hasDuePaymentSince) {
        this.hasDuePaymentSince = hasDuePaymentSince;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;
    public SubscriptionPlan withId(Integer id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Identifier")
    public String identifier;
    public SubscriptionPlan withIdentifier(String identifier) {
        this.identifier = identifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsActive")
    public Boolean isActive;
    public SubscriptionPlan withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsLifetime")
    public Boolean isLifetime;
    public SubscriptionPlan withIsLifetime(Boolean isLifetime) {
        this.isLifetime = isLifetime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastPaymentOn")
    public OffsetDateTime lastPaymentOn;
    public SubscriptionPlan withLastPaymentOn(OffsetDateTime lastPaymentOn) {
        this.lastPaymentOn = lastPaymentOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxClients")
    public Integer maxClients;
    public SubscriptionPlan withMaxClients(Integer maxClients) {
        this.maxClients = maxClients;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public SubscriptionPlan withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnHold")
    public Boolean onHold;
    public SubscriptionPlan withOnHold(Boolean onHold) {
        this.onHold = onHold;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrderIdentifier")
    public String orderIdentifier;
    public SubscriptionPlan withOrderIdentifier(String orderIdentifier) {
        this.orderIdentifier = orderIdentifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Price")
    public Double price;
    public SubscriptionPlan withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Recurrence")
    public SubscriptionPlanRecurrenceEnum recurrence;
    public SubscriptionPlan withRecurrence(SubscriptionPlanRecurrenceEnum recurrence) {
        this.recurrence = recurrence;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SaleId")
    public Long saleId;
    public SubscriptionPlan withSaleId(Long saleId) {
        this.saleId = saleId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public SubscriptionPlanStatusEnum status;
    public SubscriptionPlan withStatus(SubscriptionPlanStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SystemCancelationReason")
    public SubscriptionPlanSystemCancelationReasonEnum systemCancelationReason;
    public SubscriptionPlan withSystemCancelationReason(SubscriptionPlanSystemCancelationReasonEnum systemCancelationReason) {
        this.systemCancelationReason = systemCancelationReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TrialEndsOn")
    public OffsetDateTime trialEndsOn;
    public SubscriptionPlan withTrialEndsOn(OffsetDateTime trialEndsOn) {
        this.trialEndsOn = trialEndsOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrialNumberOfDays")
    public Integer trialNumberOfDays;
    public SubscriptionPlan withTrialNumberOfDays(Integer trialNumberOfDays) {
        this.trialNumberOfDays = trialNumberOfDays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TrialStartsOn")
    public OffsetDateTime trialStartsOn;
    public SubscriptionPlan withTrialStartsOn(OffsetDateTime trialStartsOn) {
        this.trialStartsOn = trialStartsOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserId")
    public Integer userId;
    public SubscriptionPlan withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Version")
    public Integer version;
    public SubscriptionPlan withVersion(Integer version) {
        this.version = version;
        return this;
    }
    
}
