/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`
 */
export enum UserDeleteActionEnum {
  Disassociate = "disassociate",
  Delete = "delete",
}

export class UserDeleteRequest extends SpeakeasyBase {
  /**
   * Delete action options:<br>`disassociate` - Disassociate a user.<br>`delete`-  Permanently delete a user.<br>Note: To delete pending user in the account, use `disassociate`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=action",
  })
  action?: UserDeleteActionEnum;

  /**
   * Transfer email.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transfer_email",
  })
  transferEmail?: string;

  /**
   * Transfer meeting.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transfer_meeting",
  })
  transferMeeting?: boolean;

  /**
   * Transfer recording.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transfer_recording",
  })
  transferRecording?: boolean;

  /**
   * Transfer webinar.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transfer_webinar",
  })
  transferWebinar?: boolean;

  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class UserDeleteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
