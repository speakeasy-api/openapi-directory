// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StepStatusEnum string

const (
	StepStatusEnumStarting  StepStatusEnum = "Starting"
	StepStatusEnumExecuting StepStatusEnum = "Executing"
	StepStatusEnumStopping  StepStatusEnum = "Stopping"
	StepStatusEnumStopped   StepStatusEnum = "Stopped"
	StepStatusEnumFailed    StepStatusEnum = "Failed"
	StepStatusEnumSucceeded StepStatusEnum = "Succeeded"
)

func (e StepStatusEnum) ToPointer() *StepStatusEnum {
	return &e
}

func (e *StepStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Starting":
		fallthrough
	case "Executing":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		fallthrough
	case "Failed":
		fallthrough
	case "Succeeded":
		*e = StepStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepStatusEnum: %v", v)
	}
}
