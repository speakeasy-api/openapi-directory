// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReposCreateReleasePathParams struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposCreateReleaseRequestBody struct {
	// Text describing the contents of the tag.
	Body *string `json:"body,omitempty"`
	// `true` to create a draft (unpublished) release, `false` to create a published one.
	Draft *bool `json:"draft,omitempty"`
	// Whether to automatically generate the name and body for this release. If `name` is specified, the specified name will be used; otherwise, a name will be automatically generated. If `body` is specified, the body will be pre-pended to the automatically generated notes.
	GenerateReleaseNotes *bool `json:"generate_release_notes,omitempty"`
	// The name of the release.
	Name *string `json:"name,omitempty"`
	// `true` to identify the release as a prerelease. `false` to identify the release as a full release.
	Prerelease *bool `json:"prerelease,omitempty"`
	// The name of the tag.
	TagName string `json:"tag_name"`
	// Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually `master`).
	TargetCommitish *string `json:"target_commitish,omitempty"`
}

type ReposCreateReleaseRequest struct {
	PathParams ReposCreateReleasePathParams
	Request    ReposCreateReleaseRequestBody `request:"mediaType=application/json"`
}

type ReposCreateReleaseResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Release *shared.Release
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
