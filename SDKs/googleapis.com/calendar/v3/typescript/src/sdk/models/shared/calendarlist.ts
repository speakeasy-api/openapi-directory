/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CalendarListEntry } from "./calendarlistentry";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class CalendarList extends SpeakeasyBase {
  /**
   * ETag of the collection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Calendars that are present on the user's calendar list.
   */
  @SpeakeasyMetadata({ elemType: CalendarListEntry })
  @Expose({ name: "items" })
  @Type(() => CalendarListEntry)
  items?: CalendarListEntry[];

  /**
   * Type of the collection ("calendar#calendarList").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Token used to access the next page of this result. Omitted if no further results are available, in which case nextSyncToken is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Token used at a later point in time to retrieve only the entries that have changed since this result was returned. Omitted if further results are available, in which case nextPageToken is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextSyncToken" })
  nextSyncToken?: string;
}
