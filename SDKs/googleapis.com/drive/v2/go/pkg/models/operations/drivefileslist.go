// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DriveFilesListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption5 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption6 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption7 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurityOption8 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DriveFilesListSecurity struct {
	Option1 *DriveFilesListSecurityOption1 `security:"option"`
	Option2 *DriveFilesListSecurityOption2 `security:"option"`
	Option3 *DriveFilesListSecurityOption3 `security:"option"`
	Option4 *DriveFilesListSecurityOption4 `security:"option"`
	Option5 *DriveFilesListSecurityOption5 `security:"option"`
	Option6 *DriveFilesListSecurityOption6 `security:"option"`
	Option7 *DriveFilesListSecurityOption7 `security:"option"`
	Option8 *DriveFilesListSecurityOption8 `security:"option"`
}

// DriveFilesListCorpusEnum - The body of items (files/documents) to which the query applies. Deprecated: use 'corpora' instead.
type DriveFilesListCorpusEnum string

const (
	DriveFilesListCorpusEnumDefault DriveFilesListCorpusEnum = "DEFAULT"
	DriveFilesListCorpusEnumDomain  DriveFilesListCorpusEnum = "DOMAIN"
)

func (e *DriveFilesListCorpusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEFAULT":
		fallthrough
	case "DOMAIN":
		*e = DriveFilesListCorpusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DriveFilesListCorpusEnum: %s", s)
	}
}

// DriveFilesListProjectionEnum - This parameter is deprecated and has no function.
type DriveFilesListProjectionEnum string

const (
	DriveFilesListProjectionEnumBasic DriveFilesListProjectionEnum = "BASIC"
	DriveFilesListProjectionEnumFull  DriveFilesListProjectionEnum = "FULL"
)

func (e *DriveFilesListProjectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC":
		fallthrough
	case "FULL":
		*e = DriveFilesListProjectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DriveFilesListProjectionEnum: %s", s)
	}
}

type DriveFilesListRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Groupings of files to which the query applies. Supported groupings are: 'user' (files created by, opened by, or shared directly with the user), 'drive' (files in the specified shared drive as indicated by the 'driveId'), 'domain' (files shared to the user's domain), and 'allDrives' (A combination of 'user' and 'drive' for all drives where the user is a member). When able, use 'user' or 'drive', instead of 'allDrives', for efficiency.
	Corpora *string `queryParam:"style=form,explode=true,name=corpora"`
	// The body of items (files/documents) to which the query applies. Deprecated: use 'corpora' instead.
	Corpus *DriveFilesListCorpusEnum `queryParam:"style=form,explode=true,name=corpus"`
	// ID of the shared drive to search.
	DriveID *string `queryParam:"style=form,explode=true,name=driveId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Whether both My Drive and shared drive items should be included in results.
	IncludeItemsFromAllDrives *bool `queryParam:"style=form,explode=true,name=includeItemsFromAllDrives"`
	// A comma-separated list of IDs of labels to include in the labelInfo part of the response.
	IncludeLabels *string `queryParam:"style=form,explode=true,name=includeLabels"`
	// Specifies which additional view's permissions to include in the response. Only 'published' is supported.
	IncludePermissionsForView *string `queryParam:"style=form,explode=true,name=includePermissionsForView"`
	// Deprecated use includeItemsFromAllDrives instead.
	IncludeTeamDriveItems *bool `queryParam:"style=form,explode=true,name=includeTeamDriveItems"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', 'title', and 'title_natural'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.
	OrderBy *string `queryParam:"style=form,explode=true,name=orderBy"`
	// Page token for files.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// This parameter is deprecated and has no function.
	Projection *DriveFilesListProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// Query string for searching files.
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// A comma-separated list of spaces to query. Supported values are 'drive' and 'appDataFolder'.
	Spaces *string `queryParam:"style=form,explode=true,name=spaces"`
	// Whether the requesting application supports both My Drives and shared drives.
	SupportsAllDrives *bool `queryParam:"style=form,explode=true,name=supportsAllDrives"`
	// Deprecated use supportsAllDrives instead.
	SupportsTeamDrives *bool `queryParam:"style=form,explode=true,name=supportsTeamDrives"`
	// Deprecated use driveId instead.
	TeamDriveID *string `queryParam:"style=form,explode=true,name=teamDriveId"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type DriveFilesListResponse struct {
	ContentType string
	// Successful response
	FileList    *shared.FileList
	StatusCode  int
	RawResponse *http.Response
}
