/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EnterpriseCrmEventbusProtoTriggerCriteria {
    /**
     * Required. Standard filter expression, when true the workflow will be executed. If there's no trigger_criteria_task_implementation_class_name specified, the condition will be validated directly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public String condition;

    public EnterpriseCrmEventbusProtoTriggerCriteria withCondition(String condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public EnterpriseCrmEventbusProtoEventParameters parameters;

    public EnterpriseCrmEventbusProtoTriggerCriteria withParameters(EnterpriseCrmEventbusProtoEventParameters parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * Optional. Implementation class name. The class should implement the \u201cTypedTask\u201d interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerCriteriaTaskImplementationClassName")
    public String triggerCriteriaTaskImplementationClassName;

    public EnterpriseCrmEventbusProtoTriggerCriteria withTriggerCriteriaTaskImplementationClassName(String triggerCriteriaTaskImplementationClassName) {
        this.triggerCriteriaTaskImplementationClassName = triggerCriteriaTaskImplementationClassName;
        return this;
    }
    
    public EnterpriseCrmEventbusProtoTriggerCriteria(){}
}
