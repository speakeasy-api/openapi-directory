<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class Destiny2GetCollectibleNodeDetailsRequest
{
    /**
     * The Destiny Character ID of the character for whom we're getting collectible detail info.
     * 
     * @var int $characterId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=characterId')]
    public int $characterId;
    
    /**
     * The hash identifier of the Presentation Node for whom we should return collectible details. Details will only be returned for collectibles that are direct descendants of this node.
     * 
     * @var int $collectiblePresentationNodeHash
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=collectiblePresentationNodeHash')]
    public int $collectiblePresentationNodeHash;
    
    /**
     * A comma separated list of components to return (as strings or numeric values). See the DestinyComponentType enum for valid components to request. You must request at least one component to receive results.
     * 
     * @var ?array<int> $components
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=components')]
    public ?array $components = null;
    
    /**
     * Destiny membership ID of another user. You may be denied.
     * 
     * @var int $destinyMembershipId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=destinyMembershipId')]
    public int $destinyMembershipId;
    
    /**
     * A valid non-BungieNet membership type.
     * 
     * @var int $membershipType
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=membershipType')]
    public int $membershipType;
    
	public function __construct()
	{
		$this->characterId = 0;
		$this->collectiblePresentationNodeHash = 0;
		$this->components = null;
		$this->destinyMembershipId = 0;
		$this->membershipType = 0;
	}
}
