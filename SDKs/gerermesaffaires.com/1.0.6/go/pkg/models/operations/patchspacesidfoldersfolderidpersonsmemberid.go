// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum string

const (
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumTax              PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "tax"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumWealthManagement PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "wealth management"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumSocial           PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "social"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumSocialManager    PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "social manager"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumPurchases        PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "purchases"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumSales            PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "sales"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumLegal            PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "legal"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnumAccounting       PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum = "accounting"
)

func (e *PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tax":
		fallthrough
	case "wealth management":
		fallthrough
	case "social":
		fallthrough
	case "social manager":
		fallthrough
	case "purchases":
		fallthrough
	case "sales":
		fallthrough
	case "legal":
		fallthrough
	case "accounting":
		*e = PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum: %s", s)
	}
}

type PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum string

const (
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnumCollaborator PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum = "collaborator"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnumAssistant    PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum = "assistant"
	PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnumEmpty        PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum = "empty"
)

func (e *PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "collaborator":
		fallthrough
	case "assistant":
		fallthrough
	case "empty":
		*e = PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum: %s", s)
	}
}

// PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBody - Customer contract to modify
type PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBody struct {
	Groups  *PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyGroupsEnum `json:"Groups,omitempty"`
	IsAdmin *bool                                                             `json:"IsAdmin,omitempty"`
	Role    *PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBodyRoleEnum   `json:"Role,omitempty"`
}

type PatchSpacesIDFoldersFolderIDPersonsMemberIDRequest struct {
	// Customer contract to modify
	RequestBody PatchSpacesIDFoldersFolderIDPersonsMemberIDRequestBody `request:"mediaType=application/json"`
	// id of the customer folder
	FolderID string `pathParam:"style=simple,explode=false,name=folderId"`
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// memberId of the person
	MemberID string `pathParam:"style=simple,explode=false,name=memberId"`
}

type PatchSpacesIDFoldersFolderIDPersonsMemberIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
