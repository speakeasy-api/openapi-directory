"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tfl_api_presentation_entities_roaddisruption as shared_tfl_api_presentation_entities_roaddisruption
from typing import Optional


@dataclasses.dataclass
class RoadDisruptionByIDRequest:
    
    disruption_ids: list[str] = dataclasses.field(metadata={'path_param': { 'field_name': 'disruptionIds', 'style': 'simple', 'explode': False }})
    r"""Comma-separated list of disruption identifiers to filter by."""  
    strip_content: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'stripContent', 'style': 'form', 'explode': True }})
    r"""Optional, defaults to false. When true, removes every property/node except for id, point, severity, severityDescription, startDate, endDate, corridor details, location and comments."""  
    

@dataclasses.dataclass
class RoadDisruptionByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tfl_api_presentation_entities_road_disruption: Optional[shared_tfl_api_presentation_entities_roaddisruption.TflAPIPresentationEntitiesRoadDisruption] = dataclasses.field(default=None)
    r"""OK"""  
    