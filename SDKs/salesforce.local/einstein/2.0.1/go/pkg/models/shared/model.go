// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ModelStatusEnum - Status of the model.
type ModelStatusEnum string

const (
	ModelStatusEnumQueued            ModelStatusEnum = "QUEUED"
	ModelStatusEnumRunning           ModelStatusEnum = "RUNNING"
	ModelStatusEnumSucceeded         ModelStatusEnum = "SUCCEEDED"
	ModelStatusEnumFailed            ModelStatusEnum = "FAILED"
	ModelStatusEnumKilled            ModelStatusEnum = "KILLED"
	ModelStatusEnumFailedWithRetries ModelStatusEnum = "FAILED_WITH_RETRIES"
)

func (e ModelStatusEnum) ToPointer() *ModelStatusEnum {
	return &e
}

func (e *ModelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUEUED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "KILLED":
		fallthrough
	case "FAILED_WITH_RETRIES":
		*e = ModelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelStatusEnum: %v", v)
	}
}

type Model struct {
	// Algorithm used to create the model. Returned only when the modelType is image-detection.
	Algorithm *string `json:"algorithm,omitempty"`
	// Date and time that the model was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// ID of the dataset trained to create the model.
	DatasetID int64 `json:"datasetId"`
	// Not available yet
	DatasetVersionID int64 `json:"datasetVersionId"`
	// Reason the dataset training failed. Returned only if the training status is FAILED.
	FailureMsg *string `json:"failureMsg,omitempty"`
	// Model language inherited from the dataset language. For image datasets, default is N/A. For text datasets, default is en_US.
	Language *string `json:"language,omitempty"`
	// ID of the model. Contains letters and numbers.
	ModelID string `json:"modelId"`
	// Type of data from which the model was created.
	ModelType *string `json:"modelType,omitempty"`
	// Name of the model.
	Name string `json:"name"`
	// Object returned; in this case, model.
	Object *string `json:"object,omitempty"`
	// How far the dataset training has progressed. Values are between 0ï¿½1.
	Progress float64 `json:"progress"`
	// Status of the model.
	Status ModelStatusEnum `json:"status"`
	// Date and time that the model was last updated.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}
