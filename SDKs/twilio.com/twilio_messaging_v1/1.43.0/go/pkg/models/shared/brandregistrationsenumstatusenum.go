// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BrandRegistrationsEnumStatusEnum string

const (
	BrandRegistrationsEnumStatusEnumPending  BrandRegistrationsEnumStatusEnum = "PENDING"
	BrandRegistrationsEnumStatusEnumApproved BrandRegistrationsEnumStatusEnum = "APPROVED"
	BrandRegistrationsEnumStatusEnumFailed   BrandRegistrationsEnumStatusEnum = "FAILED"
	BrandRegistrationsEnumStatusEnumInReview BrandRegistrationsEnumStatusEnum = "IN_REVIEW"
	BrandRegistrationsEnumStatusEnumDeleted  BrandRegistrationsEnumStatusEnum = "DELETED"
)

func (e BrandRegistrationsEnumStatusEnum) ToPointer() *BrandRegistrationsEnumStatusEnum {
	return &e
}

func (e *BrandRegistrationsEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "APPROVED":
		fallthrough
	case "FAILED":
		fallthrough
	case "IN_REVIEW":
		fallthrough
	case "DELETED":
		*e = BrandRegistrationsEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BrandRegistrationsEnumStatusEnum: %v", v)
	}
}
