// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeAccessPointsQueryParams struct {
	// (Optional) Specifies an EFS access point to describe in the response; mutually exclusive with <code>FileSystemId</code>.
	AccessPointID *string `queryParam:"style=form,explode=true,name=AccessPointId"`
	// (Optional) If you provide a <code>FileSystemId</code>, EFS returns all access points for that file system; mutually exclusive with <code>AccessPointId</code>.
	FileSystemID *string `queryParam:"style=form,explode=true,name=FileSystemId"`
	// (Optional) When retrieving all access points for a file system, you can optionally specify the <code>MaxItems</code> parameter to limit the number of objects returned in a response. The default value is 100.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	//  <code>NextToken</code> is present if the response is paginated. You can use <code>NextMarker</code> in the subsequent request to fetch the next page of access point descriptions.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

type DescribeAccessPointsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DescribeAccessPointsRequest struct {
	QueryParams DescribeAccessPointsQueryParams
	Headers     DescribeAccessPointsHeaders
}

type DescribeAccessPointsResponse struct {
	// AccessPointNotFound
	AccessPointNotFound interface{}
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// Success
	DescribeAccessPointsResponse *shared.DescribeAccessPointsResponse
	// FileSystemNotFound
	FileSystemNotFound interface{}
	// InternalServerError
	InternalServerError interface{}
	StatusCode          int
	RawResponse         *http.Response
}
