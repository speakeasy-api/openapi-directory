/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Field - A single field of a message type.
 */
public class Field {
    /**
     * The field cardinality.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardinality")
    public FieldCardinalityEnum cardinality;

    public Field withCardinality(FieldCardinalityEnum cardinality) {
        this.cardinality = cardinality;
        return this;
    }
    
    /**
     * The string value of the default value of this field. Proto2 syntax only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultValue")
    public String defaultValue;

    public Field withDefaultValue(String defaultValue) {
        this.defaultValue = defaultValue;
        return this;
    }
    
    /**
     * The field JSON name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsonName")
    public String jsonName;

    public Field withJsonName(String jsonName) {
        this.jsonName = jsonName;
        return this;
    }
    
    /**
     * The field type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public FieldKindEnum kind;

    public Field withKind(FieldKindEnum kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The field name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Field withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The field number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Integer number;

    public Field withNumber(Integer number) {
        this.number = number;
        return this;
    }
    
    /**
     * The index of the field type in `Type.oneofs`, for message or enumeration types. The first type has index 1; zero means the type is not in the list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oneofIndex")
    public Integer oneofIndex;

    public Field withOneofIndex(Integer oneofIndex) {
        this.oneofIndex = oneofIndex;
        return this;
    }
    
    /**
     * The protocol buffer options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public Option[] options;

    public Field withOptions(Option[] options) {
        this.options = options;
        return this;
    }
    
    /**
     * Whether to use alternative packed wire representation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packed")
    public Boolean packed;

    public Field withPacked(Boolean packed) {
        this.packed = packed;
        return this;
    }
    
    /**
     * The field type URL, without the scheme, for message or enumeration types. Example: `"type.googleapis.com/google.protobuf.Timestamp"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("typeUrl")
    public String typeUrl;

    public Field withTypeUrl(String typeUrl) {
        this.typeUrl = typeUrl;
        return this;
    }
    
    public Field(){}
}
