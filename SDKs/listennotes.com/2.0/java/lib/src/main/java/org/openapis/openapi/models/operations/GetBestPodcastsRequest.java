/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetBestPodcastsRequest {
    /**
     * Get API Key on listennotes.com/api
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-ListenAPI-Key")
    public String xListenAPIKey;
    public GetBestPodcastsRequest withXListenAPIKey(String xListenAPIKey) {
        this.xListenAPIKey = xListenAPIKey;
        return this;
    }
    
    /**
     * You can get the id from `GET /genres`. If not specified, it'll be the overall best podcasts, which can be considered as a special genre.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=genre_id")
    public String genreId;
    public GetBestPodcastsRequest withGenreId(String genreId) {
        this.genreId = genreId;
        return this;
    }
    
    /**
     * Filter best podcasts by language.
     * You can get a list of supported languages (e.g., English, Chinese, Japanese...) from `GET /languages`.
     * If not specified, you'll get "best podcasts" in any language.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=language")
    public String language;
    public GetBestPodcastsRequest withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Page number of those podcasts in this genre.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GetBestPodcastsRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Filter best podcasts by the publisher's country/region.
     * This is to narrow down the results to include "best podcasts" produced in a specific country/region.
     * You can get the supported country codes (e.g., us, jp, gb...) from `GET /regions`.
     * If not specified, you'll get "best podcasts" produced in any country/region.
     * If you want to get a country/region's "best podcasts" that are also produced in that country/region,
     * then you need to specify both **region** and **publisher_region**,
     * e.g., `region=jp` and `publisher_region=jp`.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=publisher_region")
    public String publisherRegion;
    public GetBestPodcastsRequest withPublisherRegion(String publisherRegion) {
        this.publisherRegion = publisherRegion;
        return this;
    }
    
    /**
     * Filter best podcasts by country/region.
     * Please note that podcasts that are "best" in a country/region may not be produced in that country/region.
     * For example, a podcast from the US may be very popular in Canada.
     * You can get the supported country codes (e.g., us, jp, gb...) from `GET /regions`.
     * If not specified, you'll get "best podcasts" in United States.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=region")
    public String region;
    public GetBestPodcastsRequest withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * Whether or not to exclude podcasts with explicit language. 1 is yes, and 0 is no.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=safe_mode")
    public org.openapis.openapi.models.shared.SafeModeParamEnum safeMode;
    public GetBestPodcastsRequest withSafeMode(org.openapis.openapi.models.shared.SafeModeParamEnum safeMode) {
        this.safeMode = safeMode;
        return this;
    }
    
    /**
     * How do you want to sort these podcasts?
     * If you'd like to sort by popularity, please use **listen_score**.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public GetBestPodcastsSortEnum sort;
    public GetBestPodcastsRequest withSort(GetBestPodcastsSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
}
