"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudRecaptchaenterpriseV1RiskAnalysisReasonsEnum(str, Enum):
    CLASSIFICATION_REASON_UNSPECIFIED = 'CLASSIFICATION_REASON_UNSPECIFIED'
    AUTOMATION = 'AUTOMATION'
    UNEXPECTED_ENVIRONMENT = 'UNEXPECTED_ENVIRONMENT'
    TOO_MUCH_TRAFFIC = 'TOO_MUCH_TRAFFIC'
    UNEXPECTED_USAGE_PATTERNS = 'UNEXPECTED_USAGE_PATTERNS'
    LOW_CONFIDENCE_SCORE = 'LOW_CONFIDENCE_SCORE'
    SUSPECTED_CARDING = 'SUSPECTED_CARDING'
    SUSPECTED_CHARGEBACK = 'SUSPECTED_CHARGEBACK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1RiskAnalysis:
    r"""Risk analysis result for an event."""
    
    reasons: Optional[list[GoogleCloudRecaptchaenterpriseV1RiskAnalysisReasonsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasons'), 'exclude': lambda f: f is None }})
    r"""Reasons contributing to the risk analysis verdict."""  
    score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score'), 'exclude': lambda f: f is None }})
    r"""Legitimate event score from 0.0 to 1.0. (1.0 means very likely legitimate traffic while 0.0 means very likely non-legitimate traffic)."""  
    