/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RuleEvaluationStatusEnum } from "./ruleevaluationstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about the status of the rule evaluation.
 */
export class ProfilerRuleEvaluationStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleConfigurationName" })
  ruleConfigurationName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleEvaluationJobArn" })
  ruleEvaluationJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleEvaluationStatus" })
  ruleEvaluationStatus?: RuleEvaluationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusDetails" })
  statusDetails?: string;
}
