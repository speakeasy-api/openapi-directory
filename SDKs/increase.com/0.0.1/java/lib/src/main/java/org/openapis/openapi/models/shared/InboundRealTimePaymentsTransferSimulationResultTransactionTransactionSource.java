/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource - This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
 */
public class InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource {
    /**
     * A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
     */
    @JsonProperty("account_transfer_intention")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntention accountTransferIntention;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withAccountTransferIntention(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntention accountTransferIntention) {
        this.accountTransferIntention = accountTransferIntention;
        return this;
    }
    
    /**
     * A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
     */
    @JsonProperty("ach_check_conversion")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversion achCheckConversion;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withAchCheckConversion(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversion achCheckConversion) {
        this.achCheckConversion = achCheckConversion;
        return this;
    }
    
    /**
     * A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
     */
    @JsonProperty("ach_check_conversion_return")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withAchCheckConversionReturn(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn achCheckConversionReturn) {
        this.achCheckConversionReturn = achCheckConversionReturn;
        return this;
    }
    
    /**
     * A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
     */
    @JsonProperty("ach_transfer_intention")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferIntention achTransferIntention;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withAchTransferIntention(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferIntention achTransferIntention) {
        this.achTransferIntention = achTransferIntention;
        return this;
    }
    
    /**
     * A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
     */
    @JsonProperty("ach_transfer_rejection")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferRejection achTransferRejection;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withAchTransferRejection(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferRejection achTransferRejection) {
        this.achTransferRejection = achTransferRejection;
        return this;
    }
    
    /**
     * A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
     */
    @JsonProperty("ach_transfer_return")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturn achTransferReturn;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withAchTransferReturn(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturn achTransferReturn) {
        this.achTransferReturn = achTransferReturn;
        return this;
    }
    
    /**
     * A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
     */
    @JsonProperty("card_dispute_acceptance")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCardDisputeAcceptance(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance cardDisputeAcceptance) {
        this.cardDisputeAcceptance = cardDisputeAcceptance;
        return this;
    }
    
    /**
     * A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
     */
    @JsonProperty("card_refund")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefund cardRefund;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCardRefund(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefund cardRefund) {
        this.cardRefund = cardRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
     */
    @JsonProperty("card_route_refund")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund cardRouteRefund;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCardRouteRefund(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund cardRouteRefund) {
        this.cardRouteRefund = cardRouteRefund;
        return this;
    }
    
    /**
     * A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
     */
    @JsonProperty("card_route_settlement")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCardRouteSettlement(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement cardRouteSettlement) {
        this.cardRouteSettlement = cardRouteSettlement;
        return this;
    }
    
    /**
     * A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
     */
    @JsonProperty("card_settlement")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlement cardSettlement;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCardSettlement(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlement cardSettlement) {
        this.cardSettlement = cardSettlement;
        return this;
    }
    
    /**
     * The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
     */
    @JsonProperty("category")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum category;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCategory(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum category) {
        this.category = category;
        return this;
    }
    
    /**
     * A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
     */
    @JsonProperty("check_deposit_acceptance")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCheckDepositAcceptance(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance checkDepositAcceptance) {
        this.checkDepositAcceptance = checkDepositAcceptance;
        return this;
    }
    
    /**
     * A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
     */
    @JsonProperty("check_deposit_return")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturn checkDepositReturn;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCheckDepositReturn(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturn checkDepositReturn) {
        this.checkDepositReturn = checkDepositReturn;
        return this;
    }
    
    /**
     * A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
     */
    @JsonProperty("check_transfer_intention")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntention checkTransferIntention;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCheckTransferIntention(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntention checkTransferIntention) {
        this.checkTransferIntention = checkTransferIntention;
        return this;
    }
    
    /**
     * A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
     */
    @JsonProperty("check_transfer_rejection")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferRejection checkTransferRejection;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCheckTransferRejection(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferRejection checkTransferRejection) {
        this.checkTransferRejection = checkTransferRejection;
        return this;
    }
    
    /**
     * A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
     */
    @JsonProperty("check_transfer_return")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferReturn checkTransferReturn;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCheckTransferReturn(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferReturn checkTransferReturn) {
        this.checkTransferReturn = checkTransferReturn;
        return this;
    }
    
    /**
     * A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
     */
    @JsonProperty("check_transfer_stop_payment_request")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withCheckTransferStopPaymentRequest(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest checkTransferStopPaymentRequest) {
        this.checkTransferStopPaymentRequest = checkTransferStopPaymentRequest;
        return this;
    }
    
    /**
     * A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
     */
    @JsonProperty("dispute_resolution")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolution disputeResolution;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withDisputeResolution(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolution disputeResolution) {
        this.disputeResolution = disputeResolution;
        return this;
    }
    
    /**
     * A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
     */
    @JsonProperty("empyreal_cash_deposit")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withEmpyrealCashDeposit(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit empyrealCashDeposit) {
        this.empyrealCashDeposit = empyrealCashDeposit;
        return this;
    }
    
    /**
     * A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
     */
    @JsonProperty("inbound_ach_transfer")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundACHTransfer inboundAchTransfer;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundAchTransfer(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundACHTransfer inboundAchTransfer) {
        this.inboundAchTransfer = inboundAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
     */
    @JsonProperty("inbound_check")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheck inboundCheck;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundCheck(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheck inboundCheck) {
        this.inboundCheck = inboundCheck;
        return this;
    }
    
    /**
     * A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
     */
    @JsonProperty("inbound_international_ach_transfer")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundInternationalAchTransfer(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer inboundInternationalAchTransfer) {
        this.inboundInternationalAchTransfer = inboundInternationalAchTransfer;
        return this;
    }
    
    /**
     * A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
     */
    @JsonProperty("inbound_real_time_payments_transfer_confirmation")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundRealTimePaymentsTransferConfirmation(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation inboundRealTimePaymentsTransferConfirmation) {
        this.inboundRealTimePaymentsTransferConfirmation = inboundRealTimePaymentsTransferConfirmation;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
     */
    @JsonProperty("inbound_wire_drawdown_payment")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundWireDrawdownPayment(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment inboundWireDrawdownPayment) {
        this.inboundWireDrawdownPayment = inboundWireDrawdownPayment;
        return this;
    }
    
    /**
     * A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
     */
    @JsonProperty("inbound_wire_drawdown_payment_reversal")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundWireDrawdownPaymentReversal(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal inboundWireDrawdownPaymentReversal) {
        this.inboundWireDrawdownPaymentReversal = inboundWireDrawdownPaymentReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
     */
    @JsonProperty("inbound_wire_reversal")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireReversal inboundWireReversal;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundWireReversal(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireReversal inboundWireReversal) {
        this.inboundWireReversal = inboundWireReversal;
        return this;
    }
    
    /**
     * A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
     */
    @JsonProperty("inbound_wire_transfer")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireTransfer inboundWireTransfer;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInboundWireTransfer(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireTransfer inboundWireTransfer) {
        this.inboundWireTransfer = inboundWireTransfer;
        return this;
    }
    
    /**
     * A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
     */
    @JsonProperty("interest_payment")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPayment interestPayment;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInterestPayment(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPayment interestPayment) {
        this.interestPayment = interestPayment;
        return this;
    }
    
    /**
     * A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
     */
    @JsonProperty("internal_source")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSource internalSource;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withInternalSource(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSource internalSource) {
        this.internalSource = internalSource;
        return this;
    }
    
    /**
     * A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
     */
    @JsonProperty("sample_funds")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceSampleFunds sampleFunds;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withSampleFunds(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceSampleFunds sampleFunds) {
        this.sampleFunds = sampleFunds;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
     */
    @JsonProperty("wire_drawdown_payment_intention")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withWireDrawdownPaymentIntention(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention wireDrawdownPaymentIntention) {
        this.wireDrawdownPaymentIntention = wireDrawdownPaymentIntention;
        return this;
    }
    
    /**
     * A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
     */
    @JsonProperty("wire_drawdown_payment_rejection")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withWireDrawdownPaymentRejection(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection wireDrawdownPaymentRejection) {
        this.wireDrawdownPaymentRejection = wireDrawdownPaymentRejection;
        return this;
    }
    
    /**
     * A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
     */
    @JsonProperty("wire_transfer_intention")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferIntention wireTransferIntention;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withWireTransferIntention(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferIntention wireTransferIntention) {
        this.wireTransferIntention = wireTransferIntention;
        return this;
    }
    
    /**
     * A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
     */
    @JsonProperty("wire_transfer_rejection")
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferRejection wireTransferRejection;
    public InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource withWireTransferRejection(InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferRejection wireTransferRejection) {
        this.wireTransferRejection = wireTransferRejection;
        return this;
    }
    
}
