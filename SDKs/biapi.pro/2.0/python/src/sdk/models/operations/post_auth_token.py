"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAuthTokenRequestBody:
    
    application: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'application' }})
    r"""application name"""  
    password: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'password' }})
    r"""password"""  
    username: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'username' }})
    r"""username"""  
    grant_type: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'grant_type' }})
    r"""password when requesting a user token and client_credentials for a payment manage token (default: password)"""  
    scope: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'scope' }})
    r"""scope requested for the token"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAuthToken200ApplicationJSON:
    
    scope: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope') }})
    r"""the token scope"""  
    token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token') }})
    r"""the requested token"""  
    expires_in: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expires_in'), 'exclude': lambda f: f is None }})
    r"""duration in seconds of the token validity"""  
    

@dataclasses.dataclass
class PostAuthTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_auth_token_200_application_json_object: Optional[PostAuthToken200ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    