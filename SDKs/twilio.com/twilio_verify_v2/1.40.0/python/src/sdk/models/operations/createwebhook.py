"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import verify_v2_service_webhook as shared_verify_v2_service_webhook
from ..shared import webhook_enum_status_enum as shared_webhook_enum_status_enum
from ..shared import webhook_enum_version_enum as shared_webhook_enum_version_enum
from typing import Optional

CREATE_WEBHOOK_SERVERS = [
	"https://verify.twilio.com",
]


@dataclasses.dataclass
class CreateWebhookSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateWebhookCreateWebhookRequest:
    
    event_types: list[str] = dataclasses.field(metadata={'form': { 'field_name': 'EventTypes' }})
    r"""The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`"""  
    friendly_name: str = dataclasses.field(metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""The string that you assigned to describe the webhook. **This value should not contain PII.**"""  
    webhook_url: str = dataclasses.field(metadata={'form': { 'field_name': 'WebhookUrl' }})
    r"""The URL associated with this Webhook."""  
    status: Optional[shared_webhook_enum_status_enum.WebhookEnumStatusEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Status' }})  
    version: Optional[shared_webhook_enum_version_enum.WebhookEnumVersionEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Version' }})  
    

@dataclasses.dataclass
class CreateWebhookRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The unique SID identifier of the Service."""  
    request_body: Optional[CreateWebhookCreateWebhookRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateWebhookResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    verify_v2_service_webhook: Optional[shared_verify_v2_service_webhook.VerifyV2ServiceWebhook] = dataclasses.field(default=None)
    r"""Created"""  
    