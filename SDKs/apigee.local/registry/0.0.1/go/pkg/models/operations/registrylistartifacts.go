// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type RegistryListArtifactsPathParams struct {
	// The location id.
	Location string `pathParam:"style=simple,explode=false,name=location"`
	// The project id.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

type RegistryListArtifactsQueryParams struct {
	// An expression that can be used to filter the list. Filters use the Common Expression Language and can refer to all message fields except contents.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// The maximum number of artifacts to return. The service may return fewer than this value. If unspecified, at most 50 values will be returned. The maximum is 1000; values above 1000 will be coerced to 1000.
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// A page token, received from a previous `ListArtifacts` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListArtifacts` must match the call that provided the page token.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
}

type RegistryListArtifactsRequest struct {
	PathParams  RegistryListArtifactsPathParams
	QueryParams RegistryListArtifactsQueryParams
}

type RegistryListArtifactsResponse struct {
	ContentType string
	// OK
	ListArtifactsResponse *shared.ListArtifactsResponse
	// Default error response
	Status      *shared.Status
	StatusCode  int
	RawResponse *http.Response
}
