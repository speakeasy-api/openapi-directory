/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * **object** detailing a single photo from a user
 */
export class PhotoObject extends SpeakeasyBase {
  /**
   * **HTML-formatted caption** for *this* photograph
   *
   * @remarks
   * - may contain basic HTML mark-up - e.g., br, li, b, u, p, i, ul and ol
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caption" })
  caption?: string;

  /**
   * **indicator**: `true` if *this* photograph has been tagged as an *editor's pick*; i.e., can be given preference for display
   */
  @SpeakeasyMetadata()
  @Expose({ name: "editorsPick" })
  editorsPick?: boolean;

  /**
   * **URL** for the avatar image of the user that submitted *this* photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ownerAvatarURL" })
  ownerAvatarURL?: string;

  /**
   * **country** in which the owner of *this* photograph is located
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ownerCountry" })
  ownerCountry?: string;

  /**
   * **unique numeric identifier** of the user that owns the photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ownerId" })
  ownerId?: number;

  /**
   * **handle** of the user that submitted *this* photograph; e.g., 'Husker1k'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ownerName" })
  ownerName?: string;

  /**
   * **URL** of the high-resolution version of *this* photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoHiResURL" })
  photoHiResURL?: string;

  /**
   * **unique numeric identifier** of *this* photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoId" })
  photoId?: number;

  /**
   * **URL** of the medium-resolution version of *this* photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoMediumResURL" })
  photoMediumResURL?: string;

  /**
   * **URL** for the standard-resolution version of *this* photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoURL" })
  photoURL?: string;

  /**
   * **product code** for the product that *this* photograph is of
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productCode" })
  productCode?: string;

  /**
   * **natural-language title** of the product associated with *this* photograph; e.g., 'Sydney and Bondi Hop-on Hop-off Tour'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productTitle" })
  productTitle?: string;

  /**
   * **URL-formatted title** of the product associated with *this* photograph; e.g., `Sydney-and-Bondi-Hop-on-Hop-off-Tour`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productUrlName" })
  productUrlName?: string;

  /**
   * **sort order** for *this* photograph; e.g., `3`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortOrder" })
  sortOrder?: number;

  /**
   * ignore (Viator only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sslSupported" })
  sslSupported?: boolean;

  /**
   * **URL** of *this* product's thumbnail image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailURL" })
  thumbnailURL?: string;

  /**
   * **date** on which *this* photograph was submitted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeUploaded" })
  timeUploaded?: string;

  /**
   * **title** of *this* photograph
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
