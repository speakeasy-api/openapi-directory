/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ActivityContentDetails - Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.
 */
public class ActivityContentDetails {
    /**
     * Details about a channel bulletin post.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bulletin")
    public ActivityContentDetailsBulletin bulletin;
    public ActivityContentDetails withBulletin(ActivityContentDetailsBulletin bulletin) {
        this.bulletin = bulletin;
        return this;
    }
    
    /**
     * Details about a resource which was added to a channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channelItem")
    public ActivityContentDetailsChannelItem channelItem;
    public ActivityContentDetails withChannelItem(ActivityContentDetailsChannelItem channelItem) {
        this.channelItem = channelItem;
        return this;
    }
    
    /**
     * Information about a resource that received a comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public ActivityContentDetailsComment comment;
    public ActivityContentDetails withComment(ActivityContentDetailsComment comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * Information about a video that was marked as a favorite video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("favorite")
    public ActivityContentDetailsFavorite favorite;
    public ActivityContentDetails withFavorite(ActivityContentDetailsFavorite favorite) {
        this.favorite = favorite;
        return this;
    }
    
    /**
     * Information about a resource that received a positive (like) rating.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("like")
    public ActivityContentDetailsLike like;
    public ActivityContentDetails withLike(ActivityContentDetailsLike like) {
        this.like = like;
        return this;
    }
    
    /**
     * Information about a new playlist item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playlistItem")
    public ActivityContentDetailsPlaylistItem playlistItem;
    public ActivityContentDetails withPlaylistItem(ActivityContentDetailsPlaylistItem playlistItem) {
        this.playlistItem = playlistItem;
        return this;
    }
    
    /**
     * Details about a resource which is being promoted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("promotedItem")
    public ActivityContentDetailsPromotedItem promotedItem;
    public ActivityContentDetails withPromotedItem(ActivityContentDetailsPromotedItem promotedItem) {
        this.promotedItem = promotedItem;
        return this;
    }
    
    /**
     * Information that identifies the recommended resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recommendation")
    public ActivityContentDetailsRecommendation recommendation;
    public ActivityContentDetails withRecommendation(ActivityContentDetailsRecommendation recommendation) {
        this.recommendation = recommendation;
        return this;
    }
    
    /**
     * Details about a social network post.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("social")
    public ActivityContentDetailsSocial social;
    public ActivityContentDetails withSocial(ActivityContentDetailsSocial social) {
        this.social = social;
        return this;
    }
    
    /**
     * Information about a channel that a user subscribed to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription")
    public ActivityContentDetailsSubscription subscription;
    public ActivityContentDetails withSubscription(ActivityContentDetailsSubscription subscription) {
        this.subscription = subscription;
        return this;
    }
    
    /**
     * Information about the uploaded video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upload")
    public ActivityContentDetailsUpload upload;
    public ActivityContentDetails withUpload(ActivityContentDetailsUpload upload) {
        this.upload = upload;
        return this;
    }
    
}
