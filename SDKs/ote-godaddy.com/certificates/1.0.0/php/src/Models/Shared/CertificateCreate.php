<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CertificateCreate - The certificate order information
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CertificateCreate
{
    /**
     * Required if client would like to receive stateful actions via callback during certificate lifecyle
     * 
     * @var ?string $callbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('callbackUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callbackUrl = null;
    
    /**
     * Name to be secured in certificate. If provided, CN field in CSR will be ignored.
     * 
     * @var ?string $commonName
     */
	#[\JMS\Serializer\Annotation\SerializedName('commonName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commonName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('contact')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CertificateContact')]
    public CertificateContact $contact;
    
    /**
     * Certificate Signing Request
     * 
     * @var string $csr
     */
	#[\JMS\Serializer\Annotation\SerializedName('csr')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $csr;
    
    /**
     * Only used for OV
     * 
     * @var ?bool $intelVPro
     */
	#[\JMS\Serializer\Annotation\SerializedName('intelVPro')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $intelVPro = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('organization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CertificateOrganizationCreate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateOrganizationCreate $organization = null;
    
    /**
     * Number of years for certificate validity period
     * 
     * @var int $period
     */
	#[\JMS\Serializer\Annotation\SerializedName('period')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $period;
    
    /**
     * Type of product requesting a certificate. Only required non-renewal
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CertificateCreateProductTypeEnum $productType
     */
	#[\JMS\Serializer\Annotation\SerializedName('productType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateCreateProductTypeEnum>')]
    public CertificateCreateProductTypeEnum $productType;
    
    /**
     * Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateCreateRootTypeEnum $rootType
     */
	#[\JMS\Serializer\Annotation\SerializedName('rootType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateCreateRootTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateCreateRootTypeEnum $rootType = null;
    
    /**
     * Number of subject alternative names(SAN) to be included in certificate 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CertificateCreateSlotSizeEnum $slotSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('slotSize')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CertificateCreateSlotSizeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CertificateCreateSlotSizeEnum $slotSize = null;
    
    /**
     * Subject Alternative names. Collection of subjectAlternativeNames to be included in certificate.
     * 
     * @var ?array<string> $subjectAlternativeNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectAlternativeNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subjectAlternativeNames = null;
    
	public function __construct()
	{
		$this->callbackUrl = null;
		$this->commonName = null;
		$this->contact = new \OpenAPI\OpenAPI\Models\Shared\CertificateContact();
		$this->csr = "";
		$this->intelVPro = null;
		$this->organization = null;
		$this->period = 0;
		$this->productType = \OpenAPI\OpenAPI\Models\Shared\CertificateCreateProductTypeEnum::DV_SSL;
		$this->rootType = null;
		$this->slotSize = null;
		$this->subjectAlternativeNames = null;
	}
}
