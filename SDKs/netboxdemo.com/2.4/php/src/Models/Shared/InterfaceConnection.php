<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class InterfaceConnection
{
	#[\JMS\Serializer\Annotation\SerializedName('connection_status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InterfaceConnectionConnectionStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InterfaceConnectionConnectionStatus $connectionStatus = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interface_a')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NestedInterface')]
    public NestedInterface $interfaceA;
    
	#[\JMS\Serializer\Annotation\SerializedName('interface_b')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NestedInterface')]
    public NestedInterface $interfaceB;
    
	public function __construct()
	{
		$this->connectionStatus = null;
		$this->id = null;
		$this->interfaceA = new \OpenAPI\OpenAPI\Models\Shared\NestedInterface();
		$this->interfaceB = new \OpenAPI\OpenAPI\Models\Shared\NestedInterface();
	}
}
