/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BoxScore {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayDefense")
    public PlayerDefense[] awayDefense;
    public BoxScore withAwayDefense(PlayerDefense[] awayDefense) {
        this.awayDefense = awayDefense;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayFantasyDefense")
    public FantasyDefenseGame awayFantasyDefense;
    public BoxScore withAwayFantasyDefense(FantasyDefenseGame awayFantasyDefense) {
        this.awayFantasyDefense = awayFantasyDefense;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayKickPuntReturns")
    public PlayerKickPuntReturns[] awayKickPuntReturns;
    public BoxScore withAwayKickPuntReturns(PlayerKickPuntReturns[] awayKickPuntReturns) {
        this.awayKickPuntReturns = awayKickPuntReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayKicking")
    public PlayerKicking[] awayKicking;
    public BoxScore withAwayKicking(PlayerKicking[] awayKicking) {
        this.awayKicking = awayKicking;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayPassing")
    public PlayerPassing[] awayPassing;
    public BoxScore withAwayPassing(PlayerPassing[] awayPassing) {
        this.awayPassing = awayPassing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayPunting")
    public PlayerPunting[] awayPunting;
    public BoxScore withAwayPunting(PlayerPunting[] awayPunting) {
        this.awayPunting = awayPunting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayReceiving")
    public PlayerReceiving[] awayReceiving;
    public BoxScore withAwayReceiving(PlayerReceiving[] awayReceiving) {
        this.awayReceiving = awayReceiving;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayRushing")
    public PlayerRushing[] awayRushing;
    public BoxScore withAwayRushing(PlayerRushing[] awayRushing) {
        this.awayRushing = awayRushing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Game")
    public Game game;
    public BoxScore withGame(Game game) {
        this.game = game;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeDefense")
    public PlayerDefense[] homeDefense;
    public BoxScore withHomeDefense(PlayerDefense[] homeDefense) {
        this.homeDefense = homeDefense;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeFantasyDefense")
    public FantasyDefenseGame homeFantasyDefense;
    public BoxScore withHomeFantasyDefense(FantasyDefenseGame homeFantasyDefense) {
        this.homeFantasyDefense = homeFantasyDefense;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeKickPuntReturns")
    public PlayerKickPuntReturns[] homeKickPuntReturns;
    public BoxScore withHomeKickPuntReturns(PlayerKickPuntReturns[] homeKickPuntReturns) {
        this.homeKickPuntReturns = homeKickPuntReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeKicking")
    public PlayerKicking[] homeKicking;
    public BoxScore withHomeKicking(PlayerKicking[] homeKicking) {
        this.homeKicking = homeKicking;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomePassing")
    public PlayerPassing[] homePassing;
    public BoxScore withHomePassing(PlayerPassing[] homePassing) {
        this.homePassing = homePassing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomePunting")
    public PlayerPunting[] homePunting;
    public BoxScore withHomePunting(PlayerPunting[] homePunting) {
        this.homePunting = homePunting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeReceiving")
    public PlayerReceiving[] homeReceiving;
    public BoxScore withHomeReceiving(PlayerReceiving[] homeReceiving) {
        this.homeReceiving = homeReceiving;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeRushing")
    public PlayerRushing[] homeRushing;
    public BoxScore withHomeRushing(PlayerRushing[] homeRushing) {
        this.homeRushing = homeRushing;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Score score;
    public BoxScore withScore(Score score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScoringDetails")
    public ScoringDetail[] scoringDetails;
    public BoxScore withScoringDetails(ScoringDetail[] scoringDetails) {
        this.scoringDetails = scoringDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScoringPlays")
    public ScoringPlay[] scoringPlays;
    public BoxScore withScoringPlays(ScoringPlay[] scoringPlays) {
        this.scoringPlays = scoringPlays;
        return this;
    }
    
}
