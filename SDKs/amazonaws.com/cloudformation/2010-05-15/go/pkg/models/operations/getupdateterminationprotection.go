// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateTerminationProtectionActionEnum
type GETUpdateTerminationProtectionActionEnum string

const (
	GETUpdateTerminationProtectionActionEnumUpdateTerminationProtection GETUpdateTerminationProtectionActionEnum = "UpdateTerminationProtection"
)

func (e *GETUpdateTerminationProtectionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateTerminationProtection":
		*e = GETUpdateTerminationProtectionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateTerminationProtectionActionEnum: %s", s)
	}
}

// GETUpdateTerminationProtectionVersionEnum
type GETUpdateTerminationProtectionVersionEnum string

const (
	GETUpdateTerminationProtectionVersionEnumTwoThousandAndTen0515 GETUpdateTerminationProtectionVersionEnum = "2010-05-15"
)

func (e *GETUpdateTerminationProtectionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETUpdateTerminationProtectionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateTerminationProtectionVersionEnum: %s", s)
	}
}

type GETUpdateTerminationProtectionQueryParams struct {
	Action GETUpdateTerminationProtectionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Whether to enable termination protection on the specified stack.
	EnableTerminationProtection bool `queryParam:"style=form,explode=true,name=EnableTerminationProtection"`
	// The name or unique ID of the stack for which you want to set termination protection.
	StackName string                                    `queryParam:"style=form,explode=true,name=StackName"`
	Version   GETUpdateTerminationProtectionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETUpdateTerminationProtectionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateTerminationProtectionRequest struct {
	QueryParams GETUpdateTerminationProtectionQueryParams
	Headers     GETUpdateTerminationProtectionHeaders
}

type GETUpdateTerminationProtectionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
