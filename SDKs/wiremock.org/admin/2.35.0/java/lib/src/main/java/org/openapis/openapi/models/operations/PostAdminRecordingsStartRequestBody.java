/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostAdminRecordingsStartRequestBody {
    /**
     * Headers from the request to include in the generated stub mappings, mapped to parameter objects. The only parameter available is "caseInsensitive", which defaults to false
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("captureHeaders")
    public java.util.Map<String, PostAdminRecordingsStartRequestBodyCaptureHeaders> captureHeaders;

    public PostAdminRecordingsStartRequestBody withCaptureHeaders(java.util.Map<String, PostAdminRecordingsStartRequestBodyCaptureHeaders> captureHeaders) {
        this.captureHeaders = captureHeaders;
        return this;
    }
    
    /**
     * Criteria for extracting response bodies to a separate file instead of including it in the stub mapping
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extractBodyCriteria")
    public PostAdminRecordingsStartRequestBodyExtractBodyCriteria extractBodyCriteria;

    public PostAdminRecordingsStartRequestBody withExtractBodyCriteria(PostAdminRecordingsStartRequestBodyExtractBodyCriteria extractBodyCriteria) {
        this.extractBodyCriteria = extractBodyCriteria;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public PostAdminRecordingsStartRequestBodyFilters filters;

    public PostAdminRecordingsStartRequestBody withFilters(PostAdminRecordingsStartRequestBodyFilters filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * Whether to save stub mappings to the file system or just return them
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("persist")
    public Boolean persist;

    public PostAdminRecordingsStartRequestBody withPersist(Boolean persist) {
        this.persist = persist;
        return this;
    }
    
    /**
     * When true, duplicate requests will be added to a Scenario. When false, duplicates are discarded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repeatsAsScenarios")
    public Boolean repeatsAsScenarios;

    public PostAdminRecordingsStartRequestBody withRepeatsAsScenarios(Boolean repeatsAsScenarios) {
        this.repeatsAsScenarios = repeatsAsScenarios;
        return this;
    }
    
    /**
     * Control the request body matcher used in generated stub mappings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestBodyPattern")
    public Object requestBodyPattern;

    public PostAdminRecordingsStartRequestBody withRequestBodyPattern(Object requestBodyPattern) {
        this.requestBodyPattern = requestBodyPattern;
        return this;
    }
    
    /**
     * Target URL when using the record and playback API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetBaseUrl")
    public String targetBaseUrl;

    public PostAdminRecordingsStartRequestBody withTargetBaseUrl(String targetBaseUrl) {
        this.targetBaseUrl = targetBaseUrl;
        return this;
    }
    
    /**
     * List of names of stub mappings transformers to apply to generated stubs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transformerParameters")
    public java.util.Map<String, Object> transformerParameters;

    public PostAdminRecordingsStartRequestBody withTransformerParameters(java.util.Map<String, Object> transformerParameters) {
        this.transformerParameters = transformerParameters;
        return this;
    }
    
    /**
     * Parameters to pass to stub mapping transformers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transformers")
    public String[] transformers;

    public PostAdminRecordingsStartRequestBody withTransformers(String[] transformers) {
        this.transformers = transformers;
        return this;
    }
    
    public PostAdminRecordingsStartRequestBody(){}
}
