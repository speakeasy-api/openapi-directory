// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateJobActionEnum
type GETCreateJobActionEnum string

const (
	GETCreateJobActionEnumCreateJob GETCreateJobActionEnum = "CreateJob"
)

func (e *GETCreateJobActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateJob":
		*e = GETCreateJobActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateJobActionEnum: %s", s)
	}
}

// GETCreateJobJobTypeEnum - Specifies whether the job to initiate is an import or export job.
type GETCreateJobJobTypeEnum string

const (
	GETCreateJobJobTypeEnumImport GETCreateJobJobTypeEnum = "Import"
	GETCreateJobJobTypeEnumExport GETCreateJobJobTypeEnum = "Export"
)

func (e *GETCreateJobJobTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Import":
		fallthrough
	case "Export":
		*e = GETCreateJobJobTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateJobJobTypeEnum: %s", s)
	}
}

// GETCreateJobOperationEnum
type GETCreateJobOperationEnum string

const (
	GETCreateJobOperationEnumCreateJob GETCreateJobOperationEnum = "CreateJob"
)

func (e *GETCreateJobOperationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateJob":
		*e = GETCreateJobOperationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateJobOperationEnum: %s", s)
	}
}

// GETCreateJobVersionEnum
type GETCreateJobVersionEnum string

const (
	GETCreateJobVersionEnumTwoThousandAndTen0601 GETCreateJobVersionEnum = "2010-06-01"
)

func (e *GETCreateJobVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-06-01":
		*e = GETCreateJobVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateJobVersionEnum: %s", s)
	}
}

type GETCreateJobQueryParams struct {
	APIVersion     *string                `queryParam:"style=form,explode=true,name=APIVersion"`
	AWSAccessKeyID string                 `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action         GETCreateJobActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Specifies whether the job to initiate is an import or export job.
	JobType          GETCreateJobJobTypeEnum   `queryParam:"style=form,explode=true,name=JobType"`
	Manifest         string                    `queryParam:"style=form,explode=true,name=Manifest"`
	ManifestAddendum *string                   `queryParam:"style=form,explode=true,name=ManifestAddendum"`
	Operation        GETCreateJobOperationEnum `queryParam:"style=form,explode=true,name=Operation"`
	Signature        string                    `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                    `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                    `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                    `queryParam:"style=form,explode=true,name=Timestamp"`
	ValidateOnly     bool                      `queryParam:"style=form,explode=true,name=ValidateOnly"`
	Version          GETCreateJobVersionEnum   `queryParam:"style=form,explode=true,name=Version"`
}

type GETCreateJobRequest struct {
	QueryParams GETCreateJobQueryParams
}

type GETCreateJobResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
