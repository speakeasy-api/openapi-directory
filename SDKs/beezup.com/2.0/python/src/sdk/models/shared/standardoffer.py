"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import offerfunctionality as shared_offerfunctionality
from ..shared import standardofferlinks as shared_standardofferlinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StandardOffer:
    
    links: shared_standardofferlinks.StandardOfferLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The offer name"""  
    offer_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerId') }})
    r"""The offer Id"""  
    additional_click_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalClickPrice'), 'exclude': lambda f: f is None }})
    r"""The additional click price"""  
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""The currency code <a href=\\"https://en.wikipedia.org/wiki/ISO_4217\\">(ISO 4217)</a>"""  
    fixed_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedPrice'), 'exclude': lambda f: f is None }})
    r"""The fixed price of the offer"""  
    functionalities: Optional[list[shared_offerfunctionality.OfferFunctionality]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('functionalities'), 'exclude': lambda f: f is None }})  
    included_click: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('includedClick'), 'exclude': lambda f: f is None }})
    r"""The included click"""  
    is_most_popular: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isMostPopular'), 'exclude': lambda f: f is None }})
    r"""UI purpose. Is the offer is the most popular"""  
    is_old_offer: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isOldOffer'), 'exclude': lambda f: f is None }})
    r"""Is an old offer"""  
    position: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""UI purpose. The position of the offer"""  
    