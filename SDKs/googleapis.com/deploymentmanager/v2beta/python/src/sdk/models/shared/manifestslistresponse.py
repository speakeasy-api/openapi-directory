"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import manifest as shared_manifest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManifestsListResponse:
    r"""A response containing a partial list of manifests and a page token used to build the next request if the request has been truncated."""
    
    manifests: Optional[list[shared_manifest.Manifest]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manifests'), 'exclude': lambda f: f is None }})
    r"""Output only. Manifests contained in this list response."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""Output only. A token used to continue a truncated list request."""  
    