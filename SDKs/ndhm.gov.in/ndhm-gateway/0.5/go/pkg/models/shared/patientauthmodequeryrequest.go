// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PatientAuthModeQueryRequestQueryRequesterTypeEnum string

const (
	PatientAuthModeQueryRequestQueryRequesterTypeEnumHip PatientAuthModeQueryRequestQueryRequesterTypeEnum = "HIP"
	PatientAuthModeQueryRequestQueryRequesterTypeEnumHiu PatientAuthModeQueryRequestQueryRequesterTypeEnum = "HIU"
)

func (e *PatientAuthModeQueryRequestQueryRequesterTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HIP":
		fallthrough
	case "HIU":
		*e = PatientAuthModeQueryRequestQueryRequesterTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientAuthModeQueryRequestQueryRequesterTypeEnum: %s", s)
	}
}

type PatientAuthModeQueryRequestQueryRequester struct {
	ID   string                                            `json:"id"`
	Type PatientAuthModeQueryRequestQueryRequesterTypeEnum `json:"type"`
}

type PatientAuthModeQueryRequestQuery struct {
	ID string `json:"id"`
	// what is the purpose of user auth
	Purpose   PatientAuthPurposeEnum                    `json:"purpose"`
	Requester PatientAuthModeQueryRequestQueryRequester `json:"requester"`
}

type PatientAuthModeQueryRequest struct {
	Query PatientAuthModeQueryRequestQuery `json:"query"`
	// a nonce, unique for each HTTP request
	RequestID string `json:"requestId"`
	// Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
	Timestamp time.Time `json:"timestamp"`
}
