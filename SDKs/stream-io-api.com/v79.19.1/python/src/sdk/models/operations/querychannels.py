"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import channelsresponse as shared_channelsresponse
from ..shared import querychannelsrequest as shared_querychannelsrequest
from typing import Optional


@dataclasses.dataclass
class QueryChannelsRequest:
    
    query_channels_request: shared_querychannelsrequest.QueryChannelsRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Query Channels Request"""  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'client_id', 'serialization': 'json' }})  
    connection_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'connection_id', 'serialization': 'json' }})  
    

@dataclasses.dataclass
class QueryChannelsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Bad request"""  
    channels_response: Optional[shared_channelsresponse.ChannelsResponse] = dataclasses.field(default=None)
    r"""Channels list"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    