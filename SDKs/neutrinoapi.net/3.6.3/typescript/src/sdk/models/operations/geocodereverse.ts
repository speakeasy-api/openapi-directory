/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GeocodeReverseRequest extends SpeakeasyBase {
  /**
   * The language to display results in, available languages are: <ul> <li>de, en, es, fr, it, pt, ru</li> </ul>
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language-code",
  })
  languageCode?: string;

  /**
   * The location latitude in decimal degrees format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=latitude",
  })
  latitude: string;

  /**
   * The location longitude in decimal degrees format
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=longitude",
  })
  longitude: string;

  /**
   * The zoom level to respond with: <br> <ul> <li>address - the most precise address available</li> <li>street - the street level</li> <li>city - the city level</li> <li>state - the state level</li> <li>country - the country level</li> </ul>
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=zoom" })
  zoom?: string;
}

export class GeocodeReverseResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  geocodeReverseResponse?: shared.GeocodeReverseResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
