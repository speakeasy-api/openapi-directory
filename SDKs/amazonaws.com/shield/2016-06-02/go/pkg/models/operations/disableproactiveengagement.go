// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DisableProactiveEngagementXAmzTargetEnum
type DisableProactiveEngagementXAmzTargetEnum string

const (
	DisableProactiveEngagementXAmzTargetEnumAwsShield20160616DisableProactiveEngagement DisableProactiveEngagementXAmzTargetEnum = "AWSShield_20160616.DisableProactiveEngagement"
)

func (e *DisableProactiveEngagementXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSShield_20160616.DisableProactiveEngagement":
		*e = DisableProactiveEngagementXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisableProactiveEngagementXAmzTargetEnum: %s", s)
	}
}

type DisableProactiveEngagementRequest struct {
	RequestBody       map[string]interface{}                   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DisableProactiveEngagementXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisableProactiveEngagementResponse struct {
	ContentType string
	// Success
	DisableProactiveEngagementResponse map[string]interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// OptimisticLockException
	OptimisticLockException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
