"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CustomLabelKeyEnum(str, Enum):
    r"""The key of the label."""
    CUSTOM_LABEL_KEY_UNSPECIFIED = 'CUSTOM_LABEL_KEY_UNSPECIFIED'
    CUSTOM_LABEL_KEY_0 = 'CUSTOM_LABEL_KEY_0'
    CUSTOM_LABEL_KEY_1 = 'CUSTOM_LABEL_KEY_1'
    CUSTOM_LABEL_KEY_2 = 'CUSTOM_LABEL_KEY_2'
    CUSTOM_LABEL_KEY_3 = 'CUSTOM_LABEL_KEY_3'
    CUSTOM_LABEL_KEY_4 = 'CUSTOM_LABEL_KEY_4'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomLabel:
    r"""The key and value of a custom label."""
    
    key: Optional[CustomLabelKeyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""The key of the label."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""The value of the label."""  
    