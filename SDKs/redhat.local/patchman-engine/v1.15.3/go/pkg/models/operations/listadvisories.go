// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListAdvisoriesSecurity struct {
	RhIdentity string `security:"scheme,type=apiKey,subtype=header,name=x-rh-identity"`
}

// ListAdvisoriesSortEnum - Sort field
type ListAdvisoriesSortEnum string

const (
	ListAdvisoriesSortEnumID                ListAdvisoriesSortEnum = "id"
	ListAdvisoriesSortEnumName              ListAdvisoriesSortEnum = "name"
	ListAdvisoriesSortEnumAdvisoryType      ListAdvisoriesSortEnum = "advisory_type"
	ListAdvisoriesSortEnumSynopsis          ListAdvisoriesSortEnum = "synopsis"
	ListAdvisoriesSortEnumPublicDate        ListAdvisoriesSortEnum = "public_date"
	ListAdvisoriesSortEnumApplicableSystems ListAdvisoriesSortEnum = "applicable_systems"
)

func (e ListAdvisoriesSortEnum) ToPointer() *ListAdvisoriesSortEnum {
	return &e
}

func (e *ListAdvisoriesSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "advisory_type":
		fallthrough
	case "synopsis":
		fallthrough
	case "public_date":
		fallthrough
	case "applicable_systems":
		*e = ListAdvisoriesSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAdvisoriesSortEnum: %v", v)
	}
}

type ListAdvisoriesRequest struct {
	// Filter
	FilterAdvisoryType *string `queryParam:"style=form,explode=true,name=filter[advisory_type]"`
	// Filter
	FilterApplicableSystems *string `queryParam:"style=form,explode=true,name=filter[applicable_systems]"`
	// Filter
	FilterDescription *string `queryParam:"style=form,explode=true,name=filter[description]"`
	// Filter
	FilterID *string `queryParam:"style=form,explode=true,name=filter[id]"`
	// Filter
	FilterPublicDate *string `queryParam:"style=form,explode=true,name=filter[public_date]"`
	// Filter
	FilterSeverity *string `queryParam:"style=form,explode=true,name=filter[severity]"`
	// Filter
	FilterSynopsis *string `queryParam:"style=form,explode=true,name=filter[synopsis]"`
	// Filter systems by their SAP SIDs
	FilterSystemProfileSapSidsIn []string `queryParam:"style=form,explode=true,name=filter[system_profile][sap_sids][in]"`
	// Filter only SAP systems
	FilterSystemProfileSapSystem *string `queryParam:"style=form,explode=true,name=filter[system_profile][sap_system]"`
	// Limit for paging, set -1 to return all
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Offset for paging
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Find matching text
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Sort field
	Sort *ListAdvisoriesSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Tag filter
	Tags []string `queryParam:"style=form,explode=true,name=tags"`
}

type ListAdvisoriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ControllersAdvisoriesResponse *shared.ControllersAdvisoriesResponse
}
