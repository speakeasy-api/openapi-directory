/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryUnmanagedObjectSnapshotsV1Request {
    /**
     * Filter all the snapshots after a date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after_date")
    public OffsetDateTime afterDate;

    public QueryUnmanagedObjectSnapshotsV1Request withAfterDate(OffsetDateTime afterDate) {
        this.afterDate = afterDate;
        return this;
    }
    
    /**
     * Filter all the snapshots before a date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before_date")
    public OffsetDateTime beforeDate;

    public QueryUnmanagedObjectSnapshotsV1Request withBeforeDate(OffsetDateTime beforeDate) {
        this.beforeDate = beforeDate;
        return this;
    }
    
    /**
     * ID of a object.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public String id;

    public QueryUnmanagedObjectSnapshotsV1Request withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryUnmanagedObjectSnapshotsV1Request withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Ignore these many matches in the beginning.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryUnmanagedObjectSnapshotsV1Request withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Search snapshot by date and time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=search_value")
    public String searchValue;

    public QueryUnmanagedObjectSnapshotsV1Request withSearchValue(String searchValue) {
        this.searchValue = searchValue;
        return this;
    }
    
    /**
     * Filter by snapshot type. Valid types are OnDemand, PolicyBased, Retrieved.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=snapshot_type")
    public QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum snapshotType;

    public QueryUnmanagedObjectSnapshotsV1Request withSnapshotType(QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum snapshotType) {
        this.snapshotType = snapshotType;
        return this;
    }
    
    /**
     * Sort by given attribute.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryUnmanagedObjectSnapshotsV1SortByEnum sortBy;

    public QueryUnmanagedObjectSnapshotsV1Request withSortBy(QueryUnmanagedObjectSnapshotsV1SortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * The sort order. The default sort order is ascending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryUnmanagedObjectSnapshotsV1SortOrderEnum sortOrder;

    public QueryUnmanagedObjectSnapshotsV1Request withSortOrder(QueryUnmanagedObjectSnapshotsV1SortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryUnmanagedObjectSnapshotsV1Request(@JsonProperty("id") String id) {
        this.id = id;
  }
}
