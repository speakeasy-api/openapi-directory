"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIPlanSubscriptionOut:
    r"""The API Plan governing the subscription."""
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiKey'), 'exclude': lambda f: f is None }})
    r"""User API Key."""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""Current plan Currency for prices."""  
    currency_factor: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyFactor'), 'exclude': lambda f: f is None }})
    r"""For USD, GBP, EUR - the factor is 1."""  
    plan_base_fees_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planBaseFeesKey'), 'exclude': lambda f: f is None }})
    r"""Current plan key (as in Stripe product)."""  
    plan_ended: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planEnded'), 'exclude': lambda f: f is None }})
    r"""Datetime when the user ended the plan."""  
    plan_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planName'), 'exclude': lambda f: f is None }})
    r"""Current plan name."""  
    plan_quota: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planQuota'), 'exclude': lambda f: f is None }})
    r"""Current plan quota in quantity of units (NB: some API use several units per name)."""  
    plan_started: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planStarted'), 'exclude': lambda f: f is None }})
    r"""Datetime when the user subscribed to the current plan."""  
    plan_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('planStatus'), 'exclude': lambda f: f is None }})
    r"""Plan status."""  
    price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    r"""Current plan price for overages expressed in Currency (extra price per unit above the free quota)."""  
    price_overage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceOverage'), 'exclude': lambda f: f is None }})
    r"""Current plan price for overages expressed in Currency (extra price per unit above the free quota)."""  
    price_overage_usd: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceOverageUSD'), 'exclude': lambda f: f is None }})
    r"""Current plan price for overages expressed in USD (extra price per unit above the free quota)."""  
    price_usd: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceUSD'), 'exclude': lambda f: f is None }})
    r"""Current plan monthly price expressed in USD (includes a free quota)."""  
    prior_plan_started: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priorPlanStarted'), 'exclude': lambda f: f is None }})
    r"""Datetime when the user subscribed to the prior plan."""  
    stripe_customer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stripeCustomerId'), 'exclude': lambda f: f is None }})
    r"""Stripe customer identifier."""  
    stripe_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stripeStatus'), 'exclude': lambda f: f is None }})
    r"""Stripe status ex active."""  
    stripe_subscription: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stripeSubscription'), 'exclude': lambda f: f is None }})
    r"""Stripe subscription identifier."""  
    tax_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxRate'), 'exclude': lambda f: f is None }})
    r"""Applicable tax rate for the plan."""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})
    r"""Internal user identifier."""  
    