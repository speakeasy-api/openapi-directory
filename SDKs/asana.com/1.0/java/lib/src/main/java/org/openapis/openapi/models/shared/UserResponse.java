/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserResponse - A *user* object represents an account in Asana that can be given access to various workspaces, projects, and tasks.
 */
public class UserResponse {
    /**
     * The user's email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public UserResponse withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;
    public UserResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * *Read-only except when same user as requester*. The user\u2019s name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UserResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A map of the user\u2019s profile photo in various sizes, or null if no photo is set. Sizes provided are 21, 27, 36, 60, 128, and 1024. All images are in PNG format, except for 1024 (which is in JPEG format).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photo")
    public UserResponsePhoto photo;
    public UserResponse withPhoto(UserResponsePhoto photo) {
        this.photo = photo;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;
    public UserResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * Workspaces and organizations this user may access.
     * Note\: The API will only return workspaces and organizations that also contain the authenticated user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaces")
    public WorkspaceCompact[] workspaces;
    public UserResponse withWorkspaces(WorkspaceCompact[] workspaces) {
        this.workspaces = workspaces;
        return this;
    }
    
}
