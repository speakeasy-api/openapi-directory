"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import currency_enum as shared_currency_enum
from ..shared import documentinserttype_enum as shared_documentinserttype_enum
from ..shared import documentlanguage_enum as shared_documentlanguage_enum
from ..shared import documentsettings as shared_documentsettings
from ..shared import paymentmethod_enum as shared_paymentmethod_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DocumentInsert:
    r"""DocumentInsert object that you would like to store."""
    
    block_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('block_id') }})  
    currency: shared_currency_enum.CurrencyEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})  
    due_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('due_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})  
    fulfillment_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fulfillment_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})  
    language: shared_documentlanguage_enum.DocumentLanguageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language') }})  
    partner_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partner_id') }})  
    payment_method: shared_paymentmethod_enum.PaymentMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_method') }})  
    type: shared_documentinserttype_enum.DocumentInsertTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    bank_account_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bank_account_id'), 'exclude': lambda f: f is None }})  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})  
    conversion_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion_rate'), 'exclude': lambda f: f is None }})  
    electronic: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('electronic'), 'exclude': lambda f: f is None }})  
    items: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})  
    paid: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paid'), 'exclude': lambda f: f is None }})  
    settings: Optional[shared_documentsettings.DocumentSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settings'), 'exclude': lambda f: f is None }})  
    vendor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vendor_id'), 'exclude': lambda f: f is None }})  
    