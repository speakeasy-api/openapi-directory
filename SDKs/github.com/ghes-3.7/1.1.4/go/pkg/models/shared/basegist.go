// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type BaseGistFiles struct {
	Filename *string `json:"filename,omitempty"`
	Language *string `json:"language,omitempty"`
	RawURL   *string `json:"raw_url,omitempty"`
	Size     *int64  `json:"size,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// BaseGist - Base Gist
type BaseGist struct {
	Comments    int64                    `json:"comments"`
	CommentsURL string                   `json:"comments_url"`
	CommitsURL  string                   `json:"commits_url"`
	CreatedAt   time.Time                `json:"created_at"`
	Description string                   `json:"description"`
	Files       map[string]BaseGistFiles `json:"files"`
	Forks       []interface{}            `json:"forks,omitempty"`
	ForksURL    string                   `json:"forks_url"`
	GitPullURL  string                   `json:"git_pull_url"`
	GitPushURL  string                   `json:"git_push_url"`
	History     []interface{}            `json:"history,omitempty"`
	HTMLURL     string                   `json:"html_url"`
	ID          string                   `json:"id"`
	NodeID      string                   `json:"node_id"`
	// A GitHub user.
	Owner     *SimpleUser `json:"owner,omitempty"`
	Public    bool        `json:"public"`
	Truncated *bool       `json:"truncated,omitempty"`
	UpdatedAt time.Time   `json:"updated_at"`
	URL       string      `json:"url"`
	// A GitHub user.
	User NullableSimpleUser `json:"user"`
}
