<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IdProviderAuthDomainSummary - Returns a summary of the newly created IdP authentication domain.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IdProviderAuthDomainSummary
{
    /**
     * Entity ID of the Id Provider (IdP).
     * 
     * @var string $entityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $entityId;
    
    /**
     * ID of this authentication domain.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Domain name.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * ID of the organization that added the authentication domain.
     * 
     * @var ?string $organizationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('organizationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $organizationId = null;
    
    /**
     * The Identity Provider (IdP) X509 certificate, stored using the PEM format, used to sign the SAML assertion.
     * 
     * @var string $signCert
     */
	#[\JMS\Serializer\Annotation\SerializedName('signCert')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $signCert;
    
    /**
     * The expiry date of the Identity Provider (IdP) X509 certificate. The date is a string with the ISO-8601 format like 2017-01-23T20:12:45.000Z with milliseconds precision.
     * 
     * @var string $signCertExpiryDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('signCertExpiryDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $signCertExpiryDate;
    
    /**
     * The clock skewness tolerance, in seconds, between the Identity Provider (IdP) and the Rubrik cluster.
     * 
     * @var int $skewnessInSec
     */
	#[\JMS\Serializer\Annotation\SerializedName('skewnessInSec')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $skewnessInSec;
    
    /**
     * The Identity Provider (IdP) endpoint that Rubrik sends authentication request to in order to initiate SSO login.
     * 
     * @var string $ssoUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssoUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ssoUrl;
    
	public function __construct()
	{
		$this->entityId = "";
		$this->id = "";
		$this->name = "";
		$this->organizationId = null;
		$this->signCert = "";
		$this->signCertExpiryDate = "";
		$this->skewnessInSec = 0;
		$this->ssoUrl = "";
	}
}
