// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CheckDetailsGroupEnum - table group type
type CheckDetailsGroupEnum string

const (
	CheckDetailsGroupEnumProfile      CheckDetailsGroupEnum = "profile"
	CheckDetailsGroupEnumLegal        CheckDetailsGroupEnum = "legal"
	CheckDetailsGroupEnumAffiliations CheckDetailsGroupEnum = "affiliations"
	CheckDetailsGroupEnumVehicle      CheckDetailsGroupEnum = "vehicle"
	CheckDetailsGroupEnumGlobal       CheckDetailsGroupEnum = "global"
	CheckDetailsGroupEnumMedia        CheckDetailsGroupEnum = "media"
	CheckDetailsGroupEnumUnknown      CheckDetailsGroupEnum = "unknown"
)

func (e *CheckDetailsGroupEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "profile":
		fallthrough
	case "legal":
		fallthrough
	case "affiliations":
		fallthrough
	case "vehicle":
		fallthrough
	case "global":
		fallthrough
	case "media":
		fallthrough
	case "unknown":
		*e = CheckDetailsGroupEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckDetailsGroupEnum: %s", s)
	}
}

// CheckDetailsResultEnum - Database result
type CheckDetailsResultEnum string

const (
	CheckDetailsResultEnumPending  CheckDetailsResultEnum = "pending"
	CheckDetailsResultEnumFound    CheckDetailsResultEnum = "found"
	CheckDetailsResultEnumNotFound CheckDetailsResultEnum = "not_found"
	CheckDetailsResultEnumError    CheckDetailsResultEnum = "error"
)

func (e *CheckDetailsResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "found":
		fallthrough
	case "not_found":
		fallthrough
	case "error":
		*e = CheckDetailsResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckDetailsResultEnum: %s", s)
	}
}

// CheckDetails - Represents background check details
type CheckDetails struct {
	// Associated background check ID
	CheckID string `json:"check_id"`
	// Details dataset
	DataSet string `json:"data_set"`
	// Database name. Do not use this field to identify the database as its value may vary as the check is completed
	DatabaseName string `json:"database_name"`
	// table group type
	Group CheckDetailsGroupEnum `json:"group"`
	// Detail ID
	ID string `json:"id"`
	// Database result
	Result CheckDetailsResultEnum `json:"result"`
	// Partial detail score. Scores are aggregated later in the background check
	Score float64 `json:"score"`
	// Query detailed information
	Tables []Table `json:"tables"`
}
