// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETVerifyEmailAddressActionEnum
type GETVerifyEmailAddressActionEnum string

const (
	GETVerifyEmailAddressActionEnumVerifyEmailAddress GETVerifyEmailAddressActionEnum = "VerifyEmailAddress"
)

func (e GETVerifyEmailAddressActionEnum) ToPointer() *GETVerifyEmailAddressActionEnum {
	return &e
}

func (e *GETVerifyEmailAddressActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VerifyEmailAddress":
		*e = GETVerifyEmailAddressActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVerifyEmailAddressActionEnum: %v", v)
	}
}

// GETVerifyEmailAddressVersionEnum
type GETVerifyEmailAddressVersionEnum string

const (
	GETVerifyEmailAddressVersionEnumTwoThousandAndTen1201 GETVerifyEmailAddressVersionEnum = "2010-12-01"
)

func (e GETVerifyEmailAddressVersionEnum) ToPointer() *GETVerifyEmailAddressVersionEnum {
	return &e
}

func (e *GETVerifyEmailAddressVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETVerifyEmailAddressVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVerifyEmailAddressVersionEnum: %v", v)
	}
}

type GETVerifyEmailAddressRequest struct {
	Action GETVerifyEmailAddressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The email address to be verified.
	EmailAddress      string                           `queryParam:"style=form,explode=true,name=EmailAddress"`
	Version           GETVerifyEmailAddressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETVerifyEmailAddressResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
