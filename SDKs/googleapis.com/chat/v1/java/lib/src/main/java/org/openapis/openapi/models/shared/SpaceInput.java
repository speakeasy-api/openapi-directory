/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SpaceInput - A space in Google Chat. Spaces are conversations between two or more users or 1:1 messages between a user and a Chat app.
 */
public class SpaceInput {
    /**
     * The space's display name. Required when [creating a space](https://developers.google.com/chat/api/reference/rest/v1/spaces/create). For direct messages, this field may be empty. Supports up to 128 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public SpaceInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Resource name of the space. Format: spaces/{space}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SpaceInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional. Whether the space is a DM between a Chat app and a single human.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("singleUserBotDm")
    public Boolean singleUserBotDm;

    public SpaceInput withSingleUserBotDm(Boolean singleUserBotDm) {
        this.singleUserBotDm = singleUserBotDm;
        return this;
    }
    
    /**
     * Details about the space including description and rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spaceDetails")
    public SpaceDetails spaceDetails;

    public SpaceInput withSpaceDetails(SpaceDetails spaceDetails) {
        this.spaceDetails = spaceDetails;
        return this;
    }
    
    public SpaceInput(){}
}
