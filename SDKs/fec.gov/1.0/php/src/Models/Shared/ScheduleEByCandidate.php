<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ScheduleEByCandidate
{
	#[\JMS\Serializer\Annotation\SerializedName('candidate_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidateId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('candidate_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidateName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('committee_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $committeeId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('committee_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $committeeName = null;
    
    /**
     * 
     * Number of records making up the total.
     * 
     * 
     * @var ?int $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $count = null;
    
    /**
     * 
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     * 
     * @var int $cycle
     */
	#[\JMS\Serializer\Annotation\SerializedName('cycle')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $cycle;
    
    /**
     * Explains if the money was spent in order to support or oppose a candidate or candidates. (Coded S or O for support or oppose.) This indicator applies to independent expenditures and communication costs.
     * 
     * @var string $supportOpposeIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('support_oppose_indicator')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $supportOpposeIndicator;
    
    /**
     * Sum of transactions
     * 
     * @var ?float $total
     */
	#[\JMS\Serializer\Annotation\SerializedName('total')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $total = null;
    
	public function __construct()
	{
		$this->candidateId = null;
		$this->candidateName = null;
		$this->committeeId = null;
		$this->committeeName = null;
		$this->count = null;
		$this->cycle = 0;
		$this->supportOpposeIndicator = "";
		$this->total = null;
	}
}
