"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from ..shared import inventoryreference as shared_inventoryreference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReportTask:
    r"""This type defines the fields in a report task."""
    
    campaign_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaignIds'), 'exclude': lambda f: f is None }})
    r"""A list of IDs for the campaigns that are included in the report. A campaign ID is a unique eBay-assigned identifier of the campaign that's generated when the campaign is created.<br /><br />Call <b>getCampaigns</b> to return the current campaign IDs for a seller."""  
    date_from: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateFrom'), 'exclude': lambda f: f is None }})
    r"""The date defining the start of the timespan covered by the report, formatted as an <a href=\\"https://www.iso.org/iso-8601-date-and-time-format.html \\" title=\\"https://www.iso.org \\" target=\\"_blank\\">ISO 8601</a> timestamp."""  
    date_to: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateTo'), 'exclude': lambda f: f is None }})
    r"""The date defining the end of the timespan covered by the report, formatted as an <a href=\\"https://www.iso.org/iso-8601-date-and-time-format.html \\" title=\\"https://www.iso.org \\" target=\\"_blank\\">ISO 8601</a> timestamp."""  
    dimensions: Optional[list[shared_dimension.Dimension]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""A list containing the dimension in the report."""  
    funding_models: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingModels'), 'exclude': lambda f: f is None }})
    r"""The funding model for the campaign that shall be included in the report.<br /><br /><span class=\\"tablenote\\"><span style=\\"color:#004680\\"><strong>Note:</strong></span> The default funding model for Promoted Listings reports is <code>COST_PER_SALE</code>.</span><br /><br /><b>Valid Values:</b><ul><li><code>COST_PER_SALE</code></li><li><code>COST_PER_CLICK</code></li></ul>"""  
    inventory_references: Optional[list[shared_inventoryreference.InventoryReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inventoryReferences'), 'exclude': lambda f: f is None }})
    r"""If supplied in the request, this field returns a list of the seller's inventory reference IDs included in the report.  <p>Each item is referenced by a pair of <b>inventoryRefernceID</b> and <b>inventoryReferenceType</b> values, where an inventory reference ID can be either a seller-defined <b>SKU</b> value or an <b>inventoryItemGroupKey</b>. An <b>inventoryItemGroupKey</b> is seller-defined ID for an inventory item group (a multiple-variation listing), and is created and used by the <a href=\\"/api-docs/sell/inventory/resources/methods\\">Inventory API</a>.</p>"""  
    listing_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listingIds'), 'exclude': lambda f: f is None }})
    r"""If supplied in the request, this field returns a list of the listing IDs included in the report. A listing ID is an eBay-assigned ID that's generated when a listing is created."""  
    marketplace_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketplaceId'), 'exclude': lambda f: f is None }})
    r"""The ID of the eBay marketplace used by the report task. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/ba:MarketplaceIdEnum'>eBay API documentation</a>"""  
    metric_keys: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricKeys'), 'exclude': lambda f: f is None }})
    r"""A list of metrics for the report task."""  
    report_expiration_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportExpirationDate'), 'exclude': lambda f: f is None }})
    r"""The date after which the report is no longer be available. Reports are available for 30 days and you cannot download a report after it has expired.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ"""  
    report_format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportFormat'), 'exclude': lambda f: f is None }})
    r"""Indicates the format of the report. Currently, only <code>TSV_GZIP</code> is supported. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportFormatEnum'>eBay API documentation</a>"""  
    report_href: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportHref'), 'exclude': lambda f: f is None }})
    r"""The URL of the generated report, which can be used to download the report once it has been generated."""  
    report_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportId'), 'exclude': lambda f: f is None }})
    r"""A unique eBay-assigned ID for the report."""  
    report_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportName'), 'exclude': lambda f: f is None }})
    r"""An eBay-assigned name for the report that's created by the <b>createReportTask</b> call. This name is unique for the seller."""  
    report_task_completion_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTaskCompletionDate'), 'exclude': lambda f: f is None }})
    r"""The date the report task completed the report generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ"""  
    report_task_creation_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTaskCreationDate'), 'exclude': lambda f: f is None }})
    r"""The date the report task was created.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ"""  
    report_task_expected_completion_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTaskExpectedCompletionDate'), 'exclude': lambda f: f is None }})
    r"""The date the report task is expected to complete the report generation.  <br><br><b>Format (UTC): </b> yyyy-MM-ddThh:mm:ss.sssZ"""  
    report_task_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTaskId'), 'exclude': lambda f: f is None }})
    r"""The unique eBay-assigned ID of the report task. This value is generated when the report task is created with a call to <b>createReportTask</b>."""  
    report_task_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTaskStatus'), 'exclude': lambda f: f is None }})
    r"""Indicates the current state of the report task. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:TaskStatusEnum'>eBay API documentation</a>"""  
    report_task_status_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportTaskStatusMessage'), 'exclude': lambda f: f is None }})
    r"""A status message with additional information about the report task."""  
    report_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportType'), 'exclude': lambda f: f is None }})
    r"""Indicates type of report associated with the report task.<br/><br/><span class=\\"tablenote\\"><b>Note:</b> INVENTORY_PERFORMANCE_REPORT is not currently available; availability date is pending.</span> For implementation help, refer to <a href='https://developer.ebay.com/api-docs/sell/marketing/types/plr:ReportTypeEnum'>eBay API documentation</a>"""  
    