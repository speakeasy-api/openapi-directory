"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BucketCountPolicyAllowsUnencryptedObjectUploads:
    r"""Provides information about the number of S3 buckets whose bucket policies do or don't require server-side encryption of objects when objects are added to the buckets."""
    
    allows_unencrypted_object_uploads: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowsUnencryptedObjectUploads'), 'exclude': lambda f: f is None }})  
    denies_unencrypted_object_uploads: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deniesUnencryptedObjectUploads'), 'exclude': lambda f: f is None }})  
    unknown: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unknown'), 'exclude': lambda f: f is None }})  
    