/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Classification } from "./classification";
import { Image } from "./image";
import { Source } from "./source";
import { Expose, Type } from "class-transformer";

/**
 * Type of the entity
 */
export enum AttractionTypeEnum {
  Event = "event",
  Venue = "venue",
  Attraction = "attraction",
}

/**
 * Attraction
 */
export class Attraction extends SpeakeasyBase {
  /**
   * Indicate if the entity is active, inactive entity won't appear in Discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Additional informations of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalInfos" })
  additionalInfos?: Record<string, string>;

  /**
   * Attraction's classifications
   */
  @SpeakeasyMetadata({ elemType: Classification })
  @Expose({ name: "classifications" })
  @Type(() => Classification)
  classifications?: Classification[];

  /**
   * Descriptions of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "descriptions" })
  descriptions?: Record<string, string>;

  /**
   * True if the entity is dicoverable in discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discoverable" })
  discoverable?: boolean;

  /**
   * Images of the entity
   */
  @SpeakeasyMetadata({ elemType: Image })
  @Expose({ name: "images" })
  @Type(() => Image)
  images?: Image[];

  /**
   * Names of the entity - multi-lingual fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "names" })
  names?: Record<string, string>;

  /**
   * References of this entity in an other system. Reference is the exact same entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "references" })
  references?: Record<string, string>;

  /**
   * Relationships on the entity, like if the entity is a duplicate of another one
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  relationships?: Record<string, any>[];

  /**
   * Source
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => Source)
  source?: Source;

  /**
   * Indicate if this is a test entity, by default test entities won't appear in discovery API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "test" })
  test?: boolean;

  /**
   * Type of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: AttractionTypeEnum;

  /**
   * URL of a web site detail page of the entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * Version of the entity. Version is to avoid updated an entity with an older version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
