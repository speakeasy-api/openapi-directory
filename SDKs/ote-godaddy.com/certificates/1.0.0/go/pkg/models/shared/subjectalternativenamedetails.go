// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubjectAlternativeNameDetailsStatusEnum - Total number of page results
type SubjectAlternativeNameDetailsStatusEnum string

const (
	SubjectAlternativeNameDetailsStatusEnumPending   SubjectAlternativeNameDetailsStatusEnum = "PENDING"
	SubjectAlternativeNameDetailsStatusEnumInvalid   SubjectAlternativeNameDetailsStatusEnum = "INVALID"
	SubjectAlternativeNameDetailsStatusEnumCompleted SubjectAlternativeNameDetailsStatusEnum = "COMPLETED"
	SubjectAlternativeNameDetailsStatusEnumFraud     SubjectAlternativeNameDetailsStatusEnum = "FRAUD"
)

func (e SubjectAlternativeNameDetailsStatusEnum) ToPointer() *SubjectAlternativeNameDetailsStatusEnum {
	return &e
}

func (e *SubjectAlternativeNameDetailsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "INVALID":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FRAUD":
		*e = SubjectAlternativeNameDetailsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubjectAlternativeNameDetailsStatusEnum: %v", v)
	}
}

type SubjectAlternativeNameDetails struct {
	// Total number of page results
	Status SubjectAlternativeNameDetailsStatusEnum `json:"status"`
	// Subject alternative name to be included in certificate
	SubjectAlternativeName string `json:"subjectAlternativeName"`
}
