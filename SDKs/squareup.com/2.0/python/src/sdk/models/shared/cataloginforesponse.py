"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cataloginforesponselimits as shared_cataloginforesponselimits
from ..shared import error as shared_error
from ..shared import standardunitdescriptiongroup as shared_standardunitdescriptiongroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogInfoResponse:
    r"""Success"""
    
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Any errors that occurred during the request."""  
    limits: Optional[shared_cataloginforesponselimits.CatalogInfoResponseLimits] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limits'), 'exclude': lambda f: f is None }})  
    standard_unit_description_group: Optional[shared_standardunitdescriptiongroup.StandardUnitDescriptionGroup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('standard_unit_description_group'), 'exclude': lambda f: f is None }})
    r"""Group of standard measurement units."""  
    