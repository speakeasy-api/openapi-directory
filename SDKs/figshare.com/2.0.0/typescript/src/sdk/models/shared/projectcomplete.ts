/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Collaborator } from "./collaborator";
import { FundingInformation } from "./fundinginformation";
import { Expose, Type } from "class-transformer";

/**
 * OK. Project representation
 */
export class ProjectComplete extends SpeakeasyBase {
  /**
   * List of project collaborators
   */
  @SpeakeasyMetadata({ elemType: Collaborator })
  @Expose({ name: "collaborators" })
  @Type(() => Collaborator)
  collaborators: Collaborator[];

  /**
   * Project description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Project public url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "figshare_url" })
  figshareUrl: string;

  /**
   * Project funding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "funding" })
  funding: string;

  /**
   * Full Project funding information
   */
  @SpeakeasyMetadata({ elemType: FundingInformation })
  @Expose({ name: "funding_list" })
  @Type(() => FundingInformation)
  fundingList: FundingInformation[];

  /**
   * Project id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Date when project was published
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_date" })
  publishedDate: string;

  /**
   * Project title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * Api endpoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
