"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class AccessAddRequest:
    
    agents: str = dataclasses.field(metadata={'path_param': { 'field_name': 'agents', 'style': 'simple', 'explode': False }})
    r"""Agent range in minimal range representation"""  
    mask: str = dataclasses.field(metadata={'path_param': { 'field_name': 'mask', 'style': 'simple', 'explode': False }})
    r"""Currently not used"""  
    user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'user', 'style': 'simple', 'explode': False }})
    r"""Username of the simulator hosting system"""  
    

@dataclasses.dataclass
class AccessAddResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_add_200_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    