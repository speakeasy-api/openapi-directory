"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PortProbeDetail = void 0;
var utils_1 = require("../../../internal/utils");
var actionlocalipdetails_1 = require("./actionlocalipdetails");
var actionlocalportdetails_1 = require("./actionlocalportdetails");
var actionremoteipdetails_1 = require("./actionremoteipdetails");
var class_transformer_1 = require("class-transformer");
/**
 * A port scan that was part of the port probe. For each scan, PortProbeDetails provides information about the local IP address and port that were scanned, and the remote IP address that the scan originated from.
 */
var PortProbeDetail = /** @class */ (function (_super) {
    __extends(PortProbeDetail, _super);
    function PortProbeDetail() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LocalIpDetails" }),
        (0, class_transformer_1.Type)(function () { return actionlocalipdetails_1.ActionLocalIpDetails; }),
        __metadata("design:type", actionlocalipdetails_1.ActionLocalIpDetails)
    ], PortProbeDetail.prototype, "localIpDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LocalPortDetails" }),
        (0, class_transformer_1.Type)(function () { return actionlocalportdetails_1.ActionLocalPortDetails; }),
        __metadata("design:type", actionlocalportdetails_1.ActionLocalPortDetails)
    ], PortProbeDetail.prototype, "localPortDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RemoteIpDetails" }),
        (0, class_transformer_1.Type)(function () { return actionremoteipdetails_1.ActionRemoteIpDetails; }),
        __metadata("design:type", actionremoteipdetails_1.ActionRemoteIpDetails)
    ], PortProbeDetail.prototype, "remoteIpDetails", void 0);
    return PortProbeDetail;
}(utils_1.SpeakeasyBase));
exports.PortProbeDetail = PortProbeDetail;
