/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Interactions for On Demand pages that are in this genre.
 */
export class OnDemandGenreInteractionsPage extends SpeakeasyBase {
  /**
   * Whether this On Demand genre was added.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added" })
  added: boolean;

  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The URI to access the On Demand page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

export class OnDemandGenreInteractions extends SpeakeasyBase {
  /**
   * Interactions for On Demand pages that are in this genre.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  @Type(() => OnDemandGenreInteractionsPage)
  page: OnDemandGenreInteractionsPage;
}

/**
 * Information about the On Demand pages related to this group.
 */
export class OnDemandGenreMetadataConnectionsPages extends SpeakeasyBase {
  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The API URI that resolves to the connection data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * A collection of information connected to this resource.
 */
export class OnDemandGenreMetadataConnections extends SpeakeasyBase {
  /**
   * Information about the On Demand pages related to this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pages" })
  @Type(() => OnDemandGenreMetadataConnectionsPages)
  pages: OnDemandGenreMetadataConnectionsPages;
}

export class OnDemandGenreMetadata extends SpeakeasyBase {
  /**
   * A collection of information connected to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connections" })
  @Type(() => OnDemandGenreMetadataConnections)
  connections: OnDemandGenreMetadataConnections;
}

/**
 * The On Demand genre was returned.
 */
export class OnDemandGenre extends SpeakeasyBase {
  /**
   * The canonical name or URL slug of the genre.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canonical" })
  canonical: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interactions" })
  @Type(() => OnDemandGenreInteractions)
  interactions: OnDemandGenreInteractions;

  /**
   * The Vimeo URL for this genre.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => OnDemandGenreMetadata)
  metadata: OnDemandGenreMetadata;

  /**
   * The descriptive name of the genre.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The relative URI of the On Demand genre.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}
