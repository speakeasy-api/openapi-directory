<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SyntaxToken - Represents a work in the input text that was recognized and assigned a part of speech. There is one syntax token record for each word in the source text.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SyntaxToken
{
	#[\JMS\Serializer\Annotation\SerializedName('BeginOffset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $beginOffset = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('EndOffset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $endOffset = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PartOfSpeech')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartOfSpeechTag')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartOfSpeechTag $partOfSpeech = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $text = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TokenId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $tokenId = null;
    
	public function __construct()
	{
		$this->beginOffset = null;
		$this->endOffset = null;
		$this->partOfSpeech = null;
		$this->text = null;
		$this->tokenId = null;
	}
}
