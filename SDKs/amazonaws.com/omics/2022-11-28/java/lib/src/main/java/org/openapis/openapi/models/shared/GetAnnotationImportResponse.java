/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetAnnotationImportResponse - Success
 */
public class GetAnnotationImportResponse {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("completionTime")
    public OffsetDateTime completionTime;

    public GetAnnotationImportResponse withCompletionTime(OffsetDateTime completionTime) {
        this.completionTime = completionTime;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationTime")
    public OffsetDateTime creationTime;

    public GetAnnotationImportResponse withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonProperty("destinationName")
    public String destinationName;

    public GetAnnotationImportResponse withDestinationName(String destinationName) {
        this.destinationName = destinationName;
        return this;
    }
    
    /**
     * Formatting options for a file.
     */
    @JsonProperty("formatOptions")
    public FormatOptions formatOptions;

    public GetAnnotationImportResponse withFormatOptions(FormatOptions formatOptions) {
        this.formatOptions = formatOptions;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public GetAnnotationImportResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("items")
    public AnnotationImportItemDetail[] items;

    public GetAnnotationImportResponse withItems(AnnotationImportItemDetail[] items) {
        this.items = items;
        return this;
    }
    
    @JsonProperty("roleArn")
    public String roleArn;

    public GetAnnotationImportResponse withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonProperty("runLeftNormalization")
    public Boolean runLeftNormalization;

    public GetAnnotationImportResponse withRunLeftNormalization(Boolean runLeftNormalization) {
        this.runLeftNormalization = runLeftNormalization;
        return this;
    }
    
    @JsonProperty("status")
    public JobStatusEnum status;

    public GetAnnotationImportResponse withStatus(JobStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("statusMessage")
    public String statusMessage;

    public GetAnnotationImportResponse withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updateTime")
    public OffsetDateTime updateTime;

    public GetAnnotationImportResponse withUpdateTime(OffsetDateTime updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public GetAnnotationImportResponse(@JsonProperty("completionTime") OffsetDateTime completionTime, @JsonProperty("creationTime") OffsetDateTime creationTime, @JsonProperty("destinationName") String destinationName, @JsonProperty("formatOptions") FormatOptions formatOptions, @JsonProperty("id") String id, @JsonProperty("items") AnnotationImportItemDetail[] items, @JsonProperty("roleArn") String roleArn, @JsonProperty("runLeftNormalization") Boolean runLeftNormalization, @JsonProperty("status") JobStatusEnum status, @JsonProperty("statusMessage") String statusMessage, @JsonProperty("updateTime") OffsetDateTime updateTime) {
        this.completionTime = completionTime;
        this.creationTime = creationTime;
        this.destinationName = destinationName;
        this.formatOptions = formatOptions;
        this.id = id;
        this.items = items;
        this.roleArn = roleArn;
        this.runLeftNormalization = runLeftNormalization;
        this.status = status;
        this.statusMessage = statusMessage;
        this.updateTime = updateTime;
  }
}
