/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The type of the assignee (`USER` or `GROUP`).
 */
export enum RoleAssignmentAssigneeTypeEnum {
  User = "user",
  Group = "group",
}

/**
 * Defines an assignment of a role.
 */
export class RoleAssignment extends SpeakeasyBase {
  /**
   * The unique ID of the entity this role is assigned to—either the `user_id` of a user or the `uniqueId` of a service account, as defined in [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignedTo" })
  assignedTo?: string;

  /**
   * Output only. The type of the assignee (`USER` or `GROUP`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assigneeType" })
  assigneeType?: RoleAssignmentAssigneeTypeEnum;

  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The type of the API resource. This is always `admin#directory#roleAssignment`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orgUnitId" })
  orgUnitId?: string;

  /**
   * ID of this roleAssignment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleAssignmentId" })
  roleAssignmentId?: string;

  /**
   * The ID of the role that is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleId" })
  roleId?: string;

  /**
   * The scope in which this role is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopeType" })
  scopeType?: string;
}

/**
 * Defines an assignment of a role.
 */
export class RoleAssignmentInput extends SpeakeasyBase {
  /**
   * The unique ID of the entity this role is assigned to—either the `user_id` of a user or the `uniqueId` of a service account, as defined in [Identity and Access Management (IAM)](https://cloud.google.com/iam/docs/reference/rest/v1/projects.serviceAccounts).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignedTo" })
  assignedTo?: string;

  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The type of the API resource. This is always `admin#directory#roleAssignment`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orgUnitId" })
  orgUnitId?: string;

  /**
   * ID of this roleAssignment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleAssignmentId" })
  roleAssignmentId?: string;

  /**
   * The ID of the role that is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roleId" })
  roleId?: string;

  /**
   * The scope in which this role is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopeType" })
  scopeType?: string;
}
