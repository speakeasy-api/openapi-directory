// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MeasurementPartnerAdvertiserLinkLinkStatusEnum - .
type MeasurementPartnerAdvertiserLinkLinkStatusEnum string

const (
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerUnlinked            MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_UNLINKED"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerLinked              MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_LINKED"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerLinkPending         MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_LINK_PENDING"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerLinkFailure         MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_LINK_FAILURE"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerLinkOptOut          MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_LINK_OPT_OUT"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerLinkOptOutPending   MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerLinkWrappingPending MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING"
	MeasurementPartnerAdvertiserLinkLinkStatusEnumMeasurementPartnerModeChangePending   MeasurementPartnerAdvertiserLinkLinkStatusEnum = "MEASUREMENT_PARTNER_MODE_CHANGE_PENDING"
)

func (e MeasurementPartnerAdvertiserLinkLinkStatusEnum) ToPointer() *MeasurementPartnerAdvertiserLinkLinkStatusEnum {
	return &e
}

func (e *MeasurementPartnerAdvertiserLinkLinkStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MEASUREMENT_PARTNER_UNLINKED":
		fallthrough
	case "MEASUREMENT_PARTNER_LINKED":
		fallthrough
	case "MEASUREMENT_PARTNER_LINK_PENDING":
		fallthrough
	case "MEASUREMENT_PARTNER_LINK_FAILURE":
		fallthrough
	case "MEASUREMENT_PARTNER_LINK_OPT_OUT":
		fallthrough
	case "MEASUREMENT_PARTNER_LINK_OPT_OUT_PENDING":
		fallthrough
	case "MEASUREMENT_PARTNER_LINK_WRAPPING_PENDING":
		fallthrough
	case "MEASUREMENT_PARTNER_MODE_CHANGE_PENDING":
		*e = MeasurementPartnerAdvertiserLinkLinkStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeasurementPartnerAdvertiserLinkLinkStatusEnum: %v", v)
	}
}

// MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum - Measurement partner used for tag wrapping.
type MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum string

const (
	MeasurementPartnerAdvertiserLinkMeasurementPartnerEnumNone              MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum = "NONE"
	MeasurementPartnerAdvertiserLinkMeasurementPartnerEnumIntegralAdScience MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum = "INTEGRAL_AD_SCIENCE"
	MeasurementPartnerAdvertiserLinkMeasurementPartnerEnumDoubleVerify      MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum = "DOUBLE_VERIFY"
)

func (e MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum) ToPointer() *MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum {
	return &e
}

func (e *MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "INTEGRAL_AD_SCIENCE":
		fallthrough
	case "DOUBLE_VERIFY":
		*e = MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum: %v", v)
	}
}

type MeasurementPartnerAdvertiserLink struct {
	// .
	LinkStatus *MeasurementPartnerAdvertiserLinkLinkStatusEnum `json:"linkStatus,omitempty"`
	// Measurement partner used for tag wrapping.
	MeasurementPartner *MeasurementPartnerAdvertiserLinkMeasurementPartnerEnum `json:"measurementPartner,omitempty"`
	// .
	PartnerAdvertiserID *string `json:"partnerAdvertiserId,omitempty"`
}
