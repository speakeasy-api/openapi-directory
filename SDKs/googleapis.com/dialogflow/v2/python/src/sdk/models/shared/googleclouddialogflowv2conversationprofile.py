"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2automatedagentconfig as shared_googleclouddialogflowv2automatedagentconfig
from ..shared import googleclouddialogflowv2humanagentassistantconfig as shared_googleclouddialogflowv2humanagentassistantconfig
from ..shared import googleclouddialogflowv2humanagenthandoffconfig as shared_googleclouddialogflowv2humanagenthandoffconfig
from ..shared import googleclouddialogflowv2loggingconfig as shared_googleclouddialogflowv2loggingconfig
from ..shared import googleclouddialogflowv2notificationconfig as shared_googleclouddialogflowv2notificationconfig
from ..shared import googleclouddialogflowv2speechtotextconfig as shared_googleclouddialogflowv2speechtotextconfig
from ..shared import googleclouddialogflowv2synthesizespeechconfig as shared_googleclouddialogflowv2synthesizespeechconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2ConversationProfile:
    r"""Defines the services to connect to incoming Dialogflow conversations."""
    
    automated_agent_config: Optional[shared_googleclouddialogflowv2automatedagentconfig.GoogleCloudDialogflowV2AutomatedAgentConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automatedAgentConfig'), 'exclude': lambda f: f is None }})
    r"""Defines the Automated Agent to connect to a conversation."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Create time of the conversation profile."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. Human readable name for this profile. Max length 1024 bytes."""  
    human_agent_assistant_config: Optional[shared_googleclouddialogflowv2humanagentassistantconfig.GoogleCloudDialogflowV2HumanAgentAssistantConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('humanAgentAssistantConfig'), 'exclude': lambda f: f is None }})
    r"""Defines the Human Agent Assist to connect to a conversation."""  
    human_agent_handoff_config: Optional[shared_googleclouddialogflowv2humanagenthandoffconfig.GoogleCloudDialogflowV2HumanAgentHandoffConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('humanAgentHandoffConfig'), 'exclude': lambda f: f is None }})
    r"""Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation. Currently, this feature is not general available, please contact Google to get access."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""Language code for the conversation profile. If not specified, the language is en-US. Language at ConversationProfile should be set for all non en-US languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \\"en-US\\"."""  
    logging_config: Optional[shared_googleclouddialogflowv2loggingconfig.GoogleCloudDialogflowV2LoggingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loggingConfig'), 'exclude': lambda f: f is None }})
    r"""Defines logging behavior for conversation lifecycle events."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`."""  
    new_message_event_notification_config: Optional[shared_googleclouddialogflowv2notificationconfig.GoogleCloudDialogflowV2NotificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newMessageEventNotificationConfig'), 'exclude': lambda f: f is None }})
    r"""Defines notification behavior."""  
    notification_config: Optional[shared_googleclouddialogflowv2notificationconfig.GoogleCloudDialogflowV2NotificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationConfig'), 'exclude': lambda f: f is None }})
    r"""Defines notification behavior."""  
    security_settings: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securitySettings'), 'exclude': lambda f: f is None }})
    r"""Name of the CX SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`."""  
    stt_config: Optional[shared_googleclouddialogflowv2speechtotextconfig.GoogleCloudDialogflowV2SpeechToTextConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sttConfig'), 'exclude': lambda f: f is None }})
    r"""Configures speech transcription for ConversationProfile."""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""The time zone of this conversational profile from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. Defaults to America/New_York."""  
    tts_config: Optional[shared_googleclouddialogflowv2synthesizespeechconfig.GoogleCloudDialogflowV2SynthesizeSpeechConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ttsConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration of how speech should be synthesized."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Update time of the conversation profile."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2ConversationProfileInput:
    r"""Defines the services to connect to incoming Dialogflow conversations."""
    
    automated_agent_config: Optional[shared_googleclouddialogflowv2automatedagentconfig.GoogleCloudDialogflowV2AutomatedAgentConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automatedAgentConfig'), 'exclude': lambda f: f is None }})
    r"""Defines the Automated Agent to connect to a conversation."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. Human readable name for this profile. Max length 1024 bytes."""  
    human_agent_assistant_config: Optional[shared_googleclouddialogflowv2humanagentassistantconfig.GoogleCloudDialogflowV2HumanAgentAssistantConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('humanAgentAssistantConfig'), 'exclude': lambda f: f is None }})
    r"""Defines the Human Agent Assist to connect to a conversation."""  
    human_agent_handoff_config: Optional[shared_googleclouddialogflowv2humanagenthandoffconfig.GoogleCloudDialogflowV2HumanAgentHandoffConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('humanAgentHandoffConfig'), 'exclude': lambda f: f is None }})
    r"""Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation. Currently, this feature is not general available, please contact Google to get access."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""Language code for the conversation profile. If not specified, the language is en-US. Language at ConversationProfile should be set for all non en-US languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \\"en-US\\"."""  
    logging_config: Optional[shared_googleclouddialogflowv2loggingconfig.GoogleCloudDialogflowV2LoggingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loggingConfig'), 'exclude': lambda f: f is None }})
    r"""Defines logging behavior for conversation lifecycle events."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`."""  
    new_message_event_notification_config: Optional[shared_googleclouddialogflowv2notificationconfig.GoogleCloudDialogflowV2NotificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newMessageEventNotificationConfig'), 'exclude': lambda f: f is None }})
    r"""Defines notification behavior."""  
    notification_config: Optional[shared_googleclouddialogflowv2notificationconfig.GoogleCloudDialogflowV2NotificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notificationConfig'), 'exclude': lambda f: f is None }})
    r"""Defines notification behavior."""  
    security_settings: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securitySettings'), 'exclude': lambda f: f is None }})
    r"""Name of the CX SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`."""  
    stt_config: Optional[shared_googleclouddialogflowv2speechtotextconfig.GoogleCloudDialogflowV2SpeechToTextConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sttConfig'), 'exclude': lambda f: f is None }})
    r"""Configures speech transcription for ConversationProfile."""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""The time zone of this conversational profile from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. Defaults to America/New_York."""  
    tts_config: Optional[shared_googleclouddialogflowv2synthesizespeechconfig.GoogleCloudDialogflowV2SynthesizeSpeechConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ttsConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration of how speech should be synthesized."""  
    