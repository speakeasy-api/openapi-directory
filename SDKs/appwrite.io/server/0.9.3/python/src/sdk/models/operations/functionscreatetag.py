"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tag as shared_tag
from typing import Optional


@dataclasses.dataclass
class FunctionsCreateTagSecurity:
    
    key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Key' }})  
    project: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Appwrite-Project' }})  
    

@dataclasses.dataclass
class FunctionsCreateTagRequestBody:
    
    code: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'code' }})
    r"""Gzip file with your code package. When used with the Appwrite CLI, pass the path to your code directory, and the CLI will automatically package your code. Use a path that is within the current directory."""  
    command: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'command' }})
    r"""Code execution command."""  
    

@dataclasses.dataclass
class FunctionsCreateTagRequest:
    
    function_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'functionId', 'style': 'simple', 'explode': False }})
    r"""Function unique ID."""  
    request_body: Optional[FunctionsCreateTagRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class FunctionsCreateTagResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tag: Optional[shared_tag.Tag] = dataclasses.field(default=None)
    r"""Tag"""  
    