"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import columnlftag as shared_columnlftag
from ..shared import lftagpair as shared_lftagpair
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetResourceLFTagsResponse:
    r"""Success"""
    
    lf_tag_on_database: Optional[list[shared_lftagpair.LFTagPair]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LFTagOnDatabase'), 'exclude': lambda f: f is None }})  
    lf_tags_on_columns: Optional[list[shared_columnlftag.ColumnLFTag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LFTagsOnColumns'), 'exclude': lambda f: f is None }})  
    lf_tags_on_table: Optional[list[shared_lftagpair.LFTagPair]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LFTagsOnTable'), 'exclude': lambda f: f is None }})  
    