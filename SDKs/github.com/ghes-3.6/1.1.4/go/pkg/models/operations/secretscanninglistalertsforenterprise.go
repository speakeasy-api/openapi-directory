// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SecretScanningListAlertsForEnterpriseRequest struct {
	// A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.6/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results after this cursor.
	After *string `queryParam:"style=form,explode=true,name=after"`
	// A cursor, as given in the [Link header](https://docs.github.com/enterprise-server@3.6/rest/overview/resources-in-the-rest-api#link-header). If specified, the query only searches for results before this cursor.
	Before *string `queryParam:"style=form,explode=true,name=before"`
	// The direction to sort the results by.
	Direction *shared.DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The slug version of the enterprise name. You can also substitute this value with the enterprise id.
	Enterprise string `pathParam:"style=simple,explode=false,name=enterprise"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// A comma-separated list of resolutions. Only secret scanning alerts with one of these resolutions are listed. Valid resolutions are `false_positive`, `wont_fix`, `revoked`, `pattern_edited`, `pattern_deleted` or `used_in_tests`.
	Resolution *string `queryParam:"style=form,explode=true,name=resolution"`
	// A comma-separated list of secret types to return. By default all secret types are returned.
	// See "[Secret scanning patterns](https://docs.github.com/enterprise-server@3.6/code-security/secret-scanning/secret-scanning-patterns#supported-secrets-for-advanced-security)"
	// for a complete list of secret types.
	SecretType *string `queryParam:"style=form,explode=true,name=secret_type"`
	// The property to sort the results by. `created` means when the alert was created. `updated` means when the alert was updated or resolved.
	Sort *shared.SecretScanningAlertSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Set to `open` or `resolved` to only list secret scanning alerts in a specific state.
	State *shared.SecretScanningAlertStateEnum `queryParam:"style=form,explode=true,name=state"`
}

// SecretScanningListAlertsForEnterprise503ApplicationJSON - Service unavailable
type SecretScanningListAlertsForEnterprise503ApplicationJSON struct {
	Code             *string `json:"code,omitempty"`
	DocumentationURL *string `json:"documentation_url,omitempty"`
	Message          *string `json:"message,omitempty"`
}

type SecretScanningListAlertsForEnterpriseResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	OrganizationSecretScanningAlerts []shared.OrganizationSecretScanningAlert
	// Service unavailable
	SecretScanningListAlertsForEnterprise503ApplicationJSONObject *SecretScanningListAlertsForEnterprise503ApplicationJSON
}
