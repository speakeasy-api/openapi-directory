"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ScoreTypeEnum(str, Enum):
    r"""The type of the above value."""
    SCORE_TYPE_UNSPECIFIED = 'SCORE_TYPE_UNSPECIFIED'
    PROBABILITY = 'PROBABILITY'
    STD_DEV_SCORE = 'STD_DEV_SCORE'
    PERCENTILE = 'PERCENTILE'
    RAW = 'RAW'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Score:
    r"""Analysis scores are described by a value and a ScoreType."""
    
    type: Optional[ScoreTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the above value."""  
    value: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Score value. Semantics described by type below."""  
    