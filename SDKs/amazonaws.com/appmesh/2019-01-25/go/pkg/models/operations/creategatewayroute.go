// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateGatewayRoutePathParams struct {
	// The name of the service mesh to create the gateway route in.
	MeshName string `pathParam:"style=simple,explode=false,name=meshName"`
	// The name of the virtual gateway to associate the gateway route with. If the virtual gateway is in a shared mesh, then you must be the owner of the virtual gateway resource.
	VirtualGatewayName string `pathParam:"style=simple,explode=false,name=virtualGatewayName"`
}

type CreateGatewayRouteQueryParams struct {
	// The Amazon Web Services IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see <a href="https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html">Working with shared meshes</a>.
	MeshOwner *string `queryParam:"style=form,explode=true,name=meshOwner"`
}

type CreateGatewayRouteHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateGatewayRouteRequestBodySpec - An object that represents a gateway route specification. Specify one gateway route type.
type CreateGatewayRouteRequestBodySpec struct {
	GrpcRoute  *shared.GrpcGatewayRoute `json:"grpcRoute,omitempty"`
	Http2Route *shared.HTTPGatewayRoute `json:"http2Route,omitempty"`
	HTTPRoute  *shared.HTTPGatewayRoute `json:"httpRoute,omitempty"`
	Priority   *int64                   `json:"priority,omitempty"`
}

type CreateGatewayRouteRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Up to 36 letters, numbers, hyphens, and underscores are allowed.
	ClientToken *string `json:"clientToken,omitempty"`
	// The name to use for the gateway route.
	GatewayRouteName string `json:"gatewayRouteName"`
	// An object that represents a gateway route specification. Specify one gateway route type.
	Spec CreateGatewayRouteRequestBodySpec `json:"spec"`
	// Optional metadata that you can apply to the gateway route to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Tag keys can have a maximum character length of 128 characters, and tag values can have a maximum length of 256 characters.
	Tags []shared.TagRef `json:"tags,omitempty"`
}

type CreateGatewayRouteRequest struct {
	PathParams  CreateGatewayRoutePathParams
	QueryParams CreateGatewayRouteQueryParams
	Headers     CreateGatewayRouteHeaders
	Request     CreateGatewayRouteRequestBody `request:"mediaType=application/json"`
}

type CreateGatewayRouteResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateGatewayRouteOutput *shared.CreateGatewayRouteOutput
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
