// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SearchArtifactsQueryParams struct {
	// Filter by description.
	Description *string `queryParam:"style=form,explode=true,name=description"`
	// Filter by artifact group.
	Group *string `queryParam:"style=form,explode=true,name=group"`
	// Filter by label.  Include one or more label to only return artifacts containing all of the
	// specified labels.
	Labels []string `queryParam:"style=form,explode=true,name=labels"`
	// The number of artifacts to return.  Defaults to 20.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Filter by artifact name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// The number of artifacts to skip before starting to collect the result set.  Defaults to 0.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Sort order, ascending (`asc`) or descending (`desc`).
	Order *shared.SortOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// The field to sort by.  Can be one of:
	//
	// * `name`
	// * `createdOn`
	//
	Orderby *shared.SortByEnum `queryParam:"style=form,explode=true,name=orderby"`
	// Filter by one or more name/value property.  Separate each name/value pair using a colon.  For
	// example `properties=foo:bar` will return only artifacts with a custom property named `foo`
	// and value `bar`.
	Properties []string `queryParam:"style=form,explode=true,name=properties"`
}

type SearchArtifactsRequest struct {
	QueryParams SearchArtifactsQueryParams
}

type SearchArtifactsResponse struct {
	// On a successful response, returns a result set of artifacts - one for each artifact
	// in the registry that matches the criteria.
	ArtifactSearchResults *shared.ArtifactSearchResults
	ContentType           string
	// Common response for all operations that can fail with an unexpected server error.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
