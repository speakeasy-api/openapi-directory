"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import ip_messaging_v2_service_user as shared_ip_messaging_v2_service_user
from ..shared import user_enum_webhook_enabled_type_enum as shared_user_enum_webhook_enabled_type_enum
from typing import Optional

UPDATE_USER_SERVERS = [
	"https://ip-messaging.twilio.com",
]


@dataclasses.dataclass
class UpdateUserSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateUserUpdateUserRequest:
    
    attributes: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Attributes' }})  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})  
    role_sid: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'RoleSid' }})  
    

@dataclasses.dataclass
class UpdateUserRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateUserUpdateUserRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    x_twilio_webhook_enabled: Optional[shared_user_enum_webhook_enabled_type_enum.UserEnumWebhookEnabledTypeEnum] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Twilio-Webhook-Enabled', 'style': 'simple', 'explode': False }})
    r"""The X-Twilio-Webhook-Enabled HTTP request header"""  
    

@dataclasses.dataclass
class UpdateUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    ip_messaging_v2_service_user: Optional[shared_ip_messaging_v2_service_user.IPMessagingV2ServiceUser] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    