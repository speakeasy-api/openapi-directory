/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class AttendancePeriodsResponseDataAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "break" })
  break: number;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment: string;

  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "employee" })
  employee: number;

  @SpeakeasyMetadata()
  @Expose({ name: "end_time" })
  endTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_holiday" })
  isHoliday: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_on_time_off" })
  isOnTimeOff: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  startTime: string;
}

export class AttendancePeriodsResponseData extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttendancePeriodsResponseDataAttributes })
  @Expose({ name: "attributes" })
  @Type(() => AttendancePeriodsResponseDataAttributes)
  attributes: AttendancePeriodsResponseDataAttributes[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class AttendancePeriodsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: AttendancePeriodsResponseData })
  @Expose({ name: "data" })
  @Type(() => AttendancePeriodsResponseData)
  data: AttendancePeriodsResponseData[];

  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success: boolean;
}
