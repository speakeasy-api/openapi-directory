// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAttachVerifiedAccessTrustProviderActionEnum
type GETAttachVerifiedAccessTrustProviderActionEnum string

const (
	GETAttachVerifiedAccessTrustProviderActionEnumAttachVerifiedAccessTrustProvider GETAttachVerifiedAccessTrustProviderActionEnum = "AttachVerifiedAccessTrustProvider"
)

func (e *GETAttachVerifiedAccessTrustProviderActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AttachVerifiedAccessTrustProvider":
		*e = GETAttachVerifiedAccessTrustProviderActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachVerifiedAccessTrustProviderActionEnum: %s", s)
	}
}

// GETAttachVerifiedAccessTrustProviderVersionEnum
type GETAttachVerifiedAccessTrustProviderVersionEnum string

const (
	GETAttachVerifiedAccessTrustProviderVersionEnumTwoThousandAndSixteen1115 GETAttachVerifiedAccessTrustProviderVersionEnum = "2016-11-15"
)

func (e *GETAttachVerifiedAccessTrustProviderVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETAttachVerifiedAccessTrustProviderVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAttachVerifiedAccessTrustProviderVersionEnum: %s", s)
	}
}

type GETAttachVerifiedAccessTrustProviderRequest struct {
	Action GETAttachVerifiedAccessTrustProviderActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.
	ClientToken *string `queryParam:"style=form,explode=true,name=ClientToken"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Amazon Web Services Verified Access instance.
	VerifiedAccessInstanceID string `queryParam:"style=form,explode=true,name=VerifiedAccessInstanceId"`
	// The ID of the Amazon Web Services Verified Access trust provider.
	VerifiedAccessTrustProviderID string                                          `queryParam:"style=form,explode=true,name=VerifiedAccessTrustProviderId"`
	Version                       GETAttachVerifiedAccessTrustProviderVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                 *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAttachVerifiedAccessTrustProviderResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
