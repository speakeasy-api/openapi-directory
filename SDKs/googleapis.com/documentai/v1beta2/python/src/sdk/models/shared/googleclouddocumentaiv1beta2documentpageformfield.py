"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddocumentaiv1beta2documentpagedetectedlanguage as shared_googleclouddocumentaiv1beta2documentpagedetectedlanguage
from ..shared import googleclouddocumentaiv1beta2documentpagelayout as shared_googleclouddocumentaiv1beta2documentpagelayout
from ..shared import googleclouddocumentaiv1beta2documentprovenance as shared_googleclouddocumentaiv1beta2documentprovenance
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDocumentaiV1beta2DocumentPageFormField:
    r"""A form field detected on the page."""
    
    corrected_key_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('correctedKeyText'), 'exclude': lambda f: f is None }})
    r"""Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction."""  
    corrected_value_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('correctedValueText'), 'exclude': lambda f: f is None }})
    r"""Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction."""  
    field_name: Optional[shared_googleclouddocumentaiv1beta2documentpagelayout.GoogleCloudDocumentaiV1beta2DocumentPageLayout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName'), 'exclude': lambda f: f is None }})
    r"""Visual element describing a layout unit on a page."""  
    field_value: Optional[shared_googleclouddocumentaiv1beta2documentpagelayout.GoogleCloudDocumentaiV1beta2DocumentPageLayout] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldValue'), 'exclude': lambda f: f is None }})
    r"""Visual element describing a layout unit on a page."""  
    name_detected_languages: Optional[list[shared_googleclouddocumentaiv1beta2documentpagedetectedlanguage.GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameDetectedLanguages'), 'exclude': lambda f: f is None }})
    r"""A list of detected languages for name together with confidence."""  
    provenance: Optional[shared_googleclouddocumentaiv1beta2documentprovenance.GoogleCloudDocumentaiV1beta2DocumentProvenance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('provenance'), 'exclude': lambda f: f is None }})
    r"""Structure to identify provenance relationships between annotations in different revisions."""  
    value_detected_languages: Optional[list[shared_googleclouddocumentaiv1beta2documentpagedetectedlanguage.GoogleCloudDocumentaiV1beta2DocumentPageDetectedLanguage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valueDetectedLanguages'), 'exclude': lambda f: f is None }})
    r"""A list of detected languages for value together with confidence."""  
    value_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valueType'), 'exclude': lambda f: f is None }})
    r"""If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`"""  
    