/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Query } from "./query";
import { Expose, Type } from "class-transformer";

/**
 * Sets the granularity of the count results.
 */
export enum CountArtifactsRequestViewEnum {
  CountResultViewUnspecified = "COUNT_RESULT_VIEW_UNSPECIFIED",
  TotalCount = "TOTAL_COUNT",
  All = "ALL",
}

/**
 * Count artifacts request.
 */
export class CountArtifactsRequest extends SpeakeasyBase {
  /**
   * The query definition used for search and export.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  @Type(() => Query)
  query?: Query;

  /**
   * Sets the granularity of the count results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "view" })
  view?: CountArtifactsRequestViewEnum;
}
