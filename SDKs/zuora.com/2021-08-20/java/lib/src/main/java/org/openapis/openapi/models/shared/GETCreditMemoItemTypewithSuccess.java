/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETCreditMemoItemTypewithSuccess - Container for custom fields of a Credit Memo Item object.
 * 
 */
public class GETCreditMemoItemTypewithSuccess {
    /**
     * The amount of the credit memo item. For tax-inclusive credit memo items, the amount indicates the credit memo item amount including tax. For tax-exclusive credit memo items, the amount indicates the credit memo item amount excluding tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public GETCreditMemoItemTypewithSuccess withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The credit memo item amount excluding tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountWithoutTax")
    public Double amountWithoutTax;
    public GETCreditMemoItemTypewithSuccess withAmountWithoutTax(Double amountWithoutTax) {
        this.amountWithoutTax = amountWithoutTax;
        return this;
    }
    
    /**
     * The applied amount of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedAmount")
    public Double appliedAmount;
    public GETCreditMemoItemTypewithSuccess withAppliedAmount(Double appliedAmount) {
        this.appliedAmount = appliedAmount;
        return this;
    }
    
    /**
     * The unique ID of the credit memo item that the discount charge is applied to.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedToItemId")
    public String appliedToItemId;
    public GETCreditMemoItemTypewithSuccess withAppliedToItemId(String appliedToItemId) {
        this.appliedToItemId = appliedToItemId;
        return this;
    }
    
    /**
     * Comments about the credit memo item.
     * 
     * **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public GETCreditMemoItemTypewithSuccess withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdById")
    public String createdById;
    public GETCreditMemoItemTypewithSuccess withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date and time when the credit memo item was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public GETCreditMemoItemTypewithSuccess withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * The ID of the credit from item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditFromItemId")
    public String creditFromItemId;
    public GETCreditMemoItemTypewithSuccess withCreditFromItemId(String creditFromItemId) {
        this.creditFromItemId = creditFromItemId;
        return this;
    }
    
    /**
     * The type of the credit from item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditFromItemSource")
    public GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum creditFromItemSource;
    public GETCreditMemoItemTypewithSuccess withCreditFromItemSource(GETCreditMemoItemTypewithSuccessCreditFromItemSourceEnum creditFromItemSource) {
        this.creditFromItemSource = creditFromItemSource;
        return this;
    }
    
    /**
     * Container for the taxation items of the credit memo item. 
     * 
     * **Note**: This field is not available if you set the `zuora-version` request header to `239.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditTaxItems")
    public GETCMTaxItemType[] creditTaxItems;
    public GETCreditMemoItemTypewithSuccess withCreditTaxItems(GETCMTaxItemType[] creditTaxItems) {
        this.creditTaxItems = creditTaxItems;
        return this;
    }
    
    /**
     * The description of the credit memo item.
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GETCreditMemoItemTypewithSuccess withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Container for the finance information related to the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financeInformation")
    public GETCreditMemoItemTypewithSuccessFinanceInformation financeInformation;
    public GETCreditMemoItemTypewithSuccess withFinanceInformation(GETCreditMemoItemTypewithSuccessFinanceInformation financeInformation) {
        this.financeInformation = financeInformation;
        return this;
    }
    
    /**
     * The ID of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETCreditMemoItemTypewithSuccess withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The kind of the charge for the credit memo item. Its possible values are `Charge` and `Discount`. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingType")
    public String processingType;
    public GETCreditMemoItemTypewithSuccess withProcessingType(String processingType) {
        this.processingType = processingType;
        return this;
    }
    
    /**
     * The number of units for the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;
    public GETCreditMemoItemTypewithSuccess withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The amount of the refund on the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundAmount")
    public Double refundAmount;
    public GETCreditMemoItemTypewithSuccess withRefundAmount(Double refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }
    
    /**
     * The service end date of the credit memo item. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceEndDate")
    public LocalDate serviceEndDate;
    public GETCreditMemoItemTypewithSuccess withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * The service start date of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceStartDate")
    public LocalDate serviceStartDate;
    public GETCreditMemoItemTypewithSuccess withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * The SKU for the product associated with the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;
    public GETCreditMemoItemTypewithSuccess withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The name of the SKU.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skuName")
    public String skuName;
    public GETCreditMemoItemTypewithSuccess withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }
    
    /**
     * The ID of the source item.
     * 
     * - If the value of the `sourceItemType` field is `SubscriptionComponent` , the value of this field is the ID of the corresponding rate plan charge.
     * - If the value of the `sourceItemType` field is `InvoiceDetail`, the value of this field is the ID of the corresponding invoice item.
     * - If the value of the `sourceItemType` field is `ProductRatePlanCharge` , the value of this field is the ID of the corresponding product rate plan charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceItemId")
    public String sourceItemId;
    public GETCreditMemoItemTypewithSuccess withSourceItemId(String sourceItemId) {
        this.sourceItemId = sourceItemId;
        return this;
    }
    
    /**
     * The type of the source item.
     * 
     * - If a credit memo is not created from an invoice or a product rate plan charge, the value of this field is `SubscriptionComponent`. 
     * - If a credit memo is created from an invoice, the value of this field is `InvoiceDetail`.
     * - If a credit memo is created from a product rate plan charge, the value of this field is `ProductRatePlanCharge`.
     *              
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceItemType")
    public GETCreditMemoItemTypewithSuccessSourceItemTypeEnum sourceItemType;
    public GETCreditMemoItemTypewithSuccess withSourceItemType(GETCreditMemoItemTypewithSuccessSourceItemTypeEnum sourceItemType) {
        this.sourceItemType = sourceItemType;
        return this;
    }
    
    /**
     * The ID of the subscription associated with the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public GETCreditMemoItemTypewithSuccess withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * The tax mode of the credit memo item, indicating whether the amount of the credit memo item includes tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxMode")
    public GETCreditMemoItemTypewithSuccessTaxModeEnum taxMode;
    public GETCreditMemoItemTypewithSuccess withTaxMode(GETCreditMemoItemTypewithSuccessTaxModeEnum taxMode) {
        this.taxMode = taxMode;
        return this;
    }
    
    /**
     * Container for the taxation items of the credit memo item. 
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxationItems")
    public GETCreditMemoItemTypewithSuccessTaxationItems taxationItems;
    public GETCreditMemoItemTypewithSuccess withTaxationItems(GETCreditMemoItemTypewithSuccessTaxationItems taxationItems) {
        this.taxationItems = taxationItems;
        return this;
    }
    
    /**
     * The unapplied amount of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unappliedAmount")
    public Double unappliedAmount;
    public GETCreditMemoItemTypewithSuccess withUnappliedAmount(Double unappliedAmount) {
        this.unappliedAmount = unappliedAmount;
        return this;
    }
    
    /**
     * The units to measure usage.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public GETCreditMemoItemTypewithSuccess withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
    /**
     * The per-unit price of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPrice")
    public Double unitPrice;
    public GETCreditMemoItemTypewithSuccess withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * The ID of the Zuora user who last updated the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedById")
    public String updatedById;
    public GETCreditMemoItemTypewithSuccess withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * The date and time when the credit memo item was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedDate")
    public OffsetDateTime updatedDate;
    public GETCreditMemoItemTypewithSuccess withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
