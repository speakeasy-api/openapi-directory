/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSearchV1ScrapeRequest extends SpeakeasyBase {
  /**
   * Specifies a JavaScript function func, for a JSON-P response. When provided, results are wrapped as `callback(data)`, and the returned MIME type is application/javascript. This causes the caller to automatically run the func with the JSON results as its argument.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * Cursor for scrolling (used for subsequent calls)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * Metadata field
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=field" })
  field?: string;

  /**
   * Lucene-type search query
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   * Number of query results to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size?: number;

  /**
   * sort collations
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * Request total only; do not return hits
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=total_only",
  })
  totalOnly?: boolean;
}

export class GetSearchV1ScrapeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unexpected error
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Scaping API
   */
  @SpeakeasyMetadata()
  scrapeResult?: shared.ScrapeResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
