"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import timestreamdimension as shared_timestreamdimension
from ..shared import timestreamtimestamp as shared_timestreamtimestamp
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimestreamAction:
    r"""The Timestream rule action writes attributes (measures) from an MQTT message into an Amazon Timestream table. For more information, see the <a href=\\"https://docs.aws.amazon.com/iot/latest/developerguide/timestream-rule-action.html\\">Timestream</a> topic rule action documentation."""
    
    database_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseName') }})  
    dimensions: list[shared_timestreamdimension.TimestreamDimension] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions') }})  
    role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roleArn') }})  
    table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableName') }})  
    timestamp: Optional[shared_timestreamtimestamp.TimestreamTimestamp] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'exclude': lambda f: f is None }})  
    