// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MembershipsByCompetitionActiveFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type MembershipsByCompetitionActiveFormatEnum string

const (
	MembershipsByCompetitionActiveFormatEnumXML  MembershipsByCompetitionActiveFormatEnum = "xml"
	MembershipsByCompetitionActiveFormatEnumJSON MembershipsByCompetitionActiveFormatEnum = "json"
)

func (e *MembershipsByCompetitionActiveFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = MembershipsByCompetitionActiveFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipsByCompetitionActiveFormatEnum: %s", s)
	}
}

type MembershipsByCompetitionActivePathParams struct {
	// An indication of a soccer competition/league. This value can be the CompetitionId or the Competition Key. Possible values include: <code>EPL</code>, <code>1</code>, <code>MLS</code>, <code>8</code>, etc.
	Competition string `pathParam:"style=simple,explode=false,name=competition"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format MembershipsByCompetitionActiveFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type MembershipsByCompetitionActiveRequest struct {
	PathParams MembershipsByCompetitionActivePathParams
}

type MembershipsByCompetitionActiveResponse struct {
	ContentType string
	Memberships []shared.Membership
	StatusCode  int
	RawResponse *http.Response
}
