/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecaptchaenterpriseV1Event - The event being assessed.
 */
public class GoogleCloudRecaptchaenterpriseV1Event {
    /**
     * Optional. The expected action for this type of event. This should be the same action provided at token generation time on client-side platforms already integrated with recaptcha enterprise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedAction")
    public String expectedAction;

    public GoogleCloudRecaptchaenterpriseV1Event withExpectedAction(String expectedAction) {
        this.expectedAction = expectedAction;
        return this;
    }
    
    /**
     * Optional. Flag for a reCAPTCHA express request for an assessment without a token. If enabled, `site_key` must reference a SCORE key with WAF feature set to EXPRESS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("express")
    public Boolean express;

    public GoogleCloudRecaptchaenterpriseV1Event withExpress(Boolean express) {
        this.express = express;
        return this;
    }
    
    /**
     * Optional. Flag for enabling firewall policy config assessment. If this flag is enabled, the firewall policy will be evaluated and a suggested firewall action will be returned in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firewallPolicyEvaluation")
    public Boolean firewallPolicyEvaluation;

    public GoogleCloudRecaptchaenterpriseV1Event withFirewallPolicyEvaluation(Boolean firewallPolicyEvaluation) {
        this.firewallPolicyEvaluation = firewallPolicyEvaluation;
        return this;
    }
    
    /**
     * Optional. Unique stable hashed user identifier for the request. The identifier must be hashed using hmac-sha256 with stable secret.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hashedAccountId")
    public String hashedAccountId;

    public GoogleCloudRecaptchaenterpriseV1Event withHashedAccountId(String hashedAccountId) {
        this.hashedAccountId = hashedAccountId;
        return this;
    }
    
    /**
     * Optional. HTTP header information about the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public String[] headers;

    public GoogleCloudRecaptchaenterpriseV1Event withHeaders(String[] headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * Optional. Optional JA3 fingerprint for SSL clients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ja3")
    public String ja3;

    public GoogleCloudRecaptchaenterpriseV1Event withJa3(String ja3) {
        this.ja3 = ja3;
        return this;
    }
    
    /**
     * Optional. The URI resource the user requested that triggered an assessment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedUri")
    public String requestedUri;

    public GoogleCloudRecaptchaenterpriseV1Event withRequestedUri(String requestedUri) {
        this.requestedUri = requestedUri;
        return this;
    }
    
    /**
     * Optional. The site key that was used to invoke reCAPTCHA Enterprise on your site and generate the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteKey")
    public String siteKey;

    public GoogleCloudRecaptchaenterpriseV1Event withSiteKey(String siteKey) {
        this.siteKey = siteKey;
        return this;
    }
    
    /**
     * Optional. The user response token provided by the reCAPTCHA Enterprise client-side integration on your site.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public String token;

    public GoogleCloudRecaptchaenterpriseV1Event withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * Transaction data associated with a payment protected by reCAPTCHA Enterprise. All fields are optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionData")
    public GoogleCloudRecaptchaenterpriseV1TransactionData transactionData;

    public GoogleCloudRecaptchaenterpriseV1Event withTransactionData(GoogleCloudRecaptchaenterpriseV1TransactionData transactionData) {
        this.transactionData = transactionData;
        return this;
    }
    
    /**
     * Optional. The user agent present in the request from the user's device related to this event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAgent")
    public String userAgent;

    public GoogleCloudRecaptchaenterpriseV1Event withUserAgent(String userAgent) {
        this.userAgent = userAgent;
        return this;
    }
    
    /**
     * Optional. The IP address in the request from the user's device related to this event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userIpAddress")
    public String userIpAddress;

    public GoogleCloudRecaptchaenterpriseV1Event withUserIpAddress(String userIpAddress) {
        this.userIpAddress = userIpAddress;
        return this;
    }
    
    /**
     * Optional. Flag for running WAF token assessment. If enabled, the token must be specified, and have been created by a WAF-enabled key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wafTokenAssessment")
    public Boolean wafTokenAssessment;

    public GoogleCloudRecaptchaenterpriseV1Event withWafTokenAssessment(Boolean wafTokenAssessment) {
        this.wafTokenAssessment = wafTokenAssessment;
        return this;
    }
    
    public GoogleCloudRecaptchaenterpriseV1Event(){}
}
