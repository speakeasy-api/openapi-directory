"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSensorAlertsOverviewByMetricResponse = exports.GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON = exports.GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts = exports.GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise = exports.GetNetworkSensorAlertsOverviewByMetricRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSensorAlertsOverviewByMetricRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsOverviewByMetricRequest, _super);
    function GetNetworkSensorAlertsOverviewByMetricRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=interval",
        }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetricRequest.prototype, "interval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSensorAlertsOverviewByMetricRequest.prototype, "networkId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=t0" }),
        __metadata("design:type", String)
    ], GetNetworkSensorAlertsOverviewByMetricRequest.prototype, "t0", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=t1" }),
        __metadata("design:type", String)
    ], GetNetworkSensorAlertsOverviewByMetricRequest.prototype, "t1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=timespan",
        }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetricRequest.prototype, "timespan", void 0);
    return GetNetworkSensorAlertsOverviewByMetricRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsOverviewByMetricRequest = GetNetworkSensorAlertsOverviewByMetricRequest;
/**
 * Object containing the number of sensor alerts that occurred due to noise readings
 */
var GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise, _super);
    function GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ambient" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise.prototype, "ambient", void 0);
    return GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise = GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise;
/**
 * Counts of sensor alerts over the timespan, by reading metric
 */
var GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts, _super);
    function GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "door" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "door", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "humidity" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "humidity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "indoorAirQuality" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "indoorAirQuality", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "noise" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise; }),
        __metadata("design:type", GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCountsNoise)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "noise", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pm25" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "pm25", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "temperature" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "temperature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tvoc" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "tvoc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "water" }),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts.prototype, "water", void 0);
    return GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts = GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts;
var GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON, _super);
    function GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "counts" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts; }),
        __metadata("design:type", GetNetworkSensorAlertsOverviewByMetric200ApplicationJSONCounts)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON.prototype, "counts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "endTs" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON.prototype, "endTs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startTs" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON.prototype, "startTs", void 0);
    return GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON = GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON;
var GetNetworkSensorAlertsOverviewByMetricResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSensorAlertsOverviewByMetricResponse, _super);
    function GetNetworkSensorAlertsOverviewByMetricResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSensorAlertsOverviewByMetricResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSensorAlertsOverviewByMetricResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSensorAlertsOverviewByMetricResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSensorAlertsOverviewByMetric200ApplicationJSON,
        }),
        __metadata("design:type", Array)
    ], GetNetworkSensorAlertsOverviewByMetricResponse.prototype, "getNetworkSensorAlertsOverviewByMetric200ApplicationJSONObjects", void 0);
    return GetNetworkSensorAlertsOverviewByMetricResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorAlertsOverviewByMetricResponse = GetNetworkSensorAlertsOverviewByMetricResponse;
