/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
 */
export enum ClickStreamGetFilterEnum {
  Unknown = "",
  Spiders = "spiders",
  Uniques = "uniques",
  Nonuniques = "nonuniques",
  Conversions = "conversions",
}

export class ClickStreamGetRequest extends SpeakeasyBase {
  /**
   * Filter by this conversion id (mutually exclusive with "datapoint" and "group")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=conversion",
  })
  conversion?: number;

  /**
   * Filter by this datapoint id (mutually exclusive with "group" and "conversion")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=datapoint",
  })
  datapoint?: number;

  /**
   * Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: ClickStreamGetFilterEnum;

  /**
   * Filter by this group id (mutually exclusive with "datapoint" and "conversion")
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=group" })
  group?: number;

  /**
   * Limit results to this number
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;
}

export class ClickStreamGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesEntitiesResponseApiCoreDtoClickStreamHit?: shared.ApiCoreResponsesEntitiesResponseApiCoreDtoClickStreamHit;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
