"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_core_responses_entityuri_system_int64_ as shared_api_core_responses_entityuri_system_int64_
from enum import Enum
from typing import Optional

class PostAccountGuestsGuestIDTypePermissionsPatchRawTypeEnum(str, Enum):
    r"""Can be \\"datapoint\\" or \\"group\\" """
    DATAPOINT = 'datapoint'
    GROUP = 'group'


@dataclasses.dataclass
class PostAccountGuestsGuestIDTypePermissionsPatchRawRequest:
    
    guest_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'guestId', 'style': 'simple', 'explode': False }})
    r"""Id of the guest"""  
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'text/xml' }})
    r"""The patch permission request"""  
    type: PostAccountGuestsGuestIDTypePermissionsPatchRawTypeEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'type', 'style': 'simple', 'explode': False }})
    r"""Can be \\"datapoint\\" or \\"group\\" """  
    

@dataclasses.dataclass
class PostAccountGuestsGuestIDTypePermissionsPatchRawResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_core_responses_entity_uri_system_int64: Optional[shared_api_core_responses_entityuri_system_int64_.APICoreResponsesEntityURISystemInt64] = dataclasses.field(default=None)  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    