// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// CollectionCapabilities - Capabilities the current user has on this collection. Each capability corresponds to a fine-grained action that a user may take.
type CollectionCapabilities struct {
	// Whether the current user can add scores to the collection
	//
	// If this collection has the `type` `trash`, this property will be set to `false`. Use `DELETE /v2/scores/{score}` to trash a score.
	//
	CanAddScores *bool `json:"canAddScores,omitempty"`
	// Whether the current user can delete the collection
	//
	CanDelete *bool `json:"canDelete,omitempty"`
	// Whether the current user can delete scores from the collection
	//
	// If this collection has the `type` `trash`, this property will be set to `false`. Use `POST /v2/scores/{score}/untrash` to restore a score.
	//
	CanDeleteScores *bool `json:"canDeleteScores,omitempty"`
	// Whether the current user can modify the metadata for the collection
	//
	CanEdit *bool `json:"canEdit,omitempty"`
	// Whether the current user can modify the sharing settings for the collection
	//
	CanShare *bool `json:"canShare,omitempty"`
}

// Collection - Collection of scores
type Collection struct {
	// If this directory is dedicated to an app, the unique idenfier of this app
	App *string `json:"app,omitempty"`
	// Capabilities the current user has on this collection. Each capability corresponds to a fine-grained action that a user may take.
	Capabilities *CollectionCapabilities `json:"capabilities,omitempty"`
	// The list of the collaborators of the collection
	Collaborators []ResourceCollaborator `json:"collaborators,omitempty"`
	// The List of parent collections, which includes all the collections this score is included. Please note that you might not have access to all of them.
	Collections []string `json:"collections,omitempty"`
	// The date when the collection was created
	CreationDate *time.Time `json:"creationDate,omitempty"`
	// The url where the collection can be viewed in a web browser
	HTMLURL *string `json:"htmlUrl,omitempty"`
	// Unique identifier of the collection
	ID *string `json:"id,omitempty"`
	// The collection main privacy mode.
	// - `private`: The collection is private and can be only accessed, modified and administred by specified collaborators users.
	//
	Privacy *CollectionPrivacyEnum `json:"privacy,omitempty"`
	// The rights of the current user on a score or collection
	Rights *ResourceRights `json:"rights,omitempty"`
	// The private sharing key of the collection (available when the `privacy` mode is set to `privateLink`)
	SharingKey *string `json:"sharingKey,omitempty"`
	// The title of the collection
	Title *string `json:"title,omitempty"`
	// Type of the collection.
	// The type will influence the capabilitied available on the collections and how this collection is/can be populated.
	//
	Type *CollectionTypeEnum `json:"type,omitempty"`
	// Public User details summary
	User *UserPublicSummary `json:"user,omitempty"`
}
