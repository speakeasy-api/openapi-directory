/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PretargetingConfig - Successful response
 */
public class PretargetingConfig {
    /**
     * The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingId")
    public String billingId;

    public PretargetingConfig withBillingId(String billingId) {
        this.billingId = billingId;
        return this;
    }
    
    /**
     * The config id; generated automatically. Leave this field blank for insert requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configId")
    public String configId;

    public PretargetingConfig withConfigId(String configId) {
        this.configId = configId;
        return this;
    }
    
    /**
     * The name of the config. Must be unique. Required for all requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configName")
    public String configName;

    public PretargetingConfig withConfigName(String configName) {
        this.configName = configName;
        return this;
    }
    
    /**
     * List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeType")
    public String[] creativeType;

    public PretargetingConfig withCreativeType(String[] creativeType) {
        this.creativeType = creativeType;
        return this;
    }
    
    /**
     * Requests which allow one of these (width, height) pairs will match. All pairs must be supported ad dimensions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensions")
    public PretargetingConfigDimensions[] dimensions;

    public PretargetingConfig withDimensions(PretargetingConfigDimensions[] dimensions) {
        this.dimensions = dimensions;
        return this;
    }
    
    /**
     * Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedContentLabels")
    public String[] excludedContentLabels;

    public PretargetingConfig withExcludedContentLabels(String[] excludedContentLabels) {
        this.excludedContentLabels = excludedContentLabels;
        return this;
    }
    
    /**
     * Requests containing any of these geo criteria ids will not match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedGeoCriteriaIds")
    public String[] excludedGeoCriteriaIds;

    public PretargetingConfig withExcludedGeoCriteriaIds(String[] excludedGeoCriteriaIds) {
        this.excludedGeoCriteriaIds = excludedGeoCriteriaIds;
        return this;
    }
    
    /**
     * Requests containing any of these placements will not match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedPlacements")
    public PretargetingConfigExcludedPlacements[] excludedPlacements;

    public PretargetingConfig withExcludedPlacements(PretargetingConfigExcludedPlacements[] excludedPlacements) {
        this.excludedPlacements = excludedPlacements;
        return this;
    }
    
    /**
     * Requests containing any of these users list ids will not match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedUserLists")
    public String[] excludedUserLists;

    public PretargetingConfig withExcludedUserLists(String[] excludedUserLists) {
        this.excludedUserLists = excludedUserLists;
        return this;
    }
    
    /**
     * Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludedVerticals")
    public String[] excludedVerticals;

    public PretargetingConfig withExcludedVerticals(String[] excludedVerticals) {
        this.excludedVerticals = excludedVerticals;
        return this;
    }
    
    /**
     * Requests containing any of these geo criteria ids will match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geoCriteriaIds")
    public String[] geoCriteriaIds;

    public PretargetingConfig withGeoCriteriaIds(String[] geoCriteriaIds) {
        this.geoCriteriaIds = geoCriteriaIds;
        return this;
    }
    
    /**
     * Whether this config is active. Required for all requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isActive")
    public Boolean isActive;

    public PretargetingConfig withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * The kind of the resource, i.e. "adexchangebuyer#pretargetingConfig".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public PretargetingConfig withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Request containing any of these language codes will match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languages")
    public String[] languages;

    public PretargetingConfig withLanguages(String[] languages) {
        this.languages = languages;
        return this;
    }
    
    /**
     * The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumQps")
    public String maximumQps;

    public PretargetingConfig withMaximumQps(String maximumQps) {
        this.maximumQps = maximumQps;
        return this;
    }
    
    /**
     * Requests where the predicted viewability is below the specified decile will not match. E.g. if the buyer sets this value to 5, requests from slots where the predicted viewability is below 50% will not match. If the predicted viewability is unknown this field will be ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumViewabilityDecile")
    public Integer minimumViewabilityDecile;

    public PretargetingConfig withMinimumViewabilityDecile(Integer minimumViewabilityDecile) {
        this.minimumViewabilityDecile = minimumViewabilityDecile;
        return this;
    }
    
    /**
     * Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobileCarriers")
    public String[] mobileCarriers;

    public PretargetingConfig withMobileCarriers(String[] mobileCarriers) {
        this.mobileCarriers = mobileCarriers;
        return this;
    }
    
    /**
     * Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobileDevices")
    public String[] mobileDevices;

    public PretargetingConfig withMobileDevices(String[] mobileDevices) {
        this.mobileDevices = mobileDevices;
        return this;
    }
    
    /**
     * Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobileOperatingSystemVersions")
    public String[] mobileOperatingSystemVersions;

    public PretargetingConfig withMobileOperatingSystemVersions(String[] mobileOperatingSystemVersions) {
        this.mobileOperatingSystemVersions = mobileOperatingSystemVersions;
        return this;
    }
    
    /**
     * Requests containing any of these placements will match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placements")
    public PretargetingConfigPlacements[] placements;

    public PretargetingConfig withPlacements(PretargetingConfigPlacements[] placements) {
        this.placements = placements;
        return this;
    }
    
    /**
     * Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platforms")
    public String[] platforms;

    public PretargetingConfig withPlatforms(String[] platforms) {
        this.platforms = platforms;
        return this;
    }
    
    /**
     * Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedCreativeAttributes")
    public String[] supportedCreativeAttributes;

    public PretargetingConfig withSupportedCreativeAttributes(String[] supportedCreativeAttributes) {
        this.supportedCreativeAttributes = supportedCreativeAttributes;
        return this;
    }
    
    /**
     * Requests containing the specified type of user data will match. Possible values are HOSTED_MATCH_DATA, which means the request is cookie-targetable and has a match in the buyer's hosted match table, and COOKIE_OR_IDFA, which means the request has either a targetable cookie or an iOS IDFA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userIdentifierDataRequired")
    public String[] userIdentifierDataRequired;

    public PretargetingConfig withUserIdentifierDataRequired(String[] userIdentifierDataRequired) {
        this.userIdentifierDataRequired = userIdentifierDataRequired;
        return this;
    }
    
    /**
     * Requests containing any of these user list ids will match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLists")
    public String[] userLists;

    public PretargetingConfig withUserLists(String[] userLists) {
        this.userLists = userLists;
        return this;
    }
    
    /**
     * Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendorTypes")
    public String[] vendorTypes;

    public PretargetingConfig withVendorTypes(String[] vendorTypes) {
        this.vendorTypes = vendorTypes;
        return this;
    }
    
    /**
     * Requests containing any of these vertical ids will match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verticals")
    public String[] verticals;

    public PretargetingConfig withVerticals(String[] verticals) {
        this.verticals = verticals;
        return this;
    }
    
    /**
     * Video requests satisfying any of these player size constraints will match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoPlayerSizes")
    public PretargetingConfigVideoPlayerSizes[] videoPlayerSizes;

    public PretargetingConfig withVideoPlayerSizes(PretargetingConfigVideoPlayerSizes[] videoPlayerSizes) {
        this.videoPlayerSizes = videoPlayerSizes;
        return this;
    }
    
    public PretargetingConfig(){}
}
