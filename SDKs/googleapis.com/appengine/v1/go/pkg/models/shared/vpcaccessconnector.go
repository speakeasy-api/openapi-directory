// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VpcAccessConnectorEgressSettingEnum - The egress setting for the connector, controlling what traffic is diverted through it.
type VpcAccessConnectorEgressSettingEnum string

const (
	VpcAccessConnectorEgressSettingEnumEgressSettingUnspecified VpcAccessConnectorEgressSettingEnum = "EGRESS_SETTING_UNSPECIFIED"
	VpcAccessConnectorEgressSettingEnumAllTraffic               VpcAccessConnectorEgressSettingEnum = "ALL_TRAFFIC"
	VpcAccessConnectorEgressSettingEnumPrivateIPRanges          VpcAccessConnectorEgressSettingEnum = "PRIVATE_IP_RANGES"
)

func (e VpcAccessConnectorEgressSettingEnum) ToPointer() *VpcAccessConnectorEgressSettingEnum {
	return &e
}

func (e *VpcAccessConnectorEgressSettingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EGRESS_SETTING_UNSPECIFIED":
		fallthrough
	case "ALL_TRAFFIC":
		fallthrough
	case "PRIVATE_IP_RANGES":
		*e = VpcAccessConnectorEgressSettingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VpcAccessConnectorEgressSettingEnum: %v", v)
	}
}

// VpcAccessConnector - VPC access connector specification.
type VpcAccessConnector struct {
	// The egress setting for the connector, controlling what traffic is diverted through it.
	EgressSetting *VpcAccessConnectorEgressSettingEnum `json:"egressSetting,omitempty"`
	// Full Serverless VPC Access Connector name e.g. /projects/my-project/locations/us-central1/connectors/c1.
	Name *string `json:"name,omitempty"`
}
