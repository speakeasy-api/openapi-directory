/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The role that this user should have in the team. Can be one of:
 *
 * @remarks
 * \* `member` - a normal member of the team.
 * \* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.
 */
export enum TeamsAddOrUpdateMembershipForUserRequestBodyRoleEnum {
  Member = "member",
  Maintainer = "maintainer",
}

export class TeamsAddOrUpdateMembershipForUserRequestBody extends SpeakeasyBase {
  /**
   * The role that this user should have in the team. Can be one of:
   *
   * @remarks
   * \* `member` - a normal member of the team.
   * \* `maintainer` - a team maintainer. Able to add/remove other team members, promote other team members to team maintainer, and edit the team's name and description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: TeamsAddOrUpdateMembershipForUserRequestBodyRoleEnum;
}

export class TeamsAddOrUpdateMembershipForUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: TeamsAddOrUpdateMembershipForUserRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_id",
  })
  teamId: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class TeamsAddOrUpdateMembershipForUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  teamMembership?: shared.TeamMembership;
}
