// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTAcceptAddressTransferActionEnum
type POSTAcceptAddressTransferActionEnum string

const (
	POSTAcceptAddressTransferActionEnumAcceptAddressTransfer POSTAcceptAddressTransferActionEnum = "AcceptAddressTransfer"
)

func (e *POSTAcceptAddressTransferActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AcceptAddressTransfer":
		*e = POSTAcceptAddressTransferActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAcceptAddressTransferActionEnum: %s", s)
	}
}

// POSTAcceptAddressTransferVersionEnum
type POSTAcceptAddressTransferVersionEnum string

const (
	POSTAcceptAddressTransferVersionEnumTwoThousandAndSixteen1115 POSTAcceptAddressTransferVersionEnum = "2016-11-15"
)

func (e *POSTAcceptAddressTransferVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTAcceptAddressTransferVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAcceptAddressTransferVersionEnum: %s", s)
	}
}

type POSTAcceptAddressTransferRequest struct {
	Action            POSTAcceptAddressTransferActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                               `request:"mediaType=text/xml"`
	Version           POSTAcceptAddressTransferVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTAcceptAddressTransferResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
