// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BookingEngineIDEnum - **booking type specifier** for *this* product that indicates whether the booking will be `CONFIRMED` immediately or if it will remain `PENDING` even after the booking has been made
//
// *one of* the following:
// - `"FreesaleBE"` â€“ *this* product will be confirmed immediately and the supplier will be sent a notification
// - `"UnconditionalBE"` - *this* product will be confirmed immediately and the supplier will not be notified
// - `"DeferredCRMBE"` - *this* product is an on-request product and will not be confirmed immediately. *this* product will have a `PENDING` status after it is booked, to be confirmed by the supplier within the time specified in the `hoursConfirmed` field available in the booking response and post-booking services
// - `"FreesaleOnRequestBE"` - *this* product is freesale up until a certain number of days before the travel date, referred to as the *on-request period*.
//
// If a booking is made within the on-request period, *this* product will be an on-request product. Once the booking has been made, the `bookingEngineId` will change to either `"FreesaleOnRequestBE:OnRequest"` or `"FreesaleOnRequestBE:Freesold"` depending on the travel date and the on-request period
type BookingEngineIDEnum string

const (
	BookingEngineIDEnumFreesaleBe          BookingEngineIDEnum = "FreesaleBE"
	BookingEngineIDEnumUnconditionalBe     BookingEngineIDEnum = "UnconditionalBE"
	BookingEngineIDEnumDeferredCrmbe       BookingEngineIDEnum = "DeferredCRMBE"
	BookingEngineIDEnumFreesaleOnRequestBe BookingEngineIDEnum = "FreesaleOnRequestBE"
)

func (e BookingEngineIDEnum) ToPointer() *BookingEngineIDEnum {
	return &e
}

func (e *BookingEngineIDEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FreesaleBE":
		fallthrough
	case "UnconditionalBE":
		fallthrough
	case "DeferredCRMBE":
		fallthrough
	case "FreesaleOnRequestBE":
		*e = BookingEngineIDEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookingEngineIDEnum: %v", v)
	}
}
