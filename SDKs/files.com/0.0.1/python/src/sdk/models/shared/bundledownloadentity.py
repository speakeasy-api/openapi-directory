"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import bundleregistrationentity as shared_bundleregistrationentity
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class BundleDownloadEntityDownloadMethodEnum(str, Enum):
    r"""Download method (file or full_zip)"""
    FILE = 'file'
    FULL_ZIP = 'full_zip'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BundleDownloadEntity:
    r"""List Bundle Downloads"""
    
    bundle_registration: Optional[shared_bundleregistrationentity.BundleRegistrationEntity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bundle_registration'), 'exclude': lambda f: f is None }})
    r"""List Bundle Registrations"""  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Download date/time"""  
    download_method: Optional[BundleDownloadEntityDownloadMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_method'), 'exclude': lambda f: f is None }})
    r"""Download method (file or full_zip)"""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""Download path"""  
    