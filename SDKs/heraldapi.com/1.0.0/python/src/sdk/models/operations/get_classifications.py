"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import classification_v1 as shared_classification_v1
from ..shared import error_v1 as shared_error_v1
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetClassificationsRequest:
    
    limit: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Used to limit the amount of classification results per page."""  
    naics_2017: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'naics_2017', 'style': 'form', 'explode': True }})
    r"""Used to query on 2017 NAICS codes. Can be queried by any 2-digit to 6-digit NAICS codes. Supports multiple queries."""  
    page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Used to paginate between pages of results. Default is page 1."""  
    search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search', 'style': 'form', 'explode': True }})
    r"""Used to query on classification descriptions, as defined in 2017 NAICS. Powered by elastic search."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetClassifications400ApplicationJSON:
    r"""Bad Request: something was wrong with the included query param(s)"""
    
    errors: Optional[list[shared_error_v1.ErrorV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetClassifications200ApplicationJSON:
    r"""OK"""
    
    classifications: Optional[list[shared_classification_v1.ClassificationV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('classifications'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetClassificationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_classifications_200_application_json_object: Optional[GetClassifications200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    get_classifications_400_application_json_object: Optional[GetClassifications400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad Request: something was wrong with the included query param(s)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    