"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import orderstatus_enum as shared_orderstatus_enum
from ..shared import ordertype_enum as shared_ordertype_enum
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DeleteAccountsAccountOrdersCustomerOrderIDRequest:
    
    account: str = dataclasses.field(metadata={'path_param': { 'field_name': 'account', 'style': 'simple', 'explode': False }})
    r"""Account Number"""  
    customer_order_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'CustomerOrderId', 'style': 'simple', 'explode': False }})
    r"""Customer Order ID"""  
    
class DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum(str, Enum):
    ONE = '1'
    TWO = '2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSON:
    
    customer_order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomerOrderId'), 'exclude': lambda f: f is None }})  
    order_qty: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderQty'), 'exclude': lambda f: f is None }})  
    order_type: Optional[shared_ordertype_enum.OrderTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderType'), 'exclude': lambda f: f is None }})
    r"""Market = '1'
    Limit = '2'
    Stop = '3'
    StopLimit = '4'
    """  
    price: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Price'), 'exclude': lambda f: f is None }})  
    side: Optional[DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSONSideEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Side'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_orderstatus_enum.OrderStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})
    r"""Status of the order
    InvalidOrderStatus = '-1'
    New = '0'
    PartiallyFilled = '1'
    Filled = '2'
    DoneForTheDay = '3'
    Canceled = '4'
    Replaced = '5'
    PendingCancelReplace = '6'
    Stopped = '7'
    Rejected = '8'
    Suspended = '9'
    PendingNew = 'A'
    Calculated = 'B'
    Expired = 'C'
    AcceptedForBidding = 'D'
    PendingReplace = 'E'
    """  
    symbol: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Symbol'), 'exclude': lambda f: f is None }})  
    warning: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Warning'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class DeleteAccountsAccountOrdersCustomerOrderIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    delete_accounts_account_orders_customer_order_id_200_application_json_objects: Optional[list[DeleteAccountsAccountOrdersCustomerOrderID200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Returns result of cancellation attempt"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    