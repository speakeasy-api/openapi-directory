"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowcxv3securitysettingsaudioexportsettings as shared_googleclouddialogflowcxv3securitysettingsaudioexportsettings
from ..shared import googleclouddialogflowcxv3securitysettingsinsightsexportsettings as shared_googleclouddialogflowcxv3securitysettingsinsightsexportsettings
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowCxV3SecuritySettingsPurgeDataTypesEnum(str, Enum):
    PURGE_DATA_TYPE_UNSPECIFIED = 'PURGE_DATA_TYPE_UNSPECIFIED'
    DIALOGFLOW_HISTORY = 'DIALOGFLOW_HISTORY'

class GoogleCloudDialogflowCxV3SecuritySettingsRedactionScopeEnum(str, Enum):
    r"""Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging."""
    REDACTION_SCOPE_UNSPECIFIED = 'REDACTION_SCOPE_UNSPECIFIED'
    REDACT_DISK_STORAGE = 'REDACT_DISK_STORAGE'

class GoogleCloudDialogflowCxV3SecuritySettingsRedactionStrategyEnum(str, Enum):
    r"""Strategy that defines how we do redaction."""
    REDACTION_STRATEGY_UNSPECIFIED = 'REDACTION_STRATEGY_UNSPECIFIED'
    REDACT_WITH_SERVICE = 'REDACT_WITH_SERVICE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3SecuritySettings:
    r"""Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect."""
    
    audio_export_settings: Optional[shared_googleclouddialogflowcxv3securitysettingsaudioexportsettings.GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioExportSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for exporting audio."""  
    deidentify_template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deidentifyTemplate'), 'exclude': lambda f: f is None }})
    r"""[DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The human-readable name of the security settings, unique within the location."""  
    insights_export_settings: Optional[shared_googleclouddialogflowcxv3securitysettingsinsightsexportsettings.GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insightsExportSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs)."""  
    inspect_template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inspectTemplate'), 'exclude': lambda f: f is None }})
    r"""[DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`."""  
    purge_data_types: Optional[list[GoogleCloudDialogflowCxV3SecuritySettingsPurgeDataTypesEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purgeDataTypes'), 'exclude': lambda f: f is None }})
    r"""List of types of data to remove when retention settings triggers purge."""  
    redaction_scope: Optional[GoogleCloudDialogflowCxV3SecuritySettingsRedactionScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redactionScope'), 'exclude': lambda f: f is None }})
    r"""Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging."""  
    redaction_strategy: Optional[GoogleCloudDialogflowCxV3SecuritySettingsRedactionStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redactionStrategy'), 'exclude': lambda f: f is None }})
    r"""Strategy that defines how we do redaction."""  
    retention_window_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retentionWindowDays'), 'exclude': lambda f: f is None }})
    r"""Retains the data for the specified number of days. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL."""  
    