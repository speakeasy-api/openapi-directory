<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ColumnConfiguration - Indicates the configuration applied on the column (catalog or custom) during the importation process.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ColumnConfiguration
{
    /**
     * The BeezUP column name
     * 
     * @var ?string $beezUPColumnName
     */
	#[\JMS\Serializer\Annotation\SerializedName('beezUPColumnName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $beezUPColumnName = null;
    
    /**
     * If the size of the value is greater than the limit we can truncate the value instead of failing...
     * 
     * @var ?bool $canBeTruncated
     */
	#[\JMS\Serializer\Annotation\SerializedName('canBeTruncated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canBeTruncated = null;
    
    /**
     * If non null, culture used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
     * 
     * @var ?string $columnCultureName
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnCultureName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $columnCultureName = null;
    
    /**
     * Data type of the column, will be used for parsing and for consolidation proces
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnDataTypeEnum $columnDataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnDataType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnDataTypeEnum>')]
    public BeezUPCommonColumnDataTypeEnum $columnDataType;
    
    /**
     * If non null, format used to parse the value to the storage type of this column\r\n will be used for parsing and for consolidation proces
     * 
     * @var ?string $columnFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnFormat')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $columnFormat = null;
    
    /**
     * Importance of the column
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnImportanceEnum $columnImportance
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnImportance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnImportanceEnum>')]
    public BeezUPCommonColumnImportanceEnum $columnImportance;
    
    /**
     * Indicate the display group name where the column must be putted
     * 
     * @var ?string $displayGroupName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayGroupName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayGroupName = null;
    
	public function __construct()
	{
		$this->beezUPColumnName = null;
		$this->canBeTruncated = null;
		$this->columnCultureName = null;
		$this->columnDataType = \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnDataTypeEnum::STRING;
		$this->columnFormat = null;
		$this->columnImportance = \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnImportanceEnum::REQUIRED;
		$this->displayGroupName = null;
	}
}
