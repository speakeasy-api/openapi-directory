// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ManagedShortLinkFlaggedAttributeEnum string

const (
	ManagedShortLinkFlaggedAttributeEnumUnspecifiedAttribute ManagedShortLinkFlaggedAttributeEnum = "UNSPECIFIED_ATTRIBUTE"
	ManagedShortLinkFlaggedAttributeEnumSpam                 ManagedShortLinkFlaggedAttributeEnum = "SPAM"
)

func (e ManagedShortLinkFlaggedAttributeEnum) ToPointer() *ManagedShortLinkFlaggedAttributeEnum {
	return &e
}

func (e *ManagedShortLinkFlaggedAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_ATTRIBUTE":
		fallthrough
	case "SPAM":
		*e = ManagedShortLinkFlaggedAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ManagedShortLinkFlaggedAttributeEnum: %v", v)
	}
}

// ManagedShortLinkVisibilityEnum - Visibility status of link.
type ManagedShortLinkVisibilityEnum string

const (
	ManagedShortLinkVisibilityEnumUnspecifiedVisibility ManagedShortLinkVisibilityEnum = "UNSPECIFIED_VISIBILITY"
	ManagedShortLinkVisibilityEnumUnarchived            ManagedShortLinkVisibilityEnum = "UNARCHIVED"
	ManagedShortLinkVisibilityEnumArchived              ManagedShortLinkVisibilityEnum = "ARCHIVED"
	ManagedShortLinkVisibilityEnumNeverShown            ManagedShortLinkVisibilityEnum = "NEVER_SHOWN"
)

func (e ManagedShortLinkVisibilityEnum) ToPointer() *ManagedShortLinkVisibilityEnum {
	return &e
}

func (e *ManagedShortLinkVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_VISIBILITY":
		fallthrough
	case "UNARCHIVED":
		fallthrough
	case "ARCHIVED":
		fallthrough
	case "NEVER_SHOWN":
		*e = ManagedShortLinkVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ManagedShortLinkVisibilityEnum: %v", v)
	}
}

// ManagedShortLink - Managed Short Link.
type ManagedShortLink struct {
	// Creation timestamp of the short link.
	CreationTime *string `json:"creationTime,omitempty"`
	// Attributes that have been flagged about this short url.
	FlaggedAttribute []ManagedShortLinkFlaggedAttributeEnum `json:"flaggedAttribute,omitempty"`
	// Information about a Dynamic Link.
	Info *DynamicLinkInfo `json:"info,omitempty"`
	// Short durable link url, for example, "https://sample.app.goo.gl/xyz123". Required.
	Link *string `json:"link,omitempty"`
	// Link name defined by the creator. Required.
	LinkName *string `json:"linkName,omitempty"`
	// Visibility status of link.
	Visibility *ManagedShortLinkVisibilityEnum `json:"visibility,omitempty"`
}
