// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type NAMain struct {
	ID             *string          `json:"_id,omitempty"`
	CipherID       *string          `json:"cipher_id,omitempty"`
	Co2Calibrating *bool            `json:"co2_calibrating,omitempty"`
	DashboardData  *NADashboardData `json:"dashboard_data,omitempty"`
	DataType       []string         `json:"data_type,omitempty"`
	DateSetup      *int             `json:"date_setup,omitempty"`
	// true when the device is a user favorite and not owned by them
	Favorite        *bool             `json:"favorite,omitempty"`
	Firmware        *int              `json:"firmware,omitempty"`
	LastSetup       *int              `json:"last_setup,omitempty"`
	LastStatusStore *int              `json:"last_status_store,omitempty"`
	LastUpgrade     *int              `json:"last_upgrade,omitempty"`
	ModuleName      *string           `json:"module_name,omitempty"`
	Modules         []NAStationModule `json:"modules,omitempty"`
	Place           *NAPlace          `json:"place,omitempty"`
	// true when the station was seen by the Netatmo cloud within the last 4 hours
	Reachable *bool `json:"reachable,omitempty"`
	// true when the user was invited to (or has favorited) a station, false when the user owns it
	ReadOnly    *bool   `json:"read_only,omitempty"`
	StationName *string `json:"station_name,omitempty"`
	// Included in every device or module. It defines the type of the device/module. Its values are among :
	// NAMain : for the base station
	// NAModule1 : for the outdoor module
	// NAModule4 : for the additionnal indoor module
	// NAModule3 : for the rain gauge module
	// NAPlug : for the thermostat relay/plug
	// NATherm1 : for the thermostat module
	//
	Type *string `json:"type,omitempty"`
	// It contains the current wifi status. The different thresholds to take into account are
	// RSSI_THRESHOLD_0 = 86 bad signal
	// RSSI_THRESHOLD_1 = 71 middle quality signal
	// RSSI_THRESHOLD_2 = 56 good signal
	//
	WifiStatus *int `json:"wifi_status,omitempty"`
}
