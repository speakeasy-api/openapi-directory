/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Log {
    /**
     * Indicates if the request was made via REST or Graphql endpoint.
     */
    @JsonProperty("api_style")
    public String apiStyle;

    public Log withApiStyle(String apiStyle) {
        this.apiStyle = apiStyle;
        return this;
    }
    
    /**
     * The Apideck base URL the request was made to.
     */
    @JsonProperty("base_url")
    public String baseUrl;

    public Log withBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }
    
    /**
     * Indicates whether or not this is a child or parent request.
     */
    @JsonProperty("child_request")
    public Boolean childRequest;

    public Log withChildRequest(Boolean childRequest) {
        this.childRequest = childRequest;
        return this;
    }
    
    /**
     * The consumer Id associated with the request.
     */
    @JsonProperty("consumer_id")
    public String consumerId;

    public Log withConsumerId(String consumerId) {
        this.consumerId = consumerId;
        return this;
    }
    
    /**
     * The entire execution time in milliseconds it took to call the Apideck service provider.
     */
    @JsonProperty("duration")
    public Double duration;

    public Log withDuration(Double duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * If error occurred, this is brief explanation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error_message")
    public String errorMessage;

    public Log withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * The entire execution time in milliseconds it took to make the request.
     */
    @JsonProperty("execution")
    public Long execution;

    public Log withExecution(Long execution) {
        this.execution = execution;
        return this;
    }
    
    /**
     * When request is a parent request, this indicates if there are child requests associated.
     */
    @JsonProperty("has_children")
    public Boolean hasChildren;

    public Log withHasChildren(Boolean hasChildren) {
        this.hasChildren = hasChildren;
        return this;
    }
    
    /**
     * HTTP Method of request.
     */
    @JsonProperty("http_method")
    public String httpMethod;

    public Log withHttpMethod(String httpMethod) {
        this.httpMethod = httpMethod;
        return this;
    }
    
    /**
     * UUID acting as Request Identifier.
     */
    @JsonProperty("id")
    public String id;

    public Log withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Latency added by making this request via Unified Api.
     */
    @JsonProperty("latency")
    public Double latency;

    public Log withLatency(Double latency) {
        this.latency = latency;
        return this;
    }
    
    /**
     * The request as defined in OpenApi Spec.
     */
    @JsonProperty("operation")
    public LogOperation operation;

    public Log withOperation(LogOperation operation) {
        this.operation = operation;
        return this;
    }
    
    /**
     * When request is a child request, this UUID indicates it's parent request.
     */
    @JsonProperty("parent_id")
    public String parentId;

    public Log withParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * The path component of the URI the request was made to.
     */
    @JsonProperty("path")
    public String path;

    public Log withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Indicates whether the request was made using Apidecks sandbox credentials or not.
     */
    @JsonProperty("sandbox")
    public Boolean sandbox;

    public Log withSandbox(Boolean sandbox) {
        this.sandbox = sandbox;
        return this;
    }
    
    /**
     * Apideck service provider associated with request.
     */
    @JsonProperty("service")
    public LogService service;

    public Log withService(LogService service) {
        this.service = service;
        return this;
    }
    
    /**
     * The IP address of the source of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_ip")
    public String sourceIp;

    public Log withSourceIp(String sourceIp) {
        this.sourceIp = sourceIp;
        return this;
    }
    
    /**
     * HTTP Status code that was returned.
     */
    @JsonProperty("status_code")
    public Long statusCode;

    public Log withStatusCode(Long statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    /**
     * Whether or not the request was successful.
     */
    @JsonProperty("success")
    public Boolean success;

    public Log withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * ISO Date and time when the request was made.
     */
    @JsonProperty("timestamp")
    public String timestamp;

    public Log withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * Which Unified Api request was made to.
     */
    @JsonProperty("unified_api")
    public LogUnifiedApiEnum unifiedApi;

    public Log withUnifiedApi(LogUnifiedApiEnum unifiedApi) {
        this.unifiedApi = unifiedApi;
        return this;
    }
    
    public Log(@JsonProperty("api_style") String apiStyle, @JsonProperty("base_url") String baseUrl, @JsonProperty("child_request") Boolean childRequest, @JsonProperty("consumer_id") String consumerId, @JsonProperty("duration") Double duration, @JsonProperty("execution") Long execution, @JsonProperty("has_children") Boolean hasChildren, @JsonProperty("http_method") String httpMethod, @JsonProperty("id") String id, @JsonProperty("latency") Double latency, @JsonProperty("operation") LogOperation operation, @JsonProperty("parent_id") String parentId, @JsonProperty("path") String path, @JsonProperty("sandbox") Boolean sandbox, @JsonProperty("service") LogService service, @JsonProperty("status_code") Long statusCode, @JsonProperty("success") Boolean success, @JsonProperty("timestamp") String timestamp, @JsonProperty("unified_api") LogUnifiedApiEnum unifiedApi) {
        this.apiStyle = apiStyle;
        this.baseUrl = baseUrl;
        this.childRequest = childRequest;
        this.consumerId = consumerId;
        this.duration = duration;
        this.execution = execution;
        this.hasChildren = hasChildren;
        this.httpMethod = httpMethod;
        this.id = id;
        this.latency = latency;
        this.operation = operation;
        this.parentId = parentId;
        this.path = path;
        this.sandbox = sandbox;
        this.service = service;
        this.statusCode = statusCode;
        this.success = success;
        this.timestamp = timestamp;
        this.unifiedApi = unifiedApi;
  }
}
