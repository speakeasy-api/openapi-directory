/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetSite200ApplicationJSONNotificationTypes {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assigned")
    public Long assigned;
    public GetSite200ApplicationJSONNotificationTypes withAssigned(Long assigned) {
        this.assigned = assigned;
        return this;
    }
    
    @JsonProperty("bookmark_reminder")
    public Long bookmarkReminder;
    public GetSite200ApplicationJSONNotificationTypes withBookmarkReminder(Long bookmarkReminder) {
        this.bookmarkReminder = bookmarkReminder;
        return this;
    }
    
    @JsonProperty("chat_group_mention")
    public Long chatGroupMention;
    public GetSite200ApplicationJSONNotificationTypes withChatGroupMention(Long chatGroupMention) {
        this.chatGroupMention = chatGroupMention;
        return this;
    }
    
    @JsonProperty("chat_invitation")
    public Long chatInvitation;
    public GetSite200ApplicationJSONNotificationTypes withChatInvitation(Long chatInvitation) {
        this.chatInvitation = chatInvitation;
        return this;
    }
    
    @JsonProperty("chat_mention")
    public Long chatMention;
    public GetSite200ApplicationJSONNotificationTypes withChatMention(Long chatMention) {
        this.chatMention = chatMention;
        return this;
    }
    
    @JsonProperty("chat_message")
    public Long chatMessage;
    public GetSite200ApplicationJSONNotificationTypes withChatMessage(Long chatMessage) {
        this.chatMessage = chatMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chat_quoted")
    public Long chatQuoted;
    public GetSite200ApplicationJSONNotificationTypes withChatQuoted(Long chatQuoted) {
        this.chatQuoted = chatQuoted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("circles_activity")
    public Long circlesActivity;
    public GetSite200ApplicationJSONNotificationTypes withCirclesActivity(Long circlesActivity) {
        this.circlesActivity = circlesActivity;
        return this;
    }
    
    @JsonProperty("code_review_commit_approved")
    public Long codeReviewCommitApproved;
    public GetSite200ApplicationJSONNotificationTypes withCodeReviewCommitApproved(Long codeReviewCommitApproved) {
        this.codeReviewCommitApproved = codeReviewCommitApproved;
        return this;
    }
    
    @JsonProperty("custom")
    public Long custom;
    public GetSite200ApplicationJSONNotificationTypes withCustom(Long custom) {
        this.custom = custom;
        return this;
    }
    
    @JsonProperty("edited")
    public Long edited;
    public GetSite200ApplicationJSONNotificationTypes withEdited(Long edited) {
        this.edited = edited;
        return this;
    }
    
    @JsonProperty("event_invitation")
    public Long eventInvitation;
    public GetSite200ApplicationJSONNotificationTypes withEventInvitation(Long eventInvitation) {
        this.eventInvitation = eventInvitation;
        return this;
    }
    
    @JsonProperty("event_reminder")
    public Long eventReminder;
    public GetSite200ApplicationJSONNotificationTypes withEventReminder(Long eventReminder) {
        this.eventReminder = eventReminder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("following")
    public Long following;
    public GetSite200ApplicationJSONNotificationTypes withFollowing(Long following) {
        this.following = following;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("following_created_topic")
    public Long followingCreatedTopic;
    public GetSite200ApplicationJSONNotificationTypes withFollowingCreatedTopic(Long followingCreatedTopic) {
        this.followingCreatedTopic = followingCreatedTopic;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("following_replied")
    public Long followingReplied;
    public GetSite200ApplicationJSONNotificationTypes withFollowingReplied(Long followingReplied) {
        this.followingReplied = followingReplied;
        return this;
    }
    
    @JsonProperty("granted_badge")
    public Long grantedBadge;
    public GetSite200ApplicationJSONNotificationTypes withGrantedBadge(Long grantedBadge) {
        this.grantedBadge = grantedBadge;
        return this;
    }
    
    @JsonProperty("group_mentioned")
    public Long groupMentioned;
    public GetSite200ApplicationJSONNotificationTypes withGroupMentioned(Long groupMentioned) {
        this.groupMentioned = groupMentioned;
        return this;
    }
    
    @JsonProperty("group_message_summary")
    public Long groupMessageSummary;
    public GetSite200ApplicationJSONNotificationTypes withGroupMessageSummary(Long groupMessageSummary) {
        this.groupMessageSummary = groupMessageSummary;
        return this;
    }
    
    @JsonProperty("invited_to_private_message")
    public Long invitedToPrivateMessage;
    public GetSite200ApplicationJSONNotificationTypes withInvitedToPrivateMessage(Long invitedToPrivateMessage) {
        this.invitedToPrivateMessage = invitedToPrivateMessage;
        return this;
    }
    
    @JsonProperty("invited_to_topic")
    public Long invitedToTopic;
    public GetSite200ApplicationJSONNotificationTypes withInvitedToTopic(Long invitedToTopic) {
        this.invitedToTopic = invitedToTopic;
        return this;
    }
    
    @JsonProperty("invitee_accepted")
    public Long inviteeAccepted;
    public GetSite200ApplicationJSONNotificationTypes withInviteeAccepted(Long inviteeAccepted) {
        this.inviteeAccepted = inviteeAccepted;
        return this;
    }
    
    @JsonProperty("liked")
    public Long liked;
    public GetSite200ApplicationJSONNotificationTypes withLiked(Long liked) {
        this.liked = liked;
        return this;
    }
    
    @JsonProperty("liked_consolidated")
    public Long likedConsolidated;
    public GetSite200ApplicationJSONNotificationTypes withLikedConsolidated(Long likedConsolidated) {
        this.likedConsolidated = likedConsolidated;
        return this;
    }
    
    @JsonProperty("linked")
    public Long linked;
    public GetSite200ApplicationJSONNotificationTypes withLinked(Long linked) {
        this.linked = linked;
        return this;
    }
    
    @JsonProperty("membership_request_accepted")
    public Long membershipRequestAccepted;
    public GetSite200ApplicationJSONNotificationTypes withMembershipRequestAccepted(Long membershipRequestAccepted) {
        this.membershipRequestAccepted = membershipRequestAccepted;
        return this;
    }
    
    @JsonProperty("membership_request_consolidated")
    public Long membershipRequestConsolidated;
    public GetSite200ApplicationJSONNotificationTypes withMembershipRequestConsolidated(Long membershipRequestConsolidated) {
        this.membershipRequestConsolidated = membershipRequestConsolidated;
        return this;
    }
    
    @JsonProperty("mentioned")
    public Long mentioned;
    public GetSite200ApplicationJSONNotificationTypes withMentioned(Long mentioned) {
        this.mentioned = mentioned;
        return this;
    }
    
    @JsonProperty("moved_post")
    public Long movedPost;
    public GetSite200ApplicationJSONNotificationTypes withMovedPost(Long movedPost) {
        this.movedPost = movedPost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_features")
    public Long newFeatures;
    public GetSite200ApplicationJSONNotificationTypes withNewFeatures(Long newFeatures) {
        this.newFeatures = newFeatures;
        return this;
    }
    
    @JsonProperty("post_approved")
    public Long postApproved;
    public GetSite200ApplicationJSONNotificationTypes withPostApproved(Long postApproved) {
        this.postApproved = postApproved;
        return this;
    }
    
    @JsonProperty("posted")
    public Long posted;
    public GetSite200ApplicationJSONNotificationTypes withPosted(Long posted) {
        this.posted = posted;
        return this;
    }
    
    @JsonProperty("private_message")
    public Long privateMessage;
    public GetSite200ApplicationJSONNotificationTypes withPrivateMessage(Long privateMessage) {
        this.privateMessage = privateMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("question_answer_user_commented")
    public Long questionAnswerUserCommented;
    public GetSite200ApplicationJSONNotificationTypes withQuestionAnswerUserCommented(Long questionAnswerUserCommented) {
        this.questionAnswerUserCommented = questionAnswerUserCommented;
        return this;
    }
    
    @JsonProperty("quoted")
    public Long quoted;
    public GetSite200ApplicationJSONNotificationTypes withQuoted(Long quoted) {
        this.quoted = quoted;
        return this;
    }
    
    @JsonProperty("reaction")
    public Long reaction;
    public GetSite200ApplicationJSONNotificationTypes withReaction(Long reaction) {
        this.reaction = reaction;
        return this;
    }
    
    @JsonProperty("replied")
    public Long replied;
    public GetSite200ApplicationJSONNotificationTypes withReplied(Long replied) {
        this.replied = replied;
        return this;
    }
    
    @JsonProperty("topic_reminder")
    public Long topicReminder;
    public GetSite200ApplicationJSONNotificationTypes withTopicReminder(Long topicReminder) {
        this.topicReminder = topicReminder;
        return this;
    }
    
    @JsonProperty("votes_released")
    public Long votesReleased;
    public GetSite200ApplicationJSONNotificationTypes withVotesReleased(Long votesReleased) {
        this.votesReleased = votesReleased;
        return this;
    }
    
    @JsonProperty("watching_category_or_tag")
    public Long watchingCategoryOrTag;
    public GetSite200ApplicationJSONNotificationTypes withWatchingCategoryOrTag(Long watchingCategoryOrTag) {
        this.watchingCategoryOrTag = watchingCategoryOrTag;
        return this;
    }
    
    @JsonProperty("watching_first_post")
    public Long watchingFirstPost;
    public GetSite200ApplicationJSONNotificationTypes withWatchingFirstPost(Long watchingFirstPost) {
        this.watchingFirstPost = watchingFirstPost;
        return this;
    }
    
}
