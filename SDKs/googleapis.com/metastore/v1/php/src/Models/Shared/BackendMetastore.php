<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BackendMetastore - Represents a backend metastore for the federation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BackendMetastore
{
    /**
     * The type of the backend metastore.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BackendMetastoreMetastoreTypeEnum $metastoreType
     */
	#[\JMS\Serializer\Annotation\SerializedName('metastoreType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BackendMetastoreMetastoreTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BackendMetastoreMetastoreTypeEnum $metastoreType = null;
    
    /**
     * The relative resource name of the metastore that is being federated. The formats of the relative resource names for the currently supported metastores are listed below: BigQuery projects/{project_id} Dataproc Metastore projects/{project_id}/locations/{location}/services/{service_id}
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->metastoreType = null;
		$this->name = null;
	}
}
