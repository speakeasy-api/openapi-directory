// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BundleEnumSortByEnum - Can be `valid-until` or `date-updated`. Defaults to `date-created`.
type BundleEnumSortByEnum string

const (
	BundleEnumSortByEnumValidUntil  BundleEnumSortByEnum = "valid-until"
	BundleEnumSortByEnumDateUpdated BundleEnumSortByEnum = "date-updated"
)

func (e BundleEnumSortByEnum) ToPointer() *BundleEnumSortByEnum {
	return &e
}

func (e *BundleEnumSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "valid-until":
		fallthrough
	case "date-updated":
		*e = BundleEnumSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BundleEnumSortByEnum: %v", v)
	}
}
