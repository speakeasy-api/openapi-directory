/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetIncludesEnum {
  CustomerId = "customerId",
}

export class GetRequest extends SpeakeasyBase {
  /**
   * Additional properties to be included in the response shopper object
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=includes",
  })
  includes?: GetIncludesEnum[];

  /**
   * Shopper whose details are to be retrieved
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=shopperId",
  })
  shopperId: string;
}

export class GetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request was malformed
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Too many requests received within interval
   */
  @SpeakeasyMetadata()
  errorLimit?: shared.ErrorLimit;

  /**
   * Request was successful
   */
  @SpeakeasyMetadata()
  shopper?: shared.Shopper;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
