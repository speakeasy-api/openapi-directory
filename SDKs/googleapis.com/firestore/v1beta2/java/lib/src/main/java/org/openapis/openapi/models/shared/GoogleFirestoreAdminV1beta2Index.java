/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleFirestoreAdminV1beta2Index - Cloud Firestore indexes enable simple and complex queries against documents in a database.
 */
public class GoogleFirestoreAdminV1beta2Index {
    /**
     * The fields supported by this index. For composite indexes, this is always 2 or more fields. The last field entry is always for the field path `__name__`. If, on creation, `__name__` was not specified as the last field, it will be added automatically with the same direction as that of the last field defined. If the final field in a composite index is not directional, the `__name__` will be ordered ASCENDING (unless explicitly specified). For single field indexes, this will always be exactly one entry with a field path equal to the field path of the associated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public GoogleFirestoreAdminV1beta2IndexField[] fields;

    public GoogleFirestoreAdminV1beta2Index withFields(GoogleFirestoreAdminV1beta2IndexField[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Output only. A server defined name for this index. The form of this name for composite indexes will be: `projects/{project_id}/databases/{database_id}/collectionGroups/{collection_id}/indexes/{composite_index_id}` For single field indexes, this field will be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleFirestoreAdminV1beta2Index withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryScope")
    public GoogleFirestoreAdminV1beta2IndexQueryScopeEnum queryScope;

    public GoogleFirestoreAdminV1beta2Index withQueryScope(GoogleFirestoreAdminV1beta2IndexQueryScopeEnum queryScope) {
        this.queryScope = queryScope;
        return this;
    }
    
    /**
     * Output only. The serving state of the index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public GoogleFirestoreAdminV1beta2IndexStateEnum state;

    public GoogleFirestoreAdminV1beta2Index withState(GoogleFirestoreAdminV1beta2IndexStateEnum state) {
        this.state = state;
        return this;
    }
    
    public GoogleFirestoreAdminV1beta2Index(){}
}
