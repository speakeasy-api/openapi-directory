/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The type of resource, for example a VPC attachment.
 */
export enum GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum {
  Vpc = "vpc",
  Vpn = "vpn",
  DirectConnectGateway = "direct-connect-gateway",
  Connect = "connect",
  Peering = "peering",
  TgwPeering = "tgw-peering",
}

/**
 * The state of the subnet association.
 */
export enum GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum {
  PendingAcceptance = "pendingAcceptance",
  Associating = "associating",
  Associated = "associated",
  Disassociating = "disassociating",
  Disassociated = "disassociated",
  Rejected = "rejected",
  Failed = "failed",
}

/**
 * The subnet associated with the transit gateway multicast domain.
 */
export class GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  state?: GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnetStateEnum;

  @SpeakeasyMetadata()
  subnetId?: string;
}

/**
 * Describes the resources associated with the transit gateway multicast domain.
 */
export class GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceOwnerId?: string;

  @SpeakeasyMetadata()
  resourceType?: GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsResourceTypeEnum;

  @SpeakeasyMetadata()
  subnet?: GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociationsSubnet;

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;
}

/**
 * Success
 */
export class GetTransitGatewayMulticastDomainAssociationsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociations,
  })
  multicastDomainAssociations?: GetTransitGatewayMulticastDomainAssociationsResultMulticastDomainAssociations[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
