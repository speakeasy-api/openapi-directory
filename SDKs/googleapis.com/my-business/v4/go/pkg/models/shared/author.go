// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuthorTypeEnum - The type of user the author is.
type AuthorTypeEnum string

const (
	AuthorTypeEnumAuthorTypeUnspecified AuthorTypeEnum = "AUTHOR_TYPE_UNSPECIFIED"
	AuthorTypeEnumRegularUser           AuthorTypeEnum = "REGULAR_USER"
	AuthorTypeEnumLocalGuide            AuthorTypeEnum = "LOCAL_GUIDE"
	AuthorTypeEnumMerchant              AuthorTypeEnum = "MERCHANT"
)

func (e AuthorTypeEnum) ToPointer() *AuthorTypeEnum {
	return &e
}

func (e *AuthorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTHOR_TYPE_UNSPECIFIED":
		fallthrough
	case "REGULAR_USER":
		fallthrough
	case "LOCAL_GUIDE":
		fallthrough
	case "MERCHANT":
		*e = AuthorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthorTypeEnum: %v", v)
	}
}

// Author - Represents the author of a question or answer
type Author struct {
	// The display name of the user
	DisplayName *string `json:"displayName,omitempty"`
	// The profile photo URL of the user.
	ProfilePhotoURL *string `json:"profilePhotoUrl,omitempty"`
	// The type of user the author is.
	Type *AuthorTypeEnum `json:"type,omitempty"`
}
