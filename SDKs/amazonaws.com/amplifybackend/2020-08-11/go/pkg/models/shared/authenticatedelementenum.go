// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuthenticatedElementEnum string

const (
	AuthenticatedElementEnumRead            AuthenticatedElementEnum = "READ"
	AuthenticatedElementEnumCreateAndUpdate AuthenticatedElementEnum = "CREATE_AND_UPDATE"
	AuthenticatedElementEnumDelete          AuthenticatedElementEnum = "DELETE"
)

func (e *AuthenticatedElementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "READ":
		fallthrough
	case "CREATE_AND_UPDATE":
		fallthrough
	case "DELETE":
		*e = AuthenticatedElementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthenticatedElementEnum: %s", s)
	}
}
