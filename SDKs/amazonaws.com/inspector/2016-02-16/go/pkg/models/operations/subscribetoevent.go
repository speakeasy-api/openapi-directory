// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SubscribeToEventXAmzTargetEnum
type SubscribeToEventXAmzTargetEnum string

const (
	SubscribeToEventXAmzTargetEnumInspectorServiceSubscribeToEvent SubscribeToEventXAmzTargetEnum = "InspectorService.SubscribeToEvent"
)

func (e SubscribeToEventXAmzTargetEnum) ToPointer() *SubscribeToEventXAmzTargetEnum {
	return &e
}

func (e *SubscribeToEventXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InspectorService.SubscribeToEvent":
		*e = SubscribeToEventXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscribeToEventXAmzTargetEnum: %v", v)
	}
}

type SubscribeToEventRequest struct {
	SubscribeToEventRequest shared.SubscribeToEventRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              SubscribeToEventXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SubscribeToEventResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalException
	InternalException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NoSuchEntityException
	NoSuchEntityException interface{}
	// ServiceTemporarilyUnavailableException
	ServiceTemporarilyUnavailableException interface{}
	StatusCode                             int
	RawResponse                            *http.Response
}
