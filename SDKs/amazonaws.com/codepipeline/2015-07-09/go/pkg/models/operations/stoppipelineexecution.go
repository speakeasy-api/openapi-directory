// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopPipelineExecutionXAmzTargetEnum
type StopPipelineExecutionXAmzTargetEnum string

const (
	StopPipelineExecutionXAmzTargetEnumCodePipeline20150709StopPipelineExecution StopPipelineExecutionXAmzTargetEnum = "CodePipeline_20150709.StopPipelineExecution"
)

func (e StopPipelineExecutionXAmzTargetEnum) ToPointer() *StopPipelineExecutionXAmzTargetEnum {
	return &e
}

func (e *StopPipelineExecutionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.StopPipelineExecution":
		*e = StopPipelineExecutionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StopPipelineExecutionXAmzTargetEnum: %v", v)
	}
}

type StopPipelineExecutionRequest struct {
	StopPipelineExecutionInput shared.StopPipelineExecutionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 StopPipelineExecutionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopPipelineExecutionResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// DuplicatedStopRequestException
	DuplicatedStopRequestException interface{}
	// PipelineExecutionNotStoppableException
	PipelineExecutionNotStoppableException interface{}
	// PipelineNotFoundException
	PipelineNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	StopPipelineExecutionOutput *shared.StopPipelineExecutionOutput
	// ValidationException
	ValidationException interface{}
}
