"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ElectionShapeLookupBehaviorEnum(str, Enum):
    SHAPE_LOOKUP_DEFAULT = 'shapeLookupDefault'
    SHAPE_LOOKUP_DISABLED = 'shapeLookupDisabled'
    SHAPE_LOOKUP_ENABLED = 'shapeLookupEnabled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Election:
    r"""Information about the election that was queried."""
    
    election_day: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('electionDay'), 'exclude': lambda f: f is None }})
    r"""Day of the election in YYYY-MM-DD format."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique ID of this election."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A displayable name for the election."""  
    ocd_division_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ocdDivisionId'), 'exclude': lambda f: f is None }})
    r"""The political division of the election. Represented as an OCD Division ID. Voters within these political jurisdictions are covered by this election. This is typically a state such as ocd-division/country:us/state:ca or for the midterms or general election the entire US (i.e. ocd-division/country:us)."""  
    shape_lookup_behavior: Optional[ElectionShapeLookupBehaviorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shapeLookupBehavior'), 'exclude': lambda f: f is None }})  
    