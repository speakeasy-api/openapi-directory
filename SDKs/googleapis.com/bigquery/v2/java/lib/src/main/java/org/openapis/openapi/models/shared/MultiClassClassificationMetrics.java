/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MultiClassClassificationMetrics - Evaluation metrics for multi-class classification/classifier models.
 */
public class MultiClassClassificationMetrics {
    /**
     * Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregateClassificationMetrics")
    public AggregateClassificationMetrics aggregateClassificationMetrics;
    public MultiClassClassificationMetrics withAggregateClassificationMetrics(AggregateClassificationMetrics aggregateClassificationMetrics) {
        this.aggregateClassificationMetrics = aggregateClassificationMetrics;
        return this;
    }
    
    /**
     * Confusion matrix at different thresholds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confusionMatrixList")
    public ConfusionMatrix[] confusionMatrixList;
    public MultiClassClassificationMetrics withConfusionMatrixList(ConfusionMatrix[] confusionMatrixList) {
        this.confusionMatrixList = confusionMatrixList;
        return this;
    }
    
}
