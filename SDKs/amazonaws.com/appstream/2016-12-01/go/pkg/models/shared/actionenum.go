// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionEnum string

const (
	ActionEnumClipboardCopyFromLocalDevice ActionEnum = "CLIPBOARD_COPY_FROM_LOCAL_DEVICE"
	ActionEnumClipboardCopyToLocalDevice   ActionEnum = "CLIPBOARD_COPY_TO_LOCAL_DEVICE"
	ActionEnumFileUpload                   ActionEnum = "FILE_UPLOAD"
	ActionEnumFileDownload                 ActionEnum = "FILE_DOWNLOAD"
	ActionEnumPrintingToLocalDevice        ActionEnum = "PRINTING_TO_LOCAL_DEVICE"
	ActionEnumDomainPasswordSignin         ActionEnum = "DOMAIN_PASSWORD_SIGNIN"
	ActionEnumDomainSmartCardSignin        ActionEnum = "DOMAIN_SMART_CARD_SIGNIN"
)

func (e ActionEnum) ToPointer() *ActionEnum {
	return &e
}

func (e *ActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CLIPBOARD_COPY_FROM_LOCAL_DEVICE":
		fallthrough
	case "CLIPBOARD_COPY_TO_LOCAL_DEVICE":
		fallthrough
	case "FILE_UPLOAD":
		fallthrough
	case "FILE_DOWNLOAD":
		fallthrough
	case "PRINTING_TO_LOCAL_DEVICE":
		fallthrough
	case "DOMAIN_PASSWORD_SIGNIN":
		fallthrough
	case "DOMAIN_SMART_CARD_SIGNIN":
		*e = ActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionEnum: %v", v)
	}
}
