// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SearchAnalyticsQueryResponseResponseAggregationTypeEnum - How the results were aggregated.
type SearchAnalyticsQueryResponseResponseAggregationTypeEnum string

const (
	SearchAnalyticsQueryResponseResponseAggregationTypeEnumAuto       SearchAnalyticsQueryResponseResponseAggregationTypeEnum = "AUTO"
	SearchAnalyticsQueryResponseResponseAggregationTypeEnumByProperty SearchAnalyticsQueryResponseResponseAggregationTypeEnum = "BY_PROPERTY"
	SearchAnalyticsQueryResponseResponseAggregationTypeEnumByPage     SearchAnalyticsQueryResponseResponseAggregationTypeEnum = "BY_PAGE"
)

func (e *SearchAnalyticsQueryResponseResponseAggregationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AUTO":
		fallthrough
	case "BY_PROPERTY":
		fallthrough
	case "BY_PAGE":
		*e = SearchAnalyticsQueryResponseResponseAggregationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchAnalyticsQueryResponseResponseAggregationTypeEnum: %s", s)
	}
}

// SearchAnalyticsQueryResponse - A list of rows, one per result, grouped by key. Metrics in each row are aggregated for all data grouped by that key either by page or property, as specified by the aggregation type parameter.
type SearchAnalyticsQueryResponse struct {
	// How the results were aggregated.
	ResponseAggregationType *SearchAnalyticsQueryResponseResponseAggregationTypeEnum `json:"responseAggregationType,omitempty"`
	// A list of rows grouped by the key values in the order given in the query.
	Rows []APIDataRow `json:"rows,omitempty"`
}
