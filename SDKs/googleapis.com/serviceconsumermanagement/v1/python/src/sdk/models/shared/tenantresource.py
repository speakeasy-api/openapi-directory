"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TenantResourceStatusEnum(str, Enum):
    r"""Status of tenant resource."""
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    PENDING_CREATE = 'PENDING_CREATE'
    ACTIVE = 'ACTIVE'
    PENDING_DELETE = 'PENDING_DELETE'
    FAILED = 'FAILED'
    DELETED = 'DELETED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TenantResource:
    r"""Resource constituting the TenancyUnit."""
    
    resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource'), 'exclude': lambda f: f is None }})
    r"""Output only. @OutputOnly Identifier of the tenant resource. For cloud projects, it is in the form 'projects/{number}'. For example 'projects/123456'."""  
    status: Optional[TenantResourceStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of tenant resource."""  
    tag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag'), 'exclude': lambda f: f is None }})
    r"""Unique per single tenancy unit."""  
    