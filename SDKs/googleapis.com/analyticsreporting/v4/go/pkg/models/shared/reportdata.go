// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ReportData - The data part of the report.
type ReportData struct {
	// The last time the data in the report was refreshed. All the hits received before this timestamp are included in the calculation of the report.
	DataLastRefreshed *string `json:"dataLastRefreshed,omitempty"`
	// If empty reason is specified, the report is empty for this reason.
	EmptyReason *string `json:"emptyReason,omitempty"`
	// Indicates if response to this request is golden or not. Data is golden when the exact same request will not produce any new results if asked at a later point in time.
	IsDataGolden *bool `json:"isDataGolden,omitempty"`
	// Minimum and maximum values seen over all matching rows. These are both empty when `hideValueRanges` in the request is false, or when rowCount is zero.
	Maximums []DateRangeValues `json:"maximums,omitempty"`
	// Minimum and maximum values seen over all matching rows. These are both empty when `hideValueRanges` in the request is false, or when rowCount is zero.
	Minimums []DateRangeValues `json:"minimums,omitempty"`
	// Total number of matching rows for this query.
	RowCount *int `json:"rowCount,omitempty"`
	// There's one ReportRow for every unique combination of dimensions.
	Rows []ReportRow `json:"rows,omitempty"`
	// If the results are [sampled](https://support.google.com/analytics/answer/2637192), this returns the total number of samples read, one entry per date range. If the results are not sampled this field will not be defined. See [developer guide](/analytics/devguides/reporting/core/v4/basics#sampling) for details.
	SamplesReadCounts []string `json:"samplesReadCounts,omitempty"`
	// If the results are [sampled](https://support.google.com/analytics/answer/2637192), this returns the total number of samples present, one entry per date range. If the results are not sampled this field will not be defined. See [developer guide](/analytics/devguides/reporting/core/v4/basics#sampling) for details.
	SamplingSpaceSizes []string `json:"samplingSpaceSizes,omitempty"`
	// For each requested date range, for the set of all rows that match the query, every requested value format gets a total. The total for a value format is computed by first totaling the metrics mentioned in the value format and then evaluating the value format as a scalar expression. E.g., The "totals" for `3 / (ga:sessions + 2)` we compute `3 / ((sum of all relevant ga:sessions) + 2)`. Totals are computed before pagination.
	Totals []DateRangeValues `json:"totals,omitempty"`
}
