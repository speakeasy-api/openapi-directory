// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum string

const (
	PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnumConfidential PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum = "confidential"
	PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnumRegular      PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum = "regular"
	PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnumPublic       PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum = "public"
)

func (e PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum) ToPointer() *PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum {
	return &e
}

func (e *PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum: %v", v)
	}
}

// PatchSpacesSpaceIDFoldersIDCustomerRequestBody - Customer to modify (except name, class and archivaldate)
type PatchSpacesSpaceIDFoldersIDCustomerRequestBody struct {
	About                *string                                                  `json:"About,omitempty"`
	Comment              *string                                                  `json:"Comment,omitempty"`
	CustomerNumber       *string                                                  `json:"CustomerNumber,omitempty"`
	Designation          *string                                                  `json:"Designation,omitempty"`
	End                  *string                                                  `json:"End,omitempty"`
	Home                 *bool                                                    `json:"Home,omitempty"`
	KeepOld              *bool                                                    `json:"KeepOld,omitempty"`
	Keywords             []string                                                 `json:"Keywords,omitempty"`
	Level                *PatchSpacesSpaceIDFoldersIDCustomerRequestBodyLevelEnum `json:"Level,omitempty"`
	PortfolioID          *string                                                  `json:"PortfolioId,omitempty"`
	SecondaryPortfolioID *string                                                  `json:"SecondaryPortfolioId,omitempty"`
	Start                *string                                                  `json:"Start,omitempty"`
}

type PatchSpacesSpaceIDFoldersIDCustomerRequest struct {
	// Customer to modify (except name, class and archivaldate)
	RequestBody PatchSpacesSpaceIDFoldersIDCustomerRequestBody `request:"mediaType=application/json"`
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDFoldersIDCustomerResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
