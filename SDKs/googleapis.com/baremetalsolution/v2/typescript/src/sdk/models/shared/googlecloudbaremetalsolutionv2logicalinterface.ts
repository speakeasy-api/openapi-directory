/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LogicalNetworkInterface } from "./logicalnetworkinterface";
import { Expose, Type } from "class-transformer";

/**
 * Each logical interface represents a logical abstraction of the underlying physical interface (for eg. bond, nic) of the instance. Each logical interface can effectively map to multiple network-IP pairs and still be mapped to one underlying physical interface.
 */
export class GoogleCloudBaremetalsolutionV2LogicalInterface extends SpeakeasyBase {
  /**
   * The index of the logical interface mapping to the index of the hardware bond or nic on the chosen network template. This field is deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interfaceIndex" })
  interfaceIndex?: number;

  /**
   * List of logical network interfaces within a logical interface.
   */
  @SpeakeasyMetadata({ elemType: LogicalNetworkInterface })
  @Expose({ name: "logicalNetworkInterfaces" })
  @Type(() => LogicalNetworkInterface)
  logicalNetworkInterfaces?: LogicalNetworkInterface[];

  /**
   * Interface name. This is of syntax or and forms part of the network template name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
