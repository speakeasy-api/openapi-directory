"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import crawlernodedetails as shared_crawlernodedetails
from ..shared import jobnodedetails as shared_jobnodedetails
from ..shared import nodetype_enum as shared_nodetype_enum
from ..shared import triggernodedetails as shared_triggernodedetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Node:
    r"""A node represents an Glue component (trigger, crawler, or job) on a workflow graph."""
    
    crawler_details: Optional[shared_crawlernodedetails.CrawlerNodeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CrawlerDetails'), 'exclude': lambda f: f is None }})  
    job_details: Optional[shared_jobnodedetails.JobNodeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JobDetails'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})  
    trigger_details: Optional[shared_triggernodedetails.TriggerNodeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TriggerDetails'), 'exclude': lambda f: f is None }})  
    type: Optional[shared_nodetype_enum.NodeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})  
    unique_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UniqueId'), 'exclude': lambda f: f is None }})  
    