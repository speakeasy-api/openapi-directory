/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PreviewUnderstandAssistantTaskSample - Created
 */
public class PreviewUnderstandAssistantTaskSample {
    /**
     * The unique ID of the Account that created this Sample.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;
    public PreviewUnderstandAssistantTaskSample withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The unique ID of the Assistant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assistant_sid")
    public String assistantSid;
    public PreviewUnderstandAssistantTaskSample withAssistantSid(String assistantSid) {
        this.assistantSid = assistantSid;
        return this;
    }
    
    /**
     * The date that this resource was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;
    public PreviewUnderstandAssistantTaskSample withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date that this resource was last updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;
    public PreviewUnderstandAssistantTaskSample withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * An ISO language-country string of the sample.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public PreviewUnderstandAssistantTaskSample withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * A 34 character string that uniquely identifies this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;
    public PreviewUnderstandAssistantTaskSample withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_channel")
    public String sourceChannel;
    public PreviewUnderstandAssistantTaskSample withSourceChannel(String sourceChannel) {
        this.sourceChannel = sourceChannel;
        return this;
    }
    
    /**
     * The text example of how end-users may express this task. The sample may contain Field tag blocks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagged_text")
    public String taggedText;
    public PreviewUnderstandAssistantTaskSample withTaggedText(String taggedText) {
        this.taggedText = taggedText;
        return this;
    }
    
    /**
     * The unique ID of the Task associated with this Sample.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_sid")
    public String taskSid;
    public PreviewUnderstandAssistantTaskSample withTaskSid(String taskSid) {
        this.taskSid = taskSid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public PreviewUnderstandAssistantTaskSample withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
