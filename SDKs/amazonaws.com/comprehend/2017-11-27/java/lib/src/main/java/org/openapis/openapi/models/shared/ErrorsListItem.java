/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ErrorsListItem - &lt;p&gt;Text extraction encountered one or more page-level errors in the input document.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;ErrorCode&lt;/code&gt; contains one of the following values:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;TEXTRACT_BAD_PAGE - Amazon Textract cannot read the page. For more information about page limits in Amazon Textract, see &lt;a href="https://docs.aws.amazon.com/textract/latest/dg/limits-document.html"&gt; Page Quotas in Amazon Textract&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;TEXTRACT_PROVISIONED_THROUGHPUT_EXCEEDED - The number of requests exceeded your throughput limit. For more information about throughput quotas in Amazon Textract, see &lt;a href="https://docs.aws.amazon.com/textract/latest/dg/limits-quotas-explained.html"&gt; Default quotas in Amazon Textract&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;PAGE_CHARACTERS_EXCEEDED - Too many text characters on the page (10,000 characters maximum).&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;PAGE_SIZE_EXCEEDED - The maximum page size is 10 MB.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;INTERNAL_SERVER_ERROR - The request encountered a service issue. Try the API request again.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public class ErrorsListItem {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorCode")
    public PageBasedErrorCodeEnum errorCode;

    public ErrorsListItem withErrorCode(PageBasedErrorCodeEnum errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorMessage")
    public String errorMessage;

    public ErrorsListItem withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Page")
    public Long page;

    public ErrorsListItem withPage(Long page) {
        this.page = page;
        return this;
    }
    
    public ErrorsListItem(){}
}
