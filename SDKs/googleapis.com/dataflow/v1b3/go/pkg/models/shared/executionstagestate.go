// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExecutionStageStateExecutionStageStateEnum - Executions stage states allow the same set of values as JobState.
type ExecutionStageStateExecutionStageStateEnum string

const (
	ExecutionStageStateExecutionStageStateEnumJobStateUnknown            ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_UNKNOWN"
	ExecutionStageStateExecutionStageStateEnumJobStateStopped            ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_STOPPED"
	ExecutionStageStateExecutionStageStateEnumJobStateRunning            ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_RUNNING"
	ExecutionStageStateExecutionStageStateEnumJobStateDone               ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_DONE"
	ExecutionStageStateExecutionStageStateEnumJobStateFailed             ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_FAILED"
	ExecutionStageStateExecutionStageStateEnumJobStateCancelled          ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_CANCELLED"
	ExecutionStageStateExecutionStageStateEnumJobStateUpdated            ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_UPDATED"
	ExecutionStageStateExecutionStageStateEnumJobStateDraining           ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_DRAINING"
	ExecutionStageStateExecutionStageStateEnumJobStateDrained            ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_DRAINED"
	ExecutionStageStateExecutionStageStateEnumJobStatePending            ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_PENDING"
	ExecutionStageStateExecutionStageStateEnumJobStateCancelling         ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_CANCELLING"
	ExecutionStageStateExecutionStageStateEnumJobStateQueued             ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_QUEUED"
	ExecutionStageStateExecutionStageStateEnumJobStateResourceCleaningUp ExecutionStageStateExecutionStageStateEnum = "JOB_STATE_RESOURCE_CLEANING_UP"
)

func (e ExecutionStageStateExecutionStageStateEnum) ToPointer() *ExecutionStageStateExecutionStageStateEnum {
	return &e
}

func (e *ExecutionStageStateExecutionStageStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JOB_STATE_UNKNOWN":
		fallthrough
	case "JOB_STATE_STOPPED":
		fallthrough
	case "JOB_STATE_RUNNING":
		fallthrough
	case "JOB_STATE_DONE":
		fallthrough
	case "JOB_STATE_FAILED":
		fallthrough
	case "JOB_STATE_CANCELLED":
		fallthrough
	case "JOB_STATE_UPDATED":
		fallthrough
	case "JOB_STATE_DRAINING":
		fallthrough
	case "JOB_STATE_DRAINED":
		fallthrough
	case "JOB_STATE_PENDING":
		fallthrough
	case "JOB_STATE_CANCELLING":
		fallthrough
	case "JOB_STATE_QUEUED":
		fallthrough
	case "JOB_STATE_RESOURCE_CLEANING_UP":
		*e = ExecutionStageStateExecutionStageStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStageStateExecutionStageStateEnum: %v", v)
	}
}

// ExecutionStageState - A message describing the state of a particular execution stage.
type ExecutionStageState struct {
	// The time at which the stage transitioned to this state.
	CurrentStateTime *string `json:"currentStateTime,omitempty"`
	// The name of the execution stage.
	ExecutionStageName *string `json:"executionStageName,omitempty"`
	// Executions stage states allow the same set of values as JobState.
	ExecutionStageState *ExecutionStageStateExecutionStageStateEnum `json:"executionStageState,omitempty"`
}
