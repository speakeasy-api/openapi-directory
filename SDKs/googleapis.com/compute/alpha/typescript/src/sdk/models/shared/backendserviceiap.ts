/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackendServiceIAPOAuth2ClientInfo } from "./backendserviceiapoauth2clientinfo";
import { Expose, Type } from "class-transformer";

/**
 * Identity-Aware Proxy
 */
export class BackendServiceIAP extends SpeakeasyBase {
  /**
   * Whether the serving infrastructure will authenticate and authorize all incoming requests. If true, the oauth2ClientId and oauth2ClientSecret fields must be non-empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * OAuth2 client ID to use for the authentication flow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauth2ClientId" })
  oauth2ClientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "oauth2ClientInfo" })
  @Type(() => BackendServiceIAPOAuth2ClientInfo)
  oauth2ClientInfo?: BackendServiceIAPOAuth2ClientInfo;

  /**
   * OAuth2 client secret to use for the authentication flow. For security reasons, this value cannot be retrieved via the API. Instead, the SHA-256 hash of the value is returned in the oauth2ClientSecretSha256 field. @InputOnly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauth2ClientSecret" })
  oauth2ClientSecret?: string;

  /**
   * [Output Only] SHA256 hash value for the field oauth2_client_secret above.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauth2ClientSecretSha256" })
  oauth2ClientSecretSha256?: string;
}
