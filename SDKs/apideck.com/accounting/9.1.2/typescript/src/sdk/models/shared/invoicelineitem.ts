/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LinkedInvoiceItem, LinkedInvoiceItemInput } from "./linkedinvoiceitem";
import {
  LinkedLedgerAccount,
  LinkedLedgerAccountInput,
} from "./linkedledgeraccount";
import { LinkedTaxRate, LinkedTaxRateInput } from "./linkedtaxrate";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Item type
 */
export enum InvoiceLineItemTypeEnum {
  SalesItem = "sales_item",
  Discount = "discount",
  Info = "info",
  SubTotal = "sub_total",
}

export class InvoiceLineItemInput extends SpeakeasyBase {
  /**
   * User defined item code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Department id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "department_id" })
  departmentId?: string;

  /**
   * User defined description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Discount amount applied to the line item when supported downstream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_amount" })
  discountAmount?: number;

  /**
   * Discount percentage applied to the line item when supported downstream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_percentage" })
  discountPercentage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => LinkedInvoiceItemInput)
  item?: LinkedInvoiceItemInput;

  @SpeakeasyMetadata()
  @Expose({ name: "ledger_account" })
  @Type(() => LinkedLedgerAccountInput)
  ledgerAccount?: LinkedLedgerAccountInput;

  /**
   * Line number in the invoice
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: number;

  /**
   * Location id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Row ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_id" })
  rowId?: string;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Tax amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_amount" })
  taxAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tax_rate" })
  @Type(() => LinkedTaxRateInput)
  taxRate?: LinkedTaxRateInput;

  /**
   * Total amount of the line item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_amount" })
  totalAmount?: number;

  /**
   * Item type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: InvoiceLineItemTypeEnum;

  /**
   * Description of the unit type the item is sold as, ie: kg, hour.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit_of_measure" })
  unitOfMeasure?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unit_price" })
  unitPrice?: number;
}

export class InvoiceLineItem extends SpeakeasyBase {
  /**
   * User defined item code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Department id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "department_id" })
  departmentId?: string;

  /**
   * User defined description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Discount amount applied to the line item when supported downstream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_amount" })
  discountAmount?: number;

  /**
   * Discount percentage applied to the line item when supported downstream.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount_percentage" })
  discountPercentage?: number;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => LinkedInvoiceItem)
  item?: LinkedInvoiceItem;

  @SpeakeasyMetadata()
  @Expose({ name: "ledger_account" })
  @Type(() => LinkedLedgerAccount)
  ledgerAccount?: LinkedLedgerAccount;

  /**
   * Line number in the invoice
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: number;

  /**
   * Location id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quantity" })
  quantity?: number;

  /**
   * Row ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_id" })
  rowId?: string;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Tax amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_amount" })
  taxAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tax_rate" })
  @Type(() => LinkedTaxRate)
  taxRate?: LinkedTaxRate;

  /**
   * Total amount of the line item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_amount" })
  totalAmount?: number;

  /**
   * Item type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: InvoiceLineItemTypeEnum;

  /**
   * Description of the unit type the item is sold as, ie: kg, hour.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit_of_measure" })
  unitOfMeasure?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unit_price" })
  unitPrice?: number;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
