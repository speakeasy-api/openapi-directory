/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class StartInferenceExperimentResponse {
    /**
     * ConflictException
     */
    
    public Object conflictException;

    public StartInferenceExperimentResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;

    public StartInferenceExperimentResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * ResourceNotFound
     */
    
    public Object resourceNotFound;

    public StartInferenceExperimentResponse withResourceNotFound(Object resourceNotFound) {
        this.resourceNotFound = resourceNotFound;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.StartInferenceExperimentResponse startInferenceExperimentResponse;

    public StartInferenceExperimentResponse withStartInferenceExperimentResponse(org.openapis.openapi.models.shared.StartInferenceExperimentResponse startInferenceExperimentResponse) {
        this.startInferenceExperimentResponse = startInferenceExperimentResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public StartInferenceExperimentResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public StartInferenceExperimentResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public StartInferenceExperimentResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
