"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import catalogcollectionitemdatalist as shared_catalogcollectionitemdatalist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class SearchCatalogSecurity:
    
    customer_access_code: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class SearchCatalogAssetTypeEnum(str, Enum):
    IMAGE = 'image'
    VIDEO = 'video'
    AUDIO = 'audio'
    ELEMENTS = 'elements'
    EDITORIAL_IMAGE = 'editorial-image'
    EDITORIAL_VIDEO = 'editorial-video'

class SearchCatalogSortEnum(str, Enum):
    r"""Sort by"""
    NEWEST = 'newest'
    OLDEST = 'oldest'


@dataclasses.dataclass
class SearchCatalogRequest:
    
    asset_type: Optional[list[SearchCatalogAssetTypeEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asset_type', 'style': 'form', 'explode': True }})
    r"""Filter by asset type"""  
    collection_id: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'collection_id', 'style': 'form', 'explode': True }})
    r"""Filter by collection id"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Number of results per page"""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""One or more search terms separated by spaces"""  
    sort: Optional[SearchCatalogSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort by"""  
    

@dataclasses.dataclass
class SearchCatalogResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    catalog_collection_item_data_list: Optional[shared_catalogcollectionitemdatalist.CatalogCollectionItemDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    