// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCalendarStateXAmzTargetEnum
type GetCalendarStateXAmzTargetEnum string

const (
	GetCalendarStateXAmzTargetEnumAmazonSsmGetCalendarState GetCalendarStateXAmzTargetEnum = "AmazonSSM.GetCalendarState"
)

func (e *GetCalendarStateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonSSM.GetCalendarState":
		*e = GetCalendarStateXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCalendarStateXAmzTargetEnum: %s", s)
	}
}

type GetCalendarStateRequest struct {
	GetCalendarStateRequest shared.GetCalendarStateRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              GetCalendarStateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetCalendarStateResponse struct {
	ContentType string
	// Success
	GetCalendarStateResponse *shared.GetCalendarStateResponse
	// InternalServerError
	InternalServerError interface{}
	// InvalidDocument
	InvalidDocument interface{}
	// InvalidDocumentType
	InvalidDocumentType interface{}
	StatusCode          int
	RawResponse         *http.Response
	// UnsupportedCalendarException
	UnsupportedCalendarException interface{}
}
