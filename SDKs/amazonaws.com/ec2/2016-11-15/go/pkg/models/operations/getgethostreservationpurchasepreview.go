// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETHostReservationPurchasePreviewActionEnum
type GETGETHostReservationPurchasePreviewActionEnum string

const (
	GETGETHostReservationPurchasePreviewActionEnumGetHostReservationPurchasePreview GETGETHostReservationPurchasePreviewActionEnum = "GetHostReservationPurchasePreview"
)

func (e *GETGETHostReservationPurchasePreviewActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetHostReservationPurchasePreview":
		*e = GETGETHostReservationPurchasePreviewActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETHostReservationPurchasePreviewActionEnum: %s", s)
	}
}

// GETGETHostReservationPurchasePreviewVersionEnum
type GETGETHostReservationPurchasePreviewVersionEnum string

const (
	GETGETHostReservationPurchasePreviewVersionEnumTwoThousandAndSixteen1115 GETGETHostReservationPurchasePreviewVersionEnum = "2016-11-15"
)

func (e *GETGETHostReservationPurchasePreviewVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETGETHostReservationPurchasePreviewVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETHostReservationPurchasePreviewVersionEnum: %s", s)
	}
}

type GETGETHostReservationPurchasePreviewQueryParams struct {
	Action GETGETHostReservationPurchasePreviewActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The IDs of the Dedicated Hosts with which the reservation is associated.
	HostIDSet []string `queryParam:"style=form,explode=true,name=HostIdSet"`
	// The offering ID of the reservation.
	OfferingID string                                          `queryParam:"style=form,explode=true,name=OfferingId"`
	Version    GETGETHostReservationPurchasePreviewVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETGETHostReservationPurchasePreviewHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETHostReservationPurchasePreviewRequest struct {
	QueryParams GETGETHostReservationPurchasePreviewQueryParams
	Headers     GETGETHostReservationPurchasePreviewHeaders
}

type GETGETHostReservationPurchasePreviewResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
