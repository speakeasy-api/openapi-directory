/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note> <p>The VPC peering connection options.</p>
 */
export class GETModifyVpcPeeringConnectionOptionsAccepterPeeringConnectionOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, name=AllowDnsResolutionFromRemoteVpc",
  })
  allowDnsResolutionFromRemoteVpc?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, name=AllowEgressFromLocalClassicLinkToRemoteVpc",
  })
  allowEgressFromLocalClassicLinkToRemoteVpc?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, name=AllowEgressFromLocalVpcToRemoteClassicLink",
  })
  allowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}

export enum GETModifyVpcPeeringConnectionOptionsActionEnum {
  ModifyVpcPeeringConnectionOptions = "ModifyVpcPeeringConnectionOptions",
}

/**
 * <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note> <p>The VPC peering connection options.</p>
 */
export class GETModifyVpcPeeringConnectionOptionsRequesterPeeringConnectionOptions extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, name=AllowDnsResolutionFromRemoteVpc",
  })
  allowDnsResolutionFromRemoteVpc?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, name=AllowEgressFromLocalClassicLinkToRemoteVpc",
  })
  allowEgressFromLocalClassicLinkToRemoteVpc?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, name=AllowEgressFromLocalVpcToRemoteClassicLink",
  })
  allowEgressFromLocalVpcToRemoteClassicLink?: boolean;
}

export enum GETModifyVpcPeeringConnectionOptionsVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETModifyVpcPeeringConnectionOptionsRequest extends SpeakeasyBase {
  /**
   * The VPC peering connection options for the accepter VPC.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AccepterPeeringConnectionOptions",
  })
  accepterPeeringConnectionOptions?: GETModifyVpcPeeringConnectionOptionsAccepterPeeringConnectionOptions;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyVpcPeeringConnectionOptionsActionEnum;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The VPC peering connection options for the requester VPC.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RequesterPeeringConnectionOptions",
  })
  requesterPeeringConnectionOptions?: GETModifyVpcPeeringConnectionOptionsRequesterPeeringConnectionOptions;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyVpcPeeringConnectionOptionsVersionEnum;

  /**
   * The ID of the VPC peering connection.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VpcPeeringConnectionId",
  })
  vpcPeeringConnectionId: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyVpcPeeringConnectionOptionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
