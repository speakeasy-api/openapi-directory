"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instanceconfig as shared_instanceconfig
from ..shared import networkconfig as shared_networkconfig
from ..shared import volumeconfig as shared_volumeconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProvisioningConfig:
    r"""An provisioning configuration."""
    
    instances: Optional[list[shared_instanceconfig.InstanceConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instances'), 'exclude': lambda f: f is None }})
    r"""Instances to be created."""  
    networks: Optional[list[shared_networkconfig.NetworkConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networks'), 'exclude': lambda f: f is None }})
    r"""Networks to be created."""  
    ticket_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ticketId'), 'exclude': lambda f: f is None }})
    r"""A reference to track the request."""  
    volumes: Optional[list[shared_volumeconfig.VolumeConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumes'), 'exclude': lambda f: f is None }})
    r"""Volumes to be created."""  
    