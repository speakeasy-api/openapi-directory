/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * VpnTunnelStatusEnum - [Output Only] The status of the VPN tunnel, which can be one of the following: - PROVISIONING: Resource is being allocated for the VPN tunnel. - WAITING_FOR_FULL_CONFIG: Waiting to receive all VPN-related configs from the user. Network, TargetVpnGateway, VpnTunnel, ForwardingRule, and Route resources are needed to setup the VPN tunnel. - FIRST_HANDSHAKE: Successful first handshake with the peer VPN. - ESTABLISHED: Secure session is successfully established with the peer VPN. - NETWORK_ERROR: Deprecated, replaced by NO_INCOMING_PACKETS - AUTHORIZATION_ERROR: Auth error (for example, bad shared secret). - NEGOTIATION_FAILURE: Handshake failed. - DEPROVISIONING: Resources are being deallocated for the VPN tunnel. - FAILED: Tunnel creation has failed and the tunnel is not ready to be used. - NO_INCOMING_PACKETS: No incoming packets from peer. - REJECTED: Tunnel configuration was rejected, can be result of being denied access. - ALLOCATING_RESOURCES: Cloud VPN is in the process of allocating all required resources. - STOPPED: Tunnel is stopped due to its Forwarding Rules being deleted for Classic VPN tunnels or the project is in frozen state. - PEER_IDENTITY_MISMATCH: Peer identity does not match peer IP, probably behind NAT. - TS_NARROWING_NOT_ALLOWED: Traffic selector narrowing not allowed for an HA-VPN tunnel. 
 */
public enum VpnTunnelStatusEnum {
    ALLOCATING_RESOURCES("ALLOCATING_RESOURCES"),
    AUTHORIZATION_ERROR("AUTHORIZATION_ERROR"),
    DEPROVISIONING("DEPROVISIONING"),
    ESTABLISHED("ESTABLISHED"),
    FAILED("FAILED"),
    FIRST_HANDSHAKE("FIRST_HANDSHAKE"),
    NEGOTIATION_FAILURE("NEGOTIATION_FAILURE"),
    NETWORK_ERROR("NETWORK_ERROR"),
    NO_INCOMING_PACKETS("NO_INCOMING_PACKETS"),
    PROVISIONING("PROVISIONING"),
    REJECTED("REJECTED"),
    STOPPED("STOPPED"),
    WAITING_FOR_FULL_CONFIG("WAITING_FOR_FULL_CONFIG");

    @JsonValue
    public final String value;

    private VpnTunnelStatusEnum(String value) {
        this.value = value;
    }
}
