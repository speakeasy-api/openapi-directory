<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Spin - The new created Spin.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Spin
{
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SpinLinks')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SpinLinks $links = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('artist')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $artist = null;
    
    /**
     * Station-specific custom field relating to the song's artist
     * 
     * @var ?string $artistCustom
     */
	#[\JMS\Serializer\Annotation\SerializedName('artist-custom')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $artistCustom = null;
    
    /**
     * Reference number in the record label's catalog
     * 
     * @var ?string $catalogNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog-number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $catalogNumber = null;
    
    /**
     * Is the track's metadata schema "classical" rather than "popular"?
     * 
     * @var ?bool $classical
     */
	#[\JMS\Serializer\Annotation\SerializedName('classical')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $classical = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('composer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $composer = null;
    
    /**
     * For classical music, conducor of the ensemble
     * 
     * @var ?string $conductor
     */
	#[\JMS\Serializer\Annotation\SerializedName('conductor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conductor = null;
    
    /**
     * Duration in seconds
     * 
     * @var ?int $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $duration = null;
    
    /**
     * UTC datetime ISO-8601
     * 
     * @var ?\DateTime $end
     */
	#[\JMS\Serializer\Annotation\SerializedName('end')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $end = null;
    
    /**
     * For classical music, orchestra, performing ensemble, choir, etc.
     * 
     * @var ?string $ensemble
     */
	#[\JMS\Serializer\Annotation\SerializedName('ensemble')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ensemble = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('genre')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $genre = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Cover art
     * 
     * @var ?string $image
     */
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $image = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isrc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $isrc = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('iswc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iswc = null;
    
    /**
     * Record label, i.e. publisher of the sound recording
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * Station-specific custom field relating to the record label
     * 
     * @var ?string $labelCustom
     */
	#[\JMS\Serializer\Annotation\SerializedName('label-custom')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $labelCustom = null;
    
    /**
     * Is the artist local to the station?
     * 
     * @var ?bool $local
     */
	#[\JMS\Serializer\Annotation\SerializedName('local')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $local = null;
    
    /**
     * Media format in which the sound recording was reased
     * 
     * @var ?string $medium
     */
	#[\JMS\Serializer\Annotation\SerializedName('medium')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $medium = null;
    
    /**
     * Is this a recent release?
     * 
     * @var ?bool $new
     */
	#[\JMS\Serializer\Annotation\SerializedName('new')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $new = null;
    
    /**
     * HTML-formatted DJ annotation of the spin, can include images etc.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * For classical music, featured performing artists, e.g. soloists
     * 
     * @var ?string $performers
     */
	#[\JMS\Serializer\Annotation\SerializedName('performers')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $performers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('playlist_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $playlistId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('release')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $release = null;
    
    /**
     * Station-specific custom field relating to the release
     * 
     * @var ?string $releaseCustom
     */
	#[\JMS\Serializer\Annotation\SerializedName('release-custom')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $releaseCustom = null;
    
    /**
     * Year of initial release
     * 
     * @var ?int $released
     */
	#[\JMS\Serializer\Annotation\SerializedName('released')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $released = null;
    
    /**
     * Was the spin requested by a listener?
     * 
     * @var ?bool $request
     */
	#[\JMS\Serializer\Annotation\SerializedName('request')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $request = null;
    
    /**
     * Title of the song or track
     * 
     * @var ?string $song
     */
	#[\JMS\Serializer\Annotation\SerializedName('song')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $song = null;
    
    /**
     * UTC datetime ISO-8601
     * 
     * @var ?\DateTime $start
     */
	#[\JMS\Serializer\Annotation\SerializedName('start')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $start = null;
    
    /**
     * Station's time zone
     * 
     * @var ?string $timezone
     */
	#[\JMS\Serializer\Annotation\SerializedName('timezone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timezone = null;
    
    /**
     * Universal Product Code of the release
     * 
     * @var ?string $upc
     */
	#[\JMS\Serializer\Annotation\SerializedName('upc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $upc = null;
    
    /**
     * Is it a "Various Artists" release?
     * 
     * @var ?bool $va
     */
	#[\JMS\Serializer\Annotation\SerializedName('va')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $va = null;
    
    /**
     * For classical music, the main compositional work the track (see `song` field) belongs to
     * 
     * @var ?string $work
     */
	#[\JMS\Serializer\Annotation\SerializedName('work')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $work = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->artist = null;
		$this->artistCustom = null;
		$this->catalogNumber = null;
		$this->classical = null;
		$this->composer = null;
		$this->conductor = null;
		$this->duration = null;
		$this->end = null;
		$this->ensemble = null;
		$this->genre = null;
		$this->id = null;
		$this->image = null;
		$this->isrc = null;
		$this->iswc = null;
		$this->label = null;
		$this->labelCustom = null;
		$this->local = null;
		$this->medium = null;
		$this->new = null;
		$this->note = null;
		$this->performers = null;
		$this->playlistId = null;
		$this->release = null;
		$this->releaseCustom = null;
		$this->released = null;
		$this->request = null;
		$this->song = null;
		$this->start = null;
		$this->timezone = null;
		$this->upc = null;
		$this->va = null;
		$this->work = null;
	}
}
