// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeIpv6PoolsActionEnum
type POSTDescribeIpv6PoolsActionEnum string

const (
	POSTDescribeIpv6PoolsActionEnumDescribeIpv6Pools POSTDescribeIpv6PoolsActionEnum = "DescribeIpv6Pools"
)

func (e POSTDescribeIpv6PoolsActionEnum) ToPointer() *POSTDescribeIpv6PoolsActionEnum {
	return &e
}

func (e *POSTDescribeIpv6PoolsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeIpv6Pools":
		*e = POSTDescribeIpv6PoolsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeIpv6PoolsActionEnum: %v", v)
	}
}

// POSTDescribeIpv6PoolsVersionEnum
type POSTDescribeIpv6PoolsVersionEnum string

const (
	POSTDescribeIpv6PoolsVersionEnumTwoThousandAndSixteen1115 POSTDescribeIpv6PoolsVersionEnum = "2016-11-15"
)

func (e POSTDescribeIpv6PoolsVersionEnum) ToPointer() *POSTDescribeIpv6PoolsVersionEnum {
	return &e
}

func (e *POSTDescribeIpv6PoolsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribeIpv6PoolsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeIpv6PoolsVersionEnum: %v", v)
	}
}

type POSTDescribeIpv6PoolsRequest struct {
	Action POSTDescribeIpv6PoolsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                           `request:"mediaType=text/xml"`
	Version           POSTDescribeIpv6PoolsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeIpv6PoolsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
