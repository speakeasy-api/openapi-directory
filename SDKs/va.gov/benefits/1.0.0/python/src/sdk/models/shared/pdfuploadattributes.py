"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import pdfdimensionattributes as shared_pdfdimensionattributes
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PdfUploadAttributesContentAttachments:
    
    dimensions: Optional[shared_pdfdimensionattributes.PdfDimensionAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})  
    page_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_count'), 'exclude': lambda f: f is None }})
    r"""The number of pages in this attachment"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PdfUploadAttributesContent:
    
    attachments: Optional[list[PdfUploadAttributesContentAttachments]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachments'), 'exclude': lambda f: f is None }})  
    dimensions: Optional[shared_pdfdimensionattributes.PdfDimensionAttributes] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})  
    page_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_count'), 'exclude': lambda f: f is None }})
    r"""The total number of pages solely in this PDF document"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PdfUploadAttributes:
    
    content: PdfUploadAttributesContent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content') }})  
    total_documents: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_documents') }})
    r"""The total number of documents contained in this upload"""  
    total_pages: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_pages') }})
    r"""The total number of pages contained in this upload"""  
    