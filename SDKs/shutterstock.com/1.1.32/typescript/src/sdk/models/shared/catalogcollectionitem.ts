/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export enum CatalogCollectionItemAssetTypeEnum {
  Image = "image",
  Video = "video",
  Audio = "audio",
  EditorialImage = "editorial-image",
  EditorialVideo = "editorial-video",
}

export class CatalogCollectionItemAsset extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CatalogCollectionItemAssetTypeEnum;
}

/**
 * Metadata about an item that is part of a collection
 */
export class CatalogCollectionItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "asset" })
  @Type(() => CatalogCollectionItemAsset)
  asset: CatalogCollectionItemAsset;

  /**
   * The collection IDs that this asset belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collection_ids" })
  collectionIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "created_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}
