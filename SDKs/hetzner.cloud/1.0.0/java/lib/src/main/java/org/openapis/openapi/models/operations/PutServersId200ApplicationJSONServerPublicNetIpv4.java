/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PutServersId200ApplicationJSONServerPublicNetIpv4 - IP address (v4) and its reverse DNS entry of this Server
 */
public class PutServersId200ApplicationJSONServerPublicNetIpv4 {
    /**
     * If the IP is blocked by our anti abuse dept
     */
    @JsonProperty("blocked")
    public Boolean blocked;

    public PutServersId200ApplicationJSONServerPublicNetIpv4 withBlocked(Boolean blocked) {
        this.blocked = blocked;
        return this;
    }
    
    /**
     * Reverse DNS PTR entry for the IPv4 addresses of this Server
     */
    @JsonProperty("dns_ptr")
    public String dnsPtr;

    public PutServersId200ApplicationJSONServerPublicNetIpv4 withDnsPtr(String dnsPtr) {
        this.dnsPtr = dnsPtr;
        return this;
    }
    
    /**
     * ID of the Resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public PutServersId200ApplicationJSONServerPublicNetIpv4 withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * IP address (v4) of this Server
     */
    @JsonProperty("ip")
    public String ip;

    public PutServersId200ApplicationJSONServerPublicNetIpv4 withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    public PutServersId200ApplicationJSONServerPublicNetIpv4(@JsonProperty("blocked") Boolean blocked, @JsonProperty("dns_ptr") String dnsPtr, @JsonProperty("ip") String ip) {
        this.blocked = blocked;
        this.dnsPtr = dnsPtr;
        this.ip = ip;
  }
}
