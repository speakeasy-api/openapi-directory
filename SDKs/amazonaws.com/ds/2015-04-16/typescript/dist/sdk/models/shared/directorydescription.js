"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectoryDescription = void 0;
var utils_1 = require("../../../internal/utils");
var directoryconnectsettingsdescription_1 = require("./directoryconnectsettingsdescription");
var directoryeditionenum_1 = require("./directoryeditionenum");
var directorysizeenum_1 = require("./directorysizeenum");
var directorystageenum_1 = require("./directorystageenum");
var directorytypeenum_1 = require("./directorytypeenum");
var directoryvpcsettingsdescription_1 = require("./directoryvpcsettingsdescription");
var osversionenum_1 = require("./osversionenum");
var ownerdirectorydescription_1 = require("./ownerdirectorydescription");
var radiussettings_1 = require("./radiussettings");
var radiusstatusenum_1 = require("./radiusstatusenum");
var regionsinfo_1 = require("./regionsinfo");
var sharemethodenum_1 = require("./sharemethodenum");
var sharestatusenum_1 = require("./sharestatusenum");
var class_transformer_1 = require("class-transformer");
/**
 * Contains information about an Directory Service directory.
 */
var DirectoryDescription = /** @class */ (function (_super) {
    __extends(DirectoryDescription, _super);
    function DirectoryDescription() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AccessUrl" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "accessUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Alias" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "alias", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ConnectSettings" }),
        (0, class_transformer_1.Type)(function () { return directoryconnectsettingsdescription_1.DirectoryConnectSettingsDescription; }),
        __metadata("design:type", directoryconnectsettingsdescription_1.DirectoryConnectSettingsDescription)
    ], DirectoryDescription.prototype, "connectSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Description" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DesiredNumberOfDomainControllers" }),
        __metadata("design:type", Number)
    ], DirectoryDescription.prototype, "desiredNumberOfDomainControllers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DirectoryId" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "directoryId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DnsIpAddrs" }),
        __metadata("design:type", Array)
    ], DirectoryDescription.prototype, "dnsIpAddrs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Edition" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "edition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LaunchTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DirectoryDescription.prototype, "launchTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Name" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "OsVersion" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "osVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "OwnerDirectoryDescription" }),
        (0, class_transformer_1.Type)(function () { return ownerdirectorydescription_1.OwnerDirectoryDescription; }),
        __metadata("design:type", ownerdirectorydescription_1.OwnerDirectoryDescription)
    ], DirectoryDescription.prototype, "ownerDirectoryDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RadiusSettings" }),
        (0, class_transformer_1.Type)(function () { return radiussettings_1.RadiusSettings; }),
        __metadata("design:type", radiussettings_1.RadiusSettings)
    ], DirectoryDescription.prototype, "radiusSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RadiusStatus" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "radiusStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RegionsInfo" }),
        (0, class_transformer_1.Type)(function () { return regionsinfo_1.RegionsInfo; }),
        __metadata("design:type", regionsinfo_1.RegionsInfo)
    ], DirectoryDescription.prototype, "regionsInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ShareMethod" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "shareMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ShareNotes" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "shareNotes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ShareStatus" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "shareStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ShortName" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "shortName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Size" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SsoEnabled" }),
        __metadata("design:type", Boolean)
    ], DirectoryDescription.prototype, "ssoEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Stage" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "stage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StageLastUpdatedDateTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], DirectoryDescription.prototype, "stageLastUpdatedDateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StageReason" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "stageReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Type" }),
        __metadata("design:type", String)
    ], DirectoryDescription.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "VpcSettings" }),
        (0, class_transformer_1.Type)(function () { return directoryvpcsettingsdescription_1.DirectoryVpcSettingsDescription; }),
        __metadata("design:type", directoryvpcsettingsdescription_1.DirectoryVpcSettingsDescription)
    ], DirectoryDescription.prototype, "vpcSettings", void 0);
    return DirectoryDescription;
}(utils_1.SpeakeasyBase));
exports.DirectoryDescription = DirectoryDescription;
