/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FrequencyEnum } from "./frequencyenum";
import { Metric } from "./metric";
import { MetricSetDimensionFilter } from "./metricsetdimensionfilter";
import { MetricSource } from "./metricsource";
import { TimestampColumn } from "./timestampcolumn";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeMetricSetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorArn" })
  anomalyDetectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata({ elemType: MetricSetDimensionFilter })
  @Expose({ name: "DimensionFilterList" })
  @Type(() => MetricSetDimensionFilter)
  dimensionFilterList?: MetricSetDimensionFilter[];

  @SpeakeasyMetadata()
  @Expose({ name: "DimensionList" })
  dimensionList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata({ elemType: Metric })
  @Expose({ name: "MetricList" })
  @Type(() => Metric)
  metricList?: Metric[];

  @SpeakeasyMetadata()
  @Expose({ name: "MetricSetArn" })
  metricSetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricSetDescription" })
  metricSetDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricSetFrequency" })
  metricSetFrequency?: FrequencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricSetName" })
  metricSetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricSource" })
  @Type(() => MetricSource)
  metricSource?: MetricSource;

  @SpeakeasyMetadata()
  @Expose({ name: "Offset" })
  offset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TimestampColumn" })
  @Type(() => TimestampColumn)
  timestampColumn?: TimestampColumn;

  @SpeakeasyMetadata()
  @Expose({ name: "Timezone" })
  timezone?: string;
}
