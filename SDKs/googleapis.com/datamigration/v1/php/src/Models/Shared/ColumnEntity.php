<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ColumnEntity - Column is not used as an independent entity, it is retrieved as part of a Table entity.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ColumnEntity
{
    /**
     * Is the column of array type.
     * 
     * @var ?bool $array
     */
	#[\JMS\Serializer\Annotation\SerializedName('array')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $array = null;
    
    /**
     * If the column is array, of which length.
     * 
     * @var ?int $arrayLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('arrayLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $arrayLength = null;
    
    /**
     * Is the column auto-generated/identity.
     * 
     * @var ?bool $autoGenerated
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoGenerated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoGenerated = null;
    
    /**
     * Charset override - instead of table level charset.
     * 
     * @var ?string $charset
     */
	#[\JMS\Serializer\Annotation\SerializedName('charset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $charset = null;
    
    /**
     * Collation override - instead of table level collation.
     * 
     * @var ?string $collation
     */
	#[\JMS\Serializer\Annotation\SerializedName('collation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $collation = null;
    
    /**
     * Comment associated with the column.
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * Custom engine specific features.
     * 
     * @var ?array<string, mixed> $customFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('customFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFeatures = null;
    
    /**
     * Column data type.
     * 
     * @var ?string $dataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataType = null;
    
    /**
     * Default value of the column.
     * 
     * @var ?string $defaultValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultValue = null;
    
    /**
     * Column fractional second precision - used for timestamp based datatypes.
     * 
     * @var ?int $fractionalSecondsPrecision
     */
	#[\JMS\Serializer\Annotation\SerializedName('fractionalSecondsPrecision')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fractionalSecondsPrecision = null;
    
    /**
     * Column length - e.g. varchar (50).
     * 
     * @var ?string $length
     */
	#[\JMS\Serializer\Annotation\SerializedName('length')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $length = null;
    
    /**
     * Column name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Is the column nullable.
     * 
     * @var ?bool $nullable
     */
	#[\JMS\Serializer\Annotation\SerializedName('nullable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nullable = null;
    
    /**
     * Column order in the table.
     * 
     * @var ?int $ordinalPosition
     */
	#[\JMS\Serializer\Annotation\SerializedName('ordinalPosition')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ordinalPosition = null;
    
    /**
     * Column precision - when relevant.
     * 
     * @var ?int $precision
     */
	#[\JMS\Serializer\Annotation\SerializedName('precision')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $precision = null;
    
    /**
     * Column scale - when relevant.
     * 
     * @var ?int $scale
     */
	#[\JMS\Serializer\Annotation\SerializedName('scale')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $scale = null;
    
    /**
     * Specifies the list of values allowed in the column. Only used for set data type.
     * 
     * @var ?array<string> $setValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('setValues')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $setValues = null;
    
    /**
     * Is the column a UDT.
     * 
     * @var ?bool $udt
     */
	#[\JMS\Serializer\Annotation\SerializedName('udt')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $udt = null;
    
	public function __construct()
	{
		$this->array = null;
		$this->arrayLength = null;
		$this->autoGenerated = null;
		$this->charset = null;
		$this->collation = null;
		$this->comment = null;
		$this->customFeatures = null;
		$this->dataType = null;
		$this->defaultValue = null;
		$this->fractionalSecondsPrecision = null;
		$this->length = null;
		$this->name = null;
		$this->nullable = null;
		$this->ordinalPosition = null;
		$this->precision = null;
		$this->scale = null;
		$this->setValues = null;
		$this->udt = null;
	}
}
