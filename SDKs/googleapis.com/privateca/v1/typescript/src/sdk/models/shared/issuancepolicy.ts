/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllowedKeyType } from "./allowedkeytype";
import { CertificateExtensionConstraints } from "./certificateextensionconstraints";
import { CertificateIdentityConstraints } from "./certificateidentityconstraints";
import { IssuanceModes } from "./issuancemodes";
import { X509Parameters } from "./x509parameters";
import { Expose, Type } from "class-transformer";

/**
 * Defines controls over all certificate issuance within a CaPool.
 */
export class IssuancePolicy extends SpeakeasyBase {
  /**
   * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedIssuanceModes" })
  @Type(() => IssuanceModes)
  allowedIssuanceModes?: IssuanceModes;

  /**
   * Optional. If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here. Otherwise, any key may be used.
   */
  @SpeakeasyMetadata({ elemType: AllowedKeyType })
  @Expose({ name: "allowedKeyTypes" })
  @Type(() => AllowedKeyType)
  allowedKeyTypes?: AllowedKeyType[];

  /**
   * An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "baselineValues" })
  @Type(() => X509Parameters)
  baselineValues?: X509Parameters;

  /**
   * Describes constraints on a Certificate's Subject and SubjectAltNames.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identityConstraints" })
  @Type(() => CertificateIdentityConstraints)
  identityConstraints?: CertificateIdentityConstraints;

  /**
   * Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumLifetime" })
  maximumLifetime?: string;

  /**
   * Describes a set of X.509 extensions that may be part of some certificate issuance controls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passthroughExtensions" })
  @Type(() => CertificateExtensionConstraints)
  passthroughExtensions?: CertificateExtensionConstraints;
}
