/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KnowledgeBaseStatusEnum } from "./knowledgebasestatusenum";
import { KnowledgeBaseTypeEnum } from "./knowledgebasetypeenum";
import { RenderingConfiguration } from "./renderingconfiguration";
import { ServerSideEncryptionConfiguration } from "./serversideencryptionconfiguration";
import { SourceConfiguration } from "./sourceconfiguration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the knowledge base.
 */
export class KnowledgeBaseData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "knowledgeBaseArn" })
  knowledgeBaseArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "knowledgeBaseId" })
  knowledgeBaseId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "knowledgeBaseType" })
  knowledgeBaseType: KnowledgeBaseTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastContentModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastContentModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "renderingConfiguration" })
  @Type(() => RenderingConfiguration)
  renderingConfiguration?: RenderingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "serverSideEncryptionConfiguration" })
  @Type(() => ServerSideEncryptionConfiguration)
  serverSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceConfiguration" })
  @Type(() => SourceConfiguration)
  sourceConfiguration?: SourceConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: KnowledgeBaseStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
