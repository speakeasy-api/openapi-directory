/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WatchInput - A watch for events for a form. When the designated event happens, a notification will be published to the specified target. The notification's attributes will include a `formId` key that has the ID of the watched form and an `eventType` key that has the string of the type. Messages are sent with at-least-once delivery and are only dropped in extraordinary circumstances. Typically all notifications should be reliably delivered within a few seconds; however, in some situations notifications may be delayed. A watch expires seven days after it is created unless it is renewed with watches.renew
 */
public class WatchInput {
    /**
     * Required. Which event type to watch for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public WatchEventTypeEnum eventType;
    public WatchInput withEventType(WatchEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * The target for notification delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public WatchTarget target;
    public WatchInput withTarget(WatchTarget target) {
        this.target = target;
        return this;
    }
    
}
