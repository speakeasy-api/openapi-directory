// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConversationEnumStateEnum string

const (
	ConversationEnumStateEnumInactive ConversationEnumStateEnum = "inactive"
	ConversationEnumStateEnumActive   ConversationEnumStateEnum = "active"
	ConversationEnumStateEnumClosed   ConversationEnumStateEnum = "closed"
)

func (e ConversationEnumStateEnum) ToPointer() *ConversationEnumStateEnum {
	return &e
}

func (e *ConversationEnumStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inactive":
		fallthrough
	case "active":
		fallthrough
	case "closed":
		*e = ConversationEnumStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversationEnumStateEnum: %v", v)
	}
}
