/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class HostSummary {
    /**
     * A user-specified string that returns this host in searches.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alias")
    public String alias;

    public HostSummary withAlias(String alias) {
        this.alias = alias;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hdfsBaseConfig")
    public HdfsBaseConfig hdfsBaseConfig;

    public HostSummary withHdfsBaseConfig(HdfsBaseConfig hdfsBaseConfig) {
        this.hdfsBaseConfig = hdfsBaseConfig;
        return this;
    }
    
    /**
     * Deprecated. Please use 'name' instead.
     */
    @JsonProperty("hostname")
    public String hostname;

    public HostSummary withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Unique identifier for host.
     */
    @JsonProperty("id")
    public String id;

    public HostSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Effective CBT host status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mssqlCbtEffectiveStatus")
    public MssqlCbtEffectiveStatusTypeEnum mssqlCbtEffectiveStatus;

    public HostSummary withMssqlCbtEffectiveStatus(MssqlCbtEffectiveStatusTypeEnum mssqlCbtEffectiveStatus) {
        this.mssqlCbtEffectiveStatus = mssqlCbtEffectiveStatus;
        return this;
    }
    
    /**
     * CBT host support status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mssqlCbtEnabled")
    public MssqlCbtStatusTypeEnum mssqlCbtEnabled;

    public HostSummary withMssqlCbtEnabled(MssqlCbtStatusTypeEnum mssqlCbtEnabled) {
        this.mssqlCbtEnabled = mssqlCbtEnabled;
        return this;
    }
    
    /**
     * IP address or hostname of the host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public HostSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nasBaseConfig")
    public NasBaseConfig nasBaseConfig;

    public HostSummary withNasBaseConfig(NasBaseConfig nasBaseConfig) {
        this.nasBaseConfig = nasBaseConfig;
        return this;
    }
    
    /**
     * Operating system of the host. One of Windows, Linux, AIX, HPUX, and SunOS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystem")
    public String operatingSystem;

    public HostSummary withOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }
    
    /**
     * The operating system of the host. Possible choices are Windows, Linux, AIX, HPUX, SunOS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatingSystemType")
    public String operatingSystemType;

    public HostSummary withOperatingSystemType(String operatingSystemType) {
        this.operatingSystemType = operatingSystemType;
        return this;
    }
    
    /**
     * The ID of the organization to which the host is assigned (set by envoy).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationId")
    public String organizationId;

    public HostSummary withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * The name of the organization to which the host is assigned (set by envoy).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationName")
    public String organizationName;

    public HostSummary withOrganizationName(String organizationName) {
        this.organizationName = organizationName;
        return this;
    }
    
    /**
     * ID of the Rubrik cluster to which the host belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public HostSummary withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Specifies the connect status for the host. Status is Refreshing while discovery is running or Connected once discovery was successful and the host is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public HostSummary withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public HostSummary(@JsonProperty("hostname") String hostname, @JsonProperty("id") String id) {
        this.hostname = hostname;
        this.id = id;
  }
}
