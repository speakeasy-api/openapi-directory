// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetRecordPathParams struct {
	BucketID     string `pathParam:"style=simple,explode=false,name=bucket_id"`
	CollectionID string `pathParam:"style=simple,explode=false,name=collection_id"`
	ID           string `pathParam:"style=simple,explode=false,name=id"`
}

type GetRecordQueryParams struct {
	Fields []string `queryParam:"style=form,explode=false,name=_fields"`
}

type GetRecordHeaders struct {
	IfMatch     *string `header:"style=simple,explode=false,name=If-Match"`
	IfNoneMatch *string `header:"style=simple,explode=false,name=If-None-Match"`
}

type GetRecordRequest struct {
	PathParams  GetRecordPathParams
	QueryParams GetRecordQueryParams
	Headers     GetRecordHeaders
}

// GetRecordErrorSchema - The request is invalid.
type GetRecordErrorSchema struct {
	Code    int64       `json:"code"`
	Details interface{} `json:"details,omitempty"`
	Errno   int64       `json:"errno"`
	Error   string      `json:"error"`
	Info    *string     `json:"info,omitempty"`
	Message *string     `json:"message,omitempty"`
}

type GetRecordObjectSchemaPermissions struct {
	Read  []string `json:"read,omitempty"`
	Write []string `json:"write,omitempty"`
}

// GetRecordObjectSchema - Return the target object.
type GetRecordObjectSchema struct {
	Data        map[string]interface{}            `json:"data,omitempty"`
	Permissions *GetRecordObjectSchemaPermissions `json:"permissions,omitempty"`
}

type GetRecordResponse struct {
	ContentType string
	// The request is invalid.
	ErrorSchema *GetRecordErrorSchema
	Headers     map[string][]string
	// Return the target object.
	ObjectSchema *GetRecordObjectSchema
	StatusCode   int
	RawResponse  *http.Response
}
