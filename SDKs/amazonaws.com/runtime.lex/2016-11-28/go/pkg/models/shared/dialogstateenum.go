// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DialogStateEnum string

const (
	DialogStateEnumElicitIntent        DialogStateEnum = "ElicitIntent"
	DialogStateEnumConfirmIntent       DialogStateEnum = "ConfirmIntent"
	DialogStateEnumElicitSlot          DialogStateEnum = "ElicitSlot"
	DialogStateEnumFulfilled           DialogStateEnum = "Fulfilled"
	DialogStateEnumReadyForFulfillment DialogStateEnum = "ReadyForFulfillment"
	DialogStateEnumFailed              DialogStateEnum = "Failed"
)

func (e *DialogStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ElicitIntent":
		fallthrough
	case "ConfirmIntent":
		fallthrough
	case "ElicitSlot":
		fallthrough
	case "Fulfilled":
		fallthrough
	case "ReadyForFulfillment":
		fallthrough
	case "Failed":
		*e = DialogStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DialogStateEnum: %s", s)
	}
}
