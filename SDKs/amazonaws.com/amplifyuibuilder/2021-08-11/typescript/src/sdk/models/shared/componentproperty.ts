/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ComponentConditionProperty } from "./componentconditionproperty";
import { ComponentPropertyBindingProperties } from "./componentpropertybindingproperties";
import { FormBindingElement } from "./formbindingelement";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes the configuration for all of a component's properties. Use <code>ComponentProperty</code> to specify the values to render or bind by default.
 */
export class ComponentProperty extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bindingProperties" })
  @Type(() => ComponentPropertyBindingProperties)
  bindingProperties?: ComponentPropertyBindingProperties;

  @SpeakeasyMetadata({ elemType: FormBindingElement })
  @Expose({ name: "bindings" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, FormBindingElement> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], FormBindingElement);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  bindings?: Record<string, FormBindingElement>;

  @SpeakeasyMetadata()
  @Expose({ name: "collectionBindingProperties" })
  @Type(() => ComponentPropertyBindingProperties)
  collectionBindingProperties?: ComponentPropertyBindingProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "componentName" })
  componentName?: string;

  @SpeakeasyMetadata({ elemType: ComponentProperty })
  @Expose({ name: "concat" })
  @Type(() => ComponentProperty)
  concat?: ComponentProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  @Type(() => ComponentConditionProperty)
  condition?: ComponentConditionProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "configured" })
  configured?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultValue" })
  defaultValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "importedValue" })
  importedValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "property" })
  property?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userAttribute" })
  userAttribute?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
