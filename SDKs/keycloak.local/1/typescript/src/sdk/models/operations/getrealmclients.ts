/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetRealmClientsRequest extends SpeakeasyBase {
  /**
   * filter by clientId
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=clientId",
  })
  clientId?: string;

  /**
   * the first result
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=first" })
  first?: number;

  /**
   * the max results to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=max" })
  max?: number;

  /**
   * realm name (not id!)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=realm",
  })
  realm: string;

  /**
   * whether this is a search query or a getClientById query
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: boolean;

  /**
   * filter clients that cannot be viewed in full by admin
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=viewableOnly",
  })
  viewableOnly?: boolean;
}

export class GetRealmClientsResponse extends SpeakeasyBase {
  /**
   * success
   */
  @SpeakeasyMetadata({ elemType: shared.ClientRepresentation })
  clientRepresentations?: shared.ClientRepresentation[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
