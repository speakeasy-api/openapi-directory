<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WorkflowInvocation - Represents a single invocation of a compilation result.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WorkflowInvocation
{
    /**
     * Immutable. The name of the compilation result to compile. Must be in the format `projects/* /locations/* /repositories/* /compilationResults/*`.
     * 
     * @var ?string $compilationResult
     */
	#[\JMS\Serializer\Annotation\SerializedName('compilationResult')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $compilationResult = null;
    
    /**
     * Includes various configuration options for a workflow invocation. If both `included_targets` and `included_tags` are unset, all actions will be included.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InvocationConfig $invocationConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('invocationConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InvocationConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InvocationConfig $invocationConfig = null;
    
    /**
     * Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Interval $invocationTiming
     */
	#[\JMS\Serializer\Annotation\SerializedName('invocationTiming')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Interval')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Interval $invocationTiming = null;
    
    /**
     * Output only. The workflow invocation's name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. This workflow invocation's current state.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WorkflowInvocationStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WorkflowInvocationStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkflowInvocationStateEnum $state = null;
    
    /**
     * Immutable. The name of the workflow config to invoke. Must be in the format `projects/* /locations/* /repositories/* /workflowConfigs/*`.
     * 
     * @var ?string $workflowConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('workflowConfig')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workflowConfig = null;
    
	public function __construct()
	{
		$this->compilationResult = null;
		$this->invocationConfig = null;
		$this->invocationTiming = null;
		$this->name = null;
		$this->state = null;
		$this->workflowConfig = null;
	}
}
