"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateTimeJsonResponse = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * the current time for the timezone requested in JSON format
 */
var DateTimeJsonResponse = /** @class */ (function (_super) {
    __extends(DateTimeJsonResponse, _super);
    function DateTimeJsonResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "abbreviation" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "abbreviation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "client_ip" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "clientIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datetime" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "datetime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "day_of_week" }),
        __metadata("design:type", Number)
    ], DateTimeJsonResponse.prototype, "dayOfWeek", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "day_of_year" }),
        __metadata("design:type", Number)
    ], DateTimeJsonResponse.prototype, "dayOfYear", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dst" }),
        __metadata("design:type", Boolean)
    ], DateTimeJsonResponse.prototype, "dst", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dst_from" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "dstFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dst_offset" }),
        __metadata("design:type", Number)
    ], DateTimeJsonResponse.prototype, "dstOffset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dst_until" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "dstUntil", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "raw_offset" }),
        __metadata("design:type", Number)
    ], DateTimeJsonResponse.prototype, "rawOffset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timezone" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "timezone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unixtime" }),
        __metadata("design:type", Number)
    ], DateTimeJsonResponse.prototype, "unixtime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "utc_datetime" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "utcDatetime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "utc_offset" }),
        __metadata("design:type", String)
    ], DateTimeJsonResponse.prototype, "utcOffset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "week_number" }),
        __metadata("design:type", Number)
    ], DateTimeJsonResponse.prototype, "weekNumber", void 0);
    return DateTimeJsonResponse;
}(utils_1.SpeakeasyBase));
exports.DateTimeJsonResponse = DateTimeJsonResponse;
