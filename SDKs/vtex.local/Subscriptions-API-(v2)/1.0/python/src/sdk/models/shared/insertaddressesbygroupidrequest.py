"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import additionalcomponent as shared_additionalcomponent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InsertAddressesbygroupIDRequest:
    
    additional_components: list[shared_additionalcomponent.AdditionalComponent] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additionalComponents') }})  
    address_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressId') }})  
    address_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressName') }})  
    address_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressType') }})  
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})  
    complement: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complement') }})  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    formatted_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formattedAddress') }})  
    geo_coordinate: list[int] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('geoCoordinate') }})  
    neighborhood: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('neighborhood') }})  
    number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})  
    postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCode') }})  
    receiver_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiverName') }})  
    reference: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference') }})  
    state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})  
    street: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('street') }})  
    