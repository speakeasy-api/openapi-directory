/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TitleAsset - The TitleAsset clip type lets you create video titles from a text string and apply styling and positioning.
 */
public class TitleAsset {
    /**
     * Apply a background color behind the text. Set the text color using hexadecimal color notation. Transparency is supported by setting the first two characters of the hex string (opposite to HTML),  i.e. #80ffffff will be white with 50% transparency. Omit to use transparent background.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("background")
    public String background;
    public TitleAsset withBackground(String background) {
        this.background = background;
        return this;
    }
    
    /**
     * Set the text color using hexadecimal color notation. Transparency is supported by setting the first two characters of the hex string (opposite to HTML),  i.e. #80ffffff will be white with  50% transparency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;
    public TitleAsset withColor(String color) {
        this.color = color;
        return this;
    }
    
    /**
     * Offsets the position of an asset horizontally or vertically by a relative distance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Offset offset;
    public TitleAsset withOffset(Offset offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Place the title in one of nine predefined positions of the viewport. &lt;ul&gt;
     *   &lt;li&gt;`top` - top (center)&lt;/li&gt;
     *   &lt;li&gt;`topRight` - top right&lt;/li&gt;
     *   &lt;li&gt;`right` - right (center)&lt;/li&gt;
     *   &lt;li&gt;`bottomRight` - bottom right&lt;/li&gt;
     *   &lt;li&gt;`bottom` - bottom (center)&lt;/li&gt;
     *   &lt;li&gt;`bottomLeft` - bottom left&lt;/li&gt;
     *   &lt;li&gt;`left` - left (center)&lt;/li&gt;
     *   &lt;li&gt;`topLeft` - top left&lt;/li&gt;
     *   &lt;li&gt;`center` - center&lt;/li&gt;
     * &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("position")
    public TitleAssetPositionEnum position;
    public TitleAsset withPosition(TitleAssetPositionEnum position) {
        this.position = position;
        return this;
    }
    
    /**
     * Set the relative size of the text using predefined sizes from xx-small to xx-large. &lt;ul&gt;
     *   &lt;li&gt;`xx-small`&lt;/li&gt;
     *   &lt;li&gt;`x-small`&lt;/li&gt;
     *   &lt;li&gt;`small`&lt;/li&gt;
     *   &lt;li&gt;`medium`&lt;/li&gt;
     *   &lt;li&gt;`large`&lt;/li&gt;
     *   &lt;li&gt;`x-large`&lt;/li&gt;
     *   &lt;li&gt;`xx-large`&lt;/li&gt;
     * &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public TitleAssetSizeEnum size;
    public TitleAsset withSize(TitleAssetSizeEnum size) {
        this.size = size;
        return this;
    }
    
    /**
     * Uses a preset to apply font properties and styling to the title. &lt;ul&gt;
     *   &lt;li&gt;`minimal`&lt;/li&gt;
     *   &lt;li&gt;`blockbuster`&lt;/li&gt;
     *   &lt;li&gt;`vogue`&lt;/li&gt;
     *   &lt;li&gt;`sketchy`&lt;/li&gt;
     *   &lt;li&gt;`skinny`&lt;/li&gt;
     *   &lt;li&gt;`chunk`&lt;/li&gt;
     *   &lt;li&gt;`chunkLight`&lt;/li&gt;
     *   &lt;li&gt;`marker`&lt;/li&gt;
     *   &lt;li&gt;`future`&lt;/li&gt;
     *   &lt;li&gt;`subtitle`&lt;/li&gt;
     * &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("style")
    public TitleAssetStyleEnum style;
    public TitleAsset withStyle(TitleAssetStyleEnum style) {
        this.style = style;
        return this;
    }
    
    /**
     * The title text string - i.e. "My Title".
     */
    @JsonProperty("text")
    public String text;
    public TitleAsset withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The type of asset - set to `title` for titles.
     */
    @JsonProperty("type")
    public String type;
    public TitleAsset withType(String type) {
        this.type = type;
        return this;
    }
    
}
