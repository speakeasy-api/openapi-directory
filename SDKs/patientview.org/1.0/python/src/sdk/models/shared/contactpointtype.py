"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lookuptype as shared_lookuptype
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ContactPointTypeValueEnum(str, Enum):
    UNIT_WEB_ADDRESS = 'UNIT_WEB_ADDRESS'
    TRUST_WEB_ADDRESS = 'TRUST_WEB_ADDRESS'
    PV_ADMIN_NAME = 'PV_ADMIN_NAME'
    PV_ADMIN_PHONE = 'PV_ADMIN_PHONE'
    PV_ADMIN_EMAIL = 'PV_ADMIN_EMAIL'
    UNIT_ENQUIRIES_PHONE = 'UNIT_ENQUIRIES_PHONE'
    UNIT_ENQUIRIES_EMAIL = 'UNIT_ENQUIRIES_EMAIL'
    APPOINTMENT_PHONE = 'APPOINTMENT_PHONE'
    APPOINTMENT_EMAIL = 'APPOINTMENT_EMAIL'
    OUT_OF_HOURS_INFO = 'OUT_OF_HOURS_INFO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContactPointType:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    lookup_type: Optional[shared_lookuptype.LookupType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lookupType'), 'exclude': lambda f: f is None }})  
    value: Optional[ContactPointTypeValueEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})  
    