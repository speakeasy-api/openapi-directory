"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import calculationunitdto as shared_calculationunitdto
from ..shared import categorydto as shared_categorydto
from ..shared import countrydto as shared_countrydto
from ..shared import currencydto as shared_currencydto
from ..shared import industrydto as shared_industrydto
from ..shared import jobtypedto as shared_jobtypedto
from ..shared import languagedto as shared_languagedto
from ..shared import languagespecializationdto as shared_languagespecializationdto
from ..shared import leadsourcedto as shared_leadsourcedto
from ..shared import persondepartmentdto as shared_persondepartmentdto
from ..shared import personpositiondto as shared_personpositiondto
from ..shared import provincedto as shared_provincedto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManyValuesPerTypeDTO:
    r"""Success"""
    
    calculation_unit: Optional[list[shared_calculationunitdto.CalculationUnitDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calculationUnit'), 'exclude': lambda f: f is None }})  
    category: Optional[list[shared_categorydto.CategoryDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('category'), 'exclude': lambda f: f is None }})  
    country: Optional[list[shared_countrydto.CountryDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})  
    currency: Optional[list[shared_currencydto.CurrencyDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})  
    industry: Optional[list[shared_industrydto.IndustryDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('industry'), 'exclude': lambda f: f is None }})  
    job_type: Optional[list[shared_jobtypedto.JobTypeDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobType'), 'exclude': lambda f: f is None }})  
    language: Optional[list[shared_languagedto.LanguageDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language'), 'exclude': lambda f: f is None }})  
    lead_source: Optional[list[shared_leadsourcedto.LeadSourceDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('leadSource'), 'exclude': lambda f: f is None }})  
    person_department: Optional[list[shared_persondepartmentdto.PersonDepartmentDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personDepartment'), 'exclude': lambda f: f is None }})  
    person_position: Optional[list[shared_personpositiondto.PersonPositionDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personPosition'), 'exclude': lambda f: f is None }})  
    province: Optional[list[shared_provincedto.ProvinceDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('province'), 'exclude': lambda f: f is None }})  
    specialization: Optional[list[shared_languagespecializationdto.LanguageSpecializationDTO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('specialization'), 'exclude': lambda f: f is None }})  
    