// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteAssessmentFrameworkSharePathParams struct {
	// The unique identifier for the share request to be deleted.
	RequestID string `pathParam:"style=simple,explode=false,name=requestId"`
}

// DeleteAssessmentFrameworkShareRequestTypeEnum - Specifies whether the share request is a sent request or a received request.
type DeleteAssessmentFrameworkShareRequestTypeEnum string

const (
	DeleteAssessmentFrameworkShareRequestTypeEnumSent     DeleteAssessmentFrameworkShareRequestTypeEnum = "SENT"
	DeleteAssessmentFrameworkShareRequestTypeEnumReceived DeleteAssessmentFrameworkShareRequestTypeEnum = "RECEIVED"
)

func (e *DeleteAssessmentFrameworkShareRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SENT":
		fallthrough
	case "RECEIVED":
		*e = DeleteAssessmentFrameworkShareRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAssessmentFrameworkShareRequestTypeEnum: %s", s)
	}
}

type DeleteAssessmentFrameworkShareQueryParams struct {
	// Specifies whether the share request is a sent request or a received request.
	RequestType DeleteAssessmentFrameworkShareRequestTypeEnum `queryParam:"style=form,explode=true,name=requestType"`
}

type DeleteAssessmentFrameworkShareHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type DeleteAssessmentFrameworkShareRequest struct {
	PathParams  DeleteAssessmentFrameworkSharePathParams
	QueryParams DeleteAssessmentFrameworkShareQueryParams
	Headers     DeleteAssessmentFrameworkShareHeaders
}

type DeleteAssessmentFrameworkShareResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DeleteAssessmentFrameworkShareResponse map[string]interface{}
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
