/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataLakePrincipal } from "./datalakeprincipal";
import { PrincipalPermissions } from "./principalpermissions";
import { Expose, Type } from "class-transformer";

/**
 * A structure representing a list of Lake Formation principals designated as data lake administrators and lists of principal permission entries for default create database and default create table permissions.
 */
export class DataLakeSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowExternalDataFiltering" })
  allowExternalDataFiltering?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizedSessionTagValueList" })
  authorizedSessionTagValueList?: string[];

  @SpeakeasyMetadata({ elemType: PrincipalPermissions })
  @Expose({ name: "CreateDatabaseDefaultPermissions" })
  @Type(() => PrincipalPermissions)
  createDatabaseDefaultPermissions?: PrincipalPermissions[];

  @SpeakeasyMetadata({ elemType: PrincipalPermissions })
  @Expose({ name: "CreateTableDefaultPermissions" })
  @Type(() => PrincipalPermissions)
  createTableDefaultPermissions?: PrincipalPermissions[];

  @SpeakeasyMetadata({ elemType: DataLakePrincipal })
  @Expose({ name: "DataLakeAdmins" })
  @Type(() => DataLakePrincipal)
  dataLakeAdmins?: DataLakePrincipal[];

  @SpeakeasyMetadata({ elemType: DataLakePrincipal })
  @Expose({ name: "ExternalDataFilteringAllowList" })
  @Type(() => DataLakePrincipal)
  externalDataFilteringAllowList?: DataLakePrincipal[];

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  parameters?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "TrustedResourceOwners" })
  trustedResourceOwners?: string[];
}
