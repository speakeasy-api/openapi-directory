// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeClientAuthenticationSettingsQueryParams struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeClientAuthenticationSettingsXAmzTargetEnum
type DescribeClientAuthenticationSettingsXAmzTargetEnum string

const (
	DescribeClientAuthenticationSettingsXAmzTargetEnumDirectoryService20150416DescribeClientAuthenticationSettings DescribeClientAuthenticationSettingsXAmzTargetEnum = "DirectoryService_20150416.DescribeClientAuthenticationSettings"
)

func (e *DescribeClientAuthenticationSettingsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.DescribeClientAuthenticationSettings":
		*e = DescribeClientAuthenticationSettingsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeClientAuthenticationSettingsXAmzTargetEnum: %s", s)
	}
}

type DescribeClientAuthenticationSettingsHeaders struct {
	XAmzAlgorithm     *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeClientAuthenticationSettingsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeClientAuthenticationSettingsRequest struct {
	QueryParams DescribeClientAuthenticationSettingsQueryParams
	Headers     DescribeClientAuthenticationSettingsHeaders
	Request     shared.DescribeClientAuthenticationSettingsRequest `request:"mediaType=application/json"`
}

type DescribeClientAuthenticationSettingsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DescribeClientAuthenticationSettingsResult *shared.DescribeClientAuthenticationSettingsResult
	// DirectoryDoesNotExistException
	DirectoryDoesNotExistException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceException
	ServiceException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
