"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NameMatchCandidateOut:
    r"""The ordered list of name matching candidates"""
    
    candidate_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('candidateName'), 'exclude': lambda f: f is None }})
    r"""The name matching candidate name"""  
    pred_score_family_name: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predScoreFamilyName'), 'exclude': lambda f: f is None }})
    r"""The family name prediction score."""  
    pred_score_given_name: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predScoreGivenName'), 'exclude': lambda f: f is None }})
    r"""The given name prediction score."""  
    probability: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probability'), 'exclude': lambda f: f is None }})
    r"""The name matching estimated probability."""  
    