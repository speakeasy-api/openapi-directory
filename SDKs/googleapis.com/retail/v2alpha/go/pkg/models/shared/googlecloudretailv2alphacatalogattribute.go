// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum - If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
type GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnumDynamicFacetableOptionUnspecified GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum = "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnumDynamicFacetableEnabled           GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum = "DYNAMIC_FACETABLE_ENABLED"
	GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnumDynamicFacetableDisabled          GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum = "DYNAMIC_FACETABLE_DISABLED"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DYNAMIC_FACETABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "DYNAMIC_FACETABLE_ENABLED":
		fallthrough
	case "DYNAMIC_FACETABLE_DISABLED":
		*e = GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum - If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
type GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnumExactSearchableOptionUnspecified GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum = "EXACT_SEARCHABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnumExactSearchableEnabled           GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum = "EXACT_SEARCHABLE_ENABLED"
	GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnumExactSearchableDisabled          GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum = "EXACT_SEARCHABLE_DISABLED"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXACT_SEARCHABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "EXACT_SEARCHABLE_ENABLED":
		fallthrough
	case "EXACT_SEARCHABLE_DISABLED":
		*e = GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum - When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
type GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnumIndexableOptionUnspecified GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum = "INDEXABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnumIndexableEnabled           GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum = "INDEXABLE_ENABLED"
	GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnumIndexableDisabled          GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum = "INDEXABLE_DISABLED"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INDEXABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "INDEXABLE_ENABLED":
		fallthrough
	case "INDEXABLE_DISABLED":
		*e = GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum - When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
type GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnumRecommendationsFilteringOptionUnspecified GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum = "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnumRecommendationsFilteringDisabled          GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum = "RECOMMENDATIONS_FILTERING_DISABLED"
	GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnumRecommendationsFilteringEnabled           GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum = "RECOMMENDATIONS_FILTERING_ENABLED"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RECOMMENDATIONS_FILTERING_OPTION_UNSPECIFIED":
		fallthrough
	case "RECOMMENDATIONS_FILTERING_DISABLED":
		fallthrough
	case "RECOMMENDATIONS_FILTERING_ENABLED":
		*e = GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum - If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
type GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnumRetrievableOptionUnspecified GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum = "RETRIEVABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnumRetrievableEnabled           GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum = "RETRIEVABLE_ENABLED"
	GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnumRetrievableDisabled          GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum = "RETRIEVABLE_DISABLED"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RETRIEVABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "RETRIEVABLE_ENABLED":
		fallthrough
	case "RETRIEVABLE_DISABLED":
		*e = GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum - When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
type GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnumSearchableOptionUnspecified GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum = "SEARCHABLE_OPTION_UNSPECIFIED"
	GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnumSearchableEnabled           GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum = "SEARCHABLE_ENABLED"
	GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnumSearchableDisabled          GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum = "SEARCHABLE_DISABLED"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SEARCHABLE_OPTION_UNSPECIFIED":
		fallthrough
	case "SEARCHABLE_ENABLED":
		fallthrough
	case "SEARCHABLE_DISABLED":
		*e = GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttributeInput - Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
type GoogleCloudRetailV2alphaCatalogAttributeInput struct {
	// If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
	DynamicFacetableOption *GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum `json:"dynamicFacetableOption,omitempty"`
	// If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
	ExactSearchableOption *GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum `json:"exactSearchableOption,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
	IndexableOption *GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum `json:"indexableOption,omitempty"`
	// Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.
	Key *string `json:"key,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
	RecommendationsFilteringOption *GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum `json:"recommendationsFilteringOption,omitempty"`
	// If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
	RetrievableOption *GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum `json:"retrievableOption,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
	SearchableOption *GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum `json:"searchableOption,omitempty"`
}

// GoogleCloudRetailV2alphaCatalogAttributeTypeEnum - Output only. The type of this attribute. This is derived from the attribute in Product.attributes.
type GoogleCloudRetailV2alphaCatalogAttributeTypeEnum string

const (
	GoogleCloudRetailV2alphaCatalogAttributeTypeEnumUnknown   GoogleCloudRetailV2alphaCatalogAttributeTypeEnum = "UNKNOWN"
	GoogleCloudRetailV2alphaCatalogAttributeTypeEnumTextual   GoogleCloudRetailV2alphaCatalogAttributeTypeEnum = "TEXTUAL"
	GoogleCloudRetailV2alphaCatalogAttributeTypeEnumNumerical GoogleCloudRetailV2alphaCatalogAttributeTypeEnum = "NUMERICAL"
)

func (e *GoogleCloudRetailV2alphaCatalogAttributeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "TEXTUAL":
		fallthrough
	case "NUMERICAL":
		*e = GoogleCloudRetailV2alphaCatalogAttributeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRetailV2alphaCatalogAttributeTypeEnum: %s", s)
	}
}

// GoogleCloudRetailV2alphaCatalogAttribute - Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
type GoogleCloudRetailV2alphaCatalogAttribute struct {
	// If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
	DynamicFacetableOption *GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum `json:"dynamicFacetableOption,omitempty"`
	// If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
	ExactSearchableOption *GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum `json:"exactSearchableOption,omitempty"`
	// Output only. Indicates whether this attribute has been used by any products. `True` if at least one Product is using this attribute in Product.attributes. Otherwise, this field is `False`. CatalogAttribute can be pre-loaded by using CatalogService.AddCatalogAttribute, CatalogService.ImportCatalogAttributes, or CatalogService.UpdateAttributesConfig APIs. This field is `False` for pre-loaded CatalogAttributes. Only pre-loaded catalog attributes that are neither in use by products nor predefined can be deleted. Catalog attributes that are either in use by products or are predefined attributes cannot be deleted; however, their configuration properties will reset to default values upon removal request. After catalog changes, it takes about 10 minutes for this field to update.
	InUse *bool `json:"inUse,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
	IndexableOption *GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum `json:"indexableOption,omitempty"`
	// Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.
	Key *string `json:"key,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
	RecommendationsFilteringOption *GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum `json:"recommendationsFilteringOption,omitempty"`
	// If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
	RetrievableOption *GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum `json:"retrievableOption,omitempty"`
	// When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
	SearchableOption *GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum `json:"searchableOption,omitempty"`
	// Output only. The type of this attribute. This is derived from the attribute in Product.attributes.
	Type *GoogleCloudRetailV2alphaCatalogAttributeTypeEnum `json:"type,omitempty"`
}
