<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class NAWelcomeCamera
{
    /**
     * If power supply is ok (on/off)
     * 
     * @var ?string $alimStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('alim_status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $alimStatus = null;
    
    /**
     * Id of the camera
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Only for scope access_camera. If Camera and application requesting the information are on the same IP (true/false)
     * 
     * @var ?bool $isLocal
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_local')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isLocal = null;
    
    /**
     * State of (flood-)light
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NAWelcomeCameraLightModeStatusEnum $lightModeStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('light_mode_status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NAWelcomeCameraLightModeStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NAWelcomeCameraLightModeStatusEnum $lightModeStatus = null;
    
    /**
     * Name of the camera
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * If SD card status is ok (on/off)
     * 
     * @var ?string $sdStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('sd_status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sdStatus = null;
    
    /**
     * If camera is monitoring (on/off)
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * Type of the camera
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Only for scope access_camera. Address of the camera
     * 
     * @var ?string $vpnUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('vpn_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vpnUrl = null;
    
	public function __construct()
	{
		$this->alimStatus = null;
		$this->id = null;
		$this->isLocal = null;
		$this->lightModeStatus = null;
		$this->name = null;
		$this->sdStatus = null;
		$this->status = null;
		$this->type = null;
		$this->vpnUrl = null;
	}
}
