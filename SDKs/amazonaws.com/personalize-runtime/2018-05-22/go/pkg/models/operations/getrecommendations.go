// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetRecommendationsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetRecommendationsRequestBody struct {
	// The Amazon Resource Name (ARN) of the campaign to use for getting recommendations.
	CampaignArn *string `json:"campaignArn,omitempty"`
	// The contextual metadata to use when getting recommendations. Contextual metadata includes any interaction information that might be relevant when getting a user's recommendations, such as the user's current location or device type.
	Context map[string]string `json:"context,omitempty"`
	// <p>The ARN of the filter to apply to the returned recommendations. For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering Recommendations</a>.</p> <p>When using this parameter, be sure the filter resource is <code>ACTIVE</code>.</p>
	FilterArn *string `json:"filterArn,omitempty"`
	// <p>The values to use when filtering recommendations. For each placeholder parameter in your filter expression, provide the parameter name (in matching case) as a key and the filter value(s) as the corresponding value. Separate multiple values for one parameter with a comma. </p> <p>For filter expressions that use an <code>INCLUDE</code> element to include items, you must provide values for all parameters that are defined in the expression. For filters with expressions that use an <code>EXCLUDE</code> element to exclude items, you can omit the <code>filter-values</code>.In this case, Amazon Personalize doesn't use that portion of the expression to filter recommendations.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/personalize/latest/dg/filter.html">Filtering recommendations and user segments</a>.</p>
	FilterValues map[string]string `json:"filterValues,omitempty"`
	// <p>The item ID to provide recommendations for.</p> <p>Required for <code>RELATED_ITEMS</code> recipe type.</p>
	ItemID *string `json:"itemId,omitempty"`
	// The number of results to return. The default is 25. The maximum is 500.
	NumResults *int64 `json:"numResults,omitempty"`
	// The promotions to apply to the recommendation request. A promotion defines additional business rules that apply to a configurable subset of recommended items.
	Promotions []shared.Promotion `json:"promotions,omitempty"`
	// The Amazon Resource Name (ARN) of the recommender to use to get recommendations. Provide a recommender ARN if you created a Domain dataset group with a recommender for a domain use case.
	RecommenderArn *string `json:"recommenderArn,omitempty"`
	// <p>The user ID to provide recommendations for.</p> <p>Required for <code>USER_PERSONALIZATION</code> recipe type.</p>
	UserID *string `json:"userId,omitempty"`
}

type GetRecommendationsRequest struct {
	Headers GetRecommendationsHeaders
	Request GetRecommendationsRequestBody `request:"mediaType=application/json"`
}

type GetRecommendationsResponse struct {
	ContentType string
	// Success
	GetRecommendationsResponse *shared.GetRecommendationsResponse
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
