// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesSpaceIDFoldersIDAccountingsJournalRequest struct {
	// accounting dates of the document
	AccountingDate *string `queryParam:"style=form,explode=true,name=AccountingDate"`
	// class of the document
	Class *string `queryParam:"style=form,explode=true,name=Class"`
	// code of the document
	Code *string `queryParam:"style=form,explode=true,name=Code"`
	// delivery dates of the document
	DeliveryDate *string `queryParam:"style=form,explode=true,name=DeliveryDate"`
	// numbers of the document
	Number *int64 `queryParam:"style=form,explode=true,name=Number"`
	// Name of the target folder of the document
	TargetFolderName *string `queryParam:"style=form,explode=true,name=TargetFolderName"`
	// workbook of the document
	Workbook *string `queryParam:"style=form,explode=true,name=Workbook"`
	// yearmonth of the document
	YearMonth *string `queryParam:"style=form,explode=true,name=YearMonth"`
	// Id of the customer folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONTargetFolder struct {
	ID   *string `json:"Id,omitempty"`
	Name *string `json:"Name,omitempty"`
}

type GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum string

const (
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumCustomer    GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "customer"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumProvider    GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "provider"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumBank        GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "bank"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumCashWoucher GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "cashWoucher"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumFiscal      GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "fiscal"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumInsurance   GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "insurance"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumSocial      GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "social"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumOther       GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "other"
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnumPermanent   GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum = "permanent"
)

func (e *GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum: %s", s)
	}
}

type GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSON struct {
	AccountingDate       *string                                                                    `json:"AccountingDate,omitempty"`
	AccountingDocumentID *string                                                                    `json:"AccountingDocumentId,omitempty"`
	Class                *string                                                                    `json:"Class,omitempty"`
	Code                 *string                                                                    `json:"Code,omitempty"`
	DeliveryDate         *string                                                                    `json:"DeliveryDate,omitempty"`
	ID                   *string                                                                    `json:"Id,omitempty"`
	Number               *int64                                                                     `json:"Number,omitempty"`
	TargetFolder         *GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONTargetFolder `json:"TargetFolder,omitempty"`
	Workbook             *GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth            *string                                                                    `json:"YearMonth,omitempty"`
}

type GetSpacesSpaceIDFoldersIDAccountingsJournalResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of accountings document (journal)
	GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSONObjects []GetSpacesSpaceIDFoldersIDAccountingsJournal200ApplicationJSON
}
