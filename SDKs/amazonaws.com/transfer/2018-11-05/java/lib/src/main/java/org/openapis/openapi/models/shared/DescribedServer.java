/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DescribedServer - Describes the properties of a file transfer protocol-enabled server that was specified.
 */
public class DescribedServer {
    @JsonProperty("Arn")
    public String arn;
    public DescribedServer withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Certificate")
    public String certificate;
    public DescribedServer withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Domain")
    public DomainEnum domain;
    public DescribedServer withDomain(DomainEnum domain) {
        this.domain = domain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndpointDetails")
    public EndpointDetails endpointDetails;
    public DescribedServer withEndpointDetails(EndpointDetails endpointDetails) {
        this.endpointDetails = endpointDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EndpointType")
    public EndpointTypeEnum endpointType;
    public DescribedServer withEndpointType(EndpointTypeEnum endpointType) {
        this.endpointType = endpointType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HostKeyFingerprint")
    public String hostKeyFingerprint;
    public DescribedServer withHostKeyFingerprint(String hostKeyFingerprint) {
        this.hostKeyFingerprint = hostKeyFingerprint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IdentityProviderDetails")
    public IdentityProviderDetails identityProviderDetails;
    public DescribedServer withIdentityProviderDetails(IdentityProviderDetails identityProviderDetails) {
        this.identityProviderDetails = identityProviderDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IdentityProviderType")
    public IdentityProviderTypeEnum identityProviderType;
    public DescribedServer withIdentityProviderType(IdentityProviderTypeEnum identityProviderType) {
        this.identityProviderType = identityProviderType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LoggingRole")
    public String loggingRole;
    public DescribedServer withLoggingRole(String loggingRole) {
        this.loggingRole = loggingRole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PostAuthenticationLoginBanner")
    public String postAuthenticationLoginBanner;
    public DescribedServer withPostAuthenticationLoginBanner(String postAuthenticationLoginBanner) {
        this.postAuthenticationLoginBanner = postAuthenticationLoginBanner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PreAuthenticationLoginBanner")
    public String preAuthenticationLoginBanner;
    public DescribedServer withPreAuthenticationLoginBanner(String preAuthenticationLoginBanner) {
        this.preAuthenticationLoginBanner = preAuthenticationLoginBanner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProtocolDetails")
    public ProtocolDetails protocolDetails;
    public DescribedServer withProtocolDetails(ProtocolDetails protocolDetails) {
        this.protocolDetails = protocolDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Protocols")
    public ProtocolEnum[] protocols;
    public DescribedServer withProtocols(ProtocolEnum[] protocols) {
        this.protocols = protocols;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityPolicyName")
    public String securityPolicyName;
    public DescribedServer withSecurityPolicyName(String securityPolicyName) {
        this.securityPolicyName = securityPolicyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServerId")
    public String serverId;
    public DescribedServer withServerId(String serverId) {
        this.serverId = serverId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public StateEnum state;
    public DescribedServer withState(StateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public DescribedServer withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserCount")
    public Long userCount;
    public DescribedServer withUserCount(Long userCount) {
        this.userCount = userCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkflowDetails")
    public WorkflowDetails workflowDetails;
    public DescribedServer withWorkflowDetails(WorkflowDetails workflowDetails) {
        this.workflowDetails = workflowDetails;
        return this;
    }
    
}
