/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.
 */
export class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNationalCapabilities extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fax" })
  fax?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "mms" })
  mms?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sms" })
  sms?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "voice" })
  voice?: boolean;
}

export class ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNational extends SpeakeasyBase {
  /**
   * The type of [Address](https://www.twilio.com/docs/usage/api/address) resource the phone number requires. Can be: `none`, `any`, `local`, or `foreign`. `none` means no address is required. `any` means an address is required, but it can be anywhere in the world. `local` means an address in the phone number's country is required. `foreign` means an address outside of the phone number's country is required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address_requirements" })
  addressRequirements?: string;

  /**
   * Whether the phone number is new to the Twilio platform. Can be: `true` or `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beta" })
  beta?: boolean;

  /**
   * The set of Boolean properties that indicate whether a phone number can receive calls or messages.  Capabilities are: `Voice`, `SMS`, and `MMS` and each capability can be: `true` or `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "capabilities" })
  @Type(
    () =>
      ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNationalCapabilities
  )
  capabilities?: ApiV2010AccountAvailablePhoneNumberCountryAvailablePhoneNumberNationalCapabilities;

  /**
   * A formatted version of the phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * The [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of this phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iso_country" })
  isoCountry?: string;

  /**
   * The [LATA](https://en.wikipedia.org/wiki/Local_access_and_transport_area) of this phone number. Available for only phone numbers from the US and Canada.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lata" })
  lata?: string;

  /**
   * The latitude of this phone number's location. Available for only phone numbers from the US and Canada.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  /**
   * The locality or city of this phone number's location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locality" })
  locality?: string;

  /**
   * The longitude of this phone number's location. Available for only phone numbers from the US and Canada.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;

  /**
   * The phone number in [E.164](https://www.twilio.com/docs/glossary/what-e164) format, which consists of a + followed by the country code and subscriber number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * The postal or ZIP code of this phone number's location. Available for only phone numbers from the US and Canada.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postal_code" })
  postalCode?: string;

  /**
   * The [rate center](https://en.wikipedia.org/wiki/Telephone_exchange) of this phone number. Available for only phone numbers from the US and Canada.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rate_center" })
  rateCenter?: string;

  /**
   * The two-letter state or province abbreviation of this phone number's location. Available for only phone numbers from the US and Canada.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;
}
