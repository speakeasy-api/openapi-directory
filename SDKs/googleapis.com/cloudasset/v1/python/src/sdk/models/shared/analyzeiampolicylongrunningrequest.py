"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import iampolicyanalysisoutputconfig as shared_iampolicyanalysisoutputconfig
from ..shared import iampolicyanalysisquery as shared_iampolicyanalysisquery
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyzeIamPolicyLongrunningRequest:
    r"""A request message for AssetService.AnalyzeIamPolicyLongrunning."""
    
    analysis_query: Optional[shared_iampolicyanalysisquery.IamPolicyAnalysisQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('analysisQuery'), 'exclude': lambda f: f is None }})
    r"""IAM policy analysis query message."""  
    output_config: Optional[shared_iampolicyanalysisoutputconfig.IamPolicyAnalysisOutputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputConfig'), 'exclude': lambda f: f is None }})
    r"""Output configuration for export IAM policy analysis destination."""  
    saved_analysis_query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('savedAnalysisQuery'), 'exclude': lambda f: f is None }})
    r"""Optional. The name of a saved query, which must be in the format of: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id If both `analysis_query` and `saved_analysis_query` are provided, they will be merged together with the `saved_analysis_query` as base and the `analysis_query` as overrides. For more details of the merge behavior, please refer to the [MergeFrom](https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.message#Message.MergeFrom.details) doc. Note that you cannot override primitive fields with default value, such as 0 or empty string, etc., because we use proto3, which doesn't support field presence yet."""  
    