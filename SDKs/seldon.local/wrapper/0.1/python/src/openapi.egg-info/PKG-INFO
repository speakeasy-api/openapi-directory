Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/seldon.local/wrapper/0.1/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.Aggregate2RequestBody(
    json=shared.SeldonMessageList(
        seldon_messages=[
            shared.SeldonMessage(
                bin_data="provident",
                data=shared.DefaultData(
                    names=[
                        "quibusdam",
                        "unde",
                        "nulla",
                    ],
                    ndarry=[
                        "illum",
                        "vel",
                        "error",
                    ],
                    tensor=shared.Tensor(
                        shape=[
                            384382,
                            437587,
                            297534,
                        ],
                        values=[
                            567.13,
                            9636.63,
                            2726.56,
                            3834.41,
                        ],
                    ),
                    tftensor=shared.TensorflowTensorProto(
                        bool_val=[
                            False,
                            False,
                        ],
                        dcomplex_val=[
                            8121.69,
                            5288.95,
                            4799.77,
                            5680.45,
                        ],
                        double_val=[
                            9255.97,
                            8360.79,
                        ],
                        dtype="DT_INT32",
                        float_val=[
                            871.29,
                            6481.72,
                        ],
                        half_val=[
                            368241,
                        ],
                        int64_val=[
                            "sapiente",
                            "quo",
                            "odit",
                            "at",
                        ],
                        int_val=[
                            978619,
                            473608,
                            799159,
                            800911,
                        ],
                        resource_handle_val=[
                            shared.TensorflowResourceHandleProto(
                                container="totam",
                                device="porro",
                                hash_code="dolorum",
                                maybe_type_name="dicta",
                                name="nam",
                            ),
                            shared.TensorflowResourceHandleProto(
                                container="officia",
                                device="occaecati",
                                hash_code="fugit",
                                maybe_type_name="deleniti",
                                name="hic",
                            ),
                        ],
                        scomplex_val=[
                            5218.48,
                            1059.07,
                            4146.62,
                            4736,
                        ],
                        string_val=[
                            "qui",
                            "impedit",
                        ],
                        tensor_content="cum",
                        tensor_shape=shared.TensorflowTensorShapeProto(
                            dim=[
                                shared.TensorShapeProtoDim(
                                    name="ipsum",
                                    size="excepturi",
                                ),
                                shared.TensorShapeProtoDim(
                                    name="aspernatur",
                                    size="perferendis",
                                ),
                            ],
                            unknown_rank=False,
                        ),
                        uint32_val=[
                            617636,
                            149675,
                        ],
                        uint64_val=[
                            "dolor",
                            "natus",
                            "laboriosam",
                        ],
                        variant_val=[
                            shared.TensorflowVariantTensorDataProto(
                                metadata="saepe",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="in",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="corporis",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="iure",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="saepe",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="architecto",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="ipsa",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="est",
                            ),
                        ],
                        version_number=653140,
                    ),
                ),
                meta=shared.Meta(
                    metrics=[
                        shared.Metric(
                            key="dolores",
                            type="COUNTER",
                            value=3581.52,
                        ),
                        shared.Metric(
                            key="explicabo",
                            type="TIMER",
                            value=3154.28,
                        ),
                        shared.Metric(
                            key="omnis",
                            type="GAUGE",
                            value=3250.47,
                        ),
                    ],
                    puid="excepturi",
                    request_path={
                        "iure": "culpa",
                    },
                    routing={
                        "sapiente": 102044,
                        "mollitia": 208876,
                        "culpa": 161309,
                        "repellat": 653108,
                    },
                    tags={
                        "numquam": "commodi",
                        "quam": "molestiae",
                        "velit": "error",
                    },
                ),
                status=shared.Status(
                    code=158969,
                    info="quis",
                    reason="vitae",
                    status="FAILURE",
                ),
                str_data="animi",
            ),
            shared.SeldonMessage(
                bin_data="enim",
                data=shared.DefaultData(
                    names=[
                        "quo",
                    ],
                    ndarry=[
                        "tenetur",
                    ],
                    tensor=shared.Tensor(
                        shape=[
                            662527,
                            820994,
                        ],
                        values=[
                            971.01,
                        ],
                    ),
                    tftensor=shared.TensorflowTensorProto(
                        bool_val=[
                            False,
                            False,
                            False,
                        ],
                        dcomplex_val=[
                            6736.6,
                            960.98,
                            9719.45,
                            9764.6,
                        ],
                        double_val=[
                            4686.51,
                            5096.24,
                            9767.62,
                            557.14,
                        ],
                        dtype="DT_INT16_REF",
                        float_val=[
                            7392.64,
                            199.87,
                        ],
                        half_val=[
                            441711,
                        ],
                        int64_val=[
                            "maiores",
                            "dicta",
                        ],
                        int_val=[
                            296140,
                            480894,
                        ],
                        resource_handle_val=[
                            shared.TensorflowResourceHandleProto(
                                container="harum",
                                device="enim",
                                hash_code="accusamus",
                                maybe_type_name="commodi",
                                name="repudiandae",
                            ),
                        ],
                        scomplex_val=[
                            2168.22,
                        ],
                        string_val=[
                            "molestias",
                            "excepturi",
                            "pariatur",
                        ],
                        tensor_content="modi",
                        tensor_shape=shared.TensorflowTensorShapeProto(
                            dim=[
                                shared.TensorShapeProtoDim(
                                    name="rem",
                                    size="voluptates",
                                ),
                                shared.TensorShapeProtoDim(
                                    name="quasi",
                                    size="repudiandae",
                                ),
                                shared.TensorShapeProtoDim(
                                    name="sint",
                                    size="veritatis",
                                ),
                            ],
                            unknown_rank=False,
                        ),
                        uint32_val=[
                            277718,
                            318569,
                            9356,
                            667411,
                        ],
                        uint64_val=[
                            "explicabo",
                            "deserunt",
                            "distinctio",
                            "quibusdam",
                        ],
                        variant_val=[
                            shared.TensorflowVariantTensorDataProto(
                                metadata="modi",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="aliquid",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="cupiditate",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="perferendis",
                            ),
                        ],
                        version_number=164940,
                    ),
                ),
                meta=shared.Meta(
                    metrics=[
                        shared.Metric(
                            key="ipsam",
                            type="COUNTER",
                            value=1464.41,
                        ),
                        shared.Metric(
                            key="dolorum",
                            type="GAUGE",
                            value=2700.08,
                        ),
                        shared.Metric(
                            key="facilis",
                            type="TIMER",
                            value=2884.76,
                        ),
                        shared.Metric(
                            key="delectus",
                            type="GAUGE",
                            value=2487.53,
                        ),
                    ],
                    puid="eligendi",
                    request_path={
                        "aliquid": "provident",
                        "necessitatibus": "sint",
                        "officia": "dolor",
                    },
                    routing={
                        "a": 680056,
                        "in": 449198,
                        "illum": 978571,
                        "rerum": 116202,
                    },
                    tags={
                        "cumque": "facere",
                        "ea": "aliquid",
                    },
                ),
                status=shared.Status(
                    code=675439,
                    info="accusamus",
                    reason="non",
                    status="FAILURE",
                ),
                str_data="enim",
            ),
            shared.SeldonMessage(
                bin_data="accusamus",
                data=shared.DefaultData(
                    names=[
                        "quidem",
                        "provident",
                        "nam",
                        "id",
                    ],
                    ndarry=[
                        "deleniti",
                        "sapiente",
                        "amet",
                    ],
                    tensor=shared.Tensor(
                        shape=[
                            394869,
                            423855,
                            618809,
                        ],
                        values=[
                            4748.67,
                            191.93,
                            4701.32,
                        ],
                    ),
                    tftensor=shared.TensorflowTensorProto(
                        bool_val=[
                            False,
                            False,
                        ],
                        dcomplex_val=[
                            6601.74,
                            2879.91,
                            2900.77,
                        ],
                        double_val=[
                            6180.16,
                            7491.7,
                        ],
                        dtype="DT_RESOURCE",
                        float_val=[
                            1354.74,
                            1028.63,
                            2982.82,
                            923.73,
                        ],
                        half_val=[
                            354047,
                            590873,
                            551816,
                        ],
                        int64_val=[
                            "accusantium",
                            "mollitia",
                            "reiciendis",
                        ],
                        int_val=[
                            320997,
                            431418,
                            221262,
                        ],
                        resource_handle_val=[
                            shared.TensorflowResourceHandleProto(
                                container="odit",
                                device="nemo",
                                hash_code="quasi",
                                maybe_type_name="iure",
                                name="doloribus",
                            ),
                            shared.TensorflowResourceHandleProto(
                                container="debitis",
                                device="eius",
                                hash_code="maxime",
                                maybe_type_name="deleniti",
                                name="facilis",
                            ),
                            shared.TensorflowResourceHandleProto(
                                container="in",
                                device="architecto",
                                hash_code="architecto",
                                maybe_type_name="repudiandae",
                                name="ullam",
                            ),
                            shared.TensorflowResourceHandleProto(
                                container="expedita",
                                device="nihil",
                                hash_code="repellat",
                                maybe_type_name="quibusdam",
                                name="sed",
                            ),
                        ],
                        scomplex_val=[
                            8681.26,
                            375.59,
                            1624.93,
                            5083.15,
                        ],
                        string_val=[
                            "magni",
                            "sunt",
                            "quo",
                        ],
                        tensor_content="illum",
                        tensor_shape=shared.TensorflowTensorShapeProto(
                            dim=[
                                shared.TensorShapeProtoDim(
                                    name="maxime",
                                    size="ea",
                                ),
                                shared.TensorShapeProtoDim(
                                    name="excepturi",
                                    size="odit",
                                ),
                                shared.TensorShapeProtoDim(
                                    name="ea",
                                    size="accusantium",
                                ),
                                shared.TensorShapeProtoDim(
                                    name="ab",
                                    size="maiores",
                                ),
                            ],
                            unknown_rank=False,
                        ),
                        uint32_val=[
                            373291,
                            453543,
                            420075,
                        ],
                        uint64_val=[
                            "eaque",
                            "pariatur",
                            "nemo",
                        ],
                        variant_val=[
                            shared.TensorflowVariantTensorDataProto(
                                metadata="perferendis",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="amet",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="aut",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="corporis",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="hic",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="nobis",
                            ),
                            shared.TensorflowVariantTensorDataProto(
                                metadata="dolores",
                                tensors=[
                                    shared.TensorflowTensorProto(),
                                    shared.TensorflowTensorProto(),
                                ],
                                type_name="totam",
                            ),
                        ],
                        version_number=489549,
                    ),
                ),
                meta=shared.Meta(
                    metrics=[
                        shared.Metric(
                            key="quis",
                            type="COUNTER",
                            value=1794.9,
                        ),
                    ],
                    puid="perferendis",
                    request_path={
                        "minus": "quam",
                    },
                    routing={
                        "vero": 345352,
                    },
                    tags={
                        "recusandae": "omnis",
                        "facilis": "perspiciatis",
                        "voluptatem": "porro",
                        "consequuntur": "blanditiis",
                    },
                ),
                status=shared.Status(
                    code=621479,
                    info="eaque",
                    reason="occaecati",
                    status="FAILURE",
                ),
                str_data="adipisci",
            ),
        ],
    ),
)
    
res = s.internal.aggregate2(req)

if res.seldon_message is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### internal

* `aggregate2`
* `route`
* `send_feedback`
* `transform_input`
* `transform_input3`
* `transform_output`
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
