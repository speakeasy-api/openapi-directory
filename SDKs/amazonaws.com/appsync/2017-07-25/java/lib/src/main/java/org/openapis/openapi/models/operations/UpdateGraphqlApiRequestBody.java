/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateGraphqlApiRequestBody {
    /**
     * A list of additional authentication providers for the &lt;code&gt;GraphqlApi&lt;/code&gt; API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalAuthenticationProviders")
    public org.openapis.openapi.models.shared.AdditionalAuthenticationProvider[] additionalAuthenticationProviders;
    public UpdateGraphqlApiRequestBody withAdditionalAuthenticationProviders(org.openapis.openapi.models.shared.AdditionalAuthenticationProvider[] additionalAuthenticationProviders) {
        this.additionalAuthenticationProviders = additionalAuthenticationProviders;
        return this;
    }
    
    /**
     * The new authentication type for the &lt;code&gt;GraphqlApi&lt;/code&gt; object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationType")
    public UpdateGraphqlApiRequestBodyAuthenticationTypeEnum authenticationType;
    public UpdateGraphqlApiRequestBody withAuthenticationType(UpdateGraphqlApiRequestBodyAuthenticationTypeEnum authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }
    
    /**
     * A &lt;code&gt;LambdaAuthorizerConfig&lt;/code&gt; specifies how to authorize AppSync API access when using the &lt;code&gt;AWS_LAMBDA&lt;/code&gt; authorizer mode. Be aware that an AppSync API can have only one Lambda authorizer configured at a time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lambdaAuthorizerConfig")
    public UpdateGraphqlApiRequestBodyLambdaAuthorizerConfig lambdaAuthorizerConfig;
    public UpdateGraphqlApiRequestBody withLambdaAuthorizerConfig(UpdateGraphqlApiRequestBodyLambdaAuthorizerConfig lambdaAuthorizerConfig) {
        this.lambdaAuthorizerConfig = lambdaAuthorizerConfig;
        return this;
    }
    
    /**
     * The Amazon CloudWatch Logs configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logConfig")
    public UpdateGraphqlApiRequestBodyLogConfig logConfig;
    public UpdateGraphqlApiRequestBody withLogConfig(UpdateGraphqlApiRequestBodyLogConfig logConfig) {
        this.logConfig = logConfig;
        return this;
    }
    
    /**
     * The new name for the &lt;code&gt;GraphqlApi&lt;/code&gt; object.
     */
    @JsonProperty("name")
    public String name;
    public UpdateGraphqlApiRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Describes an OpenID Connect (OIDC) configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("openIDConnectConfig")
    public UpdateGraphqlApiRequestBodyOpenIDConnectConfig openIDConnectConfig;
    public UpdateGraphqlApiRequestBody withOpenIDConnectConfig(UpdateGraphqlApiRequestBodyOpenIDConnectConfig openIDConnectConfig) {
        this.openIDConnectConfig = openIDConnectConfig;
        return this;
    }
    
    /**
     * Describes an Amazon Cognito user pool configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userPoolConfig")
    public UpdateGraphqlApiRequestBodyUserPoolConfig userPoolConfig;
    public UpdateGraphqlApiRequestBody withUserPoolConfig(UpdateGraphqlApiRequestBodyUserPoolConfig userPoolConfig) {
        this.userPoolConfig = userPoolConfig;
        return this;
    }
    
    /**
     * A flag indicating whether to use X-Ray tracing for the &lt;code&gt;GraphqlApi&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("xrayEnabled")
    public Boolean xrayEnabled;
    public UpdateGraphqlApiRequestBody withXrayEnabled(Boolean xrayEnabled) {
        this.xrayEnabled = xrayEnabled;
        return this;
    }
    
}
