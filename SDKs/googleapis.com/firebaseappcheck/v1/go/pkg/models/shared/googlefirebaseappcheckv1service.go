// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum - Required. The App Check enforcement mode for this service.
type GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum string

const (
	GoogleFirebaseAppcheckV1ServiceEnforcementModeEnumOff        GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum = "OFF"
	GoogleFirebaseAppcheckV1ServiceEnforcementModeEnumUnenforced GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum = "UNENFORCED"
	GoogleFirebaseAppcheckV1ServiceEnforcementModeEnumEnforced   GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum = "ENFORCED"
)

func (e GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum) ToPointer() *GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum {
	return &e
}

func (e *GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OFF":
		fallthrough
	case "UNENFORCED":
		fallthrough
	case "ENFORCED":
		*e = GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum: %v", v)
	}
}

// GoogleFirebaseAppcheckV1Service - The enforcement configuration for a Firebase service supported by App Check.
type GoogleFirebaseAppcheckV1Service struct {
	// Required. The App Check enforcement mode for this service.
	EnforcementMode *GoogleFirebaseAppcheckV1ServiceEnforcementModeEnum `json:"enforcementMode,omitempty"`
	// Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)
	Name *string `json:"name,omitempty"`
}
