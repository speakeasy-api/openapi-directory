/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AuthController } from "./authcontroller";
import { ObservationController } from "./observationcontroller";
import { ObservationHeadingController } from "./observationheadingcontroller";
import { PatientController } from "./patientcontroller";
import { PatientManagementController } from "./patientmanagementcontroller";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://www.patientview.org/"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * The recommended REST API endpoints to be used when integrating with PatientView
 */
export class SDK {
  /**
   * Auth Controller
   */
  public authController: AuthController;
  /**
   * Observation Controller
   */
  public observationController: ObservationController;
  /**
   * Observation Heading Controller
   */
  public observationHeadingController: ObservationHeadingController;
  /**
   * Patient Controller
   */
  public patientController: PatientController;
  /**
   * Patient Management Controller
   */
  public patientManagementController: PatientManagementController;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.authController = new AuthController(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.observationController = new ObservationController(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.observationHeadingController = new ObservationHeadingController(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.patientController = new PatientController(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.patientManagementController = new PatientManagementController(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
