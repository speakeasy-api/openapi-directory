/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class AEAssessmentAEAssessment {
    /**
     * The a e assessments' age
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Age")
    public Integer age;

    public AEAssessmentAEAssessment withAge(Integer age) {
        this.age = age;
        return this;
    }
    
    /**
     * The a e assessments' assessment code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssessmentCode")
    public AEAssessmentAEAssessmentAssessmentCodeEnum assessmentCode;

    public AEAssessmentAEAssessment withAssessmentCode(AEAssessmentAEAssessmentAssessmentCodeEnum assessmentCode) {
        this.assessmentCode = assessmentCode;
        return this;
    }
    
    /**
     * The a e assessments' assessment date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("AssessmentDate")
    public LocalDate assessmentDate;

    public AEAssessmentAEAssessment withAssessmentDate(LocalDate assessmentDate) {
        this.assessmentDate = assessmentDate;
        return this;
    }
    
    /**
     * The a e assessments' assessment event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssessmentEvent")
    public AEAssessmentAEAssessmentAssessmentEventEnum assessmentEvent;

    public AEAssessmentAEAssessment withAssessmentEvent(AEAssessmentAEAssessmentAssessmentEventEnum assessmentEvent) {
        this.assessmentEvent = assessmentEvent;
        return this;
    }
    
    /**
     * The a e assessments' assessment override
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssessmentOverride")
    public AEAssessmentAEAssessmentAssessmentOverrideEnum assessmentOverride;

    public AEAssessmentAEAssessment withAssessmentOverride(AEAssessmentAEAssessmentAssessmentOverrideEnum assessmentOverride) {
        this.assessmentOverride = assessmentOverride;
        return this;
    }
    
    /**
     * The a e assessments' assessment result
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssessmentResult")
    public AEAssessmentAEAssessmentAssessmentResultEnum assessmentResult;

    public AEAssessmentAEAssessment withAssessmentResult(AEAssessmentAEAssessmentAssessmentResultEnum assessmentResult) {
        this.assessmentResult = assessmentResult;
        return this;
    }
    
    /**
     * The a e assessments' is member of alternative pension scheme
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsMemberOfAlternativePensionScheme")
    public Boolean isMemberOfAlternativePensionScheme;

    public AEAssessmentAEAssessment withIsMemberOfAlternativePensionScheme(Boolean isMemberOfAlternativePensionScheme) {
        this.isMemberOfAlternativePensionScheme = isMemberOfAlternativePensionScheme;
        return this;
    }
    
    /**
     * The a e assessments' opt out window end date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("OptOutWindowEndDate")
    public LocalDate optOutWindowEndDate;

    public AEAssessmentAEAssessment withOptOutWindowEndDate(LocalDate optOutWindowEndDate) {
        this.optOutWindowEndDate = optOutWindowEndDate;
        return this;
    }
    
    /**
     * The a e assessments' qualifying earnings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QualifyingEarnings")
    public Double qualifyingEarnings;

    public AEAssessmentAEAssessment withQualifyingEarnings(Double qualifyingEarnings) {
        this.qualifyingEarnings = qualifyingEarnings;
        return this;
    }
    
    /**
     * The a e assessments' reenrolment date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("ReenrolmentDate")
    public LocalDate reenrolmentDate;

    public AEAssessmentAEAssessment withReenrolmentDate(LocalDate reenrolmentDate) {
        this.reenrolmentDate = reenrolmentDate;
        return this;
    }
    
    /**
     * The a e assessments' state pension age
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatePensionAge")
    public Integer statePensionAge;

    public AEAssessmentAEAssessment withStatePensionAge(Integer statePensionAge) {
        this.statePensionAge = statePensionAge;
        return this;
    }
    
    /**
     * The a e assessments' state pension date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("StatePensionDate")
    public LocalDate statePensionDate;

    public AEAssessmentAEAssessment withStatePensionDate(LocalDate statePensionDate) {
        this.statePensionDate = statePensionDate;
        return this;
    }
    
    /**
     * The a e assessments' tax period
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxPeriod")
    public Integer taxPeriod;

    public AEAssessmentAEAssessment withTaxPeriod(Integer taxPeriod) {
        this.taxPeriod = taxPeriod;
        return this;
    }
    
    /**
     * The a e assessments' tax year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxYear")
    public Integer taxYear;

    public AEAssessmentAEAssessment withTaxYear(Integer taxYear) {
        this.taxYear = taxYear;
        return this;
    }
    
    public AEAssessmentAEAssessment(){}
}
