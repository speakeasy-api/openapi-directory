/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RulesSourceList } from "./rulessourcelist";
import { StatefulRule } from "./statefulrule";
import { StatelessRulesAndCustomActions } from "./statelessrulesandcustomactions";
import { Expose, Type } from "class-transformer";

/**
 * The stateless or stateful rules definitions for use in a single rule group. Each rule group requires a single <code>RulesSource</code>. You can use an instance of this for either stateless rules or stateful rules.
 */
export class RulesSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "RulesSourceList" })
  @Type(() => RulesSourceList)
  rulesSourceList?: RulesSourceList;

  @SpeakeasyMetadata()
  @Expose({ name: "RulesString" })
  rulesString?: string;

  @SpeakeasyMetadata({ elemType: StatefulRule })
  @Expose({ name: "StatefulRules" })
  @Type(() => StatefulRule)
  statefulRules?: StatefulRule[];

  @SpeakeasyMetadata()
  @Expose({ name: "StatelessRulesAndCustomActions" })
  @Type(() => StatelessRulesAndCustomActions)
  statelessRulesAndCustomActions?: StatelessRulesAndCustomActions;
}
