/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchTokenRequestBodyChannelEnum {
  Physical = "physical",
  Slack = "slack",
  Telegram = "telegram",
  Sms = "sms",
}

/**
 * Include token properties to create here
 */
export class PatchTokenRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: PatchTokenRequestBodyChannelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "driver" })
  driver?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "physicalId" })
  physicalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class PatchTokenRequest extends SpeakeasyBase {
  /**
   * Include token properties to create here
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchTokenRequestBody;

  /**
   * ID of token that needs to be updated
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * Returns the updated token
 */
export class PatchToken201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ok" })
  ok?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: any[];
}

export class PatchTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Returns the updated token
   */
  @SpeakeasyMetadata()
  patchToken201ApplicationJSONObject?: PatchToken201ApplicationJSON;
}
