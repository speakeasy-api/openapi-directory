"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import billingmode_enum as shared_billingmode_enum
from ..shared import globalsecondaryindex as shared_globalsecondaryindex
from ..shared import localsecondaryindex as shared_localsecondaryindex
from ..shared import provisionedthroughput as shared_provisionedthroughput
from ..shared import ssespecification as shared_ssespecification
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RestoreTableToPointInTimeInput:
    
    target_table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TargetTableName') }})  
    billing_mode_override: Optional[shared_billingmode_enum.BillingModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillingModeOverride'), 'exclude': lambda f: f is None }})  
    global_secondary_index_override: Optional[list[shared_globalsecondaryindex.GlobalSecondaryIndex]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalSecondaryIndexOverride'), 'exclude': lambda f: f is None }})  
    local_secondary_index_override: Optional[list[shared_localsecondaryindex.LocalSecondaryIndex]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalSecondaryIndexOverride'), 'exclude': lambda f: f is None }})  
    provisioned_throughput_override: Optional[shared_provisionedthroughput.ProvisionedThroughput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionedThroughputOverride'), 'exclude': lambda f: f is None }})  
    restore_date_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RestoreDateTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    source_table_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceTableArn'), 'exclude': lambda f: f is None }})  
    source_table_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceTableName'), 'exclude': lambda f: f is None }})  
    sse_specification_override: Optional[shared_ssespecification.SSESpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SSESpecificationOverride'), 'exclude': lambda f: f is None }})  
    use_latest_restorable_time: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UseLatestRestorableTime'), 'exclude': lambda f: f is None }})  
    