/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum DisruptionsGetAllDisruptionsDisruptionModesEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
  Five = "5",
  Seven = "7",
  Eight = "8",
  Nine = "9",
  Ten = "10",
  Eleven = "11",
  Twelve = "12",
  Thirteen = "13",
  Fourteen = "14",
  OneHundred = "100",
}

/**
 * Filter by status of disruption
 */
export enum DisruptionsGetAllDisruptionsDisruptionStatusEnum {
  Current = "current",
  Planned = "planned",
}

export enum DisruptionsGetAllDisruptionsRouteTypesEnum {
  Zero = "0",
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
}

export class DisruptionsGetAllDisruptionsRequest extends SpeakeasyBase {
  /**
   * Your developer id
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=devid" })
  devid?: string;

  /**
   * Filter by disruption_mode; values returned via v3/disruptions/modes API
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=disruption_modes",
  })
  disruptionModes?: DisruptionsGetAllDisruptionsDisruptionModesEnum[];

  /**
   * Filter by status of disruption
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=disruption_status",
  })
  disruptionStatus?: DisruptionsGetAllDisruptionsDisruptionStatusEnum;

  /**
   * Filter by route_type; values returned via RouteTypes API
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=route_types",
  })
  routeTypes?: DisruptionsGetAllDisruptionsRouteTypesEnum[];

  /**
   * Authentication signature for request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=signature",
  })
  signature?: string;

  /**
   * Please ignore
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=token" })
  token?: string;
}

export class DisruptionsGetAllDisruptionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * All disruption information for all route types.
   */
  @SpeakeasyMetadata()
  v3DisruptionsResponse?: shared.V3DisruptionsResponse;

  /**
   * Invalid Request
   */
  @SpeakeasyMetadata()
  v3ErrorResponse?: shared.V3ErrorResponse;
}
