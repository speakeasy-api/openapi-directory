/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Registration - An instruction to Classroom to send notifications from the `feed` to the provided destination.
 */
public class Registration {
    /**
     * A reference to a Cloud Pub/Sub topic. To register for notifications, the owner of the topic must grant `classroom-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudPubsubTopic")
    public CloudPubsubTopic cloudPubsubTopic;

    public Registration withCloudPubsubTopic(CloudPubsubTopic cloudPubsubTopic) {
        this.cloudPubsubTopic = cloudPubsubTopic;
        return this;
    }
    
    /**
     * The time until which the `Registration` is effective. This is a read-only field assigned by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiryTime")
    public String expiryTime;

    public Registration withExpiryTime(String expiryTime) {
        this.expiryTime = expiryTime;
        return this;
    }
    
    /**
     * A class of notifications that an application can register to receive. For example: "all roster changes for a domain".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("feed")
    public Feed feed;

    public Registration withFeed(Feed feed) {
        this.feed = feed;
        return this;
    }
    
    /**
     * A server-generated unique identifier for this `Registration`. Read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationId")
    public String registrationId;

    public Registration withRegistrationId(String registrationId) {
        this.registrationId = registrationId;
        return this;
    }
    
    public Registration(){}
}
