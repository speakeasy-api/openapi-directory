"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import podcastepisode as shared_podcastepisode
from typing import Optional


@dataclasses.dataclass
class UpdatePodcastEpisodeRequestBodyFileLogo:
    
    content: bytes = dataclasses.field(metadata={'multipart_form': { 'content': True }})  
    file_logo: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'file_logo' }})  
    

@dataclasses.dataclass
class UpdatePodcastEpisodeRequestBody:
    
    episode: shared_podcastepisode.PodcastEpisode = dataclasses.field(metadata={'multipart_form': { 'field_name': 'episode', 'json': True }})
    r"""PodcastEpisode model"""  
    file_logo: Optional[UpdatePodcastEpisodeRequestBodyFileLogo] = dataclasses.field(default=None, metadata={'multipart_form': { 'file': True }})  
    

@dataclasses.dataclass
class UpdatePodcastEpisodeRequest:
    
    episode_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'episodeKey', 'style': 'simple', 'explode': False }})  
    podcast_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'podcastKey', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdatePodcastEpisodeRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class UpdatePodcastEpisodeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    