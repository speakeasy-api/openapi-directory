/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoMLJobCompletionCriteria } from "./automljobcompletioncriteria";
import { AutoMLJobObjective } from "./automljobobjective";
import { ProblemTypeEnum } from "./problemtypeenum";
import { Expose, Type } from "class-transformer";

/**
 * The resolved attributes.
 */
export class ResolvedAttributes extends SpeakeasyBase {
  /**
   * Specifies a metric to minimize or maximize as the objective of a job. V2 API jobs (for example jobs created by calling <code>CreateAutoMLJobV2</code>), support <code>Accuracy</code> only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AutoMLJobObjective" })
  @Type(() => AutoMLJobObjective)
  autoMLJobObjective?: AutoMLJobObjective;

  /**
   * How long a job is allowed to run, or how many candidates a job is allowed to generate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CompletionCriteria" })
  @Type(() => AutoMLJobCompletionCriteria)
  completionCriteria?: AutoMLJobCompletionCriteria;

  @SpeakeasyMetadata()
  @Expose({ name: "ProblemType" })
  problemType?: ProblemTypeEnum;
}
