/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RoutingControl - A routing control, which is a simple on/off switch that you can use to route traffic to cells. When a routing control state is On, traffic flows to a cell. When the state is Off, traffic does not flow. 
 */
public class RoutingControl {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ControlPanelArn")
    public String controlPanelArn;
    public RoutingControl withControlPanelArn(String controlPanelArn) {
        this.controlPanelArn = controlPanelArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ControlPanelName")
    public String controlPanelName;
    public RoutingControl withControlPanelName(String controlPanelName) {
        this.controlPanelName = controlPanelName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoutingControlArn")
    public String routingControlArn;
    public RoutingControl withRoutingControlArn(String routingControlArn) {
        this.routingControlArn = routingControlArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoutingControlName")
    public String routingControlName;
    public RoutingControl withRoutingControlName(String routingControlName) {
        this.routingControlName = routingControlName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoutingControlState")
    public RoutingControlStateEnum routingControlState;
    public RoutingControl withRoutingControlState(RoutingControlStateEnum routingControlState) {
        this.routingControlState = routingControlState;
        return this;
    }
    
}
