/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class MarketChange {
    /**
     * Conflated - have more than a single change been combined (or null if not conflated)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("con")
    public Boolean con;

    public MarketChange withCon(Boolean con) {
        this.con = con;
        return this;
    }
    
    /**
     * Market Id - the id of the market
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public MarketChange withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Image - replace existing prices / data with the data supplied: it is not a delta (or null if delta)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("img")
    public Boolean img;

    public MarketChange withImg(Boolean img) {
        this.img = img;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("marketDefinition")
    public MarketDefinition marketDefinition;

    public MarketChange withMarketDefinition(MarketDefinition marketDefinition) {
        this.marketDefinition = marketDefinition;
        return this;
    }
    
    /**
     * Runner Changes - a list of changes to runners (or null if un-changed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rc")
    public RunnerChange[] rc;

    public MarketChange withRc(RunnerChange[] rc) {
        this.rc = rc;
        return this;
    }
    
    /**
     * The total amount matched across the market. This value is truncated at 2dp (or null if un-changed)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tv")
    public Double tv;

    public MarketChange withTv(Double tv) {
        this.tv = tv;
        return this;
    }
    
    public MarketChange(){}
}
