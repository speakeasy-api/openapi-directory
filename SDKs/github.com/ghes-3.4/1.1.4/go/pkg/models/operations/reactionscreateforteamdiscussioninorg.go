// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum - The [reaction type](https://docs.github.com/enterprise-server@3.4/rest/reference/reactions#reaction-types) to add to the team discussion.
type ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum string

const (
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumPlus1    ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "+1"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumMinus1   ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "-1"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumLaugh    ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "laugh"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumConfused ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "confused"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumHeart    ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "heart"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumHooray   ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "hooray"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumRocket   ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "rocket"
	ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnumEyes     ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum = "eyes"
)

func (e *ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum: %s", s)
	}
}

type ReactionsCreateForTeamDiscussionInOrgRequestBody struct {
	// The [reaction type](https://docs.github.com/enterprise-server@3.4/rest/reference/reactions#reaction-types) to add to the team discussion.
	Content ReactionsCreateForTeamDiscussionInOrgRequestBodyContentEnum `json:"content"`
}

type ReactionsCreateForTeamDiscussionInOrgRequest struct {
	RequestBody ReactionsCreateForTeamDiscussionInOrgRequestBody `request:"mediaType=application/json"`
	// The number that identifies the discussion.
	DiscussionNumber int64 `pathParam:"style=simple,explode=false,name=discussion_number"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
	// The slug of the team name.
	TeamSlug string `pathParam:"style=simple,explode=false,name=team_slug"`
}

type ReactionsCreateForTeamDiscussionInOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Reaction *shared.Reaction
}
