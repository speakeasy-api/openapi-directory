"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import businesspermissionlistviewmodel as shared_businesspermissionlistviewmodel
from typing import Optional


@dataclasses.dataclass
class GetSetupV1BusinessusersPermissionsRequest:
    
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Page limit default 20, max 100"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Starting row of page, default 0"""  
    role: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'role', 'style': 'form', 'explode': True }})
    r"""Filter permissions by role"""  
    

@dataclasses.dataclass
class GetSetupV1BusinessusersPermissionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    business_permission_list_view_model: Optional[shared_businesspermissionlistviewmodel.BusinessPermissionListViewModel] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    