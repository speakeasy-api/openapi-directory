"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SoftwareConfigOptionalComponentsEnum(str, Enum):
    COMPONENT_UNSPECIFIED = 'COMPONENT_UNSPECIFIED'
    ANACONDA = 'ANACONDA'
    DOCKER = 'DOCKER'
    DRUID = 'DRUID'
    FLINK = 'FLINK'
    HBASE = 'HBASE'
    HIVE_WEBHCAT = 'HIVE_WEBHCAT'
    HUDI = 'HUDI'
    JUPYTER = 'JUPYTER'
    PRESTO = 'PRESTO'
    TRINO = 'TRINO'
    RANGER = 'RANGER'
    SOLR = 'SOLR'
    ZEPPELIN = 'ZEPPELIN'
    ZOOKEEPER = 'ZOOKEEPER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SoftwareConfig:
    r"""Specifies the selection and config of software inside the cluster."""
    
    image_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageVersion'), 'exclude': lambda f: f is None }})
    r"""Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as \\"1.2\\" (including a subminor version, such as \\"1.2.29\\"), or the \\"preview\\" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version."""  
    optional_components: Optional[list[SoftwareConfigOptionalComponentsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optionalComponents'), 'exclude': lambda f: f is None }})
    r"""Optional. The set of components to activate on the cluster."""  
    properties: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties)."""  
    