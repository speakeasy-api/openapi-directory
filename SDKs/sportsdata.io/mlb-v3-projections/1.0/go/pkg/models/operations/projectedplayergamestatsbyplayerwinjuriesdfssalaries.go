// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum string

const (
	ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnumXML  ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum = "XML"
	ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnumJSON ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum = "JSON"
)

func (e ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum) ToPointer() *ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum {
	return &e
}

func (e *ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum: %v", v)
	}
}

type ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesRequest struct {
	// The date of the game(s).
	// <br>Examples: <code>2017-JUL-31</code>, <code>2017-SEP-01</code>.
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>10000507</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
}

type ProjectedPlayerGameStatsByPlayerWInjuriesDfsSalariesResponse struct {
	ContentType           string
	PlayerGameProjections []shared.PlayerGameProjection
	StatusCode            int
	RawResponse           *http.Response
}
