/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DcimInterfacesListRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device",
  })
  device?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device_id",
  })
  deviceId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=enabled",
  })
  enabled?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=form_factor",
  })
  formFactor?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=lag_id",
  })
  lagId?: string;

  /**
   * Number of results to return per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=mac_address",
  })
  macAddress?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=mgmt_only",
  })
  mgmtOnly?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=mtu" })
  mtu?: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * The initial index from which to return the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=vlan" })
  vlan?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=vlan_id",
  })
  vlanId?: string;
}

export class DcimInterfacesList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata({ elemType: shared.Interface })
  @Expose({ name: "results" })
  @Type(() => shared.Interface)
  results: shared.Interface[];
}

export class DcimInterfacesListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  dcimInterfacesList200ApplicationJSONObject?: DcimInterfacesList200ApplicationJSON;
}
