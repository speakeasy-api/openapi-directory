/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ValueMatcher - Specifies the way to match a ProtobufWkt::Value. Primitive values and ListValue are supported. StructValue is not supported and is always not matched. [#next-free-field: 7]
 */
public class ValueMatcher {
    /**
     * If specified, a match occurs if and only if the target value is a bool value and is equal to this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boolMatch")
    public Boolean boolMatch;

    public ValueMatcher withBoolMatch(Boolean boolMatch) {
        this.boolMatch = boolMatch;
        return this;
    }
    
    /**
     * Specifies the way to match a double value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doubleMatch")
    public DoubleMatcher doubleMatch;

    public ValueMatcher withDoubleMatch(DoubleMatcher doubleMatch) {
        this.doubleMatch = doubleMatch;
        return this;
    }
    
    /**
     * Specifies the way to match a list value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listMatch")
    public ListMatcher listMatch;

    public ValueMatcher withListMatch(ListMatcher listMatch) {
        this.listMatch = listMatch;
        return this;
    }
    
    /**
     * NullMatch is an empty message to specify a null value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nullMatch")
    public java.util.Map<String, Object> nullMatch;

    public ValueMatcher withNullMatch(java.util.Map<String, Object> nullMatch) {
        this.nullMatch = nullMatch;
        return this;
    }
    
    /**
     * If specified, value match will be performed based on whether the path is referring to a valid primitive value in the metadata. If the path is referring to a non-primitive value, the result is always not matched.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("presentMatch")
    public Boolean presentMatch;

    public ValueMatcher withPresentMatch(Boolean presentMatch) {
        this.presentMatch = presentMatch;
        return this;
    }
    
    /**
     * Specifies the way to match a string. [#next-free-field: 7]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringMatch")
    public StringMatcher stringMatch;

    public ValueMatcher withStringMatch(StringMatcher stringMatch) {
        this.stringMatch = stringMatch;
        return this;
    }
    
    public ValueMatcher(){}
}
