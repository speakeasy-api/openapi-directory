/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The attribute payload.
 */
export class UpdateThingRequestBodyAttributePayload extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "merge" })
  merge?: boolean;
}

export class UpdateThingRequestBody extends SpeakeasyBase {
  /**
   * The attribute payload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributePayload" })
  @Type(() => UpdateThingRequestBodyAttributePayload)
  attributePayload?: UpdateThingRequestBodyAttributePayload;

  /**
   * The expected version of the thing record in the registry. If the version of the record in the registry does not match the expected version specified in the request, the <code>UpdateThing</code> request is rejected with a <code>VersionConflictException</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedVersion" })
  expectedVersion?: number;

  /**
   * Remove a thing type association. If <b>true</b>, the association is removed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "removeThingType" })
  removeThingType?: boolean;

  /**
   * The name of the thing type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thingTypeName" })
  thingTypeName?: string;
}

export class UpdateThingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateThingRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * <p>The name of the thing to update.</p> <p>You can't change a thing's name. To change a thing's name, you must create a new thing, give it the new name, and then delete the old thing.</p>
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=thingName",
  })
  thingName: string;
}

export class UpdateThingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateThingResponse?: Record<string, any>;

  /**
   * VersionConflictException
   */
  @SpeakeasyMetadata()
  versionConflictException?: any;
}
