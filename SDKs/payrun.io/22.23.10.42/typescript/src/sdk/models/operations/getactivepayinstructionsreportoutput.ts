/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetActivePayInstructionsReportOutputRequest extends SpeakeasyBase {
  /**
   * The active date to consider. E.g 2017-04-05
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ActiveOn;dateTimeFormat=YYYY-MM-DD",
  })
  activeOn?: Date;

  /**
   * The version of the api to target. Omit or set as &apos;default&apos; to target the current api version.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Api-Version",
  })
  apiVersion: string;

  /**
   * The OAuth 1 authorization header. &apos;Auto&apos; enables auto complete.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Authorization",
  })
  authorization: string;

  /**
   * The employee unique key. E.g. EE001
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EmployeeKey",
  })
  employeeKey: string;

  /**
   * The employer unique key. E.g. ER001
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EmployerKey",
  })
  employerKey: string;

  /**
   * The lower filter date. E.g 2016-04-06
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FromDate;dateTimeFormat=YYYY-MM-DD",
  })
  fromDate: Date;

  /**
   * The upper filter date. E.g 2017-04-05
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ToDate;dateTimeFormat=YYYY-MM-DD",
  })
  toDate?: Date;

  /**
   * the data type to filter on. E.g. TaxPayInstruction
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Type" })
  type?: string;
}

export class GetActivePayInstructionsReportOutputResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  errorModel?: shared.ErrorModel;

  /**
   * The result of the active pay instructions report execution
   */
  @SpeakeasyMetadata()
  getActivePayInstructionsReportOutput200ApplicationJSONBinaryString?: Uint8Array;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
