// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ComplyWithGuidelinesRecommendationReasonEnum - The reason why the location is being recommended to comply with guidelines.
type ComplyWithGuidelinesRecommendationReasonEnum string

const (
	ComplyWithGuidelinesRecommendationReasonEnumRecommendationReasonUnspecified ComplyWithGuidelinesRecommendationReasonEnum = "RECOMMENDATION_REASON_UNSPECIFIED"
	ComplyWithGuidelinesRecommendationReasonEnumBusinessLocationSuspended       ComplyWithGuidelinesRecommendationReasonEnum = "BUSINESS_LOCATION_SUSPENDED"
	ComplyWithGuidelinesRecommendationReasonEnumBusinessLocationDisabled        ComplyWithGuidelinesRecommendationReasonEnum = "BUSINESS_LOCATION_DISABLED"
)

func (e *ComplyWithGuidelinesRecommendationReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RECOMMENDATION_REASON_UNSPECIFIED":
		fallthrough
	case "BUSINESS_LOCATION_SUSPENDED":
		fallthrough
	case "BUSINESS_LOCATION_DISABLED":
		*e = ComplyWithGuidelinesRecommendationReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComplyWithGuidelinesRecommendationReasonEnum: %s", s)
	}
}

// ComplyWithGuidelines - Indicates that the location fails to comply with our [guidelines](https://support.google.com/business/answer/3038177).
type ComplyWithGuidelines struct {
	// The reason why the location is being recommended to comply with guidelines.
	RecommendationReason *ComplyWithGuidelinesRecommendationReasonEnum `json:"recommendationReason,omitempty"`
}
