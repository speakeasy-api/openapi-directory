"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import build as shared_build
from typing import Optional


@dataclasses.dataclass
class GetRecentBuildsRequest:
    
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The number of builds to return. Maximum 100, defaults to 30."""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The API returns builds starting from this offset, defaults to 0."""  
    

@dataclasses.dataclass
class GetRecentBuildsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    builds: Optional[list[shared_build.Build]] = dataclasses.field(default=None)
    r"""Build summary for each of the last 30 recent builds"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    