// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// IdentitytoolkitRelyingpartyCreateAuthURIRequest - Request to get the IDP authentication URL.
type IdentitytoolkitRelyingpartyCreateAuthURIRequest struct {
	// The app ID of the mobile app, base64(CERT_SHA1):PACKAGE_NAME for Android, BUNDLE_ID for iOS.
	AppID *string `json:"appId,omitempty"`
	// Explicitly specify the auth flow type. Currently only support "CODE_FLOW" type. The field is only used for Google provider.
	AuthFlowType *string `json:"authFlowType,omitempty"`
	// The relying party OAuth client ID.
	ClientID *string `json:"clientId,omitempty"`
	// The opaque value used by the client to maintain context info between the authentication request and the IDP callback.
	Context *string `json:"context,omitempty"`
	// The URI to which the IDP redirects the user after the federated login flow.
	ContinueURI *string `json:"continueUri,omitempty"`
	// The query parameter that client can customize by themselves in auth url. The following parameters are reserved for server so that they cannot be customized by clients: client_id, response_type, scope, redirect_uri, state, oauth_token.
	CustomParameter map[string]string `json:"customParameter,omitempty"`
	// The hosted domain to restrict sign-in to accounts at that domain for Google Apps hosted accounts.
	HostedDomain *string `json:"hostedDomain,omitempty"`
	// The email or federated ID of the user.
	Identifier *string `json:"identifier,omitempty"`
	// The developer's consumer key for OpenId OAuth Extension
	OauthConsumerKey *string `json:"oauthConsumerKey,omitempty"`
	// Additional oauth scopes, beyond the basid user profile, that the user would be prompted to grant
	OauthScope *string `json:"oauthScope,omitempty"`
	// Optional realm for OpenID protocol. The sub string "scheme://domain:port" of the param "continueUri" is used if this is not set.
	OpenidRealm *string `json:"openidRealm,omitempty"`
	// The native app package for OTA installation.
	OtaApp *string `json:"otaApp,omitempty"`
	// The IdP ID. For white listed IdPs it's a short domain name e.g. google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
	ProviderID *string `json:"providerId,omitempty"`
	// The session_id passed by client.
	SessionID *string `json:"sessionId,omitempty"`
	// For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
	TenantID *string `json:"tenantId,omitempty"`
	// Tenant project number to be used for idp discovery.
	TenantProjectNumber *string `json:"tenantProjectNumber,omitempty"`
}
