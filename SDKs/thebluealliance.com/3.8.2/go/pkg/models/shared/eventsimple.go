// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
)

// EventSimple - Successful response
type EventSimple struct {
	// City, town, village, etc. the event is located in.
	City *string `json:"city,omitempty"`
	// Country the event is located in.
	Country  *string       `json:"country,omitempty"`
	District *DistrictList `json:"district,omitempty"`
	// Event end date in `yyyy-mm-dd` format.
	EndDate types.Date `json:"end_date"`
	// Event short code, as provided by FIRST.
	EventCode string `json:"event_code"`
	// Event Type, as defined here: https://github.com/the-blue-alliance/the-blue-alliance/blob/master/consts/event_type.py#L2
	EventType int64 `json:"event_type"`
	// TBA event key with the format yyyy[EVENT_CODE], where yyyy is the year, and EVENT_CODE is the event code of the event.
	Key string `json:"key"`
	// Official name of event on record either provided by FIRST or organizers of offseason event.
	Name string `json:"name"`
	// Event start date in `yyyy-mm-dd` format.
	StartDate types.Date `json:"start_date"`
	// State or Province the event is located in.
	StateProv *string `json:"state_prov,omitempty"`
	// Year the event data is for.
	Year int64 `json:"year"`
}
