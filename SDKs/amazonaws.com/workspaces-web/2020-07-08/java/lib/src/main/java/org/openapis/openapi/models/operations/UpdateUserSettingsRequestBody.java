/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateUserSettingsRequestBody {
    /**
     * &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token return the result from the original successful request. &lt;/p&gt; &lt;p&gt;If you do not specify a client token, one is automatically generated by the AWS SDK.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public UpdateUserSettingsRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * Specifies whether the user can copy text from the streaming session to the local device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("copyAllowed")
    public UpdateUserSettingsRequestBodyCopyAllowedEnum copyAllowed;
    public UpdateUserSettingsRequestBody withCopyAllowed(UpdateUserSettingsRequestBodyCopyAllowedEnum copyAllowed) {
        this.copyAllowed = copyAllowed;
        return this;
    }
    
    /**
     * The amount of time that a streaming session remains active after users disconnect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disconnectTimeoutInMinutes")
    public Long disconnectTimeoutInMinutes;
    public UpdateUserSettingsRequestBody withDisconnectTimeoutInMinutes(Long disconnectTimeoutInMinutes) {
        this.disconnectTimeoutInMinutes = disconnectTimeoutInMinutes;
        return this;
    }
    
    /**
     * Specifies whether the user can download files from the streaming session to the local device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("downloadAllowed")
    public UpdateUserSettingsRequestBodyDownloadAllowedEnum downloadAllowed;
    public UpdateUserSettingsRequestBody withDownloadAllowed(UpdateUserSettingsRequestBodyDownloadAllowedEnum downloadAllowed) {
        this.downloadAllowed = downloadAllowed;
        return this;
    }
    
    /**
     * The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idleDisconnectTimeoutInMinutes")
    public Long idleDisconnectTimeoutInMinutes;
    public UpdateUserSettingsRequestBody withIdleDisconnectTimeoutInMinutes(Long idleDisconnectTimeoutInMinutes) {
        this.idleDisconnectTimeoutInMinutes = idleDisconnectTimeoutInMinutes;
        return this;
    }
    
    /**
     * Specifies whether the user can paste text from the local device to the streaming session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pasteAllowed")
    public UpdateUserSettingsRequestBodyPasteAllowedEnum pasteAllowed;
    public UpdateUserSettingsRequestBody withPasteAllowed(UpdateUserSettingsRequestBodyPasteAllowedEnum pasteAllowed) {
        this.pasteAllowed = pasteAllowed;
        return this;
    }
    
    /**
     * Specifies whether the user can print to the local device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("printAllowed")
    public UpdateUserSettingsRequestBodyPrintAllowedEnum printAllowed;
    public UpdateUserSettingsRequestBody withPrintAllowed(UpdateUserSettingsRequestBodyPrintAllowedEnum printAllowed) {
        this.printAllowed = printAllowed;
        return this;
    }
    
    /**
     * Specifies whether the user can upload files from the local device to the streaming session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploadAllowed")
    public UpdateUserSettingsRequestBodyUploadAllowedEnum uploadAllowed;
    public UpdateUserSettingsRequestBody withUploadAllowed(UpdateUserSettingsRequestBodyUploadAllowedEnum uploadAllowed) {
        this.uploadAllowed = uploadAllowed;
        return this;
    }
    
}
