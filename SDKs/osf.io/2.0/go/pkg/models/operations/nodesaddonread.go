// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type NodesAddonReadPathParams struct {
	// The unique identifier of the node.
	NodeID string `pathParam:"style=simple,explode=false,name=node_id"`
	// The unique identifier of the addon.
	Provider string `pathParam:"style=simple,explode=false,name=provider"`
}

type NodesAddonReadRequest struct {
	PathParams NodesAddonReadPathParams
}

// NodesAddonReadNodeAddonAttributes - The properties of the node addon entity.
type NodesAddonReadNodeAddonAttributes struct {
	// Whether or not this node has been configured with an addon folder.
	Configured *bool
	// Whether or not this node has a NodeSettings object associated with it.
	Enabled *bool
	// The ID of the associated node addon account, if any.
	ExternalAccountID *string
	// The ID of the linked folder from the addon provider.
	FolderID *string
	// The folder path of the linked folder from the addon provider. Google Drive specific
	FolderPath *string
	// A label specific to the addon provider.
	Label *string
	// Whether or not this node is fully authorized to use this node addon.
	NodeHasAuth *bool
	// An external link specific to the addon provider.
	URL *string
}

// NodesAddonReadNodeAddonLinks - URLs to alternative representations of the node addon entity.
type NodesAddonReadNodeAddonLinks struct {
	// A link to the the canonical API endpoint for this node addon.
	Self string
}

// NodesAddonReadNodeAddon - OK
type NodesAddonReadNodeAddon struct {
	// The properties of the node addon entity.
	Attributes *NodesAddonReadNodeAddonAttributes
	// The unique identifier of the draft registration entity.
	ID string
	// URLs to alternative representations of the node addon entity.
	Links *NodesAddonReadNodeAddonLinks
	// The type identifier of the node addon entity (`node_addons`).
	Type string
}

type NodesAddonReadResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
