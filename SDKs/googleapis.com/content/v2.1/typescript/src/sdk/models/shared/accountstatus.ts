/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountStatusAccountLevelIssue } from "./accountstatusaccountlevelissue";
import { AccountStatusProducts } from "./accountstatusproducts";
import { Expose, Type } from "class-transformer";

/**
 * The status of an account, that is, information about its products, which is computed offline and not returned immediately at insertion time.
 */
export class AccountStatus extends SpeakeasyBase {
  /**
   * The ID of the account for which the status is reported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * A list of account level issues.
   */
  @SpeakeasyMetadata({ elemType: AccountStatusAccountLevelIssue })
  @Expose({ name: "accountLevelIssues" })
  @Type(() => AccountStatusAccountLevelIssue)
  accountLevelIssues?: AccountStatusAccountLevelIssue[];

  /**
   * How the account is managed. Acceptable values are: - "`manual`" - "`automatic`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountManagement" })
  accountManagement?: string;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "`content#accountStatus`"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.
   */
  @SpeakeasyMetadata({ elemType: AccountStatusProducts })
  @Expose({ name: "products" })
  @Type(() => AccountStatusProducts)
  products?: AccountStatusProducts[];

  /**
   * Whether the account's website is claimed or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "websiteClaimed" })
  websiteClaimed?: boolean;
}
