<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MssqlLogShippingDetail - Returned when the request for the log shipping configuration details is successful.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MssqlLogShippingDetail
{
    /**
     * ID assigned to the log shipping configuration object.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Number of milliseconds elapsed since the latest backup was applied to the secondary database and the time the backup was taken on the primary database.
     * 
     * @var ?int $lagTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lagTime')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lagTime = null;
    
    /**
     * Timestamp of the last transaction applied using the specified log shipping configuration object.
     * 
     * @var ?\DateTime $lastAppliedPoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastAppliedPoint')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastAppliedPoint = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MssqlLogShippingLinks')]
    public MssqlLogShippingLinks $links;
    
    /**
     * Location of a specified secondary database. Location uses this format: "host/instance".
     * 
     * @var string $location
     */
	#[\JMS\Serializer\Annotation\SerializedName('location')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $location;
    
    /**
     * ID of the primary database.
     * 
     * @var string $primaryDatabaseId
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryDatabaseId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryDatabaseId;
    
    /**
     * Log backup frequency, in seconds, of the primary database.
     * 
     * @var int $primaryDatabaseLogBackupFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryDatabaseLogBackupFrequency')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $primaryDatabaseLogBackupFrequency;
    
    /**
     * Name of the primary database.
     * 
     * @var string $primaryDatabaseName
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryDatabaseName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryDatabaseName;
    
    /**
     * ID of the secondary database.
     * 
     * @var ?string $secondaryDatabaseId
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryDatabaseId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secondaryDatabaseId = null;
    
    /**
     * Name of the secondary database.
     * 
     * @var string $secondaryDatabaseName
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryDatabaseName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $secondaryDatabaseName;
    
    /**
     * Whether to automatically disconnect users from a secondary database in Standby mode when a restore operation is performed. If this value is false and users remain connected, then any scheduled restore operations will fail. This is only returned when the secondary database is in Standby mode.
     * 
     * @var ?bool $shouldDisconnectStandbyUsers
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldDisconnectStandbyUsers')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldDisconnectStandbyUsers = null;
    
    /**
     * The current state of the secondary database.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MssqlLogShippingStatusInfo')]
    public MssqlLogShippingStatusInfo $status;
    
	public function __construct()
	{
		$this->id = "";
		$this->lagTime = null;
		$this->lastAppliedPoint = null;
		$this->links = new \OpenAPI\OpenAPI\Models\Shared\MssqlLogShippingLinks();
		$this->location = "";
		$this->primaryDatabaseId = "";
		$this->primaryDatabaseLogBackupFrequency = 0;
		$this->primaryDatabaseName = "";
		$this->secondaryDatabaseId = null;
		$this->secondaryDatabaseName = "";
		$this->shouldDisconnectStandbyUsers = null;
		$this->state = null;
		$this->status = new \OpenAPI\OpenAPI\Models\Shared\MssqlLogShippingStatusInfo();
	}
}
