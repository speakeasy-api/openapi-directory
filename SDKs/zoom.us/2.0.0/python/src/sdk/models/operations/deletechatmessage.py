"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class DeleteChatMessageSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class DeleteChatMessageRequest:
    
    message_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'messageId', 'style': 'simple', 'explode': False }})
    r"""Message ID"""  
    user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'userId', 'style': 'simple', 'explode': False }})  
    to_channel: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'to_channel', 'style': 'form', 'explode': True }})
    r"""The channel Id of the channel where you would like to send the message.
    
    You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel
    """  
    to_contact: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'to_contact', 'style': 'form', 'explode': True }})
    r"""The userId or email address of a chat contact to whom you previously sent the message.
    
    Note: You must provide either `to_contact` or `to_channel` as a query parameter to delete a message that was previously sent to either an individual or a chat channel respectively.
    """  
    

@dataclasses.dataclass
class DeleteChatMessageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    