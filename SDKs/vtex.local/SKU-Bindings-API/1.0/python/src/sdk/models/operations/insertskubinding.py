"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InsertSKUBindingRequestBody:
    r"""Request body"""
    
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsActive') }})
    r"""Defines if the SKU binding is active."""  
    seller_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SellerId') }})
    r"""ID that identifies the seller in the marketplace. It can be the same as the seller name or a unique number. Check the **Sellers management** section in the Admin to get the correct ID."""  
    seller_stock_keeping_unit_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SellerStockKeepingUnitId') }})
    r"""SKU seller ID."""  
    stock_keeping_unit_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockKeepingUnitId') }})
    r"""SKU ID in the marketplace."""  
    

@dataclasses.dataclass
class InsertSKUBindingRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    request_body: InsertSKUBindingRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Request body"""  
    

@dataclasses.dataclass
class InsertSKUBindingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    