// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListApprovalRuleTemplatesXAmzTargetEnum
type ListApprovalRuleTemplatesXAmzTargetEnum string

const (
	ListApprovalRuleTemplatesXAmzTargetEnumCodeCommit20150413ListApprovalRuleTemplates ListApprovalRuleTemplatesXAmzTargetEnum = "CodeCommit_20150413.ListApprovalRuleTemplates"
)

func (e ListApprovalRuleTemplatesXAmzTargetEnum) ToPointer() *ListApprovalRuleTemplatesXAmzTargetEnum {
	return &e
}

func (e *ListApprovalRuleTemplatesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeCommit_20150413.ListApprovalRuleTemplates":
		*e = ListApprovalRuleTemplatesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListApprovalRuleTemplatesXAmzTargetEnum: %v", v)
	}
}

type ListApprovalRuleTemplatesRequest struct {
	ListApprovalRuleTemplatesInput shared.ListApprovalRuleTemplatesInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     ListApprovalRuleTemplatesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListApprovalRuleTemplatesResponse struct {
	ContentType string
	// InvalidContinuationTokenException
	InvalidContinuationTokenException interface{}
	// InvalidMaxResultsException
	InvalidMaxResultsException interface{}
	// Success
	ListApprovalRuleTemplatesOutput *shared.ListApprovalRuleTemplatesOutput
	StatusCode                      int
	RawResponse                     *http.Response
}
