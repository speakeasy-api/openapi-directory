"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetVolumesResponse = exports.GetVolumes200ApplicationJSON = exports.GetVolumes200ApplicationJSONVolumes = exports.GetVolumes200ApplicationJSONVolumesStatusEnum = exports.GetVolumes200ApplicationJSONVolumesProtection = exports.GetVolumes200ApplicationJSONVolumesLocation = exports.GetVolumes200ApplicationJSONMeta = exports.GetVolumes200ApplicationJSONMetaPagination = exports.GetVolumesRequest = exports.GetVolumesStatusEnum = exports.GetVolumesSortEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Can be used multiple times.
 */
var GetVolumesSortEnum;
(function (GetVolumesSortEnum) {
    GetVolumesSortEnum["Id"] = "id";
    GetVolumesSortEnum["IdAsc"] = "id:asc";
    GetVolumesSortEnum["IdDesc"] = "id:desc";
    GetVolumesSortEnum["Name"] = "name";
    GetVolumesSortEnum["NameAsc"] = "name:asc";
    GetVolumesSortEnum["NameDesc"] = "name:desc";
    GetVolumesSortEnum["Created"] = "created";
    GetVolumesSortEnum["CreatedAsc"] = "created:asc";
    GetVolumesSortEnum["CreatedDesc"] = "created:desc";
})(GetVolumesSortEnum = exports.GetVolumesSortEnum || (exports.GetVolumesSortEnum = {}));
/**
 * Can be used multiple times. The response will only contain Volumes matching the status.
 */
var GetVolumesStatusEnum;
(function (GetVolumesStatusEnum) {
    GetVolumesStatusEnum["Available"] = "available";
    GetVolumesStatusEnum["Creating"] = "creating";
})(GetVolumesStatusEnum = exports.GetVolumesStatusEnum || (exports.GetVolumesStatusEnum = {}));
var GetVolumesRequest = /** @class */ (function (_super) {
    __extends(GetVolumesRequest, _super);
    function GetVolumesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=label_selector",
        }),
        __metadata("design:type", String)
    ], GetVolumesRequest.prototype, "labelSelector", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=name" }),
        __metadata("design:type", String)
    ], GetVolumesRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=sort" }),
        __metadata("design:type", String)
    ], GetVolumesRequest.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=status",
        }),
        __metadata("design:type", String)
    ], GetVolumesRequest.prototype, "status", void 0);
    return GetVolumesRequest;
}(utils_1.SpeakeasyBase));
exports.GetVolumesRequest = GetVolumesRequest;
var GetVolumes200ApplicationJSONMetaPagination = /** @class */ (function (_super) {
    __extends(GetVolumes200ApplicationJSONMetaPagination, _super);
    function GetVolumes200ApplicationJSONMetaPagination() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "last_page" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONMetaPagination.prototype, "lastPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "next_page" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONMetaPagination.prototype, "nextPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "page" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONMetaPagination.prototype, "page", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "per_page" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONMetaPagination.prototype, "perPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previous_page" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONMetaPagination.prototype, "previousPage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_entries" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONMetaPagination.prototype, "totalEntries", void 0);
    return GetVolumes200ApplicationJSONMetaPagination;
}(utils_1.SpeakeasyBase));
exports.GetVolumes200ApplicationJSONMetaPagination = GetVolumes200ApplicationJSONMetaPagination;
var GetVolumes200ApplicationJSONMeta = /** @class */ (function (_super) {
    __extends(GetVolumes200ApplicationJSONMeta, _super);
    function GetVolumes200ApplicationJSONMeta() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pagination" }),
        (0, class_transformer_1.Type)(function () { return GetVolumes200ApplicationJSONMetaPagination; }),
        __metadata("design:type", GetVolumes200ApplicationJSONMetaPagination)
    ], GetVolumes200ApplicationJSONMeta.prototype, "pagination", void 0);
    return GetVolumes200ApplicationJSONMeta;
}(utils_1.SpeakeasyBase));
exports.GetVolumes200ApplicationJSONMeta = GetVolumes200ApplicationJSONMeta;
/**
 * Location of the Volume. Volume can only be attached to Servers in the same Location.
 */
var GetVolumes200ApplicationJSONVolumesLocation = /** @class */ (function (_super) {
    __extends(GetVolumes200ApplicationJSONVolumesLocation, _super);
    function GetVolumes200ApplicationJSONVolumesLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "latitude" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "latitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "longitude" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "longitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network_zone" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumesLocation.prototype, "networkZone", void 0);
    return GetVolumes200ApplicationJSONVolumesLocation;
}(utils_1.SpeakeasyBase));
exports.GetVolumes200ApplicationJSONVolumesLocation = GetVolumes200ApplicationJSONVolumesLocation;
/**
 * Protection configuration for the Resource
 */
var GetVolumes200ApplicationJSONVolumesProtection = /** @class */ (function (_super) {
    __extends(GetVolumes200ApplicationJSONVolumesProtection, _super);
    function GetVolumes200ApplicationJSONVolumesProtection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "delete" }),
        __metadata("design:type", Boolean)
    ], GetVolumes200ApplicationJSONVolumesProtection.prototype, "delete", void 0);
    return GetVolumes200ApplicationJSONVolumesProtection;
}(utils_1.SpeakeasyBase));
exports.GetVolumes200ApplicationJSONVolumesProtection = GetVolumes200ApplicationJSONVolumesProtection;
/**
 * Current status of the Volume
 */
var GetVolumes200ApplicationJSONVolumesStatusEnum;
(function (GetVolumes200ApplicationJSONVolumesStatusEnum) {
    GetVolumes200ApplicationJSONVolumesStatusEnum["Creating"] = "creating";
    GetVolumes200ApplicationJSONVolumesStatusEnum["Available"] = "available";
})(GetVolumes200ApplicationJSONVolumesStatusEnum = exports.GetVolumes200ApplicationJSONVolumesStatusEnum || (exports.GetVolumes200ApplicationJSONVolumesStatusEnum = {}));
var GetVolumes200ApplicationJSONVolumes = /** @class */ (function (_super) {
    __extends(GetVolumes200ApplicationJSONVolumes, _super);
    function GetVolumes200ApplicationJSONVolumes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "format" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "linux_device" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "linuxDevice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        (0, class_transformer_1.Type)(function () { return GetVolumes200ApplicationJSONVolumesLocation; }),
        __metadata("design:type", GetVolumes200ApplicationJSONVolumesLocation)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protection" }),
        (0, class_transformer_1.Type)(function () { return GetVolumes200ApplicationJSONVolumesProtection; }),
        __metadata("design:type", GetVolumes200ApplicationJSONVolumesProtection)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "protection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "server" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "server", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", Number)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], GetVolumes200ApplicationJSONVolumes.prototype, "status", void 0);
    return GetVolumes200ApplicationJSONVolumes;
}(utils_1.SpeakeasyBase));
exports.GetVolumes200ApplicationJSONVolumes = GetVolumes200ApplicationJSONVolumes;
/**
 * The `volumes` key contains a list of volumes
 */
var GetVolumes200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetVolumes200ApplicationJSON, _super);
    function GetVolumes200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meta" }),
        (0, class_transformer_1.Type)(function () { return GetVolumes200ApplicationJSONMeta; }),
        __metadata("design:type", GetVolumes200ApplicationJSONMeta)
    ], GetVolumes200ApplicationJSON.prototype, "meta", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: GetVolumes200ApplicationJSONVolumes }),
        (0, class_transformer_1.Expose)({ name: "volumes" }),
        (0, class_transformer_1.Type)(function () { return GetVolumes200ApplicationJSONVolumes; }),
        __metadata("design:type", Array)
    ], GetVolumes200ApplicationJSON.prototype, "volumes", void 0);
    return GetVolumes200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetVolumes200ApplicationJSON = GetVolumes200ApplicationJSON;
var GetVolumesResponse = /** @class */ (function (_super) {
    __extends(GetVolumesResponse, _super);
    function GetVolumesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetVolumesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetVolumesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetVolumesResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetVolumes200ApplicationJSON)
    ], GetVolumesResponse.prototype, "getVolumes200ApplicationJSONObject", void 0);
    return GetVolumesResponse;
}(utils_1.SpeakeasyBase));
exports.GetVolumesResponse = GetVolumesResponse;
