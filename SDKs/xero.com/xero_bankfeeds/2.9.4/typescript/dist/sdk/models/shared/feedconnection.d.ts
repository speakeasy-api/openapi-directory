import { SpeakeasyBase } from "../../../internal/utils";
import { CountryCodeEnum } from "./countrycodeenum";
import { CurrencyCodeEnum } from "./currencycodeenum";
import { ErrorT } from "./error";
/**
 * High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards.
 */
export declare enum FeedConnectionAccountTypeEnum {
    Bank = "BANK",
    Creditcard = "CREDITCARD"
}
/**
 * the current status of the feed connection
 */
export declare enum FeedConnectionStatusEnum {
    Pending = "PENDING",
    Rejected = "REJECTED"
}
/**
 * success returns a FeedConnection object matching the id in response
 *
 * @see {@link https://developer.xero.com/documentation/bank-feeds-api/feed-connections}
 */
export declare class FeedConnection extends SpeakeasyBase {
    /**
     * Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified.
     */
    accountId?: string;
    /**
     * The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found.
     */
    accountName?: string;
    /**
     * String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified.
     */
    accountNumber?: string;
    /**
     * This account identifier is generated by the financial institute (FI). This must be unique for your financial institute.
     */
    accountToken?: string;
    /**
     * High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards.
     */
    accountType?: FeedConnectionAccountTypeEnum;
    /**
     * ISO-3166 alpha-2 country code, e.g. US, AU This element is required only when the Application supports multi-region. Talk to your Partner Manager to confirm if this is the case.
     */
    country?: CountryCodeEnum;
    /**
     * 3 letter alpha code for the ISO-4217 currency code, e.g. USD, AUD.
     */
    currency?: CurrencyCodeEnum;
    /**
     * On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.
     */
    error?: ErrorT;
    /**
     * GUID used to identify the Account.
     */
    id?: string;
    /**
     * the current status of the feed connection
     */
    status?: FeedConnectionStatusEnum;
}
