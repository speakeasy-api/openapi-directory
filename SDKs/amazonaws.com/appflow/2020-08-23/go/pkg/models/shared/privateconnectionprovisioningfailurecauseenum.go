// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PrivateConnectionProvisioningFailureCauseEnum string

const (
	PrivateConnectionProvisioningFailureCauseEnumConnectorAuthentication PrivateConnectionProvisioningFailureCauseEnum = "CONNECTOR_AUTHENTICATION"
	PrivateConnectionProvisioningFailureCauseEnumConnectorServer         PrivateConnectionProvisioningFailureCauseEnum = "CONNECTOR_SERVER"
	PrivateConnectionProvisioningFailureCauseEnumInternalServer          PrivateConnectionProvisioningFailureCauseEnum = "INTERNAL_SERVER"
	PrivateConnectionProvisioningFailureCauseEnumAccessDenied            PrivateConnectionProvisioningFailureCauseEnum = "ACCESS_DENIED"
	PrivateConnectionProvisioningFailureCauseEnumValidation              PrivateConnectionProvisioningFailureCauseEnum = "VALIDATION"
)

func (e PrivateConnectionProvisioningFailureCauseEnum) ToPointer() *PrivateConnectionProvisioningFailureCauseEnum {
	return &e
}

func (e *PrivateConnectionProvisioningFailureCauseEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONNECTOR_AUTHENTICATION":
		fallthrough
	case "CONNECTOR_SERVER":
		fallthrough
	case "INTERNAL_SERVER":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "VALIDATION":
		*e = PrivateConnectionProvisioningFailureCauseEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateConnectionProvisioningFailureCauseEnum: %v", v)
	}
}
