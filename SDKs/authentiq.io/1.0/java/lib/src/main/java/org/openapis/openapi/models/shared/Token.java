/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Token - Successful token response
 * 
 */
public class Token {
    /**
     * The access token issued by the authorization server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_token")
    public String accessToken;

    public Token withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * The time the access token will expire in seconds since epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_at")
    public Long expiresAt;

    public Token withExpiresAt(Long expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }
    
    /**
     * The lifetime in seconds of the access token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_in")
    public Integer expiresIn;

    public Token withExpiresIn(Integer expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }
    
    /**
     * ID Token value associated with the authenticated session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_token")
    public String idToken;

    public Token withIdToken(String idToken) {
        this.idToken = idToken;
        return this;
    }
    
    /**
     * The refresh token issued to the client, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refresh_token")
    public String refreshToken;

    public Token withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    /**
     * The scope of the granted tokens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;

    public Token withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    @JsonProperty("token_type")
    public String tokenType;

    public Token withTokenType(String tokenType) {
        this.tokenType = tokenType;
        return this;
    }
    
    public Token(@JsonProperty("token_type") String tokenType) {
        this.tokenType = tokenType;
  }
}
