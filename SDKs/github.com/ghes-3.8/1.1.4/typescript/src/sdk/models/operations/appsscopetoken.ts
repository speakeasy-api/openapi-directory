/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class AppsScopeTokenRequestBody extends SpeakeasyBase {
  /**
   * The access token used to authenticate to the GitHub API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access_token" })
  accessToken: string;

  /**
   * The permissions granted to the user-to-server access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => shared.AppPermissions)
  permissions?: shared.AppPermissions;

  /**
   * The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repositories" })
  repositories?: string[];

  /**
   * The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_ids" })
  repositoryIds?: number[];

  /**
   * The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target" })
  target?: string;

  /**
   * The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_id" })
  targetId?: number;
}

export class AppsScopeTokenRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: AppsScopeTokenRequestBody;

  /**
   * The client ID of the GitHub app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=client_id",
  })
  clientId: string;
}

export class AppsScopeTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  authorization?: shared.Authorization;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
