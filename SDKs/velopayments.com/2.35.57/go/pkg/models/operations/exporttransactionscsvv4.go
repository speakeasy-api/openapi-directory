// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/types"
)

// ExportTransactionsCsvv4IncludeEnum - <p>Mode to determine whether to include other Payor's data in the results.</p>
// <p>May only be used if payorId is specified.</p>
// <p>Can be omitted or set to 'payorOnly' or 'payorAndDescendants'.</p>
// <p>payorOnly: Only include results for the specified Payor. This is the default if 'include' is omitted.</p>
// <p>payorAndDescendants: Aggregate results for all descendant Payors of the specified Payor. Should only be used if the Payor with the specified payorId has at least one child Payor.</p>
// <p>Note when a Payor requests the report and include=payorAndDescendants is used, the following additional columns are included in the CSV: Payor Name, Payor Id</p>
type ExportTransactionsCsvv4IncludeEnum string

const (
	ExportTransactionsCsvv4IncludeEnumPayorOnly           ExportTransactionsCsvv4IncludeEnum = "payorOnly"
	ExportTransactionsCsvv4IncludeEnumPayorAndDescendants ExportTransactionsCsvv4IncludeEnum = "payorAndDescendants"
)

func (e ExportTransactionsCsvv4IncludeEnum) ToPointer() *ExportTransactionsCsvv4IncludeEnum {
	return &e
}

func (e *ExportTransactionsCsvv4IncludeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "payorOnly":
		fallthrough
	case "payorAndDescendants":
		*e = ExportTransactionsCsvv4IncludeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportTransactionsCsvv4IncludeEnum: %v", v)
	}
}

type ExportTransactionsCsvv4Request struct {
	// End date, inclusive. Format is YYYY-MM-DD
	EndDate *types.Date `queryParam:"style=form,explode=true,name=endDate"`
	// <p>Mode to determine whether to include other Payor's data in the results.</p>
	// <p>May only be used if payorId is specified.</p>
	// <p>Can be omitted or set to 'payorOnly' or 'payorAndDescendants'.</p>
	// <p>payorOnly: Only include results for the specified Payor. This is the default if 'include' is omitted.</p>
	// <p>payorAndDescendants: Aggregate results for all descendant Payors of the specified Payor. Should only be used if the Payor with the specified payorId has at least one child Payor.</p>
	// <p>Note when a Payor requests the report and include=payorAndDescendants is used, the following additional columns are included in the CSV: Payor Name, Payor Id</p>
	//
	Include *ExportTransactionsCsvv4IncludeEnum `queryParam:"style=form,explode=true,name=include"`
	// <p>The Payor ID for whom you wish to run the report.</p>
	// <p>For a Payor requesting the report, this could be their exact Payor, or it could be a child/descendant Payor.</p>
	//
	PayorID *string `queryParam:"style=form,explode=true,name=payorId"`
	// Start date, inclusive. Format is YYYY-MM-DD
	StartDate *types.Date `queryParam:"style=form,explode=true,name=startDate"`
}

type ExportTransactionsCsvv4Response struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
