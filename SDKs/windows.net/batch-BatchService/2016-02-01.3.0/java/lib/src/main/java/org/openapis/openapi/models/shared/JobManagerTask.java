/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobManagerTask - Specifies details of a Job Manager task.
 */
public class JobManagerTask {
    /**
     * The command line of the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandLine")
    public String commandLine;

    public JobManagerTask withCommandLine(String commandLine) {
        this.commandLine = commandLine;
        return this;
    }
    
    /**
     * Constraints to apply to the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("constraints")
    public TaskConstraints constraints;

    public JobManagerTask withConstraints(TaskConstraints constraints) {
        this.constraints = constraints;
        return this;
    }
    
    /**
     * The display name of the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public JobManagerTask withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A list of environment variable settings for the Job Manager task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentSettings")
    public EnvironmentSetting[] environmentSettings;

    public JobManagerTask withEnvironmentSettings(EnvironmentSetting[] environmentSettings) {
        this.environmentSettings = environmentSettings;
        return this;
    }
    
    /**
     * A string that uniquely identifies the Job Manager task. A GUID is recommended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public JobManagerTask withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Whether completion of the Job Manager task signifies completion of the entire job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("killJobOnCompletion")
    public Boolean killJobOnCompletion;

    public JobManagerTask withKillJobOnCompletion(Boolean killJobOnCompletion) {
        this.killJobOnCompletion = killJobOnCompletion;
        return this;
    }
    
    /**
     * A list of files that the Batch service will download to the compute node before running the command line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceFiles")
    public ResourceFile[] resourceFiles;

    public JobManagerTask withResourceFiles(ResourceFile[] resourceFiles) {
        this.resourceFiles = resourceFiles;
        return this;
    }
    
    /**
     * Whether to run the Job Manager task in elevated mode. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runElevated")
    public Boolean runElevated;

    public JobManagerTask withRunElevated(Boolean runElevated) {
        this.runElevated = runElevated;
        return this;
    }
    
    /**
     * Whether the Job Manager task requires exclusive use of the compute node where it runs. If true, no other tasks will run on the same compute node for as long as the Job Manager is running. If false, other tasks can run simultaneously with the Job Manager on a compute node. (The Job Manager task counts normally against the node's concurrent task limit, so this is only relevant if the node allows multiple concurrent tasks.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runExclusive")
    public Boolean runExclusive;

    public JobManagerTask withRunExclusive(Boolean runExclusive) {
        this.runExclusive = runExclusive;
        return this;
    }
    
    public JobManagerTask(){}
}
