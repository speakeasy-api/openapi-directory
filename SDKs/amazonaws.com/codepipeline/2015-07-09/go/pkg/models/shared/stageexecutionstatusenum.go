// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StageExecutionStatusEnum string

const (
	StageExecutionStatusEnumCancelled  StageExecutionStatusEnum = "Cancelled"
	StageExecutionStatusEnumInProgress StageExecutionStatusEnum = "InProgress"
	StageExecutionStatusEnumFailed     StageExecutionStatusEnum = "Failed"
	StageExecutionStatusEnumStopped    StageExecutionStatusEnum = "Stopped"
	StageExecutionStatusEnumStopping   StageExecutionStatusEnum = "Stopping"
	StageExecutionStatusEnumSucceeded  StageExecutionStatusEnum = "Succeeded"
)

func (e *StageExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Cancelled":
		fallthrough
	case "InProgress":
		fallthrough
	case "Failed":
		fallthrough
	case "Stopped":
		fallthrough
	case "Stopping":
		fallthrough
	case "Succeeded":
		*e = StageExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StageExecutionStatusEnum: %s", s)
	}
}
