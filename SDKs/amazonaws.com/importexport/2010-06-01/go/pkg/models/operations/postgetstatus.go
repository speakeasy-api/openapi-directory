// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetStatusActionEnum
type POSTGetStatusActionEnum string

const (
	POSTGetStatusActionEnumGetStatus POSTGetStatusActionEnum = "GetStatus"
)

func (e *POSTGetStatusActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetStatus":
		*e = POSTGetStatusActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetStatusActionEnum: %s", s)
	}
}

// POSTGetStatusOperationEnum
type POSTGetStatusOperationEnum string

const (
	POSTGetStatusOperationEnumGetStatus POSTGetStatusOperationEnum = "GetStatus"
)

func (e *POSTGetStatusOperationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetStatus":
		*e = POSTGetStatusOperationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetStatusOperationEnum: %s", s)
	}
}

// POSTGetStatusVersionEnum
type POSTGetStatusVersionEnum string

const (
	POSTGetStatusVersionEnumTwoThousandAndTen0601 POSTGetStatusVersionEnum = "2010-06-01"
)

func (e *POSTGetStatusVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-06-01":
		*e = POSTGetStatusVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetStatusVersionEnum: %s", s)
	}
}

type POSTGetStatusRequest struct {
	AWSAccessKeyID   string                     `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action           POSTGetStatusActionEnum    `queryParam:"style=form,explode=true,name=Action"`
	Operation        POSTGetStatusOperationEnum `queryParam:"style=form,explode=true,name=Operation"`
	RequestBody      []byte                     `request:"mediaType=text/xml"`
	Signature        string                     `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                     `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                     `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                     `queryParam:"style=form,explode=true,name=Timestamp"`
	Version          POSTGetStatusVersionEnum   `queryParam:"style=form,explode=true,name=Version"`
}

type POSTGetStatusResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
