"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import alt_enum as shared_alt_enum
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class AndroidpublisherEditsImagesDeleteSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    oauth2c: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class AndroidpublisherEditsImagesDeleteImageTypeEnum(str, Enum):
    FEATURE_GRAPHIC = 'featureGraphic'
    ICON = 'icon'
    PHONE_SCREENSHOTS = 'phoneScreenshots'
    PROMO_GRAPHIC = 'promoGraphic'
    SEVEN_INCH_SCREENSHOTS = 'sevenInchScreenshots'
    TEN_INCH_SCREENSHOTS = 'tenInchScreenshots'
    TV_BANNER = 'tvBanner'
    TV_SCREENSHOTS = 'tvScreenshots'
    WEAR_SCREENSHOTS = 'wearScreenshots'


@dataclasses.dataclass
class AndroidpublisherEditsImagesDeleteRequest:
    
    edit_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'editId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier for this edit."""  
    image_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'imageId', 'style': 'simple', 'explode': False }})
    r"""Unique identifier an image within the set of images attached to this edit."""  
    image_type: AndroidpublisherEditsImagesDeleteImageTypeEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'imageType', 'style': 'simple', 'explode': False }})  
    language: str = dataclasses.field(metadata={'path_param': { 'field_name': 'language', 'style': 'simple', 'explode': False }})
    r"""The language code (a BCP-47 language tag) of the localized listing whose images are to read or modified. For example, to select Austrian German, pass \\"de-AT\\"."""  
    package_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'packageName', 'style': 'simple', 'explode': False }})
    r"""Unique identifier for the Android app that is being updated; for example, \\"com.spiffygame\\"."""  
    alt: Optional[shared_alt_enum.AltEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'alt', 'style': 'form', 'explode': True }})
    r"""Data format for the response."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Selector specifying which fields to include in a partial response."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."""  
    oauth_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'oauth_token', 'style': 'form', 'explode': True }})
    r"""OAuth 2.0 token for the current user."""  
    pretty_print: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'prettyPrint', 'style': 'form', 'explode': True }})
    r"""Returns response with indentations and line breaks."""  
    quota_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'quotaUser', 'style': 'form', 'explode': True }})
    r"""An opaque string that represents a user for quota purposes. Must not exceed 40 characters."""  
    user_ip: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'userIp', 'style': 'form', 'explode': True }})
    r"""Deprecated. Please use quotaUser instead."""  
    

@dataclasses.dataclass
class AndroidpublisherEditsImagesDeleteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    