/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The Nexmo product or products that you access with this application. Currently `voice` and `messages` application types are supported.
 */
export enum CreateApplicationRequestBodyTypeEnum {
  Voice = "voice",
  Messages = "messages",
}

export class CreateApplicationRequestBody extends SpeakeasyBase {
  /**
   * The HTTP method used to make the request to `answer_url`. The default value is `GET`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answer_method" })
  answerMethod?: string;

  /**
   * The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to `answer_url`. Required for inbound calls only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answer_url" })
  answerUrl?: string;

  /**
   * You can find your API key in your [account overview](https://dashboard.nexmo.com/account-overview)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_key" })
  apiKey: string;

  /**
   * You can find your API secret in your [account overview](https://dashboard.nexmo.com/account-overview)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_secret" })
  apiSecret: string;

  /**
   * The HTTP method used to send event information to `event_url`. The default value is `POST`. For `voice` type applications only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_method" })
  eventMethod?: string;

  /**
   * Nexmo sends event information asynchronously to this URL when status changes for `voice` applications. Always required for `voice` applications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_url" })
  eventUrl?: string;

  /**
   * The HTTP method used to send event information to `inbound_url`. The default value is `POST`. For `messages` type applications only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_method" })
  inboundMethod?: string;

  /**
   * Nexmo sends a request to this URL when an inbound message is received. Required for `messages` type applications only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_url" })
  inboundUrl?: string;

  /**
   * The name of your application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The HTTP method used to send event information to `status_url`. The default value is `POST`. For `messages` type applications only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_method" })
  statusMethod?: string;

  /**
   * Nexmo sends event information asynchronously to this URL when status changes. Required for `messages` type applications only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_url" })
  statusUrl?: string;

  /**
   * The Nexmo product or products that you access with this application. Currently `voice` and `messages` application types are supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CreateApplicationRequestBodyTypeEnum;
}

export class CreateApplicationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  applicationCreated?: shared.ApplicationCreated;
}
