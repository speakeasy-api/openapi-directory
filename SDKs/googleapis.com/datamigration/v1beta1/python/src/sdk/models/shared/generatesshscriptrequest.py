"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import vmcreationconfig as shared_vmcreationconfig
from ..shared import vmselectionconfig as shared_vmselectionconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GenerateSSHScriptRequest:
    r"""Request message for 'GenerateSshScript' request."""
    
    vm: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vm'), 'exclude': lambda f: f is None }})
    r"""Required. Bastion VM Instance name to use or to create."""  
    vm_creation_config: Optional[shared_vmcreationconfig.VMCreationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmCreationConfig'), 'exclude': lambda f: f is None }})
    r"""VM creation configuration message"""  
    vm_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmPort'), 'exclude': lambda f: f is None }})
    r"""The port that will be open on the bastion host"""  
    vm_selection_config: Optional[shared_vmselectionconfig.VMSelectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmSelectionConfig'), 'exclude': lambda f: f is None }})
    r"""VM selection configuration message"""  
    