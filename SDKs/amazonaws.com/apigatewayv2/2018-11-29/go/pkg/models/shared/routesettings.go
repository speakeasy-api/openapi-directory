// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RouteSettingsLoggingLevelEnum - Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.
type RouteSettingsLoggingLevelEnum string

const (
	RouteSettingsLoggingLevelEnumError RouteSettingsLoggingLevelEnum = "ERROR"
	RouteSettingsLoggingLevelEnumInfo  RouteSettingsLoggingLevelEnum = "INFO"
	RouteSettingsLoggingLevelEnumOff   RouteSettingsLoggingLevelEnum = "OFF"
)

func (e *RouteSettingsLoggingLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ERROR":
		fallthrough
	case "INFO":
		fallthrough
	case "OFF":
		*e = RouteSettingsLoggingLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RouteSettingsLoggingLevelEnum: %s", s)
	}
}

// RouteSettings - Represents a collection of route settings.
type RouteSettings struct {
	DataTraceEnabled       *bool                          `json:"DataTraceEnabled,omitempty"`
	DetailedMetricsEnabled *bool                          `json:"DetailedMetricsEnabled,omitempty"`
	LoggingLevel           *RouteSettingsLoggingLevelEnum `json:"LoggingLevel,omitempty"`
	ThrottlingBurstLimit   *int64                         `json:"ThrottlingBurstLimit,omitempty"`
	ThrottlingRateLimit    *float64                       `json:"ThrottlingRateLimit,omitempty"`
}
