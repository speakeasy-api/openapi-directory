"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionSummary = exports.TransactionSummaryFlagColorEnum = exports.TransactionSummaryDebtTransactionTypeEnum = exports.TransactionSummaryClearedEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The cleared status of the transaction
 */
var TransactionSummaryClearedEnum;
(function (TransactionSummaryClearedEnum) {
    TransactionSummaryClearedEnum["Cleared"] = "cleared";
    TransactionSummaryClearedEnum["Uncleared"] = "uncleared";
    TransactionSummaryClearedEnum["Reconciled"] = "reconciled";
})(TransactionSummaryClearedEnum = exports.TransactionSummaryClearedEnum || (exports.TransactionSummaryClearedEnum = {}));
/**
 * If the transaction is a debt/loan account transaction, the type of transaction
 */
var TransactionSummaryDebtTransactionTypeEnum;
(function (TransactionSummaryDebtTransactionTypeEnum) {
    TransactionSummaryDebtTransactionTypeEnum["Payment"] = "payment";
    TransactionSummaryDebtTransactionTypeEnum["Refund"] = "refund";
    TransactionSummaryDebtTransactionTypeEnum["Fee"] = "fee";
    TransactionSummaryDebtTransactionTypeEnum["Interest"] = "interest";
    TransactionSummaryDebtTransactionTypeEnum["Escrow"] = "escrow";
    TransactionSummaryDebtTransactionTypeEnum["BalancedAdjustment"] = "balancedAdjustment";
    TransactionSummaryDebtTransactionTypeEnum["Credit"] = "credit";
    TransactionSummaryDebtTransactionTypeEnum["Charge"] = "charge";
    TransactionSummaryDebtTransactionTypeEnum["Null"] = "null";
})(TransactionSummaryDebtTransactionTypeEnum = exports.TransactionSummaryDebtTransactionTypeEnum || (exports.TransactionSummaryDebtTransactionTypeEnum = {}));
/**
 * The transaction flag
 */
var TransactionSummaryFlagColorEnum;
(function (TransactionSummaryFlagColorEnum) {
    TransactionSummaryFlagColorEnum["Red"] = "red";
    TransactionSummaryFlagColorEnum["Orange"] = "orange";
    TransactionSummaryFlagColorEnum["Yellow"] = "yellow";
    TransactionSummaryFlagColorEnum["Green"] = "green";
    TransactionSummaryFlagColorEnum["Blue"] = "blue";
    TransactionSummaryFlagColorEnum["Purple"] = "purple";
    TransactionSummaryFlagColorEnum["Null"] = "null";
})(TransactionSummaryFlagColorEnum = exports.TransactionSummaryFlagColorEnum || (exports.TransactionSummaryFlagColorEnum = {}));
var TransactionSummary = /** @class */ (function (_super) {
    __extends(TransactionSummary, _super);
    function TransactionSummary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "account_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], TransactionSummary.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approved" }),
        __metadata("design:type", Boolean)
    ], TransactionSummary.prototype, "approved", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "categoryId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cleared" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "cleared", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "date" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TransactionSummary.prototype, "date", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "debt_transaction_type" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "debtTransactionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deleted" }),
        __metadata("design:type", Boolean)
    ], TransactionSummary.prototype, "deleted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "flag_color" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "flagColor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "import_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "importId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "import_payee_name" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "importPayeeName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "import_payee_name_original" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "importPayeeNameOriginal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "matched_transaction_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "matchedTransactionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memo" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "memo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payee_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "payeeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_account_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "transferAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transfer_transaction_id" }),
        __metadata("design:type", String)
    ], TransactionSummary.prototype, "transferTransactionId", void 0);
    return TransactionSummary;
}(utils_1.SpeakeasyBase));
exports.TransactionSummary = TransactionSummary;
