/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2StoredInfoTypeVersion - Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state.
 */
public class GooglePrivacyDlpV2StoredInfoTypeVersion {
    /**
     * Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config")
    public GooglePrivacyDlpV2StoredInfoTypeConfig config;

    public GooglePrivacyDlpV2StoredInfoTypeVersion withConfig(GooglePrivacyDlpV2StoredInfoTypeConfig config) {
        this.config = config;
        return this;
    }
    
    /**
     * Create timestamp of the version. Read-only, determined by the system when the version is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public GooglePrivacyDlpV2StoredInfoTypeVersion withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    public GooglePrivacyDlpV2Error[] errors;

    public GooglePrivacyDlpV2StoredInfoTypeVersion withErrors(GooglePrivacyDlpV2Error[] errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * Stored info type version state. Read-only, updated by the system during dictionary creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum state;

    public GooglePrivacyDlpV2StoredInfoTypeVersion withState(GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Statistics for a StoredInfoType.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stats")
    public GooglePrivacyDlpV2StoredInfoTypeStats stats;

    public GooglePrivacyDlpV2StoredInfoTypeVersion withStats(GooglePrivacyDlpV2StoredInfoTypeStats stats) {
        this.stats = stats;
        return this;
    }
    
    public GooglePrivacyDlpV2StoredInfoTypeVersion(){}
}
