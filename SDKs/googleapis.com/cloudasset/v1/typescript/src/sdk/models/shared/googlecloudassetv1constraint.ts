/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudAssetV1ListConstraint } from "./googlecloudassetv1listconstraint";
import { Expose, Type } from "class-transformer";

/**
 * The evaluation behavior of this constraint in the absence of 'Policy'.
 */
export enum GoogleCloudAssetV1ConstraintConstraintDefaultEnum {
  ConstraintDefaultUnspecified = "CONSTRAINT_DEFAULT_UNSPECIFIED",
  Allow = "ALLOW",
  Deny = "DENY",
}

/**
 * The definition of a constraint.
 */
export class GoogleCloudAssetV1Constraint extends SpeakeasyBase {
  /**
   * A `Constraint` that is either enforced or not. For example a constraint `constraints/compute.disableSerialPortAccess`. If it is enforced on a VM instance, serial port connections will not be opened to that instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "booleanConstraint" })
  booleanConstraint?: Record<string, any>;

  /**
   * The evaluation behavior of this constraint in the absence of 'Policy'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "constraintDefault" })
  constraintDefault?: GoogleCloudAssetV1ConstraintConstraintDefaultEnum;

  /**
   * Detailed description of what this `Constraint` controls as well as how and where it is enforced.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The human readable name of the constraint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * A `Constraint` that allows or disallows a list of string values, which are configured by an organization's policy administrator with a `Policy`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listConstraint" })
  @Type(() => GoogleCloudAssetV1ListConstraint)
  listConstraint?: GoogleCloudAssetV1ListConstraint;

  /**
   * The unique name of the constraint. Format of the name should be * `constraints/{constraint_name}` For example, `constraints/compute.disableSerialPortAccess`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
