"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import buildconfig as shared_buildconfig
from ..shared import eventtrigger as shared_eventtrigger
from ..shared import googlecloudfunctionsv2betastatemessage as shared_googlecloudfunctionsv2betastatemessage
from ..shared import serviceconfig as shared_serviceconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FunctionEnvironmentEnum(str, Enum):
    r"""Describe whether the function is 1st Gen or 2nd Gen."""
    ENVIRONMENT_UNSPECIFIED = 'ENVIRONMENT_UNSPECIFIED'
    GEN_1 = 'GEN_1'
    GEN_2 = 'GEN_2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FunctionInput:
    r"""Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations."""
    
    build_config: Optional[shared_buildconfig.BuildConfigInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildConfig'), 'exclude': lambda f: f is None }})
    r"""Describes the Build step of the function that builds a container from the given source."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""User-provided description of a function."""  
    environment: Optional[FunctionEnvironmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""Describe whether the function is 1st Gen or 2nd Gen."""  
    event_trigger: Optional[shared_eventtrigger.EventTriggerInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTrigger'), 'exclude': lambda f: f is None }})
    r"""Describes EventTrigger, used to request events to be sent from another service."""  
    kms_key_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsKeyName'), 'exclude': lambda f: f is None }})
    r"""Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels associated with this Cloud Function."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`"""  
    service_config: Optional[shared_serviceconfig.ServiceConfigInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceConfig'), 'exclude': lambda f: f is None }})
    r"""Describes the Service being deployed. Currently Supported : Cloud Run (fully managed). Next tag: 23"""  
    
class FunctionStateEnum(str, Enum):
    r"""Output only. State of the function."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    FAILED = 'FAILED'
    DEPLOYING = 'DEPLOYING'
    DELETING = 'DELETING'
    UNKNOWN = 'UNKNOWN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Function:
    r"""Describes a Cloud Function that contains user computation executed in response to an event. It encapsulates function and trigger configurations."""
    
    build_config: Optional[shared_buildconfig.BuildConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildConfig'), 'exclude': lambda f: f is None }})
    r"""Describes the Build step of the function that builds a container from the given source."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""User-provided description of a function."""  
    environment: Optional[FunctionEnvironmentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""Describe whether the function is 1st Gen or 2nd Gen."""  
    event_trigger: Optional[shared_eventtrigger.EventTrigger] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTrigger'), 'exclude': lambda f: f is None }})
    r"""Describes EventTrigger, used to request events to be sent from another service."""  
    kms_key_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kmsKeyName'), 'exclude': lambda f: f is None }})
    r"""Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources. It must match the pattern `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels associated with this Cloud Function."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`"""  
    service_config: Optional[shared_serviceconfig.ServiceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceConfig'), 'exclude': lambda f: f is None }})
    r"""Describes the Service being deployed. Currently Supported : Cloud Run (fully managed). Next tag: 23"""  
    state: Optional[FunctionStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. State of the function."""  
    state_messages: Optional[list[shared_googlecloudfunctionsv2betastatemessage.GoogleCloudFunctionsV2betaStateMessage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateMessages'), 'exclude': lambda f: f is None }})
    r"""Output only. State Messages for this Cloud Function."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The last update timestamp of a Cloud Function."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Output only. The deployed url for the function."""  
    