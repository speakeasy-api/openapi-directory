// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyDBSnapshotAttributeActionEnum
type GETModifyDBSnapshotAttributeActionEnum string

const (
	GETModifyDBSnapshotAttributeActionEnumModifyDbSnapshotAttribute GETModifyDBSnapshotAttributeActionEnum = "ModifyDBSnapshotAttribute"
)

func (e *GETModifyDBSnapshotAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyDBSnapshotAttribute":
		*e = GETModifyDBSnapshotAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyDBSnapshotAttributeActionEnum: %s", s)
	}
}

// GETModifyDBSnapshotAttributeVersionEnum
type GETModifyDBSnapshotAttributeVersionEnum string

const (
	GETModifyDBSnapshotAttributeVersionEnumTwoThousandAndFourteen1031 GETModifyDBSnapshotAttributeVersionEnum = "2014-10-31"
)

func (e *GETModifyDBSnapshotAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETModifyDBSnapshotAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyDBSnapshotAttributeVersionEnum: %s", s)
	}
}

type GETModifyDBSnapshotAttributeRequest struct {
	Action GETModifyDBSnapshotAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the DB snapshot attribute to modify.</p> <p>To manage authorization for other Amazon Web Services accounts to copy or restore a manual DB snapshot, set this value to <code>restore</code>.</p> <note> <p>To view the list of attributes available to modify, use the <a>DescribeDBSnapshotAttributes</a> API operation.</p> </note>
	AttributeName string `queryParam:"style=form,explode=true,name=AttributeName"`
	// The identifier for the DB snapshot to modify the attributes for.
	DBSnapshotIdentifier string `queryParam:"style=form,explode=true,name=DBSnapshotIdentifier"`
	// <p>A list of DB snapshot attributes to add to the attribute specified by <code>AttributeName</code>.</p> <p>To authorize other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account IDs, or <code>all</code> to make the manual DB snapshot restorable by any Amazon Web Services account. Do not add the <code>all</code> value for any manual DB snapshots that contain private information that you don't want available to all Amazon Web Services accounts.</p>
	ValuesToAdd []string `queryParam:"style=form,explode=true,name=ValuesToAdd"`
	// <p>A list of DB snapshot attributes to remove from the attribute specified by <code>AttributeName</code>.</p> <p>To remove authorization for other Amazon Web Services accounts to copy or restore a manual snapshot, set this list to include one or more Amazon Web Services account identifiers, or <code>all</code> to remove authorization for any Amazon Web Services account to copy or restore the DB snapshot. If you specify <code>all</code>, an Amazon Web Services account whose account ID is explicitly added to the <code>restore</code> attribute can still copy or restore the manual DB snapshot.</p>
	ValuesToRemove    []string                                `queryParam:"style=form,explode=true,name=ValuesToRemove"`
	Version           GETModifyDBSnapshotAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyDBSnapshotAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
