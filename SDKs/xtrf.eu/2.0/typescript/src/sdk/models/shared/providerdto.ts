/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressDTO } from "./addressdto";
import { CompetenciesDTO } from "./competenciesdto";
import { ContactDTO } from "./contactdto";
import { CustomFieldDTO } from "./customfielddto";
import { ProviderPersonDTO } from "./providerpersondto";
import { Expose, Type } from "class-transformer";

export enum ProviderDTOStatusEnum {
  Active = "ACTIVE",
  Inactive = "INACTIVE",
  WaitingForApproval = "WAITING_FOR_APPROVAL",
  Rejected = "REJECTED",
  TooExpensive = "TOO_EXPENSIVE",
  IncompleteData = "INCOMPLETE_DATA",
  Potential = "POTENTIAL",
  NotConfirmed = "NOT_CONFIRMED",
}

/**
 * Success
 */
export class ProviderDTO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billingAddress" })
  @Type(() => AddressDTO)
  billingAddress?: AddressDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "branchId" })
  branchId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "competencies" })
  @Type(() => CompetenciesDTO)
  competencies?: CompetenciesDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  @Type(() => ContactDTO)
  contact?: ContactDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "correspondenceAddress" })
  @Type(() => AddressDTO)
  correspondenceAddress?: AddressDTO;

  @SpeakeasyMetadata({ elemType: CustomFieldDTO })
  @Expose({ name: "customFields" })
  @Type(() => CustomFieldDTO)
  customFields?: CustomFieldDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "fullName" })
  fullName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "idNumber" })
  idNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "leadSourceId" })
  leadSourceId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  @SpeakeasyMetadata({ elemType: ProviderPersonDTO })
  @Expose({ name: "persons" })
  @Type(() => ProviderPersonDTO)
  persons?: ProviderPersonDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ProviderDTOStatusEnum;
}
