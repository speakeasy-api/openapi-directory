// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NumberDetailsUpdateMessagesCallbackTypeEnum - <strong>DEPRECATED</strong> - We recommend that you use `app_id` instead.
//
// Specifies the Messages webhook type (always `app`) associated with this
// number and must be used with the `messagesCallbackValue` parameter.
type NumberDetailsUpdateMessagesCallbackTypeEnum string

const (
	NumberDetailsUpdateMessagesCallbackTypeEnumApp NumberDetailsUpdateMessagesCallbackTypeEnum = "app"
)

func (e *NumberDetailsUpdateMessagesCallbackTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "app":
		*e = NumberDetailsUpdateMessagesCallbackTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberDetailsUpdateMessagesCallbackTypeEnum: %s", s)
	}
}

// NumberDetailsUpdateVoiceCallbackTypeEnum - Specify whether inbound voice calls on your number are forwarded
// to a SIP or a telephone number.  This must be used with the
// `voiceCallbackValue` parameter. If set, `sip` or `tel` are
// prioritized over the Voice capability in your Application.
//
// *Note: The `app` value is deprecated and will be removed in future.*
type NumberDetailsUpdateVoiceCallbackTypeEnum string

const (
	NumberDetailsUpdateVoiceCallbackTypeEnumSip NumberDetailsUpdateVoiceCallbackTypeEnum = "sip"
	NumberDetailsUpdateVoiceCallbackTypeEnumTel NumberDetailsUpdateVoiceCallbackTypeEnum = "tel"
	NumberDetailsUpdateVoiceCallbackTypeEnumApp NumberDetailsUpdateVoiceCallbackTypeEnum = "app"
)

func (e *NumberDetailsUpdateVoiceCallbackTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "sip":
		fallthrough
	case "tel":
		fallthrough
	case "app":
		*e = NumberDetailsUpdateVoiceCallbackTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberDetailsUpdateVoiceCallbackTypeEnum: %s", s)
	}
}

// NumberDetailsUpdate - Number details
type NumberDetailsUpdate struct {
	// The Application that will handle inbound traffic to this number.
	AppID *string `form:"name=app_id"`
	// The two character country code in ISO 3166-1 alpha-2 format
	Country string `form:"name=country"`
	// <strong>DEPRECATED</strong> - We recommend that you use `app_id` instead.
	//
	// Specifies the Messages webhook type (always `app`) associated with this
	// number and must be used with the `messagesCallbackValue` parameter.
	//
	MessagesCallbackType *NumberDetailsUpdateMessagesCallbackTypeEnum `form:"name=messagesCallbackType"`
	// <strong>DEPRECATED</strong> - We recommend that you use `app_id` instead.
	//
	// Specifies the Application ID of your Messages application.
	// It must be used with the `messagesCallbackType` parameter.
	//
	MessagesCallbackValue *string `form:"name=messagesCallbackValue"`
	// An URL-encoded URI to the webhook endpoint that handles inbound messages. Your webhook endpoint must be active before you make this request. Vonage makes a `GET` request to the endpoint and checks that it returns a `200 OK` response. Set this parameter's value to an empty string to remove the webhook.
	MoHTTPURL *string `form:"name=moHttpUrl"`
	// The associated system type for your SMPP client
	MoSmppSysType *string `form:"name=moSmppSysType"`
	// An available inbound virtual number.
	Msisdn string `form:"name=msisdn"`
	// Specify whether inbound voice calls on your number are forwarded
	// to a SIP or a telephone number.  This must be used with the
	// `voiceCallbackValue` parameter. If set, `sip` or `tel` are
	// prioritized over the Voice capability in your Application.
	//
	// *Note: The `app` value is deprecated and will be removed in future.*
	//
	VoiceCallbackType *NumberDetailsUpdateVoiceCallbackTypeEnum `form:"name=voiceCallbackType"`
	// A SIP URI or telephone number. Must be used with the `voiceCallbackType` parameter.
	VoiceCallbackValue *string `form:"name=voiceCallbackValue"`
	// A webhook URI for Vonage to send a request to when a call ends
	VoiceStatusCallback *string `form:"name=voiceStatusCallback"`
}
