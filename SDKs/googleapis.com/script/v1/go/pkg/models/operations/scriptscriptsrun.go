// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ScriptScriptsRunSecurityOption1 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption10 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption11 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption12 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption2 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption3 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption4 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption5 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption6 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption7 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption8 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurityOption9 struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type ScriptScriptsRunSecurity struct {
	Option1  *ScriptScriptsRunSecurityOption1  `security:"option"`
	Option10 *ScriptScriptsRunSecurityOption10 `security:"option"`
	Option11 *ScriptScriptsRunSecurityOption11 `security:"option"`
	Option12 *ScriptScriptsRunSecurityOption12 `security:"option"`
	Option2  *ScriptScriptsRunSecurityOption2  `security:"option"`
	Option3  *ScriptScriptsRunSecurityOption3  `security:"option"`
	Option4  *ScriptScriptsRunSecurityOption4  `security:"option"`
	Option5  *ScriptScriptsRunSecurityOption5  `security:"option"`
	Option6  *ScriptScriptsRunSecurityOption6  `security:"option"`
	Option7  *ScriptScriptsRunSecurityOption7  `security:"option"`
	Option8  *ScriptScriptsRunSecurityOption8  `security:"option"`
	Option9  *ScriptScriptsRunSecurityOption9  `security:"option"`
}

type ScriptScriptsRunPathParams struct {
	// The script ID of the script to be executed. Find the script ID on the **Project settings** page under "IDs."
	ScriptID string `pathParam:"style=simple,explode=false,name=scriptId"`
}

type ScriptScriptsRunQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type ScriptScriptsRunRequest struct {
	PathParams  ScriptScriptsRunPathParams
	QueryParams ScriptScriptsRunQueryParams
	Request     *shared.ExecutionRequest `request:"mediaType=application/json"`
	Security    ScriptScriptsRunSecurity
}

type ScriptScriptsRunResponse struct {
	ContentType string
	// Successful response
	Operation   *shared.Operation
	StatusCode  int
	RawResponse *http.Response
}
