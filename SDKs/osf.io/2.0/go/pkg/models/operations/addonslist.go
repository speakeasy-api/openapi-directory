// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AddonsListAddonAttributesCategoriesEnum string

const (
	AddonsListAddonAttributesCategoriesEnumDocumentation AddonsListAddonAttributesCategoriesEnum = "documentation"
	AddonsListAddonAttributesCategoriesEnumStorage       AddonsListAddonAttributesCategoriesEnum = "storage"
	AddonsListAddonAttributesCategoriesEnumBibliography  AddonsListAddonAttributesCategoriesEnum = "bibliography"
	AddonsListAddonAttributesCategoriesEnumOther         AddonsListAddonAttributesCategoriesEnum = "other"
	AddonsListAddonAttributesCategoriesEnumSecurity      AddonsListAddonAttributesCategoriesEnum = "security"
	AddonsListAddonAttributesCategoriesEnumCitations     AddonsListAddonAttributesCategoriesEnum = "citations"
)

func (e *AddonsListAddonAttributesCategoriesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "documentation":
		fallthrough
	case "storage":
		fallthrough
	case "bibliography":
		fallthrough
	case "other":
		fallthrough
	case "security":
		fallthrough
	case "citations":
		*e = AddonsListAddonAttributesCategoriesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddonsListAddonAttributesCategoriesEnum: %s", s)
	}
}

// AddonsListAddonAttributes - The properties of the addon entity.
type AddonsListAddonAttributes struct {
	// List of categories this addon belongs to.
	Categories []AddonsListAddonAttributesCategoriesEnum
	// The description of the service provider.
	Description *string
	// The name of the third-party service provider.
	Name *string
	// The URL to the third-party service provider.
	URL *string
}

type AddonsListAddon struct {
	// The properties of the addon entity.
	Attributes *AddonsListAddonAttributes
	// The identifier of the addon entity.
	ID *string
	// The type identifier of the addon entity (`addons`).
	Type *string
}

type AddonsListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
