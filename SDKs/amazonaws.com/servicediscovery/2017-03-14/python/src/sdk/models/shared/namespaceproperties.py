"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dnsproperties as shared_dnsproperties
from ..shared import httpproperties as shared_httpproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NamespaceProperties:
    r"""A complex type that contains information that's specific to the namespace type."""
    
    dns_properties: Optional[shared_dnsproperties.DNSProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DnsProperties'), 'exclude': lambda f: f is None }})  
    http_properties: Optional[shared_httpproperties.HTTPProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpProperties'), 'exclude': lambda f: f is None }})  
    