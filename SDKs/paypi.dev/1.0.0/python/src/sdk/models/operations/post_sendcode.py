"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSendCodeRequestBody:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSendCode401ApplicationJSON:
    r"""Invalid API key"""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSendCode400ApplicationJSON:
    r"""Invalid or incorrectly formatted email given"""
    
    message: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostSendCode200ApplicationJSON:
    r"""Success - Email sent"""
    
    message: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class PostSendCodeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_send_code_200_application_json_object: Optional[PostSendCode200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success - Email sent"""  
    post_send_code_400_application_json_object: Optional[PostSendCode400ApplicationJSON] = dataclasses.field(default=None)
    r"""Invalid or incorrectly formatted email given"""  
    post_send_code_401_application_json_object: Optional[PostSendCode401ApplicationJSON] = dataclasses.field(default=None)
    r"""Invalid API key"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    