"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import streamprocessingstartselector as shared_streamprocessingstartselector
from ..shared import streamprocessingstopselector as shared_streamprocessingstopselector
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StartStreamProcessorRequest:
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    start_selector: Optional[shared_streamprocessingstartselector.StreamProcessingStartSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StartSelector'), 'exclude': lambda f: f is None }})  
    stop_selector: Optional[shared_streamprocessingstopselector.StreamProcessingStopSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StopSelector'), 'exclude': lambda f: f is None }})  
    