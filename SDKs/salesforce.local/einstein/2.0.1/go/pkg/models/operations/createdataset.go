// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDatasetSecurity struct {
	BearerToken shared.SchemeBearerToken `security:"scheme,type=http,subtype=bearer"`
}

// CreateDatasetRequestBodyTypeEnum - Type of dataset data
type CreateDatasetRequestBodyTypeEnum string

const (
	CreateDatasetRequestBodyTypeEnumImage           CreateDatasetRequestBodyTypeEnum = "image"
	CreateDatasetRequestBodyTypeEnumImageMultiLabel CreateDatasetRequestBodyTypeEnum = "image-multi-label"
)

func (e *CreateDatasetRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "image":
		fallthrough
	case "image-multi-label":
		*e = CreateDatasetRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDatasetRequestBodyTypeEnum: %s", s)
	}
}

type CreateDatasetRequestBody struct {
	// Optional comma-separated list of labels. If specified, creates the labels in the dataset. Maximum number of labels per dataset is 250.
	Labels *string `multipartForm:"name=labels"`
	// Name of the dataset. Maximum length is 180 characters.
	Name *string `multipartForm:"name=name"`
	// Type of dataset data
	Type *CreateDatasetRequestBodyTypeEnum `multipartForm:"name=type"`
}

type CreateDatasetRequest struct {
	Request  *CreateDatasetRequestBody `request:"mediaType=multipart/form-data"`
	Security CreateDatasetSecurity
}

type CreateDatasetResponse struct {
	ContentType string
	// Creation success
	Dataset     *shared.Dataset
	StatusCode  int
	RawResponse *http.Response
}
