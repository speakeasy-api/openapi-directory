"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2annotatedmessagepart as shared_googleclouddialogflowv2annotatedmessagepart
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2MessageAnnotation:
    r"""Represents the result of annotation for the message."""
    
    contain_entities: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containEntities'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the text message contains entities."""  
    parts: Optional[list[shared_googleclouddialogflowv2annotatedmessagepart.GoogleCloudDialogflowV2AnnotatedMessagePart]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parts'), 'exclude': lambda f: f is None }})
    r"""The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."""  
    