// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateKeyRequestCustomerMasterKeySpecEnum - <p>Instead, use the <code>KeySpec</code> parameter.</p> <p>The <code>KeySpec</code> and <code>CustomerMasterKeySpec</code> parameters work the same way. Only the names differ. We recommend that you use <code>KeySpec</code> parameter in your code. However, to avoid breaking changes, KMS supports both parameters.</p>This parameter has been deprecated. Instead, use the KeySpec parameter.
type CreateKeyRequestCustomerMasterKeySpecEnum string

const (
	CreateKeyRequestCustomerMasterKeySpecEnumRsa2048          CreateKeyRequestCustomerMasterKeySpecEnum = "RSA_2048"
	CreateKeyRequestCustomerMasterKeySpecEnumRsa3072          CreateKeyRequestCustomerMasterKeySpecEnum = "RSA_3072"
	CreateKeyRequestCustomerMasterKeySpecEnumRsa4096          CreateKeyRequestCustomerMasterKeySpecEnum = "RSA_4096"
	CreateKeyRequestCustomerMasterKeySpecEnumEccNistP256      CreateKeyRequestCustomerMasterKeySpecEnum = "ECC_NIST_P256"
	CreateKeyRequestCustomerMasterKeySpecEnumEccNistP384      CreateKeyRequestCustomerMasterKeySpecEnum = "ECC_NIST_P384"
	CreateKeyRequestCustomerMasterKeySpecEnumEccNistP521      CreateKeyRequestCustomerMasterKeySpecEnum = "ECC_NIST_P521"
	CreateKeyRequestCustomerMasterKeySpecEnumEccSecgP256K1    CreateKeyRequestCustomerMasterKeySpecEnum = "ECC_SECG_P256K1"
	CreateKeyRequestCustomerMasterKeySpecEnumSymmetricDefault CreateKeyRequestCustomerMasterKeySpecEnum = "SYMMETRIC_DEFAULT"
	CreateKeyRequestCustomerMasterKeySpecEnumHmac224          CreateKeyRequestCustomerMasterKeySpecEnum = "HMAC_224"
	CreateKeyRequestCustomerMasterKeySpecEnumHmac256          CreateKeyRequestCustomerMasterKeySpecEnum = "HMAC_256"
	CreateKeyRequestCustomerMasterKeySpecEnumHmac384          CreateKeyRequestCustomerMasterKeySpecEnum = "HMAC_384"
	CreateKeyRequestCustomerMasterKeySpecEnumHmac512          CreateKeyRequestCustomerMasterKeySpecEnum = "HMAC_512"
	CreateKeyRequestCustomerMasterKeySpecEnumSm2              CreateKeyRequestCustomerMasterKeySpecEnum = "SM2"
)

func (e *CreateKeyRequestCustomerMasterKeySpecEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RSA_2048":
		fallthrough
	case "RSA_3072":
		fallthrough
	case "RSA_4096":
		fallthrough
	case "ECC_NIST_P256":
		fallthrough
	case "ECC_NIST_P384":
		fallthrough
	case "ECC_NIST_P521":
		fallthrough
	case "ECC_SECG_P256K1":
		fallthrough
	case "SYMMETRIC_DEFAULT":
		fallthrough
	case "HMAC_224":
		fallthrough
	case "HMAC_256":
		fallthrough
	case "HMAC_384":
		fallthrough
	case "HMAC_512":
		fallthrough
	case "SM2":
		*e = CreateKeyRequestCustomerMasterKeySpecEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateKeyRequestCustomerMasterKeySpecEnum: %s", s)
	}
}

type CreateKeyRequest struct {
	BypassPolicyLockoutSafetyCheck *bool                                      `json:"BypassPolicyLockoutSafetyCheck,omitempty"`
	CustomKeyStoreID               *string                                    `json:"CustomKeyStoreId,omitempty"`
	CustomerMasterKeySpec          *CreateKeyRequestCustomerMasterKeySpecEnum `json:"CustomerMasterKeySpec,omitempty"`
	Description                    *string                                    `json:"Description,omitempty"`
	KeySpec                        *KeySpecEnum                               `json:"KeySpec,omitempty"`
	KeyUsage                       *KeyUsageTypeEnum                          `json:"KeyUsage,omitempty"`
	MultiRegion                    *bool                                      `json:"MultiRegion,omitempty"`
	Origin                         *OriginTypeEnum                            `json:"Origin,omitempty"`
	Policy                         *string                                    `json:"Policy,omitempty"`
	Tags                           []Tag                                      `json:"Tags,omitempty"`
	XksKeyID                       *string                                    `json:"XksKeyId,omitempty"`
}
