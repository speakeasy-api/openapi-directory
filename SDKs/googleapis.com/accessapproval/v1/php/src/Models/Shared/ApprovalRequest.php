<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ApprovalRequest - A request for the customer to approve access to a resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ApprovalRequest
{
    /**
     * A decision that has been made to approve access to a resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApproveDecision $approve
     */
	#[\JMS\Serializer\Annotation\SerializedName('approve')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ApproveDecision')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApproveDecision $approve = null;
    
    /**
     * A decision that has been made to dismiss an approval request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DismissDecision $dismiss
     */
	#[\JMS\Serializer\Annotation\SerializedName('dismiss')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DismissDecision')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DismissDecision $dismiss = null;
    
    /**
     * The resource name of the request. Format is "{projects|folders|organizations}/{id}/approvalRequests/{approval_request}".
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The time at which approval was requested.
     * 
     * @var ?string $requestTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestTime = null;
    
    /**
     * The requested expiration for the approval. If the request is approved, access will be granted from the time of approval until the expiration time.
     * 
     * @var ?string $requestedExpiration
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestedExpiration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestedExpiration = null;
    
    /**
     * Home office and physical location of the principal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccessLocations $requestedLocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestedLocations')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccessLocations')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccessLocations $requestedLocations = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('requestedReason')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccessReason')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccessReason $requestedReason = null;
    
    /**
     * The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a "full" resource name (e.g. "//library.googleapis.com/shelves/shelf1/books/book2") or a "relative" resource name (e.g. "shelves/shelf1/books/book2") as described in the resource name specification.
     * 
     * @var ?string $requestedResourceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestedResourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestedResourceName = null;
    
    /**
     * The properties associated with the resource of the request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResourceProperties $requestedResourceProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestedResourceProperties')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResourceProperties')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResourceProperties $requestedResourceProperties = null;
    
	public function __construct()
	{
		$this->approve = null;
		$this->dismiss = null;
		$this->name = null;
		$this->requestTime = null;
		$this->requestedExpiration = null;
		$this->requestedLocations = null;
		$this->requestedReason = null;
		$this->requestedResourceName = null;
		$this->requestedResourceProperties = null;
	}
}
