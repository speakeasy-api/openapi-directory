"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class JSONFileFormatCompressionEnum(str, Enum):
    r"""Compression of the loaded JSON file."""
    JSON_COMPRESSION_UNSPECIFIED = 'JSON_COMPRESSION_UNSPECIFIED'
    NO_COMPRESSION = 'NO_COMPRESSION'
    GZIP = 'GZIP'

class JSONFileFormatSchemaFileFormatEnum(str, Enum):
    r"""The schema file format along JSON data files."""
    SCHEMA_FILE_FORMAT_UNSPECIFIED = 'SCHEMA_FILE_FORMAT_UNSPECIFIED'
    NO_SCHEMA_FILE = 'NO_SCHEMA_FILE'
    AVRO_SCHEMA_FILE = 'AVRO_SCHEMA_FILE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JSONFileFormat:
    r"""JSON file format configuration."""
    
    compression: Optional[JSONFileFormatCompressionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compression'), 'exclude': lambda f: f is None }})
    r"""Compression of the loaded JSON file."""  
    schema_file_format: Optional[JSONFileFormatSchemaFileFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemaFileFormat'), 'exclude': lambda f: f is None }})
    r"""The schema file format along JSON data files."""  
    