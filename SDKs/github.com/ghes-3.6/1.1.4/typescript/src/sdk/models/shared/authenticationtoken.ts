/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Repository } from "./repository";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describe whether all repositories have been selected or there's a selection involved
 */
export enum AuthenticationTokenRepositorySelectionEnum {
  All = "all",
  Selected = "selected",
}

/**
 * Authentication Token
 */
export class AuthenticationToken extends SpeakeasyBase {
  /**
   * The time this token expires
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  permissions?: Record<string, any>;

  /**
   * The repositories this token has access to
   */
  @SpeakeasyMetadata({ elemType: Repository })
  @Expose({ name: "repositories" })
  @Type(() => Repository)
  repositories?: Repository[];

  /**
   * Describe whether all repositories have been selected or there's a selection involved
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_selection" })
  repositorySelection?: AuthenticationTokenRepositorySelectionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "single_file" })
  singleFile?: string;

  /**
   * The token used for authentication
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token: string;
}
