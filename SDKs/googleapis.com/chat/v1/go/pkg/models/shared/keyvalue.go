// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// KeyValueIconEnum - An enum value that will be replaced by the Chat API with the corresponding icon image.
type KeyValueIconEnum string

const (
	KeyValueIconEnumIconUnspecified        KeyValueIconEnum = "ICON_UNSPECIFIED"
	KeyValueIconEnumAirplane               KeyValueIconEnum = "AIRPLANE"
	KeyValueIconEnumBookmark               KeyValueIconEnum = "BOOKMARK"
	KeyValueIconEnumBus                    KeyValueIconEnum = "BUS"
	KeyValueIconEnumCar                    KeyValueIconEnum = "CAR"
	KeyValueIconEnumClock                  KeyValueIconEnum = "CLOCK"
	KeyValueIconEnumConfirmationNumberIcon KeyValueIconEnum = "CONFIRMATION_NUMBER_ICON"
	KeyValueIconEnumDollar                 KeyValueIconEnum = "DOLLAR"
	KeyValueIconEnumDescription            KeyValueIconEnum = "DESCRIPTION"
	KeyValueIconEnumEmail                  KeyValueIconEnum = "EMAIL"
	KeyValueIconEnumEventPerformer         KeyValueIconEnum = "EVENT_PERFORMER"
	KeyValueIconEnumEventSeat              KeyValueIconEnum = "EVENT_SEAT"
	KeyValueIconEnumFlightArrival          KeyValueIconEnum = "FLIGHT_ARRIVAL"
	KeyValueIconEnumFlightDeparture        KeyValueIconEnum = "FLIGHT_DEPARTURE"
	KeyValueIconEnumHotel                  KeyValueIconEnum = "HOTEL"
	KeyValueIconEnumHotelRoomType          KeyValueIconEnum = "HOTEL_ROOM_TYPE"
	KeyValueIconEnumInvite                 KeyValueIconEnum = "INVITE"
	KeyValueIconEnumMapPin                 KeyValueIconEnum = "MAP_PIN"
	KeyValueIconEnumMembership             KeyValueIconEnum = "MEMBERSHIP"
	KeyValueIconEnumMultiplePeople         KeyValueIconEnum = "MULTIPLE_PEOPLE"
	KeyValueIconEnumOffer                  KeyValueIconEnum = "OFFER"
	KeyValueIconEnumPerson                 KeyValueIconEnum = "PERSON"
	KeyValueIconEnumPhone                  KeyValueIconEnum = "PHONE"
	KeyValueIconEnumRestaurantIcon         KeyValueIconEnum = "RESTAURANT_ICON"
	KeyValueIconEnumShoppingCart           KeyValueIconEnum = "SHOPPING_CART"
	KeyValueIconEnumStar                   KeyValueIconEnum = "STAR"
	KeyValueIconEnumStore                  KeyValueIconEnum = "STORE"
	KeyValueIconEnumTicket                 KeyValueIconEnum = "TICKET"
	KeyValueIconEnumTrain                  KeyValueIconEnum = "TRAIN"
	KeyValueIconEnumVideoCamera            KeyValueIconEnum = "VIDEO_CAMERA"
	KeyValueIconEnumVideoPlay              KeyValueIconEnum = "VIDEO_PLAY"
)

func (e KeyValueIconEnum) ToPointer() *KeyValueIconEnum {
	return &e
}

func (e *KeyValueIconEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ICON_UNSPECIFIED":
		fallthrough
	case "AIRPLANE":
		fallthrough
	case "BOOKMARK":
		fallthrough
	case "BUS":
		fallthrough
	case "CAR":
		fallthrough
	case "CLOCK":
		fallthrough
	case "CONFIRMATION_NUMBER_ICON":
		fallthrough
	case "DOLLAR":
		fallthrough
	case "DESCRIPTION":
		fallthrough
	case "EMAIL":
		fallthrough
	case "EVENT_PERFORMER":
		fallthrough
	case "EVENT_SEAT":
		fallthrough
	case "FLIGHT_ARRIVAL":
		fallthrough
	case "FLIGHT_DEPARTURE":
		fallthrough
	case "HOTEL":
		fallthrough
	case "HOTEL_ROOM_TYPE":
		fallthrough
	case "INVITE":
		fallthrough
	case "MAP_PIN":
		fallthrough
	case "MEMBERSHIP":
		fallthrough
	case "MULTIPLE_PEOPLE":
		fallthrough
	case "OFFER":
		fallthrough
	case "PERSON":
		fallthrough
	case "PHONE":
		fallthrough
	case "RESTAURANT_ICON":
		fallthrough
	case "SHOPPING_CART":
		fallthrough
	case "STAR":
		fallthrough
	case "STORE":
		fallthrough
	case "TICKET":
		fallthrough
	case "TRAIN":
		fallthrough
	case "VIDEO_CAMERA":
		fallthrough
	case "VIDEO_PLAY":
		*e = KeyValueIconEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyValueIconEnum: %v", v)
	}
}

// KeyValue - A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button.
type KeyValue struct {
	// The text of the bottom label. Formatted text supported. For more information about formatting text, see Formatting text in Google Chat apps and Formatting text in Google Workspace Add-ons.
	BottomLabel *string `json:"bottomLabel,omitempty"`
	// A button. Can be a text button or an image button.
	Button *Button `json:"button,omitempty"`
	// The text of the content. Formatted text supported and always required. For more information about formatting text, see Formatting text in Google Chat apps and Formatting text in Google Workspace Add-ons.
	Content *string `json:"content,omitempty"`
	// If the content should be multiline.
	ContentMultiline *bool `json:"contentMultiline,omitempty"`
	// An enum value that will be replaced by the Chat API with the corresponding icon image.
	Icon *KeyValueIconEnum `json:"icon,omitempty"`
	// The icon specified by a URL.
	IconURL *string `json:"iconUrl,omitempty"`
	// An onclick action (e.g. open a link).
	OnClick *OnClick `json:"onClick,omitempty"`
	// The text of the top label. Formatted text supported. For more information about formatting text, see Formatting text in Google Chat apps and Formatting text in Google Workspace Add-ons.
	TopLabel *string `json:"topLabel,omitempty"`
}
