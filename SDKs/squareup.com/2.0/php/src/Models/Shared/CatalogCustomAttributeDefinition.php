<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogCustomAttributeDefinition - Contains information defining a custom attribute. Custom attributes are
 * 
 * intended to store additional information about a catalog object or to associate a
 * catalog object with an entity in another system. Do not use custom attributes
 * to store any sensitive information (personally identifiable information, card details, etc.).
 * [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogCustomAttributeDefinition
{
    /**
     * The set of Catalog Object Types that this Custom Attribute may be applied to.
     * 
     * Currently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included.
     * 
     * @var array<string> $allowedObjectTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowed_object_types')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $allowedObjectTypes;
    
    /**
     * The visibility of a custom attribute to applications other than the application
     * 
     * that created the attribute.
     * 
     * @var ?string $appVisibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('app_visibility')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $appVisibility = null;
    
    /**
     * __Read-only.__ The number of custom attributes that reference this
     * 
     * custom attribute definition. Set by the server in response to a ListCatalog
     * request with `include_counts` set to `true`.  If the actual count is greater
     * than 100, `custom_attribute_usage_count` will be set to `100`.
     * 
     * @var ?int $customAttributeUsageCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_attribute_usage_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $customAttributeUsageCount = null;
    
    /**
     * Seller-oriented description of the meaning of this Custom Attribute,
     * 
     * any constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The name of the desired custom attribute key that can be used to access
     * 
     * the custom attribute value on catalog objects. Cannot be modified after the
     * custom attribute definition has been created.
     * Must be between 1 and 60 characters, and may only contain the characters `[a-zA-Z0-9_-]`.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     *  The name of this definition for API and seller-facing UI purposes.
     * 
     * The name must be unique within the (merchant, application) pair. Required.
     * May not be empty and may not exceed 255 characters. Can be modified after creation.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('number_config')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionNumberConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogCustomAttributeDefinitionNumberConfig $numberConfig = null;
    
    /**
     * Configuration associated with `SELECTION`-type custom attribute definitions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionSelectionConfig $selectionConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('selection_config')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionSelectionConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogCustomAttributeDefinitionSelectionConfig $selectionConfig = null;
    
    /**
     * The visibility of a custom attribute in seller-facing UIs (including Square Point
     * 
     * of Sale applications and Square Dashboard). May be modified.
     * 
     * @var ?string $sellerVisibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('seller_visibility')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sellerVisibility = null;
    
    /**
     * Provides information about the application used to generate a change.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SourceApplication $sourceApplication
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_application')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SourceApplication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceApplication $sourceApplication = null;
    
    /**
     * Configuration associated with Custom Attribute Definitions of type `STRING`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionStringConfig $stringConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('string_config')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogCustomAttributeDefinitionStringConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogCustomAttributeDefinitionStringConfig $stringConfig = null;
    
    /**
     * The type of this custom attribute. Cannot be modified after creation.
     * 
     * Required.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->allowedObjectTypes = [];
		$this->appVisibility = null;
		$this->customAttributeUsageCount = null;
		$this->description = null;
		$this->key = null;
		$this->name = "";
		$this->numberConfig = null;
		$this->selectionConfig = null;
		$this->sellerVisibility = null;
		$this->sourceApplication = null;
		$this->stringConfig = null;
		$this->type = "";
	}
}
