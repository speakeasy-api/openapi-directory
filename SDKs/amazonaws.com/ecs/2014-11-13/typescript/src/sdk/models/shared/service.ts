/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapacityProviderStrategyItem } from "./capacityproviderstrategyitem";
import { Deployment } from "./deployment";
import { DeploymentConfiguration } from "./deploymentconfiguration";
import { DeploymentController } from "./deploymentcontroller";
import { LaunchTypeEnum } from "./launchtypeenum";
import { LoadBalancer } from "./loadbalancer";
import { NetworkConfiguration } from "./networkconfiguration";
import { PlacementConstraint } from "./placementconstraint";
import { PlacementStrategy } from "./placementstrategy";
import { PropagateTagsEnum } from "./propagatetagsenum";
import { SchedulingStrategyEnum } from "./schedulingstrategyenum";
import { ServiceEvent } from "./serviceevent";
import { ServiceRegistry } from "./serviceregistry";
import { Tag } from "./tag";
import { TaskSet } from "./taskset";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Details on a service within a cluster
 */
export class Service extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CapacityProviderStrategyItem })
  @Expose({ name: "capacityProviderStrategy" })
  @Type(() => CapacityProviderStrategyItem)
  capacityProviderStrategy?: CapacityProviderStrategyItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "clusterArn" })
  clusterArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentConfiguration" })
  @Type(() => DeploymentConfiguration)
  deploymentConfiguration?: DeploymentConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentController" })
  @Type(() => DeploymentController)
  deploymentController?: DeploymentController;

  @SpeakeasyMetadata({ elemType: Deployment })
  @Expose({ name: "deployments" })
  @Type(() => Deployment)
  deployments?: Deployment[];

  @SpeakeasyMetadata()
  @Expose({ name: "desiredCount" })
  desiredCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "enableECSManagedTags" })
  enableECSManagedTags?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enableExecuteCommand" })
  enableExecuteCommand?: boolean;

  @SpeakeasyMetadata({ elemType: ServiceEvent })
  @Expose({ name: "events" })
  @Type(() => ServiceEvent)
  events?: ServiceEvent[];

  @SpeakeasyMetadata()
  @Expose({ name: "healthCheckGracePeriodSeconds" })
  healthCheckGracePeriodSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "launchType" })
  launchType?: LaunchTypeEnum;

  @SpeakeasyMetadata({ elemType: LoadBalancer })
  @Expose({ name: "loadBalancers" })
  @Type(() => LoadBalancer)
  loadBalancers?: LoadBalancer[];

  @SpeakeasyMetadata()
  @Expose({ name: "networkConfiguration" })
  @Type(() => NetworkConfiguration)
  networkConfiguration?: NetworkConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "pendingCount" })
  pendingCount?: number;

  @SpeakeasyMetadata({ elemType: PlacementConstraint })
  @Expose({ name: "placementConstraints" })
  @Type(() => PlacementConstraint)
  placementConstraints?: PlacementConstraint[];

  @SpeakeasyMetadata({ elemType: PlacementStrategy })
  @Expose({ name: "placementStrategy" })
  @Type(() => PlacementStrategy)
  placementStrategy?: PlacementStrategy[];

  @SpeakeasyMetadata()
  @Expose({ name: "platformFamily" })
  platformFamily?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "platformVersion" })
  platformVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "propagateTags" })
  propagateTags?: PropagateTagsEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "runningCount" })
  runningCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schedulingStrategy" })
  schedulingStrategy?: SchedulingStrategyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceArn" })
  serviceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceName" })
  serviceName?: string;

  @SpeakeasyMetadata({ elemType: ServiceRegistry })
  @Expose({ name: "serviceRegistries" })
  @Type(() => ServiceRegistry)
  serviceRegistries?: ServiceRegistry[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "taskDefinition" })
  taskDefinition?: string;

  @SpeakeasyMetadata({ elemType: TaskSet })
  @Expose({ name: "taskSets" })
  @Type(() => TaskSet)
  taskSets?: TaskSet[];
}
