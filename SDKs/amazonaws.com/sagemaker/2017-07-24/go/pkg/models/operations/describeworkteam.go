// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeWorkteamXAmzTargetEnum
type DescribeWorkteamXAmzTargetEnum string

const (
	DescribeWorkteamXAmzTargetEnumSageMakerDescribeWorkteam DescribeWorkteamXAmzTargetEnum = "SageMaker.DescribeWorkteam"
)

func (e *DescribeWorkteamXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.DescribeWorkteam":
		*e = DescribeWorkteamXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeWorkteamXAmzTargetEnum: %s", s)
	}
}

type DescribeWorkteamHeaders struct {
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeWorkteamXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeWorkteamRequest struct {
	Headers DescribeWorkteamHeaders
	Request shared.DescribeWorkteamRequest `request:"mediaType=application/json"`
}

type DescribeWorkteamResponse struct {
	ContentType string
	// Success
	DescribeWorkteamResponse *shared.DescribeWorkteamResponse
	StatusCode               int
	RawResponse              *http.Response
}
