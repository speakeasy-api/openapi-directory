/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ProductCouponApiModel {
    /**
     * Coupon to apply in order to get the discount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Code")
    public String code;
    public ProductCouponApiModel withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * Discount amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DiscountAmount")
    public Double discountAmount;
    public ProductCouponApiModel withDiscountAmount(Double discountAmount) {
        this.discountAmount = discountAmount;
        return this;
    }
    
    /**
     * Discount percentage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DiscountPercentage")
    public Double discountPercentage;
    public ProductCouponApiModel withDiscountPercentage(Double discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }
    
    /**
     * Product coupon id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;
    public ProductCouponApiModel withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Coupon expiration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ValidUntil")
    public OffsetDateTime validUntil;
    public ProductCouponApiModel withValidUntil(OffsetDateTime validUntil) {
        this.validUntil = validUntil;
        return this;
    }
    
}
