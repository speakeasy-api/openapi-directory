/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExecutePatchJobRequest - A request message to initiate patching across Compute Engine instances.
 */
public class ExecutePatchJobRequest {
    /**
     * Description of the patch job. Length of the description is limited to 1024 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ExecutePatchJobRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Display name for this patch job. This does not have to be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public ExecutePatchJobRequest withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * If this patch is a dry-run only, instances are contacted but will do nothing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dryRun")
    public Boolean dryRun;
    public ExecutePatchJobRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * Duration of the patch job. After the duration ends, the patch job times out.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public String duration;
    public ExecutePatchJobRequest withDuration(String duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job targets only VMs with those labels and in those zones.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceFilter")
    public PatchInstanceFilter instanceFilter;
    public ExecutePatchJobRequest withInstanceFilter(PatchInstanceFilter instanceFilter) {
        this.instanceFilter = instanceFilter;
        return this;
    }
    
    /**
     * Patch configuration specifications. Contains details on how to apply the patch(es) to a VM instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("patchConfig")
    public PatchConfig patchConfig;
    public ExecutePatchJobRequest withPatchConfig(PatchConfig patchConfig) {
        this.patchConfig = patchConfig;
        return this;
    }
    
    /**
     * Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rollout")
    public PatchRollout rollout;
    public ExecutePatchJobRequest withRollout(PatchRollout rollout) {
        this.rollout = rollout;
        return this;
    }
    
}
