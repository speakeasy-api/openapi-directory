// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoggingLevelEnum string

const (
	LoggingLevelEnumError LoggingLevelEnum = "ERROR"
	LoggingLevelEnumInfo  LoggingLevelEnum = "INFO"
	LoggingLevelEnumOff   LoggingLevelEnum = "OFF"
)

func (e LoggingLevelEnum) ToPointer() *LoggingLevelEnum {
	return &e
}

func (e *LoggingLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR":
		fallthrough
	case "INFO":
		fallthrough
	case "OFF":
		*e = LoggingLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoggingLevelEnum: %v", v)
	}
}
