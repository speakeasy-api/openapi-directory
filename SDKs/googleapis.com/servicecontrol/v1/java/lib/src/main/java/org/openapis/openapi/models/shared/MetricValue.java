/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MetricValue - Represents a single metric value.
 */
public class MetricValue {
    /**
     * A boolean value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boolValue")
    public Boolean boolValue;
    public MetricValue withBoolValue(Boolean boolValue) {
        this.boolValue = boolValue;
        return this;
    }
    
    /**
     * Distribution represents a frequency distribution of double-valued sample points. It contains the size of the population of sample points plus additional optional information: * the arithmetic mean of the samples * the minimum and maximum of the samples * the sum-squared-deviation of the samples, used to compute variance * a histogram of the values of the sample points
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distributionValue")
    public Distribution distributionValue;
    public MetricValue withDistributionValue(Distribution distributionValue) {
        this.distributionValue = distributionValue;
        return this;
    }
    
    /**
     * A double precision floating point value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doubleValue")
    public Double doubleValue;
    public MetricValue withDoubleValue(Double doubleValue) {
        this.doubleValue = doubleValue;
        return this;
    }
    
    /**
     * The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;
    public MetricValue withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * A signed 64-bit integer value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("int64Value")
    public String int64Value;
    public MetricValue withInt64Value(String int64Value) {
        this.int64Value = int64Value;
        return this;
    }
    
    /**
     * The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public MetricValue withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Represents an amount of money with its currency type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("moneyValue")
    public Money moneyValue;
    public MetricValue withMoneyValue(Money moneyValue) {
        this.moneyValue = moneyValue;
        return this;
    }
    
    /**
     * The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;
    public MetricValue withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * A text string value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringValue")
    public String stringValue;
    public MetricValue withStringValue(String stringValue) {
        this.stringValue = stringValue;
        return this;
    }
    
}
