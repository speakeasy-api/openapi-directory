<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ApiV2010AccountRecording - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ApiV2010AccountRecording
{
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resource.
     * 
     * @var ?string $accountSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountSid = null;
    
    /**
     * The API version used during the recording.
     * 
     * @var ?string $apiVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiVersion = null;
    
    /**
     * The SID of the [Call](https://www.twilio.com/docs/voice/api/call-resource) the Recording resource is associated with. This will always refer to the parent leg of a two-leg call.
     * 
     * @var ?string $callSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('call_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callSid = null;
    
    /**
     * The number of channels in the final recording file. Can be: `1` or `2`. You can split a call with two legs into two separate recording channels if you record using [TwiML Dial](https://www.twilio.com/docs/voice/twiml/dial#record) or the [Outbound Rest API](https://www.twilio.com/docs/voice/make-calls#manage-your-outbound-call).
     * 
     * @var ?int $channels
     */
	#[\JMS\Serializer\Annotation\SerializedName('channels')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $channels = null;
    
    /**
     * The Conference SID that identifies the conference associated with the recording, if a conference recording.
     * 
     * @var ?string $conferenceSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('conference_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $conferenceSid = null;
    
    /**
     * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateCreated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateCreated = null;
    
    /**
     * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateUpdated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateUpdated = null;
    
    /**
     * The length of the recording in seconds.
     * 
     * @var ?string $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $duration = null;
    
    /**
     * How to decrypt the recording if it was encrypted using [Call Recording Encryption](https://www.twilio.com/docs/voice/tutorials/voice-recording-encryption) feature.
     * 
     * @var mixed $encryptionDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryption_details')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $encryptionDetails = null;
    
    /**
     * The error code that describes why the recording is `absent`. The error code is described in our [Error Dictionary](https://www.twilio.com/docs/api/errors). This value is null if the recording `status` is not `absent`.
     * 
     * @var ?int $errorCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('error_code')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $errorCode = null;
    
    /**
     * The URL of the media file associated with this recording resource. When stored externally, this is the full URL location of the media file.
     * 
     * @var ?string $mediaUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('media_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mediaUrl = null;
    
    /**
     * The one-time cost of creating the recording in the `price_unit` currency.
     * 
     * @var ?string $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $price = null;
    
    /**
     * The currency used in the `price` property. Example: `USD`.
     * 
     * @var ?string $priceUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('price_unit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceUnit = null;
    
    /**
     * The unique string that that we created to identify the Recording resource.
     * 
     * @var ?string $sid
     */
	#[\JMS\Serializer\Annotation\SerializedName('sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sid = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecordingEnumSourceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecordingEnumSourceEnum $source = null;
    
    /**
     * The start time of the recording in GMT and in [RFC 2822](https://www.php.net/manual/en/class.datetime.php#datetime.constants.rfc2822) format.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RecordingEnumStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecordingEnumStatusEnum $status = null;
    
    /**
     * A list of related resources identified by their relative URIs.
     * 
     * @var ?array<string, mixed> $subresourceUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('subresource_uris')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subresourceUris = null;
    
    /**
     * The URI of the resource, relative to `https://api.twilio.com`.
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->apiVersion = null;
		$this->callSid = null;
		$this->channels = null;
		$this->conferenceSid = null;
		$this->dateCreated = null;
		$this->dateUpdated = null;
		$this->duration = null;
		$this->encryptionDetails = null;
		$this->errorCode = null;
		$this->mediaUrl = null;
		$this->price = null;
		$this->priceUnit = null;
		$this->sid = null;
		$this->source = null;
		$this->startTime = null;
		$this->status = null;
		$this->subresourceUris = null;
		$this->uri = null;
	}
}
