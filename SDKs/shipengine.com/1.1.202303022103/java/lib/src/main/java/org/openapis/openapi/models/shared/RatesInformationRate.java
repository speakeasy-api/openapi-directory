/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * RatesInformationRate - A rate
 */
public class RatesInformationRate {
    /**
     * carrier code
     */
    @JsonProperty("carrier_code")
    public String carrierCode;
    public RatesInformationRate withCarrierCode(String carrierCode) {
        this.carrierCode = carrierCode;
        return this;
    }
    
    /**
     * The carrier delivery days
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_delivery_days")
    public String carrierDeliveryDays;
    public RatesInformationRate withCarrierDeliveryDays(String carrierDeliveryDays) {
        this.carrierDeliveryDays = carrierDeliveryDays;
        return this;
    }
    
    /**
     * carrier friendly name
     */
    @JsonProperty("carrier_friendly_name")
    public String carrierFriendlyName;
    public RatesInformationRate withCarrierFriendlyName(String carrierFriendlyName) {
        this.carrierFriendlyName = carrierFriendlyName;
        return this;
    }
    
    /**
     * A string that uniquely identifies the carrier
     */
    @JsonProperty("carrier_id")
    public String carrierId;
    public RatesInformationRate withCarrierId(String carrierId) {
        this.carrierId = carrierId;
        return this;
    }
    
    /**
     * carrier nickname
     */
    @JsonProperty("carrier_nickname")
    public String carrierNickname;
    public RatesInformationRate withCarrierNickname(String carrierNickname) {
        this.carrierNickname = carrierNickname;
        return this;
    }
    
    /**
     * The confirmation amount
     */
    @JsonProperty("confirmation_amount")
    public RatesInformationRateMonetaryValue confirmationAmount;
    public RatesInformationRate withConfirmationAmount(RatesInformationRateMonetaryValue confirmationAmount) {
        this.confirmationAmount = confirmationAmount;
        return this;
    }
    
    /**
     * The number of days estimated for delivery, this will show the _actual_ delivery
     * time if for example, the package gets shipped on a Friday
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delivery_days")
    public Integer deliveryDays;
    public RatesInformationRate withDeliveryDays(Integer deliveryDays) {
        this.deliveryDays = deliveryDays;
        return this;
    }
    
    /**
     * The error messages
     */
    @JsonProperty("error_messages")
    public String[] errorMessages;
    public RatesInformationRate withErrorMessages(String[] errorMessages) {
        this.errorMessages = errorMessages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("estimated_delivery_date")
    public OffsetDateTime estimatedDeliveryDate;
    public RatesInformationRate withEstimatedDeliveryDate(OffsetDateTime estimatedDeliveryDate) {
        this.estimatedDeliveryDate = estimatedDeliveryDate;
        return this;
    }
    
    /**
     * Indicates if the rate is guaranteed.
     */
    @JsonProperty("guaranteed_service")
    public Boolean guaranteedService;
    public RatesInformationRate withGuaranteedService(Boolean guaranteedService) {
        this.guaranteedService = guaranteedService;
        return this;
    }
    
    /**
     * The insurance amount
     */
    @JsonProperty("insurance_amount")
    public RatesInformationRateMonetaryValue insuranceAmount;
    public RatesInformationRate withInsuranceAmount(RatesInformationRateMonetaryValue insuranceAmount) {
        this.insuranceAmount = insuranceAmount;
        return this;
    }
    
    /**
     * Indicates if the rates been negotiated
     */
    @JsonProperty("negotiated_rate")
    public Boolean negotiatedRate;
    public RatesInformationRate withNegotiatedRate(Boolean negotiatedRate) {
        this.negotiatedRate = negotiatedRate;
        return this;
    }
    
    /**
     * Any other charges associated with this rate
     */
    @JsonProperty("other_amount")
    public RatesInformationRateMonetaryValue otherAmount;
    public RatesInformationRate withOtherAmount(RatesInformationRateMonetaryValue otherAmount) {
        this.otherAmount = otherAmount;
        return this;
    }
    
    /**
     * package type that this rate was estimated for
     */
    @JsonProperty("package_type")
    public String packageType;
    public RatesInformationRate withPackageType(String packageType) {
        this.packageType = packageType;
        return this;
    }
    
    /**
     * A string that uniquely identifies the rate
     */
    @JsonProperty("rate_id")
    public String rateId;
    public RatesInformationRate withRateId(String rateId) {
        this.rateId = rateId;
        return this;
    }
    
    @JsonProperty("rate_type")
    public RatesInformationRateRateTypeEnum rateType;
    public RatesInformationRate withRateType(RatesInformationRateRateTypeEnum rateType) {
        this.rateType = rateType;
        return this;
    }
    
    /**
     * service code for the rate
     */
    @JsonProperty("service_code")
    public String serviceCode;
    public RatesInformationRate withServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }
    
    /**
     * service type
     */
    @JsonProperty("service_type")
    public String serviceType;
    public RatesInformationRate withServiceType(String serviceType) {
        this.serviceType = serviceType;
        return this;
    }
    
    /**
     * ship date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ship_date")
    public OffsetDateTime shipDate;
    public RatesInformationRate withShipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }
    
    /**
     * The shipping amount
     */
    @JsonProperty("shipping_amount")
    public RatesInformationRateMonetaryValue shippingAmount;
    public RatesInformationRate withShippingAmount(RatesInformationRateMonetaryValue shippingAmount) {
        this.shippingAmount = shippingAmount;
        return this;
    }
    
    /**
     * Tariff and additional taxes associated with an international shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_amount")
    public RatesInformationRateMonetaryValue taxAmount;
    public RatesInformationRate withTaxAmount(RatesInformationRateMonetaryValue taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * Indicates if rate is trackable
     */
    @JsonProperty("trackable")
    public Boolean trackable;
    public RatesInformationRate withTrackable(Boolean trackable) {
        this.trackable = trackable;
        return this;
    }
    
    @JsonProperty("validation_status")
    public RatesInformationRateValidationStatusEnum validationStatus;
    public RatesInformationRate withValidationStatus(RatesInformationRateValidationStatusEnum validationStatus) {
        this.validationStatus = validationStatus;
        return this;
    }
    
    /**
     * The warning messages
     */
    @JsonProperty("warning_messages")
    public String[] warningMessages;
    public RatesInformationRate withWarningMessages(String[] warningMessages) {
        this.warningMessages = warningMessages;
        return this;
    }
    
    /**
     * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
     * custom zones that vary depending upon the ship_to and ship_from location
     * 
     */
    @JsonProperty("zone")
    public Integer zone;
    public RatesInformationRate withZone(Integer zone) {
        this.zone = zone;
        return this;
    }
    
}
