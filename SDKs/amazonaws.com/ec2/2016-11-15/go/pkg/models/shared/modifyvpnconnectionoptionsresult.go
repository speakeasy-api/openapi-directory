// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum - The current state of the gateway association.
type ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnumAssociated     ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = "associated"
	ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnumNotAssociated  ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = "not-associated"
	ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnumAssociating    ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = "associating"
	ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnumDisassociating ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = "disassociating"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "associated":
		fallthrough
	case "not-associated":
		fallthrough
	case "associating":
		fallthrough
	case "disassociating":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum - Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnumIpv4 ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum = "ipv4"
	ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnumIpv6 ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum = "ipv6"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions - The internet key exchange (IKE) version permitted for the VPN tunnel.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions struct {
	Value *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions - Options for sending VPN tunnel logs to CloudWatch.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions struct {
	LogEnabled      *bool
	LogGroupArn     *string
	LogOutputFormat *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions - Options for logging VPN tunnel activity.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions struct {
	CloudWatchLogOptions *ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers - The Diffie-Hellmann group number for phase 1 IKE negotiations.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers struct {
	Value *int64
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms - The encryption algorithm for phase 1 IKE negotiations.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms - The integrity algorithm for phase 1 IKE negotiations.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers - The Diffie-Hellmann group number for phase 2 IKE negotiations.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers struct {
	Value *int64
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms - The encryption algorithm for phase 2 IKE negotiations.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms - The integrity algorithm for phase 2 IKE negotiations.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms struct {
	Value *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions - The VPN tunnel options.
type ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions struct {
	DpdTimeoutAction           *string
	DpdTimeoutSeconds          *int64
	IkeVersions                []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions
	LogOptions                 *ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions
	OutsideIPAddress           *string
	Phase1DHGroupNumbers       []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers
	Phase1EncryptionAlgorithms []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms
	Phase1IntegrityAlgorithms  []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms
	Phase1LifetimeSeconds      *int64
	Phase2DHGroupNumbers       []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers
	Phase2EncryptionAlgorithms []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms
	Phase2IntegrityAlgorithms  []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms
	Phase2LifetimeSeconds      *int64
	PreSharedKey               *string
	RekeyFuzzPercentage        *int64
	RekeyMarginTimeSeconds     *int64
	ReplayWindowSize           *int64
	StartupAction              *string
	TunnelInsideCidr           *string
	TunnelInsideIpv6Cidr       *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionOptions - The VPN connection options.
type ModifyVpnConnectionOptionsResultVpnConnectionOptions struct {
	EnableAcceleration                  *bool
	LocalIpv4NetworkCidr                *string
	LocalIpv6NetworkCidr                *string
	OutsideIPAddressType                *string
	RemoteIpv4NetworkCidr               *string
	RemoteIpv6NetworkCidr               *string
	StaticRoutesOnly                    *bool
	TransportTransitGatewayAttachmentID *string
	TunnelInsideIPVersion               *ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum
	TunnelOptions                       []ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions
}

// ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum - Indicates how the routes were provided.
type ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnumStatic ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum = "Static"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Static":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum - The current state of the static route.
type ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnumPending   ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = "pending"
	ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnumAvailable ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = "available"
	ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnumDeleting  ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = "deleting"
	ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnumDeleted   ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = "deleted"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionRoutes - Describes a static route for a VPN connection.
type ModifyVpnConnectionOptionsResultVpnConnectionRoutes struct {
	DestinationCidrBlock *string
	Source               *ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum
	State                *ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum
}

// ModifyVpnConnectionOptionsResultVpnConnectionStateEnum - The current state of the VPN connection.
type ModifyVpnConnectionOptionsResultVpnConnectionStateEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionStateEnumPending   ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = "pending"
	ModifyVpnConnectionOptionsResultVpnConnectionStateEnumAvailable ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = "available"
	ModifyVpnConnectionOptionsResultVpnConnectionStateEnumDeleting  ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = "deleting"
	ModifyVpnConnectionOptionsResultVpnConnectionStateEnumDeleted   ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = "deleted"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionStateEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionTags - Describes a tag.
type ModifyVpnConnectionOptionsResultVpnConnectionTags struct {
	Key   *string
	Value *string
}

// ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum - The type of VPN connection.
type ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionTypeEnumIpsec1 ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum = "ipsec.1"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ipsec.1":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum - The status of the VPN tunnel.
type ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum string

const (
	ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnumUp   ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum = "UP"
	ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnumDown ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum = "DOWN"
)

func (e *ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UP":
		fallthrough
	case "DOWN":
		*e = ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum: %s", s)
	}
}

// ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry - Describes telemetry for a VPN tunnel.
type ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry struct {
	AcceptedRouteCount *int64
	CertificateArn     *string
	LastStatusChange   *time.Time
	OutsideIPAddress   *string
	Status             *ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum
	StatusMessage      *string
}

// ModifyVpnConnectionOptionsResultVpnConnection - Information about the VPN connection.
type ModifyVpnConnectionOptionsResultVpnConnection struct {
	Category                     *string
	CoreNetworkArn               *string
	CoreNetworkAttachmentArn     *string
	CustomerGatewayConfiguration *string
	CustomerGatewayID            *string
	GatewayAssociationState      *ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum
	Options                      *ModifyVpnConnectionOptionsResultVpnConnectionOptions
	Routes                       []ModifyVpnConnectionOptionsResultVpnConnectionRoutes
	State                        *ModifyVpnConnectionOptionsResultVpnConnectionStateEnum
	Tags                         []ModifyVpnConnectionOptionsResultVpnConnectionTags
	TransitGatewayID             *string
	Type                         *ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum
	VgwTelemetry                 []ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry
	VpnConnectionID              *string
	VpnGatewayID                 *string
}

// ModifyVpnConnectionOptionsResult - Success
type ModifyVpnConnectionOptionsResult struct {
	VpnConnection *ModifyVpnConnectionOptionsResultVpnConnection
}
