/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DiscountPricingUpdate {
    /**
     * Specifies which type of charge the discount charge applies to.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyDiscountTo")
    public DiscountPricingUpdateApplyDiscountToEnum applyDiscountTo;
    public DiscountPricingUpdate withApplyDiscountTo(DiscountPricingUpdateApplyDiscountToEnum applyDiscountTo) {
        this.applyDiscountTo = applyDiscountTo;
        return this;
    }
    
    /**
     * Application scope of the discount charge. For example, if the value of this field is `subscription` and the value of the `applyDiscountTo` field is `RECURRING`, the discount charge applies to all recurring charges in the same subscription as the discount charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountLevel")
    public DiscountPricingUpdateDiscountLevelEnum discountLevel;
    public DiscountPricingUpdate withDiscountLevel(DiscountPricingUpdateDiscountLevelEnum discountLevel) {
        this.discountLevel = discountLevel;
        return this;
    }
    
    /**
     * The amount of the discount as a percentage. This field is only used for percentage discounts.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountPercentage")
    public Double discountPercentage;
    public DiscountPricingUpdate withDiscountPercentage(Double discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }
    
    /**
     * Specifies how Zuora changes the price of the charge each time the subscription renews.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceChangeOption")
    public DiscountPricingUpdatePriceChangeOptionEnum priceChangeOption;
    public DiscountPricingUpdate withPriceChangeOption(DiscountPricingUpdatePriceChangeOptionEnum priceChangeOption) {
        this.priceChangeOption = priceChangeOption;
        return this;
    }
    
}
