/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * NotificationThread - NotificationThread expose Notification on API
 */
public class NotificationThread {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public NotificationThread withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pinned")
    public Boolean pinned;
    public NotificationThread withPinned(Boolean pinned) {
        this.pinned = pinned;
        return this;
    }
    
    /**
     * Repository represents a repository
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repository")
    public Repository repository;
    public NotificationThread withRepository(Repository repository) {
        this.repository = repository;
        return this;
    }
    
    /**
     * NotificationSubject contains the notification subject (Issue/Pull/Commit)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subject")
    public NotificationSubject subject;
    public NotificationThread withSubject(NotificationSubject subject) {
        this.subject = subject;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unread")
    public Boolean unread;
    public NotificationThread withUnread(Boolean unread) {
        this.unread = unread;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public NotificationThread withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public NotificationThread withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
