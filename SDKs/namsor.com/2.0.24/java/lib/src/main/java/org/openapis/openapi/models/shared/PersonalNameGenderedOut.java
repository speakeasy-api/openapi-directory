/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersonalNameGenderedOut - Classified genderized names
 */
public class PersonalNameGenderedOut {
    /**
     * Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("genderScale")
    public Double genderScale;

    public PersonalNameGenderedOut withGenderScale(Double genderScale) {
        this.genderScale = genderScale;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public PersonalNameGenderedOut withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Most likely gender
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("likelyGender")
    public PersonalNameGenderedOutLikelyGenderEnum likelyGender;

    public PersonalNameGenderedOut withLikelyGender(PersonalNameGenderedOutLikelyGenderEnum likelyGender) {
        this.likelyGender = likelyGender;
        return this;
    }
    
    /**
     * The input name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PersonalNameGenderedOut withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("probabilityCalibrated")
    public Double probabilityCalibrated;

    public PersonalNameGenderedOut withProbabilityCalibrated(Double probabilityCalibrated) {
        this.probabilityCalibrated = probabilityCalibrated;
        return this;
    }
    
    /**
     * Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Double score;

    public PersonalNameGenderedOut withScore(Double score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("script")
    public String script;

    public PersonalNameGenderedOut withScript(String script) {
        this.script = script;
        return this;
    }
    
    public PersonalNameGenderedOut(){}
}
