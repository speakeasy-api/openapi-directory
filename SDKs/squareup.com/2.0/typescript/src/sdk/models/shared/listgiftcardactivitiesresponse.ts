/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { GiftCardActivity } from "./giftcardactivity";
import { Expose, Type } from "class-transformer";

/**
 * A response that contains one or more `GiftCardActivity`. The response might contain a set of `Error` objects
 *
 * @remarks
 * if the request resulted in errors.
 */
export class ListGiftCardActivitiesResponse extends SpeakeasyBase {
  /**
   * When a response is truncated, it includes a cursor that you can use in a
   *
   * @remarks
   * subsequent request to fetch the next set of activities. If empty, this is
   * the final response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * Any errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * Gift card activities retrieved.
   */
  @SpeakeasyMetadata({ elemType: GiftCardActivity })
  @Expose({ name: "gift_card_activities" })
  @Type(() => GiftCardActivity)
  giftCardActivities?: GiftCardActivity[];
}
