// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CredentialOptionsTypeEnum string

const (
	CredentialOptionsTypeEnumMiradoreAPIKeyV1 CredentialOptionsTypeEnum = "miradore_api_key_v1"
	CredentialOptionsTypeEnumAwsAccessSecret  CredentialOptionsTypeEnum = "aws_access_secret"
)

func (e CredentialOptionsTypeEnum) ToPointer() *CredentialOptionsTypeEnum {
	return &e
}

func (e *CredentialOptionsTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "miradore_api_key_v1":
		fallthrough
	case "aws_access_secret":
		*e = CredentialOptionsTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CredentialOptionsTypeEnum: %v", v)
	}
}

// CredentialOptions - credential parameters
type CredentialOptions struct {
	ACL    map[string]interface{}     `json:"acl,omitempty"`
	Cidrs  *string                    `json:"cidrs,omitempty"`
	Global *bool                      `json:"global,omitempty"`
	Name   *string                    `json:"name,omitempty"`
	Secret *CredentialFields          `json:"secret,omitempty"`
	Type   *CredentialOptionsTypeEnum `json:"type,omitempty"`
}
