"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TextFormatEnum(str, Enum):
    r"""How the text content is formatted."""
    FORMAT_UNSPECIFIED = 'FORMAT_UNSPECIFIED'
    MARKDOWN = 'MARKDOWN'
    RAW = 'RAW'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Text:
    r"""A widget that displays textual content."""
    
    content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content'), 'exclude': lambda f: f is None }})
    r"""The text content to be displayed."""  
    format: Optional[TextFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""How the text content is formatted."""  
    