/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Configuration object of the webhook
 */
export class WebhookConfig extends SpeakeasyBase {
  /**
   * The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "insecure_ssl" })
  insecureSsl?: any;

  /**
   * If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@3.2/webhooks/event-payloads/#delivery-headers).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * The URL to which the payloads will be delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
