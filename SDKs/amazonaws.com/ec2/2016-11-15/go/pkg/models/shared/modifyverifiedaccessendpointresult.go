// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum - The type of attachment used to provide connectivity between the Amazon Web Services Verified Access endpoint and the application.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum string

const (
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnumVpc ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum = "vpc"
)

func (e *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "vpc":
		*e = ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum: %s", s)
	}
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum - The type of Amazon Web Services Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum string

const (
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnumLoadBalancer     ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum = "load-balancer"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnumNetworkInterface ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum = "network-interface"
)

func (e *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "load-balancer":
		fallthrough
	case "network-interface":
		*e = ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum: %s", s)
	}
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum - The IP protocol.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum string

const (
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnumHTTP  ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum = "http"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnumHTTPS ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum = "https"
)

func (e *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "http":
		fallthrough
	case "https":
		*e = ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum: %s", s)
	}
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptions - The load balancer details if creating the Amazon Web Services Verified Access endpoint as <code>load-balancer</code>type.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptions struct {
	LoadBalancerArn *string
	Port            *int64
	Protocol        *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptionsProtocolEnum
	SubnetIds       []string
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum - The IP protocol.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum string

const (
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnumHTTP  ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum = "http"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnumHTTPS ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum = "https"
)

func (e *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "http":
		fallthrough
	case "https":
		*e = ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum: %s", s)
	}
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptions - The options for network-interface type endpoint.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptions struct {
	NetworkInterfaceID *string
	Port               *int64
	Protocol           *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptionsProtocolEnum
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum - The status code of the Verified Access endpoint.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum string

const (
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnumPending  ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum = "pending"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnumActive   ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum = "active"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnumUpdating ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum = "updating"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnumDeleting ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum = "deleting"
	ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnumDeleted  ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum = "deleted"
)

func (e *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "active":
		fallthrough
	case "updating":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum: %s", s)
	}
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatus - The endpoint status.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatus struct {
	Code    *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatusCodeEnum
	Message *string
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointTags - Describes a tag.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointTags struct {
	Key   *string
	Value *string
}

// ModifyVerifiedAccessEndpointResultVerifiedAccessEndpoint - The Amazon Web Services Verified Access endpoint details.
type ModifyVerifiedAccessEndpointResultVerifiedAccessEndpoint struct {
	ApplicationDomain        *string
	AttachmentType           *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointAttachmentTypeEnum
	CreationTime             *string
	DeletionTime             *string
	Description              *string
	DeviceValidationDomain   *string
	DomainCertificateArn     *string
	EndpointDomain           *string
	EndpointType             *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointEndpointTypeEnum
	LastUpdatedTime          *string
	LoadBalancerOptions      *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointLoadBalancerOptions
	NetworkInterfaceOptions  *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointNetworkInterfaceOptions
	SecurityGroupIds         []string
	Status                   *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointStatus
	Tags                     []ModifyVerifiedAccessEndpointResultVerifiedAccessEndpointTags
	VerifiedAccessEndpointID *string
	VerifiedAccessGroupID    *string
	VerifiedAccessInstanceID *string
}

// ModifyVerifiedAccessEndpointResult - Success
type ModifyVerifiedAccessEndpointResult struct {
	VerifiedAccessEndpoint *ModifyVerifiedAccessEndpointResultVerifiedAccessEndpoint
}
