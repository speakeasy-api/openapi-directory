"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contact as shared_contact
from ..shared import media as shared_media
from ..shared import textrecord as shared_textrecord
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TextFinalTextResultEnum(str, Enum):
    r"""Result of text (SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""
    SENT = 'SENT'
    RECEIVED = 'RECEIVED'
    DNT = 'DNT'
    TOO_BIG = 'TOO_BIG'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    CARRIER_ERROR = 'CARRIER_ERROR'
    CARRIER_TEMP_ERROR = 'CARRIER_TEMP_ERROR'
    UNDIALED = 'UNDIALED'
    INVALID_NUMBER = 'INVALID_NUMBER'

class TextStateEnum(str, Enum):
    r"""Current state of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""
    READY = 'READY'
    SELECTED = 'SELECTED'
    CALLBACK = 'CALLBACK'
    FINISHED = 'FINISHED'
    DISABLED = 'DISABLED'
    SKIPPED = 'SKIPPED'
    DNC = 'DNC'
    DUP = 'DUP'
    INVALID = 'INVALID'
    TIMEOUT = 'TIMEOUT'
    PERIOD_LIMIT = 'PERIOD_LIMIT'
    RESTRICTED_NUMBER = 'RESTRICTED_NUMBER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Text:
    r"""Represents a text action sent or received by CallFire platform"""
    
    attributes: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes'), 'exclude': lambda f: f is None }})
    r"""Map of user-defined string attributes associated with an action"""  
    batch_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchId'), 'exclude': lambda f: f is None }})
    r"""An id of contact batch associated with an action"""  
    campaign_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('campaignId'), 'exclude': lambda f: f is None }})
    r"""An id of broadcast if given text was sent as a part of text broadcast"""  
    contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contact'), 'exclude': lambda f: f is None }})
    r"""Represents a contact in CallFire platform. Contains info about the people you want to contact. It allows you to store a user-defined properties for each contact"""  
    created: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'exclude': lambda f: f is None }})
    r"""The time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    final_text_result: Optional[TextFinalTextResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finalTextResult'), 'exclude': lambda f: f is None }})
    r"""Result of text (SENT, RECEIVED, DNT, TOO_BIG, INTERNAL_ERROR, CARRIER_ERROR, CARRIER_TEMP_ERROR, UNDIALED). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""  
    from_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fromNumber'), 'exclude': lambda f: f is None }})
    r"""Sender's phone number in E.164 format (11-digit) or short code. Example: 12132000384, 67076"""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""An id of an action"""  
    inbound: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inbound'), 'exclude': lambda f: f is None }})
    r"""An action inbound"""  
    labels: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels associated with an action"""  
    media: Optional[list[shared_media.Media]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('media'), 'exclude': lambda f: f is None }})
    r"""~"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""A text message"""  
    modified: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified'), 'exclude': lambda f: f is None }})
    r"""The time when the given resource was modified, formatted in unix time milliseconds (read only). Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    records: Optional[list[shared_textrecord.TextRecord]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('records'), 'exclude': lambda f: f is None }})
    r"""List of text records, each record contains additional details: time of sending, cost, current state.  A single contact may have multiple numbers. If given text was sent as part of broadcast with configured retry logic then each text record will contain details about attempted number"""  
    state: Optional[TextStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Current state of an action (READY, SELECTED, CALLBACK, DISABLED, FINISHED, DNC, DUP, INVALID, TIMEOUT, PERIOD_LIMIT). See [call states and results](https://developers.callfire.com/results-responses-errors.html)"""  
    to_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toNumber'), 'exclude': lambda f: f is None }})
    r"""Recipient's phone number in E.164 format (11-digit) or short code. Example: 12132000384, 67076"""  
    