"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import basegroup as shared_basegroup
from ..shared import externalstandard as shared_externalstandard
from ..shared import feature as shared_feature
from ..shared import role as shared_role
from ..shared import route as shared_route
from ..shared import user as shared_user
from datetime import datetime
from typing import Any, Optional


@dataclasses.dataclass
class UserToken:
    r"""Description was not specified"""
    
    audit_actions: Optional[list[str]] = dataclasses.field(default=None)  
    check_secret_word: Optional[bool] = dataclasses.field(default=None)  
    created: Optional[datetime] = dataclasses.field(default=None)  
    expiration: Optional[datetime] = dataclasses.field(default=None)  
    external_standards: Optional[list[shared_externalstandard.ExternalStandard]] = dataclasses.field(default=None)  
    group_features: Optional[list[shared_feature.Feature]] = dataclasses.field(default=None)  
    group_messaging_enabled: Optional[bool] = dataclasses.field(default=None)  
    must_set_secret_word: Optional[bool] = dataclasses.field(default=None)  
    patient_features: Optional[list[shared_feature.Feature]] = dataclasses.field(default=None)  
    patient_messaging_feature_types: Optional[list[str]] = dataclasses.field(default=None)  
    patient_roles: Optional[list[shared_role.Role]] = dataclasses.field(default=None)  
    routes: Optional[list[shared_route.Route]] = dataclasses.field(default=None)  
    secret_word: Optional[str] = dataclasses.field(default=None)  
    secret_word_choices: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    secret_word_indexes: Optional[list[str]] = dataclasses.field(default=None)  
    secret_word_salt: Optional[str] = dataclasses.field(default=None)  
    secret_word_token: Optional[str] = dataclasses.field(default=None)  
    security_roles: Optional[list[shared_role.Role]] = dataclasses.field(default=None)  
    should_enter_condition: Optional[bool] = dataclasses.field(default=None)  
    staff_features: Optional[list[shared_feature.Feature]] = dataclasses.field(default=None)  
    staff_roles: Optional[list[shared_role.Role]] = dataclasses.field(default=None)  
    token: Optional[str] = dataclasses.field(default=None)  
    user: Optional[shared_user.User] = dataclasses.field(default=None)  
    user_features: Optional[list[shared_feature.Feature]] = dataclasses.field(default=None)  
    user_groups: Optional[list[shared_basegroup.BaseGroup]] = dataclasses.field(default=None)  
    