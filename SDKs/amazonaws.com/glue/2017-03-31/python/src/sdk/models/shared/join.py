"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import joincolumn as shared_joincolumn
from ..shared import jointype_enum as shared_jointype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Join:
    r"""Specifies a transform that joins two datasets into one dataset using a comparison phrase on the specified data property keys. You can use inner, outer, left, right, left semi, and left anti joins."""
    
    columns: list[shared_joincolumn.JoinColumn] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Columns') }})  
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    join_type: shared_jointype_enum.JoinTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JoinType') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    