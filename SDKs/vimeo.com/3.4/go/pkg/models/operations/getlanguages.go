// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLanguagesFilterEnum - The attribute by which to filter the results.
//
// Option descriptions:
//   - `texttracks` - Only return text track supported languages
type GetLanguagesFilterEnum string

const (
	GetLanguagesFilterEnumTexttracks GetLanguagesFilterEnum = "texttracks"
)

func (e *GetLanguagesFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "texttracks":
		*e = GetLanguagesFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLanguagesFilterEnum: %s", s)
	}
}

type GetLanguagesRequest struct {
	// The attribute by which to filter the results.
	//
	// Option descriptions:
	//  * `texttracks` - Only return text track supported languages
	//
	Filter *GetLanguagesFilterEnum `queryParam:"style=form,explode=true,name=filter"`
}

type GetLanguagesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The languages were returned.
	Languages []shared.Language
}
