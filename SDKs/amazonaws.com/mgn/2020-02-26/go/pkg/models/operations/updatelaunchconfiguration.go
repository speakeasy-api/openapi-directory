// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateLaunchConfigurationRequestBodyBootModeEnum - Update Launch configuration boot mode request.
type UpdateLaunchConfigurationRequestBodyBootModeEnum string

const (
	UpdateLaunchConfigurationRequestBodyBootModeEnumLegacyBios UpdateLaunchConfigurationRequestBodyBootModeEnum = "LEGACY_BIOS"
	UpdateLaunchConfigurationRequestBodyBootModeEnumUefi       UpdateLaunchConfigurationRequestBodyBootModeEnum = "UEFI"
)

func (e UpdateLaunchConfigurationRequestBodyBootModeEnum) ToPointer() *UpdateLaunchConfigurationRequestBodyBootModeEnum {
	return &e
}

func (e *UpdateLaunchConfigurationRequestBodyBootModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LEGACY_BIOS":
		fallthrough
	case "UEFI":
		*e = UpdateLaunchConfigurationRequestBodyBootModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLaunchConfigurationRequestBodyBootModeEnum: %v", v)
	}
}

// UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum - Update Launch configuration launch disposition request.
type UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum string

const (
	UpdateLaunchConfigurationRequestBodyLaunchDispositionEnumStopped UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum = "STOPPED"
	UpdateLaunchConfigurationRequestBodyLaunchDispositionEnumStarted UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum = "STARTED"
)

func (e UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum) ToPointer() *UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum {
	return &e
}

func (e *UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STOPPED":
		fallthrough
	case "STARTED":
		*e = UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum: %v", v)
	}
}

// UpdateLaunchConfigurationRequestBodyLicensing - Configure Licensing.
type UpdateLaunchConfigurationRequestBodyLicensing struct {
	OsByol *bool `json:"osByol,omitempty"`
}

// UpdateLaunchConfigurationRequestBodyPostLaunchActions - Post Launch Actions to executed on the Test or Cutover instance.
type UpdateLaunchConfigurationRequestBodyPostLaunchActions struct {
	CloudWatchLogGroupName *string                                     `json:"cloudWatchLogGroupName,omitempty"`
	Deployment             *shared.PostLaunchActionsDeploymentTypeEnum `json:"deployment,omitempty"`
	S3LogBucket            *string                                     `json:"s3LogBucket,omitempty"`
	S3OutputKeyPrefix      *string                                     `json:"s3OutputKeyPrefix,omitempty"`
	SsmDocuments           []shared.SsmDocument                        `json:"ssmDocuments,omitempty"`
}

// UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum - Update Launch configuration Target instance right sizing request.
type UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum string

const (
	UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnumNone  UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum = "NONE"
	UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnumBasic UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum = "BASIC"
)

func (e UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum) ToPointer() *UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum {
	return &e
}

func (e *UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "BASIC":
		*e = UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum: %v", v)
	}
}

type UpdateLaunchConfigurationRequestBody struct {
	// Update Launch configuration boot mode request.
	BootMode *UpdateLaunchConfigurationRequestBodyBootModeEnum `json:"bootMode,omitempty"`
	// Update Launch configuration copy Private IP request.
	CopyPrivateIP *bool `json:"copyPrivateIp,omitempty"`
	// Update Launch configuration copy Tags request.
	CopyTags *bool `json:"copyTags,omitempty"`
	// Enable map auto tagging.
	EnableMapAutoTagging *bool `json:"enableMapAutoTagging,omitempty"`
	// Update Launch configuration launch disposition request.
	LaunchDisposition *UpdateLaunchConfigurationRequestBodyLaunchDispositionEnum `json:"launchDisposition,omitempty"`
	// Configure Licensing.
	Licensing *UpdateLaunchConfigurationRequestBodyLicensing `json:"licensing,omitempty"`
	// Launch configuration map auto tagging MPE ID.
	MapAutoTaggingMpeID *string `json:"mapAutoTaggingMpeID,omitempty"`
	// Update Launch configuration name request.
	Name *string `json:"name,omitempty"`
	// Post Launch Actions to executed on the Test or Cutover instance.
	PostLaunchActions *UpdateLaunchConfigurationRequestBodyPostLaunchActions `json:"postLaunchActions,omitempty"`
	// Update Launch configuration by Source Server ID request.
	SourceServerID string `json:"sourceServerID"`
	// Update Launch configuration Target instance right sizing request.
	TargetInstanceTypeRightSizingMethod *UpdateLaunchConfigurationRequestBodyTargetInstanceTypeRightSizingMethodEnum `json:"targetInstanceTypeRightSizingMethod,omitempty"`
}

type UpdateLaunchConfigurationRequest struct {
	RequestBody       UpdateLaunchConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateLaunchConfigurationResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	LaunchConfiguration *shared.LaunchConfiguration
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
