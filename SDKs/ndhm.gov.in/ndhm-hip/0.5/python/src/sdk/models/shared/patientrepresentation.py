"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import carecontextrepresentation as shared_carecontextrepresentation
from ..shared import identifiertype_enum as shared_identifiertype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PatientRepresentation:
    
    care_contexts: list[shared_carecontextrepresentation.CareContextRepresentation] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('careContexts') }})  
    display: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display') }})  
    reference_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceNumber') }})  
    matched_by: Optional[list[shared_identifiertype_enum.IdentifierTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('matchedBy'), 'exclude': lambda f: f is None }})  
    