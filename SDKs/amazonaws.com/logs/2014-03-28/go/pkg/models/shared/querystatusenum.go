// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryStatusEnum string

const (
	QueryStatusEnumScheduled QueryStatusEnum = "Scheduled"
	QueryStatusEnumRunning   QueryStatusEnum = "Running"
	QueryStatusEnumComplete  QueryStatusEnum = "Complete"
	QueryStatusEnumFailed    QueryStatusEnum = "Failed"
	QueryStatusEnumCancelled QueryStatusEnum = "Cancelled"
	QueryStatusEnumTimeout   QueryStatusEnum = "Timeout"
	QueryStatusEnumUnknown   QueryStatusEnum = "Unknown"
)

func (e QueryStatusEnum) ToPointer() *QueryStatusEnum {
	return &e
}

func (e *QueryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Scheduled":
		fallthrough
	case "Running":
		fallthrough
	case "Complete":
		fallthrough
	case "Failed":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Timeout":
		fallthrough
	case "Unknown":
		*e = QueryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryStatusEnum: %v", v)
	}
}
