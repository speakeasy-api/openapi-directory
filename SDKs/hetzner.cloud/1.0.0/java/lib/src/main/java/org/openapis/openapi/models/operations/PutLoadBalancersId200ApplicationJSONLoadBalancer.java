/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class PutLoadBalancersId200ApplicationJSONLoadBalancer {
    /**
     * Algorithm of the Load Balancer
     */
    @JsonProperty("algorithm")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerAlgorithm algorithm;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withAlgorithm(PutLoadBalancersId200ApplicationJSONLoadBalancerAlgorithm algorithm) {
        this.algorithm = algorithm;
        return this;
    }
    
    /**
     * Point in time when the Resource was created (in ISO-8601 format)
     */
    @JsonProperty("created")
    public String created;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withCreated(String created) {
        this.created = created;
        return this;
    }
    
    /**
     * ID of the Resource
     */
    @JsonProperty("id")
    public Long id;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Free Traffic for the current billing period in bytes
     */
    @JsonProperty("included_traffic")
    public Long includedTraffic;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withIncludedTraffic(Long includedTraffic) {
        this.includedTraffic = includedTraffic;
        return this;
    }
    
    /**
     * Inbound Traffic for the current billing period in bytes
     */
    @JsonProperty("ingoing_traffic")
    public Long ingoingTraffic;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withIngoingTraffic(Long ingoingTraffic) {
        this.ingoingTraffic = ingoingTraffic;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    @JsonProperty("load_balancer_type")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerType loadBalancerType;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withLoadBalancerType(PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerType loadBalancerType) {
        this.loadBalancerType = loadBalancerType;
        return this;
    }
    
    @JsonProperty("location")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerLocation location;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withLocation(PutLoadBalancersId200ApplicationJSONLoadBalancerLocation location) {
        this.location = location;
        return this;
    }
    
    /**
     * Name of the Resource. Must be unique per Project.
     */
    @JsonProperty("name")
    public String name;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Outbound Traffic for the current billing period in bytes
     */
    @JsonProperty("outgoing_traffic")
    public Long outgoingTraffic;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withOutgoingTraffic(Long outgoingTraffic) {
        this.outgoingTraffic = outgoingTraffic;
        return this;
    }
    
    /**
     * Private networks information
     */
    @JsonProperty("private_net")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerPrivateNet[] privateNet;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withPrivateNet(PutLoadBalancersId200ApplicationJSONLoadBalancerPrivateNet[] privateNet) {
        this.privateNet = privateNet;
        return this;
    }
    
    /**
     * Protection configuration for the Resource
     */
    @JsonProperty("protection")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerProtection protection;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withProtection(PutLoadBalancersId200ApplicationJSONLoadBalancerProtection protection) {
        this.protection = protection;
        return this;
    }
    
    /**
     * Public network information
     */
    @JsonProperty("public_net")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerPublicNet publicNet;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withPublicNet(PutLoadBalancersId200ApplicationJSONLoadBalancerPublicNet publicNet) {
        this.publicNet = publicNet;
        return this;
    }
    
    /**
     * List of services that belong to this Load Balancer
     */
    @JsonProperty("services")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerService[] services;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withServices(PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerService[] services) {
        this.services = services;
        return this;
    }
    
    /**
     * List of targets that belong to this Load Balancer
     */
    @JsonProperty("targets")
    public PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerTarget[] targets;

    public PutLoadBalancersId200ApplicationJSONLoadBalancer withTargets(PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerTarget[] targets) {
        this.targets = targets;
        return this;
    }
    
    public PutLoadBalancersId200ApplicationJSONLoadBalancer(@JsonProperty("algorithm") PutLoadBalancersId200ApplicationJSONLoadBalancerAlgorithm algorithm, @JsonProperty("created") String created, @JsonProperty("id") Long id, @JsonProperty("included_traffic") Long includedTraffic, @JsonProperty("ingoing_traffic") Long ingoingTraffic, @JsonProperty("labels") java.util.Map<String, String> labels, @JsonProperty("load_balancer_type") PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerType loadBalancerType, @JsonProperty("location") PutLoadBalancersId200ApplicationJSONLoadBalancerLocation location, @JsonProperty("name") String name, @JsonProperty("outgoing_traffic") Long outgoingTraffic, @JsonProperty("private_net") PutLoadBalancersId200ApplicationJSONLoadBalancerPrivateNet[] privateNet, @JsonProperty("protection") PutLoadBalancersId200ApplicationJSONLoadBalancerProtection protection, @JsonProperty("public_net") PutLoadBalancersId200ApplicationJSONLoadBalancerPublicNet publicNet, @JsonProperty("services") PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerService[] services, @JsonProperty("targets") PutLoadBalancersId200ApplicationJSONLoadBalancerLoadBalancerTarget[] targets) {
        this.algorithm = algorithm;
        this.created = created;
        this.id = id;
        this.includedTraffic = includedTraffic;
        this.ingoingTraffic = ingoingTraffic;
        this.labels = labels;
        this.loadBalancerType = loadBalancerType;
        this.location = location;
        this.name = name;
        this.outgoingTraffic = outgoingTraffic;
        this.privateNet = privateNet;
        this.protection = protection;
        this.publicNet = publicNet;
        this.services = services;
        this.targets = targets;
  }
}
