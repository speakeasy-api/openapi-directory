/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DeleteFacetResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public DeleteFacetResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    
    public String contentType;

    public DeleteFacetResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> deleteFacetResponse;

    public DeleteFacetResponse withDeleteFacetResponse(java.util.Map<String, Object> deleteFacetResponse) {
        this.deleteFacetResponse = deleteFacetResponse;
        return this;
    }
    
    /**
     * FacetInUseException
     */
    
    public Object facetInUseException;

    public DeleteFacetResponse withFacetInUseException(Object facetInUseException) {
        this.facetInUseException = facetInUseException;
        return this;
    }
    
    /**
     * FacetNotFoundException
     */
    
    public Object facetNotFoundException;

    public DeleteFacetResponse withFacetNotFoundException(Object facetNotFoundException) {
        this.facetNotFoundException = facetNotFoundException;
        return this;
    }
    
    /**
     * InternalServiceException
     */
    
    public Object internalServiceException;

    public DeleteFacetResponse withInternalServiceException(Object internalServiceException) {
        this.internalServiceException = internalServiceException;
        return this;
    }
    
    /**
     * InvalidArnException
     */
    
    public Object invalidArnException;

    public DeleteFacetResponse withInvalidArnException(Object invalidArnException) {
        this.invalidArnException = invalidArnException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public DeleteFacetResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    
    public Integer statusCode;

    public DeleteFacetResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DeleteFacetResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public DeleteFacetResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * RetryableConflictException
     */
    
    public Object retryableConflictException;

    public DeleteFacetResponse withRetryableConflictException(Object retryableConflictException) {
        this.retryableConflictException = retryableConflictException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;

    public DeleteFacetResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
    public DeleteFacetResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
