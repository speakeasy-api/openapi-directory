/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RepricingRuleEligibleOfferMatcherStringMatcher } from "./repricingruleeligibleoffermatcherstringmatcher";
import { Expose, Type } from "class-transformer";

/**
 * Determines whether to use the custom matchers or the product feed attribute "repricing_rule_id" to specify offer-rule mapping.
 */
export enum RepricingRuleEligibleOfferMatcherMatcherOptionEnum {
  MatcherOptionUnspecified = "MATCHER_OPTION_UNSPECIFIED",
  MatcherOptionCustomFilter = "MATCHER_OPTION_CUSTOM_FILTER",
  MatcherOptionUseFeedAttribute = "MATCHER_OPTION_USE_FEED_ATTRIBUTE",
  MatcherOptionAllProducts = "MATCHER_OPTION_ALL_PRODUCTS",
}

/**
 * Matcher that specifies eligible offers. When the USE_FEED_ATTRIBUTE option is selected, only the repricing_rule_id attribute on the product feed is used to specify offer-rule mapping. When the CUSTOM_FILTER option is selected, only the *_matcher fields are used to filter the offers for offer-rule mapping. If the CUSTOM_FILTER option is selected, an offer needs to satisfy each custom filter matcher to be eligible for a rule. Size limit: the sum of the number of entries in all the matchers should not exceed 20. For example, there can be 15 product ids and 5 brands, but not 10 product ids and 11 brands.
 */
export class RepricingRuleEligibleOfferMatcher extends SpeakeasyBase {
  /**
   * Matcher by string attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandMatcher" })
  @Type(() => RepricingRuleEligibleOfferMatcherStringMatcher)
  brandMatcher?: RepricingRuleEligibleOfferMatcherStringMatcher;

  /**
   * Matcher by string attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemGroupIdMatcher" })
  @Type(() => RepricingRuleEligibleOfferMatcherStringMatcher)
  itemGroupIdMatcher?: RepricingRuleEligibleOfferMatcherStringMatcher;

  /**
   * Determines whether to use the custom matchers or the product feed attribute "repricing_rule_id" to specify offer-rule mapping.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "matcherOption" })
  matcherOption?: RepricingRuleEligibleOfferMatcherMatcherOptionEnum;

  /**
   * Matcher by string attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offerIdMatcher" })
  @Type(() => RepricingRuleEligibleOfferMatcherStringMatcher)
  offerIdMatcher?: RepricingRuleEligibleOfferMatcherStringMatcher;

  /**
   * When true, the rule won't be applied to offers with active promotions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skipWhenOnPromotion" })
  skipWhenOnPromotion?: boolean;
}
