/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutClientsIdClientRequestBody extends SpeakeasyBase {
  /**
   * custom config about the client
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=config" })
  config?: string;

  /**
   * text to display as a default description
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=description" })
  description?: string;

  /**
   * text to display as a description for banks
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=description_banks" })
  descriptionBanks?: string;

  /**
   * text to display as a description for providers
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=description_providers" })
  descriptionProviders?: string;

  /**
   * set a rsa key pair for the client, which make it possible to generate a jwt user token using this client. No effect if the client already has a set of keys(default: False)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=generate_keys" })
  generateKeys?: boolean;

  /**
   * name of client
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;

  /**
   * hexadecimal code of the client primary color (e.g F45B9A)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=primary_color" })
  primaryColor?: string;

  /**
   * Wether the client should display the company manager page
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=pro" })
  pro?: boolean;

  /**
   * list of allowed redirect uris
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=redirect_uris" })
  redirectUris?: string;

  /**
   * hexadecimal code of the client secondary color (e.g F45B9A)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=secondary_color" })
  secondaryColor?: string;

  /**
   * reset the secret
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=secret" })
  secret?: boolean;

  /**
   * update the custom information about the client instead of replacing the existing one (default: True)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=update_config" })
  updateConfig?: boolean;
}

export class PutClientsIdClientRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PutClientsIdClientRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_client",
  })
  idClient: number;
}

export class PutClientsIdClientResponse extends SpeakeasyBase {
  /**
   * Successful PUT on Client resource
   */
  @SpeakeasyMetadata()
  client?: shared.Client;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
