// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisassociateApplicationFromEntitlementXAmzTargetEnum
type DisassociateApplicationFromEntitlementXAmzTargetEnum string

const (
	DisassociateApplicationFromEntitlementXAmzTargetEnumPhotonAdminProxyServiceDisassociateApplicationFromEntitlement DisassociateApplicationFromEntitlementXAmzTargetEnum = "PhotonAdminProxyService.DisassociateApplicationFromEntitlement"
)

func (e *DisassociateApplicationFromEntitlementXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PhotonAdminProxyService.DisassociateApplicationFromEntitlement":
		*e = DisassociateApplicationFromEntitlementXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateApplicationFromEntitlementXAmzTargetEnum: %s", s)
	}
}

type DisassociateApplicationFromEntitlementRequest struct {
	DisassociateApplicationFromEntitlementRequest shared.DisassociateApplicationFromEntitlementRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                *string                                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                      *string                                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                             *string                                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                    DisassociateApplicationFromEntitlementXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisassociateApplicationFromEntitlementResponse struct {
	ContentType string
	// Success
	DisassociateApplicationFromEntitlementResult map[string]interface{}
	// EntitlementNotFoundException
	EntitlementNotFoundException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
