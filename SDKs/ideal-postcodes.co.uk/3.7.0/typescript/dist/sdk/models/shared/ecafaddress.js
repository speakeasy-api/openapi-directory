"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcafAddress = exports.EcafAddressLanguageEnum = exports.EcafAddressDatasetEnum = exports.EcafAddressCountryIso2Enum = exports.EcafAddressCountryIsoEnum = exports.EcafAddressCountryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 *   Full country names (ISO 3166)
 *
 * @remarks
 *
 */
var EcafAddressCountryEnum;
(function (EcafAddressCountryEnum) {
    EcafAddressCountryEnum["Ireland"] = "Ireland";
})(EcafAddressCountryEnum = exports.EcafAddressCountryEnum || (exports.EcafAddressCountryEnum = {}));
/**
 *   3 letter country code (ISO 3166-1)
 *
 * @remarks
 *
 */
var EcafAddressCountryIsoEnum;
(function (EcafAddressCountryIsoEnum) {
    EcafAddressCountryIsoEnum["Irl"] = "IRL";
})(EcafAddressCountryIsoEnum = exports.EcafAddressCountryIsoEnum || (exports.EcafAddressCountryIsoEnum = {}));
/**
 *  2 letter country code (ISO 3166-1)
 *
 * @remarks
 *
 */
var EcafAddressCountryIso2Enum;
(function (EcafAddressCountryIso2Enum) {
    EcafAddressCountryIso2Enum["Ie"] = "IE";
})(EcafAddressCountryIso2Enum = exports.EcafAddressCountryIso2Enum || (exports.EcafAddressCountryIso2Enum = {}));
var EcafAddressDatasetEnum;
(function (EcafAddressDatasetEnum) {
    EcafAddressDatasetEnum["Ecaf"] = "ecaf";
})(EcafAddressDatasetEnum = exports.EcafAddressDatasetEnum || (exports.EcafAddressDatasetEnum = {}));
/**
 * Language represented by 2 letter ISO Code (639-1)
 *
 * @remarks
 *
 */
var EcafAddressLanguageEnum;
(function (EcafAddressLanguageEnum) {
    EcafAddressLanguageEnum["En"] = "en";
    EcafAddressLanguageEnum["Ga"] = "ga";
})(EcafAddressLanguageEnum = exports.EcafAddressLanguageEnum || (exports.EcafAddressLanguageEnum = {}));
/**
 * ECAF is the Eircode Address File which contains one record for each Postal Address. English language and Irish language versions are available. It is distributed as a flat file, details of data provision and updates are provided in section 2.
 */
var EcafAddress = /** @class */ (function (_super) {
    __extends(EcafAddress, _super);
    function EcafAddress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address_reference" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "addressReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "building_group" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "buildingGroup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "building_name" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "buildingName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "building_number" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "buildingNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country_iso" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "countryIso", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country_iso_2" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "countryIso2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dataset" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "dataset", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "department" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "department", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ecaf_id" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "ecafId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eircode" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "eircode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "language" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "language", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "latitude" }),
        __metadata("design:type", Object)
    ], EcafAddress.prototype, "latitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_1" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_2" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_3" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_4" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_5" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line5", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_6" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_7" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line7", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_8" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line8", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "line_9" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "line9", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "longitude" }),
        __metadata("design:type", Object)
    ], EcafAddress.prototype, "longitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "organisation" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "organisation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "post_county" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "postCounty", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "primary_locality" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "primaryLocality", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "primary_thoroughfare" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "primaryThoroughfare", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondary_locality" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "secondaryLocality", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondary_thoroughfare" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "secondaryThoroughfare", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sub_building_name" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "subBuildingName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tertiary_locality" }),
        __metadata("design:type", String)
    ], EcafAddress.prototype, "tertiaryLocality", void 0);
    return EcafAddress;
}(utils_1.SpeakeasyBase));
exports.EcafAddress = EcafAddress;
