// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateShortCodeServerList = []string{
	"https://api.twilio.com",
}

type UpdateShortCodeSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum - The HTTP method that we should use to call the `sms_fallback_url`. Can be: `GET` or `POST`.
type UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum string

const (
	UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnumHead   UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum = "HEAD"
	UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnumGet    UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum = "GET"
	UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnumPost   UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum = "POST"
	UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnumPatch  UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum = "PATCH"
	UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnumPut    UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum = "PUT"
	UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnumDelete UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum = "DELETE"
)

func (e *UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum: %s", s)
	}
}

// UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum - The HTTP method we should use when calling the `sms_url`. Can be: `GET` or `POST`.
type UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum string

const (
	UpdateShortCodeUpdateShortCodeRequestSmsMethodEnumHead   UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum = "HEAD"
	UpdateShortCodeUpdateShortCodeRequestSmsMethodEnumGet    UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum = "GET"
	UpdateShortCodeUpdateShortCodeRequestSmsMethodEnumPost   UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum = "POST"
	UpdateShortCodeUpdateShortCodeRequestSmsMethodEnumPatch  UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum = "PATCH"
	UpdateShortCodeUpdateShortCodeRequestSmsMethodEnumPut    UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum = "PUT"
	UpdateShortCodeUpdateShortCodeRequestSmsMethodEnumDelete UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum = "DELETE"
)

func (e *UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum: %s", s)
	}
}

type UpdateShortCodeUpdateShortCodeRequest struct {
	// The API version to use to start a new TwiML session. Can be: `2010-04-01` or `2008-08-01`.
	APIVersion *string `form:"name=ApiVersion"`
	// A descriptive string that you created to describe this resource. It can be up to 64 characters long. By default, the `FriendlyName` is the short code.
	FriendlyName *string `form:"name=FriendlyName"`
	// The HTTP method that we should use to call the `sms_fallback_url`. Can be: `GET` or `POST`.
	SmsFallbackMethod *UpdateShortCodeUpdateShortCodeRequestSmsFallbackMethodEnum `form:"name=SmsFallbackMethod"`
	// The URL that we should call if an error occurs while retrieving or executing the TwiML from `sms_url`.
	SmsFallbackURL *string `form:"name=SmsFallbackUrl"`
	// The HTTP method we should use when calling the `sms_url`. Can be: `GET` or `POST`.
	SmsMethod *UpdateShortCodeUpdateShortCodeRequestSmsMethodEnum `form:"name=SmsMethod"`
	// The URL we should call when receiving an incoming SMS message to this short code.
	SmsURL *string `form:"name=SmsUrl"`
}

type UpdateShortCodeRequest struct {
	// The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ShortCode resource(s) to update.
	AccountSid  string                                 `pathParam:"style=simple,explode=false,name=AccountSid"`
	RequestBody *UpdateShortCodeUpdateShortCodeRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The Twilio-provided string that uniquely identifies the ShortCode resource to update
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateShortCodeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	APIV2010AccountShortCode *shared.APIV2010AccountShortCode
}
