"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2fieldid as shared_googleprivacydlpv2fieldid
from ..shared import googleprivacydlpv2recordkey as shared_googleprivacydlpv2recordkey
from ..shared import googleprivacydlpv2tablelocation as shared_googleprivacydlpv2tablelocation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2RecordLocation:
    r"""Location of a finding within a row or record."""
    
    field_id: Optional[shared_googleprivacydlpv2fieldid.GooglePrivacyDlpV2FieldID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldId'), 'exclude': lambda f: f is None }})
    r"""General identifier of a data field in a storage service."""  
    record_key: Optional[shared_googleprivacydlpv2recordkey.GooglePrivacyDlpV2RecordKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recordKey'), 'exclude': lambda f: f is None }})
    r"""Message for a unique key indicating a record that contains a finding."""  
    table_location: Optional[shared_googleprivacydlpv2tablelocation.GooglePrivacyDlpV2TableLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableLocation'), 'exclude': lambda f: f is None }})
    r"""Location of a finding within a table."""  
    