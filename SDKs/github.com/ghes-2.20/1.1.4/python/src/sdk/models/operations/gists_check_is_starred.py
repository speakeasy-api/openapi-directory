"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from typing import Any, Optional


@dataclasses.dataclass
class GistsCheckIsStarredRequest:
    
    gist_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'gist_id', 'style': 'simple', 'explode': False }})
    r"""gist_id parameter"""  
    

@dataclasses.dataclass
class GistsCheckIsStarredResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Forbidden"""  
    gists_check_is_starred_404_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Not Found if gist is not starred"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    