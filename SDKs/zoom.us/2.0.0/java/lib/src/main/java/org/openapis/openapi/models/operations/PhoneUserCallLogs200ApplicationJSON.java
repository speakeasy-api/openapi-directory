/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PhoneUserCallLogs200ApplicationJSON - Phone User Call Logs
 */
public class PhoneUserCallLogs200ApplicationJSON {
    /**
     * Call Log
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_logs")
    public PhoneUserCallLogs200ApplicationJSONCallLogs[] callLogs;
    public PhoneUserCallLogs200ApplicationJSON withCallLogs(PhoneUserCallLogs200ApplicationJSONCallLogs[] callLogs) {
        this.callLogs = callLogs;
        return this;
    }
    
    /**
     * Date from which you would like to view the logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public String from;
    public PhoneUserCallLogs200ApplicationJSON withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_token")
    public String nextPageToken;
    public PhoneUserCallLogs200ApplicationJSON withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * Total number of pages
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_count")
    public Long pageCount;
    public PhoneUserCallLogs200ApplicationJSON withPageCount(Long pageCount) {
        this.pageCount = pageCount;
        return this;
    }
    
    /**
     * The number of records returned within a single API call for each page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public PhoneUserCallLogs200ApplicationJSON withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Date up to which you would like to view the phone log.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;
    public PhoneUserCallLogs200ApplicationJSON withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * The total number of records returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_records")
    public Long totalRecords;
    public PhoneUserCallLogs200ApplicationJSON withTotalRecords(Long totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }
    
}
