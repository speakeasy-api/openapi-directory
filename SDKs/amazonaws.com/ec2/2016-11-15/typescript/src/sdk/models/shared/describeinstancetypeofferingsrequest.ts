/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LocationTypeEnum } from "./locationtypeenum";

/**
 * <p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>
 */
export class DescribeInstanceTypeOfferingsRequestFilters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  values?: string[];
}

export class DescribeInstanceTypeOfferingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  dryRun?: boolean;

  @SpeakeasyMetadata({ elemType: DescribeInstanceTypeOfferingsRequestFilters })
  filters?: DescribeInstanceTypeOfferingsRequestFilters[];

  @SpeakeasyMetadata()
  locationType?: LocationTypeEnum;

  @SpeakeasyMetadata()
  maxResults?: number;

  @SpeakeasyMetadata()
  nextToken?: string;
}
