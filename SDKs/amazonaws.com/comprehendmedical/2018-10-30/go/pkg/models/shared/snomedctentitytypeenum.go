// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SNOMEDCTEntityTypeEnum string

const (
	SNOMEDCTEntityTypeEnumDxName        SNOMEDCTEntityTypeEnum = "DX_NAME"
	SNOMEDCTEntityTypeEnumTestName      SNOMEDCTEntityTypeEnum = "TEST_NAME"
	SNOMEDCTEntityTypeEnumProcedureName SNOMEDCTEntityTypeEnum = "PROCEDURE_NAME"
	SNOMEDCTEntityTypeEnumTreatmentName SNOMEDCTEntityTypeEnum = "TREATMENT_NAME"
)

func (e SNOMEDCTEntityTypeEnum) ToPointer() *SNOMEDCTEntityTypeEnum {
	return &e
}

func (e *SNOMEDCTEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DX_NAME":
		fallthrough
	case "TEST_NAME":
		fallthrough
	case "PROCEDURE_NAME":
		fallthrough
	case "TREATMENT_NAME":
		*e = SNOMEDCTEntityTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SNOMEDCTEntityTypeEnum: %v", v)
	}
}
