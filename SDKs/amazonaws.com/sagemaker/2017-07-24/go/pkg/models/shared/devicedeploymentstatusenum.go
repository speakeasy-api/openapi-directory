// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeviceDeploymentStatusEnum string

const (
	DeviceDeploymentStatusEnumReadytodeploy DeviceDeploymentStatusEnum = "READYTODEPLOY"
	DeviceDeploymentStatusEnumInprogress    DeviceDeploymentStatusEnum = "INPROGRESS"
	DeviceDeploymentStatusEnumDeployed      DeviceDeploymentStatusEnum = "DEPLOYED"
	DeviceDeploymentStatusEnumFailed        DeviceDeploymentStatusEnum = "FAILED"
	DeviceDeploymentStatusEnumStopping      DeviceDeploymentStatusEnum = "STOPPING"
	DeviceDeploymentStatusEnumStopped       DeviceDeploymentStatusEnum = "STOPPED"
)

func (e DeviceDeploymentStatusEnum) ToPointer() *DeviceDeploymentStatusEnum {
	return &e
}

func (e *DeviceDeploymentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "READYTODEPLOY":
		fallthrough
	case "INPROGRESS":
		fallthrough
	case "DEPLOYED":
		fallthrough
	case "FAILED":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		*e = DeviceDeploymentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceDeploymentStatusEnum: %v", v)
	}
}
