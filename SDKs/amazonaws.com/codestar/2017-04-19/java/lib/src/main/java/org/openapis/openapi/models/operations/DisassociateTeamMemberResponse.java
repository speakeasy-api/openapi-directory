/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DisassociateTeamMemberResponse {
    /**
     * ConcurrentModificationException
     */
    
    public Object concurrentModificationException;

    public DisassociateTeamMemberResponse withConcurrentModificationException(Object concurrentModificationException) {
        this.concurrentModificationException = concurrentModificationException;
        return this;
    }
    
    
    public String contentType;

    public DisassociateTeamMemberResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> disassociateTeamMemberResult;

    public DisassociateTeamMemberResponse withDisassociateTeamMemberResult(java.util.Map<String, Object> disassociateTeamMemberResult) {
        this.disassociateTeamMemberResult = disassociateTeamMemberResult;
        return this;
    }
    
    /**
     * InvalidServiceRoleException
     */
    
    public Object invalidServiceRoleException;

    public DisassociateTeamMemberResponse withInvalidServiceRoleException(Object invalidServiceRoleException) {
        this.invalidServiceRoleException = invalidServiceRoleException;
        return this;
    }
    
    /**
     * ProjectNotFoundException
     */
    
    public Object projectNotFoundException;

    public DisassociateTeamMemberResponse withProjectNotFoundException(Object projectNotFoundException) {
        this.projectNotFoundException = projectNotFoundException;
        return this;
    }
    
    
    public Integer statusCode;

    public DisassociateTeamMemberResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DisassociateTeamMemberResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;

    public DisassociateTeamMemberResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
    public DisassociateTeamMemberResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
