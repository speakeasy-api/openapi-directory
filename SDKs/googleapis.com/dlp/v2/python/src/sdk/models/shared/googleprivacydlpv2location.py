"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2container as shared_googleprivacydlpv2container
from ..shared import googleprivacydlpv2contentlocation as shared_googleprivacydlpv2contentlocation
from ..shared import googleprivacydlpv2range as shared_googleprivacydlpv2range
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2Location:
    r"""Specifies the location of the finding."""
    
    byte_range: Optional[shared_googleprivacydlpv2range.GooglePrivacyDlpV2Range] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('byteRange'), 'exclude': lambda f: f is None }})
    r"""Generic half-open interval [start, end)"""  
    codepoint_range: Optional[shared_googleprivacydlpv2range.GooglePrivacyDlpV2Range] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('codepointRange'), 'exclude': lambda f: f is None }})
    r"""Generic half-open interval [start, end)"""  
    container: Optional[shared_googleprivacydlpv2container.GooglePrivacyDlpV2Container] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('container'), 'exclude': lambda f: f is None }})
    r"""Represents a container that may contain DLP findings. Examples of a container include a file, table, or database record."""  
    content_locations: Optional[list[shared_googleprivacydlpv2contentlocation.GooglePrivacyDlpV2ContentLocation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentLocations'), 'exclude': lambda f: f is None }})
    r"""List of nested objects pointing to the precise location of the finding within the file or record."""  
    