/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The category of the node, as selected by project contributors.
 */
export enum NodesChildrenCreateNodeAttributesCategoryEnum {
  Analysis = "analysis",
  Communication = "communication",
  Data = "data",
  Hypothesis = "hypothesis",
  Instrumentation = "instrumentation",
  MethodsAndMeasures = "methods and measures",
  Procedure = "procedure",
  Project = "project",
  Software = "software",
  Other = "other",
}

/**
 * The properties of the node entity.
 */
export class NodesChildrenCreateNodeAttributesInput extends SpeakeasyBase {
  /**
   * The category of the node, as selected by project contributors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category: NodesChildrenCreateNodeAttributesCategoryEnum;

  /**
   * The description of the node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A dictionary containing the metadata (copyright year and holder) associated with the node license (required for certain license types).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "node_license" })
  nodeLicense?: string;

  /**
   * Whether or not the node is publicly visible. This field is only editable by project administrators.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public" })
  public?: boolean;

  /**
   * A list of strings that describe this node, as entered by project contributors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * The unique ID of the node from which this node was templated, if this node was created from a template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template_from" })
  templateFrom?: string;

  /**
   * The title of the node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}

export class NodesChildrenCreateNodeInput extends SpeakeasyBase {
  /**
   * The properties of the node entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => NodesChildrenCreateNodeAttributesInput)
  attributes: NodesChildrenCreateNodeAttributesInput;

  /**
   * The type identifier of the node entity (`nodes`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class NodesChildrenCreateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: NodesChildrenCreateNodeInput;

  /**
   * The unique identifier of the node.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=node_id",
  })
  nodeId: string;
}

export class NodesChildrenCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
