"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class PricingConfiguration:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_pricing_config(self, request: operations.GetPricingConfigRequest, server_url: Optional[str] = None) -> operations.GetPricingConfigResponse:
        r"""Get Pricing Configuration
        Retrieves Pricing Configuration.
        ## Response body example
        
        ```json
        {
            \"hasMigrated\": true,
            \"migrationStatus\": \"Completed\",
            \"defaultMarkup\": 100,
            \"priceVariation\": {
                \"upperLimit\": null,
                \"lowerLimit\": null
            },
            \"minimumMarkups\": {
                \"1\": 100,
                \"2\": 90
            },
            \"tradePolicyConfigs\": [],
            \"sellersToOverride\": [],
            \"hasPriceInheritance\": false,
            \"priceInheritance\": \"never\",
            \"hasOptionalBasePrice\": false,
            \"blockAccount\": false,
            \"blockedRoutes\": null,
            \"priceTableSelectionStrategy\": \"first\",
            \"priceTableLimit\": null
        }
        ```
        """
        base_url = operations.GET_PRICING_CONFIG_SERVERS[0]
        if server_url is not None:
            base_url = server_url
        
        url = base_url.removesuffix('/') + '/pricing/config'
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetPricingConfigResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.PricingConfiguration])
                res.pricing_configuration = out

        return res

    def get_pricingv2_status(self, request: operations.GetPricingv2StatusRequest, server_url: Optional[str] = None) -> operations.GetPricingv2StatusResponse:
        r"""Get Pricing v2 Status
        Retrieves Pricing v2 Status. 
        ## Response body example
        
        ```json
        {
            \"isActive\": true,
            \"hasMigrated\": true
        }
        ```
        """
        base_url = operations.GET_PRICINGV2_STATUS_SERVERS[0]
        if server_url is not None:
            base_url = server_url
        
        url = base_url.removesuffix('/') + '/pricing/migration'
        
        headers = utils.get_headers(request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetPricingv2StatusResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            res.headers = http_res.headers
            
            if utils.match_content_type(content_type, 'application/json; charset=utf-8'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetPricingv2Status200ApplicationJSON])
                res.get_pricingv2_status_200_application_json_object = out

        return res

    