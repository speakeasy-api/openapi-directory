// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuthConfigTemplateAuthTypeEnum - The type of authentication configured.
type AuthConfigTemplateAuthTypeEnum string

const (
	AuthConfigTemplateAuthTypeEnumAuthTypeUnspecified     AuthConfigTemplateAuthTypeEnum = "AUTH_TYPE_UNSPECIFIED"
	AuthConfigTemplateAuthTypeEnumUserPassword            AuthConfigTemplateAuthTypeEnum = "USER_PASSWORD"
	AuthConfigTemplateAuthTypeEnumOauth2JwtBearer         AuthConfigTemplateAuthTypeEnum = "OAUTH2_JWT_BEARER"
	AuthConfigTemplateAuthTypeEnumOauth2ClientCredentials AuthConfigTemplateAuthTypeEnum = "OAUTH2_CLIENT_CREDENTIALS"
	AuthConfigTemplateAuthTypeEnumSSHPublicKey            AuthConfigTemplateAuthTypeEnum = "SSH_PUBLIC_KEY"
	AuthConfigTemplateAuthTypeEnumOauth2AuthCodeFlow      AuthConfigTemplateAuthTypeEnum = "OAUTH2_AUTH_CODE_FLOW"
)

func (e AuthConfigTemplateAuthTypeEnum) ToPointer() *AuthConfigTemplateAuthTypeEnum {
	return &e
}

func (e *AuthConfigTemplateAuthTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AUTH_TYPE_UNSPECIFIED":
		fallthrough
	case "USER_PASSWORD":
		fallthrough
	case "OAUTH2_JWT_BEARER":
		fallthrough
	case "OAUTH2_CLIENT_CREDENTIALS":
		fallthrough
	case "SSH_PUBLIC_KEY":
		fallthrough
	case "OAUTH2_AUTH_CODE_FLOW":
		*e = AuthConfigTemplateAuthTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthConfigTemplateAuthTypeEnum: %v", v)
	}
}

// AuthConfigTemplate - AuthConfigTemplate defines required field over an authentication type.
type AuthConfigTemplate struct {
	// Identifier key for auth config
	AuthKey *string `json:"authKey,omitempty"`
	// The type of authentication configured.
	AuthType *AuthConfigTemplateAuthTypeEnum `json:"authType,omitempty"`
	// Config variables to describe an `AuthConfig` for a `Connection`.
	ConfigVariableTemplates []ConfigVariableTemplate `json:"configVariableTemplates,omitempty"`
	// Connector specific description for an authentication template.
	Description *string `json:"description,omitempty"`
	// Display name for authentication template.
	DisplayName *string `json:"displayName,omitempty"`
}
