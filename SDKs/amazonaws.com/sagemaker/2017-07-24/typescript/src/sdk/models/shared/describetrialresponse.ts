/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetadataProperties } from "./metadataproperties";
import { TrialSource } from "./trialsource";
import { UserContext } from "./usercontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeTrialResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  @Type(() => UserContext)
  createdBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentName" })
  experimentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBy" })
  @Type(() => UserContext)
  lastModifiedBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  /**
   * Metadata properties of the tracking entity, trial, or trial component.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MetadataProperties" })
  @Type(() => MetadataProperties)
  metadataProperties?: MetadataProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  @Type(() => TrialSource)
  source?: TrialSource;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialArn" })
  trialArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TrialName" })
  trialName?: string;
}
