/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SegmentMetricFilter - Metric filter to be used in a segment filter clause.
 */
public class SegmentMetricFilter {
    /**
     * The value to compare against. If the operator is `BETWEEN`, this value is treated as minimum comparison value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comparisonValue")
    public String comparisonValue;

    public SegmentMetricFilter withComparisonValue(String comparisonValue) {
        this.comparisonValue = comparisonValue;
        return this;
    }
    
    /**
     * Max comparison value is only used for `BETWEEN` operator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxComparisonValue")
    public String maxComparisonValue;

    public SegmentMetricFilter withMaxComparisonValue(String maxComparisonValue) {
        this.maxComparisonValue = maxComparisonValue;
        return this;
    }
    
    /**
     * The metric that will be filtered on. A `metricFilter` must contain a metric name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metricName")
    public String metricName;

    public SegmentMetricFilter withMetricName(String metricName) {
        this.metricName = metricName;
        return this;
    }
    
    /**
     * Specifies is the operation to perform to compare the metric. The default is `EQUAL`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public SegmentMetricFilterOperatorEnum operator;

    public SegmentMetricFilter withOperator(SegmentMetricFilterOperatorEnum operator) {
        this.operator = operator;
        return this;
    }
    
    /**
     * Scope for a metric defines the level at which that metric is defined. The specified metric scope must be equal to or greater than its primary scope as defined in the data model. The primary scope is defined by if the segment is selecting users or sessions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public SegmentMetricFilterScopeEnum scope;

    public SegmentMetricFilter withScope(SegmentMetricFilterScopeEnum scope) {
        this.scope = scope;
        return this;
    }
    
    public SegmentMetricFilter(){}
}
