"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import acceptedpaymentv3 as shared_acceptedpaymentv3
from ..shared import payoutschedulev3 as shared_payoutschedulev3
from ..shared import quotefxsummaryv3 as shared_quotefxsummaryv3
from ..shared import rejectedpaymentv3 as shared_rejectedpaymentv3
from ..shared import sourceaccountv3 as shared_sourceaccountv3
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayoutSummaryResponseV3:
    r"""Details of Payout"""
    
    accepted_payments: list[shared_acceptedpaymentv3.AcceptedPaymentV3] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceptedPayments') }})  
    accounts: list[shared_sourceaccountv3.SourceAccountV3] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounts') }})  
    fx_summaries: list[shared_quotefxsummaryv3.QuoteFxSummaryV3] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fxSummaries') }})  
    payments_withdrawn: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentsWithdrawn') }})
    r"""The number of payments that were withdrawn in the payout"""  
    rejected_payments: list[shared_rejectedpaymentv3.RejectedPaymentV3] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rejectedPayments') }})  
    payments_accepted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentsAccepted'), 'exclude': lambda f: f is None }})
    r"""The number of payments that were accepted in the payout"""  
    payments_rejected: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentsRejected'), 'exclude': lambda f: f is None }})
    r"""The number of payments that were rejected in the payout"""  
    payments_submitted: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentsSubmitted'), 'exclude': lambda f: f is None }})
    r"""The number of payments that were submitted in the payout"""  
    payout_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payoutId'), 'exclude': lambda f: f is None }})
    r"""The id of the payout"""  
    schedule: Optional[shared_payoutschedulev3.PayoutScheduleV3] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedule'), 'exclude': lambda f: f is None }})
    r"""Details relating to a payout that was executed via a schedule or is still waiting to be executed"""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the payout (one of SUBMITTED, ACCEPTED, REJECTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, WITHDRAWN)"""  
    