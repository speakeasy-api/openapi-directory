/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PackageLanguageRequest {
    /**
     * If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=async")
    public Long async;

    public PackageLanguageRequest withAsync(Long async) {
        this.async = async;
        return this;
    }
    
    /**
     * Project ID
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public Long id;

    public PackageLanguageRequest withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Language code. You can package the translation of only a specific language.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=language")
    public String language;

    public PackageLanguageRequest withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    public PackageLanguageRequest(@JsonProperty("id") Long id, @JsonProperty("language") String language) {
        this.id = id;
        this.language = language;
  }
}
