/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRunV2Execution - Execution represents the configuration of a single execution. A execution an immutable resource that references a container image which is run to completion.
 */
public class GoogleCloudRunV2Execution {
    /**
     * Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public GoogleCloudRunV2Execution withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Output only. The number of tasks which reached phase Cancelled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cancelledCount")
    public Integer cancelledCount;

    public GoogleCloudRunV2Execution withCancelledCount(Integer cancelledCount) {
        this.cancelledCount = cancelledCount;
        return this;
    }
    
    /**
     * Output only. Represents time when the execution was completed. It is not guaranteed to be set in happens-before order across separate operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completionTime")
    public String completionTime;

    public GoogleCloudRunV2Execution withCompletionTime(String completionTime) {
        this.completionTime = completionTime;
        return this;
    }
    
    /**
     * Output only. The Condition of this Execution, containing its readiness status, and detailed error information in case it did not reach the desired state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public GoogleCloudRunV2Condition[] conditions;

    public GoogleCloudRunV2Execution withConditions(GoogleCloudRunV2Condition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Output only. Represents time when the execution was acknowledged by the execution controller. It is not guaranteed to be set in happens-before order across separate operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public GoogleCloudRunV2Execution withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;

    public GoogleCloudRunV2Execution withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleCloudRunV2Execution withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireTime")
    public String expireTime;

    public GoogleCloudRunV2Execution withExpireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * Output only. The number of tasks which reached phase Failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedCount")
    public Integer failedCount;

    public GoogleCloudRunV2Execution withFailedCount(Integer failedCount) {
        this.failedCount = failedCount;
        return this;
    }
    
    /**
     * Output only. A number that monotonically increases every time the user modifies the desired state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("generation")
    public String generation;

    public GoogleCloudRunV2Execution withGeneration(String generation) {
        this.generation = generation;
        return this;
    }
    
    /**
     * Output only. The name of the parent Job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job")
    public String job;

    public GoogleCloudRunV2Execution withJob(String job) {
        this.job = job;
        return this;
    }
    
    /**
     * Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GoogleCloudRunV2Execution withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The least stable launch stage needed to create this resource, as defined by [Google Cloud Platform Launch Stages](https://cloud.google.com/terms/launch-stages). Cloud Run supports `ALPHA`, `BETA`, and `GA`. Note that this value might not be what was used as input. For example, if ALPHA was provided as input in the parent resource, but only BETA and GA-level features are were, this field will be BETA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchStage")
    public GoogleCloudRunV2ExecutionLaunchStageEnum launchStage;

    public GoogleCloudRunV2Execution withLaunchStage(GoogleCloudRunV2ExecutionLaunchStageEnum launchStage) {
        this.launchStage = launchStage;
        return this;
    }
    
    /**
     * Output only. URI where logs for this execution can be found in Cloud Console.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logUri")
    public String logUri;

    public GoogleCloudRunV2Execution withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    /**
     * Output only. The unique name of this Execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudRunV2Execution withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The generation of this Execution. See comments in `reconciling` for additional information on reconciliation process in Cloud Run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("observedGeneration")
    public String observedGeneration;

    public GoogleCloudRunV2Execution withObservedGeneration(String observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }
    
    /**
     * Output only. Specifies the maximum desired number of tasks the execution should run at any given time. Must be &lt;= task_count. The actual number of tasks running in steady state will be less than this number when ((.spec.task_count - .status.successful) &lt; .spec.parallelism), i.e. when the work left to do is less than max parallelism.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parallelism")
    public Integer parallelism;

    public GoogleCloudRunV2Execution withParallelism(Integer parallelism) {
        this.parallelism = parallelism;
        return this;
    }
    
    /**
     * Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reconciling")
    public Boolean reconciling;

    public GoogleCloudRunV2Execution withReconciling(Boolean reconciling) {
        this.reconciling = reconciling;
        return this;
    }
    
    /**
     * Output only. The number of tasks which have retried at least once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retriedCount")
    public Integer retriedCount;

    public GoogleCloudRunV2Execution withRetriedCount(Integer retriedCount) {
        this.retriedCount = retriedCount;
        return this;
    }
    
    /**
     * Output only. The number of actively running tasks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runningCount")
    public Integer runningCount;

    public GoogleCloudRunV2Execution withRunningCount(Integer runningCount) {
        this.runningCount = runningCount;
        return this;
    }
    
    /**
     * Output only. Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;

    public GoogleCloudRunV2Execution withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * Output only. Represents time when the execution started to run. It is not guaranteed to be set in happens-before order across separate operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public GoogleCloudRunV2Execution withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Output only. The number of tasks which reached phase Succeeded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("succeededCount")
    public Integer succeededCount;

    public GoogleCloudRunV2Execution withSucceededCount(Integer succeededCount) {
        this.succeededCount = succeededCount;
        return this;
    }
    
    /**
     * Output only. Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskCount")
    public Integer taskCount;

    public GoogleCloudRunV2Execution withTaskCount(Integer taskCount) {
        this.taskCount = taskCount;
        return this;
    }
    
    /**
     * TaskTemplate describes the data a task should have when created from a template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    public GoogleCloudRunV2TaskTemplate template;

    public GoogleCloudRunV2Execution withTemplate(GoogleCloudRunV2TaskTemplate template) {
        this.template = template;
        return this;
    }
    
    /**
     * Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public GoogleCloudRunV2Execution withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The last-modified time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public GoogleCloudRunV2Execution withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public GoogleCloudRunV2Execution(){}
}
