<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class RatesPerDate
{
    /**
     * Determines whether the rate is available for a stay including this date.
     * 
     * @var bool $closed
     */
	#[\JMS\Serializer\Annotation\SerializedName('closed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $closed;
    
    /**
     * Determines whether the rate is available if the arrival falls on this date.
     * 
     * @var ?bool $closedToArrival
     */
	#[\JMS\Serializer\Annotation\SerializedName('closedToArrival')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $closedToArrival = null;
    
    /**
     * Determines whether the rate is available if the departure falls on this date.
     * 
     * @var ?bool $closedToDeparture
     */
	#[\JMS\Serializer\Annotation\SerializedName('closedToDeparture')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $closedToDeparture = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $date;
    
    /**
     * Rate prices for each occupancy the room can accommodate.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\RatePlanRate> $rates
     */
	#[\JMS\Serializer\Annotation\SerializedName('rates')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RatePlanRate>')]
    public array $rates;
    
    /**
     * The minimum number of nights (inclusive) that the guest has to book which include the date to be eligible for this rate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RatesPerDateStaythrough $staythrough
     */
	#[\JMS\Serializer\Annotation\SerializedName('staythrough')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RatesPerDateStaythrough')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RatesPerDateStaythrough $staythrough = null;
    
	public function __construct()
	{
		$this->closed = false;
		$this->closedToArrival = null;
		$this->closedToDeparture = null;
		$this->date = "";
		$this->rates = [];
		$this->staythrough = null;
	}
}
