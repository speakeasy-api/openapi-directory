/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PatchFilter - &lt;p&gt; Defines which patches should be included in a patch baseline.&lt;/p&gt; &lt;p&gt;A patch filter consists of a key and a set of values. The filter key is a patch property. For example, the available filter keys for &lt;code&gt;WINDOWS&lt;/code&gt; are &lt;code&gt;PATCH_SET&lt;/code&gt;, &lt;code&gt;PRODUCT&lt;/code&gt;, &lt;code&gt;PRODUCT_FAMILY&lt;/code&gt;, &lt;code&gt;CLASSIFICATION&lt;/code&gt;, and &lt;code&gt;MSRC_SEVERITY&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The filter values define a matching criterion for the patch property indicated by the key. For example, if the filter key is &lt;code&gt;PRODUCT&lt;/code&gt; and the filter values are &lt;code&gt;["Office 2013", "Office 2016"]&lt;/code&gt;, then the filter accepts all patches where product name is either "Office 2013" or "Office 2016". The filter values can be exact values for the patch property given as a key, or a wildcard (*), which matches all values.&lt;/p&gt; &lt;p&gt;You can view lists of valid values for the patch properties by running the &lt;code&gt;DescribePatchProperties&lt;/code&gt; command. For information about which patch properties can be used with each major operating system, see &lt;a&gt;DescribePatchProperties&lt;/a&gt;.&lt;/p&gt;
 */
public class PatchFilter {
    @JsonProperty("Key")
    public PatchFilterKeyEnum key;

    public PatchFilter withKey(PatchFilterKeyEnum key) {
        this.key = key;
        return this;
    }
    
    @JsonProperty("Values")
    public String[] values;

    public PatchFilter withValues(String[] values) {
        this.values = values;
        return this;
    }
    
    public PatchFilter(@JsonProperty("Key") PatchFilterKeyEnum key, @JsonProperty("Values") String[] values) {
        this.key = key;
        this.values = values;
  }
}
