"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DataSubjectRightDeleteStatusRequestSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class DataSubjectRightDeleteStatusRequestRequest:
    
    email: str = dataclasses.field(metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""Email used for delete with x-authz-bypass headers"""  
    token: str = dataclasses.field(metadata={'path_param': { 'field_name': 'token', 'style': 'simple', 'explode': False }})
    r"""Unique request ID (GUID)"""  
    
class DataSubjectRightDeleteStatusRequestDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightDeleteStatusRequestDefaultApplicationJSONError:
    
    code: DataSubjectRightDeleteStatusRequestDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightDeleteStatusRequestDefaultApplicationJSON:
    r"""Error code with reason"""
    
    error: DataSubjectRightDeleteStatusRequestDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    
class DataSubjectRightDeleteStatusRequest200ApplicationJSONStatusEnum(str, Enum):
    r"""Status of data subject right request"""
    NONE = 'None'
    CREATED = 'Created'
    QUEUED = 'Queued'
    IN_PROGRESS = 'InProgress'
    COMPLETED = 'Completed'
    FAILED = 'Failed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataSubjectRightDeleteStatusRequest200ApplicationJSON:
    r"""Data subject right delete request status successfully retrieved."""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""explanation message of the status"""  
    status: DataSubjectRightDeleteStatusRequest200ApplicationJSONStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status of data subject right request"""  
    sas_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sasUrl'), 'exclude': lambda f: f is None }})
    r"""Azure Storage shared access signature (SAS) URL for exported user data."""  
    sas_url_expired: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sasUrlExpired'), 'exclude': lambda f: f is None }})
    r"""Whether Azure Storage shared access signature (SAS) URL has expired or not."""  
    

@dataclasses.dataclass
class DataSubjectRightDeleteStatusRequestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    data_subject_right_delete_status_request_200_application_json_object: Optional[DataSubjectRightDeleteStatusRequest200ApplicationJSON] = dataclasses.field(default=None)
    r"""Data subject right delete request status successfully retrieved."""  
    data_subject_right_delete_status_request_default_application_json_object: Optional[DataSubjectRightDeleteStatusRequestDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error code with reason"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    