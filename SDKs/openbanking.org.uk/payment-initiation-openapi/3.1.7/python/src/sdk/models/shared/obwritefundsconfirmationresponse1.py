"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import links as shared_links
from ..shared import meta as shared_meta
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWriteFundsConfirmationResponse1DataFundsAvailableResult:
    r"""Result of a funds availability check."""
    
    funds_available: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FundsAvailable') }})
    r"""Flag to indicate the availability of funds given the Amount in the consent request."""  
    funds_available_date_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FundsAvailableDateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date and time at which the funds availability check was generated.All dates in the JSON payloads are represented in ISO 8601 date-time format.
    All date-time fields in responses must include the timezone. An example is below:
    2017-04-05T10:43:07+00:00
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWriteFundsConfirmationResponse1Data:
    
    funds_available_result: Optional[OBWriteFundsConfirmationResponse1DataFundsAvailableResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FundsAvailableResult'), 'exclude': lambda f: f is None }})
    r"""Result of a funds availability check."""  
    supplementary_data: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SupplementaryData'), 'exclude': lambda f: f is None }})
    r"""Additional information that can not be captured in the structured fields and/or any other specific block."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OBWriteFundsConfirmationResponse1:
    r"""Domestic Payment Consents Read"""
    
    data: OBWriteFundsConfirmationResponse1Data = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Data') }})  
    links: Optional[shared_links.Links] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Links'), 'exclude': lambda f: f is None }})
    r"""Links relevant to the payload"""  
    meta: Optional[shared_meta.Meta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Meta'), 'exclude': lambda f: f is None }})
    r"""Meta Data relevant to the payload"""  
    