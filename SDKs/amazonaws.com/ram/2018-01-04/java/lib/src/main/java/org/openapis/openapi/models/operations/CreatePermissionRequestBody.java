/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreatePermissionRequestBody {
    /**
     * &lt;p&gt;Specifies a unique, case-sensitive identifier that you provide to ensure the idempotency of the request. This lets you safely retry the request without accidentally performing the same operation a second time. Passing the same value to a later call to an operation requires that you also pass the same value for all other parameters. We recommend that you use a &lt;a href="https://wikipedia.org/wiki/Universally_unique_identifier"&gt;UUID type of value.&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;If you don't provide this value, then Amazon Web Services generates a random one for you.&lt;/p&gt; &lt;p&gt;If you retry the operation with the same &lt;code&gt;ClientToken&lt;/code&gt;, but with different parameters, the retry fails with an &lt;code&gt;IdempotentParameterMismatch&lt;/code&gt; error.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public CreatePermissionRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * Specifies the name of the customer managed permission. The name must be unique within the Amazon Web Services Region.
     */
    @JsonProperty("name")
    public String name;

    public CreatePermissionRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * &lt;p&gt;A string in JSON format string that contains the following elements of a resource-based policy:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Effect&lt;/b&gt;: must be set to &lt;code&gt;ALLOW&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Action&lt;/b&gt;: specifies the actions that are allowed by this customer managed permission. The list must contain only actions that are supported by the specified resource type. For a list of all actions supported by each resource type, see &lt;a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html"&gt;Actions, resources, and condition keys for Amazon Web Services services&lt;/a&gt; in the &lt;i&gt;Identity and Access Management User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;Condition&lt;/b&gt;: (optional) specifies conditional parameters that must evaluate to true when a user attempts an action for that action to be allowed. For more information about the Condition element, see &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html"&gt;IAM policies: Condition element&lt;/a&gt; in the &lt;i&gt;Identity and Access Management User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;This template can't include either the &lt;code&gt;Resource&lt;/code&gt; or &lt;code&gt;Principal&lt;/code&gt; elements. Those are both filled in by RAM when it instantiates the resource-based policy on each resource shared using this managed permission. The &lt;code&gt;Resource&lt;/code&gt; comes from the ARN of the specific resource that you are sharing. The &lt;code&gt;Principal&lt;/code&gt; comes from the list of identities added to the resource share.&lt;/p&gt;
     */
    @JsonProperty("policyTemplate")
    public String policyTemplate;

    public CreatePermissionRequestBody withPolicyTemplate(String policyTemplate) {
        this.policyTemplate = policyTemplate;
        return this;
    }
    
    /**
     * &lt;p&gt;Specifies the name of the resource type that this customer managed permission applies to.&lt;/p&gt; &lt;p&gt;The format is &lt;code&gt; &lt;i&gt;&amp;lt;service-code&amp;gt;&lt;/i&gt;:&lt;i&gt;&amp;lt;resource-type&amp;gt;&lt;/i&gt; &lt;/code&gt; and is not case sensitive. For example, to specify an Amazon EC2 Subnet, you can use the string &lt;code&gt;ec2:subnet&lt;/code&gt;. To see the list of valid values for this parameter, query the &lt;a&gt;ListResourceTypes&lt;/a&gt; operation.&lt;/p&gt;
     */
    @JsonProperty("resourceType")
    public String resourceType;

    public CreatePermissionRequestBody withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    /**
     * Specifies a list of one or more tag key and value pairs to attach to the permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public org.openapis.openapi.models.shared.Tag[] tags;

    public CreatePermissionRequestBody withTags(org.openapis.openapi.models.shared.Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    public CreatePermissionRequestBody(@JsonProperty("name") String name, @JsonProperty("policyTemplate") String policyTemplate, @JsonProperty("resourceType") String resourceType) {
        this.name = name;
        this.policyTemplate = policyTemplate;
        this.resourceType = resourceType;
  }
}
