/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Status } from "./status";
import { Expose, Transform } from "class-transformer";

/**
 * Response to batch undelete operation on alerts.
 */
export class BatchUndeleteAlertsResponse extends SpeakeasyBase {
  /**
   * The status details for each failed `alert_id`.
   */
  @SpeakeasyMetadata({ elemType: Status })
  @Expose({ name: "failedAlertStatus" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Status> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], Status);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  failedAlertStatus?: Record<string, Status>;

  /**
   * The successful list of alert IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "successAlertIds" })
  successAlertIds?: string[];
}
