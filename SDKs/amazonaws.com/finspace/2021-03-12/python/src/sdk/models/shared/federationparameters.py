"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FederationParameters:
    r"""Configuration information when authentication mode is FEDERATED."""
    
    application_call_back_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationCallBackURL'), 'exclude': lambda f: f is None }})  
    attribute_map: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributeMap'), 'exclude': lambda f: f is None }})  
    federation_provider_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('federationProviderName'), 'exclude': lambda f: f is None }})  
    federation_urn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('federationURN'), 'exclude': lambda f: f is None }})  
    saml_metadata_document: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('samlMetadataDocument'), 'exclude': lambda f: f is None }})  
    saml_metadata_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('samlMetadataURL'), 'exclude': lambda f: f is None }})  
    