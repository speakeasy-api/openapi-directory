/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Edit } from "./edit";
import { Expose, Type } from "class-transformer";

/**
 * The status of the render task. <ul>
 *
 * @remarks
 *   <li>`queued` - render is queued waiting to be rendered</li>
 *   <li>`fetching` - assets are being fetched</li>
 *   <li>`rendering` - the asset is being rendered</li>
 *   <li>`saving` - the final asset is being saved to storage</li>
 *   <li>`done` - the asset is ready to be downloaded</li>
 *   <li>`failed` - there was an error rendering the asset</li>
 * </ul>
 */
export enum RenderResponseDataStatusEnum {
  Queued = "queued",
  Fetching = "fetching",
  Rendering = "rendering",
  Saving = "saving",
  Done = "done",
  Failed = "failed",
}

/**
 * The response data returned with the [RenderResponse](#tocs_renderresponse) including status and URL.
 */
export class RenderResponseData extends SpeakeasyBase {
  /**
   * The time the render task was initially queued.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created: string;

  /**
   * An edit defines the arrangement of a video on a timeline, an audio edit or an image design and the output format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => Edit)
  data: Edit;

  /**
   * The output video or audio length in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * An error message, only displayed if an error occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  /**
   * The id of the render task in UUID format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The owner id of the render task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner: string;

  /**
   * The customer subscription plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  plan?: string;

  /**
   * The URL of the poster image if requested. This will only be available if status is done.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "poster" })
  poster?: string;

  /**
   * The time taken to render the asset in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "renderTime" })
  renderTime?: number;

  /**
   * The status of the render task. <ul>
   *
   * @remarks
   *   <li>`queued` - render is queued waiting to be rendered</li>
   *   <li>`fetching` - assets are being fetched</li>
   *   <li>`rendering` - the asset is being rendered</li>
   *   <li>`saving` - the final asset is being saved to storage</li>
   *   <li>`done` - the asset is ready to be downloaded</li>
   *   <li>`failed` - there was an error rendering the asset</li>
   * </ul>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: RenderResponseDataStatusEnum;

  /**
   * The URL of the thumbnail image if requested. This will only be available if status is done.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnail" })
  thumbnail?: string;

  /**
   * The time the render status was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated: string;

  /**
   * The URL of the final asset. This will only be available if status is done. This is a temporary URL and will be deleted after 24 hours. By default all assets are copied to the Shotstack hosting and CDN destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
