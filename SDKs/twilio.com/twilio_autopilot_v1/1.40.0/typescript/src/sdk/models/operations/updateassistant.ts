/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateAssistantServerList = [
  "https://autopilot.twilio.com",
] as const;

export class UpdateAssistantSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateAssistantUpdateAssistantRequest extends SpeakeasyBase {
  /**
   * Reserved.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackEvents" })
  callbackEvents?: string;

  /**
   * Reserved.
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  /**
   * A JSON object that defines the Assistant's [default tasks](https://www.twilio.com/docs/autopilot/api/assistant/defaults) for various scenarios, including initiation actions and fallback tasks.
   */
  @SpeakeasyMetadata({ data: "form, name=Defaults" })
  defaults?: any;

  /**
   * A string describing the state of the assistant.
   */
  @SpeakeasyMetadata({ data: "form, name=DevelopmentStage" })
  developmentStage?: string;

  /**
   * A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * Whether queries should be logged and kept after training. Can be: `true` or `false` and defaults to `true`. If `true`, queries are stored for 30 days, and then deleted. If `false`, no queries are stored.
   */
  @SpeakeasyMetadata({ data: "form, name=LogQueries" })
  logQueries?: boolean;

  /**
   * The JSON string that defines the Assistant's [style sheet](https://www.twilio.com/docs/autopilot/api/assistant/stylesheet)
   */
  @SpeakeasyMetadata({ data: "form, name=StyleSheet" })
  styleSheet?: any;

  /**
   * An application-defined string that uniquely identifies the resource. It can be used as an alternative to the `sid` in the URL path to address the resource. The first 64 characters must be unique.
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;
}

export class UpdateAssistantRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateAssistantUpdateAssistantRequest;

  /**
   * The Twilio-provided string that uniquely identifies the Assistant resource to update.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateAssistantResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  autopilotV1Assistant?: shared.AutopilotV1Assistant;
}
