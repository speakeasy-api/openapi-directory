<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UserInfoProviderUserInfo
{
    /**
     * The user's display name at the IDP.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * User's email at IDP.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * User's identifier at IDP.
     * 
     * @var ?string $federatedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('federatedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $federatedId = null;
    
    /**
     * User's phone number.
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * The user's photo url at the IDP.
     * 
     * @var ?string $photoUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('photoUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoUrl = null;
    
    /**
     * The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
     * 
     * @var ?string $providerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('providerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $providerId = null;
    
    /**
     * User's raw identifier directly returned from IDP.
     * 
     * @var ?string $rawId
     */
	#[\JMS\Serializer\Annotation\SerializedName('rawId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rawId = null;
    
    /**
     * User's screen name at Twitter or login name at Github.
     * 
     * @var ?string $screenName
     */
	#[\JMS\Serializer\Annotation\SerializedName('screenName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $screenName = null;
    
	public function __construct()
	{
		$this->displayName = null;
		$this->email = null;
		$this->federatedId = null;
		$this->phoneNumber = null;
		$this->photoUrl = null;
		$this->providerId = null;
		$this->rawId = null;
		$this->screenName = null;
	}
}
