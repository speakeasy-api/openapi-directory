/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExtendedProducerResponsibility } from "./extendedproducerresponsibility";
import { Expose, Type } from "class-transformer";

/**
 * A type that defines the Extended Producer Responsibility policy.
 */
export class ExtendedProducerResponsibilityPolicy extends SpeakeasyBase {
  /**
   * The unique identifier for the category under which the policy applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoryId" })
  categoryId?: string;

  /**
   * The unique identifier for the category tree under which the policy applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoryTreeId" })
  categoryTreeId?: string;

  /**
   * The details regarding the attributes included in the policy, such as their usage guidelines and whether they can be specified at the listing variation level.
   */
  @SpeakeasyMetadata({ elemType: ExtendedProducerResponsibility })
  @Expose({ name: "supportedAttributes" })
  @Type(() => ExtendedProducerResponsibility)
  supportedAttributes?: ExtendedProducerResponsibility[];
}
