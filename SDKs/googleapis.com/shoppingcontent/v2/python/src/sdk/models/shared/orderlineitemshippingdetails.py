"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderlineitemshippingdetailsmethod as shared_orderlineitemshippingdetailsmethod
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderLineItemShippingDetails:
    
    deliver_by_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliverByDate'), 'exclude': lambda f: f is None }})
    r"""Required. The delivery by date, in ISO 8601 format."""  
    method: Optional[shared_orderlineitemshippingdetailsmethod.OrderLineItemShippingDetailsMethod] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})  
    ship_by_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipByDate'), 'exclude': lambda f: f is None }})
    r"""Required. The ship by date, in ISO 8601 format."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \\"`delivery`\\" - \\"`pickup`\\" """  
    