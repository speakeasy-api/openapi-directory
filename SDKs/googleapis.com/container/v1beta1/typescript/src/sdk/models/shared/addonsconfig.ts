/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudRunConfig } from "./cloudrunconfig";
import { ConfigConnectorConfig } from "./configconnectorconfig";
import { DnsCacheConfig } from "./dnscacheconfig";
import { GcePersistentDiskCsiDriverConfig } from "./gcepersistentdiskcsidriverconfig";
import { GcpFilestoreCsiDriverConfig } from "./gcpfilestorecsidriverconfig";
import { GkeBackupAgentConfig } from "./gkebackupagentconfig";
import { HorizontalPodAutoscaling } from "./horizontalpodautoscaling";
import { HttpLoadBalancing } from "./httploadbalancing";
import { IstioConfig } from "./istioconfig";
import { KalmConfig } from "./kalmconfig";
import { KubernetesDashboard } from "./kubernetesdashboard";
import { NetworkPolicyConfig } from "./networkpolicyconfig";
import { Expose, Type } from "class-transformer";

/**
 * Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
 */
export class AddonsConfig extends SpeakeasyBase {
  /**
   * Configuration options for the Cloud Run feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cloudRunConfig" })
  @Type(() => CloudRunConfig)
  cloudRunConfig?: CloudRunConfig;

  /**
   * Configuration options for the Config Connector add-on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configConnectorConfig" })
  @Type(() => ConfigConnectorConfig)
  configConnectorConfig?: ConfigConnectorConfig;

  /**
   * Configuration for NodeLocal DNSCache
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsCacheConfig" })
  @Type(() => DnsCacheConfig)
  dnsCacheConfig?: DnsCacheConfig;

  /**
   * Configuration for the Compute Engine PD CSI driver.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcePersistentDiskCsiDriverConfig" })
  @Type(() => GcePersistentDiskCsiDriverConfig)
  gcePersistentDiskCsiDriverConfig?: GcePersistentDiskCsiDriverConfig;

  /**
   * Configuration for the GCP Filestore CSI driver.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcpFilestoreCsiDriverConfig" })
  @Type(() => GcpFilestoreCsiDriverConfig)
  gcpFilestoreCsiDriverConfig?: GcpFilestoreCsiDriverConfig;

  /**
   * Configuration for the Backup for GKE Agent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gkeBackupAgentConfig" })
  @Type(() => GkeBackupAgentConfig)
  gkeBackupAgentConfig?: GkeBackupAgentConfig;

  /**
   * Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "horizontalPodAutoscaling" })
  @Type(() => HorizontalPodAutoscaling)
  horizontalPodAutoscaling?: HorizontalPodAutoscaling;

  /**
   * Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpLoadBalancing" })
  @Type(() => HttpLoadBalancing)
  httpLoadBalancing?: HttpLoadBalancing;

  /**
   * Configuration options for Istio addon.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "istioConfig" })
  @Type(() => IstioConfig)
  istioConfig?: IstioConfig;

  /**
   * Configuration options for the KALM addon.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kalmConfig" })
  @Type(() => KalmConfig)
  kalmConfig?: KalmConfig;

  /**
   * Configuration for the Kubernetes Dashboard.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kubernetesDashboard" })
  @Type(() => KubernetesDashboard)
  kubernetesDashboard?: KubernetesDashboard;

  /**
   * Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkPolicyConfig" })
  @Type(() => NetworkPolicyConfig)
  networkPolicyConfig?: NetworkPolicyConfig;
}
