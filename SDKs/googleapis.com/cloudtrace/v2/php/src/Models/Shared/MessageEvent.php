<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MessageEvent - An event describing a message sent/received between Spans.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MessageEvent
{
    /**
     * The number of compressed bytes sent or received. If missing, the compressed size is assumed to be the same size as the uncompressed size.
     * 
     * @var ?string $compressedSizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('compressedSizeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $compressedSizeBytes = null;
    
    /**
     * An identifier for the MessageEvent's message that can be used to match `SENT` and `RECEIVED` MessageEvents.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Type of MessageEvent. Indicates whether the message was sent or received.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MessageEventTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MessageEventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MessageEventTypeEnum $type = null;
    
    /**
     * The number of uncompressed bytes sent or received.
     * 
     * @var ?string $uncompressedSizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('uncompressedSizeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uncompressedSizeBytes = null;
    
	public function __construct()
	{
		$this->compressedSizeBytes = null;
		$this->id = null;
		$this->type = null;
		$this->uncompressedSizeBytes = null;
	}
}
