/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class TransformDefinitionTransformDefinition extends SpeakeasyBase {
  /**
   * The transform definitions' active
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Active" })
  active?: boolean;

  /**
   * The transform definitions' content type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ContentType" })
  contentType?: string;

  /**
   * The transform definitions' definition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Definition" })
  definition?: string;

  /**
   * The transform definitions' definition type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DefinitionType" })
  definitionType?: string;

  /**
   * The transform definitions' readonly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Readonly" })
  readonly?: boolean;

  /**
   * The transform definitions' supported reports
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SupportedReports" })
  supportedReports?: string;

  /**
   * The transform definitions' tax year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxYear" })
  taxYear?: number;

  /**
   * The transform definitions' title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;

  /**
   * The transform definitions' version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: string;
}

/**
 * The transform definition object.
 */
export class TransformDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "TransformDefinition" })
  @Type(() => TransformDefinitionTransformDefinition)
  transformDefinition?: TransformDefinitionTransformDefinition;
}
