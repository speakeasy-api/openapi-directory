"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoicePaymentRequest = void 0;
var utils_1 = require("../../../internal/utils");
var invoicepaymentreminder_1 = require("./invoicepaymentreminder");
var money_1 = require("./money");
var class_transformer_1 = require("class-transformer");
/**
 * Represents a payment request for an [invoice](https://developer.squareup.com/reference/square_2021-08-18/objects/Invoice). Invoices can specify a maximum
 *
 * @remarks
 * of 13 payment requests, with up to 12 `INSTALLMENT` request types. For more information,
 * see [Payment requests](https://developer.squareup.com/docs/invoices-api/overview#payment-requests).
 *
 * Adding `INSTALLMENT` payment requests to an invoice requires an
 * [Invoices Plus subscription](https://developer.squareup.com/docs/invoices-api/overview#invoices-plus-subscription).
 */
var InvoicePaymentRequest = /** @class */ (function (_super) {
    __extends(InvoicePaymentRequest, _super);
    function InvoicePaymentRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automatic_payment_source" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "automaticPaymentSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "card_id" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "cardId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "computed_amount_money" }),
        (0, class_transformer_1.Type)(function () { return money_1.Money; }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "computedAmountMoney", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "due_date" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "dueDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fixed_amount_requested_money" }),
        (0, class_transformer_1.Type)(function () { return money_1.Money; }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "fixedAmountRequestedMoney", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "percentage_requested" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "percentageRequested", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: invoicepaymentreminder_1.InvoicePaymentReminder }),
        (0, class_transformer_1.Expose)({ name: "reminders" }),
        (0, class_transformer_1.Type)(function () { return invoicepaymentreminder_1.InvoicePaymentReminder; }),
        __metadata("design:type", Array)
    ], InvoicePaymentRequest.prototype, "reminders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "request_method" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "requestMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "request_type" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "requestType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rounding_adjustment_included_money" }),
        (0, class_transformer_1.Type)(function () { return money_1.Money; }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "roundingAdjustmentIncludedMoney", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tipping_enabled" }),
        __metadata("design:type", Boolean)
    ], InvoicePaymentRequest.prototype, "tippingEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_completed_amount_money" }),
        (0, class_transformer_1.Type)(function () { return money_1.Money; }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "totalCompletedAmountMoney", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uid" }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "uid", void 0);
    return InvoicePaymentRequest;
}(utils_1.SpeakeasyBase));
exports.InvoicePaymentRequest = InvoicePaymentRequest;
