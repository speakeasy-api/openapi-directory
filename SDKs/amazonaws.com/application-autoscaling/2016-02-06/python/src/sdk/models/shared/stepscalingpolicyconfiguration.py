"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import adjustmenttype_enum as shared_adjustmenttype_enum
from ..shared import metricaggregationtype_enum as shared_metricaggregationtype_enum
from ..shared import stepadjustment as shared_stepadjustment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StepScalingPolicyConfiguration:
    r"""Represents a step scaling policy configuration to use with Application Auto Scaling."""
    
    adjustment_type: Optional[shared_adjustmenttype_enum.AdjustmentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdjustmentType'), 'exclude': lambda f: f is None }})  
    cooldown: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Cooldown'), 'exclude': lambda f: f is None }})  
    metric_aggregation_type: Optional[shared_metricaggregationtype_enum.MetricAggregationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricAggregationType'), 'exclude': lambda f: f is None }})  
    min_adjustment_magnitude: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinAdjustmentMagnitude'), 'exclude': lambda f: f is None }})  
    step_adjustments: Optional[list[shared_stepadjustment.StepAdjustment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StepAdjustments'), 'exclude': lambda f: f is None }})  
    