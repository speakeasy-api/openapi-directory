// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DisassociateClientVpnTargetNetworkResultStatusCodeEnum - The state of the target network association.
type DisassociateClientVpnTargetNetworkResultStatusCodeEnum string

const (
	DisassociateClientVpnTargetNetworkResultStatusCodeEnumAssociating       DisassociateClientVpnTargetNetworkResultStatusCodeEnum = "associating"
	DisassociateClientVpnTargetNetworkResultStatusCodeEnumAssociated        DisassociateClientVpnTargetNetworkResultStatusCodeEnum = "associated"
	DisassociateClientVpnTargetNetworkResultStatusCodeEnumAssociationFailed DisassociateClientVpnTargetNetworkResultStatusCodeEnum = "association-failed"
	DisassociateClientVpnTargetNetworkResultStatusCodeEnumDisassociating    DisassociateClientVpnTargetNetworkResultStatusCodeEnum = "disassociating"
	DisassociateClientVpnTargetNetworkResultStatusCodeEnumDisassociated     DisassociateClientVpnTargetNetworkResultStatusCodeEnum = "disassociated"
)

func (e *DisassociateClientVpnTargetNetworkResultStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "association-failed":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = DisassociateClientVpnTargetNetworkResultStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateClientVpnTargetNetworkResultStatusCodeEnum: %s", s)
	}
}

// DisassociateClientVpnTargetNetworkResultStatus - The current state of the target network association.
type DisassociateClientVpnTargetNetworkResultStatus struct {
	Code    *DisassociateClientVpnTargetNetworkResultStatusCodeEnum
	Message *string
}

// DisassociateClientVpnTargetNetworkResult - Success
type DisassociateClientVpnTargetNetworkResult struct {
	AssociationID *string
	Status        *DisassociateClientVpnTargetNetworkResultStatus
}
