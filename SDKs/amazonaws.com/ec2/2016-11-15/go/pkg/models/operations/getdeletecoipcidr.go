// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteCoipCidrActionEnum
type GETDeleteCoipCidrActionEnum string

const (
	GETDeleteCoipCidrActionEnumDeleteCoipCidr GETDeleteCoipCidrActionEnum = "DeleteCoipCidr"
)

func (e *GETDeleteCoipCidrActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteCoipCidr":
		*e = GETDeleteCoipCidrActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteCoipCidrActionEnum: %s", s)
	}
}

// GETDeleteCoipCidrVersionEnum
type GETDeleteCoipCidrVersionEnum string

const (
	GETDeleteCoipCidrVersionEnumTwoThousandAndSixteen1115 GETDeleteCoipCidrVersionEnum = "2016-11-15"
)

func (e *GETDeleteCoipCidrVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteCoipCidrVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteCoipCidrVersionEnum: %s", s)
	}
}

type GETDeleteCoipCidrRequest struct {
	Action GETDeleteCoipCidrActionEnum `queryParam:"style=form,explode=true,name=Action"`
	//  A customer-owned IP address range that you want to delete.
	Cidr string `queryParam:"style=form,explode=true,name=Cidr"`
	//  The ID of the customer-owned address pool.
	CoipPoolID string `queryParam:"style=form,explode=true,name=CoipPoolId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun            *bool                        `queryParam:"style=form,explode=true,name=DryRun"`
	Version           GETDeleteCoipCidrVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteCoipCidrResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
