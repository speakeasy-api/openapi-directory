<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImClient - A person's instant messaging client.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImClient
{
    /**
     * Output only. The protocol of the IM client formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
     * 
     * @var ?string $formattedProtocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('formattedProtocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formattedProtocol = null;
    
    /**
     * Output only. The type of the IM client translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
     * 
     * @var ?string $formattedType
     */
	#[\JMS\Serializer\Annotation\SerializedName('formattedType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formattedType = null;
    
    /**
     * Metadata about a field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FieldMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FieldMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FieldMetadata $metadata = null;
    
    /**
     * The protocol of the IM client. The protocol can be custom or one of these predefined values: * `aim` * `msn` * `yahoo` * `skype` * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`
     * 
     * @var ?string $protocol
     */
	#[\JMS\Serializer\Annotation\SerializedName('protocol')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $protocol = null;
    
    /**
     * The type of the IM client. The type can be custom or one of these predefined values: * `home` * `work` * `other`
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * The user name used in the IM client.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->formattedProtocol = null;
		$this->formattedType = null;
		$this->metadata = null;
		$this->protocol = null;
		$this->type = null;
		$this->username = null;
	}
}
