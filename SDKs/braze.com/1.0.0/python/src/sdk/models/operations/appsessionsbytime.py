"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class AppSessionsByTimeRequest:
    
    app_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'app_id', 'style': 'form', 'explode': True }})
    r"""(Optional) String
    
    App API identifier retrieved from the Developer Console to limit analytics to a specific app.
    """  
    ending_at: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ending_at', 'style': 'form', 'explode': True }})
    r"""(Optional) DateTime (ISO 8601 string)
    
    Point in time when the data series should end - defaults to time of the request.
    """  
    length: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'length', 'style': 'form', 'explode': True }})
    r"""(Required) Integer
    
    Max number of units (days or hours) before ending_at to include in the returned series - must be between 1 and 100 inclusive.
    """  
    segment_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'segment_id', 'style': 'form', 'explode': True }})
    r"""(Optional) String
    
    Segment API identifier indicating the analytics enabled segment for which sessions should be returned.
    """  
    unit: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'unit', 'style': 'form', 'explode': True }})
    r"""(Optional) String
    
    Unit of time between data points - can be \"day\" or \"hour\" (defaults to \"day\").
    """  
    

@dataclasses.dataclass
class AppSessionsByTimeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    