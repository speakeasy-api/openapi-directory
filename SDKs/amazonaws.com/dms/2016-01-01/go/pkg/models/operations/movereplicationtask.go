// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MoveReplicationTaskXAmzTargetEnum
type MoveReplicationTaskXAmzTargetEnum string

const (
	MoveReplicationTaskXAmzTargetEnumAmazonDmSv20160101MoveReplicationTask MoveReplicationTaskXAmzTargetEnum = "AmazonDMSv20160101.MoveReplicationTask"
)

func (e MoveReplicationTaskXAmzTargetEnum) ToPointer() *MoveReplicationTaskXAmzTargetEnum {
	return &e
}

func (e *MoveReplicationTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonDMSv20160101.MoveReplicationTask":
		*e = MoveReplicationTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MoveReplicationTaskXAmzTargetEnum: %v", v)
	}
}

type MoveReplicationTaskRequest struct {
	MoveReplicationTaskMessage shared.MoveReplicationTaskMessage `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 MoveReplicationTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type MoveReplicationTaskResponse struct {
	// AccessDeniedFault
	AccessDeniedFault interface{}
	ContentType       string
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	// KMSKeyNotAccessibleFault
	KMSKeyNotAccessibleFault interface{}
	// Success
	MoveReplicationTaskResponse *shared.MoveReplicationTaskResponse
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	// ResourceQuotaExceededFault
	ResourceQuotaExceededFault interface{}
}
