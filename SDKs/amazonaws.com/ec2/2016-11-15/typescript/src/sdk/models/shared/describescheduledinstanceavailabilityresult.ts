/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The schedule recurrence.
 */
export class DescribeScheduledInstanceAvailabilityResultScheduledInstanceAvailabilitySetRecurrence extends SpeakeasyBase {
  @SpeakeasyMetadata()
  frequency?: string;

  @SpeakeasyMetadata()
  interval?: number;

  @SpeakeasyMetadata()
  occurrenceDaySet?: number[];

  @SpeakeasyMetadata()
  occurrenceRelativeToEnd?: boolean;

  @SpeakeasyMetadata()
  occurrenceUnit?: string;
}

/**
 * Describes a schedule that is available for your Scheduled Instances.
 */
export class DescribeScheduledInstanceAvailabilityResultScheduledInstanceAvailabilitySet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  availableInstanceCount?: number;

  @SpeakeasyMetadata()
  firstSlotStartTime?: Date;

  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  instanceType?: string;

  @SpeakeasyMetadata()
  maxTermDurationInDays?: number;

  @SpeakeasyMetadata()
  minTermDurationInDays?: number;

  @SpeakeasyMetadata()
  networkPlatform?: string;

  @SpeakeasyMetadata()
  platform?: string;

  @SpeakeasyMetadata()
  purchaseToken?: string;

  @SpeakeasyMetadata()
  recurrence?: DescribeScheduledInstanceAvailabilityResultScheduledInstanceAvailabilitySetRecurrence;

  @SpeakeasyMetadata()
  slotDurationInHours?: number;

  @SpeakeasyMetadata()
  totalScheduledInstanceHours?: number;
}

/**
 * Contains the output of DescribeScheduledInstanceAvailability.
 */
export class DescribeScheduledInstanceAvailabilityResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeScheduledInstanceAvailabilityResultScheduledInstanceAvailabilitySet,
  })
  scheduledInstanceAvailabilitySet?: DescribeScheduledInstanceAvailabilityResultScheduledInstanceAvailabilitySet[];
}
