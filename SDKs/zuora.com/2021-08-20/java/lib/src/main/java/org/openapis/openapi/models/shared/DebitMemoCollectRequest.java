/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DebitMemoCollectRequest {
    /**
     * The priority order to apply credit memos and/or unapplied payments to the debit memo. Possible item values are: `CreditMemo`, `UnappliedPayment`.
     * 
     * **Note:**
     *   - This field is valid only if the `applyCredit` field is set to `true`.
     *   - If no value is specified for this field, the default priority order is used, ["CreditMemo", "UnappliedPayment"], to apply credit memos first and then apply unapplied payments.
     *   - If only one item is specified, only the items of the spedified type are applied to invoices. For example, if the value is `["CreditMemo"]`, only credit memos are used to apply the debit memo.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationOrder")
    public String[] applicationOrder;
    public DebitMemoCollectRequest withApplicationOrder(String[] applicationOrder) {
        this.applicationOrder = applicationOrder;
        return this;
    }
    
    /**
     * Whether to automatically apply credit memos or unapplied payments, or both to the debit memo.
     * If the value is `true`, the credit memo or unapplied payment, or both will be automatically applied to the debit memo. If no value is specified or the value is `false`, no action is taken.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyCredit")
    public Boolean applyCredit;
    public DebitMemoCollectRequest withApplyCredit(Boolean applyCredit) {
        this.applyCredit = applyCredit;
        return this;
    }
    
    /**
     * Indicates if the current request needs to collect payment or not.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collect")
    public Boolean collect;
    public DebitMemoCollectRequest withCollect(Boolean collect) {
        this.collect = collect;
        return this;
    }
    
    /**
     * Some detail info that would be used to processed an electronic payment.
     * The info would only effect when `collect` set to `true`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment")
    public DebitMemoCollectRequestPayment payment;
    public DebitMemoCollectRequest withPayment(DebitMemoCollectRequestPayment payment) {
        this.payment = payment;
        return this;
    }
    
}
