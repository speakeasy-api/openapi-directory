"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gatewayroutehostnamerewrite as shared_gatewayroutehostnamerewrite
from ..shared import httpgatewayroutepathrewrite as shared_httpgatewayroutepathrewrite
from ..shared import httpgatewayrouteprefixrewrite as shared_httpgatewayrouteprefixrewrite
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HTTPGatewayRouteRewrite:
    r"""An object representing the gateway route to rewrite."""
    
    hostname: Optional[shared_gatewayroutehostnamerewrite.GatewayRouteHostnameRewrite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostname'), 'exclude': lambda f: f is None }})  
    path: Optional[shared_httpgatewayroutepathrewrite.HTTPGatewayRoutePathRewrite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})  
    prefix: Optional[shared_httpgatewayrouteprefixrewrite.HTTPGatewayRoutePrefixRewrite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prefix'), 'exclude': lambda f: f is None }})  
    