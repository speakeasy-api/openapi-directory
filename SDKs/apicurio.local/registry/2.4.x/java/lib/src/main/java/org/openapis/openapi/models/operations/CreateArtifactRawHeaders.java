/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateArtifactRawHeaders {
    /**
     * A client-provided, globally unique identifier for the new artifact.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-ArtifactId")
    public String xRegistryArtifactId;
    public CreateArtifactRawHeaders withXRegistryArtifactId(String xRegistryArtifactId) {
        this.xRegistryArtifactId = xRegistryArtifactId;
        return this;
    }
    
    /**
     * Specifies the type of the artifact being added. Possible values include:
     * 
     * * Avro (`AVRO`)
     * * Protobuf (`PROTOBUF`)
     * * JSON Schema (`JSON`)
     * * Kafka Connect (`KCONNECT`)
     * * OpenAPI (`OPENAPI`)
     * * AsyncAPI (`ASYNCAPI`)
     * * GraphQL (`GRAPHQL`)
     * * Web Services Description Language (`WSDL`)
     * * XML Schema (`XSD`)
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-ArtifactType")
    public String xRegistryArtifactType;
    public CreateArtifactRawHeaders withXRegistryArtifactType(String xRegistryArtifactType) {
        this.xRegistryArtifactType = xRegistryArtifactType;
        return this;
    }
    
    /**
     * Specifies the (optional) hash of the artifact to be verified.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Content-Hash")
    public String xRegistryContentHash;
    public CreateArtifactRawHeaders withXRegistryContentHash(String xRegistryContentHash) {
        this.xRegistryContentHash = xRegistryContentHash;
        return this;
    }
    
    /**
     * Specifies the description of artifact being added. Description must be ASCII-only string. If this is not provided, the server will extract the description from the artifact content.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Description")
    public String xRegistryDescription;
    public CreateArtifactRawHeaders withXRegistryDescription(String xRegistryDescription) {
        this.xRegistryDescription = xRegistryDescription;
        return this;
    }
    
    /**
     * Specifies the description of artifact being added. Value of this must be Base64 encoded string. If this is not provided, the server will extract the description from the artifact content.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Description-Encoded")
    public String xRegistryDescriptionEncoded;
    public CreateArtifactRawHeaders withXRegistryDescriptionEncoded(String xRegistryDescriptionEncoded) {
        this.xRegistryDescriptionEncoded = xRegistryDescriptionEncoded;
        return this;
    }
    
    /**
     * The algorithm to use when checking the content validity. (available: SHA256, MD5; default: SHA256)
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Hash-Algorithm")
    public CreateArtifactRawXRegistryHashAlgorithmEnum xRegistryHashAlgorithm;
    public CreateArtifactRawHeaders withXRegistryHashAlgorithm(CreateArtifactRawXRegistryHashAlgorithmEnum xRegistryHashAlgorithm) {
        this.xRegistryHashAlgorithm = xRegistryHashAlgorithm;
        return this;
    }
    
    /**
     * Specifies the name of artifact being added. Name must be ASCII-only string. If this is not provided, the server will extract the name from the artifact content.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Name")
    public String xRegistryName;
    public CreateArtifactRawHeaders withXRegistryName(String xRegistryName) {
        this.xRegistryName = xRegistryName;
        return this;
    }
    
    /**
     * Specifies the name of artifact being added. Value of this must be Base64 encoded string. If this is not provided, the server will extract the name from the artifact content.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Name-Encoded")
    public String xRegistryNameEncoded;
    public CreateArtifactRawHeaders withXRegistryNameEncoded(String xRegistryNameEncoded) {
        this.xRegistryNameEncoded = xRegistryNameEncoded;
        return this;
    }
    
    /**
     * Specifies the version number of this initial version of the artifact content.  This would typically
     * be a simple integer or a SemVer value.  If not provided, the server will assign a version number
     * automatically (starting with version `1`).
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Registry-Version")
    public String xRegistryVersion;
    public CreateArtifactRawHeaders withXRegistryVersion(String xRegistryVersion) {
        this.xRegistryVersion = xRegistryVersion;
        return this;
    }
    
}
