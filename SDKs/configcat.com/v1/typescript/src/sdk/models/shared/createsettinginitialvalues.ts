/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InitialValue } from "./initialvalue";
import { SettingTypeEnum } from "./settingtypeenum";
import { Expose, Type } from "class-transformer";

export class CreateSettingInitialValues extends SpeakeasyBase {
  /**
   * A short description for the setting, shown on the Dashboard UI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hint" })
  hint?: string;

  /**
   * Optional, initial values of the feature flag or setting in the given Environments.
   */
  @SpeakeasyMetadata({ elemType: InitialValue })
  @Expose({ name: "initialValues" })
  @Type(() => InitialValue)
  initialValues?: InitialValue[];

  /**
   * The key of the setting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key: string;

  /**
   * The name of the setting, shown on the Dashboard UI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "settingType" })
  settingType: SettingTypeEnum;

  /**
   * The IDs of the tags which are attached to the setting.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: number[];
}
