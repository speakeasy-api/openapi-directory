"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MembershipStateInput:
    r"""State of the Membership resource."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""This field is never set by the Hub Service."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""This field is never set by the Hub Service."""  
    
class MembershipStateCodeEnum(str, Enum):
    r"""Output only. The current state of the Membership resource."""
    CODE_UNSPECIFIED = 'CODE_UNSPECIFIED'
    CREATING = 'CREATING'
    READY = 'READY'
    DELETING = 'DELETING'
    UPDATING = 'UPDATING'
    SERVICE_UPDATING = 'SERVICE_UPDATING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MembershipState:
    r"""State of the Membership resource."""
    
    code: Optional[MembershipStateCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""Output only. The current state of the Membership resource."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""This field is never set by the Hub Service."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""This field is never set by the Hub Service."""  
    