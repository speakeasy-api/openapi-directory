"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import testorderaddress as shared_testorderaddress
from ..shared import testorderpickupdetailspickupperson as shared_testorderpickupdetailspickupperson
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestOrderPickupDetails:
    
    location_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationCode'), 'exclude': lambda f: f is None }})
    r"""Required. Code of the location defined by provider or merchant."""  
    pickup_location_address: Optional[shared_testorderaddress.TestOrderAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupLocationAddress'), 'exclude': lambda f: f is None }})  
    pickup_location_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupLocationType'), 'exclude': lambda f: f is None }})
    r"""Pickup location type. Acceptable values are: - \\"`locker`\\" - \\"`store`\\" - \\"`curbside`\\" """  
    pickup_persons: Optional[list[shared_testorderpickupdetailspickupperson.TestOrderPickupDetailsPickupPerson]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pickupPersons'), 'exclude': lambda f: f is None }})
    r"""Required. all pickup persons set by users."""  
    