// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DfareportingUserRolesListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// DfareportingUserRolesListSortFieldEnum - Field by which to sort the list.
type DfareportingUserRolesListSortFieldEnum string

const (
	DfareportingUserRolesListSortFieldEnumID   DfareportingUserRolesListSortFieldEnum = "ID"
	DfareportingUserRolesListSortFieldEnumName DfareportingUserRolesListSortFieldEnum = "NAME"
)

func (e *DfareportingUserRolesListSortFieldEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ID":
		fallthrough
	case "NAME":
		*e = DfareportingUserRolesListSortFieldEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingUserRolesListSortFieldEnum: %s", s)
	}
}

// DfareportingUserRolesListSortOrderEnum - Order of sorted results.
type DfareportingUserRolesListSortOrderEnum string

const (
	DfareportingUserRolesListSortOrderEnumAscending  DfareportingUserRolesListSortOrderEnum = "ASCENDING"
	DfareportingUserRolesListSortOrderEnumDescending DfareportingUserRolesListSortOrderEnum = "DESCENDING"
)

func (e *DfareportingUserRolesListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DfareportingUserRolesListSortOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingUserRolesListSortOrderEnum: %s", s)
	}
}

type DfareportingUserRolesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Select only account level user roles not associated with any specific subaccount.
	AccountUserRoleOnly *bool `queryParam:"style=form,explode=true,name=accountUserRoleOnly"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Select only user roles with the specified IDs.
	Ids []string `queryParam:"style=form,explode=true,name=ids"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Value of the nextPageToken from the previous result page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// User profile ID associated with this request.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "userrole*2015" will return objects with names like "userrole June 2015", "userrole April 2015", or simply "userrole 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of "userrole" will match objects with name "my userrole", "userrole 2015", or simply "userrole".
	SearchString *string `queryParam:"style=form,explode=true,name=searchString"`
	// Field by which to sort the list.
	SortField *DfareportingUserRolesListSortFieldEnum `queryParam:"style=form,explode=true,name=sortField"`
	// Order of sorted results.
	SortOrder *DfareportingUserRolesListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Select only user roles that belong to this subaccount.
	SubaccountID *string `queryParam:"style=form,explode=true,name=subaccountId"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DfareportingUserRolesListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	UserRolesListResponse *shared.UserRolesListResponse
}
