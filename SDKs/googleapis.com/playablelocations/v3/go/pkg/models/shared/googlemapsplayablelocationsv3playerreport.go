// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum string

const (
	GoogleMapsPlayablelocationsV3PlayerReportReasonsEnumBadLocationReasonUnspecified GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum = "BAD_LOCATION_REASON_UNSPECIFIED"
	GoogleMapsPlayablelocationsV3PlayerReportReasonsEnumOther                        GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum = "OTHER"
	GoogleMapsPlayablelocationsV3PlayerReportReasonsEnumNotPedestrianAccessible      GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum = "NOT_PEDESTRIAN_ACCESSIBLE"
	GoogleMapsPlayablelocationsV3PlayerReportReasonsEnumNotOpenToPublic              GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum = "NOT_OPEN_TO_PUBLIC"
	GoogleMapsPlayablelocationsV3PlayerReportReasonsEnumPermanentlyClosed            GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum = "PERMANENTLY_CLOSED"
	GoogleMapsPlayablelocationsV3PlayerReportReasonsEnumTemporarilyInaccessible      GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum = "TEMPORARILY_INACCESSIBLE"
)

func (e GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum) ToPointer() *GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum {
	return &e
}

func (e *GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BAD_LOCATION_REASON_UNSPECIFIED":
		fallthrough
	case "OTHER":
		fallthrough
	case "NOT_PEDESTRIAN_ACCESSIBLE":
		fallthrough
	case "NOT_OPEN_TO_PUBLIC":
		fallthrough
	case "PERMANENTLY_CLOSED":
		fallthrough
	case "TEMPORARILY_INACCESSIBLE":
		*e = GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum: %v", v)
	}
}

// GoogleMapsPlayablelocationsV3PlayerReport - A report submitted by a player about a playable location that is considered inappropriate for use in the game.
type GoogleMapsPlayablelocationsV3PlayerReport struct {
	// Language code (in BCP-47 format) indicating the language of the freeform description provided in `reason_details`. Examples are "en", "en-US" or "ja-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
	LanguageCode *string `json:"languageCode,omitempty"`
	// Required. The name of the playable location.
	LocationName *string `json:"locationName,omitempty"`
	// Required. A free-form description detailing why the playable location is considered bad.
	ReasonDetails *string `json:"reasonDetails,omitempty"`
	// Required. One or more reasons why this playable location is considered bad.
	Reasons []GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum `json:"reasons,omitempty"`
}
