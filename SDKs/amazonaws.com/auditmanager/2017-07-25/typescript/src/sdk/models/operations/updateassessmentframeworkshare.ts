/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Specifies the update action for the share request.
 */
export enum UpdateAssessmentFrameworkShareRequestBodyActionEnum {
  Accept = "ACCEPT",
  Decline = "DECLINE",
  Revoke = "REVOKE",
}

/**
 * Specifies whether the share request is a sent request or a received request.
 */
export enum UpdateAssessmentFrameworkShareRequestBodyRequestTypeEnum {
  Sent = "SENT",
  Received = "RECEIVED",
}

export class UpdateAssessmentFrameworkShareRequestBody extends SpeakeasyBase {
  /**
   * Specifies the update action for the share request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: UpdateAssessmentFrameworkShareRequestBodyActionEnum;

  /**
   * Specifies whether the share request is a sent request or a received request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestType" })
  requestType: UpdateAssessmentFrameworkShareRequestBodyRequestTypeEnum;
}

export class UpdateAssessmentFrameworkShareRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateAssessmentFrameworkShareRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   *  The unique identifier for the share request.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=requestId",
  })
  requestId: string;
}

export class UpdateAssessmentFrameworkShareResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateAssessmentFrameworkShareResponse?: shared.UpdateAssessmentFrameworkShareResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
