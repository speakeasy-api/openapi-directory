"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import picture as shared_picture
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoBuy:
    r"""Information about purchasing this video."""
    
    active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active') }})
    r"""Whether this On Demand video can be purchased."""  
    price: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})
    r"""A map of currency type to price."""  
    purchased: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchased'), 'exclude': lambda f: f is None }})
    r"""Whether this On Demand video has been purchased."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoInteractionsPage:
    r"""Information about how the authenticated user can interact with the connection to the video's On Demand page."""
    
    added: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added') }})
    r"""Whether this On Demand page was added."""  
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The URI to access the On Demand page."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoInteractions:
    r"""An object containing information about how the authenticated user can interact with this On Demand page."""
    
    page: OnDemandVideoInteractionsPage = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page') }})
    r"""Information about how the authenticated user can interact with the connection to the video's On Demand page."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoMetadataConnectionsSeason:
    r"""Information about this season."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the season on this connection."""  
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoMetadataConnections:
    
    season: OnDemandVideoMetadataConnectionsSeason = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('season') }})
    r"""Information about this season."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoMetadataInteractionsLikes:
    r"""Information about the user's Like interactions with this video."""
    
    added: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added') }})
    r"""Whether the user has liked this video."""  
    added_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added_time') }})
    r"""The time in ISO 8601 format when the user liked this video."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The URI for the user to like this video."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoMetadataInteractionsWatchlater:
    r"""Information about the user's Watch Later interactions with this video."""
    
    added: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added') }})
    r"""Whether the user has added this video to their Watch Later queue."""  
    added_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('added_time') }})
    r"""The time in ISO 8601 format when the user added this video to their Watch Later queue."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The URI for the user to add this video to their Watch Later queue."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoMetadataInteractions:
    
    likes: OnDemandVideoMetadataInteractionsLikes = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('likes') }})
    r"""Information about the user's Like interactions with this video."""  
    watchlater: OnDemandVideoMetadataInteractionsWatchlater = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('watchlater') }})
    r"""Information about the user's Watch Later interactions with this video."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoMetadata:
    r"""Metadata information about this video."""
    
    connections: OnDemandVideoMetadataConnections = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connections') }})  
    interactions: OnDemandVideoMetadataInteractions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interactions') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideoRent:
    r"""Information about renting this video."""
    
    active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active') }})
    r"""Whether this On Demand video can be rented."""  
    price: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})
    r"""A map of currency type to price."""  
    purchased: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchased'), 'exclude': lambda f: f is None }})
    r"""Whether this On Demand video has been rented."""  
    
class OnDemandVideoTypeEnum(str, Enum):
    r"""The type of the On Demand video:
    
    Option descriptions:
     * `extra` - The On Demand video is an extra feature.
     * `main` - The On Demand video is a main feature.
     * `trailer` - The On Demand video is a trailer.
    """
    EXTRA = 'extra'
    MAIN = 'main'
    TRAILER = 'trailer'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandVideo:
    r"""The video was added."""
    
    buy: OnDemandVideoBuy = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buy') }})
    r"""Information about purchasing this video."""  
    interactions: OnDemandVideoInteractions = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interactions') }})
    r"""An object containing information about how the authenticated user can interact with this On Demand page."""  
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The link to this video on Vimeo."""  
    metadata: OnDemandVideoMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    r"""Metadata information about this video."""  
    play_progress: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('play_progress') }})
    r"""The user's most recent play position in seconds for this video."""  
    release_year: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('release_year') }})
    r"""The year that this On Demand video was released."""  
    rent: OnDemandVideoRent = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rent') }})
    r"""Information about renting this video."""  
    type: OnDemandVideoTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the On Demand video:
    
    Option descriptions:
     * `extra` - The On Demand video is an extra feature.
     * `main` - The On Demand video is a main feature.
     * `trailer` - The On Demand video is a trailer.
    """  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The video container's relative URI."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of the On Demand video."""  
    duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration'), 'exclude': lambda f: f is None }})
    r"""The duration of the On Demand video."""  
    episode: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('episode'), 'exclude': lambda f: f is None }})
    r"""The episode number of the On Demand video."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The title of the On Demand video."""  
    options: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})
    r"""An array of HTTP methods permitted on this URI."""  
    pictures: Optional[shared_picture.Picture] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pictures'), 'exclude': lambda f: f is None }})
    r"""The active picture for this video."""  
    position: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Describes the manual position of this video relative to the other videos owned by this On Demand page."""  
    release_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('release_date'), 'exclude': lambda f: f is None }})
    r"""The time in ISO 8601 format when the On Demand video was created or published."""  
    user: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""The owner of the video."""  
    