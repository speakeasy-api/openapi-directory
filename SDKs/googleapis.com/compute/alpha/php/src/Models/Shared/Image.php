<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Image - Represents an Image resource. You can use images to create boot disks for your VM instances. For more information, read Images.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Image
{
    /**
     * The architecture of the image. Valid values are ARM64 or X86_64.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ImageArchitectureEnum $architecture
     */
	#[\JMS\Serializer\Annotation\SerializedName('architecture')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ImageArchitectureEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageArchitectureEnum $architecture = null;
    
    /**
     * Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
     * 
     * @var ?string $archiveSizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('archiveSizeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $archiveSizeBytes = null;
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     * 
     * @var ?string $creationTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTimestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationTimestamp = null;
    
    /**
     * Deprecation status for a public resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeprecationStatus $deprecated
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprecated')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DeprecationStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DeprecationStatus $deprecated = null;
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Size of the image when restored onto a persistent disk (in GB).
     * 
     * @var ?string $diskSizeGb
     */
	#[\JMS\Serializer\Annotation\SerializedName('diskSizeGb')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $diskSizeGb = null;
    
    /**
     * The name of the image family to which this image belongs. The image family name can be from a publicly managed image family provided by Compute Engine, or from a custom image family you create. For example, centos-stream-9 is a publicly available image family. For more information, see Image family best practices. When creating disks, you can specify an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
     * 
     * @var ?string $family
     */
	#[\JMS\Serializer\Annotation\SerializedName('family')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $family = null;
    
    /**
     * A list of features to enable on the guest operating system. Applicable only for bootable images. To see a list of available options, see the guestOSfeatures[].type parameter.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GuestOsFeature> $guestOsFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestOsFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GuestOsFeature>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $guestOsFeatures = null;
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('imageEncryptionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomerEncryptionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerEncryptionKey $imageEncryptionKey = null;
    
    /**
     * [Output Only] Type of the resource. Always compute#image for images.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an image.
     * 
     * @var ?string $labelFingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('labelFingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $labelFingerprint = null;
    
    /**
     * Labels to apply to this image. These can be later modified by the setLabels method.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Integer license codes indicating which licenses are attached to this image.
     * 
     * @var ?array<string> $licenseCodes
     */
	#[\JMS\Serializer\Annotation\SerializedName('licenseCodes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $licenseCodes = null;
    
    /**
     * Any applicable license URI.
     * 
     * @var ?array<string> $licenses
     */
	#[\JMS\Serializer\Annotation\SerializedName('licenses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $licenses = null;
    
    /**
     * A flag for marketplace VM disk created from the image, which is designed for marketplace VM disk to prevent the proprietary data on the disk from being accessed unwantedly. The flag will be inherited by the disk created from the image. The disk with locked flag set to true will be prohibited from performing the operations below: - R/W or R/O disk attach - Disk detach, if disk is created via create-on-create - Create images - Create snapshots - Create disk clone (create disk from the current disk) The image with the locked field set to true will be prohibited from performing the operations below: - Create images from the current image - Update the locked field for the current image The instance with at least one disk with locked flag set to true will be prohibited from performing the operations below: - Secondary disk attach - Create instant snapshot - Create machine images - Create instance template - Delete the instance with --keep-disk parameter set to true 
     * 
     * @var ?bool $locked
     */
	#[\JMS\Serializer\Annotation\SerializedName('locked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $locked = null;
    
    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The parameters of the raw disk image.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ImageRawDisk $rawDisk
     */
	#[\JMS\Serializer\Annotation\SerializedName('rawDisk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ImageRawDisk')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageRawDisk $rawDisk = null;
    
    /**
     * A rollout policy configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RolloutPolicy $rolloutOverride
     */
	#[\JMS\Serializer\Annotation\SerializedName('rolloutOverride')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RolloutPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RolloutPolicy $rolloutOverride = null;
    
    /**
     * [Output Only] Reserved for future use.
     * 
     * @var ?bool $satisfiesPzs
     */
	#[\JMS\Serializer\Annotation\SerializedName('satisfiesPzs')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $satisfiesPzs = null;
    
    /**
     * [Output Only] Server-defined URL for the resource.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
    /**
     * [Output Only] Server-defined URL for this resource's resource id.
     * 
     * @var ?string $selfLinkWithId
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLinkWithId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLinkWithId = null;
    
    /**
     * Initial State for shielded instance, these are public keys which are safe to store in public
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InitialStateConfig $shieldedInstanceInitialState
     */
	#[\JMS\Serializer\Annotation\SerializedName('shieldedInstanceInitialState')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InitialStateConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InitialStateConfig $shieldedInstanceInitialState = null;
    
    /**
     * URL of the source disk used to create this image. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - projects/project/zones/zone/disks/disk - zones/zone/disks/disk In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
     * 
     * @var ?string $sourceDisk
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceDisk')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDisk = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceDiskEncryptionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomerEncryptionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerEncryptionKey $sourceDiskEncryptionKey = null;
    
    /**
     * [Output Only] The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
     * 
     * @var ?string $sourceDiskId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceDiskId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDiskId = null;
    
    /**
     * URL of the source image used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ images/image_name - projects/project_id/global/images/image_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
     * 
     * @var ?string $sourceImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceImage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceImage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceImageEncryptionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomerEncryptionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerEncryptionKey $sourceImageEncryptionKey = null;
    
    /**
     * [Output Only] The ID value of the image used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given image name.
     * 
     * @var ?string $sourceImageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceImageId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceImageId = null;
    
    /**
     * URL of the source snapshot used to create this image. The following are valid formats for the URL: - https://www.googleapis.com/compute/v1/projects/project_id/global/ snapshots/snapshot_name - projects/project_id/global/snapshots/snapshot_name In order to create an image, you must provide the full or partial URL of one of the following: - The rawDisk.source URL - The sourceDisk URL - The sourceImage URL - The sourceSnapshot URL 
     * 
     * @var ?string $sourceSnapshot
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceSnapshot')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceSnapshot = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceSnapshotEncryptionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomerEncryptionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomerEncryptionKey $sourceSnapshotEncryptionKey = null;
    
    /**
     * [Output Only] The ID value of the snapshot used to create this image. This value may be used to determine whether the snapshot was taken from the current or a previous instance of a given snapshot name.
     * 
     * @var ?string $sourceSnapshotId
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceSnapshotId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceSnapshotId = null;
    
    /**
     * The type of the image used to create this disk. The default and only valid value is RAW.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ImageSourceTypeEnum $sourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ImageSourceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageSourceTypeEnum $sourceType = null;
    
    /**
     * [Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ImageStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ImageStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageStatusEnum $status = null;
    
    /**
     * Cloud Storage bucket storage location of the image (regional or multi-regional).
     * 
     * @var ?array<string> $storageLocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageLocations')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $storageLocations = null;
    
    /**
     * A list of publicly visible user-licenses. Unlike regular licenses, user provided licenses can be modified after the disk is created. This includes a list of URLs to the license resource. For example, to provide a debian license: https://www.googleapis.com/compute/v1/projects/debian-cloud/global/licenses/debian-9-stretch 
     * 
     * @var ?array<string> $userLicenses
     */
	#[\JMS\Serializer\Annotation\SerializedName('userLicenses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userLicenses = null;
    
	public function __construct()
	{
		$this->architecture = null;
		$this->archiveSizeBytes = null;
		$this->creationTimestamp = null;
		$this->deprecated = null;
		$this->description = null;
		$this->diskSizeGb = null;
		$this->family = null;
		$this->guestOsFeatures = null;
		$this->id = null;
		$this->imageEncryptionKey = null;
		$this->kind = null;
		$this->labelFingerprint = null;
		$this->labels = null;
		$this->licenseCodes = null;
		$this->licenses = null;
		$this->locked = null;
		$this->name = null;
		$this->rawDisk = null;
		$this->rolloutOverride = null;
		$this->satisfiesPzs = null;
		$this->selfLink = null;
		$this->selfLinkWithId = null;
		$this->shieldedInstanceInitialState = null;
		$this->sourceDisk = null;
		$this->sourceDiskEncryptionKey = null;
		$this->sourceDiskId = null;
		$this->sourceImage = null;
		$this->sourceImageEncryptionKey = null;
		$this->sourceImageId = null;
		$this->sourceSnapshot = null;
		$this->sourceSnapshotEncryptionKey = null;
		$this->sourceSnapshotId = null;
		$this->sourceType = null;
		$this->status = null;
		$this->storageLocations = null;
		$this->userLicenses = null;
	}
}
