/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetUserContactsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetUserContactsRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * The type of contact. The value can be one of the following:
   *
   * @remarks
   * `company`: Contacts from the user's organization.
   * `external`: External contacts.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;
}

export class GetUserContacts200ApplicationXMLContacts extends SpeakeasyBase {
  /**
   * Contact's email address.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Contact's first name.
   */
  @SpeakeasyMetadata()
  firstName?: string;

  /**
   * Contact Id.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Contact's last name.
   */
  @SpeakeasyMetadata()
  lastName?: string;
}

/**
 * **HTTP Status Code:** `200`<br>List of user's contacts returned.
 */
export class GetUserContacts200ApplicationXML extends SpeakeasyBase {
  /**
   * The contacts object.
   */
  @SpeakeasyMetadata({ elemType: GetUserContacts200ApplicationXMLContacts })
  contacts?: GetUserContacts200ApplicationXMLContacts[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call.
   *
   * @remarks
   * Default value: 30.
   */
  @SpeakeasyMetadata()
  pageSize?: number;
}

export class GetUserContacts200ApplicationJSONContacts extends SpeakeasyBase {
  /**
   * Contact's email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Contact's first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * Contact Id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Contact's last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;
}

/**
 * **HTTP Status Code:** `200`<br>List of user's contacts returned.
 */
export class GetUserContacts200ApplicationJSON extends SpeakeasyBase {
  /**
   * The contacts object.
   */
  @SpeakeasyMetadata({ elemType: GetUserContacts200ApplicationJSONContacts })
  @Expose({ name: "contacts" })
  @Type(() => GetUserContacts200ApplicationJSONContacts)
  contacts?: GetUserContacts200ApplicationJSONContacts[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call.
   *
   * @remarks
   * Default value: 30.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;
}

export class GetUserContactsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>List of user's contacts returned.
   */
  @SpeakeasyMetadata()
  getUserContacts200ApplicationJSONObject?: GetUserContacts200ApplicationJSON;
}
