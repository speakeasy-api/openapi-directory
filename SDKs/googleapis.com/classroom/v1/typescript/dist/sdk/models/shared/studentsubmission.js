"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.StudentSubmission = exports.StudentSubmissionStateEnum = exports.StudentSubmissionCourseWorkTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var assignmentsubmission_1 = require("./assignmentsubmission");
var multiplechoicesubmission_1 = require("./multiplechoicesubmission");
var shortanswersubmission_1 = require("./shortanswersubmission");
var submissionhistory_1 = require("./submissionhistory");
var class_transformer_1 = require("class-transformer");
/**
 * Type of course work this submission is for. Read-only.
 */
var StudentSubmissionCourseWorkTypeEnum;
(function (StudentSubmissionCourseWorkTypeEnum) {
    StudentSubmissionCourseWorkTypeEnum["CourseWorkTypeUnspecified"] = "COURSE_WORK_TYPE_UNSPECIFIED";
    StudentSubmissionCourseWorkTypeEnum["Assignment"] = "ASSIGNMENT";
    StudentSubmissionCourseWorkTypeEnum["ShortAnswerQuestion"] = "SHORT_ANSWER_QUESTION";
    StudentSubmissionCourseWorkTypeEnum["MultipleChoiceQuestion"] = "MULTIPLE_CHOICE_QUESTION";
})(StudentSubmissionCourseWorkTypeEnum = exports.StudentSubmissionCourseWorkTypeEnum || (exports.StudentSubmissionCourseWorkTypeEnum = {}));
/**
 * State of this submission. Read-only.
 */
var StudentSubmissionStateEnum;
(function (StudentSubmissionStateEnum) {
    StudentSubmissionStateEnum["SubmissionStateUnspecified"] = "SUBMISSION_STATE_UNSPECIFIED";
    StudentSubmissionStateEnum["New"] = "NEW";
    StudentSubmissionStateEnum["Created"] = "CREATED";
    StudentSubmissionStateEnum["TurnedIn"] = "TURNED_IN";
    StudentSubmissionStateEnum["Returned"] = "RETURNED";
    StudentSubmissionStateEnum["ReclaimedByStudent"] = "RECLAIMED_BY_STUDENT";
})(StudentSubmissionStateEnum = exports.StudentSubmissionStateEnum || (exports.StudentSubmissionStateEnum = {}));
/**
 * Student submission for course work. StudentSubmission items are generated when a CourseWork item is created. StudentSubmissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.
 */
var StudentSubmission = /** @class */ (function (_super) {
    __extends(StudentSubmission, _super);
    function StudentSubmission() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alternateLink" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "alternateLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assignedGrade" }),
        __metadata("design:type", Number)
    ], StudentSubmission.prototype, "assignedGrade", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assignmentSubmission" }),
        (0, class_transformer_1.Type)(function () { return assignmentsubmission_1.AssignmentSubmission; }),
        __metadata("design:type", assignmentsubmission_1.AssignmentSubmission)
    ], StudentSubmission.prototype, "assignmentSubmission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "associatedWithDeveloper" }),
        __metadata("design:type", Boolean)
    ], StudentSubmission.prototype, "associatedWithDeveloper", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "courseId" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "courseId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "courseWorkId" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "courseWorkId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "courseWorkType" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "courseWorkType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTime" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "draftGrade" }),
        __metadata("design:type", Number)
    ], StudentSubmission.prototype, "draftGrade", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "late" }),
        __metadata("design:type", Boolean)
    ], StudentSubmission.prototype, "late", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "multipleChoiceSubmission" }),
        (0, class_transformer_1.Type)(function () { return multiplechoicesubmission_1.MultipleChoiceSubmission; }),
        __metadata("design:type", multiplechoicesubmission_1.MultipleChoiceSubmission)
    ], StudentSubmission.prototype, "multipleChoiceSubmission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shortAnswerSubmission" }),
        (0, class_transformer_1.Type)(function () { return shortanswersubmission_1.ShortAnswerSubmission; }),
        __metadata("design:type", shortanswersubmission_1.ShortAnswerSubmission)
    ], StudentSubmission.prototype, "shortAnswerSubmission", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: submissionhistory_1.SubmissionHistory }),
        (0, class_transformer_1.Expose)({ name: "submissionHistory" }),
        (0, class_transformer_1.Type)(function () { return submissionhistory_1.SubmissionHistory; }),
        __metadata("design:type", Array)
    ], StudentSubmission.prototype, "submissionHistory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updateTime" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "updateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userId" }),
        __metadata("design:type", String)
    ], StudentSubmission.prototype, "userId", void 0);
    return StudentSubmission;
}(utils_1.SpeakeasyBase));
exports.StudentSubmission = StudentSubmission;
