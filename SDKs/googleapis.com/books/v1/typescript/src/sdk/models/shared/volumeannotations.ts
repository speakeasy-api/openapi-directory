/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Volumeannotation } from "./volumeannotation";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class Volumeannotations extends SpeakeasyBase {
  /**
   * A list of volume annotations.
   */
  @SpeakeasyMetadata({ elemType: Volumeannotation })
  @Expose({ name: "items" })
  @Type(() => Volumeannotation)
  items?: Volumeannotation[];

  /**
   * Resource type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * The total number of volume annotations found.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalItems" })
  totalItems?: number;

  /**
   * The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
