"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var axios_1 = __importDefault(require("axios"));
var actionnotificationexportresults_1 = require("./actionnotificationexportresults");
var actionnotificationexports_1 = require("./actionnotificationexports");
var actionwebhookfailures_1 = require("./actionwebhookfailures");
var apikey_1 = require("./apikey");
var apikeys_1 = require("./apikeys");
var apps_1 = require("./apps");
var as2keys_1 = require("./as2keys");
var automations_1 = require("./automations");
var bandwidthsnapshots_1 = require("./bandwidthsnapshots");
var behaviors_1 = require("./behaviors");
var bundledownloads_1 = require("./bundledownloads");
var bundlerecipients_1 = require("./bundlerecipients");
var bundleregistrations_1 = require("./bundleregistrations");
var bundles_1 = require("./bundles");
var clickwraps_1 = require("./clickwraps");
var dnsrecords_1 = require("./dnsrecords");
var externalevents_1 = require("./externalevents");
var fileactions_1 = require("./fileactions");
var filecommentreactions_1 = require("./filecommentreactions");
var filecomments_1 = require("./filecomments");
var filemigrations_1 = require("./filemigrations");
var files_1 = require("./files");
var folders_1 = require("./folders");
var formfieldsets_1 = require("./formfieldsets");
var groupusers_1 = require("./groupusers");
var groups_1 = require("./groups");
var history_1 = require("./history");
var historyexportresults_1 = require("./historyexportresults");
var historyexports_1 = require("./historyexports");
var inboxrecipients_1 = require("./inboxrecipients");
var inboxregistrations_1 = require("./inboxregistrations");
var inboxuploads_1 = require("./inboxuploads");
var invoices_1 = require("./invoices");
var ipaddresses_1 = require("./ipaddresses");
var locks_1 = require("./locks");
var messagecommentreactions_1 = require("./messagecommentreactions");
var messagecomments_1 = require("./messagecomments");
var messagereactions_1 = require("./messagereactions");
var messages_1 = require("./messages");
var notifications_1 = require("./notifications");
var payments_1 = require("./payments");
var permissions_1 = require("./permissions");
var projects_1 = require("./projects");
var publickeys_1 = require("./publickeys");
var remoteservers_1 = require("./remoteservers");
var requests_1 = require("./requests");
var sessions_1 = require("./sessions");
var settingschanges_1 = require("./settingschanges");
var site_1 = require("./site");
var ssostrategies_1 = require("./ssostrategies");
var styles_1 = require("./styles");
var syncjobs_1 = require("./syncjobs");
var usagedailysnapshots_1 = require("./usagedailysnapshots");
var usagesnapshots_1 = require("./usagesnapshots");
var user_1 = require("./user");
var usercipheruses_1 = require("./usercipheruses");
var userrequests_1 = require("./userrequests");
var users_1 = require("./users");
var webhooktests_1 = require("./webhooktests");
exports.ServerList = [
    "https://files.com//app.files.com/api/rest/v1",
];
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props.serverUrl) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient = (_b = props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.actionNotificationExportResults = new actionnotificationexportresults_1.ActionNotificationExportResults(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.actionNotificationExports = new actionnotificationexports_1.ActionNotificationExports(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.actionWebhookFailures = new actionwebhookfailures_1.ActionWebhookFailures(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.apiKey = new apikey_1.ApiKey(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.apiKeys = new apikeys_1.ApiKeys(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.apps = new apps_1.Apps(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.as2Keys = new as2keys_1.As2Keys(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.automations = new automations_1.Automations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bandwidthSnapshots = new bandwidthsnapshots_1.BandwidthSnapshots(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.behaviors = new behaviors_1.Behaviors(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bundleDownloads = new bundledownloads_1.BundleDownloads(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bundleRecipients = new bundlerecipients_1.BundleRecipients(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bundleRegistrations = new bundleregistrations_1.BundleRegistrations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bundles = new bundles_1.Bundles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.clickwraps = new clickwraps_1.Clickwraps(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.dnsRecords = new dnsrecords_1.DnsRecords(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.externalEvents = new externalevents_1.ExternalEvents(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.fileActions = new fileactions_1.FileActions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.fileCommentReactions = new filecommentreactions_1.FileCommentReactions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.fileComments = new filecomments_1.FileComments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.fileMigrations = new filemigrations_1.FileMigrations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.files = new files_1.Files(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.folders = new folders_1.Folders(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.formFieldSets = new formfieldsets_1.FormFieldSets(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.groupUsers = new groupusers_1.GroupUsers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.groups = new groups_1.Groups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.history = new history_1.History(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.historyExportResults = new historyexportresults_1.HistoryExportResults(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.historyExports = new historyexports_1.HistoryExports(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.inboxRecipients = new inboxrecipients_1.InboxRecipients(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.inboxRegistrations = new inboxregistrations_1.InboxRegistrations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.inboxUploads = new inboxuploads_1.InboxUploads(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.invoices = new invoices_1.Invoices(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ipAddresses = new ipaddresses_1.IpAddresses(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.locks = new locks_1.Locks(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.messageCommentReactions = new messagecommentreactions_1.MessageCommentReactions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.messageComments = new messagecomments_1.MessageComments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.messageReactions = new messagereactions_1.MessageReactions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.messages = new messages_1.Messages(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.notifications = new notifications_1.Notifications(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payments = new payments_1.Payments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.permissions = new permissions_1.Permissions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.projects = new projects_1.Projects(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.publicKeys = new publickeys_1.PublicKeys(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.remoteServers = new remoteservers_1.RemoteServers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.requests = new requests_1.Requests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.sessions = new sessions_1.Sessions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.settingsChanges = new settingschanges_1.SettingsChanges(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.site = new site_1.Site(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ssoStrategies = new ssostrategies_1.SsoStrategies(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.styles = new styles_1.Styles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.syncJobs = new syncjobs_1.SyncJobs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.usageDailySnapshots = new usagedailysnapshots_1.UsageDailySnapshots(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.usageSnapshots = new usagesnapshots_1.UsageSnapshots(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.user = new user_1.User(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userCipherUses = new usercipheruses_1.UserCipherUses(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userRequests = new userrequests_1.UserRequests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.users = new users_1.Users(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.webhookTests = new webhooktests_1.WebhookTests(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
