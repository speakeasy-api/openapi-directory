// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// ReposUpdateWebhookRequestBodyConfig - Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#create-hook-config-params).
type ReposUpdateWebhookRequestBodyConfig struct {
	Address *string `json:"address,omitempty"`
	// The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
	ContentType *string                          `json:"content_type,omitempty"`
	InsecureSsl *shared.WebhookConfigInsecureSsl `json:"insecure_ssl,omitempty"`
	Room        *string                          `json:"room,omitempty"`
	// If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/enterprise-server@2.20/webhooks/event-payloads/#delivery-headers).
	Secret *string `json:"secret,omitempty"`
	// The URL to which the payloads will be delivered.
	URL string `json:"url"`
}

type ReposUpdateWebhookRequestBody struct {
	// Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
	Active *bool `json:"active,omitempty"`
	// Determines a list of events to be added to the list of events that the Hook triggers for.
	AddEvents []string `json:"add_events,omitempty"`
	// Key/value pairs to provide settings for this webhook. [These are defined below](https://docs.github.com/enterprise-server@2.20/rest/reference/repos#create-hook-config-params).
	Config *ReposUpdateWebhookRequestBodyConfig `json:"config,omitempty"`
	// Determines what [events](https://docs.github.com/enterprise-server@2.20/webhooks/event-payloads) the hook is triggered for. This replaces the entire array of events.
	Events []string `json:"events,omitempty"`
	// Determines a list of events to be removed from the list of events that the Hook triggers for.
	RemoveEvents []string `json:"remove_events,omitempty"`
}

type ReposUpdateWebhookRequest struct {
	RequestBody *ReposUpdateWebhookRequestBody `request:"mediaType=application/json"`
	HookID      int64                          `pathParam:"style=simple,explode=false,name=hook_id"`
	Owner       string                         `pathParam:"style=simple,explode=false,name=owner"`
	Repo        string                         `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposUpdateWebhookResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	Hook *shared.Hook
	// Validation failed
	ValidationError *shared.ValidationError
}
