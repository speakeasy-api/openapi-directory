/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParamTypeEnum } from "./paramtypeenum";
import { Expose } from "class-transformer";

/**
 * Specifies the parameters in the config file of the dynamic transform.
 */
export class TransformConfigParameter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "IsOptional" })
  isOptional?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ListType" })
  listType?: ParamTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: ParamTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidationMessage" })
  validationMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidationRule" })
  validationRule?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Value" })
  value?: string[];
}
