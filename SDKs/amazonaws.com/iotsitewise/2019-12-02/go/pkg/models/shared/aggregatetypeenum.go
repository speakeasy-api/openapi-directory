// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AggregateTypeEnum string

const (
	AggregateTypeEnumAverage           AggregateTypeEnum = "AVERAGE"
	AggregateTypeEnumCount             AggregateTypeEnum = "COUNT"
	AggregateTypeEnumMaximum           AggregateTypeEnum = "MAXIMUM"
	AggregateTypeEnumMinimum           AggregateTypeEnum = "MINIMUM"
	AggregateTypeEnumSum               AggregateTypeEnum = "SUM"
	AggregateTypeEnumStandardDeviation AggregateTypeEnum = "STANDARD_DEVIATION"
)

func (e *AggregateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AVERAGE":
		fallthrough
	case "COUNT":
		fallthrough
	case "MAXIMUM":
		fallthrough
	case "MINIMUM":
		fallthrough
	case "SUM":
		fallthrough
	case "STANDARD_DEVIATION":
		*e = AggregateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregateTypeEnum: %s", s)
	}
}
