<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetPlaylistsPlaylistIdTracksRequest
{
    /**
     * Filters content by level of access the user (logged in or anonymous) has to the track. The result list will include only tracks with the specified access. Include all options if you'd like to see all possible tracks. See `Track#access` schema for more details.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AccessEnum> $access
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=access')]
    public ?array $access = null;
    
    /**
     * Returns paginated collection of items (recommended, returning a list without pagination is deprecated and should not be used)
     * 
     * @var ?bool $linkedPartitioning
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=linked_partitioning')]
    public ?bool $linkedPartitioning = null;
    
    /**
     * SoundCloud playlist id
     * 
     * @var int $playlistId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=playlist_id')]
    public int $playlistId;
    
    /**
     * A secret token to fetch private playlists/tracks
     * 
     * @var ?string $secretToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=secret_token')]
    public ?string $secretToken = null;
    
	public function __construct()
	{
		$this->access = null;
		$this->linkedPartitioning = null;
		$this->playlistId = 0;
		$this->secretToken = null;
	}
}
