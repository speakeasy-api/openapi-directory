/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConfigureContactSettingsRequest - Request for the `ConfigureContactSettings` method.
 */
public class ConfigureContactSettingsRequest {
    /**
     * The list of contact notices that the caller acknowledges. The notices needed here depend on the values specified in `contact_settings`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactNotices")
    public ConfigureContactSettingsRequestContactNoticesEnum[] contactNotices;

    public ConfigureContactSettingsRequest withContactNotices(ConfigureContactSettingsRequestContactNoticesEnum[] contactNotices) {
        this.contactNotices = contactNotices;
        return this;
    }
    
    /**
     * Defines the contact information associated with a `Registration`. [ICANN](https://icann.org/) requires all domain names to have associated contact information. The `registrant_contact` is considered the domain's legal owner, and often the other contacts are identical.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contactSettings")
    public ContactSettings contactSettings;

    public ConfigureContactSettingsRequest withContactSettings(ContactSettings contactSettings) {
        this.contactSettings = contactSettings;
        return this;
    }
    
    /**
     * Required. The field mask describing which fields to update as a comma-separated list. For example, if only the registrant contact is being updated, the `update_mask` is `"registrant_contact"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateMask")
    public String updateMask;

    public ConfigureContactSettingsRequest withUpdateMask(String updateMask) {
        this.updateMask = updateMask;
        return this;
    }
    
    /**
     * Validate the request without actually updating the contact settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validateOnly")
    public Boolean validateOnly;

    public ConfigureContactSettingsRequest withValidateOnly(Boolean validateOnly) {
        this.validateOnly = validateOnly;
        return this;
    }
    
    public ConfigureContactSettingsRequest(){}
}
