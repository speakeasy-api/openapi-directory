<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GooglePrivacyDlpV2CryptoDeterministicConfig - Pseudonymization method that generates deterministic encryption for the given input. Outputs a base64 encoded representation of the encrypted output. Uses AES-SIV based on the RFC https://tools.ietf.org/html/rfc5297.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GooglePrivacyDlpV2CryptoDeterministicConfig
{
    /**
     * General identifier of a data field in a storage service.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2FieldId $context
     */
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2FieldId')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2FieldId $context = null;
    
    /**
     * This is a data encryption key (DEK) (as opposed to a key encryption key (KEK) stored by Cloud Key Management Service (Cloud KMS). When using Cloud KMS to wrap or unwrap a DEK, be sure to set an appropriate IAM policy on the KEK to ensure an attacker cannot unwrap the DEK.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2CryptoKey $cryptoKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('cryptoKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2CryptoKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2CryptoKey $cryptoKey = null;
    
    /**
     * Type of information detected by the API.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2InfoType $surrogateInfoType
     */
	#[\JMS\Serializer\Annotation\SerializedName('surrogateInfoType')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GooglePrivacyDlpV2InfoType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GooglePrivacyDlpV2InfoType $surrogateInfoType = null;
    
	public function __construct()
	{
		$this->context = null;
		$this->cryptoKey = null;
		$this->surrogateInfoType = null;
	}
}
