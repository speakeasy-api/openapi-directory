"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ingestioninfo as shared_ingestioninfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CdnSettingsFrameRateEnum(str, Enum):
    r"""The frame rate of the inbound video data."""
    THIRTYFPS = '30fps'
    SIXTYFPS = '60fps'
    VARIABLE = 'variable'

class CdnSettingsIngestionTypeEnum(str, Enum):
    r"""The method or protocol used to transmit the video stream."""
    RTMP = 'rtmp'
    DASH = 'dash'
    WEBRTC = 'webrtc'
    HLS = 'hls'

class CdnSettingsResolutionEnum(str, Enum):
    r"""The resolution of the inbound video data."""
    TWO_HUNDRED_AND_FORTYP = '240p'
    THREE_HUNDRED_AND_SIXTYP = '360p'
    FOUR_HUNDRED_AND_EIGHTYP = '480p'
    SEVEN_HUNDRED_AND_TWENTYP = '720p'
    ONE_THOUSAND_AND_EIGHTYP = '1080p'
    ONE_THOUSAND_FOUR_HUNDRED_AND_FORTYP = '1440p'
    TWO_THOUSAND_ONE_HUNDRED_AND_SIXTYP = '2160p'
    VARIABLE = 'variable'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CdnSettings:
    r"""Brief description of the live stream cdn settings."""
    
    format: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""The format of the video stream that you are sending to Youtube."""  
    frame_rate: Optional[CdnSettingsFrameRateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frameRate'), 'exclude': lambda f: f is None }})
    r"""The frame rate of the inbound video data."""  
    ingestion_info: Optional[shared_ingestioninfo.IngestionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ingestionInfo'), 'exclude': lambda f: f is None }})
    r"""Describes information necessary for ingesting an RTMP, HTTP, or SRT stream."""  
    ingestion_type: Optional[CdnSettingsIngestionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ingestionType'), 'exclude': lambda f: f is None }})
    r"""The method or protocol used to transmit the video stream."""  
    resolution: Optional[CdnSettingsResolutionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution'), 'exclude': lambda f: f is None }})
    r"""The resolution of the inbound video data."""  
    