/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateJobRequestBody {
    /**
     * Defines the Amazon Braket job to be created. Specifies the container image the job uses and the paths to the Python scripts used for entry and training.
     */
    @JsonProperty("algorithmSpecification")
    public CreateJobRequestBodyAlgorithmSpecification algorithmSpecification;

    public CreateJobRequestBody withAlgorithmSpecification(CreateJobRequestBodyAlgorithmSpecification algorithmSpecification) {
        this.algorithmSpecification = algorithmSpecification;
        return this;
    }
    
    /**
     * Contains information about the output locations for job checkpoint data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkpointConfig")
    public CreateJobRequestBodyCheckpointConfig checkpointConfig;

    public CreateJobRequestBody withCheckpointConfig(CreateJobRequestBodyCheckpointConfig checkpointConfig) {
        this.checkpointConfig = checkpointConfig;
        return this;
    }
    
    /**
     * A unique token that guarantees that the call to this API is idempotent.
     */
    @JsonProperty("clientToken")
    public String clientToken;

    public CreateJobRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * Configures the quantum processing units (QPUs) or simulator used to create and run an Amazon Braket job.
     */
    @JsonProperty("deviceConfig")
    public CreateJobRequestBodyDeviceConfig deviceConfig;

    public CreateJobRequestBody withDeviceConfig(CreateJobRequestBodyDeviceConfig deviceConfig) {
        this.deviceConfig = deviceConfig;
        return this;
    }
    
    /**
     * Algorithm-specific parameters used by an Amazon Braket job that influence the quality of the training job. The values are set with a string of JSON key:value pairs, where the key is the name of the hyperparameter and the value is the value of th hyperparameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hyperParameters")
    public java.util.Map<String, String> hyperParameters;

    public CreateJobRequestBody withHyperParameters(java.util.Map<String, String> hyperParameters) {
        this.hyperParameters = hyperParameters;
        return this;
    }
    
    /**
     * A list of parameters that specify the name and type of input data and where it is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputDataConfig")
    public org.openapis.openapi.models.shared.InputFileConfig[] inputDataConfig;

    public CreateJobRequestBody withInputDataConfig(org.openapis.openapi.models.shared.InputFileConfig[] inputDataConfig) {
        this.inputDataConfig = inputDataConfig;
        return this;
    }
    
    /**
     * Configures the resource instances to use while running the Amazon Braket hybrid job on Amazon Braket.
     */
    @JsonProperty("instanceConfig")
    public CreateJobRequestBodyInstanceConfig instanceConfig;

    public CreateJobRequestBody withInstanceConfig(CreateJobRequestBodyInstanceConfig instanceConfig) {
        this.instanceConfig = instanceConfig;
        return this;
    }
    
    /**
     * The name of the Amazon Braket job.
     */
    @JsonProperty("jobName")
    public String jobName;

    public CreateJobRequestBody withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    /**
     * Specifies the path to the S3 location where you want to store job artifacts and the encryption key used to store them.
     */
    @JsonProperty("outputDataConfig")
    public CreateJobRequestBodyOutputDataConfig outputDataConfig;

    public CreateJobRequestBody withOutputDataConfig(CreateJobRequestBodyOutputDataConfig outputDataConfig) {
        this.outputDataConfig = outputDataConfig;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of an IAM role that Amazon Braket can assume to perform tasks on behalf of a user. It can access user resources, run an Amazon Braket job container on behalf of user, and output resources to the users' s3 buckets.
     */
    @JsonProperty("roleArn")
    public String roleArn;

    public CreateJobRequestBody withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    /**
     * Specifies limits for how long an Amazon Braket job can run. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stoppingCondition")
    public CreateJobRequestBodyStoppingCondition stoppingCondition;

    public CreateJobRequestBody withStoppingCondition(CreateJobRequestBodyStoppingCondition stoppingCondition) {
        this.stoppingCondition = stoppingCondition;
        return this;
    }
    
    /**
     * A tag object that consists of a key and an optional value, used to manage metadata for Amazon Braket resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateJobRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateJobRequestBody(@JsonProperty("algorithmSpecification") CreateJobRequestBodyAlgorithmSpecification algorithmSpecification, @JsonProperty("clientToken") String clientToken, @JsonProperty("deviceConfig") CreateJobRequestBodyDeviceConfig deviceConfig, @JsonProperty("instanceConfig") CreateJobRequestBodyInstanceConfig instanceConfig, @JsonProperty("jobName") String jobName, @JsonProperty("outputDataConfig") CreateJobRequestBodyOutputDataConfig outputDataConfig, @JsonProperty("roleArn") String roleArn) {
        this.algorithmSpecification = algorithmSpecification;
        this.clientToken = clientToken;
        this.deviceConfig = deviceConfig;
        this.instanceConfig = instanceConfig;
        this.jobName = jobName;
        this.outputDataConfig = outputDataConfig;
        this.roleArn = roleArn;
  }
}
