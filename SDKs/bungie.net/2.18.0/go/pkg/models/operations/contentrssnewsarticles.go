// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ContentRssNewsArticlesPathParams struct {
	// Zero-based pagination token for paging through result sets.
	PageToken string `pathParam:"style=simple,explode=false,name=pageToken"`
}

type ContentRssNewsArticlesQueryParams struct {
	// Optionally filter response to only include news items in a certain category.
	Categoryfilter *string `queryParam:"style=form,explode=true,name=categoryfilter"`
	// Optionally include full content body for each news item.
	Includebody *bool `queryParam:"style=form,explode=true,name=includebody"`
}

type ContentRssNewsArticlesRequest struct {
	PathParams  ContentRssNewsArticlesPathParams
	QueryParams ContentRssNewsArticlesQueryParams
}

// ContentRssNewsArticles200Wildcard - Look at the Response property for more information about the nature of this response
type ContentRssNewsArticles200Wildcard struct {
	DetailedErrorTrace *string
	ErrorCode          *int
	ErrorStatus        *string
	Message            *string
	MessageData        map[string]string
	Response           *shared.ContentNewsArticleRssResponse
	ThrottleSeconds    *int
}

type ContentRssNewsArticlesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
