// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LifeCycleStateEnum string

const (
	LifeCycleStateEnumCreating  LifeCycleStateEnum = "creating"
	LifeCycleStateEnumAvailable LifeCycleStateEnum = "available"
	LifeCycleStateEnumUpdating  LifeCycleStateEnum = "updating"
	LifeCycleStateEnumDeleting  LifeCycleStateEnum = "deleting"
	LifeCycleStateEnumDeleted   LifeCycleStateEnum = "deleted"
	LifeCycleStateEnumError     LifeCycleStateEnum = "error"
)

func (e *LifeCycleStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "creating":
		fallthrough
	case "available":
		fallthrough
	case "updating":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "error":
		*e = LifeCycleStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LifeCycleStateEnum: %s", s)
	}
}
