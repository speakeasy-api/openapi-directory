/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum ArticleGeoFacet2Enum {
  Unknown = "",
}

export enum ArticleGeoFacet1Enum {
  Unknown = "",
}

export class Article extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "abstract" })
  abstract?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "byline" })
  byline?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "column" })
  column?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "des_facet" })
  desFacet?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "geo_facet" })
  geoFacet?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "media" })
  media?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "org_facet" })
  orgFacet?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "per_facet" })
  perFacet?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "published_date" })
  publishedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "section" })
  section?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
