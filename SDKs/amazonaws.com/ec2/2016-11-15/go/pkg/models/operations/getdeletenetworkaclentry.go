// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteNetworkACLEntryActionEnum
type GETDeleteNetworkACLEntryActionEnum string

const (
	GETDeleteNetworkACLEntryActionEnumDeleteNetworkACLEntry GETDeleteNetworkACLEntryActionEnum = "DeleteNetworkAclEntry"
)

func (e GETDeleteNetworkACLEntryActionEnum) ToPointer() *GETDeleteNetworkACLEntryActionEnum {
	return &e
}

func (e *GETDeleteNetworkACLEntryActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteNetworkAclEntry":
		*e = GETDeleteNetworkACLEntryActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkACLEntryActionEnum: %v", v)
	}
}

// GETDeleteNetworkACLEntryVersionEnum
type GETDeleteNetworkACLEntryVersionEnum string

const (
	GETDeleteNetworkACLEntryVersionEnumTwoThousandAndSixteen1115 GETDeleteNetworkACLEntryVersionEnum = "2016-11-15"
)

func (e GETDeleteNetworkACLEntryVersionEnum) ToPointer() *GETDeleteNetworkACLEntryVersionEnum {
	return &e
}

func (e *GETDeleteNetworkACLEntryVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteNetworkACLEntryVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkACLEntryVersionEnum: %v", v)
	}
}

type GETDeleteNetworkACLEntryRequest struct {
	Action GETDeleteNetworkACLEntryActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// Indicates whether the rule is an egress rule.
	Egress bool `queryParam:"style=form,explode=true,name=Egress"`
	// The ID of the network ACL.
	NetworkACLID string `queryParam:"style=form,explode=true,name=NetworkAclId"`
	// The rule number of the entry to delete.
	RuleNumber        int64                               `queryParam:"style=form,explode=true,name=RuleNumber"`
	Version           GETDeleteNetworkACLEntryVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteNetworkACLEntryResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
