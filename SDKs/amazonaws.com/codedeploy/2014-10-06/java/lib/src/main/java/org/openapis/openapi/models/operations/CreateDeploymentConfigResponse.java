/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateDeploymentConfigResponse {
    
    public String contentType;

    public CreateDeploymentConfigResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateDeploymentConfigOutput createDeploymentConfigOutput;

    public CreateDeploymentConfigResponse withCreateDeploymentConfigOutput(org.openapis.openapi.models.shared.CreateDeploymentConfigOutput createDeploymentConfigOutput) {
        this.createDeploymentConfigOutput = createDeploymentConfigOutput;
        return this;
    }
    
    /**
     * DeploymentConfigAlreadyExistsException
     */
    
    public Object deploymentConfigAlreadyExistsException;

    public CreateDeploymentConfigResponse withDeploymentConfigAlreadyExistsException(Object deploymentConfigAlreadyExistsException) {
        this.deploymentConfigAlreadyExistsException = deploymentConfigAlreadyExistsException;
        return this;
    }
    
    /**
     * DeploymentConfigLimitExceededException
     */
    
    public Object deploymentConfigLimitExceededException;

    public CreateDeploymentConfigResponse withDeploymentConfigLimitExceededException(Object deploymentConfigLimitExceededException) {
        this.deploymentConfigLimitExceededException = deploymentConfigLimitExceededException;
        return this;
    }
    
    /**
     * DeploymentConfigNameRequiredException
     */
    
    public Object deploymentConfigNameRequiredException;

    public CreateDeploymentConfigResponse withDeploymentConfigNameRequiredException(Object deploymentConfigNameRequiredException) {
        this.deploymentConfigNameRequiredException = deploymentConfigNameRequiredException;
        return this;
    }
    
    /**
     * InvalidComputePlatformException
     */
    
    public Object invalidComputePlatformException;

    public CreateDeploymentConfigResponse withInvalidComputePlatformException(Object invalidComputePlatformException) {
        this.invalidComputePlatformException = invalidComputePlatformException;
        return this;
    }
    
    /**
     * InvalidDeploymentConfigNameException
     */
    
    public Object invalidDeploymentConfigNameException;

    public CreateDeploymentConfigResponse withInvalidDeploymentConfigNameException(Object invalidDeploymentConfigNameException) {
        this.invalidDeploymentConfigNameException = invalidDeploymentConfigNameException;
        return this;
    }
    
    /**
     * InvalidMinimumHealthyHostValueException
     */
    
    public Object invalidMinimumHealthyHostValueException;

    public CreateDeploymentConfigResponse withInvalidMinimumHealthyHostValueException(Object invalidMinimumHealthyHostValueException) {
        this.invalidMinimumHealthyHostValueException = invalidMinimumHealthyHostValueException;
        return this;
    }
    
    /**
     * InvalidTrafficRoutingConfigurationException
     */
    
    public Object invalidTrafficRoutingConfigurationException;

    public CreateDeploymentConfigResponse withInvalidTrafficRoutingConfigurationException(Object invalidTrafficRoutingConfigurationException) {
        this.invalidTrafficRoutingConfigurationException = invalidTrafficRoutingConfigurationException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateDeploymentConfigResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateDeploymentConfigResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public CreateDeploymentConfigResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
