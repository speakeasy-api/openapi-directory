// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MetadataImportInput - A metastore resource that imports metadata.
type MetadataImportInput struct {
	// A specification of the location of and metadata about a database dump from a relational database management system.
	DatabaseDump *DatabaseDump `json:"databaseDump,omitempty"`
	// The description of the metadata import.
	Description *string `json:"description,omitempty"`
	// Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
	Name *string `json:"name,omitempty"`
}

// MetadataImportStateEnum - Output only. The current state of the metadata import.
type MetadataImportStateEnum string

const (
	MetadataImportStateEnumStateUnspecified MetadataImportStateEnum = "STATE_UNSPECIFIED"
	MetadataImportStateEnumRunning          MetadataImportStateEnum = "RUNNING"
	MetadataImportStateEnumSucceeded        MetadataImportStateEnum = "SUCCEEDED"
	MetadataImportStateEnumUpdating         MetadataImportStateEnum = "UPDATING"
	MetadataImportStateEnumFailed           MetadataImportStateEnum = "FAILED"
)

func (e *MetadataImportStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "FAILED":
		*e = MetadataImportStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MetadataImportStateEnum: %s", s)
	}
}

// MetadataImport - A metastore resource that imports metadata.
type MetadataImport struct {
	// Output only. The time when the metadata import was started.
	CreateTime *string `json:"createTime,omitempty"`
	// A specification of the location of and metadata about a database dump from a relational database management system.
	DatabaseDump *DatabaseDump `json:"databaseDump,omitempty"`
	// The description of the metadata import.
	Description *string `json:"description,omitempty"`
	// Output only. The time when the metadata import finished.
	EndTime *string `json:"endTime,omitempty"`
	// Immutable. The relative resource name of the metadata import, of the form:projects/{project_number}/locations/{location_id}/services/{service_id}/metadataImports/{metadata_import_id}.
	Name *string `json:"name,omitempty"`
	// Output only. The current state of the metadata import.
	State *MetadataImportStateEnum `json:"state,omitempty"`
	// Output only. The time when the metadata import was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}
