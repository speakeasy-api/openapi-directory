<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CustomObjectCustomFieldDefinitionUpdate - The custom field definition in the custom object
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CustomObjectCustomFieldDefinitionUpdate
{
    /**
     * Applicable if the `type` of the action is  `updateField`
     * 
     * @var ?string $default
     */
	#[\JMS\Serializer\Annotation\SerializedName('default')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $default = null;
    
    /**
     * Applicable if the `type` of the action is  `updateField`
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The data format of the custom field
     * 
     * @var ?string $format
     */
	#[\JMS\Serializer\Annotation\SerializedName('format')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $format = null;
    
    /**
     * The UI label of the custom field
     * 
     * @var ?string $label
     */
	#[\JMS\Serializer\Annotation\SerializedName('label')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $label = null;
    
    /**
     * Specifies that this is a custom field
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomObjectCustomFieldDefinitionUpdateOriginEnum $origin
     */
	#[\JMS\Serializer\Annotation\SerializedName('origin')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CustomObjectCustomFieldDefinitionUpdateOriginEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomObjectCustomFieldDefinitionUpdateOriginEnum $origin = null;
    
    /**
     * The data type of the custom field
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->default = null;
		$this->description = null;
		$this->format = null;
		$this->label = null;
		$this->origin = null;
		$this->type = null;
	}
}
