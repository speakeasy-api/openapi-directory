<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetNetworkWirelessSsidSplashSettings200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetNetworkWirelessSsidSplashSettings200ApplicationJSON
{
    /**
     * Whether or not to allow simultaneous logins from different devices.
     * 
     * @var ?bool $allowSimultaneousLogins
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowSimultaneousLogins')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowSimultaneousLogins = null;
    
    /**
     * Details associated with billing splash
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONBilling $billing
     */
	#[\JMS\Serializer\Annotation\SerializedName('billing')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONBilling')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONBilling $billing = null;
    
    /**
     * How restricted allowing traffic should be. If true, all traffic types are blocked until the splash page is acknowledged. If false, all non-HTTP traffic is allowed before the splash page is acknowledged.
     * 
     * @var ?bool $blockAllTrafficBeforeSignOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('blockAllTrafficBeforeSignOn')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $blockAllTrafficBeforeSignOn = null;
    
    /**
     * How login attempts should be handled when the controller is unreachable.
     * 
     * @var ?string $controllerDisconnectionBehavior
     */
	#[\JMS\Serializer\Annotation\SerializedName('controllerDisconnectionBehavior')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $controllerDisconnectionBehavior = null;
    
    /**
     * Details associated with guest sponsored splash
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONGuestSponsorship $guestSponsorship
     */
	#[\JMS\Serializer\Annotation\SerializedName('guestSponsorship')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONGuestSponsorship')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONGuestSponsorship $guestSponsorship = null;
    
    /**
     * The custom redirect URL where the users will go after the splash page.
     * 
     * @var ?string $redirectUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('redirectUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $redirectUrl = null;
    
    /**
     * Self-registration for splash with Meraki authentication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSelfRegistration $selfRegistration
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfRegistration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSelfRegistration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONSelfRegistration $selfRegistration = null;
    
    /**
     * Systems Manager sentry enrollment splash settings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSentryEnrollment $sentryEnrollment
     */
	#[\JMS\Serializer\Annotation\SerializedName('sentryEnrollment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSentryEnrollment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONSentryEnrollment $sentryEnrollment = null;
    
    /**
     * The image used in the splash page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashImage $splashImage
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashImage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashImage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashImage $splashImage = null;
    
    /**
     * The logo used in the splash page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashLogo $splashLogo
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashLogo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashLogo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashLogo $splashLogo = null;
    
    /**
     * The type of splash page for this SSID
     * 
     * @var ?string $splashPage
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashPage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $splashPage = null;
    
    /**
     * The prepaid front image used in the splash page.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashPrepaidFront $splashPrepaidFront
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashPrepaidFront')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashPrepaidFront')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkWirelessSsidSplashSettings200ApplicationJSONSplashPrepaidFront $splashPrepaidFront = null;
    
    /**
     * Splash timeout in minutes.
     * 
     * @var ?int $splashTimeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashTimeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $splashTimeout = null;
    
    /**
     * The custom splash URL of the click-through splash page.
     * 
     * @var ?string $splashUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('splashUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $splashUrl = null;
    
    /**
     * SSID number
     * 
     * @var ?int $ssidNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('ssidNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ssidNumber = null;
    
    /**
     * The Boolean indicating whether the the user will be redirected to the custom redirect URL after the splash page.
     * 
     * @var ?bool $useRedirectUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('useRedirectUrl')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useRedirectUrl = null;
    
    /**
     * Boolean indicating whether the users will be redirected to the custom splash url
     * 
     * @var ?bool $useSplashUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('useSplashUrl')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useSplashUrl = null;
    
    /**
     * The welcome message for the users on the splash page.
     * 
     * @var ?string $welcomeMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('welcomeMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $welcomeMessage = null;
    
	public function __construct()
	{
		$this->allowSimultaneousLogins = null;
		$this->billing = null;
		$this->blockAllTrafficBeforeSignOn = null;
		$this->controllerDisconnectionBehavior = null;
		$this->guestSponsorship = null;
		$this->redirectUrl = null;
		$this->selfRegistration = null;
		$this->sentryEnrollment = null;
		$this->splashImage = null;
		$this->splashLogo = null;
		$this->splashPage = null;
		$this->splashPrepaidFront = null;
		$this->splashTimeout = null;
		$this->splashUrl = null;
		$this->ssidNumber = null;
		$this->useRedirectUrl = null;
		$this->useSplashUrl = null;
		$this->welcomeMessage = null;
	}
}
