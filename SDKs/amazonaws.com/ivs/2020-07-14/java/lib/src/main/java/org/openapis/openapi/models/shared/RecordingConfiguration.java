/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RecordingConfiguration - An object representing a configuration to record a channel stream.
 */
public class RecordingConfiguration {
    @JsonProperty("arn")
    public String arn;

    public RecordingConfiguration withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonProperty("destinationConfiguration")
    public DestinationConfiguration destinationConfiguration;

    public RecordingConfiguration withDestinationConfiguration(DestinationConfiguration destinationConfiguration) {
        this.destinationConfiguration = destinationConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public RecordingConfiguration withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordingReconnectWindowSeconds")
    public Long recordingReconnectWindowSeconds;

    public RecordingConfiguration withRecordingReconnectWindowSeconds(Long recordingReconnectWindowSeconds) {
        this.recordingReconnectWindowSeconds = recordingReconnectWindowSeconds;
        return this;
    }
    
    @JsonProperty("state")
    public RecordingConfigurationStateEnum state;

    public RecordingConfiguration withState(RecordingConfigurationStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public RecordingConfiguration withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailConfiguration")
    public ThumbnailConfiguration thumbnailConfiguration;

    public RecordingConfiguration withThumbnailConfiguration(ThumbnailConfiguration thumbnailConfiguration) {
        this.thumbnailConfiguration = thumbnailConfiguration;
        return this;
    }
    
    public RecordingConfiguration(@JsonProperty("arn") String arn, @JsonProperty("destinationConfiguration") DestinationConfiguration destinationConfiguration, @JsonProperty("state") RecordingConfigurationStateEnum state) {
        this.arn = arn;
        this.destinationConfiguration = destinationConfiguration;
        this.state = state;
  }
}
