// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type APIDimensionFilterDimensionEnum string

const (
	APIDimensionFilterDimensionEnumQuery            APIDimensionFilterDimensionEnum = "QUERY"
	APIDimensionFilterDimensionEnumPage             APIDimensionFilterDimensionEnum = "PAGE"
	APIDimensionFilterDimensionEnumCountry          APIDimensionFilterDimensionEnum = "COUNTRY"
	APIDimensionFilterDimensionEnumDevice           APIDimensionFilterDimensionEnum = "DEVICE"
	APIDimensionFilterDimensionEnumSearchAppearance APIDimensionFilterDimensionEnum = "SEARCH_APPEARANCE"
)

func (e APIDimensionFilterDimensionEnum) ToPointer() *APIDimensionFilterDimensionEnum {
	return &e
}

func (e *APIDimensionFilterDimensionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUERY":
		fallthrough
	case "PAGE":
		fallthrough
	case "COUNTRY":
		fallthrough
	case "DEVICE":
		fallthrough
	case "SEARCH_APPEARANCE":
		*e = APIDimensionFilterDimensionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APIDimensionFilterDimensionEnum: %v", v)
	}
}

type APIDimensionFilterOperatorEnum string

const (
	APIDimensionFilterOperatorEnumEquals         APIDimensionFilterOperatorEnum = "EQUALS"
	APIDimensionFilterOperatorEnumNotEquals      APIDimensionFilterOperatorEnum = "NOT_EQUALS"
	APIDimensionFilterOperatorEnumContains       APIDimensionFilterOperatorEnum = "CONTAINS"
	APIDimensionFilterOperatorEnumNotContains    APIDimensionFilterOperatorEnum = "NOT_CONTAINS"
	APIDimensionFilterOperatorEnumIncludingRegex APIDimensionFilterOperatorEnum = "INCLUDING_REGEX"
	APIDimensionFilterOperatorEnumExcludingRegex APIDimensionFilterOperatorEnum = "EXCLUDING_REGEX"
)

func (e APIDimensionFilterOperatorEnum) ToPointer() *APIDimensionFilterOperatorEnum {
	return &e
}

func (e *APIDimensionFilterOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EQUALS":
		fallthrough
	case "NOT_EQUALS":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "NOT_CONTAINS":
		fallthrough
	case "INCLUDING_REGEX":
		fallthrough
	case "EXCLUDING_REGEX":
		*e = APIDimensionFilterOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for APIDimensionFilterOperatorEnum: %v", v)
	}
}

// APIDimensionFilter - A filter test to be applied to each row in the data set, where a match can return the row. Filters are string comparisons, and values and dimension names are not case-sensitive. Individual filters are either AND'ed or OR'ed within their parent filter group, according to the group's group type. You do not need to group by a specified dimension to filter against it.
type APIDimensionFilter struct {
	Dimension  *APIDimensionFilterDimensionEnum `json:"dimension,omitempty"`
	Expression *string                          `json:"expression,omitempty"`
	Operator   *APIDimensionFilterOperatorEnum  `json:"operator,omitempty"`
}
