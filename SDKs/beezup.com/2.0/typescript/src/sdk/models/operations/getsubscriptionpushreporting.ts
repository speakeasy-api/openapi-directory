/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSubscriptionPushReportingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageNumber",
  })
  pageNumber?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;
}

export class GetSubscriptionPushReportingResponse extends SpeakeasyBase {
  /**
   * Occurs when something goes wrong
   */
  @SpeakeasyMetadata()
  beezUPCommonErrorResponseMessage?: shared.BeezUPCommonErrorResponseMessage;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The subscription is not found
   */
  @SpeakeasyMetadata()
  errorResponseMessage?: shared.ErrorResponseMessage;

  /**
   * Subscription push reporting info
   */
  @SpeakeasyMetadata({ elemType: shared.SubscriptionPushReporting })
  subscriptionPushReportings?: shared.SubscriptionPushReporting[];
}
