/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class CreateSubscriberResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;
    public CreateSubscriberResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * AccountNotFoundException
     */
    
    public Object accountNotFoundException;
    public CreateSubscriberResponse withAccountNotFoundException(Object accountNotFoundException) {
        this.accountNotFoundException = accountNotFoundException;
        return this;
    }
    
    /**
     * BucketNotFoundException
     */
    
    public Object bucketNotFoundException;
    public CreateSubscriberResponse withBucketNotFoundException(Object bucketNotFoundException) {
        this.bucketNotFoundException = bucketNotFoundException;
        return this;
    }
    
    /**
     * ConflictSubscriptionException
     */
    
    public Object conflictSubscriptionException;
    public CreateSubscriberResponse withConflictSubscriptionException(Object conflictSubscriptionException) {
        this.conflictSubscriptionException = conflictSubscriptionException;
        return this;
    }
    
    
    public String contentType;
    public CreateSubscriberResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateSubscriberResponse createSubscriberResponse;
    public CreateSubscriberResponse withCreateSubscriberResponse(org.openapis.openapi.models.shared.CreateSubscriberResponse createSubscriberResponse) {
        this.createSubscriberResponse = createSubscriberResponse;
        return this;
    }
    
    /**
     * InternalServerException
     */
    
    public Object internalServerException;
    public CreateSubscriberResponse withInternalServerException(Object internalServerException) {
        this.internalServerException = internalServerException;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;
    public CreateSubscriberResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    
    public Integer statusCode;
    public CreateSubscriberResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public CreateSubscriberResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public CreateSubscriberResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;
    public CreateSubscriberResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
}
