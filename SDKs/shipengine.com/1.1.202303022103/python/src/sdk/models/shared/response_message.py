"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ResponseMessageAddressValidationCodeEnum(str, Enum):
    r"""The error codes that can be returned by the address validation API"""
    A1000 = 'a1000'
    A1001 = 'a1001'
    A1002 = 'a1002'
    A1003 = 'a1003'
    A1004 = 'a1004'
    A1005 = 'a1005'
    A1006 = 'a1006'
    A1007 = 'a1007'
    A1008 = 'a1008'
    R1000 = 'r1000'
    R1001 = 'r1001'
    R1002 = 'r1002'
    R1003 = 'r1003'

class ResponseMessageAddressValidationDetailCodeEnum(str, Enum):
    r"""The detailed error codes that can be returned by the address validation API"""
    UNSUPPORTED_COUNTRY = 'unsupported_country'
    NON_SUPPORTED_COUNTRY = 'non_supported_country'
    MINIMUM_POSTAL_CODE_VERIFICATION_FAILED = 'minimum_postal_code_verification_failed'
    STREET_DOES_NOT_MATCH_UNIQUE_STREET_NAME = 'street_does_not_match_unique_street_name'
    MULTIPLE_DIRECTIONALS = 'multiple_directionals'
    MULTIPLE_MATCHES = 'multiple_matches'
    SUITE_NOT_VALID = 'suite_not_valid'
    SUITE_MISSING = 'suite_missing'
    INCOMPATIBLE_PAIRED_LABELS = 'incompatible_paired_labels'
    INVALID_HOUSE_NUMBER = 'invalid_house_number'
    MISSING_HOUSE_NUMBER = 'missing_house_number'
    INVALID_BOX_NUMBER = 'invalid_box_number'
    INVALID_CHARGE_EVENT = 'invalid_charge_event'
    MISSING_BOX_NUMBER = 'missing_box_number'
    MISSING_CMRA_OR_PRIVATE_MAIL_BOX_NUMBER = 'missing_cmra_or_private_mail_box_number'
    SUITE_HAS_NO_SECONDARIES = 'suite_has_no_secondaries'
    POSTAL_CODE_CHANGED_OR_ADDED = 'postal_code_changed_or_added'
    STATE_PROVINCE_CHANGED_OR_ADDED = 'state_province_changed_or_added'
    CITY_LOCALITY_CHANGED_OR_ADDED = 'city_locality_changed_or_added'
    URBANIZATION_CHANGED = 'urbanization_changed'
    STREET_NAME_SPELLING_CHANGED_OR_ADDED = 'street_name_spelling_changed_or_added'
    STREET_NAME_TYPE_CHANGED_OR_ADDED = 'street_name_type_changed_or_added'
    STREET_DIRECTION_CHANGED_OR_ADDED = 'street_direction_changed_or_added'
    SUITE_TYPE_CHANGED_OR_ADDED = 'suite_type_changed_or_added'
    SUITE_UNIT_NUMBER_CHANGED_OR_ADDED = 'suite_unit_number_changed_or_added'
    DOUBLE_DEPENDENT_LOCALITY_CHANGED_OR_ADDED = 'double_dependent_locality_changed_or_added'
    SUBADMINISTRATIVE_AREA_CHANGED_OR_ADDED = 'subadministrative_area_changed_or_added'
    SUBNATIONAL_AREA_CHANGED_OR_ADDED = 'subnational_area_changed_or_added'
    PO_BOX_CHANGED_OR_ADDED = 'po_box_changed_or_added'
    PREMISE_TYPE_CHANGED_OR_ADDED = 'premise_type_changed_or_added'
    HOUSE_NUMBER_CHANGED = 'house_number_changed'
    ORGANIZATION_CHANGED_OR_ADDED = 'organization_changed_or_added'
    PARTIALLY_VERIFIED_TO_STATE_LEVEL = 'partially_verified_to_state_level'
    PARTIALLY_VERIFIED_TO_CITY_LEVEL = 'partially_verified_to_city_level'
    PARTIALLY_VERIFIED_TO_STREET_LEVEL = 'partially_verified_to_street_level'
    PARTIALLY_VERIFIED_TO_PREMISE_LEVEL = 'partially_verified_to_premise_level'
    VERIFIED_TO_STATE_LEVEL = 'verified_to_state_level'
    VERIFIED_TO_CITY_LEVEL = 'verified_to_city_level'
    VERIFIED_TO_STREET_LEVEL = 'verified_to_street_level'
    VERIFIED_TO_PREMISE_LEVEL = 'verified_to_premise_level'
    VERIFIED_TO_SUITE_LEVEL = 'verified_to_suite_level'
    CODED_TO_STREET_LAVEL = 'coded_to_street_lavel'
    CODED_TO_NEIGHBORHOOD_LEVEL = 'coded_to_neighborhood_level'
    CODED_TO_COMMUNITY_LEVEL = 'coded_to_community_level'
    CODED_TO_STATE_LEVEL = 'coded_to_state_level'
    CODED_TO_ROOFTOP_LEVEL = 'coded_to_rooftop_level'
    CODED_TO_ROOFTOP_INTERPOLATION_LEVEL = 'coded_to_rooftop_interpolation_level'
    NAME_MAX_LENGTH_EXCEEDED = 'name_max_length_exceeded'
    PHONE_MAX_LENGTH_EXCEEDED = 'phone_max_length_exceeded'
    COMPANY_NAME_MAX_LENGTH_EXCEEDED = 'company_name_max_length_exceeded'
    LINE1_MIN_MAX_LENGTH = 'line1_min_max_length'
    LINE2_MAX_LENGTH_EXCEEDED = 'line2_max_length_exceeded'
    LINE3_MAX_LENGTH_EXCEEDED = 'line3_max_length_exceeded'
    CITY_LOCALITY_MAX_LENGTH_EXCEEDED = 'city_locality_max_length_exceeded'
    STATE_PROVINCE_MAX_LENGTH_EXCEEDED = 'state_province_max_length_exceeded'
    INVALID_POSTAL_CODE = 'invalid_postal_code'
    COUNTRY_INVALID_LENGTH = 'country_invalid_length'
    ADDRESS_NOT_FOUND = 'address_not_found'

class ResponseMessageAddressValidationMessageTypeEnum(str, Enum):
    r"""The different types of messages that can be returned by the address validation API"""
    ERROR = 'error'
    WARNING = 'warning'
    INFO = 'info'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResponseMessage:
    r"""A response message that displays when additional info is needed for an address validation request."""
    
    code: ResponseMessageAddressValidationCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    detail_code: ResponseMessageAddressValidationDetailCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail_code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""Message explaining the address validation error"""  
    type: ResponseMessageAddressValidationMessageTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    