"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberLease = exports.NumberLeaseStatusEnum = exports.NumberLeaseInput = exports.NumberLeaseTypeEnum = exports.NumberLeaseTextFeatureStatusEnum = exports.NumberLeaseCallFeatureStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var region_1 = require("./region");
var class_transformer_1 = require("class-transformer");
/**
 * A status of a call feature. Available values: DISABLED, ENABLED
 */
var NumberLeaseCallFeatureStatusEnum;
(function (NumberLeaseCallFeatureStatusEnum) {
    NumberLeaseCallFeatureStatusEnum["Unsupported"] = "UNSUPPORTED";
    NumberLeaseCallFeatureStatusEnum["Pending"] = "PENDING";
    NumberLeaseCallFeatureStatusEnum["Disabled"] = "DISABLED";
    NumberLeaseCallFeatureStatusEnum["Enabled"] = "ENABLED";
})(NumberLeaseCallFeatureStatusEnum = exports.NumberLeaseCallFeatureStatusEnum || (exports.NumberLeaseCallFeatureStatusEnum = {}));
/**
 * A status of a text feature. Available values: DISABLED, ENABLED
 */
var NumberLeaseTextFeatureStatusEnum;
(function (NumberLeaseTextFeatureStatusEnum) {
    NumberLeaseTextFeatureStatusEnum["Unsupported"] = "UNSUPPORTED";
    NumberLeaseTextFeatureStatusEnum["Pending"] = "PENDING";
    NumberLeaseTextFeatureStatusEnum["Disabled"] = "DISABLED";
    NumberLeaseTextFeatureStatusEnum["Enabled"] = "ENABLED";
})(NumberLeaseTextFeatureStatusEnum = exports.NumberLeaseTextFeatureStatusEnum || (exports.NumberLeaseTextFeatureStatusEnum = {}));
/**
 * ~
 */
var NumberLeaseTypeEnum;
(function (NumberLeaseTypeEnum) {
    NumberLeaseTypeEnum["Plan"] = "PLAN";
    NumberLeaseTypeEnum["Extra"] = "EXTRA";
})(NumberLeaseTypeEnum = exports.NumberLeaseTypeEnum || (exports.NumberLeaseTypeEnum = {}));
/**
 * Represents a lease object for a given phone number
 */
var NumberLeaseInput = /** @class */ (function (_super) {
    __extends(NumberLeaseInput, _super);
    function NumberLeaseInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoRenew" }),
        __metadata("design:type", Boolean)
    ], NumberLeaseInput.prototype, "autoRenew", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "callFeatureStatus" }),
        __metadata("design:type", String)
    ], NumberLeaseInput.prototype, "callFeatureStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Array)
    ], NumberLeaseInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "leaseBegin" }),
        __metadata("design:type", Number)
    ], NumberLeaseInput.prototype, "leaseBegin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "leaseEnd" }),
        __metadata("design:type", Number)
    ], NumberLeaseInput.prototype, "leaseEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nationalFormat" }),
        __metadata("design:type", String)
    ], NumberLeaseInput.prototype, "nationalFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], NumberLeaseInput.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        (0, class_transformer_1.Type)(function () { return region_1.Region; }),
        __metadata("design:type", region_1.Region)
    ], NumberLeaseInput.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sendEmailOnCreate" }),
        __metadata("design:type", Boolean)
    ], NumberLeaseInput.prototype, "sendEmailOnCreate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "textFeatureStatus" }),
        __metadata("design:type", String)
    ], NumberLeaseInput.prototype, "textFeatureStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tollFree" }),
        __metadata("design:type", Boolean)
    ], NumberLeaseInput.prototype, "tollFree", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], NumberLeaseInput.prototype, "type", void 0);
    return NumberLeaseInput;
}(utils_1.SpeakeasyBase));
exports.NumberLeaseInput = NumberLeaseInput;
/**
 * A lease status. Available values: PENDING, ACTIVE, RELEASED, UNAVAILABLE
 */
var NumberLeaseStatusEnum;
(function (NumberLeaseStatusEnum) {
    NumberLeaseStatusEnum["Pending"] = "PENDING";
    NumberLeaseStatusEnum["Active"] = "ACTIVE";
    NumberLeaseStatusEnum["Released"] = "RELEASED";
    NumberLeaseStatusEnum["Unavailable"] = "UNAVAILABLE";
})(NumberLeaseStatusEnum = exports.NumberLeaseStatusEnum || (exports.NumberLeaseStatusEnum = {}));
/**
 * Represents a lease object for a given phone number
 */
var NumberLease = /** @class */ (function (_super) {
    __extends(NumberLease, _super);
    function NumberLease() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoRenew" }),
        __metadata("design:type", Boolean)
    ], NumberLease.prototype, "autoRenew", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "callFeatureStatus" }),
        __metadata("design:type", String)
    ], NumberLease.prototype, "callFeatureStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Array)
    ], NumberLease.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "leaseBegin" }),
        __metadata("design:type", Number)
    ], NumberLease.prototype, "leaseBegin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "leaseEnd" }),
        __metadata("design:type", Number)
    ], NumberLease.prototype, "leaseEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nationalFormat" }),
        __metadata("design:type", String)
    ], NumberLease.prototype, "nationalFormat", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], NumberLease.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        (0, class_transformer_1.Type)(function () { return region_1.Region; }),
        __metadata("design:type", region_1.Region)
    ], NumberLease.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sendEmailOnCreate" }),
        __metadata("design:type", Boolean)
    ], NumberLease.prototype, "sendEmailOnCreate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], NumberLease.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "textFeatureStatus" }),
        __metadata("design:type", String)
    ], NumberLease.prototype, "textFeatureStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tollFree" }),
        __metadata("design:type", Boolean)
    ], NumberLease.prototype, "tollFree", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], NumberLease.prototype, "type", void 0);
    return NumberLease;
}(utils_1.SpeakeasyBase));
exports.NumberLease = NumberLease;
