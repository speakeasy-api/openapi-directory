/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Filters events based on exact matches on the CloudEvents attributes.
 */
export class EventFilter extends SpeakeasyBase {
  /**
   * Required. The name of a CloudEvents attribute. Currently, only a subset of attributes are supported for filtering. All triggers MUST provide a filter for the 'type' attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attribute" })
  attribute?: string;

  /**
   * Optional. The operator used for matching the events with the value of the filter. If not specified, only events that have an exact key-value pair specified in the filter are matched. The only allowed value is `match-path-pattern`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operator" })
  operator?: string;

  /**
   * Required. The value for the attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
