"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getcollectionsresponse as shared_getcollectionsresponse
from typing import Optional


@dataclasses.dataclass
class CollectionsAllRequest:
    
    ecosystem_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ecosystem_id', 'style': 'simple', 'explode': False }})  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Number of records to return"""  
    

@dataclasses.dataclass
class CollectionsAllResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_collections_response: Optional[shared_getcollectionsresponse.GetCollectionsResponse] = dataclasses.field(default=None)
    r"""Collections"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    