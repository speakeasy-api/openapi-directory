// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCopyFpgaImageActionEnum
type POSTCopyFpgaImageActionEnum string

const (
	POSTCopyFpgaImageActionEnumCopyFpgaImage POSTCopyFpgaImageActionEnum = "CopyFpgaImage"
)

func (e *POSTCopyFpgaImageActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CopyFpgaImage":
		*e = POSTCopyFpgaImageActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyFpgaImageActionEnum: %s", s)
	}
}

// POSTCopyFpgaImageVersionEnum
type POSTCopyFpgaImageVersionEnum string

const (
	POSTCopyFpgaImageVersionEnumTwoThousandAndSixteen1115 POSTCopyFpgaImageVersionEnum = "2016-11-15"
)

func (e *POSTCopyFpgaImageVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTCopyFpgaImageVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyFpgaImageVersionEnum: %s", s)
	}
}

type POSTCopyFpgaImageQueryParams struct {
	Action  POSTCopyFpgaImageActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTCopyFpgaImageVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTCopyFpgaImageHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCopyFpgaImageRequest struct {
	QueryParams POSTCopyFpgaImageQueryParams
	Headers     POSTCopyFpgaImageHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTCopyFpgaImageResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
