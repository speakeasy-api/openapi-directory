// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CompletionResultTypeEnum - The completion topic.
type CompletionResultTypeEnum string

const (
	CompletionResultTypeEnumCompletionTypeUnspecified CompletionResultTypeEnum = "COMPLETION_TYPE_UNSPECIFIED"
	CompletionResultTypeEnumJobTitle                  CompletionResultTypeEnum = "JOB_TITLE"
	CompletionResultTypeEnumCompanyName               CompletionResultTypeEnum = "COMPANY_NAME"
	CompletionResultTypeEnumCombined                  CompletionResultTypeEnum = "COMBINED"
)

func (e CompletionResultTypeEnum) ToPointer() *CompletionResultTypeEnum {
	return &e
}

func (e *CompletionResultTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPLETION_TYPE_UNSPECIFIED":
		fallthrough
	case "JOB_TITLE":
		fallthrough
	case "COMPANY_NAME":
		fallthrough
	case "COMBINED":
		*e = CompletionResultTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompletionResultTypeEnum: %v", v)
	}
}

// CompletionResult - Output only. Resource that represents completion results.
type CompletionResult struct {
	// The URI of the company image for CompletionType.COMPANY_NAME.
	ImageURI *string `json:"imageUri,omitempty"`
	// The suggestion for the query.
	Suggestion *string `json:"suggestion,omitempty"`
	// The completion topic.
	Type *CompletionResultTypeEnum `json:"type,omitempty"`
}
