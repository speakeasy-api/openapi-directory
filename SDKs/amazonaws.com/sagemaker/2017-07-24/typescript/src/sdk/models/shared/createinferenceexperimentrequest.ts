/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InferenceExperimentDataStorageConfig } from "./inferenceexperimentdatastorageconfig";
import { InferenceExperimentSchedule } from "./inferenceexperimentschedule";
import { InferenceExperimentTypeEnum } from "./inferenceexperimenttypeenum";
import { ModelVariantConfig } from "./modelvariantconfig";
import { ShadowModeConfig } from "./shadowmodeconfig";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateInferenceExperimentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataStorageConfig" })
  @Type(() => InferenceExperimentDataStorageConfig)
  dataStorageConfig?: InferenceExperimentDataStorageConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointName" })
  endpointName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKey" })
  kmsKey?: string;

  @SpeakeasyMetadata({ elemType: ModelVariantConfig })
  @Expose({ name: "ModelVariants" })
  @Type(() => ModelVariantConfig)
  modelVariants: ModelVariantConfig[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Schedule" })
  @Type(() => InferenceExperimentSchedule)
  schedule?: InferenceExperimentSchedule;

  @SpeakeasyMetadata()
  @Expose({ name: "ShadowModeConfig" })
  @Type(() => ShadowModeConfig)
  shadowModeConfig: ShadowModeConfig;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: InferenceExperimentTypeEnum;
}
