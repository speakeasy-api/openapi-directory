/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorDetail } from "./errordetail";
import { UpdateParam } from "./updateparam";
import { UpdateStatusEnum } from "./updatestatusenum";
import { UpdateTypeEnum } from "./updatetypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An object representing an asynchronous update.
 */
export class Update extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata({ elemType: ErrorDetail })
  @Expose({ name: "errors" })
  @Type(() => ErrorDetail)
  errors?: ErrorDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: UpdateParam })
  @Expose({ name: "params" })
  @Type(() => UpdateParam)
  params?: UpdateParam[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: UpdateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UpdateTypeEnum;
}
