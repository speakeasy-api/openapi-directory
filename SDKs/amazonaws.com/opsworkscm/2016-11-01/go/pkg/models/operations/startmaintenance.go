// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartMaintenanceXAmzTargetEnum
type StartMaintenanceXAmzTargetEnum string

const (
	StartMaintenanceXAmzTargetEnumOpsWorksCmV20161101StartMaintenance StartMaintenanceXAmzTargetEnum = "OpsWorksCM_V2016_11_01.StartMaintenance"
)

func (e *StartMaintenanceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OpsWorksCM_V2016_11_01.StartMaintenance":
		*e = StartMaintenanceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartMaintenanceXAmzTargetEnum: %s", s)
	}
}

type StartMaintenanceRequest struct {
	StartMaintenanceRequest shared.StartMaintenanceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              StartMaintenanceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartMaintenanceResponse struct {
	ContentType string
	// InvalidStateException
	InvalidStateException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartMaintenanceResponse *shared.StartMaintenanceResponse
	StatusCode               int
	RawResponse              *http.Response
	// ValidationException
	ValidationException interface{}
}
