"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import featuregroupstatus_enum as shared_featuregroupstatus_enum
from ..shared import offlinestorestatus as shared_offlinestorestatus
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FeatureGroupSummary:
    r"""The name, Arn, <code>CreationTime</code>, <code>FeatureGroup</code> values, <code>LastUpdatedTime</code> and <code>EnableOnlineStorage</code> status of a <code>FeatureGroup</code>."""
    
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    feature_group_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureGroupArn') }})  
    feature_group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureGroupName') }})  
    feature_group_status: Optional[shared_featuregroupstatus_enum.FeatureGroupStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FeatureGroupStatus'), 'exclude': lambda f: f is None }})  
    offline_store_status: Optional[shared_offlinestorestatus.OfflineStoreStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OfflineStoreStatus'), 'exclude': lambda f: f is None }})  
    