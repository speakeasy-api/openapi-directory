/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListClassesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * Filter the classes by state
 */
export enum ListClassesStateEnum {
  Active = "active",
  Inactive = "inactive",
  Archived = "archived",
}

export class ListClassesRequest extends SpeakeasyBase {
  /**
   * Filter the classes by state
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: ListClassesStateEnum;
}

export class ListClassesResponse extends SpeakeasyBase {
  /**
   * The list of classes
   */
  @SpeakeasyMetadata({ elemType: shared.ClassDetails })
  classDetails?: shared.ClassDetails[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  flatErrorResponse?: shared.FlatErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
