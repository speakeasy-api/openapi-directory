/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MaxP95Performance - The performance data that DataSync Discovery collects about an on-premises storage system resource.
 */
public class MaxP95Performance {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IopsOther")
    public Double iopsOther;

    public MaxP95Performance withIopsOther(Double iopsOther) {
        this.iopsOther = iopsOther;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IopsRead")
    public Double iopsRead;

    public MaxP95Performance withIopsRead(Double iopsRead) {
        this.iopsRead = iopsRead;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IopsTotal")
    public Double iopsTotal;

    public MaxP95Performance withIopsTotal(Double iopsTotal) {
        this.iopsTotal = iopsTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IopsWrite")
    public Double iopsWrite;

    public MaxP95Performance withIopsWrite(Double iopsWrite) {
        this.iopsWrite = iopsWrite;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatencyOther")
    public Double latencyOther;

    public MaxP95Performance withLatencyOther(Double latencyOther) {
        this.latencyOther = latencyOther;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatencyRead")
    public Double latencyRead;

    public MaxP95Performance withLatencyRead(Double latencyRead) {
        this.latencyRead = latencyRead;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatencyWrite")
    public Double latencyWrite;

    public MaxP95Performance withLatencyWrite(Double latencyWrite) {
        this.latencyWrite = latencyWrite;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThroughputOther")
    public Double throughputOther;

    public MaxP95Performance withThroughputOther(Double throughputOther) {
        this.throughputOther = throughputOther;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThroughputRead")
    public Double throughputRead;

    public MaxP95Performance withThroughputRead(Double throughputRead) {
        this.throughputRead = throughputRead;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThroughputTotal")
    public Double throughputTotal;

    public MaxP95Performance withThroughputTotal(Double throughputTotal) {
        this.throughputTotal = throughputTotal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThroughputWrite")
    public Double throughputWrite;

    public MaxP95Performance withThroughputWrite(Double throughputWrite) {
        this.throughputWrite = throughputWrite;
        return this;
    }
    
    public MaxP95Performance(){}
}
