"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourceviolation as shared_resourceviolation
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ViolationDetail:
    r"""Violations for a resource based on the specified Firewall Manager policy and Amazon Web Services account."""
    
    member_account: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MemberAccount') }})  
    policy_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyId') }})  
    resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceId') }})  
    resource_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceType') }})  
    resource_violations: list[shared_resourceviolation.ResourceViolation] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceViolations') }})  
    resource_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceDescription'), 'exclude': lambda f: f is None }})  
    resource_tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceTags'), 'exclude': lambda f: f is None }})  
    