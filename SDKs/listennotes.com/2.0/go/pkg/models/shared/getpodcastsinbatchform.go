// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetPodcastsInBatchFormShowLatestEpisodesEnum - Whether or not to fetch up to 15 latest episodes from these podcasts, sorted by pub_date. 1 is yes, and 0 is no.
type GetPodcastsInBatchFormShowLatestEpisodesEnum string

const (
	GetPodcastsInBatchFormShowLatestEpisodesEnumZero GetPodcastsInBatchFormShowLatestEpisodesEnum = "0"
	GetPodcastsInBatchFormShowLatestEpisodesEnumOne  GetPodcastsInBatchFormShowLatestEpisodesEnum = "1"
)

func (e *GetPodcastsInBatchFormShowLatestEpisodesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = GetPodcastsInBatchFormShowLatestEpisodesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPodcastsInBatchFormShowLatestEpisodesEnum: %s", s)
	}
}

type GetPodcastsInBatchForm struct {
	// Comma-separated list of podcast ids.
	Ids *string `form:"name=ids"`
	// Comma-separated Apple Podcasts (iTunes) ids, e.g., 659155419
	ItunesIds *string `form:"name=itunes_ids"`
	// For latest episodes pagination. It's the value of **next_episode_pub_date** from the response of last request. If not specified, just return latest 15 episodes.
	//
	NextEpisodePubDate *int64 `form:"name=next_episode_pub_date"`
	// Comma-separated rss urls.
	Rsses *string `form:"name=rsses"`
	// Whether or not to fetch up to 15 latest episodes from these podcasts, sorted by pub_date. 1 is yes, and 0 is no.
	//
	ShowLatestEpisodes *GetPodcastsInBatchFormShowLatestEpisodesEnum `form:"name=show_latest_episodes"`
	// Comma-separated Spotify ids, e.g., 3DDfEsKDIDrTlnPOiG4ZF4
	SpotifyIds *string `form:"name=spotify_ids"`
}
