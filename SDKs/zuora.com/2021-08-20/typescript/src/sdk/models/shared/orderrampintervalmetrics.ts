/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RampIntervalChargeDeltaMetrics } from "./rampintervalchargedeltametrics";
import { RampIntervalChargeMetrics } from "./rampintervalchargemetrics";
import { Expose, Transform, Type } from "class-transformer";

export class OrderRampIntervalMetrics extends SpeakeasyBase {
  /**
   * The short description of the interval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The discount amount for the TCB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discountTcb" })
  discountTcb?: number;

  /**
   * The discount amount for the TCV.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discountTcv" })
  discountTcv?: number;

  /**
   * The end date of the interval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  /**
   * The gross TCB value before discount charges are applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grossTcb" })
  grossTcb?: number;

  /**
   * The gross TCV value before discount charges are applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grossTcv" })
  grossTcv?: number;

  /**
   * Container for the delta metrics for each rate plan charge in each ramp interval. The delta is the difference of the subscription metrics between before and after the order.
   */
  @SpeakeasyMetadata({ elemType: RampIntervalChargeDeltaMetrics })
  @Expose({ name: "intervalDeltaMetrics" })
  @Type(() => RampIntervalChargeDeltaMetrics)
  intervalDeltaMetrics?: RampIntervalChargeDeltaMetrics[];

  /**
   * Container for the detailed metrics for each rate plan charge in each ramp interval.
   */
  @SpeakeasyMetadata({ elemType: RampIntervalChargeMetrics })
  @Expose({ name: "intervalMetrics" })
  @Type(() => RampIntervalChargeMetrics)
  intervalMetrics?: RampIntervalChargeMetrics[];

  /**
   * The name of the interval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The net TCB value after discount charges are applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "netTcb" })
  netTcb?: number;

  /**
   * The net TCV value after discount charges are applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "netTcv" })
  netTcv?: number;

  /**
   * The start date of the interval.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;
}
