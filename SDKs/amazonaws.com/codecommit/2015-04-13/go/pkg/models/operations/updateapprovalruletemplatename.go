// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateApprovalRuleTemplateNameXAmzTargetEnum
type UpdateApprovalRuleTemplateNameXAmzTargetEnum string

const (
	UpdateApprovalRuleTemplateNameXAmzTargetEnumCodeCommit20150413UpdateApprovalRuleTemplateName UpdateApprovalRuleTemplateNameXAmzTargetEnum = "CodeCommit_20150413.UpdateApprovalRuleTemplateName"
)

func (e UpdateApprovalRuleTemplateNameXAmzTargetEnum) ToPointer() *UpdateApprovalRuleTemplateNameXAmzTargetEnum {
	return &e
}

func (e *UpdateApprovalRuleTemplateNameXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeCommit_20150413.UpdateApprovalRuleTemplateName":
		*e = UpdateApprovalRuleTemplateNameXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateApprovalRuleTemplateNameXAmzTargetEnum: %v", v)
	}
}

type UpdateApprovalRuleTemplateNameRequest struct {
	UpdateApprovalRuleTemplateNameInput shared.UpdateApprovalRuleTemplateNameInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          UpdateApprovalRuleTemplateNameXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateApprovalRuleTemplateNameResponse struct {
	// ApprovalRuleTemplateDoesNotExistException
	ApprovalRuleTemplateDoesNotExistException interface{}
	// ApprovalRuleTemplateNameAlreadyExistsException
	ApprovalRuleTemplateNameAlreadyExistsException interface{}
	// ApprovalRuleTemplateNameRequiredException
	ApprovalRuleTemplateNameRequiredException interface{}
	ContentType                               string
	// InvalidApprovalRuleTemplateNameException
	InvalidApprovalRuleTemplateNameException interface{}
	StatusCode                               int
	RawResponse                              *http.Response
	// Success
	UpdateApprovalRuleTemplateNameOutput *shared.UpdateApprovalRuleTemplateNameOutput
}
