// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ModelStatusEnum string

const (
	ModelStatusEnumSubmitted     ModelStatusEnum = "SUBMITTED"
	ModelStatusEnumTraining      ModelStatusEnum = "TRAINING"
	ModelStatusEnumDeleting      ModelStatusEnum = "DELETING"
	ModelStatusEnumStopRequested ModelStatusEnum = "STOP_REQUESTED"
	ModelStatusEnumStopped       ModelStatusEnum = "STOPPED"
	ModelStatusEnumInError       ModelStatusEnum = "IN_ERROR"
	ModelStatusEnumTrained       ModelStatusEnum = "TRAINED"
)

func (e *ModelStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMITTED":
		fallthrough
	case "TRAINING":
		fallthrough
	case "DELETING":
		fallthrough
	case "STOP_REQUESTED":
		fallthrough
	case "STOPPED":
		fallthrough
	case "IN_ERROR":
		fallthrough
	case "TRAINED":
		*e = ModelStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelStatusEnum: %s", s)
	}
}
