/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FlowExecutionEventTypeEnum } from "./flowexecutioneventtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * An object that contains information about a flow event.
 */
export class FlowExecutionMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "eventType" })
  eventType?: FlowExecutionEventTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "messageId" })
  messageId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payload" })
  payload?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;
}
