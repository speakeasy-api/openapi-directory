/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * JSON template for an Analytics segment.
 */
export class Segment extends SpeakeasyBase {
  /**
   * Time the segment was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Segment definition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition?: string;

  /**
   * Segment ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Resource type for Analytics segment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Segment name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Segment ID. Can be used with the 'segment' parameter in Core Reporting API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "segmentId" })
  segmentId?: string;

  /**
   * Link for this segment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Type for a segment. Possible values are "BUILT_IN" or "CUSTOM".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Time the segment was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;
}
