// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeAnalysisSchemesActionEnum
type POSTDescribeAnalysisSchemesActionEnum string

const (
	POSTDescribeAnalysisSchemesActionEnumDescribeAnalysisSchemes POSTDescribeAnalysisSchemesActionEnum = "DescribeAnalysisSchemes"
)

func (e POSTDescribeAnalysisSchemesActionEnum) ToPointer() *POSTDescribeAnalysisSchemesActionEnum {
	return &e
}

func (e *POSTDescribeAnalysisSchemesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeAnalysisSchemes":
		*e = POSTDescribeAnalysisSchemesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAnalysisSchemesActionEnum: %v", v)
	}
}

// POSTDescribeAnalysisSchemesVersionEnum
type POSTDescribeAnalysisSchemesVersionEnum string

const (
	POSTDescribeAnalysisSchemesVersionEnumTwoThousandAndThirteen0101 POSTDescribeAnalysisSchemesVersionEnum = "2013-01-01"
)

func (e POSTDescribeAnalysisSchemesVersionEnum) ToPointer() *POSTDescribeAnalysisSchemesVersionEnum {
	return &e
}

func (e *POSTDescribeAnalysisSchemesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = POSTDescribeAnalysisSchemesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeAnalysisSchemesVersionEnum: %v", v)
	}
}

type POSTDescribeAnalysisSchemesRequest struct {
	Action            POSTDescribeAnalysisSchemesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                 `request:"mediaType=text/xml"`
	Version           POSTDescribeAnalysisSchemesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeAnalysisSchemesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
