// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateUnderstandAssistantServerList = []string{
	"https://preview.twilio.com",
}

type UpdateUnderstandAssistantSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateUnderstandAssistantPathParams struct {
	// A 34 character string that uniquely identifies this resource.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateUnderstandAssistantUpdateUnderstandAssistantRequest struct {
	// Space-separated list of callback events that will trigger callbacks.
	CallbackEvents *string `form:"name=CallbackEvents"`
	// A user-provided URL to send event callbacks to.
	CallbackURL *string `form:"name=CallbackUrl"`
	// The JSON actions to be executed when the user's input is not recognized as matching any Task.
	FallbackActions interface{} `form:"name=FallbackActions"`
	// A text description for the Assistant. It is non-unique and can up to 255 characters long.
	FriendlyName *string `form:"name=FriendlyName"`
	// The JSON actions to be executed on inbound phone calls when the Assistant has to say something first.
	InitiationActions interface{} `form:"name=InitiationActions"`
	// A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter. Defaults to true if no value is provided.
	LogQueries *bool `form:"name=LogQueries"`
	// The JSON object that holds the style sheet for the assistant
	StyleSheet interface{} `form:"name=StyleSheet"`
	// A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.
	UniqueName *string `form:"name=UniqueName"`
}

type UpdateUnderstandAssistantRequest struct {
	PathParams UpdateUnderstandAssistantPathParams
	Request    *UpdateUnderstandAssistantUpdateUnderstandAssistantRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateUnderstandAssistantSecurity
	ServerURL  *string
}

type UpdateUnderstandAssistantResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PreviewUnderstandAssistant *shared.PreviewUnderstandAssistant
}
