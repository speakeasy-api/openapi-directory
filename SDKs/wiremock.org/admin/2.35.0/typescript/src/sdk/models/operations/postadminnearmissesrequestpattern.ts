/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Pre-emptive basic auth credentials to match against
 */
export class PostAdminNearMissesRequestPatternRequestBodyBasicAuthCredentials extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class PostAdminNearMissesRequestPatternRequestBody extends SpeakeasyBase {
  /**
   * Pre-emptive basic auth credentials to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "basicAuthCredentials" })
  @Type(() => PostAdminNearMissesRequestPatternRequestBodyBasicAuthCredentials)
  basicAuthCredentials?: PostAdminNearMissesRequestPatternRequestBodyBasicAuthCredentials;

  /**
   * Request body patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bodyPatterns" })
  bodyPatterns?: Record<string, any>[];

  /**
   * Cookie patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cookies" })
  cookies?: Record<string, any>;

  /**
   * Header patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  /**
   * The HTTP request method e.g. GET
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;

  /**
   * Query parameter patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryParameters" })
  queryParameters?: Record<string, any>;

  /**
   * The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlPath" })
  urlPath?: string;

  /**
   * The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlPathPattern" })
  urlPathPattern?: string;

  /**
   * The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlPattern" })
  urlPattern?: string;
}

export class PostAdminNearMissesRequestPattern200ApplicationJSONNearMisses extends SpeakeasyBase {
  /**
   * The full URL to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "absoluteUrl" })
  absoluteUrl?: string;

  /**
   * Body string to match against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  /**
   * Cookie patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cookies" })
  cookies?: Record<string, any>;

  /**
   * Header patterns to match against in the <key>: { "<predicate>": "<value>" } form
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  /**
   * The HTTP request method
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: string;

  /**
   * The path and query to match exactly against
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * Near misses matching criteria
 */
export class PostAdminNearMissesRequestPattern200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PostAdminNearMissesRequestPattern200ApplicationJSONNearMisses,
  })
  @Expose({ name: "nearMisses" })
  @Type(() => PostAdminNearMissesRequestPattern200ApplicationJSONNearMisses)
  nearMisses?: PostAdminNearMissesRequestPattern200ApplicationJSONNearMisses[];
}

export class PostAdminNearMissesRequestPatternResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Near misses matching criteria
   */
  @SpeakeasyMetadata()
  postAdminNearMissesRequestPattern200ApplicationJSONObject?: PostAdminNearMissesRequestPattern200ApplicationJSON;
}
