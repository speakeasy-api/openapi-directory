/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class UpdateDirectorySetupResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public UpdateDirectorySetupResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * ClientException
     */
    
    public Object clientException;

    public UpdateDirectorySetupResponse withClientException(Object clientException) {
        this.clientException = clientException;
        return this;
    }
    
    
    public String contentType;

    public UpdateDirectorySetupResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DirectoryDoesNotExistException
     */
    
    public Object directoryDoesNotExistException;

    public UpdateDirectorySetupResponse withDirectoryDoesNotExistException(Object directoryDoesNotExistException) {
        this.directoryDoesNotExistException = directoryDoesNotExistException;
        return this;
    }
    
    /**
     * DirectoryInDesiredStateException
     */
    
    public Object directoryInDesiredStateException;

    public UpdateDirectorySetupResponse withDirectoryInDesiredStateException(Object directoryInDesiredStateException) {
        this.directoryInDesiredStateException = directoryInDesiredStateException;
        return this;
    }
    
    /**
     * DirectoryUnavailableException
     */
    
    public Object directoryUnavailableException;

    public UpdateDirectorySetupResponse withDirectoryUnavailableException(Object directoryUnavailableException) {
        this.directoryUnavailableException = directoryUnavailableException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public UpdateDirectorySetupResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * SnapshotLimitExceededException
     */
    
    public Object snapshotLimitExceededException;

    public UpdateDirectorySetupResponse withSnapshotLimitExceededException(Object snapshotLimitExceededException) {
        this.snapshotLimitExceededException = snapshotLimitExceededException;
        return this;
    }
    
    
    public Integer statusCode;

    public UpdateDirectorySetupResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public UpdateDirectorySetupResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;

    public UpdateDirectorySetupResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public UpdateDirectorySetupResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> updateDirectorySetupResult;

    public UpdateDirectorySetupResponse withUpdateDirectorySetupResult(java.util.Map<String, Object> updateDirectorySetupResult) {
        this.updateDirectorySetupResult = updateDirectorySetupResult;
        return this;
    }
    
    public UpdateDirectorySetupResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
