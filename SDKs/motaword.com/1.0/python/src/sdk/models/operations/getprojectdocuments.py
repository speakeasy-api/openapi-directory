"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import documentlist as shared_documentlist
from ..shared import error as shared_error
from enum import Enum
from typing import Optional

class GetProjectDocumentsWithEnum(str, Enum):
    PREVIEW = 'preview'
    EDITORS = 'editors'


@dataclasses.dataclass
class GetProjectDocumentsRequest:
    
    project_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""Project ID"""  
    with_: Optional[list[GetProjectDocumentsWithEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with[]', 'style': 'form', 'explode': True }})
    r"""Attach further information. Possible values 'preview' to fetch temporary preview URLs. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls."""  
    

@dataclasses.dataclass
class GetProjectDocumentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    document_list: Optional[shared_documentlist.DocumentList] = dataclasses.field(default=None)
    r"""A list of document models"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""ProjectNotFound"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    