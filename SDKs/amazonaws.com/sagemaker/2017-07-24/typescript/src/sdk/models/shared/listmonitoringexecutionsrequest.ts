/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionStatusEnum } from "./executionstatusenum";
import { MonitoringExecutionSortKeyEnum } from "./monitoringexecutionsortkeyenum";
import { MonitoringTypeEnum } from "./monitoringtypeenum";
import { SortOrderEnum } from "./sortorderenum";
import { Expose, Transform } from "class-transformer";

export class ListMonitoringExecutionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimeBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointName" })
  endpointName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTimeBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringJobDefinitionName" })
  monitoringJobDefinitionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringScheduleName" })
  monitoringScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringTypeEquals" })
  monitoringTypeEquals?: MonitoringTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduledTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduledTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledTimeBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "SortBy" })
  sortBy?: MonitoringExecutionSortKeyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: SortOrderEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusEquals" })
  statusEquals?: ExecutionStatusEnum;
}
