/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Version - Version contains structured information about the version of a package.
 */
public class Version {
    /**
     * Used to correct mistakes in the version numbering scheme.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("epoch")
    public Integer epoch;

    public Version withEpoch(Integer epoch) {
        this.epoch = epoch;
        return this;
    }
    
    /**
     * Human readable version string. This string is of the form :- and is only set when kind is NORMAL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullName")
    public String fullName;

    public Version withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }
    
    /**
     * Whether this version is specifying part of an inclusive range. Grafeas does not have the capability to specify version ranges; instead we have fields that specify start version and end versions. At times this is insufficient - we also need to specify whether the version is included in the range or is excluded from the range. This boolean is expected to be set to true when the version is included in a range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inclusive")
    public Boolean inclusive;

    public Version withInclusive(Boolean inclusive) {
        this.inclusive = inclusive;
        return this;
    }
    
    /**
     * Required. Distinguishes between sentinel MIN/MAX versions and normal versions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public VersionKindEnum kind;

    public Version withKind(VersionKindEnum kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Required only when version kind is NORMAL. The main part of the version name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Version withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The iteration of the package build from the above version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revision")
    public String revision;

    public Version withRevision(String revision) {
        this.revision = revision;
        return this;
    }
    
    public Version(){}
}
