"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dependentservice as shared_dependentservice
from ..shared import servicename_enum as shared_servicename_enum
from ..shared import serviceversion as shared_serviceversion
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListServiceVersionsResult:
    r"""Success"""
    
    service_name: shared_servicename_enum.ServiceNameEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceName') }})  
    service_versions: list[shared_serviceversion.ServiceVersion] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServiceVersions') }})  
    dependent_services: Optional[list[shared_dependentservice.DependentService]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DependentServices'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    