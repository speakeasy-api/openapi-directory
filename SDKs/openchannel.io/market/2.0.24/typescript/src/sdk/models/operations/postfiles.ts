/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class PostFilesRequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class PostFilesRequestBody extends SpeakeasyBase {
  /**
   * The file to be uploaded
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: PostFilesRequestBodyFile;
}

export class PostFilesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody: PostFilesRequestBody;

  /**
   * A comma separated list of hashes to return in order to verify file integrity.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=hash" })
  hash?: string;

  /**
   * If true, this file will be protected as a private file and require the generation of a signed URL in order to download using the Download File API. The default is false.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isPrivate",
  })
  isPrivate?: boolean;
}

export class PostFilesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
