/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
 */
export enum InvitationRoleEnum {
  CourseRoleUnspecified = "COURSE_ROLE_UNSPECIFIED",
  Student = "STUDENT",
  Teacher = "TEACHER",
  Owner = "OWNER",
}

/**
 * An invitation to join a course.
 */
export class Invitation extends SpeakeasyBase {
  /**
   * Identifier of the course to invite the user to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "courseId" })
  courseId?: string;

  /**
   * Identifier assigned by Classroom. Read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: InvitationRoleEnum;

  /**
   * Identifier of the invited user. When specified as a parameter of a request, this identifier can be set to one of the following: * the numeric identifier for the user * the email address of the user * the string literal `"me"`, indicating the requesting user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}
