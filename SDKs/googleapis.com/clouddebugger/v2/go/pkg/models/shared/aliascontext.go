// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AliasContextKindEnum - The alias kind.
type AliasContextKindEnum string

const (
	AliasContextKindEnumAny     AliasContextKindEnum = "ANY"
	AliasContextKindEnumFixed   AliasContextKindEnum = "FIXED"
	AliasContextKindEnumMovable AliasContextKindEnum = "MOVABLE"
	AliasContextKindEnumOther   AliasContextKindEnum = "OTHER"
)

func (e AliasContextKindEnum) ToPointer() *AliasContextKindEnum {
	return &e
}

func (e *AliasContextKindEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANY":
		fallthrough
	case "FIXED":
		fallthrough
	case "MOVABLE":
		fallthrough
	case "OTHER":
		*e = AliasContextKindEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AliasContextKindEnum: %v", v)
	}
}

// AliasContext - An alias to a repo revision.
type AliasContext struct {
	// The alias kind.
	Kind *AliasContextKindEnum `json:"kind,omitempty"`
	// The alias name.
	Name *string `json:"name,omitempty"`
}
