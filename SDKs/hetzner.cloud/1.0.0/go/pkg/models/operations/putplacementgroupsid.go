// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PutPlacementGroupsIDUpdatePlacementGroupRequest struct {
	// User-defined labels (key-value pairs)
	Labels map[string]interface{} `json:"labels,omitempty"`
	// New PlacementGroup name
	Name *string `json:"name,omitempty"`
}

type PutPlacementGroupsIDRequest struct {
	RequestBody *PutPlacementGroupsIDUpdatePlacementGroupRequest `request:"mediaType=application/json"`
	// ID of the resource
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

// PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum - Type of the Placement Group
type PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum string

const (
	PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnumSpread PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum = "spread"
)

func (e *PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "spread":
		*e = PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum: %s", s)
	}
}

type PutPlacementGroupsIDPlacementGroupResponsePlacementGroup struct {
	// Point in time when the Resource was created (in ISO-8601 format)
	Created string `json:"created"`
	// ID of the Resource
	ID int64 `json:"id"`
	// User-defined labels (key-value pairs)
	Labels map[string]string `json:"labels"`
	// Name of the Resource. Must be unique per Project.
	Name string `json:"name"`
	// Array of IDs of Servers that are part of this Placement Group
	Servers []int64 `json:"servers"`
	// Type of the Placement Group
	Type PutPlacementGroupsIDPlacementGroupResponsePlacementGroupTypeEnum `json:"type"`
}

// PutPlacementGroupsIDPlacementGroupResponse - The `certificate` key contains the PlacementGroup that was just updated
type PutPlacementGroupsIDPlacementGroupResponse struct {
	PlacementGroup PutPlacementGroupsIDPlacementGroupResponsePlacementGroup `json:"placement_group"`
}

type PutPlacementGroupsIDResponse struct {
	ContentType string
	// The `certificate` key contains the PlacementGroup that was just updated
	PlacementGroupResponse *PutPlacementGroupsIDPlacementGroupResponse
	StatusCode             int
	RawResponse            *http.Response
}
