// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListZonalShiftsStatusEnum - <p>A status for a zonal shift.</p> <p>The <code>Status</code> for a zonal shift can have one of the following values:</p> <ul> <li> <p> <b>ACTIVE</b>: The zonal shift is started and active.</p> </li> <li> <p> <b>EXPIRED</b>: The zonal shift has expired (the expiry time was exceeded).</p> </li> <li> <p> <b>CANCELED</b>: The zonal shift was canceled.</p> </li> </ul>
type ListZonalShiftsStatusEnum string

const (
	ListZonalShiftsStatusEnumActive   ListZonalShiftsStatusEnum = "ACTIVE"
	ListZonalShiftsStatusEnumExpired  ListZonalShiftsStatusEnum = "EXPIRED"
	ListZonalShiftsStatusEnumCanceled ListZonalShiftsStatusEnum = "CANCELED"
)

func (e ListZonalShiftsStatusEnum) ToPointer() *ListZonalShiftsStatusEnum {
	return &e
}

func (e *ListZonalShiftsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVE":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "CANCELED":
		*e = ListZonalShiftsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListZonalShiftsStatusEnum: %v", v)
	}
}

type ListZonalShiftsRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The number of objects that you want to return with this call.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Specifies that you want to receive the next page of results. Valid only if you received a <code>NextToken</code> response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's <code>NextToken</code> response to request the next page of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// <p>A status for a zonal shift.</p> <p>The <code>Status</code> for a zonal shift can have one of the following values:</p> <ul> <li> <p> <b>ACTIVE</b>: The zonal shift is started and active.</p> </li> <li> <p> <b>EXPIRED</b>: The zonal shift has expired (the expiry time was exceeded).</p> </li> <li> <p> <b>CANCELED</b>: The zonal shift was canceled.</p> </li> </ul>
	Status *ListZonalShiftsStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListZonalShiftsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListZonalShiftsResponse *shared.ListZonalShiftsResponse
	StatusCode              int
	RawResponse             *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
