// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetListeNoireGetListeNoireEnum - Doit valoir "1"
type GetListeNoireGetListeNoireEnum string

const (
	GetListeNoireGetListeNoireEnumOne GetListeNoireGetListeNoireEnum = "1"
)

func (e *GetListeNoireGetListeNoireEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		*e = GetListeNoireGetListeNoireEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetListeNoireGetListeNoireEnum: %s", s)
	}
}

type GetListeNoireRequest struct {
	// Doit valoir "1"
	GetListeNoire GetListeNoireGetListeNoireEnum `queryParam:"style=form,explode=true,name=getListeNoire"`
	// Cl√© API
	Keyid string `queryParam:"style=form,explode=true,name=keyid"`
}

type GetListeNoireResponse struct {
	ContentType string
	// Erreur
	Erreur      *shared.Erreur
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	GetListeNoire200ApplicationJSONBinaryString []byte
}
