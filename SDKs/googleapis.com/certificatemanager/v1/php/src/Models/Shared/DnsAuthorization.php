<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DnsAuthorization - A DnsAuthorization resource describes a way to perform domain authorization for certificate issuance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DnsAuthorization
{
    /**
     * Output only. The creation timestamp of a DnsAuthorization.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * One or more paragraphs of text description of a DnsAuthorization.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The structure describing the DNS Resource Record that needs to be added to DNS configuration for the authorization to be usable by certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DnsResourceRecord $dnsResourceRecord
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsResourceRecord')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DnsResourceRecord')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DnsResourceRecord $dnsResourceRecord = null;
    
    /**
     * Required. Immutable. A domain that is being authorized. A DnsAuthorization resource covers a single domain and its wildcard, e.g. authorization for `example.com` can be used to issue certificates for `example.com` and `*.example.com`.
     * 
     * @var ?string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domain = null;
    
    /**
     * Set of labels associated with a DnsAuthorization.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * A user-defined name of the dns authorization. DnsAuthorization names must be unique globally and match pattern `projects/* /locations/* /dnsAuthorizations/*`.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. The last update timestamp of a DnsAuthorization.
     * 
     * @var ?string $updateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('updateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updateTime = null;
    
	public function __construct()
	{
		$this->createTime = null;
		$this->description = null;
		$this->dnsResourceRecord = null;
		$this->domain = null;
		$this->labels = null;
		$this->name = null;
		$this->updateTime = null;
	}
}
