// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EnableDomainTransferLockXAmzTargetEnum
type EnableDomainTransferLockXAmzTargetEnum string

const (
	EnableDomainTransferLockXAmzTargetEnumRoute53DomainsV20140515EnableDomainTransferLock EnableDomainTransferLockXAmzTargetEnum = "Route53Domains_v20140515.EnableDomainTransferLock"
)

func (e EnableDomainTransferLockXAmzTargetEnum) ToPointer() *EnableDomainTransferLockXAmzTargetEnum {
	return &e
}

func (e *EnableDomainTransferLockXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Domains_v20140515.EnableDomainTransferLock":
		*e = EnableDomainTransferLockXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableDomainTransferLockXAmzTargetEnum: %v", v)
	}
}

type EnableDomainTransferLockRequest struct {
	EnableDomainTransferLockRequest shared.EnableDomainTransferLockRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      EnableDomainTransferLockXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type EnableDomainTransferLockResponse struct {
	ContentType string
	// DuplicateRequest
	DuplicateRequest interface{}
	// Success
	EnableDomainTransferLockResponse *shared.EnableDomainTransferLockResponse
	// InvalidInput
	InvalidInput interface{}
	// OperationLimitExceeded
	OperationLimitExceeded interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TLDRulesViolation
	TLDRulesViolation interface{}
	// UnsupportedTLD
	UnsupportedTLD interface{}
}
