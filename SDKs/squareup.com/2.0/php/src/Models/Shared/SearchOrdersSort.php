<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SearchOrdersSort - Sorting criteria for a `SearchOrders` request. Results can only be sorted
 * 
 * by a timestamp field.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SearchOrdersSort
{
    /**
     * The field to sort by.
     * 
     * 
     * __Important:__ When using a [DateTimeFilter](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersFilter),
     * `sort_field` must match the timestamp field that the `DateTimeFilter` uses to
     * filter. For example, if you set your `sort_field` to `CLOSED_AT` and you use a
     * `DateTimeFilter`, your `DateTimeFilter` must filter for orders by their `CLOSED_AT` date.
     * If this field does not match the timestamp field in `DateTimeFilter`,
     * `SearchOrders` returns an error.
     * 
     * Default: `CREATED_AT`.
     * 
     * @var string $sortField
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort_field')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sortField;
    
    /**
     * The chronological order in which results are returned. Defaults to `DESC`.
     * 
     * @var ?string $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort_order')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sortOrder = null;
    
	public function __construct()
	{
		$this->sortField = "";
		$this->sortOrder = null;
	}
}
