/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudPaymentsResellerSubscriptionV1Extension } from "./googlecloudpaymentsresellersubscriptionv1extension";
import { Expose, Type } from "class-transformer";

/**
 * Request message for extending a Subscription resource. A new recurrence will be made based on the subscription schedule defined by the original product.
 */
export class GoogleCloudPaymentsResellerSubscriptionV1ExtendSubscriptionRequest extends SpeakeasyBase {
  /**
   * Describes the details of an extension request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension" })
  @Type(() => GoogleCloudPaymentsResellerSubscriptionV1Extension)
  extension?: GoogleCloudPaymentsResellerSubscriptionV1Extension;

  /**
   * Required. Restricted to 36 ASCII characters. A random UUID is recommended. The idempotency key for the request. The ID generation logic is controlled by the partner. request_id should be the same as on retries of the same request. A different request_id must be used for a extension of a different cycle. A random UUID is recommended.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;
}
