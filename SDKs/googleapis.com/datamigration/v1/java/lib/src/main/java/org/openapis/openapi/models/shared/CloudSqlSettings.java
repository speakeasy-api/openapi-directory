/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CloudSqlSettings - Settings for creating a Cloud SQL database instance.
 */
public class CloudSqlSettings {
    /**
     * The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activationPolicy")
    public CloudSqlSettingsActivationPolicyEnum activationPolicy;
    public CloudSqlSettings withActivationPolicy(CloudSqlSettingsActivationPolicyEnum activationPolicy) {
        this.activationPolicy = activationPolicy;
        return this;
    }
    
    /**
     * [default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoStorageIncrease")
    public Boolean autoStorageIncrease;
    public CloudSqlSettings withAutoStorageIncrease(Boolean autoStorageIncrease) {
        this.autoStorageIncrease = autoStorageIncrease;
        return this;
    }
    
    /**
     * Optional. Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data availability. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availabilityType")
    public CloudSqlSettingsAvailabilityTypeEnum availabilityType;
    public CloudSqlSettings withAvailabilityType(CloudSqlSettingsAvailabilityTypeEnum availabilityType) {
        this.availabilityType = availabilityType;
        return this;
    }
    
    /**
     * The KMS key name used for the csql instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cmekKeyName")
    public String cmekKeyName;
    public CloudSqlSettings withCmekKeyName(String cmekKeyName) {
        this.cmekKeyName = cmekKeyName;
        return this;
    }
    
    /**
     * The Cloud SQL default instance level collation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collation")
    public String collation;
    public CloudSqlSettings withCollation(String collation) {
        this.collation = collation;
        return this;
    }
    
    /**
     * The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataDiskSizeGb")
    public String dataDiskSizeGb;
    public CloudSqlSettings withDataDiskSizeGb(String dataDiskSizeGb) {
        this.dataDiskSizeGb = dataDiskSizeGb;
        return this;
    }
    
    /**
     * The type of storage: `PD_SSD` (default) or `PD_HDD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataDiskType")
    public CloudSqlSettingsDataDiskTypeEnum dataDiskType;
    public CloudSqlSettings withDataDiskType(CloudSqlSettingsDataDiskTypeEnum dataDiskType) {
        this.dataDiskType = dataDiskType;
        return this;
    }
    
    /**
     * The database flags passed to the Cloud SQL instance at startup. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseFlags")
    public java.util.Map<String, String> databaseFlags;
    public CloudSqlSettings withDatabaseFlags(java.util.Map<String, String> databaseFlags) {
        this.databaseFlags = databaseFlags;
        return this;
    }
    
    /**
     * The database engine type and version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseVersion")
    public CloudSqlSettingsDatabaseVersionEnum databaseVersion;
    public CloudSqlSettings withDatabaseVersion(CloudSqlSettingsDatabaseVersionEnum databaseVersion) {
        this.databaseVersion = databaseVersion;
        return this;
    }
    
    /**
     * IP Management configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipConfig")
    public SqlIpConfig ipConfig;
    public CloudSqlSettings withIpConfig(SqlIpConfig ipConfig) {
        this.ipConfig = ipConfig;
        return this;
    }
    
    /**
     * Input only. Initial root password.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootPassword")
    public String rootPassword;
    public CloudSqlSettings withRootPassword(String rootPassword) {
        this.rootPassword = rootPassword;
        return this;
    }
    
    /**
     * Output only. Indicates If this connection profile root password is stored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootPasswordSet")
    public Boolean rootPasswordSet;
    public CloudSqlSettings withRootPasswordSet(Boolean rootPasswordSet) {
        this.rootPasswordSet = rootPasswordSet;
        return this;
    }
    
    /**
     * Optional. The Google Cloud Platform zone where the failover Cloud SQL database instance is located. Used when the Cloud SQL database availability type is REGIONAL (i.e. multiple zones / highly available).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondaryZone")
    public String secondaryZone;
    public CloudSqlSettings withSecondaryZone(String secondaryZone) {
        this.secondaryZone = secondaryZone;
        return this;
    }
    
    /**
     * The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceId")
    public String sourceId;
    public CloudSqlSettings withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     * The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageAutoResizeLimit")
    public String storageAutoResizeLimit;
    public CloudSqlSettings withStorageAutoResizeLimit(String storageAutoResizeLimit) {
        this.storageAutoResizeLimit = storageAutoResizeLimit;
        return this;
    }
    
    /**
     * The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances) or `db-custom-1-3840` (PostgreSQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tier")
    public String tier;
    public CloudSqlSettings withTier(String tier) {
        this.tier = tier;
        return this;
    }
    
    /**
     * The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "18kg", "count": "3" }`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLabels")
    public java.util.Map<String, String> userLabels;
    public CloudSqlSettings withUserLabels(java.util.Map<String, String> userLabels) {
        this.userLabels = userLabels;
        return this;
    }
    
    /**
     * The Google Cloud Platform zone where your Cloud SQL database instance is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public CloudSqlSettings withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
