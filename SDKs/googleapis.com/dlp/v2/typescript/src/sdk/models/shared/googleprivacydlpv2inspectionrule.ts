/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2ExclusionRule } from "./googleprivacydlpv2exclusionrule";
import { GooglePrivacyDlpV2HotwordRule } from "./googleprivacydlpv2hotwordrule";
import { Expose, Type } from "class-transformer";

/**
 * A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
 */
export class GooglePrivacyDlpV2InspectionRule extends SpeakeasyBase {
  /**
   * The rule that specifies conditions when findings of infoTypes specified in `InspectionRuleSet` are removed from results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exclusionRule" })
  @Type(() => GooglePrivacyDlpV2ExclusionRule)
  exclusionRule?: GooglePrivacyDlpV2ExclusionRule;

  /**
   * The rule that adjusts the likelihood of findings within a certain proximity of hotwords.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hotwordRule" })
  @Type(() => GooglePrivacyDlpV2HotwordRule)
  hotwordRule?: GooglePrivacyDlpV2HotwordRule;
}
