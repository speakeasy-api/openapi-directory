"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class KlarnaInfoRegionEnum(str, Enum):
    r"""The region of operation. For example, **NA**, **EU**, **CH**, **AU**."""
    NA = 'NA'
    EU = 'EU'
    CH = 'CH'
    AU = 'AU'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class KlarnaInfo:
    
    dispute_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disputeEmail') }})
    r"""The email address for disputes."""  
    support_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportEmail') }})
    r"""The email address of merchant support."""  
    auto_capture: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoCapture'), 'exclude': lambda f: f is None }})
    r"""Indicates the status of [Automatic capture](https://docs.adyen.com/online-payments/capture#automatic-capture). Default value: **false**."""  
    region: Optional[KlarnaInfoRegionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""The region of operation. For example, **NA**, **EU**, **CH**, **AU**."""  
    