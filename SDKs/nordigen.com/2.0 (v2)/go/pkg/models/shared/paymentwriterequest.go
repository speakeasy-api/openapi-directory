// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PaymentWriteRequestDebtorAccountTypeEnum - Debtor account type
type PaymentWriteRequestDebtorAccountTypeEnum string

const (
	PaymentWriteRequestDebtorAccountTypeEnumIban PaymentWriteRequestDebtorAccountTypeEnum = "IBAN"
	PaymentWriteRequestDebtorAccountTypeEnumScan PaymentWriteRequestDebtorAccountTypeEnum = "SCAN"
)

func (e *PaymentWriteRequestDebtorAccountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IBAN":
		fallthrough
	case "SCAN":
		*e = PaymentWriteRequestDebtorAccountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentWriteRequestDebtorAccountTypeEnum: %s", s)
	}
}

// PaymentWriteRequestDebtorAccount - Debtor account write serializer.
type PaymentWriteRequestDebtorAccount struct {
	// Debtor account type identifier
	Account *string `json:"account,omitempty"`
	// Debtor account address country
	AddressCountry *string `json:"address_country,omitempty"`
	// Debtor account address street
	AddressStreet *string `json:"address_street,omitempty"`
	// Debtor account currency
	Currency *string `json:"currency,omitempty"`
	// Debtor account name
	Name string `json:"name"`
	// Debtor account post code
	PostCode *string `json:"post_code,omitempty"`
	// Debtor account type
	Type *PaymentWriteRequestDebtorAccountTypeEnum `json:"type,omitempty"`
	// Debtor account type identifier
	TypeNumber *string `json:"type_number,omitempty"`
}

// PaymentWriteRequestPaymentProductEnum - Payment product
type PaymentWriteRequestPaymentProductEnum string

const (
	PaymentWriteRequestPaymentProductEnumT2P  PaymentWriteRequestPaymentProductEnum = "T2P"
	PaymentWriteRequestPaymentProductEnumSct  PaymentWriteRequestPaymentProductEnum = "SCT"
	PaymentWriteRequestPaymentProductEnumIsct PaymentWriteRequestPaymentProductEnum = "ISCT"
	PaymentWriteRequestPaymentProductEnumCbct PaymentWriteRequestPaymentProductEnum = "CBCT"
)

func (e *PaymentWriteRequestPaymentProductEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "T2P":
		fallthrough
	case "SCT":
		fallthrough
	case "ISCT":
		fallthrough
	case "CBCT":
		*e = PaymentWriteRequestPaymentProductEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentWriteRequestPaymentProductEnum: %s", s)
	}
}

// PaymentWriteRequest - PaymentWriteSerializer.
type PaymentWriteRequest struct {
	// Registered creditor account
	CreditorAccount string `json:"creditor_account"`
	// Payment Custom Payment ID
	CustomPaymentID *string `json:"custom_payment_id,omitempty"`
	// Debtor account
	DebtorAccount *PaymentWriteRequestDebtorAccount `json:"debtor_account,omitempty"`
	// Payment description
	Description *string `json:"description,omitempty"`
	// Institution ID for Payment
	InstitutionID *string `json:"institution_id,omitempty"`
	// Instructed amount
	InstructedAmount InstructedAmountRequest `json:"instructed_amount"`
	// Payment product
	PaymentProduct *PaymentWriteRequestPaymentProductEnum `json:"payment_product,omitempty"`
	// Periodic Payment Serializer.
	PeriodicPayment *PeriodicPaymentRequest `json:"periodic_payment,omitempty"`
	// Redirect URL to your application after payment is done
	Redirect string `json:"redirect"`
	// Payment Execution date (for periodic payments)
	RequestedExecutionDate *types.Date `json:"requested_execution_date,omitempty"`
}
