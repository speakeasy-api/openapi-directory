"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DevicesRemoveUserDeviceSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class DevicesRemoveUserDeviceRequest:
    
    device_udid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'device_udid', 'style': 'simple', 'explode': False }})
    r"""The UDID of the device"""  
    
class DevicesRemoveUserDevice404ApplicationJSONCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DevicesRemoveUserDevice404ApplicationJSON:
    r"""<b>not_found</b>: The user or the device can't be found."""
    
    code: DevicesRemoveUserDevice404ApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    
class DevicesRemoveUserDevice403ApplicationJSONCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DevicesRemoveUserDevice403ApplicationJSON:
    r"""<b>forbidden</b>: The user is not allowed to delete someone else's device."""
    
    code: DevicesRemoveUserDevice403ApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclasses.dataclass
class DevicesRemoveUserDeviceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    devices_remove_user_device_403_application_json_object: Optional[DevicesRemoveUserDevice403ApplicationJSON] = dataclasses.field(default=None)
    r"""<b>forbidden</b>: The user is not allowed to delete someone else's device."""  
    devices_remove_user_device_404_application_json_object: Optional[DevicesRemoveUserDevice404ApplicationJSON] = dataclasses.field(default=None)
    r"""<b>not_found</b>: The user or the device can't be found."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    