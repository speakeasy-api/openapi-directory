/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { DynamicSsmParameterValue } from "./dynamicssmparametervalue";
import { SsmTargetAccountEnum } from "./ssmtargetaccountenum";
import { Expose, Transform } from "class-transformer";

/**
 * Details about the Systems Manager automation document that will be used as a runbook during an incident.
 */
export class SsmAutomation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentName" })
  documentName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "documentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata({ elemType: DynamicSsmParameterValue })
  @Expose({ name: "dynamicParameters" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, DynamicSsmParameterValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], DynamicSsmParameterValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  dynamicParameters?: Record<string, DynamicSsmParameterValue>;

  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  parameters?: Record<string, string[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetAccount" })
  targetAccount?: SsmTargetAccountEnum;
}
