/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MeteringPost200ApplicationJSON - Success
 */
public class MeteringPost200ApplicationJSON {
    /**
     * Reading as provided as input in Wh
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("1.8.0")
    public Long one80;

    public MeteringPost200ApplicationJSON withOne80(Long one80) {
        this.one80 = one80;
        return this;
    }
    
    /**
     * Green energy calculated using Green Power Index (Gr\u00fcnstromIndex) in Wh
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("1.8.1")
    public Long one81;

    public MeteringPost200ApplicationJSON withOne81(Long one81) {
        this.one81 = one81;
        return this;
    }
    
    /**
     * Grey energy calculated using Green Power Index (Gr\u00fcnstromIndex) in Wh
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("1.8.2")
    public Long one82;

    public MeteringPost200ApplicationJSON withOne82(Long one82) {
        this.one82 = one82;
        return this;
    }
    
    /**
     * Time this reading got imported into consensus (e.q. signed timestamp).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_processingTime")
    public Long processingTime;

    public MeteringPost200ApplicationJSON withProcessingTime(Long processingTime) {
        this.processingTime = processingTime;
        return this;
    }
    
    /**
     * Stromkonto/Metering address allocated (this is not the MELOID!)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public String account;

    public MeteringPost200ApplicationJSON withAccount(String account) {
        this.account = account;
        return this;
    }
    
    /**
     * CO2 Emission of metered energy in a green energy mix (e.q. \u00d6kostromtarif)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("co2_g_oekostrom")
    public Long co2GOekostrom;

    public MeteringPost200ApplicationJSON withCo2GOekostrom(Long co2GOekostrom) {
        this.co2GOekostrom = co2GOekostrom;
        return this;
    }
    
    /**
     * CO2 Emission of metered energy in a standard mix
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("co2_g_standard")
    public Long co2GStandard;

    public MeteringPost200ApplicationJSON withCo2GStandard(Long co2GStandard) {
        this.co2GStandard = co2GStandard;
        return this;
    }
    
    /**
     * API Consensus time this reading was fully received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeStamp")
    public Long timeStamp;

    public MeteringPost200ApplicationJSON withTimeStamp(Long timeStamp) {
        this.timeStamp = timeStamp;
        return this;
    }
    
    public MeteringPost200ApplicationJSON(){}
}
