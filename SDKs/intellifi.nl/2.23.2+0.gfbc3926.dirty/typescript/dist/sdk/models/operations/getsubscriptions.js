"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetSubscriptionsResponse = exports.GetSubscriptions200ApplicationJSON = exports.GetSubscriptionsRequest = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var class_transformer_1 = require("class-transformer");
var GetSubscriptionsRequest = /** @class */ (function (_super) {
    __extends(GetSubscriptionsRequest, _super);
    function GetSubscriptionsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=after;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
        }),
        __metadata("design:type", Date)
    ], GetSubscriptionsRequest.prototype, "after", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=after_id",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "afterId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=before",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "before", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=before_id",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "beforeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=database_hold_time_h",
        }),
        __metadata("design:type", Number)
    ], GetSubscriptionsRequest.prototype, "databaseHoldTimeH", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=description",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=from" }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "from", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=from_id",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "fromId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=id" }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=id_only",
        }),
        __metadata("design:type", Boolean)
    ], GetSubscriptionsRequest.prototype, "idOnly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=limit" }),
        __metadata("design:type", Number)
    ], GetSubscriptionsRequest.prototype, "limit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=populate",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "populate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=populate_events",
        }),
        __metadata("design:type", Boolean)
    ], GetSubscriptionsRequest.prototype, "populateEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=results_only",
        }),
        __metadata("design:type", Boolean)
    ], GetSubscriptionsRequest.prototype, "resultsOnly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=select",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "select", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=sort" }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "sort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=time_created",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "timeCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=time_updated",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "timeUpdated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=timeout_s",
        }),
        __metadata("design:type", Number)
    ], GetSubscriptionsRequest.prototype, "timeoutS", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=topic_filter",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "topicFilter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=until" }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "until", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=until_id",
        }),
        __metadata("design:type", String)
    ], GetSubscriptionsRequest.prototype, "untilId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=verify_target_certificate",
        }),
        __metadata("design:type", Boolean)
    ], GetSubscriptionsRequest.prototype, "verifyTargetCertificate", void 0);
    return GetSubscriptionsRequest;
}(utils_1.SpeakeasyBase));
exports.GetSubscriptionsRequest = GetSubscriptionsRequest;
/**
 * A JSON object containing a list of subscriptions
 */
var GetSubscriptions200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetSubscriptions200ApplicationJSON, _super);
    function GetSubscriptions200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "count" }),
        __metadata("design:type", Number)
    ], GetSubscriptions200ApplicationJSON.prototype, "count", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "count_current" }),
        __metadata("design:type", Number)
    ], GetSubscriptions200ApplicationJSON.prototype, "countCurrent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_limited" }),
        __metadata("design:type", Boolean)
    ], GetSubscriptions200ApplicationJSON.prototype, "isLimited", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "next_url" }),
        __metadata("design:type", String)
    ], GetSubscriptions200ApplicationJSON.prototype, "nextUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "query_duration_ms" }),
        __metadata("design:type", Number)
    ], GetSubscriptions200ApplicationJSON.prototype, "queryDurationMs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: shared.Subscription }),
        (0, class_transformer_1.Expose)({ name: "results" }),
        (0, class_transformer_1.Type)(function () { return shared.Subscription; }),
        __metadata("design:type", Array)
    ], GetSubscriptions200ApplicationJSON.prototype, "results", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], GetSubscriptions200ApplicationJSON.prototype, "url", void 0);
    return GetSubscriptions200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetSubscriptions200ApplicationJSON = GetSubscriptions200ApplicationJSON;
var GetSubscriptionsResponse = /** @class */ (function (_super) {
    __extends(GetSubscriptionsResponse, _super);
    function GetSubscriptionsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetSubscriptionsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetSubscriptionsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetSubscriptionsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetSubscriptions200ApplicationJSON)
    ], GetSubscriptionsResponse.prototype, "getSubscriptions200ApplicationJSONObject", void 0);
    return GetSubscriptionsResponse;
}(utils_1.SpeakeasyBase));
exports.GetSubscriptionsResponse = GetSubscriptionsResponse;
