// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ArchiveKindEnum - Type of archive to make
type ArchiveKindEnum string

const (
	ArchiveKindEnumFull       ArchiveKindEnum = "full"
	ArchiveKindEnumGroups     ArchiveKindEnum = "groups"
	ArchiveKindEnumRules      ArchiveKindEnum = "rules"
	ArchiveKindEnumDirectives ArchiveKindEnum = "directives"
	ArchiveKindEnumParameters ArchiveKindEnum = "parameters"
)

func (e *ArchiveKindEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "groups":
		fallthrough
	case "rules":
		fallthrough
	case "directives":
		fallthrough
	case "parameters":
		*e = ArchiveKindEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArchiveKindEnum: %s", s)
	}
}
