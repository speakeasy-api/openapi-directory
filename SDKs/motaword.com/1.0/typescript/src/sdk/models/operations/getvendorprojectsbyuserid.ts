/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetVendorProjectsByUserIdRequest extends SpeakeasyBase {
  /**
   * Return only projects that have been completed. When `true`, this makes `joined` true as well.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=completed",
  })
  completed?: boolean;

  /**
   * Return only projects that this user has already joined
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=joined",
  })
  joined?: boolean;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * User ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: number;
}

export class GetVendorProjectsByUserIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * VendorNotFound - this is not a vendor user account
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Vendor project list
   */
  @SpeakeasyMetadata()
  projectList?: shared.ProjectList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
