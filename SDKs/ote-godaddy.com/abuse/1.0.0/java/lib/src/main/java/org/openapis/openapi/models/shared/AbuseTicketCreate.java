/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AbuseTicketCreate - The endpoint which allows the Reporter to create a new abuse ticket
 */
public class AbuseTicketCreate {
    /**
     * Additional information that may assist the abuse investigator. ie: server logs or email headers/body for SPAM
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("info")
    public String info;

    public AbuseTicketCreate withInfo(String info) {
        this.info = info;
        return this;
    }
    
    /**
     * Reporter URL if housing additional information that may assist the abuse investigator
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("infoUrl")
    public String infoUrl;

    public AbuseTicketCreate withInfoUrl(String infoUrl) {
        this.infoUrl = infoUrl;
        return this;
    }
    
    /**
     * Do you believe this is intentional abuse by the domain holder?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intentional")
    public Boolean intentional;

    public AbuseTicketCreate withIntentional(Boolean intentional) {
        this.intentional = intentional;
        return this;
    }
    
    /**
     * The Proxy information required to view the abuse being reported. ie: Specific IP used, or country of IP viewing from
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("proxy")
    public String proxy;

    public AbuseTicketCreate withProxy(String proxy) {
        this.proxy = proxy;
        return this;
    }
    
    /**
     * The URL or IP where live abuse content is located at. ie: https://www.example.com/bad_stuff/bad.php
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;

    public AbuseTicketCreate withSource(String source) {
        this.source = source;
        return this;
    }
    
    /**
     * The brand/company the abuse is targeting. ie: brand name/bank name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public String target;

    public AbuseTicketCreate withTarget(String target) {
        this.target = target;
        return this;
    }
    
    /**
     * The type of abuse being reported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AbuseTicketCreateTypeEnum type;

    public AbuseTicketCreate withType(AbuseTicketCreateTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public AbuseTicketCreate(){}
}
