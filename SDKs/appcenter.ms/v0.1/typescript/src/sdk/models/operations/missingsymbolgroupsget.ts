/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class MissingSymbolGroupsGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class MissingSymbolGroupsGetRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * missing symbol crash group id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=symbol_group_id",
  })
  symbolGroupId: string;
}

/**
 * failure response object
 */
export class MissingSymbolGroupsGetDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * symbol status
 */
export enum MissingSymbolGroupsGet200ApplicationJSONGroupsMissingSymbolsStatusEnum {
  Missing = "missing",
  Ignored = "ignored",
  Available = "available",
}

/**
 * missing symbol
 */
export class MissingSymbolGroupsGet200ApplicationJSONGroupsMissingSymbols extends SpeakeasyBase {
  /**
   * symbol name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * symbol plarform
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform?: string;

  /**
   * symbol status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: MissingSymbolGroupsGet200ApplicationJSONGroupsMissingSymbolsStatusEnum;

  /**
   * symbol id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "symbol_id" })
  symbolId: string;
}

/**
 * group status
 */
export enum MissingSymbolGroupsGet200ApplicationJSONGroupsStatusEnum {
  Active = "active",
  Pending = "pending",
  Closed = "closed",
}

/**
 * missing symbol crash group object
 */
export class MissingSymbolGroupsGet200ApplicationJSONGroups extends SpeakeasyBase {
  /**
   * application build
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_build" })
  appBuild: string;

  /**
   * application id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_id" })
  appId: string;

  /**
   * application version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "app_ver" })
  appVer: string;

  /**
   * number of crashes that belong to this group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "crash_count" })
  crashCount?: number;

  /**
   * number of errors that belong to this group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_count" })
  errorCount?: number;

  /**
   * last update date for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModified: Date;

  /**
   * list of missing symbols
   */
  @SpeakeasyMetadata({
    elemType: MissingSymbolGroupsGet200ApplicationJSONGroupsMissingSymbols,
  })
  @Expose({ name: "missing_symbols" })
  @Type(() => MissingSymbolGroupsGet200ApplicationJSONGroupsMissingSymbols)
  missingSymbols: MissingSymbolGroupsGet200ApplicationJSONGroupsMissingSymbols[];

  /**
   * group status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: MissingSymbolGroupsGet200ApplicationJSONGroupsStatusEnum;

  /**
   * id of the symbol group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "symbol_group_id" })
  symbolGroupId: string;
}

/**
 * grouped by missing symbols crashes response object
 */
export class MissingSymbolGroupsGet200ApplicationJSON extends SpeakeasyBase {
  /**
   * list of crash groups formed by missing symbols combination
   */
  @SpeakeasyMetadata({
    elemType: MissingSymbolGroupsGet200ApplicationJSONGroups,
  })
  @Expose({ name: "groups" })
  @Type(() => MissingSymbolGroupsGet200ApplicationJSONGroups)
  groups: MissingSymbolGroupsGet200ApplicationJSONGroups[];

  /**
   * total number of crashes for all the groups
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_crash_count" })
  totalCrashCount: number;
}

export class MissingSymbolGroupsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  missingSymbolGroupsGet200ApplicationJSONObject?: MissingSymbolGroupsGet200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  missingSymbolGroupsGetDefaultApplicationJSONObject?: MissingSymbolGroupsGetDefaultApplicationJSON;
}
