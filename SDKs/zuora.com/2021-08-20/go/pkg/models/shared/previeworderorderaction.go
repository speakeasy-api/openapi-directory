// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PreviewOrderOrderActionTypeEnum - Type of order action.
//
// Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
//
// Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
type PreviewOrderOrderActionTypeEnum string

const (
	PreviewOrderOrderActionTypeEnumCreateSubscription PreviewOrderOrderActionTypeEnum = "CreateSubscription"
	PreviewOrderOrderActionTypeEnumTermsAndConditions PreviewOrderOrderActionTypeEnum = "TermsAndConditions"
	PreviewOrderOrderActionTypeEnumAddProduct         PreviewOrderOrderActionTypeEnum = "AddProduct"
	PreviewOrderOrderActionTypeEnumUpdateProduct      PreviewOrderOrderActionTypeEnum = "UpdateProduct"
	PreviewOrderOrderActionTypeEnumRemoveProduct      PreviewOrderOrderActionTypeEnum = "RemoveProduct"
	PreviewOrderOrderActionTypeEnumRenewSubscription  PreviewOrderOrderActionTypeEnum = "RenewSubscription"
	PreviewOrderOrderActionTypeEnumCancelSubscription PreviewOrderOrderActionTypeEnum = "CancelSubscription"
	PreviewOrderOrderActionTypeEnumOwnerTransfer      PreviewOrderOrderActionTypeEnum = "OwnerTransfer"
	PreviewOrderOrderActionTypeEnumSuspend            PreviewOrderOrderActionTypeEnum = "Suspend"
	PreviewOrderOrderActionTypeEnumResume             PreviewOrderOrderActionTypeEnum = "Resume"
)

func (e *PreviewOrderOrderActionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateSubscription":
		fallthrough
	case "TermsAndConditions":
		fallthrough
	case "AddProduct":
		fallthrough
	case "UpdateProduct":
		fallthrough
	case "RemoveProduct":
		fallthrough
	case "RenewSubscription":
		fallthrough
	case "CancelSubscription":
		fallthrough
	case "OwnerTransfer":
		fallthrough
	case "Suspend":
		fallthrough
	case "Resume":
		*e = PreviewOrderOrderActionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PreviewOrderOrderActionTypeEnum: %s", s)
	}
}

type PreviewOrderOrderAction struct {
	// Rate plan associated with a subscription.
	//
	AddProduct *PreviewOrderRatePlanOverride `json:"addProduct,omitempty"`
	// Information about an order action of type `CancelSubscription`.
	//
	CancelSubscription *CancelSubscription `json:"cancelSubscription,omitempty"`
	// Information about an order action of type `CreateSubscription`.
	//
	CreateSubscription *PreviewOrderCreateSubscription `json:"createSubscription,omitempty"`
	// Container for custom fields of an Order Action object.
	//
	CustomFields map[string]interface{} `json:"customFields,omitempty"`
	// Information about an order action of type `OwnerTransfer`.
	//
	// **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	//
	OwnerTransfer *OwnerTransfer `json:"ownerTransfer,omitempty"`
	// Information about an order action of type `RemoveProduct`.
	//
	RemoveProduct *RemoveProduct `json:"removeProduct,omitempty"`
	// Information about an order action of type `Resume`.
	//
	Resume *CreateOrderResume `json:"resume,omitempty"`
	// Information about an order action of type `Suspend`.
	//
	Suspend *CreateOrderSuspend `json:"suspend,omitempty"`
	// Information about an order action of type `TermsAndConditions`.
	//
	TermsAndConditions *CreateOrderTermsAndConditions `json:"termsAndConditions,omitempty"`
	// Container for the contract effective, service activation, and customer acceptance dates of the order action.
	//
	// If the service activation date is set as a required field in Default Subscription Settings, skipping this field in a `CreateSubscription` order action of your JSON request will result in a `Pending` order and a `Pending Activation` subscription.
	//
	// If the customer acceptance date is set as a required field in Default Subscription Settings, skipping this field in a `CreateSubscription` order action of your JSON request will result in a `Pending` order and a `Pending Acceptance` subscription. If the service activation date field is at the same time required and skipped (or set as null), it will be a `Pending Activation` subscription.
	//
	TriggerDates []TriggerDate `json:"triggerDates,omitempty"`
	// Type of order action.
	//
	// Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
	//
	// Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
	//
	Type PreviewOrderOrderActionTypeEnum `json:"type"`
	// Information about an order action of type `UpdateProduct`.
	//
	UpdateProduct *PreviewOrderRatePlanUpdate `json:"updateProduct,omitempty"`
}
