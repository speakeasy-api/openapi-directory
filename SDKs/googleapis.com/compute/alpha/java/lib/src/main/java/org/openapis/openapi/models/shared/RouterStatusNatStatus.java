/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RouterStatusNatStatus - Status of a NAT contained in this router.
 */
public class RouterStatusNatStatus {
    /**
     * A list of IPs auto-allocated for NAT. Example: ["1.1.1.1", "129.2.16.89"]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoAllocatedNatIps")
    public String[] autoAllocatedNatIps;
    public RouterStatusNatStatus withAutoAllocatedNatIps(String[] autoAllocatedNatIps) {
        this.autoAllocatedNatIps = autoAllocatedNatIps;
        return this;
    }
    
    /**
     * A list of IPs auto-allocated for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drainAutoAllocatedNatIps")
    public String[] drainAutoAllocatedNatIps;
    public RouterStatusNatStatus withDrainAutoAllocatedNatIps(String[] drainAutoAllocatedNatIps) {
        this.drainAutoAllocatedNatIps = drainAutoAllocatedNatIps;
        return this;
    }
    
    /**
     * A list of IPs user-allocated for NAT that are in drain mode. Example: ["1.1.1.1", "179.12.26.133"].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drainUserAllocatedNatIps")
    public String[] drainUserAllocatedNatIps;
    public RouterStatusNatStatus withDrainUserAllocatedNatIps(String[] drainUserAllocatedNatIps) {
        this.drainUserAllocatedNatIps = drainUserAllocatedNatIps;
        return this;
    }
    
    /**
     * The number of extra IPs to allocate. This will be greater than 0 only if user-specified IPs are NOT enough to allow all configured VMs to use NAT. This value is meaningful only when auto-allocation of NAT IPs is *not* used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minExtraNatIpsNeeded")
    public Integer minExtraNatIpsNeeded;
    public RouterStatusNatStatus withMinExtraNatIpsNeeded(Integer minExtraNatIpsNeeded) {
        this.minExtraNatIpsNeeded = minExtraNatIpsNeeded;
        return this;
    }
    
    /**
     * Unique name of this NAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public RouterStatusNatStatus withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Number of VM endpoints (i.e., Nics) that can use NAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numVmEndpointsWithNatMappings")
    public Integer numVmEndpointsWithNatMappings;
    public RouterStatusNatStatus withNumVmEndpointsWithNatMappings(Integer numVmEndpointsWithNatMappings) {
        this.numVmEndpointsWithNatMappings = numVmEndpointsWithNatMappings;
        return this;
    }
    
    /**
     * Status of rules in this NAT.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleStatus")
    public RouterStatusNatStatusNatRuleStatus[] ruleStatus;
    public RouterStatusNatStatus withRuleStatus(RouterStatusNatStatusNatRuleStatus[] ruleStatus) {
        this.ruleStatus = ruleStatus;
        return this;
    }
    
    /**
     * A list of fully qualified URLs of reserved IP address resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAllocatedNatIpResources")
    public String[] userAllocatedNatIpResources;
    public RouterStatusNatStatus withUserAllocatedNatIpResources(String[] userAllocatedNatIpResources) {
        this.userAllocatedNatIpResources = userAllocatedNatIpResources;
        return this;
    }
    
    /**
     * A list of IPs user-allocated for NAT. They will be raw IP strings like "179.12.26.133".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAllocatedNatIps")
    public String[] userAllocatedNatIps;
    public RouterStatusNatStatus withUserAllocatedNatIps(String[] userAllocatedNatIps) {
        this.userAllocatedNatIps = userAllocatedNatIps;
        return this;
    }
    
}
