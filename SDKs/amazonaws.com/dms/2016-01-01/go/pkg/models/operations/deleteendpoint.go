// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteEndpointXAmzTargetEnum
type DeleteEndpointXAmzTargetEnum string

const (
	DeleteEndpointXAmzTargetEnumAmazonDmSv20160101DeleteEndpoint DeleteEndpointXAmzTargetEnum = "AmazonDMSv20160101.DeleteEndpoint"
)

func (e *DeleteEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonDMSv20160101.DeleteEndpoint":
		*e = DeleteEndpointXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteEndpointXAmzTargetEnum: %s", s)
	}
}

type DeleteEndpointRequest struct {
	DeleteEndpointMessage shared.DeleteEndpointMessage `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteEndpointResponse struct {
	ContentType string
	// Success
	DeleteEndpointResponse *shared.DeleteEndpointResponse
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	StatusCode            int
	RawResponse           *http.Response
}
