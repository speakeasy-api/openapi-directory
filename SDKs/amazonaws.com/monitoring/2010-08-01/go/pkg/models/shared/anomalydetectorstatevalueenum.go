// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnomalyDetectorStateValueEnum string

const (
	AnomalyDetectorStateValueEnumPendingTraining         AnomalyDetectorStateValueEnum = "PENDING_TRAINING"
	AnomalyDetectorStateValueEnumTrainedInsufficientData AnomalyDetectorStateValueEnum = "TRAINED_INSUFFICIENT_DATA"
	AnomalyDetectorStateValueEnumTrained                 AnomalyDetectorStateValueEnum = "TRAINED"
)

func (e AnomalyDetectorStateValueEnum) ToPointer() *AnomalyDetectorStateValueEnum {
	return &e
}

func (e *AnomalyDetectorStateValueEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_TRAINING":
		fallthrough
	case "TRAINED_INSUFFICIENT_DATA":
		fallthrough
	case "TRAINED":
		*e = AnomalyDetectorStateValueEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnomalyDetectorStateValueEnum: %v", v)
	}
}
