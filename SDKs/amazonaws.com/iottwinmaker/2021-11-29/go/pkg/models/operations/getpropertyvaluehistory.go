// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// GetPropertyValueHistoryRequestBodyInterpolation - An object that specifies how to interpolate data in a list.
type GetPropertyValueHistoryRequestBodyInterpolation struct {
	InterpolationType *shared.InterpolationTypeEnum `json:"interpolationType,omitempty"`
	IntervalInSeconds *int64                        `json:"intervalInSeconds,omitempty"`
}

// GetPropertyValueHistoryRequestBodyOrderByTimeEnum - The time direction to use in the result order.
type GetPropertyValueHistoryRequestBodyOrderByTimeEnum string

const (
	GetPropertyValueHistoryRequestBodyOrderByTimeEnumAscending  GetPropertyValueHistoryRequestBodyOrderByTimeEnum = "ASCENDING"
	GetPropertyValueHistoryRequestBodyOrderByTimeEnumDescending GetPropertyValueHistoryRequestBodyOrderByTimeEnum = "DESCENDING"
)

func (e GetPropertyValueHistoryRequestBodyOrderByTimeEnum) ToPointer() *GetPropertyValueHistoryRequestBodyOrderByTimeEnum {
	return &e
}

func (e *GetPropertyValueHistoryRequestBodyOrderByTimeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = GetPropertyValueHistoryRequestBodyOrderByTimeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPropertyValueHistoryRequestBodyOrderByTimeEnum: %v", v)
	}
}

type GetPropertyValueHistoryRequestBody struct {
	// The name of the component.
	ComponentName *string `json:"componentName,omitempty"`
	// The ID of the component type.
	ComponentTypeID *string `json:"componentTypeId,omitempty"`
	// supports epoch seconds value
	EndDateTime *time.Time `json:"endDateTime,omitempty"`
	// Timestamp represented in ISO 8601 format
	EndTime *string `json:"endTime,omitempty"`
	// The ID of the entity.
	EntityID *string `json:"entityId,omitempty"`
	// An object that specifies how to interpolate data in a list.
	Interpolation *GetPropertyValueHistoryRequestBodyInterpolation `json:"interpolation,omitempty"`
	// <p>The maximum number of results to return at one time. The default is 25.</p> <p>Valid Range: Minimum value of 1. Maximum value of 250.</p>
	MaxResults *int64 `json:"maxResults,omitempty"`
	// The string that specifies the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
	// The time direction to use in the result order.
	OrderByTime *GetPropertyValueHistoryRequestBodyOrderByTimeEnum `json:"orderByTime,omitempty"`
	// A list of objects that filter the property value history request.
	PropertyFilters []shared.PropertyFilter `json:"propertyFilters,omitempty"`
	// A list of properties whose value histories the request retrieves.
	SelectedProperties []string `json:"selectedProperties"`
	// supports epoch seconds value
	StartDateTime *time.Time `json:"startDateTime,omitempty"`
	// Timestamp represented in ISO 8601 format
	StartTime *string `json:"startTime,omitempty"`
}

type GetPropertyValueHistoryRequest struct {
	RequestBody       GetPropertyValueHistoryRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The ID of the workspace.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type GetPropertyValueHistoryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConnectorFailureException
	ConnectorFailureException interface{}
	// ConnectorTimeoutException
	ConnectorTimeoutException interface{}
	ContentType               string
	// Success
	GetPropertyValueHistoryResponse *shared.GetPropertyValueHistoryResponse
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
