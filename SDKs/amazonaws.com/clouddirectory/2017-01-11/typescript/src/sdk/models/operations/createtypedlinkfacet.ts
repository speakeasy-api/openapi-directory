/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.
 */
export class CreateTypedLinkFacetRequestBodyFacet extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.TypedLinkAttributeDefinition })
  @Expose({ name: "Attributes" })
  @Type(() => shared.TypedLinkAttributeDefinition)
  attributes?: shared.TypedLinkAttributeDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityAttributeOrder" })
  identityAttributeOrder?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}

export class CreateTypedLinkFacetRequestBody extends SpeakeasyBase {
  /**
   * Defines the typed links structure and its attributes. To create a typed link facet, use the <a>CreateTypedLinkFacet</a> API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Facet" })
  @Type(() => CreateTypedLinkFacetRequestBodyFacet)
  facet: CreateTypedLinkFacetRequestBodyFacet;
}

export class CreateTypedLinkFacetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateTypedLinkFacetRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The Amazon Resource Name (ARN) that is associated with the schema. For more information, see <a>arns</a>.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-amz-data-partition",
  })
  xAmzDataPartition: string;
}

export class CreateTypedLinkFacetResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createTypedLinkFacetResponse?: Record<string, any>;

  /**
   * FacetAlreadyExistsException
   */
  @SpeakeasyMetadata()
  facetAlreadyExistsException?: any;

  /**
   * FacetValidationException
   */
  @SpeakeasyMetadata()
  facetValidationException?: any;

  /**
   * InternalServiceException
   */
  @SpeakeasyMetadata()
  internalServiceException?: any;

  /**
   * InvalidArnException
   */
  @SpeakeasyMetadata()
  invalidArnException?: any;

  /**
   * InvalidRuleException
   */
  @SpeakeasyMetadata()
  invalidRuleException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * RetryableConflictException
   */
  @SpeakeasyMetadata()
  retryableConflictException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
