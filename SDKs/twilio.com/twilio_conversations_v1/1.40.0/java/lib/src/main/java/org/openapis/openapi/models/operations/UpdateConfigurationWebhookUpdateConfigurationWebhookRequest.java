/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UpdateConfigurationWebhookUpdateConfigurationWebhookRequest {
    /**
     * The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`
     */
    @SpeakeasyMetadata("form:name=Filters")
    public String[] filters;
    public UpdateConfigurationWebhookUpdateConfigurationWebhookRequest withFilters(String[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * The HTTP method to be used when sending a webhook request.
     */
    @SpeakeasyMetadata("form:name=Method")
    public String method;
    public UpdateConfigurationWebhookUpdateConfigurationWebhookRequest withMethod(String method) {
        this.method = method;
        return this;
    }
    
    /**
     * The absolute url the post-event webhook request should be sent to.
     */
    @SpeakeasyMetadata("form:name=PostWebhookUrl")
    public String postWebhookUrl;
    public UpdateConfigurationWebhookUpdateConfigurationWebhookRequest withPostWebhookUrl(String postWebhookUrl) {
        this.postWebhookUrl = postWebhookUrl;
        return this;
    }
    
    /**
     * The absolute url the pre-event webhook request should be sent to.
     */
    @SpeakeasyMetadata("form:name=PreWebhookUrl")
    public String preWebhookUrl;
    public UpdateConfigurationWebhookUpdateConfigurationWebhookRequest withPreWebhookUrl(String preWebhookUrl) {
        this.preWebhookUrl = preWebhookUrl;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=Target")
    public org.openapis.openapi.models.shared.ConfigurationWebhookEnumTargetEnum target;
    public UpdateConfigurationWebhookUpdateConfigurationWebhookRequest withTarget(org.openapis.openapi.models.shared.ConfigurationWebhookEnumTargetEnum target) {
        this.target = target;
        return this;
    }
    
}
