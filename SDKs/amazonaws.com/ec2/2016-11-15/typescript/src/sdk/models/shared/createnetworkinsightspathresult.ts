/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The destination port range.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The source port range.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * Scopes the analysis to network paths that match specific filters at the destination.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddress?: string;

  @SpeakeasyMetadata()
  destinationPortRange?: CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange;

  @SpeakeasyMetadata()
  sourceAddress?: string;

  @SpeakeasyMetadata()
  sourcePortRange?: CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange;
}

/**
 * The destination port range.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * The source port range.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  toPort?: number;
}

/**
 * Scopes the analysis to network paths that match specific filters at the source.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddress?: string;

  @SpeakeasyMetadata()
  destinationPortRange?: CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange;

  @SpeakeasyMetadata()
  sourceAddress?: string;

  @SpeakeasyMetadata()
  sourcePortRange?: CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange;
}

/**
 * The protocol.
 */
export enum CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum {
  Tcp = "tcp",
  Udp = "udp",
}

/**
 * Describes a tag.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPathTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the path.
 */
export class CreateNetworkInsightsPathResultNetworkInsightsPath extends SpeakeasyBase {
  @SpeakeasyMetadata()
  createdDate?: Date;

  @SpeakeasyMetadata()
  destination?: string;

  @SpeakeasyMetadata()
  destinationArn?: string;

  @SpeakeasyMetadata()
  destinationIp?: string;

  @SpeakeasyMetadata()
  destinationPort?: number;

  @SpeakeasyMetadata()
  filterAtDestination?: CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination;

  @SpeakeasyMetadata()
  filterAtSource?: CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource;

  @SpeakeasyMetadata()
  networkInsightsPathArn?: string;

  @SpeakeasyMetadata()
  networkInsightsPathId?: string;

  @SpeakeasyMetadata()
  protocol?: CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum;

  @SpeakeasyMetadata()
  source?: string;

  @SpeakeasyMetadata()
  sourceArn?: string;

  @SpeakeasyMetadata()
  sourceIp?: string;

  @SpeakeasyMetadata({
    elemType: CreateNetworkInsightsPathResultNetworkInsightsPathTags,
  })
  tags?: CreateNetworkInsightsPathResultNetworkInsightsPathTags[];
}

/**
 * Success
 */
export class CreateNetworkInsightsPathResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  networkInsightsPath?: CreateNetworkInsightsPathResultNetworkInsightsPath;
}
