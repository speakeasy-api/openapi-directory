"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import globalalert as shared_globalalert
from typing import Optional


@dataclasses.dataclass
class DotGetGlobalAlertsRequest:
    
    includestreaming: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includestreaming', 'style': 'form', 'explode': True }})
    r"""Determines whether Streaming Alerts are included in results"""  
    

@dataclasses.dataclass
class DotGetGlobalAlerts200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[list[shared_globalalert.GlobalAlert]] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DotGetGlobalAlertsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    