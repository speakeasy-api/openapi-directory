// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type EcommerceProductCategories struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The name of the category.
	Name *string `json:"name,omitempty"`
}

type EcommerceProductImages struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The URL of an image of the product.
	URL *string `json:"url,omitempty"`
}

type EcommerceProductOptions struct {
	// A unique identifier for the option of the product.
	ID *string `json:"id,omitempty"`
	// The name of the option for the product.
	Name   *string  `json:"name,omitempty"`
	Values []string `json:"values,omitempty"`
}

// EcommerceProductProductStatusEnum - The current status of the product (active or archived).
type EcommerceProductProductStatusEnum string

const (
	EcommerceProductProductStatusEnumActive   EcommerceProductProductStatusEnum = "active"
	EcommerceProductProductStatusEnumArchived EcommerceProductProductStatusEnum = "archived"
)

func (e *EcommerceProductProductStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "archived":
		*e = EcommerceProductProductStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EcommerceProductProductStatusEnum: %s", s)
	}
}

type EcommerceProductVariantsImages struct {
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// The URL of an image of the variant.
	URL *string `json:"url,omitempty"`
}

type EcommerceProductVariantsOptions struct {
	// A unique identifier for the option of the variant.
	ID *string `json:"id,omitempty"`
	// The name of the option for the variant.
	Name *string `json:"name,omitempty"`
	// The value of the option for the variant.
	Value *string `json:"value,omitempty"`
}

type EcommerceProductVariants struct {
	// A unique identifier for the variant of the product.
	ID     *string                          `json:"id,omitempty"`
	Images []EcommerceProductVariantsImages `json:"images,omitempty"`
	// The quantity of the variant in stock.
	InventoryQuantity *string `json:"inventory_quantity,omitempty"`
	// The name for the variant, used for displaying to customers.
	Name    *string                           `json:"name,omitempty"`
	Options []EcommerceProductVariantsOptions `json:"options,omitempty"`
	// The price of the variant.
	Price *string `json:"price,omitempty"`
	// The stock keeping unit of the variant.
	Sku *string `json:"sku,omitempty"`
	// The weight of the variant.
	Weight *string `json:"weight,omitempty"`
	// The unit of measurement for the weight of the variant.
	WeightUnit *string `json:"weight_unit,omitempty"`
}

type EcommerceProduct struct {
	// An array of categories for the product, used for organization and searching.
	Categories []EcommerceProductCategories `json:"categories,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A detailed description of the product.
	Description *string `json:"description,omitempty"`
	// A unique identifier for an object.
	ID string `json:"id"`
	// An array of image URLs for the product.
	Images []EcommerceProductImages `json:"images,omitempty"`
	// The quantity of the product in stock.
	InventoryQuantity *string `json:"inventory_quantity,omitempty"`
	// The name of the product as it should be displayed to customers.
	Name *string `json:"name,omitempty"`
	// An array of options for the product.
	Options []EcommerceProductOptions `json:"options,omitempty"`
	// The price of the product.
	Price *string `json:"price,omitempty"`
	// The stock keeping unit of the product.
	Sku *string `json:"sku,omitempty"`
	// The current status of the product (active or archived).
	Status *EcommerceProductProductStatusEnum `json:"status,omitempty"`
	// An array of tags for the product, used for organization and searching.
	Tags []string `json:"tags,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time                 `json:"updated_at,omitempty"`
	Variants  []EcommerceProductVariants `json:"variants,omitempty"`
	// The weight of the product.
	Weight *string `json:"weight,omitempty"`
	// The unit of measurement for the weight of the product.
	WeightUnit *string `json:"weight_unit,omitempty"`
}
