<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Position - Position defines a position within a collection of data. The value can be either the end position, a key (used with ordered collections), a byte offset, or a record index.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Position
{
    /**
     * Position is a byte offset.
     * 
     * @var ?string $byteOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('byteOffset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $byteOffset = null;
    
    /**
     * A position that encapsulates an inner position and an index for the inner position. A ConcatPosition can be used by a reader of a source that encapsulates a set of other sources.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConcatPosition $concatPosition
     */
	#[\JMS\Serializer\Annotation\SerializedName('concatPosition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConcatPosition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConcatPosition $concatPosition = null;
    
    /**
     * Position is past all other positions. Also useful for the end position of an unbounded range.
     * 
     * @var ?bool $end
     */
	#[\JMS\Serializer\Annotation\SerializedName('end')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $end = null;
    
    /**
     * Position is a string key, ordered lexicographically.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     * Position is a record index.
     * 
     * @var ?string $recordIndex
     */
	#[\JMS\Serializer\Annotation\SerializedName('recordIndex')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recordIndex = null;
    
    /**
     * CloudPosition is a base64 encoded BatchShufflePosition (with FIXED sharding).
     * 
     * @var ?string $shufflePosition
     */
	#[\JMS\Serializer\Annotation\SerializedName('shufflePosition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shufflePosition = null;
    
	public function __construct()
	{
		$this->byteOffset = null;
		$this->concatPosition = null;
		$this->end = null;
		$this->key = null;
		$this->recordIndex = null;
		$this->shufflePosition = null;
	}
}
