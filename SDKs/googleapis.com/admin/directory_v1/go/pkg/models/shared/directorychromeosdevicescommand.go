// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DirectoryChromeosdevicesCommandStateEnum - Indicates the command state.
type DirectoryChromeosdevicesCommandStateEnum string

const (
	DirectoryChromeosdevicesCommandStateEnumStateUnspecified DirectoryChromeosdevicesCommandStateEnum = "STATE_UNSPECIFIED"
	DirectoryChromeosdevicesCommandStateEnumPending          DirectoryChromeosdevicesCommandStateEnum = "PENDING"
	DirectoryChromeosdevicesCommandStateEnumExpired          DirectoryChromeosdevicesCommandStateEnum = "EXPIRED"
	DirectoryChromeosdevicesCommandStateEnumCancelled        DirectoryChromeosdevicesCommandStateEnum = "CANCELLED"
	DirectoryChromeosdevicesCommandStateEnumSentToClient     DirectoryChromeosdevicesCommandStateEnum = "SENT_TO_CLIENT"
	DirectoryChromeosdevicesCommandStateEnumAckedByClient    DirectoryChromeosdevicesCommandStateEnum = "ACKED_BY_CLIENT"
	DirectoryChromeosdevicesCommandStateEnumExecutedByClient DirectoryChromeosdevicesCommandStateEnum = "EXECUTED_BY_CLIENT"
)

func (e *DirectoryChromeosdevicesCommandStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "SENT_TO_CLIENT":
		fallthrough
	case "ACKED_BY_CLIENT":
		fallthrough
	case "EXECUTED_BY_CLIENT":
		*e = DirectoryChromeosdevicesCommandStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DirectoryChromeosdevicesCommandStateEnum: %s", s)
	}
}

// DirectoryChromeosdevicesCommandTypeEnum - The type of the command.
type DirectoryChromeosdevicesCommandTypeEnum string

const (
	DirectoryChromeosdevicesCommandTypeEnumCommandTypeUnspecified DirectoryChromeosdevicesCommandTypeEnum = "COMMAND_TYPE_UNSPECIFIED"
	DirectoryChromeosdevicesCommandTypeEnumReboot                 DirectoryChromeosdevicesCommandTypeEnum = "REBOOT"
	DirectoryChromeosdevicesCommandTypeEnumTakeAScreenshot        DirectoryChromeosdevicesCommandTypeEnum = "TAKE_A_SCREENSHOT"
	DirectoryChromeosdevicesCommandTypeEnumSetVolume              DirectoryChromeosdevicesCommandTypeEnum = "SET_VOLUME"
	DirectoryChromeosdevicesCommandTypeEnumWipeUsers              DirectoryChromeosdevicesCommandTypeEnum = "WIPE_USERS"
	DirectoryChromeosdevicesCommandTypeEnumRemotePowerwash        DirectoryChromeosdevicesCommandTypeEnum = "REMOTE_POWERWASH"
	DirectoryChromeosdevicesCommandTypeEnumDeviceStartCrdSession  DirectoryChromeosdevicesCommandTypeEnum = "DEVICE_START_CRD_SESSION"
)

func (e *DirectoryChromeosdevicesCommandTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMMAND_TYPE_UNSPECIFIED":
		fallthrough
	case "REBOOT":
		fallthrough
	case "TAKE_A_SCREENSHOT":
		fallthrough
	case "SET_VOLUME":
		fallthrough
	case "WIPE_USERS":
		fallthrough
	case "REMOTE_POWERWASH":
		fallthrough
	case "DEVICE_START_CRD_SESSION":
		*e = DirectoryChromeosdevicesCommandTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DirectoryChromeosdevicesCommandTypeEnum: %s", s)
	}
}

// DirectoryChromeosdevicesCommand - Information regarding a command that was issued to a device.
type DirectoryChromeosdevicesCommand struct {
	// The time at which the command will expire. If the device doesn't execute the command within this time the command will become expired.
	CommandExpireTime *string `json:"commandExpireTime,omitempty"`
	// Unique ID of a device command.
	CommandID *string `json:"commandId,omitempty"`
	// The result of executing a command.
	CommandResult *DirectoryChromeosdevicesCommandResult `json:"commandResult,omitempty"`
	// The timestamp when the command was issued by the admin.
	IssueTime *string `json:"issueTime,omitempty"`
	// The payload that the command specified, if any.
	Payload *string `json:"payload,omitempty"`
	// Indicates the command state.
	State *DirectoryChromeosdevicesCommandStateEnum `json:"state,omitempty"`
	// The type of the command.
	Type *DirectoryChromeosdevicesCommandTypeEnum `json:"type,omitempty"`
}
