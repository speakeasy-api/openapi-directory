/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MacSignResponse - Response message for KeyManagementService.MacSign.
 */
public class MacSignResponse {
    /**
     * The created signature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mac")
    public String mac;
    public MacSignResponse withMac(String mac) {
        this.mac = mac;
        return this;
    }
    
    /**
     * Integrity verification field. A CRC32C checksum of the returned MacSignResponse.mac. An integrity check of MacSignResponse.mac can be performed by computing the CRC32C checksum of MacSignResponse.mac and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("macCrc32c")
    public String macCrc32c;
    public MacSignResponse withMacCrc32c(String macCrc32c) {
        this.macCrc32c = macCrc32c;
        return this;
    }
    
    /**
     * The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public MacSignResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ProtectionLevel of the CryptoKeyVersion used for signing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protectionLevel")
    public MacSignResponseProtectionLevelEnum protectionLevel;
    public MacSignResponse withProtectionLevel(MacSignResponseProtectionLevelEnum protectionLevel) {
        this.protectionLevel = protectionLevel;
        return this;
    }
    
    /**
     * Integrity verification field. A flag indicating whether MacSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verifiedDataCrc32c")
    public Boolean verifiedDataCrc32c;
    public MacSignResponse withVerifiedDataCrc32c(Boolean verifiedDataCrc32c) {
        this.verifiedDataCrc32c = verifiedDataCrc32c;
        return this;
    }
    
}
