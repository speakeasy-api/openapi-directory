// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FallbackResultEnum string

const (
	FallbackResultEnumAllow FallbackResultEnum = "ALLOW"
	FallbackResultEnumDeny  FallbackResultEnum = "DENY"
)

func (e FallbackResultEnum) ToPointer() *FallbackResultEnum {
	return &e
}

func (e *FallbackResultEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ALLOW":
		fallthrough
	case "DENY":
		*e = FallbackResultEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FallbackResultEnum: %v", v)
	}
}
