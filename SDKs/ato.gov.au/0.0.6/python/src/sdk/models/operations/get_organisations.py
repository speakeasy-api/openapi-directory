"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import not_found as shared_not_found
from ..shared import organisation as shared_organisation
from ..shared import unauthenticated as shared_unauthenticated
from typing import Optional


@dataclasses.dataclass
class GetOrganisationsRequest:
    
    api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'apiKey', 'style': 'simple', 'explode': False }})
    r"""The API key."""  
    identifier: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'identifier', 'style': 'form', 'explode': True }})
    r"""The identifier, for example, `123456789`."""  
    registered_identifier: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'registeredIdentifier', 'style': 'form', 'explode': True }})
    r"""The registered identifier, for example, `ACN` or `ABN`."""  
    

@dataclasses.dataclass
class GetOrganisationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    not_found: Optional[shared_not_found.NotFound] = dataclasses.field(default=None)
    r"""The specified resource was not found"""  
    organisations: Optional[list[shared_organisation.Organisation]] = dataclasses.field(default=None)
    r"""A list of organisations was retrieved successfully"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unauthenticated: Optional[shared_unauthenticated.Unauthenticated] = dataclasses.field(default=None)
    r"""Request not authenticated due to missing, invalid, or expired token"""  
    