/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserResponse - The type that defines the fields for the getUser method.
 */
public class UserResponse {
    /**
     * Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountType")
    public String accountType;

    public UserResponse withAccountType(String accountType) {
        this.accountType = accountType;
        return this;
    }
    
    /**
     * The type that defines the fields for the business account information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessAccount")
    public BusinessAccount businessAccount;

    public UserResponse withBusinessAccount(BusinessAccount businessAccount) {
        this.businessAccount = businessAccount;
        return this;
    }
    
    /**
     * The type that defines the fields for the information of an individual account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualAccount")
    public IndividualAccount individualAccount;

    public UserResponse withIndividualAccount(IndividualAccount individualAccount) {
        this.individualAccount = individualAccount;
        return this;
    }
    
    /**
     * The eBay site on which the account is registered. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationMarketplaceId")
    public String registrationMarketplaceId;

    public UserResponse withRegistrationMarketplaceId(String registrationMarketplaceId) {
        this.registrationMarketplaceId = registrationMarketplaceId;
        return this;
    }
    
    /**
     * Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public UserResponse withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The eBay immutable user ID of the user's account and can always be used to identify the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public String userId;

    public UserResponse withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public UserResponse withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public UserResponse(){}
}
