// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisableStageTransitionXAmzTargetEnum
type DisableStageTransitionXAmzTargetEnum string

const (
	DisableStageTransitionXAmzTargetEnumCodePipeline20150709DisableStageTransition DisableStageTransitionXAmzTargetEnum = "CodePipeline_20150709.DisableStageTransition"
)

func (e DisableStageTransitionXAmzTargetEnum) ToPointer() *DisableStageTransitionXAmzTargetEnum {
	return &e
}

func (e *DisableStageTransitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.DisableStageTransition":
		*e = DisableStageTransitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisableStageTransitionXAmzTargetEnum: %v", v)
	}
}

type DisableStageTransitionRequest struct {
	DisableStageTransitionInput shared.DisableStageTransitionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DisableStageTransitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisableStageTransitionResponse struct {
	ContentType string
	// PipelineNotFoundException
	PipelineNotFoundException interface{}
	// StageNotFoundException
	StageNotFoundException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ValidationException
	ValidationException interface{}
}
