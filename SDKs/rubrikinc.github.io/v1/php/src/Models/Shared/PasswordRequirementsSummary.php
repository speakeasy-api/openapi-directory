<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PasswordRequirementsSummary - Active password requirements.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PasswordRequirementsSummary
{
	#[\JMS\Serializer\Annotation\SerializedName('blockPreviousPasswords')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $blockPreviousPasswords;
    
	#[\JMS\Serializer\Annotation\SerializedName('clearApiTokens')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $clearApiTokens;
    
	#[\JMS\Serializer\Annotation\SerializedName('clearWebSessions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $clearWebSessions;
    
	#[\JMS\Serializer\Annotation\SerializedName('maxLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $maxLength;
    
	#[\JMS\Serializer\Annotation\SerializedName('minLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minLength;
    
	#[\JMS\Serializer\Annotation\SerializedName('minLowerCase')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minLowerCase;
    
	#[\JMS\Serializer\Annotation\SerializedName('minNumerics')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minNumerics;
    
	#[\JMS\Serializer\Annotation\SerializedName('minSpecial')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minSpecial;
    
	#[\JMS\Serializer\Annotation\SerializedName('minUpperCase')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minUpperCase;
    
	#[\JMS\Serializer\Annotation\SerializedName('useZxcvbn')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $useZxcvbn;
    
	public function __construct()
	{
		$this->blockPreviousPasswords = false;
		$this->clearApiTokens = false;
		$this->clearWebSessions = false;
		$this->maxLength = 0;
		$this->minLength = 0;
		$this->minLowerCase = 0;
		$this->minNumerics = 0;
		$this->minSpecial = 0;
		$this->minUpperCase = 0;
		$this->useZxcvbn = false;
	}
}
