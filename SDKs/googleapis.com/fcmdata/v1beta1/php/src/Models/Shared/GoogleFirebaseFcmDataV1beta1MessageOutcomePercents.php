<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleFirebaseFcmDataV1beta1MessageOutcomePercents - Percentage breakdown of message delivery outcomes. These categories are mutually exclusive. All percentages are calculated with countMessagesAccepted as the denominator. These categories may not account for all message outcomes.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleFirebaseFcmDataV1beta1MessageOutcomePercents
{
    /**
     * The percentage of all accepted messages that were successfully delivered to the device.
     * 
     * @var ?float $delivered
     */
	#[\JMS\Serializer\Annotation\SerializedName('delivered')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $delivered = null;
    
    /**
     * The percentage of accepted messages that were dropped because the application was force stopped on the device at the time of delivery and retries were unsuccessful.
     * 
     * @var ?float $droppedAppForceStopped
     */
	#[\JMS\Serializer\Annotation\SerializedName('droppedAppForceStopped')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $droppedAppForceStopped = null;
    
    /**
     * The percentage of accepted messages that were dropped because the target device is inactive. FCM will drop messages if the target device is deemed inactive by our servers. If a device does reconnect, we call [OnDeletedMessages()](https://firebase.google.com/docs/cloud-messaging/android/receive#override-ondeletedmessages) in our SDK instead of delivering the messages.
     * 
     * @var ?float $droppedDeviceInactive
     */
	#[\JMS\Serializer\Annotation\SerializedName('droppedDeviceInactive')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $droppedDeviceInactive = null;
    
    /**
     * The percentage of accepted messages that were dropped due to [too many undelivered non-collapsible messages](https://firebase.google.com/docs/cloud-messaging/concept-options#collapsible_and_non-collapsible_messages). Specifically, each app instance can only have 100 pending messages stored on our servers for a device which is disconnected. When that device reconnects, those messages are delivered. When there are more than the maximum pending messages, we call [OnDeletedMessages()](https://firebase.google.com/docs/cloud-messaging/android/receive#override-ondeletedmessages) in our SDK instead of delivering the messages.
     * 
     * @var ?float $droppedTooManyPendingMessages
     */
	#[\JMS\Serializer\Annotation\SerializedName('droppedTooManyPendingMessages')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $droppedTooManyPendingMessages = null;
    
    /**
     * The percentage of messages accepted on this day that were not dropped and not delivered, due to the device being disconnected (as of the end of the America/Los_Angeles day when the message was sent to FCM). A portion of these messages will be delivered the next day when the device connects but others may be destined to devices that ultimately never reconnect.
     * 
     * @var ?float $pending
     */
	#[\JMS\Serializer\Annotation\SerializedName('pending')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $pending = null;
    
	public function __construct()
	{
		$this->delivered = null;
		$this->droppedAppForceStopped = null;
		$this->droppedDeviceInactive = null;
		$this->droppedTooManyPendingMessages = null;
		$this->pending = null;
	}
}
