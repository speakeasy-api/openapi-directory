// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuctionContextAuctionTypesEnum string

const (
	AuctionContextAuctionTypesEnumOpenAuction AuctionContextAuctionTypesEnum = "OPEN_AUCTION"
	AuctionContextAuctionTypesEnumDirectDeals AuctionContextAuctionTypesEnum = "DIRECT_DEALS"
)

func (e AuctionContextAuctionTypesEnum) ToPointer() *AuctionContextAuctionTypesEnum {
	return &e
}

func (e *AuctionContextAuctionTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPEN_AUCTION":
		fallthrough
	case "DIRECT_DEALS":
		*e = AuctionContextAuctionTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuctionContextAuctionTypesEnum: %v", v)
	}
}

// AuctionContext - Output only. The auction type the restriction applies to.
type AuctionContext struct {
	// The auction types this restriction applies to.
	AuctionTypes []AuctionContextAuctionTypesEnum `json:"auctionTypes,omitempty"`
}
