// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactTypeEnum string

const (
	ContactTypeEnumPerson      ContactTypeEnum = "PERSON"
	ContactTypeEnumCompany     ContactTypeEnum = "COMPANY"
	ContactTypeEnumAssociation ContactTypeEnum = "ASSOCIATION"
	ContactTypeEnumPublicBody  ContactTypeEnum = "PUBLIC_BODY"
	ContactTypeEnumReseller    ContactTypeEnum = "RESELLER"
)

func (e ContactTypeEnum) ToPointer() *ContactTypeEnum {
	return &e
}

func (e *ContactTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PERSON":
		fallthrough
	case "COMPANY":
		fallthrough
	case "ASSOCIATION":
		fallthrough
	case "PUBLIC_BODY":
		fallthrough
	case "RESELLER":
		*e = ContactTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactTypeEnum: %v", v)
	}
}
