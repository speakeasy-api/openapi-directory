/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OnEnterLifecycle } from "./onenterlifecycle";
import { OnExitLifecycle } from "./onexitlifecycle";
import { OnInputLifecycle } from "./oninputlifecycle";
import { Expose, Type } from "class-transformer";

/**
 * Information that defines a state of a detector.
 */
export class State extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "onEnter" })
  @Type(() => OnEnterLifecycle)
  onEnter?: OnEnterLifecycle;

  @SpeakeasyMetadata()
  @Expose({ name: "onExit" })
  @Type(() => OnExitLifecycle)
  onExit?: OnExitLifecycle;

  @SpeakeasyMetadata()
  @Expose({ name: "onInput" })
  @Type(() => OnInputLifecycle)
  onInput?: OnInputLifecycle;

  @SpeakeasyMetadata()
  @Expose({ name: "stateName" })
  stateName: string;
}
