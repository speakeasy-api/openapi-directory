// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MessageCode400SBSEnum - Message codes defined for signing baskets for HTTP Error code 400 (BAD_REQUEST).
type MessageCode400SBSEnum string

const (
	MessageCode400SBSEnumFormatError            MessageCode400SBSEnum = "FORMAT_ERROR"
	MessageCode400SBSEnumParameterNotConsistent MessageCode400SBSEnum = "PARAMETER_NOT_CONSISTENT"
	MessageCode400SBSEnumParameterNotSupported  MessageCode400SBSEnum = "PARAMETER_NOT_SUPPORTED"
	MessageCode400SBSEnumServiceInvalid         MessageCode400SBSEnum = "SERVICE_INVALID"
	MessageCode400SBSEnumResourceUnknown        MessageCode400SBSEnum = "RESOURCE_UNKNOWN"
	MessageCode400SBSEnumResourceExpired        MessageCode400SBSEnum = "RESOURCE_EXPIRED"
	MessageCode400SBSEnumResourceBlocked        MessageCode400SBSEnum = "RESOURCE_BLOCKED"
	MessageCode400SBSEnumTimestampInvalid       MessageCode400SBSEnum = "TIMESTAMP_INVALID"
	MessageCode400SBSEnumPeriodInvalid          MessageCode400SBSEnum = "PERIOD_INVALID"
	MessageCode400SBSEnumScaMethodUnknown       MessageCode400SBSEnum = "SCA_METHOD_UNKNOWN"
	MessageCode400SBSEnumScaInvalid             MessageCode400SBSEnum = "SCA_INVALID"
	MessageCode400SBSEnumConsentUnknown         MessageCode400SBSEnum = "CONSENT_UNKNOWN"
	MessageCode400SBSEnumReferenceMixInvalid    MessageCode400SBSEnum = "REFERENCE_MIX_INVALID"
)

func (e *MessageCode400SBSEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FORMAT_ERROR":
		fallthrough
	case "PARAMETER_NOT_CONSISTENT":
		fallthrough
	case "PARAMETER_NOT_SUPPORTED":
		fallthrough
	case "SERVICE_INVALID":
		fallthrough
	case "RESOURCE_UNKNOWN":
		fallthrough
	case "RESOURCE_EXPIRED":
		fallthrough
	case "RESOURCE_BLOCKED":
		fallthrough
	case "TIMESTAMP_INVALID":
		fallthrough
	case "PERIOD_INVALID":
		fallthrough
	case "SCA_METHOD_UNKNOWN":
		fallthrough
	case "SCA_INVALID":
		fallthrough
	case "CONSENT_UNKNOWN":
		fallthrough
	case "REFERENCE_MIX_INVALID":
		*e = MessageCode400SBSEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageCode400SBSEnum: %s", s)
	}
}
