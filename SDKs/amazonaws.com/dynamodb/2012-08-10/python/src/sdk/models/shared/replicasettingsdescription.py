"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoscalingsettingsdescription as shared_autoscalingsettingsdescription
from ..shared import billingmodesummary as shared_billingmodesummary
from ..shared import replicaglobalsecondaryindexsettingsdescription as shared_replicaglobalsecondaryindexsettingsdescription
from ..shared import replicastatus_enum as shared_replicastatus_enum
from ..shared import tableclasssummary as shared_tableclasssummary
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReplicaSettingsDescription:
    r"""Represents the properties of a replica."""
    
    region_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RegionName') }})  
    replica_billing_mode_summary: Optional[shared_billingmodesummary.BillingModeSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaBillingModeSummary'), 'exclude': lambda f: f is None }})  
    replica_global_secondary_index_settings: Optional[list[shared_replicaglobalsecondaryindexsettingsdescription.ReplicaGlobalSecondaryIndexSettingsDescription]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaGlobalSecondaryIndexSettings'), 'exclude': lambda f: f is None }})  
    replica_provisioned_read_capacity_auto_scaling_settings: Optional[shared_autoscalingsettingsdescription.AutoScalingSettingsDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaProvisionedReadCapacityAutoScalingSettings'), 'exclude': lambda f: f is None }})  
    replica_provisioned_read_capacity_units: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaProvisionedReadCapacityUnits'), 'exclude': lambda f: f is None }})  
    replica_provisioned_write_capacity_auto_scaling_settings: Optional[shared_autoscalingsettingsdescription.AutoScalingSettingsDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaProvisionedWriteCapacityAutoScalingSettings'), 'exclude': lambda f: f is None }})  
    replica_provisioned_write_capacity_units: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaProvisionedWriteCapacityUnits'), 'exclude': lambda f: f is None }})  
    replica_status: Optional[shared_replicastatus_enum.ReplicaStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaStatus'), 'exclude': lambda f: f is None }})  
    replica_table_class_summary: Optional[shared_tableclasssummary.TableClassSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaTableClassSummary'), 'exclude': lambda f: f is None }})
    r"""Contains details of the table class."""  
    