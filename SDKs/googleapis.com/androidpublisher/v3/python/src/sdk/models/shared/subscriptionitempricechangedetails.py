"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SubscriptionItemPriceChangeDetailsPriceChangeModeEnum(str, Enum):
    r"""Price change mode specifies how the subscription item price is changing."""
    PRICE_CHANGE_MODE_UNSPECIFIED = 'PRICE_CHANGE_MODE_UNSPECIFIED'
    PRICE_DECREASE = 'PRICE_DECREASE'
    PRICE_INCREASE = 'PRICE_INCREASE'

class SubscriptionItemPriceChangeDetailsPriceChangeStateEnum(str, Enum):
    r"""State the price change is currently in."""
    PRICE_CHANGE_STATE_UNSPECIFIED = 'PRICE_CHANGE_STATE_UNSPECIFIED'
    OUTSTANDING = 'OUTSTANDING'
    CONFIRMED = 'CONFIRMED'
    APPLIED = 'APPLIED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscriptionItemPriceChangeDetails:
    r"""Price change related information of a subscription item."""
    
    expected_new_price_charge_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expectedNewPriceChargeTime'), 'exclude': lambda f: f is None }})
    r"""The renewal time at which the price change will become effective for the user. This is subject to change(to a future time) due to cases where the renewal time shifts like pause."""  
    new_price: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newPrice'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money with its currency type."""  
    price_change_mode: Optional[SubscriptionItemPriceChangeDetailsPriceChangeModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceChangeMode'), 'exclude': lambda f: f is None }})
    r"""Price change mode specifies how the subscription item price is changing."""  
    price_change_state: Optional[SubscriptionItemPriceChangeDetailsPriceChangeStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceChangeState'), 'exclude': lambda f: f is None }})
    r"""State the price change is currently in."""  
    