/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetNetworkInsightApplicationHealthByTime200ApplicationJSON {
    /**
     * The end time of the query range
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTs")
    public OffsetDateTime endTs;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withEndTs(OffsetDateTime endTs) {
        this.endTs = endTs;
        return this;
    }
    
    /**
     * LAN goodput (Number of useful information bits delivered over a LAN per unit of time)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lanGoodput")
    public Long lanGoodput;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withLanGoodput(Long lanGoodput) {
        this.lanGoodput = lanGoodput;
        return this;
    }
    
    /**
     * LAN latency in milliseconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lanLatencyMs")
    public Float lanLatencyMs;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withLanLatencyMs(Float lanLatencyMs) {
        this.lanLatencyMs = lanLatencyMs;
        return this;
    }
    
    /**
     * LAN loss percentage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lanLossPercent")
    public Float lanLossPercent;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withLanLossPercent(Float lanLossPercent) {
        this.lanLossPercent = lanLossPercent;
        return this;
    }
    
    /**
     * Number of clients
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numClients")
    public Long numClients;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withNumClients(Long numClients) {
        this.numClients = numClients;
        return this;
    }
    
    /**
     * Received kilobytes-per-second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recv")
    public Long recv;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withRecv(Long recv) {
        this.recv = recv;
        return this;
    }
    
    /**
     * Duration of the response, in milliseconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responseDuration")
    public Long responseDuration;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withResponseDuration(Long responseDuration) {
        this.responseDuration = responseDuration;
        return this;
    }
    
    /**
     * Sent kilobytes-per-second
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sent")
    public Long sent;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withSent(Long sent) {
        this.sent = sent;
        return this;
    }
    
    /**
     * The start time of the query range
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTs")
    public OffsetDateTime startTs;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withStartTs(OffsetDateTime startTs) {
        this.startTs = startTs;
        return this;
    }
    
    /**
     * WAN goodput (Number of useful information bits delivered over a WAN per unit of time)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wanGoodput")
    public Long wanGoodput;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withWanGoodput(Long wanGoodput) {
        this.wanGoodput = wanGoodput;
        return this;
    }
    
    /**
     * WAN latency in milliseconds
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wanLatencyMs")
    public Float wanLatencyMs;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withWanLatencyMs(Float wanLatencyMs) {
        this.wanLatencyMs = wanLatencyMs;
        return this;
    }
    
    /**
     * WAN loss percentage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wanLossPercent")
    public Float wanLossPercent;
    public GetNetworkInsightApplicationHealthByTime200ApplicationJSON withWanLossPercent(Float wanLossPercent) {
        this.wanLossPercent = wanLossPercent;
        return this;
    }
    
}
