// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AppleMappingTestFlightGroupsSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AppleMappingTestFlightGroupsRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum string

const (
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumBadRequest          AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "BadRequest"
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumConflict            AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "Conflict"
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumNotAcceptable       AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "NotAcceptable"
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumNotFound            AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "NotFound"
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumInternalServerError AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "InternalServerError"
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumUnauthorized        AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "Unauthorized"
	AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnumTooManyRequests     AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum = "TooManyRequests"
)

func (e AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum) ToPointer() *AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum {
	return &e
}

func (e *AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum: %v", v)
	}
}

// AppleMappingTestFlightGroupsDefaultApplicationJSON - Error
type AppleMappingTestFlightGroupsDefaultApplicationJSON struct {
	Code    AppleMappingTestFlightGroupsDefaultApplicationJSONCodeEnum `json:"code"`
	Message string                                                     `json:"message"`
}

// AppleMappingTestFlightGroups200ApplicationJSON - Apple Test Flight Groups Response Type
type AppleMappingTestFlightGroups200ApplicationJSON struct {
	// apple id of the group.
	AppleID *float64 `json:"appleId,omitempty"`
	// id of the group.
	ID *string `json:"id,omitempty"`
	// name of the group.
	Name *string `json:"name,omitempty"`
	// provider id of the group.
	ProviderID *float64 `json:"providerId,omitempty"`
}

type AppleMappingTestFlightGroupsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	AppleMappingTestFlightGroups200ApplicationJSONObjects []AppleMappingTestFlightGroups200ApplicationJSON
	// Error
	AppleMappingTestFlightGroupsDefaultApplicationJSONObject *AppleMappingTestFlightGroupsDefaultApplicationJSON
}
