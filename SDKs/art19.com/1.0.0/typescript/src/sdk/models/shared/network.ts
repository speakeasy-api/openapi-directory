/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceIdentifier } from "./resourceidentifier";
import { Expose, Transform, Type } from "class-transformer";

export class NetworkAttributes extends SpeakeasyBase {
  /**
   * The copyright of the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The description of the network eventually in HTML format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Determines whether `description` is in HTML format or plain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description_is_html" })
  descriptionIsHtml?: boolean;

  /**
   * The description with all HTML markup removed. If the description does not contain markup
   *
   * @remarks
   * this is identitcal to `description`.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description_plain" })
  descriptionPlain?: string;

  /**
   * Where to find this network on Facebook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "facebook_url" })
  facebookUrl?: string;

  /**
   * Where to find this network on Instagram
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instagram_url" })
  instagramUrl?: string;

  /**
   * Where to find the network on LinkedIn
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedin_url" })
  linkedinUrl?: string;

  /**
   * The name of the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A public point of contact through email
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_email" })
  publicEmail?: string;

  /**
   * If this is `true`, a public web page for this network is available under
   *
   * @remarks
   * `https://art19.com/networks/{slug}`, where `slug` is the value of the corresponding attribute.
   * This public page provides details about the network as well as descriptive links to all its
   * series' public pages. If this is `false`, no such public page is available.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public_page_enabled" })
  publicPageEnabled?: boolean;

  /**
   * The unique slug for the network also used on its public page for example.
   *
   * @remarks
   * This value is unique system-wide amongst all networks _and_ series.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;

  /**
   * Where to find the network on Tumblr
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tumblr_url" })
  tumblrUrl?: string;

  /**
   * Where to find the network on Twitter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "twitter_url" })
  twitterUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * A public website for the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "website_url" })
  websiteUrl?: string;
}

/**
 * The cover image for the network
 */
export class NetworkRelationshipsCoverImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

/**
 * A collection of images linked to the network. This currently only includes
 *
 * @remarks
 * the cover image for the network.
 *
 */
export class NetworkRelationshipsImages extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

/**
 * The parent network of the network
 */
export class NetworkRelationshipsParent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

/**
 * List of series within the network which are accessible to you
 */
export class NetworkRelationshipsSeries extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ResourceIdentifier })
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier[];
}

export class NetworkRelationships extends SpeakeasyBase {
  /**
   * The cover image for the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cover_image" })
  @Type(() => NetworkRelationshipsCoverImage)
  coverImage?: NetworkRelationshipsCoverImage;

  /**
   * A collection of images linked to the network. This currently only includes
   *
   * @remarks
   * the cover image for the network.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "images" })
  @Type(() => NetworkRelationshipsImages)
  images?: NetworkRelationshipsImages;

  /**
   * The parent network of the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => NetworkRelationshipsParent)
  parent?: NetworkRelationshipsParent;

  /**
   * List of series within the network which are accessible to you
   */
  @SpeakeasyMetadata()
  @Expose({ name: "series" })
  @Type(() => NetworkRelationshipsSeries)
  series?: NetworkRelationshipsSeries;
}

export class Network extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => NetworkAttributes)
  attributes?: NetworkAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => NetworkRelationships)
  relationships?: NetworkRelationships;

  /**
   * The type of resource. This is always `networks`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
