/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class LineItemPricing {
    /**
     * Discount off of sale price for given `quantity` and `period` &lt;pre&gt;`discount` = `sale` - `subtotal`&lt;/pre&gt;
     */
    @JsonProperty("discount")
    public Long discount;

    public LineItemPricing withDiscount(Long discount) {
        this.discount = discount;
        return this;
    }
    
    @JsonProperty("fees")
    public OrderFee fees;

    public LineItemPricing withFees(OrderFee fees) {
        this.fees = fees;
        return this;
    }
    
    /**
     * List price for given `quantity` and `period`
     */
    @JsonProperty("list")
    public Long list;

    public LineItemPricing withList(Long list) {
        this.list = list;
        return this;
    }
    
    /**
     * Actual price for the current product
     */
    @JsonProperty("sale")
    public Long sale;

    public LineItemPricing withSale(Long sale) {
        this.sale = sale;
        return this;
    }
    
    /**
     * Savings off of list price for given `quantity` and `period` &lt;pre&gt;`savings` = `list` - `subtotal`&lt;/pre&gt;
     */
    @JsonProperty("savings")
    public Long savings;

    public LineItemPricing withSavings(Long savings) {
        this.savings = savings;
        return this;
    }
    
    /**
     * Price with any discounts and without taxes or fees for given `quantity` and `period`
     */
    @JsonProperty("subtotal")
    public Long subtotal;

    public LineItemPricing withSubtotal(Long subtotal) {
        this.subtotal = subtotal;
        return this;
    }
    
    /**
     * Taxes for given `quantity` and `period`
     */
    @JsonProperty("taxes")
    public Long taxes;

    public LineItemPricing withTaxes(Long taxes) {
        this.taxes = taxes;
        return this;
    }
    
    /**
     * Pricing for a single unit of the given item
     */
    @JsonProperty("unit")
    public java.util.Map<String, Object> unit;

    public LineItemPricing withUnit(java.util.Map<String, Object> unit) {
        this.unit = unit;
        return this;
    }
    
    public LineItemPricing(@JsonProperty("discount") Long discount, @JsonProperty("fees") OrderFee fees, @JsonProperty("list") Long list, @JsonProperty("sale") Long sale, @JsonProperty("savings") Long savings, @JsonProperty("subtotal") Long subtotal, @JsonProperty("taxes") Long taxes, @JsonProperty("unit") java.util.Map<String, Object> unit) {
        this.discount = discount;
        this.fees = fees;
        this.list = list;
        this.sale = sale;
        this.savings = savings;
        this.subtotal = subtotal;
        this.taxes = taxes;
        this.unit = unit;
  }
}
