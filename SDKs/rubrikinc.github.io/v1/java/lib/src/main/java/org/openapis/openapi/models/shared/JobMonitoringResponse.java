/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * JobMonitoringResponse - Returns job information.
 */
public class JobMonitoringResponse {
    /**
     * Cursor of the last table row sent in the response. Used for setting the cursor when getting the next page of the table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("afterId")
    public String afterId;

    public JobMonitoringResponse withAfterId(String afterId) {
        this.afterId = afterId;
        return this;
    }
    
    /**
     * The requested SLA domain id (if applicable).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveSlaDomainId")
    public String effectiveSlaDomainId;

    public JobMonitoringResponse withEffectiveSlaDomainId(String effectiveSlaDomainId) {
        this.effectiveSlaDomainId = effectiveSlaDomainId;
        return this;
    }
    
    /**
     * A Boolean value that specifies whether or not the list has more elements. This value is 'true' when the list has more elements. This value is 'false' when the list has no more elements.
     */
    @JsonProperty("hasMore")
    public Boolean hasMore;

    public JobMonitoringResponse withHasMore(Boolean hasMore) {
        this.hasMore = hasMore;
        return this;
    }
    
    /**
     * A Boolean to specify if the jobs are first full backups or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isFirstFull")
    public Boolean isFirstFull;

    public JobMonitoringResponse withIsFirstFull(Boolean isFirstFull) {
        this.isFirstFull = isFirstFull;
        return this;
    }
    
    /**
     * The requested event status of the jobs (if applicable).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobEventStatus")
    public JobMonitoringStatusEnum[] jobEventStatus;

    public JobMonitoringResponse withJobEventStatus(JobMonitoringStatusEnum[] jobEventStatus) {
        this.jobEventStatus = jobEventStatus;
        return this;
    }
    
    /**
     * A list of jobs.
     */
    @JsonProperty("jobMonitoringInfoList")
    public JobMonitoringInfo[] jobMonitoringInfoList;

    public JobMonitoringResponse withJobMonitoringInfoList(JobMonitoringInfo[] jobMonitoringInfoList) {
        this.jobMonitoringInfoList = jobMonitoringInfoList;
        return this;
    }
    
    /**
     * Task type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobType")
    public JobMonitoringTaskTypeEnum jobType;

    public JobMonitoringResponse withJobType(JobMonitoringTaskTypeEnum jobType) {
        this.jobType = jobType;
        return this;
    }
    
    /**
     * The earliest possible time at which the latest update to all rows has been made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdateTime")
    public OffsetDateTime lastUpdateTime;

    public JobMonitoringResponse withLastUpdateTime(OffsetDateTime lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }
    
    /**
     * The requested node (if applicable).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeName")
    public String nodeName;

    public JobMonitoringResponse withNodeName(String nodeName) {
        this.nodeName = nodeName;
        return this;
    }
    
    /**
     * The requested object name (if applicable).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectName")
    public String objectName;

    public JobMonitoringResponse withObjectName(String objectName) {
        this.objectName = objectName;
        return this;
    }
    
    /**
     * Object types that are reported on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectType")
    public ReportableObjectTypeEnum objectType;

    public JobMonitoringResponse withObjectType(ReportableObjectTypeEnum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * A Boolean to specify whether or not to include log-related jobs.
     */
    @JsonProperty("shouldIncludeLogRelatedJob")
    public Boolean shouldIncludeLogRelatedJob;

    public JobMonitoringResponse withShouldIncludeLogRelatedJob(Boolean shouldIncludeLogRelatedJob) {
        this.shouldIncludeLogRelatedJob = shouldIncludeLogRelatedJob;
        return this;
    }
    
    public JobMonitoringResponse(@JsonProperty("hasMore") Boolean hasMore, @JsonProperty("jobMonitoringInfoList") JobMonitoringInfo[] jobMonitoringInfoList, @JsonProperty("shouldIncludeLogRelatedJob") Boolean shouldIncludeLogRelatedJob) {
        this.hasMore = hasMore;
        this.jobMonitoringInfoList = jobMonitoringInfoList;
        this.shouldIncludeLogRelatedJob = shouldIncludeLogRelatedJob;
  }
}
