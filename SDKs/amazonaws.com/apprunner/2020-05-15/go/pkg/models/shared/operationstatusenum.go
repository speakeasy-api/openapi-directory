// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OperationStatusEnum string

const (
	OperationStatusEnumPending            OperationStatusEnum = "PENDING"
	OperationStatusEnumInProgress         OperationStatusEnum = "IN_PROGRESS"
	OperationStatusEnumFailed             OperationStatusEnum = "FAILED"
	OperationStatusEnumSucceeded          OperationStatusEnum = "SUCCEEDED"
	OperationStatusEnumRollbackInProgress OperationStatusEnum = "ROLLBACK_IN_PROGRESS"
	OperationStatusEnumRollbackFailed     OperationStatusEnum = "ROLLBACK_FAILED"
	OperationStatusEnumRollbackSucceeded  OperationStatusEnum = "ROLLBACK_SUCCEEDED"
)

func (e *OperationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "ROLLBACK_IN_PROGRESS":
		fallthrough
	case "ROLLBACK_FAILED":
		fallthrough
	case "ROLLBACK_SUCCEEDED":
		*e = OperationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OperationStatusEnum: %s", s)
	}
}
