/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Comment - Successful response
 */
public class Comment {
    /**
     * The person who posted this comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actor")
    public CommentActor actor;

    public Comment withActor(CommentActor actor) {
        this.actor = actor;
        return this;
    }
    
    /**
     * ETag of this response for caching purposes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Comment withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The ID of this comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Comment withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The activity this comment replied to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inReplyTo")
    public CommentInReplyTo[] inReplyTo;

    public Comment withInReplyTo(CommentInReplyTo[] inReplyTo) {
        this.inReplyTo = inReplyTo;
        return this;
    }
    
    /**
     * Identifies this resource as a comment. Value: "plus#comment".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Comment withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The object of this comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object")
    public CommentObject object;

    public Comment withObject(CommentObject object) {
        this.object = object;
        return this;
    }
    
    /**
     * People who +1'd this comment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plusoners")
    public CommentPlusoners plusoners;

    public Comment withPlusoners(CommentPlusoners plusoners) {
        this.plusoners = plusoners;
        return this;
    }
    
    /**
     * The time at which this comment was initially published. Formatted as an RFC 3339 timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("published")
    public OffsetDateTime published;

    public Comment withPublished(OffsetDateTime published) {
        this.published = published;
        return this;
    }
    
    /**
     * Link to this comment resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Comment withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The time at which this comment was last updated. Formatted as an RFC 3339 timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public Comment withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    /**
     * This comment's verb, indicating what action was performed. Possible values are:  
     * - "post" - Publish content to the stream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verb")
    public String verb;

    public Comment withVerb(String verb) {
        this.verb = verb;
        return this;
    }
    
    public Comment(){}
}
