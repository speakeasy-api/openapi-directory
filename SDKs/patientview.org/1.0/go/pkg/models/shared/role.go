// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RoleNameEnum string

const (
	RoleNameEnumPatient           RoleNameEnum = "PATIENT"
	RoleNameEnumUnitAdmin         RoleNameEnum = "UNIT_ADMIN"
	RoleNameEnumStaffAdmin        RoleNameEnum = "STAFF_ADMIN"
	RoleNameEnumDiseaseGroupAdmin RoleNameEnum = "DISEASE_GROUP_ADMIN"
	RoleNameEnumSpecialtyAdmin    RoleNameEnum = "SPECIALTY_ADMIN"
	RoleNameEnumGlobalAdmin       RoleNameEnum = "GLOBAL_ADMIN"
	RoleNameEnumGpAdmin           RoleNameEnum = "GP_ADMIN"
	RoleNameEnumMember            RoleNameEnum = "MEMBER"
	RoleNameEnumPublic            RoleNameEnum = "PUBLIC"
	RoleNameEnumUnitAdminAPI      RoleNameEnum = "UNIT_ADMIN_API"
	RoleNameEnumImporter          RoleNameEnum = "IMPORTER"
)

func (e *RoleNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATIENT":
		fallthrough
	case "UNIT_ADMIN":
		fallthrough
	case "STAFF_ADMIN":
		fallthrough
	case "DISEASE_GROUP_ADMIN":
		fallthrough
	case "SPECIALTY_ADMIN":
		fallthrough
	case "GLOBAL_ADMIN":
		fallthrough
	case "GP_ADMIN":
		fallthrough
	case "MEMBER":
		fallthrough
	case "PUBLIC":
		fallthrough
	case "UNIT_ADMIN_API":
		fallthrough
	case "IMPORTER":
		*e = RoleNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RoleNameEnum: %s", s)
	}
}

type Role struct {
	Description *string
	ID          *int64
	Name        *RoleNameEnum
	Visible     *bool
}
