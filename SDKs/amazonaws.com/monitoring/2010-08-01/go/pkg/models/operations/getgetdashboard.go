// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETDashboardActionEnum
type GETGETDashboardActionEnum string

const (
	GETGETDashboardActionEnumGetDashboard GETGETDashboardActionEnum = "GetDashboard"
)

func (e GETGETDashboardActionEnum) ToPointer() *GETGETDashboardActionEnum {
	return &e
}

func (e *GETGETDashboardActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetDashboard":
		*e = GETGETDashboardActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETDashboardActionEnum: %v", v)
	}
}

// GETGETDashboardVersionEnum
type GETGETDashboardVersionEnum string

const (
	GETGETDashboardVersionEnumTwoThousandAndTen0801 GETGETDashboardVersionEnum = "2010-08-01"
)

func (e GETGETDashboardVersionEnum) ToPointer() *GETGETDashboardVersionEnum {
	return &e
}

func (e *GETGETDashboardVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = GETGETDashboardVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETDashboardVersionEnum: %v", v)
	}
}

type GETGETDashboardRequest struct {
	Action GETGETDashboardActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the dashboard to be described.
	DashboardName     string                     `queryParam:"style=form,explode=true,name=DashboardName"`
	Version           GETGETDashboardVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETDashboardResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
