// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayersByTeamFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayersByTeamFormatEnum string

const (
	PlayersByTeamFormatEnumXML  PlayersByTeamFormatEnum = "xml"
	PlayersByTeamFormatEnumJSON PlayersByTeamFormatEnum = "json"
)

func (e *PlayersByTeamFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = PlayersByTeamFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayersByTeamFormatEnum: %s", s)
	}
}

type PlayersByTeamRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayersByTeamFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Team ID.
	// Example:<code>516</code>.
	Teamid string `pathParam:"style=simple,explode=false,name=teamid"`
}

type PlayersByTeamResponse struct {
	ContentType string
	Players     []shared.Player
	StatusCode  int
	RawResponse *http.Response
}
