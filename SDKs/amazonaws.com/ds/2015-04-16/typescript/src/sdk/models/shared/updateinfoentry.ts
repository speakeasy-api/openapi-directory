/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UpdateStatusEnum } from "./updatestatusenum";
import { UpdateValue } from "./updatevalue";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  An entry of update information related to a requested update type.
 */
export class UpdateInfoEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "InitiatedBy" })
  initiatedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NewValue" })
  @Type(() => UpdateValue)
  newValue?: UpdateValue;

  @SpeakeasyMetadata()
  @Expose({ name: "PreviousValue" })
  @Type(() => UpdateValue)
  previousValue?: UpdateValue;

  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: UpdateStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusReason" })
  statusReason?: string;
}
