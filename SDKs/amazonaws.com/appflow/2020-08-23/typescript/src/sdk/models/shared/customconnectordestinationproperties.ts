/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorHandlingConfig } from "./errorhandlingconfig";
import { WriteOperationTypeEnum } from "./writeoperationtypeenum";
import { Expose, Type } from "class-transformer";

/**
 * The properties that are applied when the custom connector is being used as a destination.
 */
export class CustomConnectorDestinationProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "customProperties" })
  customProperties?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "entityName" })
  entityName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorHandlingConfig" })
  @Type(() => ErrorHandlingConfig)
  errorHandlingConfig?: ErrorHandlingConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "idFieldNames" })
  idFieldNames?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "writeOperationType" })
  writeOperationType?: WriteOperationTypeEnum;
}
