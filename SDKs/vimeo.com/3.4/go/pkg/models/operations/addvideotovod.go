// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AddVideoToVodSecurity struct {
	Oauth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

type AddVideoToVodRequestBodyBuyPrice struct {
	// The purchase price of this video in AUD.
	Aud *float64 `json:"AUD,omitempty"`
	// The purchase price of this video in CAD.
	Cad *float64 `json:"CAD,omitempty"`
	// The purchase price of this video in CHF.
	Chf *float64 `json:"CHF,omitempty"`
	// The purchase price of this video in DKK.
	Dkk *float64 `json:"DKK,omitempty"`
	// The purchase price of this video in EUR.
	Eur *float64 `json:"EUR,omitempty"`
	// The purchase price of this video in GBP.
	Gbp *float64 `json:"GBP,omitempty"`
	// The purchase price of this video in JPY.
	Jpy *float64 `json:"JPY,omitempty"`
	// The purchase price of this video in KRW.
	Krw *float64 `json:"KRW,omitempty"`
	// The purchase price of this video in NOK.
	Nok *float64 `json:"NOK,omitempty"`
	// The purchase price of this video in PLN.
	Pln *float64 `json:"PLN,omitempty"`
	// The purchase price of this video in SEK.
	Sek *float64 `json:"SEK,omitempty"`
	// The purchase price of this video in USD. *Required if `buy.active` is true.
	Usd *float64 `json:"USD,omitempty"`
}

type AddVideoToVodRequestBodyBuy struct {
	Price *AddVideoToVodRequestBodyBuyPrice `json:"price,omitempty"`
}

type AddVideoToVodRequestBodyRentPrice struct {
	// The rental price of this video in AUD.
	Aud *float64 `json:"AUD,omitempty"`
	// The rental price of this video in CAD.
	Cad *float64 `json:"CAD,omitempty"`
	// The rental price of this video in CHF.
	Chf *float64 `json:"CHF,omitempty"`
	// The rental price of this video in DKK.
	Dkk *float64 `json:"DKK,omitempty"`
	// The rental price of this video in EUR.
	Eur *float64 `json:"EUR,omitempty"`
	// The rental price of this video in GBP.
	Gbp *float64 `json:"GBP,omitempty"`
	// The rental price of this video in JPY.
	Jpy *float64 `json:"JPY,omitempty"`
	// The rental price of this video in KRW.
	Krw *float64 `json:"KRW,omitempty"`
	// The rental price of this video in NOK.
	Nok *float64 `json:"NOK,omitempty"`
	// The rental price of this video in PLN.
	Pln *float64 `json:"PLN,omitempty"`
	// The rental price of this video in SEK.
	Sek *float64 `json:"SEK,omitempty"`
	// The rental price of this video in USD. *Required if `rent.active` is true.
	Usd *float64 `json:"USD,omitempty"`
}

type AddVideoToVodRequestBodyRent struct {
	Price *AddVideoToVodRequestBodyRentPrice `json:"price,omitempty"`
}

// AddVideoToVodRequestBodyTypeEnum - The type of video that you are adding to the On Demand page.
type AddVideoToVodRequestBodyTypeEnum string

const (
	AddVideoToVodRequestBodyTypeEnumExtra   AddVideoToVodRequestBodyTypeEnum = "extra"
	AddVideoToVodRequestBodyTypeEnumMain    AddVideoToVodRequestBodyTypeEnum = "main"
	AddVideoToVodRequestBodyTypeEnumTrailer AddVideoToVodRequestBodyTypeEnum = "trailer"
)

func (e *AddVideoToVodRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "extra":
		fallthrough
	case "main":
		fallthrough
	case "trailer":
		*e = AddVideoToVodRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddVideoToVodRequestBodyTypeEnum: %s", s)
	}
}

type AddVideoToVodRequestBody struct {
	Buy *AddVideoToVodRequestBodyBuy `json:"buy,omitempty"`
	// The position of this video in the On Demand collection.
	Position *float64 `json:"position,omitempty"`
	// The video release year.
	ReleaseYear *float64                      `json:"release_year,omitempty"`
	Rent        *AddVideoToVodRequestBodyRent `json:"rent,omitempty"`
	// The type of video that you are adding to the On Demand page.
	Type AddVideoToVodRequestBodyTypeEnum `json:"type"`
}

type AddVideoToVodRequest struct {
	RequestBody AddVideoToVodRequestBody `request:"mediaType=application/vnd.vimeo.ondemand.video+json"`
	// The ID of the On Demand.
	OndemandID float64 `pathParam:"style=simple,explode=false,name=ondemand_id"`
	// The ID of the video.
	VideoID float64 `pathParam:"style=simple,explode=false,name=video_id"`
}

type AddVideoToVodResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// You can't add the video to this On Demand page.
	LegacyError *shared.LegacyError
	// The video was added.
	OnDemandVideo *shared.OnDemandVideo
}
