"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contact as shared_contact
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ContactSettingsPrivacyEnum(str, Enum):
    r"""Required. Privacy setting for the contacts associated with the `Registration`."""
    CONTACT_PRIVACY_UNSPECIFIED = 'CONTACT_PRIVACY_UNSPECIFIED'
    PUBLIC_CONTACT_DATA = 'PUBLIC_CONTACT_DATA'
    PRIVATE_CONTACT_DATA = 'PRIVATE_CONTACT_DATA'
    REDACTED_CONTACT_DATA = 'REDACTED_CONTACT_DATA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContactSettings:
    r"""Defines the contact information associated with a `Registration`. [ICANN](https://icann.org/) requires all domain names to have associated contact information. The `registrant_contact` is considered the domain's legal owner, and often the other contacts are identical."""
    
    admin_contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adminContact'), 'exclude': lambda f: f is None }})
    r"""Details required for a contact associated with a `Registration`."""  
    privacy: Optional[ContactSettingsPrivacyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privacy'), 'exclude': lambda f: f is None }})
    r"""Required. Privacy setting for the contacts associated with the `Registration`."""  
    registrant_contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registrantContact'), 'exclude': lambda f: f is None }})
    r"""Details required for a contact associated with a `Registration`."""  
    technical_contact: Optional[shared_contact.Contact] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('technicalContact'), 'exclude': lambda f: f is None }})
    r"""Details required for a contact associated with a `Registration`."""  
    