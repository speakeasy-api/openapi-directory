<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudVisionV1p2beta1Word - A word representation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudVisionV1p2beta1Word
{
    /**
     * A bounding polygon for the detected image annotation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p2beta1BoundingPoly $boundingBox
     */
	#[\JMS\Serializer\Annotation\SerializedName('boundingBox')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p2beta1BoundingPoly')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudVisionV1p2beta1BoundingPoly $boundingBox = null;
    
    /**
     * Confidence of the OCR results for the word. Range [0, 1].
     * 
     * @var ?float $confidence
     */
	#[\JMS\Serializer\Annotation\SerializedName('confidence')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $confidence = null;
    
    /**
     * Additional information detected on the structural component.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p2beta1TextAnnotationTextProperty $property
     */
	#[\JMS\Serializer\Annotation\SerializedName('property')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p2beta1TextAnnotationTextProperty')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudVisionV1p2beta1TextAnnotationTextProperty $property = null;
    
    /**
     * List of symbols in the word. The order of the symbols follows the natural reading order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p2beta1Symbol> $symbols
     */
	#[\JMS\Serializer\Annotation\SerializedName('symbols')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudVisionV1p2beta1Symbol>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $symbols = null;
    
	public function __construct()
	{
		$this->boundingBox = null;
		$this->confidence = null;
		$this->property = null;
		$this->symbols = null;
	}
}
