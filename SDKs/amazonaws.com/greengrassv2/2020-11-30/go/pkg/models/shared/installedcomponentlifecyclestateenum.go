// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstalledComponentLifecycleStateEnum string

const (
	InstalledComponentLifecycleStateEnumNew       InstalledComponentLifecycleStateEnum = "NEW"
	InstalledComponentLifecycleStateEnumInstalled InstalledComponentLifecycleStateEnum = "INSTALLED"
	InstalledComponentLifecycleStateEnumStarting  InstalledComponentLifecycleStateEnum = "STARTING"
	InstalledComponentLifecycleStateEnumRunning   InstalledComponentLifecycleStateEnum = "RUNNING"
	InstalledComponentLifecycleStateEnumStopping  InstalledComponentLifecycleStateEnum = "STOPPING"
	InstalledComponentLifecycleStateEnumErrored   InstalledComponentLifecycleStateEnum = "ERRORED"
	InstalledComponentLifecycleStateEnumBroken    InstalledComponentLifecycleStateEnum = "BROKEN"
	InstalledComponentLifecycleStateEnumFinished  InstalledComponentLifecycleStateEnum = "FINISHED"
)

func (e *InstalledComponentLifecycleStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NEW":
		fallthrough
	case "INSTALLED":
		fallthrough
	case "STARTING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "ERRORED":
		fallthrough
	case "BROKEN":
		fallthrough
	case "FINISHED":
		*e = InstalledComponentLifecycleStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstalledComponentLifecycleStateEnum: %s", s)
	}
}
