// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReleasesCreateReleaseUploadSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type ReleasesCreateReleaseUploadPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// ReleasesCreateReleaseUploadRequestBody - Optional parameters to create releases with user defined metadata
type ReleasesCreateReleaseUploadRequestBody struct {
	// User defined build number
	BuildNumber *string `json:"build_number,omitempty"`
	// User defined build version
	BuildVersion *string `json:"build_version,omitempty"`
}

type ReleasesCreateReleaseUploadRequest struct {
	PathParams ReleasesCreateReleaseUploadPathParams
	// Optional parameters to create releases with user defined metadata
	Request  *ReleasesCreateReleaseUploadRequestBody `request:"mediaType=application/json"`
	Security ReleasesCreateReleaseUploadSecurity
}

type ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum string

const (
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumBadRequest          ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "BadRequest"
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumConflict            ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "Conflict"
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumNotAcceptable       ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumNotFound            ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "NotFound"
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumInternalServerError ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumUnauthorized        ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesCreateReleaseUpload404ApplicationJSONCodeEnumTooManyRequests     ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum: %s", s)
	}
}

// ReleasesCreateReleaseUpload404ApplicationJSON - Error codes:
// - `not_found` - The app doesn't exist.
type ReleasesCreateReleaseUpload404ApplicationJSON struct {
	Code    ReleasesCreateReleaseUpload404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                `json:"message"`
}

type ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum string

const (
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumBadRequest          ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "BadRequest"
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumConflict            ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "Conflict"
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumNotAcceptable       ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumNotFound            ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "NotFound"
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumInternalServerError ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumUnauthorized        ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesCreateReleaseUpload400ApplicationJSONCodeEnumTooManyRequests     ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum: %s", s)
	}
}

// ReleasesCreateReleaseUpload400ApplicationJSON - The request contained invalid properties.
type ReleasesCreateReleaseUpload400ApplicationJSON struct {
	Code    ReleasesCreateReleaseUpload400ApplicationJSONCodeEnum `json:"code"`
	Message string                                                `json:"message"`
}

// ReleasesCreateReleaseUpload201ApplicationJSON - Created
type ReleasesCreateReleaseUpload201ApplicationJSON struct {
	// The ID for the newly created upload. It is going to be required later in the process.
	ID string `json:"id"`
	// The associated asset ID in the file management service associated with this uploaded.
	PackageAssetID string `json:"package_asset_id"`
	// The access token used for upload permissions.
	Token string `json:"token"`
	// The URL domain used to upload the release.
	UploadDomain string `json:"upload_domain"`
	// The access token used for upload permissions (URL encoded to use as a single query parameter).
	URLEncodedToken string `json:"url_encoded_token"`
}

type ReleasesCreateReleaseUploadResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	ReleasesCreateReleaseUpload201ApplicationJSONObject *ReleasesCreateReleaseUpload201ApplicationJSON
	// The request contained invalid properties.
	ReleasesCreateReleaseUpload400ApplicationJSONObject *ReleasesCreateReleaseUpload400ApplicationJSON
	// Error codes:
	// - `not_found` - The app doesn't exist.
	//
	ReleasesCreateReleaseUpload404ApplicationJSONObject *ReleasesCreateReleaseUpload404ApplicationJSON
}
