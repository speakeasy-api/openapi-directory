/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The status of the task instance.
 *
 * @remarks
 *
 */
export enum UpdateTaskStatusEnum {
  Queued = "Queued",
  Processing = "Processing",
  Pending = "Pending",
  Success = "Success",
  Stopped = "Stopped",
  Error = "Error",
}

/**
 * A task.
 *
 * @remarks
 *
 */
export class UpdateTask extends SpeakeasyBase {
  /**
   * The type of task.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action_type" })
  actionType?: string;

  /**
   * The type of the API used.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_type" })
  callType?: string;

  /**
   * The maximum number of this task that can run concurrently.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "concurrent_limit" })
  concurrentLimit?: number;

  /**
   * The unique ID of the task.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The name of the task.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The selected object for the task.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object?: string;

  /**
   * The ID of the selected object of the task.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object_id" })
  objectId?: string;

  /**
   * The status of the task instance.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: UpdateTaskStatusEnum;

  /**
   * The array of filter tags.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * The ID of the workflow the task belongs too.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflow_id" })
  workflowId?: number;
}
