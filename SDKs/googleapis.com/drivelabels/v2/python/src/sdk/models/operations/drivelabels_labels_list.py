"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import _xgafv_enum as shared__xgafv_enum
from ..shared import alt_enum as shared_alt_enum
from ..shared import googleappsdrivelabelsv2listlabelsresponse as shared_googleappsdrivelabelsv2listlabelsresponse
from enum import Enum
from typing import Optional

class DrivelabelsLabelsListMinimumRoleEnum(str, Enum):
    r"""Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`."""
    LABEL_ROLE_UNSPECIFIED = 'LABEL_ROLE_UNSPECIFIED'
    READER = 'READER'
    APPLIER = 'APPLIER'
    ORGANIZER = 'ORGANIZER'
    EDITOR = 'EDITOR'

class DrivelabelsLabelsListViewEnum(str, Enum):
    r"""When specified, only certain fields belonging to the indicated view are returned."""
    LABEL_VIEW_BASIC = 'LABEL_VIEW_BASIC'
    LABEL_VIEW_FULL = 'LABEL_VIEW_FULL'


@dataclasses.dataclass
class DrivelabelsLabelsListRequest:
    
    dollar_xgafv: Optional[shared__xgafv_enum.XgafvEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': '$.xgafv', 'style': 'form', 'explode': True }})
    r"""V1 error format."""  
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'access_token', 'style': 'form', 'explode': True }})
    r"""OAuth access token."""  
    alt: Optional[shared_alt_enum.AltEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'alt', 'style': 'form', 'explode': True }})
    r"""Data format for response."""  
    callback: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'callback', 'style': 'form', 'explode': True }})
    r"""JSONP"""  
    customer: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'customer', 'style': 'form', 'explode': True }})
    r"""The customer to scope this list request to. For example: \\"customers/abcd1234\\". If unset, will return all labels within the current customer."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Selector specifying which fields to include in a partial response."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'languageCode', 'style': 'form', 'explode': True }})
    r"""The BCP-47 language code to use for evaluating localized field labels. When not specified, values in the default configured language are used."""  
    minimum_role: Optional[DrivelabelsLabelsListMinimumRoleEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minimumRole', 'style': 'form', 'explode': True }})
    r"""Specifies the level of access the user must have on the returned Labels. The minimum role a user must have on a label. Defaults to `READER`."""  
    oauth_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'oauth_token', 'style': 'form', 'explode': True }})
    r"""OAuth 2.0 token for the current user."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""Maximum number of labels to return per page. Default: 50. Max: 200."""  
    page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageToken', 'style': 'form', 'explode': True }})
    r"""The token of the page to return."""  
    pretty_print: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'prettyPrint', 'style': 'form', 'explode': True }})
    r"""Returns response with indentations and line breaks."""  
    published_only: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'publishedOnly', 'style': 'form', 'explode': True }})
    r"""Whether to include only published labels in the results. * When `true`, only the current published label revisions are returned. Disabled labels are included. Returned label resource names reference the published revision (`labels/{id}/{revision_id}`). * When `false`, the current label revisions are returned, which might not be published. Returned label resource names don't reference a specific revision (`labels/{id}`)."""  
    quota_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'quotaUser', 'style': 'form', 'explode': True }})
    r"""Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."""  
    upload_protocol: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'upload_protocol', 'style': 'form', 'explode': True }})
    r"""Upload protocol for media (e.g. \\"raw\\", \\"multipart\\")."""  
    upload_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uploadType', 'style': 'form', 'explode': True }})
    r"""Legacy upload protocol for media (e.g. \\"media\\", \\"multipart\\")."""  
    use_admin_access: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'useAdminAccess', 'style': 'form', 'explode': True }})
    r"""Set to `true` in order to use the user's admin credentials. This will return all Labels within the customer."""  
    view: Optional[DrivelabelsLabelsListViewEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'view', 'style': 'form', 'explode': True }})
    r"""When specified, only certain fields belonging to the indicated view are returned."""  
    

@dataclasses.dataclass
class DrivelabelsLabelsListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    google_apps_drive_labels_v2_list_labels_response: Optional[shared_googleappsdrivelabelsv2listlabelsresponse.GoogleAppsDriveLabelsV2ListLabelsResponse] = dataclasses.field(default=None)
    r"""Successful response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    