// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// IngressFromIdentityTypeEnum - Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
type IngressFromIdentityTypeEnum string

const (
	IngressFromIdentityTypeEnumIdentityTypeUnspecified IngressFromIdentityTypeEnum = "IDENTITY_TYPE_UNSPECIFIED"
	IngressFromIdentityTypeEnumAnyIdentity             IngressFromIdentityTypeEnum = "ANY_IDENTITY"
	IngressFromIdentityTypeEnumAnyUserAccount          IngressFromIdentityTypeEnum = "ANY_USER_ACCOUNT"
	IngressFromIdentityTypeEnumAnyServiceAccount       IngressFromIdentityTypeEnum = "ANY_SERVICE_ACCOUNT"
)

func (e *IngressFromIdentityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IDENTITY_TYPE_UNSPECIFIED":
		fallthrough
	case "ANY_IDENTITY":
		fallthrough
	case "ANY_USER_ACCOUNT":
		fallthrough
	case "ANY_SERVICE_ACCOUNT":
		*e = IngressFromIdentityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IngressFromIdentityTypeEnum: %s", s)
	}
}

// IngressFrom - Defines the conditions under which an IngressPolicy matches a request. Conditions are based on information about the source of the request. The request must satisfy what is defined in `sources` AND identity related fields in order to match.
type IngressFrom struct {
	// A list of identities that are allowed access through this ingress policy. Should be in the format of email address. The email address should represent individual user or service account only.
	Identities []string `json:"identities,omitempty"`
	// Specifies the type of identities that are allowed access from outside the perimeter. If left unspecified, then members of `identities` field will be allowed access.
	IdentityType *IngressFromIdentityTypeEnum `json:"identityType,omitempty"`
	// Sources that this IngressPolicy authorizes access from.
	Sources []IngressSource `json:"sources,omitempty"`
}
