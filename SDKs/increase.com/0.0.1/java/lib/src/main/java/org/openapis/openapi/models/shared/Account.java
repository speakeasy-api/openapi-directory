/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Account - Accounts are your bank accounts with Increase. They store money, receive transfers, and send payments. They earn interest and have depository insurance.
 */
public class Account {
    /**
     * The Account's balances in the minor unit of its currency. For dollars, for example, these values will represent cents.
     */
    @JsonProperty("balances")
    public AccountBalances balances;
    public Account withBalances(AccountBalances balances) {
        this.balances = balances;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Account was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public Account withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Account currency.
     */
    @JsonProperty("currency")
    public AccountCurrencyEnum currency;
    public Account withCurrency(AccountCurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The identifier for the Entity the Account belongs to.
     */
    @JsonProperty("entity_id")
    public String entityId;
    public Account withEntityId(String entityId) {
        this.entityId = entityId;
        return this;
    }
    
    /**
     * The Account identifier.
     */
    @JsonProperty("id")
    public String id;
    public Account withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The identifier of an Entity that, while not owning the Account, is associated with its activity.
     */
    @JsonProperty("informational_entity_id")
    public String informationalEntityId;
    public Account withInformationalEntityId(String informationalEntityId) {
        this.informationalEntityId = informationalEntityId;
        return this;
    }
    
    /**
     * The interest accrued but not yet paid, expressed as a string containing a floating-point value.
     */
    @JsonProperty("interest_accrued")
    public String interestAccrued;
    public Account withInterestAccrued(String interestAccrued) {
        this.interestAccrued = interestAccrued;
        return this;
    }
    
    /**
     * The latest [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which interest was accrued.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("interest_accrued_at")
    public LocalDate interestAccruedAt;
    public Account withInterestAccruedAt(LocalDate interestAccruedAt) {
        this.interestAccruedAt = interestAccruedAt;
        return this;
    }
    
    /**
     * The name you choose for the Account.
     */
    @JsonProperty("name")
    public String name;
    public Account withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The status of the Account.
     */
    @JsonProperty("status")
    public AccountStatusEnum status;
    public Account withStatus(AccountStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * A constant representing the object's type. For this resource it will always be `account`.
     */
    @JsonProperty("type")
    public AccountTypeEnum type;
    public Account withType(AccountTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
