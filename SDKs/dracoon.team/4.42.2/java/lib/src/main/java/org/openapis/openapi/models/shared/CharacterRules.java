/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CharacterRules - Password character rules
 */
public class CharacterRules {
    /**
     * Characters which a password must contain:
     * 
     * * `alpha` - at least one alphabetical character (`uppercase` OR `lowercase`)
     * 
     * * `uppercase` - at least one uppercase character
     * 
     * * `lowercase` - at least one lowercase character
     * 
     * * `numeric` - at least one numeric character
     * 
     * * `special` - at least one special character (letters and digits excluded)
     * 
     * * `all` - combination of `uppercase`, `lowercase`, `numeric` and `special` (available only in request models)
     * 
     * * `none` - none of the above
     */
    @JsonProperty("mustContainCharacters")
    public CharacterRulesMustContainCharactersEnum mustContainCharacters;
    public CharacterRules withMustContainCharacters(CharacterRulesMustContainCharactersEnum mustContainCharacters) {
        this.mustContainCharacters = mustContainCharacters;
        return this;
    }
    
    /**
     * Number of characteristics to enforce
     * 
     * e.g. from `["uppercase", "lowercase", "numeric", "special"]`
     * 
     * all 4 character sets can be enforced; but also only 2 of them
     */
    @JsonProperty("numberOfCharacteristicsToEnforce")
    public Integer numberOfCharacteristicsToEnforce;
    public CharacterRules withNumberOfCharacteristicsToEnforce(Integer numberOfCharacteristicsToEnforce) {
        this.numberOfCharacteristicsToEnforce = numberOfCharacteristicsToEnforce;
        return this;
    }
    
}
