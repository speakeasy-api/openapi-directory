// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExecutionStatusEnum string

const (
	ExecutionStatusEnumUnavailable       ExecutionStatusEnum = "UNAVAILABLE"
	ExecutionStatusEnumAvailable         ExecutionStatusEnum = "AVAILABLE"
	ExecutionStatusEnumExecuteInProgress ExecutionStatusEnum = "EXECUTE_IN_PROGRESS"
	ExecutionStatusEnumExecuteComplete   ExecutionStatusEnum = "EXECUTE_COMPLETE"
	ExecutionStatusEnumExecuteFailed     ExecutionStatusEnum = "EXECUTE_FAILED"
	ExecutionStatusEnumObsolete          ExecutionStatusEnum = "OBSOLETE"
)

func (e *ExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNAVAILABLE":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "EXECUTE_IN_PROGRESS":
		fallthrough
	case "EXECUTE_COMPLETE":
		fallthrough
	case "EXECUTE_FAILED":
		fallthrough
	case "OBSOLETE":
		*e = ExecutionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecutionStatusEnum: %s", s)
	}
}
