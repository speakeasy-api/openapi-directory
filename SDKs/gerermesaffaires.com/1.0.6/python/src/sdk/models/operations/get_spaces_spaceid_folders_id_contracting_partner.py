"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDContractingPartnerRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder (contract)"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    
class GetSpacesSpaceIDFoldersIDContractingPartner200ApplicationJSONClassEnum(str, Enum):
    COMPANY_ENTITY = 'CompanyEntity'
    PERSON = 'Person'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDContractingPartner200ApplicationJSON:
    
    class_: Optional[GetSpacesSpaceIDFoldersIDContractingPartner200ApplicationJSONClassEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Class'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Role'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDContractingPartnerResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_contracting_partner_200_application_json_objects: Optional[list[GetSpacesSpaceIDFoldersIDContractingPartner200ApplicationJSON]] = dataclasses.field(default=None)
    r"""A list of contracting partners"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    