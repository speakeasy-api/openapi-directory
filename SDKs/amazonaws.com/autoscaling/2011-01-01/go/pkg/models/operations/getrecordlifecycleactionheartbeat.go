// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRecordLifecycleActionHeartbeatActionEnum
type GETRecordLifecycleActionHeartbeatActionEnum string

const (
	GETRecordLifecycleActionHeartbeatActionEnumRecordLifecycleActionHeartbeat GETRecordLifecycleActionHeartbeatActionEnum = "RecordLifecycleActionHeartbeat"
)

func (e GETRecordLifecycleActionHeartbeatActionEnum) ToPointer() *GETRecordLifecycleActionHeartbeatActionEnum {
	return &e
}

func (e *GETRecordLifecycleActionHeartbeatActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RecordLifecycleActionHeartbeat":
		*e = GETRecordLifecycleActionHeartbeatActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRecordLifecycleActionHeartbeatActionEnum: %v", v)
	}
}

// GETRecordLifecycleActionHeartbeatVersionEnum
type GETRecordLifecycleActionHeartbeatVersionEnum string

const (
	GETRecordLifecycleActionHeartbeatVersionEnumTwoThousandAndEleven0101 GETRecordLifecycleActionHeartbeatVersionEnum = "2011-01-01"
)

func (e GETRecordLifecycleActionHeartbeatVersionEnum) ToPointer() *GETRecordLifecycleActionHeartbeatVersionEnum {
	return &e
}

func (e *GETRecordLifecycleActionHeartbeatVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = GETRecordLifecycleActionHeartbeatVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRecordLifecycleActionHeartbeatVersionEnum: %v", v)
	}
}

type GETRecordLifecycleActionHeartbeatRequest struct {
	Action GETRecordLifecycleActionHeartbeatActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The ID of the instance.
	InstanceID *string `queryParam:"style=form,explode=true,name=InstanceId"`
	// A token that uniquely identifies a specific lifecycle action associated with an instance. Amazon EC2 Auto Scaling sends this token to the notification target that you specified when you created the lifecycle hook.
	LifecycleActionToken *string `queryParam:"style=form,explode=true,name=LifecycleActionToken"`
	// The name of the lifecycle hook.
	LifecycleHookName string                                       `queryParam:"style=form,explode=true,name=LifecycleHookName"`
	Version           GETRecordLifecycleActionHeartbeatVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRecordLifecycleActionHeartbeatResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
