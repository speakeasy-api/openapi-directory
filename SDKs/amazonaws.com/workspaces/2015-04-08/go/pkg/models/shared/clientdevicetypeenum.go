// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ClientDeviceTypeEnum string

const (
	ClientDeviceTypeEnumDeviceTypeWindows ClientDeviceTypeEnum = "DeviceTypeWindows"
	ClientDeviceTypeEnumDeviceTypeOsx     ClientDeviceTypeEnum = "DeviceTypeOsx"
	ClientDeviceTypeEnumDeviceTypeAndroid ClientDeviceTypeEnum = "DeviceTypeAndroid"
	ClientDeviceTypeEnumDeviceTypeIos     ClientDeviceTypeEnum = "DeviceTypeIos"
	ClientDeviceTypeEnumDeviceTypeLinux   ClientDeviceTypeEnum = "DeviceTypeLinux"
	ClientDeviceTypeEnumDeviceTypeWeb     ClientDeviceTypeEnum = "DeviceTypeWeb"
)

func (e ClientDeviceTypeEnum) ToPointer() *ClientDeviceTypeEnum {
	return &e
}

func (e *ClientDeviceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceTypeWindows":
		fallthrough
	case "DeviceTypeOsx":
		fallthrough
	case "DeviceTypeAndroid":
		fallthrough
	case "DeviceTypeIos":
		fallthrough
	case "DeviceTypeLinux":
		fallthrough
	case "DeviceTypeWeb":
		*e = ClientDeviceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientDeviceTypeEnum: %v", v)
	}
}
