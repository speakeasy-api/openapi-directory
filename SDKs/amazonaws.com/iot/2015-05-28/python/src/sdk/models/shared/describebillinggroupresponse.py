"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import billinggroupmetadata as shared_billinggroupmetadata
from ..shared import billinggroupproperties as shared_billinggroupproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeBillingGroupResponse:
    r"""Success"""
    
    billing_group_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingGroupArn'), 'exclude': lambda f: f is None }})  
    billing_group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingGroupId'), 'exclude': lambda f: f is None }})  
    billing_group_metadata: Optional[shared_billinggroupmetadata.BillingGroupMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingGroupMetadata'), 'exclude': lambda f: f is None }})  
    billing_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingGroupName'), 'exclude': lambda f: f is None }})  
    billing_group_properties: Optional[shared_billinggroupproperties.BillingGroupProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billingGroupProperties'), 'exclude': lambda f: f is None }})  
    version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})  
    