/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * name of value for sort
 */
export enum GetSpacesSpaceIdFoldersIdExpenseReportsSortNameEnum {
  ExpenseDate = "ExpenseDate",
  InclVAT = "InclVAT",
  Title = "Title",
}

/**
 * order of sort (if absent default is asc)
 */
export enum GetSpacesSpaceIdFoldersIdExpenseReportsSortOrderEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * If present returns also the data extend
 */
export enum GetSpacesSpaceIdFoldersIdExpenseReportsWithExtendEnum {
  True = "true",
  False = "false",
}

export class GetSpacesSpaceIdFoldersIdExpenseReportsRequest extends SpeakeasyBase {
  /**
   * date range of the documents
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Date" })
  date?: string;

  /**
   * range of ExpenseDate (valid available)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ExpenseDate",
  })
  expenseDate?: any;

  /**
   * date range of attachment
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FolderDate",
  })
  folderDate?: string;

  /**
   * range of processing date (boolean available)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ProcessingDate",
  })
  processingDate?: string;

  /**
   * index range of the results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Range" })
  range?: string;

  /**
   * name of value for sort
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortName",
  })
  sortName?: GetSpacesSpaceIdFoldersIdExpenseReportsSortNameEnum;

  /**
   * order of sort (if absent default is asc)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortOrder",
  })
  sortOrder?: GetSpacesSpaceIdFoldersIdExpenseReportsSortOrderEnum;

  /**
   * If present returns also the data extend
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=WithExtend",
  })
  withExtend?: GetSpacesSpaceIdFoldersIdExpenseReportsWithExtendEnum;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class GetSpacesSpaceIdFoldersIdExpenseReportsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of expense reports of the folder (if the folder is social the PersonId is also returned)
   */
  @SpeakeasyMetadata({ elemType: shared.ExpenseReport })
  getSpacesSpaceIdFoldersIdExpenseReports200ApplicationJSONAllOfs?: shared.ExpenseReport[];
}
