// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppInvitationsRejectSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type AppInvitationsRejectPathParams struct {
	// The app invitation token that was sent to the user
	InvitationToken string `pathParam:"style=simple,explode=false,name=invitation_token"`
}

type AppInvitationsRejectRequest struct {
	PathParams AppInvitationsRejectPathParams
	// allow empty body for custom http-client lib
	Request  map[string]interface{} `request:"mediaType=application/json"`
	Security AppInvitationsRejectSecurity
}

type AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum string

const (
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumBadRequest          AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumConflict            AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumNotAcceptable       AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumNotFound            AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumInternalServerError AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumUnauthorized        AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AppInvitationsRejectDefaultApplicationJSONErrorCodeEnumTooManyRequests     AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppInvitationsRejectDefaultApplicationJSONError struct {
	Code    AppInvitationsRejectDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                  `json:"message"`
}

// AppInvitationsRejectDefaultApplicationJSON - Error
type AppInvitationsRejectDefaultApplicationJSON struct {
	Error AppInvitationsRejectDefaultApplicationJSONError `json:"error"`
}

type AppInvitationsRejectResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	AppInvitationsRejectDefaultApplicationJSONObject *AppInvitationsRejectDefaultApplicationJSON
}
