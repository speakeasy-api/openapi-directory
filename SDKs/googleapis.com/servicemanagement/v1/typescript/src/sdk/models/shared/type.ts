/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Field } from "./field";
import { Option } from "./option";
import { SourceContext } from "./sourcecontext";
import { Expose, Type } from "class-transformer";

/**
 * The source syntax.
 */
export enum TypeSyntaxEnum {
  SyntaxProto2 = "SYNTAX_PROTO2",
  SyntaxProto3 = "SYNTAX_PROTO3",
  SyntaxEditions = "SYNTAX_EDITIONS",
}

/**
 * A protocol buffer message type.
 */
export class TypeT extends SpeakeasyBase {
  /**
   * The source edition string, only valid when syntax is SYNTAX_EDITIONS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "edition" })
  edition?: string;

  /**
   * The list of fields.
   */
  @SpeakeasyMetadata({ elemType: Field })
  @Expose({ name: "fields" })
  @Type(() => Field)
  fields?: Field[];

  /**
   * The fully qualified message name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The list of types appearing in `oneof` definitions in this type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oneofs" })
  oneofs?: string[];

  /**
   * The protocol buffer options.
   */
  @SpeakeasyMetadata({ elemType: Option })
  @Expose({ name: "options" })
  @Type(() => Option)
  options?: Option[];

  /**
   * `SourceContext` represents information about the source of a protobuf element, like the file in which it is defined.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceContext" })
  @Type(() => SourceContext)
  sourceContext?: SourceContext;

  /**
   * The source syntax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "syntax" })
  syntax?: TypeSyntaxEnum;
}
