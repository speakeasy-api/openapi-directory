// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RemovePermissionActionGroupEnum -  Specifies an action group that contains the permissions to remove from a profiling group's resource-based policy. One action group is supported, <code>agentPermissions</code>, which grants <code>ConfigureAgent</code> and <code>PostAgentProfile</code> permissions.
type RemovePermissionActionGroupEnum string

const (
	RemovePermissionActionGroupEnumAgentPermissions RemovePermissionActionGroupEnum = "agentPermissions"
)

func (e *RemovePermissionActionGroupEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "agentPermissions":
		*e = RemovePermissionActionGroupEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RemovePermissionActionGroupEnum: %s", s)
	}
}

type RemovePermissionRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	//  Specifies an action group that contains the permissions to remove from a profiling group's resource-based policy. One action group is supported, <code>agentPermissions</code>, which grants <code>ConfigureAgent</code> and <code>PostAgentProfile</code> permissions.
	ActionGroup RemovePermissionActionGroupEnum `pathParam:"style=simple,explode=false,name=actionGroup"`
	// The name of the profiling group.
	ProfilingGroupName string `pathParam:"style=simple,explode=false,name=profilingGroupName"`
	//  A universally unique identifier (UUID) for the revision of the resource-based policy from which you want to remove permissions.
	RevisionID string `queryParam:"style=form,explode=true,name=revisionId"`
}

type RemovePermissionResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// Success
	RemovePermissionResponse *shared.RemovePermissionResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
