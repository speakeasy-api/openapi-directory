/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class AccessTokenValidity {
    /**
     * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiry")
    public OffsetDateTime expiry;

    public AccessTokenValidity withExpiry(OffsetDateTime expiry) {
        this.expiry = expiry;
        return this;
    }
    
    /**
     * number of times, the token can be used
     */
    @JsonProperty("limit")
    public Long limit;

    public AccessTokenValidity withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * what is the purpose of user auth
     */
    @JsonProperty("purpose")
    public PatientAuthPurposeEnum purpose;

    public AccessTokenValidity withPurpose(PatientAuthPurposeEnum purpose) {
        this.purpose = purpose;
        return this;
    }
    
    /**
     * identification of requester
     */
    @JsonProperty("requester")
    public PatientAuthRequester requester;

    public AccessTokenValidity withRequester(PatientAuthRequester requester) {
        this.requester = requester;
        return this;
    }
    
    public AccessTokenValidity(@JsonProperty("expiry") OffsetDateTime expiry, @JsonProperty("limit") Long limit, @JsonProperty("purpose") PatientAuthPurposeEnum purpose, @JsonProperty("requester") PatientAuthRequester requester) {
        this.expiry = expiry;
        this.limit = limit;
        this.purpose = purpose;
        this.requester = requester;
  }
}
