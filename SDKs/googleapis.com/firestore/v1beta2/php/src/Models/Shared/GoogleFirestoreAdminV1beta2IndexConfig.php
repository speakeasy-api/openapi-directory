<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleFirestoreAdminV1beta2IndexConfig - The index configuration for this field.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleFirestoreAdminV1beta2IndexConfig
{
    /**
     * Output only. Specifies the resource name of the `Field` from which this field's index configuration is set (when `uses_ancestor_config` is true), or from which it *would* be set if this field had no index configuration (when `uses_ancestor_config` is false).
     * 
     * @var ?string $ancestorField
     */
	#[\JMS\Serializer\Annotation\SerializedName('ancestorField')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ancestorField = null;
    
    /**
     * The indexes supported for this field.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2Index> $indexes
     */
	#[\JMS\Serializer\Annotation\SerializedName('indexes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleFirestoreAdminV1beta2Index>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $indexes = null;
    
    /**
     * Output only When true, the `Field`'s index configuration is in the process of being reverted. Once complete, the index config will transition to the same state as the field specified by `ancestor_field`, at which point `uses_ancestor_config` will be `true` and `reverting` will be `false`.
     * 
     * @var ?bool $reverting
     */
	#[\JMS\Serializer\Annotation\SerializedName('reverting')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reverting = null;
    
    /**
     * Output only. When true, the `Field`'s index configuration is set from the configuration specified by the `ancestor_field`. When false, the `Field`'s index configuration is defined explicitly.
     * 
     * @var ?bool $usesAncestorConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('usesAncestorConfig')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $usesAncestorConfig = null;
    
	public function __construct()
	{
		$this->ancestorField = null;
		$this->indexes = null;
		$this->reverting = null;
		$this->usesAncestorConfig = null;
	}
}
