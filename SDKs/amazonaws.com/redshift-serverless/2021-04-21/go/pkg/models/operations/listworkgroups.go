// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListWorkgroupsXAmzTargetEnum
type ListWorkgroupsXAmzTargetEnum string

const (
	ListWorkgroupsXAmzTargetEnumRedshiftServerlessListWorkgroups ListWorkgroupsXAmzTargetEnum = "RedshiftServerless.ListWorkgroups"
)

func (e ListWorkgroupsXAmzTargetEnum) ToPointer() *ListWorkgroupsXAmzTargetEnum {
	return &e
}

func (e *ListWorkgroupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RedshiftServerless.ListWorkgroups":
		*e = ListWorkgroupsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListWorkgroupsXAmzTargetEnum: %v", v)
	}
}

type ListWorkgroupsRequest struct {
	ListWorkgroupsRequest shared.ListWorkgroupsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            ListWorkgroupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListWorkgroupsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListWorkgroupsResponse *shared.ListWorkgroupsResponse
	StatusCode             int
	RawResponse            *http.Response
	// ValidationException
	ValidationException interface{}
}
