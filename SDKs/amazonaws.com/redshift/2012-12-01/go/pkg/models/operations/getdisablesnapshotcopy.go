// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisableSnapshotCopyActionEnum
type GETDisableSnapshotCopyActionEnum string

const (
	GETDisableSnapshotCopyActionEnumDisableSnapshotCopy GETDisableSnapshotCopyActionEnum = "DisableSnapshotCopy"
)

func (e GETDisableSnapshotCopyActionEnum) ToPointer() *GETDisableSnapshotCopyActionEnum {
	return &e
}

func (e *GETDisableSnapshotCopyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DisableSnapshotCopy":
		*e = GETDisableSnapshotCopyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableSnapshotCopyActionEnum: %v", v)
	}
}

// GETDisableSnapshotCopyVersionEnum
type GETDisableSnapshotCopyVersionEnum string

const (
	GETDisableSnapshotCopyVersionEnumTwoThousandAndTwelve1201 GETDisableSnapshotCopyVersionEnum = "2012-12-01"
)

func (e GETDisableSnapshotCopyVersionEnum) ToPointer() *GETDisableSnapshotCopyVersionEnum {
	return &e
}

func (e *GETDisableSnapshotCopyVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETDisableSnapshotCopyVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableSnapshotCopyVersionEnum: %v", v)
	}
}

type GETDisableSnapshotCopyRequest struct {
	Action GETDisableSnapshotCopyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The unique identifier of the source cluster that you want to disable copying of snapshots to a destination region.</p> <p>Constraints: Must be the valid name of an existing cluster that has cross-region snapshot copy enabled.</p>
	ClusterIdentifier string                            `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	Version           GETDisableSnapshotCopyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisableSnapshotCopyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
