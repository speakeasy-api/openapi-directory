/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CustomerPersonDTO - CustomerPerson
 */
public class CustomerPersonDTO {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public CustomerPersonDTO withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact")
    public PersonContactDTO contact;
    public CustomerPersonDTO withContact(PersonContactDTO contact) {
        this.contact = contact;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public CustomFieldDTO[] customFields;
    public CustomerPersonDTO withCustomFields(CustomFieldDTO[] customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public Long customerId;
    public CustomerPersonDTO withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("firstProjectDate")
    public OffsetDateTime firstProjectDate;
    public CustomerPersonDTO withFirstProjectDate(OffsetDateTime firstProjectDate) {
        this.firstProjectDate = firstProjectDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("firstQuoteDate")
    public OffsetDateTime firstQuoteDate;
    public CustomerPersonDTO withFirstQuoteDate(OffsetDateTime firstQuoteDate) {
        this.firstQuoteDate = firstQuoteDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public CustomerPersonDTOGenderEnum gender;
    public CustomerPersonDTO withGender(CustomerPersonDTOGenderEnum gender) {
        this.gender = gender;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public CustomerPersonDTO withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastName")
    public String lastName;
    public CustomerPersonDTO withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastProjectDate")
    public OffsetDateTime lastProjectDate;
    public CustomerPersonDTO withLastProjectDate(OffsetDateTime lastProjectDate) {
        this.lastProjectDate = lastProjectDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastQuoteDate")
    public OffsetDateTime lastQuoteDate;
    public CustomerPersonDTO withLastQuoteDate(OffsetDateTime lastQuoteDate) {
        this.lastQuoteDate = lastQuoteDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("motherTonguesIds")
    public Long[] motherTonguesIds;
    public CustomerPersonDTO withMotherTonguesIds(Long[] motherTonguesIds) {
        this.motherTonguesIds = motherTonguesIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CustomerPersonDTO withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfProjects")
    public Integer numberOfProjects;
    public CustomerPersonDTO withNumberOfProjects(Integer numberOfProjects) {
        this.numberOfProjects = numberOfProjects;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfQuotes")
    public Integer numberOfQuotes;
    public CustomerPersonDTO withNumberOfQuotes(Integer numberOfQuotes) {
        this.numberOfQuotes = numberOfQuotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("positionId")
    public Long positionId;
    public CustomerPersonDTO withPositionId(Long positionId) {
        this.positionId = positionId;
        return this;
    }
    
}
