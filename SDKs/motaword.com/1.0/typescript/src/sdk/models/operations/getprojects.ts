/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetProjectsOrderByEnum {
  Id = "id",
  Status = "status",
  Delivery = "delivery",
  Price = "price",
}

export enum GetProjectsWithEnum {
  Client = "client",
  Vendor = "vendor",
}

export class GetProjectsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: GetProjectsOrderByEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_type",
  })
  orderType?: shared.ListOrderTypeEnum;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * Filter projects by status. Accepts multiple statuses. Possible values 'pending', 'started', 'completed'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status[]",
  })
  status?: shared.ProjectStatusEnum[];

  /**
   * Include detailed information. Possible values 'client', 'vendor'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with[]",
  })
  with?: GetProjectsWithEnum[];

  /**
   * deprecated. use `status[]` param.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with_completed",
  })
  withCompleted?: boolean;

  /**
   * deprecated. use `status[]` param.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with_pending",
  })
  withPending?: boolean;

  /**
   * deprecated. use `status[]` param.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with_started",
  })
  withStarted?: boolean;
}

export class GetProjectsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Project list
   */
  @SpeakeasyMetadata()
  projectList?: shared.ProjectList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
