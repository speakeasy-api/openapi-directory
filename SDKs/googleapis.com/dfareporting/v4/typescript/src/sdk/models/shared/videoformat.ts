/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Size } from "./size";
import { Expose, Type } from "class-transformer";

/**
 * File type of the video format.
 */
export enum VideoFormatFileTypeEnum {
  Flv = "FLV",
  Threegpp = "THREEGPP",
  Mp4 = "MP4",
  Webm = "WEBM",
  M3U8 = "M3U8",
}

/**
 * Contains information about supported video formats.
 */
export class VideoFormat extends SpeakeasyBase {
  /**
   * File type of the video format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileType" })
  fileType?: VideoFormatFileTypeEnum;

  /**
   * ID of the video format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoFormat".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Represents the dimensions of ads, placements, creatives, or creative assets.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolution" })
  @Type(() => Size)
  resolution?: Size;

  /**
   * The target bit rate of this video format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetBitRate" })
  targetBitRate?: number;
}
