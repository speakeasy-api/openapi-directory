/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AddAccountAccount - The details of the new account
 */
public class AddAccountAccount {
    /**
     * the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Long balance;

    public AddAccountAccount withBalance(Long balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * the BIC of the account (provided if currency is EUR).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cbic")
    public String cbic;

    public AddAccountAccount withCbic(String cbic) {
        this.cbic = cbic;
        return this;
    }
    
    /**
     * the Account Number of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ccan")
    public String ccan;

    public AddAccountAccount withCcan(String ccan) {
        this.ccan = ccan;
        return this;
    }
    
    /**
     * the IBAN of the account (provided if currency is EUR).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ciban")
    public String ciban;

    public AddAccountAccount withCiban(String ciban) {
        this.ciban = ciban;
        return this;
    }
    
    /**
     * the Sort Code of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cnsc")
    public String cnsc;

    public AddAccountAccount withCnsc(String cnsc) {
        this.cnsc = cnsc;
        return this;
    }
    
    /**
     * Internal Use
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colour")
    public String colour;

    public AddAccountAccount withColour(String colour) {
        this.colour = colour;
        return this;
    }
    
    /**
     * The currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public AddAccountAccountCurrency currency;

    public AddAccountAccount withCurrency(AddAccountAccountCurrency currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultAccount")
    public Boolean defaultAccount;

    public AddAccountAccount withDefaultAccount(Boolean defaultAccount) {
        this.defaultAccount = defaultAccount;
        return this;
    }
    
    /**
     * Whether or not direct debits can be set up on this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directDebitsAllowed")
    public Boolean directDebitsAllowed;

    public AddAccountAccount withDirectDebitsAllowed(Boolean directDebitsAllowed) {
        this.directDebitsAllowed = directDebitsAllowed;
        return this;
    }
    
    /**
     * Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fopOnly")
    public Boolean fopOnly;

    public AddAccountAccount withFopOnly(Boolean fopOnly) {
        this.fopOnly = fopOnly;
        return this;
    }
    
    /**
     * identifier for the fire.com account (assigned by fire.com)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ican")
    public Long ican;

    public AddAccountAccount withIcan(Long ican) {
        this.ican = ican;
        return this;
    }
    
    /**
     * the name the user gives to the account to help them identify it.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AddAccountAccount withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public AddAccountAccountStatusEnum status;

    public AddAccountAccount withStatus(AddAccountAccountStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public AddAccountAccount(){}
}
