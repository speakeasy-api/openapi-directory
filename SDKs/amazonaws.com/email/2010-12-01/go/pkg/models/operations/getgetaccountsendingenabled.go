// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETAccountSendingEnabledActionEnum
type GETGETAccountSendingEnabledActionEnum string

const (
	GETGETAccountSendingEnabledActionEnumGetAccountSendingEnabled GETGETAccountSendingEnabledActionEnum = "GetAccountSendingEnabled"
)

func (e *GETGETAccountSendingEnabledActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetAccountSendingEnabled":
		*e = GETGETAccountSendingEnabledActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAccountSendingEnabledActionEnum: %s", s)
	}
}

// GETGETAccountSendingEnabledVersionEnum
type GETGETAccountSendingEnabledVersionEnum string

const (
	GETGETAccountSendingEnabledVersionEnumTwoThousandAndTen1201 GETGETAccountSendingEnabledVersionEnum = "2010-12-01"
)

func (e *GETGETAccountSendingEnabledVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETGETAccountSendingEnabledVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAccountSendingEnabledVersionEnum: %s", s)
	}
}

type GETGETAccountSendingEnabledQueryParams struct {
	Action  GETGETAccountSendingEnabledActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version GETGETAccountSendingEnabledVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETGETAccountSendingEnabledHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETAccountSendingEnabledRequest struct {
	QueryParams GETGETAccountSendingEnabledQueryParams
	Headers     GETGETAccountSendingEnabledHeaders
}

type GETGETAccountSendingEnabledResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
