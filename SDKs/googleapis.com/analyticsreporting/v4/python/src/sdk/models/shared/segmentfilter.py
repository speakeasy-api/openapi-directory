"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sequencesegment as shared_sequencesegment
from ..shared import simplesegment as shared_simplesegment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SegmentFilter:
    r"""SegmentFilter defines the segment to be either a simple or a sequence segment. A simple segment condition contains dimension and metric conditions to select the sessions or users. A sequence segment condition can be used to select users or sessions based on sequential conditions."""
    
    not_: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('not'), 'exclude': lambda f: f is None }})
    r"""If true, match the complement of simple or sequence segment. For example, to match all visits not from \\"New York\\", we can define the segment as follows: \\"sessionSegment\\": { \\"segmentFilters\\": [{ \\"simpleSegment\\" :{ \\"orFiltersForSegment\\": [{ \\"segmentFilterClauses\\":[{ \\"dimensionFilter\\": { \\"dimensionName\\": \\"ga:city\\", \\"expressions\\": [\\"New York\\"] } }] }] }, \\"not\\": \\"True\\" }] },"""  
    sequence_segment: Optional[shared_sequencesegment.SequenceSegment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sequenceSegment'), 'exclude': lambda f: f is None }})
    r"""Sequence conditions consist of one or more steps, where each step is defined by one or more dimension/metric conditions. Multiple steps can be combined with special sequence operators."""  
    simple_segment: Optional[shared_simplesegment.SimpleSegment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('simpleSegment'), 'exclude': lambda f: f is None }})
    r"""A Simple segment conditions consist of one or more dimension/metric conditions that can be combined."""  
    