<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class SearchPrincipalsV1Request
{
    /**
     * ID of the authentication domain that contains the principal.
     * 
     * @var ?string $authDomainId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=auth_domain_id')]
    public ?string $authDomainId = null;
    
    /**
     * A Boolean that specifies whether the principal has any roles assigned or is a local user. When a principal is a local user, or when the principal has any roles assigned, this value is 'true'.
     * 
     * 
     * 
     * @var ?bool $isAssignedRolesOrIsLocal
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_assigned_roles_or_is_local')]
    public ?bool $isAssignedRolesOrIsLocal = null;
    
    /**
     * Indicates if the principal has TOTP authentication enabled. Returns the users with TOTP authentication enabled when the value is true.
     * 
     * 
     * 
     * @var ?bool $isTotpEnabled
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_totp_enabled')]
    public ?bool $isTotpEnabled = null;
    
    /**
     * Maximum number of results to return.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * The name of the principal.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * Starting offset of the results to return.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * ID of the organization of which the principal is a member.
     * 
     * @var ?string $organizationId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=organization_id')]
    public ?string $organizationId = null;
    
    /**
     * The type of principal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchPrincipalsV1PrincipalTypeEnum $principalType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=principal_type')]
    public ?SearchPrincipalsV1PrincipalTypeEnum $principalType = null;
    
    /**
     * ID of a role assigned to the principal.
     * 
     * @var ?string $roleId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=role_id')]
    public ?string $roleId = null;
    
    /**
     * Attribute by which to sort. Default is "name".
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchPrincipalsV1SortByEnum $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?SearchPrincipalsV1SortByEnum $sortBy = null;
    
    /**
     * Sort order. Default order is ascending.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\SearchPrincipalsV1SortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_order')]
    public ?SearchPrincipalsV1SortOrderEnum $sortOrder = null;
    
	public function __construct()
	{
		$this->authDomainId = null;
		$this->isAssignedRolesOrIsLocal = null;
		$this->isTotpEnabled = null;
		$this->limit = null;
		$this->name = null;
		$this->offset = null;
		$this->organizationId = null;
		$this->principalType = null;
		$this->roleId = null;
		$this->sortBy = null;
		$this->sortOrder = null;
	}
}
