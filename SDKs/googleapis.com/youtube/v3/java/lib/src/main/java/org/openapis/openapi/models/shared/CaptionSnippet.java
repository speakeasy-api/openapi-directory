/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CaptionSnippet - Basic details about a caption track, such as its language and name.
 */
public class CaptionSnippet {
    /**
     * The type of audio track associated with the caption track.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioTrackType")
    public CaptionSnippetAudioTrackTypeEnum audioTrackType;
    public CaptionSnippet withAudioTrackType(CaptionSnippetAudioTrackTypeEnum audioTrackType) {
        this.audioTrackType = audioTrackType;
        return this;
    }
    
    /**
     * The reason that YouTube failed to process the caption track. This property is only present if the state property's value is failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureReason")
    public CaptionSnippetFailureReasonEnum failureReason;
    public CaptionSnippet withFailureReason(CaptionSnippetFailureReasonEnum failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    /**
     * Indicates whether YouTube synchronized the caption track to the audio track in the video. The value will be true if a sync was explicitly requested when the caption track was uploaded. For example, when calling the captions.insert or captions.update methods, you can set the sync parameter to true to instruct YouTube to sync the uploaded track to the video. If the value is false, YouTube uses the time codes in the uploaded caption track to determine when to display captions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAutoSynced")
    public Boolean isAutoSynced;
    public CaptionSnippet withIsAutoSynced(Boolean isAutoSynced) {
        this.isAutoSynced = isAutoSynced;
        return this;
    }
    
    /**
     * Indicates whether the track contains closed captions for the deaf and hard of hearing. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCC")
    public Boolean isCC;
    public CaptionSnippet withIsCC(Boolean isCC) {
        this.isCC = isCC;
        return this;
    }
    
    /**
     * Indicates whether the caption track is a draft. If the value is true, then the track is not publicly visible. The default value is false. @mutable youtube.captions.insert youtube.captions.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDraft")
    public Boolean isDraft;
    public CaptionSnippet withIsDraft(Boolean isDraft) {
        this.isDraft = isDraft;
        return this;
    }
    
    /**
     * Indicates whether caption track is formatted for "easy reader," meaning it is at a third-grade level for language learners. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEasyReader")
    public Boolean isEasyReader;
    public CaptionSnippet withIsEasyReader(Boolean isEasyReader) {
        this.isEasyReader = isEasyReader;
        return this;
    }
    
    /**
     * Indicates whether the caption track uses large text for the vision-impaired. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isLarge")
    public Boolean isLarge;
    public CaptionSnippet withIsLarge(Boolean isLarge) {
        this.isLarge = isLarge;
        return this;
    }
    
    /**
     * The language of the caption track. The property value is a BCP-47 language tag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public CaptionSnippet withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * The date and time when the caption track was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdated")
    public OffsetDateTime lastUpdated;
    public CaptionSnippet withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    /**
     * The name of the caption track. The name is intended to be visible to the user as an option during playback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CaptionSnippet withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The caption track's status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CaptionSnippetStatusEnum status;
    public CaptionSnippet withStatus(CaptionSnippetStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The caption track's type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackKind")
    public CaptionSnippetTrackKindEnum trackKind;
    public CaptionSnippet withTrackKind(CaptionSnippetTrackKindEnum trackKind) {
        this.trackKind = trackKind;
        return this;
    }
    
    /**
     * The ID that YouTube uses to uniquely identify the video associated with the caption track. @mutable youtube.captions.insert
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoId")
    public String videoId;
    public CaptionSnippet withVideoId(String videoId) {
        this.videoId = videoId;
        return this;
    }
    
}
