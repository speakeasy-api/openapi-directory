/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDescribeEnvironmentManagedActionsQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDescribeEnvironmentManagedActionsActionEnum action;
    public GETDescribeEnvironmentManagedActionsQueryParams withAction(GETDescribeEnvironmentManagedActionsActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The environment ID of the target environment.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EnvironmentId")
    public String environmentId;
    public GETDescribeEnvironmentManagedActionsQueryParams withEnvironmentId(String environmentId) {
        this.environmentId = environmentId;
        return this;
    }
    
    /**
     * The name of the target environment.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EnvironmentName")
    public String environmentName;
    public GETDescribeEnvironmentManagedActionsQueryParams withEnvironmentName(String environmentName) {
        this.environmentName = environmentName;
        return this;
    }
    
    /**
     * To show only actions with a particular status, specify a status.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Status")
    public GETDescribeEnvironmentManagedActionsStatusEnum status;
    public GETDescribeEnvironmentManagedActionsQueryParams withStatus(GETDescribeEnvironmentManagedActionsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDescribeEnvironmentManagedActionsVersionEnum version;
    public GETDescribeEnvironmentManagedActionsQueryParams withVersion(GETDescribeEnvironmentManagedActionsVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
