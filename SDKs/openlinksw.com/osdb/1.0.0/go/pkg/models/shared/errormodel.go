// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorModelStatusEnum string

const (
	ErrorModelStatusEnumError ErrorModelStatusEnum = "error"
)

func (e ErrorModelStatusEnum) ToPointer() *ErrorModelStatusEnum {
	return &e
}

func (e *ErrorModelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "error":
		*e = ErrorModelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorModelStatusEnum: %v", v)
	}
}

// ErrorModel - Error response
type ErrorModel struct {
	// The path of the REST API method reporting the error
	API *string `json:"api,omitempty"`
	// The name of the REST API method reporting the error
	Method *string `json:"method,omitempty"`
	// A message describing the error
	Response *string               `json:"response,omitempty"`
	Status   *ErrorModelStatusEnum `json:"status,omitempty"`
}
