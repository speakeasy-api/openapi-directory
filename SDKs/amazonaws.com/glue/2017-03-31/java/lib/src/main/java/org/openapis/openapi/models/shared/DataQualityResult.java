/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DataQualityResult - Describes a data quality result.
 */
public class DataQualityResult {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CompletedOn")
    public OffsetDateTime completedOn;
    public DataQualityResult withCompletedOn(OffsetDateTime completedOn) {
        this.completedOn = completedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataSource")
    public DataSource dataSource;
    public DataQualityResult withDataSource(DataSource dataSource) {
        this.dataSource = dataSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EvaluationContext")
    public String evaluationContext;
    public DataQualityResult withEvaluationContext(String evaluationContext) {
        this.evaluationContext = evaluationContext;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobName")
    public String jobName;
    public DataQualityResult withJobName(String jobName) {
        this.jobName = jobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobRunId")
    public String jobRunId;
    public DataQualityResult withJobRunId(String jobRunId) {
        this.jobRunId = jobRunId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResultId")
    public String resultId;
    public DataQualityResult withResultId(String resultId) {
        this.resultId = resultId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RuleResults")
    public DataQualityRuleResult[] ruleResults;
    public DataQualityResult withRuleResults(DataQualityRuleResult[] ruleResults) {
        this.ruleResults = ruleResults;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RulesetEvaluationRunId")
    public String rulesetEvaluationRunId;
    public DataQualityResult withRulesetEvaluationRunId(String rulesetEvaluationRunId) {
        this.rulesetEvaluationRunId = rulesetEvaluationRunId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RulesetName")
    public String rulesetName;
    public DataQualityResult withRulesetName(String rulesetName) {
        this.rulesetName = rulesetName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Score")
    public Double score;
    public DataQualityResult withScore(Double score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartedOn")
    public OffsetDateTime startedOn;
    public DataQualityResult withStartedOn(OffsetDateTime startedOn) {
        this.startedOn = startedOn;
        return this;
    }
    
}
