/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK
 */
export class VideoV1CompositionSettings extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CompositionSettings resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The SID of the stored Credential resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aws_credentials_sid" })
  awsCredentialsSid?: string;

  /**
   * The URL of the AWS S3 bucket where the compositions are stored. We only support DNS-compliant URLs like `https://documentation-example-twilio-bucket/compositions`, where `compositions` is the path in which you want the compositions to be stored. This URL accepts only URI-valid characters, as described in the <a href='https://tools.ietf.org/html/rfc3986#section-2'>RFC 3986</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aws_s3_url" })
  awsS3Url?: string;

  /**
   * Whether all compositions are written to the `aws_s3_url`. When `false`, all compositions are stored in our cloud.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aws_storage_enabled" })
  awsStorageEnabled?: boolean;

  /**
   * Whether all compositions are stored in an encrypted form. The default is `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryption_enabled" })
  encryptionEnabled?: boolean;

  /**
   * The SID of the Public Key resource used for encryption.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryption_key_sid" })
  encryptionKeySid?: string;

  /**
   * The string that you assigned to describe the resource and that will be shown in the console
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * The absolute URL of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
