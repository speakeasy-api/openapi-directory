/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostOrderResponseType {
    /**
     * The account ID for the order. This field is returned instead of the `accountNumber` field if the `returnIds` query parameter is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public PostOrderResponseType withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The account number for the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public PostOrderResponseType withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * An array of the credit memo IDs generated in this order request. The credit memo is only available if you have the Invoice Settlement feature enabled. This field is returned instead of the `creditMemoNumbers` field if the `returnIds` query parameter is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemoIds")
    public String[] creditMemoIds;
    public PostOrderResponseType withCreditMemoIds(String[] creditMemoIds) {
        this.creditMemoIds = creditMemoIds;
        return this;
    }
    
    /**
     * An array of the credit memo numbers generated in this order request. The credit memo is only available if you have the Invoice Settlement feature enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemoNumbers")
    public String[] creditMemoNumbers;
    public PostOrderResponseType withCreditMemoNumbers(String[] creditMemoNumbers) {
        this.creditMemoNumbers = creditMemoNumbers;
        return this;
    }
    
    /**
     * An array of the invoice IDs generated in this order request. Normally it includes one invoice ID only, but can include multiple items when a subscription was tagged as invoice separately. This field is returned instead of the `invoiceNumbers` field if the `returnIds` query parameter is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceIds")
    public String[] invoiceIds;
    public PostOrderResponseType withInvoiceIds(String[] invoiceIds) {
        this.invoiceIds = invoiceIds;
        return this;
    }
    
    /**
     * An array of the invoice numbers generated in this order request. Normally it includes one invoice number only, but can include multiple items when a subscription was tagged as invoice separately.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceNumbers")
    public String[] invoiceNumbers;
    public PostOrderResponseType withInvoiceNumbers(String[] invoiceNumbers) {
        this.invoiceNumbers = invoiceNumbers;
        return this;
    }
    
    /**
     * The ID of the order created. This field is returned instead of the `orderNumber` field if the `returnIds` query parameter is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderId")
    public String orderId;
    public PostOrderResponseType withOrderId(String orderId) {
        this.orderId = orderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderLineItems")
    public PostOrderResponseTypeOrderLineItems[] orderLineItems;
    public PostOrderResponseType withOrderLineItems(PostOrderResponseTypeOrderLineItems[] orderLineItems) {
        this.orderLineItems = orderLineItems;
        return this;
    }
    
    /**
     * The order number of the order created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderNumber")
    public String orderNumber;
    public PostOrderResponseType withOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        return this;
    }
    
    /**
     * The total amount collected in this order request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paidAmount")
    public String paidAmount;
    public PostOrderResponseType withPaidAmount(String paidAmount) {
        this.paidAmount = paidAmount;
        return this;
    }
    
    /**
     * The payment Id that is collected in this order request. This field is returned instead of the `paymentNumber` field if the `returnIds` query parameter is set to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentId")
    public String paymentId;
    public PostOrderResponseType withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    /**
     * The payment number that is collected in this order request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentNumber")
    public String paymentNumber;
    public PostOrderResponseType withPaymentNumber(String paymentNumber) {
        this.paymentNumber = paymentNumber;
        return this;
    }
    
    /**
     * The Id of the process that handle the operation.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processId")
    public String processId;
    public PostOrderResponseType withProcessId(String processId) {
        this.processId = processId;
        return this;
    }
    
    /**
     * **Note**: This field is only available if you have the Ramps feature enabled. The [Orders](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/AA_Overview_of_Orders) feature must be enabled before you can access the [Ramps](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Ramps_and_Ramp_Metrics/A_Overview_of_Ramps_and_Ramp_Metrics) feature. The Ramps feature is available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information coming October 2020.
     * 
     * The ramp definitions created by this order request.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ramps")
    public PostOrderResponseTypeRamps[] ramps;
    public PostOrderResponseType withRamps(PostOrderResponseTypeRamps[] ramps) {
        this.ramps = ramps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasons")
    public PostOrderResponseTypeReasons[] reasons;
    public PostOrderResponseType withReasons(PostOrderResponseTypeReasons[] reasons) {
        this.reasons = reasons;
        return this;
    }
    
    /**
     * Status of the order. `Pending` is only applicable for an order that contains a `CreateSubscription` order action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PostOrderResponseTypeStatusEnum status;
    public PostOrderResponseType withStatus(PostOrderResponseTypeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * **Note:** This field is in Zuora REST API version control. Supported minor versions are 222.4 or earlier. To use this field in the method, you must set the\u00a0`zuora-version` parameter to the minor version number in the request header.
     * 
     * Container for the subscription IDs of the subscriptions in an order. This field is returned instead of the `subscriptionNumbers` field if the `returnIds` query parameter is set to `true`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionIds")
    public String[] subscriptionIds;
    public PostOrderResponseType withSubscriptionIds(String[] subscriptionIds) {
        this.subscriptionIds = subscriptionIds;
        return this;
    }
    
    /**
     * **Note:** This field is in Zuora REST API version control. Supported minor versions are 222.4 or earlier. To use this field in the method, you must set the\u00a0`zuora-version` parameter to the minor version number in the request header.
     * 
     * Container for the subscription numbers of the subscriptions in an order.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumbers")
    public String[] subscriptionNumbers;
    public PostOrderResponseType withSubscriptionNumbers(String[] subscriptionNumbers) {
        this.subscriptionNumbers = subscriptionNumbers;
        return this;
    }
    
    /**
     * **Note:** This field is in Zuora REST API version control. Supported minor versions are 223.0 or later. To use this field in the method, you must set the\u00a0`zuora-version` parameter to the minor version number in the request header.
     * 
     * Container for the subscription numbers and statuses in an order.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptions")
    public PostOrderResponseTypeSubscriptions[] subscriptions;
    public PostOrderResponseType withSubscriptions(PostOrderResponseTypeSubscriptions[] subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }
    
    /**
     * Indicates whether the call succeeded.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public PostOrderResponseType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
}
