/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { BatchDescribeModelPackageError } from "./batchdescribemodelpackageerror";
import { BatchDescribeModelPackageSummary } from "./batchdescribemodelpackagesummary";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class BatchDescribeModelPackageOutput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: BatchDescribeModelPackageError })
  @Expose({ name: "BatchDescribeModelPackageErrorMap" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, BatchDescribeModelPackageError> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], BatchDescribeModelPackageError);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  batchDescribeModelPackageErrorMap?: Record<
    string,
    BatchDescribeModelPackageError
  >;

  @SpeakeasyMetadata({ elemType: BatchDescribeModelPackageSummary })
  @Expose({ name: "ModelPackageSummaries" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, BatchDescribeModelPackageSummary> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], BatchDescribeModelPackageSummary);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  modelPackageSummaries?: Record<string, BatchDescribeModelPackageSummary>;
}
