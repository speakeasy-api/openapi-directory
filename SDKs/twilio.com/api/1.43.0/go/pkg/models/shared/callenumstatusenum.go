// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CallEnumStatusEnum - The status of the calls to include. Can be: `queued`, `ringing`, `in-progress`, `canceled`, `completed`, `failed`, `busy`, or `no-answer`.
type CallEnumStatusEnum string

const (
	CallEnumStatusEnumQueued     CallEnumStatusEnum = "queued"
	CallEnumStatusEnumRinging    CallEnumStatusEnum = "ringing"
	CallEnumStatusEnumInProgress CallEnumStatusEnum = "in-progress"
	CallEnumStatusEnumCompleted  CallEnumStatusEnum = "completed"
	CallEnumStatusEnumBusy       CallEnumStatusEnum = "busy"
	CallEnumStatusEnumFailed     CallEnumStatusEnum = "failed"
	CallEnumStatusEnumNoAnswer   CallEnumStatusEnum = "no-answer"
	CallEnumStatusEnumCanceled   CallEnumStatusEnum = "canceled"
)

func (e CallEnumStatusEnum) ToPointer() *CallEnumStatusEnum {
	return &e
}

func (e *CallEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "queued":
		fallthrough
	case "ringing":
		fallthrough
	case "in-progress":
		fallthrough
	case "completed":
		fallthrough
	case "busy":
		fallthrough
	case "failed":
		fallthrough
	case "no-answer":
		fallthrough
	case "canceled":
		*e = CallEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CallEnumStatusEnum: %v", v)
	}
}
