// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETStartDBInstanceActionEnum
type GETStartDBInstanceActionEnum string

const (
	GETStartDBInstanceActionEnumStartDbInstance GETStartDBInstanceActionEnum = "StartDBInstance"
)

func (e GETStartDBInstanceActionEnum) ToPointer() *GETStartDBInstanceActionEnum {
	return &e
}

func (e *GETStartDBInstanceActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StartDBInstance":
		*e = GETStartDBInstanceActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStartDBInstanceActionEnum: %v", v)
	}
}

// GETStartDBInstanceVersionEnum
type GETStartDBInstanceVersionEnum string

const (
	GETStartDBInstanceVersionEnumTwoThousandAndFourteen1031 GETStartDBInstanceVersionEnum = "2014-10-31"
)

func (e GETStartDBInstanceVersionEnum) ToPointer() *GETStartDBInstanceVersionEnum {
	return &e
}

func (e *GETStartDBInstanceVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETStartDBInstanceVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStartDBInstanceVersionEnum: %v", v)
	}
}

type GETStartDBInstanceRequest struct {
	Action GETStartDBInstanceActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The user-supplied instance identifier.
	DBInstanceIdentifier string                        `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	Version              GETStartDBInstanceVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm        *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETStartDBInstanceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
