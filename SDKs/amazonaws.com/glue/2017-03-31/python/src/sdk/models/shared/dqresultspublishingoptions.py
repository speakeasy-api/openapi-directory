"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DQResultsPublishingOptions:
    r"""Options to configure how your data quality evaluation results are published."""
    
    cloud_watch_metrics_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudWatchMetricsEnabled'), 'exclude': lambda f: f is None }})  
    evaluation_context: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EvaluationContext'), 'exclude': lambda f: f is None }})  
    results_publishing_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultsPublishingEnabled'), 'exclude': lambda f: f is None }})  
    results_s3_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResultsS3Prefix'), 'exclude': lambda f: f is None }})  
    