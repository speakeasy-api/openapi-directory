// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NamedStyleSuggestionStateNamedStyleTypeEnum - The named style type that this suggestion state corresponds to. This field is provided as a convenience for matching the NamedStyleSuggestionState with its corresponding NamedStyle.
type NamedStyleSuggestionStateNamedStyleTypeEnum string

const (
	NamedStyleSuggestionStateNamedStyleTypeEnumNamedStyleTypeUnspecified NamedStyleSuggestionStateNamedStyleTypeEnum = "NAMED_STYLE_TYPE_UNSPECIFIED"
	NamedStyleSuggestionStateNamedStyleTypeEnumNormalText                NamedStyleSuggestionStateNamedStyleTypeEnum = "NORMAL_TEXT"
	NamedStyleSuggestionStateNamedStyleTypeEnumTitle                     NamedStyleSuggestionStateNamedStyleTypeEnum = "TITLE"
	NamedStyleSuggestionStateNamedStyleTypeEnumSubtitle                  NamedStyleSuggestionStateNamedStyleTypeEnum = "SUBTITLE"
	NamedStyleSuggestionStateNamedStyleTypeEnumHeading1                  NamedStyleSuggestionStateNamedStyleTypeEnum = "HEADING_1"
	NamedStyleSuggestionStateNamedStyleTypeEnumHeading2                  NamedStyleSuggestionStateNamedStyleTypeEnum = "HEADING_2"
	NamedStyleSuggestionStateNamedStyleTypeEnumHeading3                  NamedStyleSuggestionStateNamedStyleTypeEnum = "HEADING_3"
	NamedStyleSuggestionStateNamedStyleTypeEnumHeading4                  NamedStyleSuggestionStateNamedStyleTypeEnum = "HEADING_4"
	NamedStyleSuggestionStateNamedStyleTypeEnumHeading5                  NamedStyleSuggestionStateNamedStyleTypeEnum = "HEADING_5"
	NamedStyleSuggestionStateNamedStyleTypeEnumHeading6                  NamedStyleSuggestionStateNamedStyleTypeEnum = "HEADING_6"
)

func (e *NamedStyleSuggestionStateNamedStyleTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NAMED_STYLE_TYPE_UNSPECIFIED":
		fallthrough
	case "NORMAL_TEXT":
		fallthrough
	case "TITLE":
		fallthrough
	case "SUBTITLE":
		fallthrough
	case "HEADING_1":
		fallthrough
	case "HEADING_2":
		fallthrough
	case "HEADING_3":
		fallthrough
	case "HEADING_4":
		fallthrough
	case "HEADING_5":
		fallthrough
	case "HEADING_6":
		*e = NamedStyleSuggestionStateNamedStyleTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NamedStyleSuggestionStateNamedStyleTypeEnum: %s", s)
	}
}

// NamedStyleSuggestionState - A suggestion state of a NamedStyle message.
type NamedStyleSuggestionState struct {
	// The named style type that this suggestion state corresponds to. This field is provided as a convenience for matching the NamedStyleSuggestionState with its corresponding NamedStyle.
	NamedStyleType *NamedStyleSuggestionStateNamedStyleTypeEnum `json:"namedStyleType,omitempty"`
	// A mask that indicates which of the fields on the base ParagraphStyle have been changed in this suggestion. For any field set to true, there's a new suggested value.
	ParagraphStyleSuggestionState *ParagraphStyleSuggestionState `json:"paragraphStyleSuggestionState,omitempty"`
	// A mask that indicates which of the fields on the base TextStyle have been changed in this suggestion. For any field set to true, there's a new suggested value.
	TextStyleSuggestionState *TextStyleSuggestionState `json:"textStyleSuggestionState,omitempty"`
}
