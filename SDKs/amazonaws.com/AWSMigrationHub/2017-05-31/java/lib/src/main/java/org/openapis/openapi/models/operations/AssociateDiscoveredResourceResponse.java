/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class AssociateDiscoveredResourceResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;
    public AssociateDiscoveredResourceResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> associateDiscoveredResourceResult;
    public AssociateDiscoveredResourceResponse withAssociateDiscoveredResourceResult(java.util.Map<String, Object> associateDiscoveredResourceResult) {
        this.associateDiscoveredResourceResult = associateDiscoveredResourceResult;
        return this;
    }
    
    
    public String contentType;
    public AssociateDiscoveredResourceResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DryRunOperation
     */
    
    public Object dryRunOperation;
    public AssociateDiscoveredResourceResponse withDryRunOperation(Object dryRunOperation) {
        this.dryRunOperation = dryRunOperation;
        return this;
    }
    
    /**
     * HomeRegionNotSetException
     */
    
    public Object homeRegionNotSetException;
    public AssociateDiscoveredResourceResponse withHomeRegionNotSetException(Object homeRegionNotSetException) {
        this.homeRegionNotSetException = homeRegionNotSetException;
        return this;
    }
    
    /**
     * InternalServerError
     */
    
    public Object internalServerError;
    public AssociateDiscoveredResourceResponse withInternalServerError(Object internalServerError) {
        this.internalServerError = internalServerError;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;
    public AssociateDiscoveredResourceResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    /**
     * PolicyErrorException
     */
    
    public Object policyErrorException;
    public AssociateDiscoveredResourceResponse withPolicyErrorException(Object policyErrorException) {
        this.policyErrorException = policyErrorException;
        return this;
    }
    
    
    public Integer statusCode;
    public AssociateDiscoveredResourceResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public AssociateDiscoveredResourceResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public AssociateDiscoveredResourceResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * ServiceUnavailableException
     */
    
    public Object serviceUnavailableException;
    public AssociateDiscoveredResourceResponse withServiceUnavailableException(Object serviceUnavailableException) {
        this.serviceUnavailableException = serviceUnavailableException;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;
    public AssociateDiscoveredResourceResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
    /**
     * UnauthorizedOperation
     */
    
    public Object unauthorizedOperation;
    public AssociateDiscoveredResourceResponse withUnauthorizedOperation(Object unauthorizedOperation) {
        this.unauthorizedOperation = unauthorizedOperation;
        return this;
    }
    
}
