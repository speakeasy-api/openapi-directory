/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudComponentStatus } from "./cloudcomponentstatus";
import { ComponentPlatform } from "./componentplatform";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeComponentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "componentName" })
  componentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "componentVersion" })
  componentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata({ elemType: ComponentPlatform })
  @Expose({ name: "platforms" })
  @Type(() => ComponentPlatform)
  platforms?: ComponentPlatform[];

  @SpeakeasyMetadata()
  @Expose({ name: "publisher" })
  publisher?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => CloudComponentStatus)
  status?: CloudComponentStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
