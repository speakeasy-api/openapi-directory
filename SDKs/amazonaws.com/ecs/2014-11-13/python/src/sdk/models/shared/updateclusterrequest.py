"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import clusterconfiguration as shared_clusterconfiguration
from ..shared import clusterserviceconnectdefaultsrequest as shared_clusterserviceconnectdefaultsrequest
from ..shared import clustersetting as shared_clustersetting
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateClusterRequest:
    
    cluster: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cluster') }})  
    configuration: Optional[shared_clusterconfiguration.ClusterConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configuration'), 'exclude': lambda f: f is None }})  
    service_connect_defaults: Optional[shared_clusterserviceconnectdefaultsrequest.ClusterServiceConnectDefaultsRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceConnectDefaults'), 'exclude': lambda f: f is None }})  
    settings: Optional[list[shared_clustersetting.ClusterSetting]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('settings'), 'exclude': lambda f: f is None }})  
    