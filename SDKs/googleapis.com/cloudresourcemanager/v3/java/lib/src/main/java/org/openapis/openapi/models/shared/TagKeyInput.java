/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TagKeyInput - A TagKey, used to group a set of TagValues.
 */
public class TagKeyInput {
    /**
     * Optional. User-assigned description of the TagKey. Must not exceed 256 characters. Read-write.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public TagKeyInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateTagKeyRequest for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public TagKeyInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Immutable. The resource name for a TagKey. Must be in the format `tagKeys/{tag_key_id}`, where `tag_key_id` is the generated numeric id for the TagKey.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TagKeyInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Immutable. The resource name of the TagKey's parent. A TagKey can be parented by an Organization or a Project. For a TagKey parented by an Organization, its parent must be in the form `organizations/{org_id}`. For a TagKey parented by a Project, its parent can be in the form `projects/{project_id}` or `projects/{project_number}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;

    public TagKeyInput withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * Optional. A purpose denotes that this Tag is intended for use in policies of a specific policy engine, and will involve that policy engine in management operations involving this Tag. A purpose does not grant a policy engine exclusive rights to the Tag, and it may be referenced by other policy engines. A purpose cannot be changed once set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purpose")
    public TagKeyPurposeEnum purpose;

    public TagKeyInput withPurpose(TagKeyPurposeEnum purpose) {
        this.purpose = purpose;
        return this;
    }
    
    /**
     * Optional. Purpose data corresponds to the policy system that the tag is intended for. See documentation for `Purpose` for formatting of this field. Purpose data cannot be changed once set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purposeData")
    public java.util.Map<String, String> purposeData;

    public TagKeyInput withPurposeData(java.util.Map<String, String> purposeData) {
        this.purposeData = purposeData;
        return this;
    }
    
    /**
     * Required. Immutable. The user friendly name for a TagKey. The short name should be unique for TagKeys within the same tag namespace. The short name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shortName")
    public String shortName;

    public TagKeyInput withShortName(String shortName) {
        this.shortName = shortName;
        return this;
    }
    
    public TagKeyInput(){}
}
