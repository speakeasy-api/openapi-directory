<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OSPolicyAssignment - OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information about the OS policy resource definitions and examples, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OSPolicyAssignment
{
    /**
     * Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field.
     * 
     * @var ?bool $baseline
     */
	#[\JMS\Serializer\Annotation\SerializedName('baseline')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $baseline = null;
    
    /**
     * Output only. Indicates that this revision deletes the OS policy assignment.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * OS policy assignment description. Length of the description is limited to 1024 characters.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentInstanceFilter $instanceFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentInstanceFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyAssignmentInstanceFilter $instanceFilter = null;
    
    /**
     * Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Required. List of OS policies to be applied to the VMs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OSPolicy> $osPolicies
     */
	#[\JMS\Serializer\Annotation\SerializedName('osPolicies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OSPolicy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $osPolicies = null;
    
    /**
     * Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING
     * 
     * @var ?bool $reconciling
     */
	#[\JMS\Serializer\Annotation\SerializedName('reconciling')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reconciling = null;
    
    /**
     * Output only. The timestamp that the revision was created.
     * 
     * @var ?string $revisionCreateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('revisionCreateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revisionCreateTime = null;
    
    /**
     * Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment
     * 
     * @var ?string $revisionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('revisionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revisionId = null;
    
    /**
     * Message to configure the rollout at the zonal level for the OS policy assignment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentRollout $rollout
     */
	#[\JMS\Serializer\Annotation\SerializedName('rollout')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentRollout')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyAssignmentRollout $rollout = null;
    
    /**
     * Output only. OS policy assignment rollout state
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentRolloutStateEnum $rolloutState
     */
	#[\JMS\Serializer\Annotation\SerializedName('rolloutState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentRolloutStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyAssignmentRolloutStateEnum $rolloutState = null;
    
    /**
     * Output only. Server generated unique id for the OS policy assignment resource.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->baseline = null;
		$this->deleted = null;
		$this->description = null;
		$this->etag = null;
		$this->instanceFilter = null;
		$this->name = null;
		$this->osPolicies = null;
		$this->reconciling = null;
		$this->revisionCreateTime = null;
		$this->revisionId = null;
		$this->rollout = null;
		$this->rolloutState = null;
		$this->uid = null;
	}
}
