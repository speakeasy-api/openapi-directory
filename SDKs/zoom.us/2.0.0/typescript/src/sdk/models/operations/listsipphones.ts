/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListSipPhonesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListSipPhonesRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   *
   * @remarks
   * **Deprecated** - This field has been deprecated and we will stop supporting it completely in a future release. Please use "next_page_token" for pagination instead of this field.
   *
   * The page number of the current page in the returned records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_number",
  })
  pageNumber?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search_key",
  })
  searchKey?: string;
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum ListSipPhones200ApplicationXMLPhonesTransportProtocolEnum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum ListSipPhones200ApplicationXMLPhonesTransportProtocol2Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum ListSipPhones200ApplicationXMLPhonesTransportProtocol3Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

export class ListSipPhones200ApplicationXMLPhones extends SpeakeasyBase {
  /**
   * Authorization name of the user  registered for SIP Phone.
   */
  @SpeakeasyMetadata()
  authorizationName?: string;

  /**
   * The name or IP address of your provider’s SIP domain. (example: CDC.WEB).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  domain?: string;

  /**
   * Unique Identifier of the SIP Phone.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * The password generated for the user in the SIP account.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  password?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  proxyServer?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  proxyServer2?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  proxyServer3?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  registerServer?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  registerServer2?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  registerServer3?: string;

  /**
   * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
   */
  @SpeakeasyMetadata()
  registrationExpireTime?: number;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  transportProtocol?: ListSipPhones200ApplicationXMLPhonesTransportProtocolEnum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  transportProtocol2?: ListSipPhones200ApplicationXMLPhonesTransportProtocol2Enum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  transportProtocol3?: ListSipPhones200ApplicationXMLPhonesTransportProtocol3Enum;

  /**
   * The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.
   */
  @SpeakeasyMetadata()
  userEmail?: string;

  /**
   * The phone number associated with the user in the SIP account.
   */
  @SpeakeasyMetadata()
  userName?: string;

  /**
   * The number to dial for checking voicemail.
   */
  @SpeakeasyMetadata()
  voiceMail?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * SIP Phones listed successfully.
 *
 * **Error Code:** `200`<br>
 * Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
 */
export class ListSipPhones200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The page number of the current results.
   */
  @SpeakeasyMetadata()
  pageNumber?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * SIP phones object.
   */
  @SpeakeasyMetadata({ elemType: ListSipPhones200ApplicationXMLPhones })
  phones?: ListSipPhones200ApplicationXMLPhones[];

  /**
   * The total number of all the records available across pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum ListSipPhones200ApplicationJSONPhonesTransportProtocolEnum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum ListSipPhones200ApplicationJSONPhonesTransportProtocol2Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum ListSipPhones200ApplicationJSONPhonesTransportProtocol3Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

export class ListSipPhones200ApplicationJSONPhones extends SpeakeasyBase {
  /**
   * Authorization name of the user  registered for SIP Phone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorization_name" })
  authorizationName?: string;

  /**
   * The name or IP address of your provider’s SIP domain. (example: CDC.WEB).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * Unique Identifier of the SIP Phone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The password generated for the user in the SIP account.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server" })
  proxyServer?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server2" })
  proxyServer2?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server3" })
  proxyServer3?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server" })
  registerServer?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server2" })
  registerServer2?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server3" })
  registerServer3?: string;

  /**
   * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registration_expire_time" })
  registrationExpireTime?: number;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol" })
  transportProtocol?: ListSipPhones200ApplicationJSONPhonesTransportProtocolEnum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol2" })
  transportProtocol2?: ListSipPhones200ApplicationJSONPhonesTransportProtocol2Enum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol3" })
  transportProtocol3?: ListSipPhones200ApplicationJSONPhonesTransportProtocol3Enum;

  /**
   * The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_email" })
  userEmail?: string;

  /**
   * The phone number associated with the user in the SIP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName?: string;

  /**
   * The number to dial for checking voicemail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_mail" })
  voiceMail?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * SIP Phones listed successfully.
 *
 * **Error Code:** `200`<br>
 * Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
 */
export class ListSipPhones200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The page number of the current results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_number" })
  pageNumber?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * SIP phones object.
   */
  @SpeakeasyMetadata({ elemType: ListSipPhones200ApplicationJSONPhones })
  @Expose({ name: "phones" })
  @Type(() => ListSipPhones200ApplicationJSONPhones)
  phones?: ListSipPhones200ApplicationJSONPhones[];

  /**
   * The total number of all the records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListSipPhonesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * SIP Phones listed successfully.
   *
   * **Error Code:** `200`<br>
   * Permission missing: Enable SIP Phone Integration by contacting a Zoom Admin first.
   */
  @SpeakeasyMetadata()
  listSipPhones200ApplicationJSONObject?: ListSipPhones200ApplicationJSON;
}
