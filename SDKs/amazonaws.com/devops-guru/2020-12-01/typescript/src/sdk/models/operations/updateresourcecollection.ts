/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  Specifies if the resource collection in the request is added or deleted to the resource collection.
 */
export enum UpdateResourceCollectionRequestBodyActionEnum {
  Add = "ADD",
  Remove = "REMOVE",
}

/**
 *  Contains information used to update a collection of Amazon Web Services resources.
 */
export class UpdateResourceCollectionRequestBodyResourceCollection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CloudFormation" })
  @Type(() => shared.UpdateCloudFormationCollectionFilter)
  cloudFormation?: shared.UpdateCloudFormationCollectionFilter;

  @SpeakeasyMetadata({ elemType: shared.UpdateTagCollectionFilter })
  @Expose({ name: "Tags" })
  @Type(() => shared.UpdateTagCollectionFilter)
  tags?: shared.UpdateTagCollectionFilter[];
}

export class UpdateResourceCollectionRequestBody extends SpeakeasyBase {
  /**
   *  Specifies if the resource collection in the request is added or deleted to the resource collection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Action" })
  action: UpdateResourceCollectionRequestBodyActionEnum;

  /**
   *  Contains information used to update a collection of Amazon Web Services resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ResourceCollection" })
  @Type(() => UpdateResourceCollectionRequestBodyResourceCollection)
  resourceCollection: UpdateResourceCollectionRequestBodyResourceCollection;
}

export class UpdateResourceCollectionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateResourceCollectionRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateResourceCollectionResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateResourceCollectionResponse?: Record<string, any>;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
