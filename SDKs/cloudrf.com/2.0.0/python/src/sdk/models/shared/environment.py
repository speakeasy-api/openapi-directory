"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Environment:
    
    cll: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cll'), 'exclude': lambda f: f is None }})
    r"""Clutter loss. 0=None/DSM only, 1=Hard / LOS mode, 2=Soft / NLOS mode"""  
    clm: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clm'), 'exclude': lambda f: f is None }})
    r"""Clutter mode. 0=None/DSM only, 1=System & custom clutter, 2=Custom clutter only"""  
    mat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mat'), 'exclude': lambda f: f is None }})
    r"""Clutter attenuation override in dB/m based on a tree block OR hollow building. Light foliage=0.1dB/m, brick=1.0dB/m, concrete=5dB/m"""  
    