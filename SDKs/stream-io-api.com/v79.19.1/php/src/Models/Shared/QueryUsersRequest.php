<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class QueryUsersRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('connection_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectionId = null;
    
    /**
     * User filters
     * 
     * @var array<string, mixed> $filterConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter_conditions')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $filterConditions;
    
	#[\JMS\Serializer\Annotation\SerializedName('id_gt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idGt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id_gte')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idGte = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id_lt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idLt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id_lte')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idLte = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $limit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $offset = null;
    
    /**
     * Request user presence status
     * 
     * @var ?bool $presence
     */
	#[\JMS\Serializer\Annotation\SerializedName('presence')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $presence = null;
    
    /**
     * Array of sort parameters
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\SortParam> $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SortParam>')]
    public array $sort;
    
    /**
     * Represents chat user
     * 
     * @var ?array<string, mixed> $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $user = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->connectionId = null;
		$this->filterConditions = [];
		$this->idGt = null;
		$this->idGte = null;
		$this->idLt = null;
		$this->idLte = null;
		$this->limit = null;
		$this->offset = null;
		$this->presence = null;
		$this->sort = [];
		$this->user = null;
		$this->userId = null;
	}
}
