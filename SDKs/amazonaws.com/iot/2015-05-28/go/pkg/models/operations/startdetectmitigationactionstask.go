// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type StartDetectMitigationActionsTaskPathParams struct {
	//  The unique identifier of the task.
	TaskID string `pathParam:"style=simple,explode=false,name=taskId"`
}

type StartDetectMitigationActionsTaskHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// StartDetectMitigationActionsTaskRequestBodyTarget -  The target of a mitigation action task.
type StartDetectMitigationActionsTaskRequestBodyTarget struct {
	BehaviorName        *string  `json:"behaviorName,omitempty"`
	SecurityProfileName *string  `json:"securityProfileName,omitempty"`
	ViolationIds        []string `json:"violationIds,omitempty"`
}

// StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange -  Specifies the time period of which violation events occurred between.
type StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange struct {
	EndTime   *time.Time `json:"endTime,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
}

type StartDetectMitigationActionsTaskRequestBody struct {
	//  The actions to be performed when a device has unexpected behavior.
	Actions []string `json:"actions"`
	//  Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request.
	ClientRequestToken string `json:"clientRequestToken"`
	//  Specifies to list only active violations.
	IncludeOnlyActiveViolations *bool `json:"includeOnlyActiveViolations,omitempty"`
	//  Specifies to include suppressed alerts.
	IncludeSuppressedAlerts *bool `json:"includeSuppressedAlerts,omitempty"`
	//  The target of a mitigation action task.
	Target StartDetectMitigationActionsTaskRequestBodyTarget `json:"target"`
	//  Specifies the time period of which violation events occurred between.
	ViolationEventOccurrenceRange *StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange `json:"violationEventOccurrenceRange,omitempty"`
}

type StartDetectMitigationActionsTaskRequest struct {
	PathParams StartDetectMitigationActionsTaskPathParams
	Headers    StartDetectMitigationActionsTaskHeaders
	Request    StartDetectMitigationActionsTaskRequestBody `request:"mediaType=application/json"`
}

type StartDetectMitigationActionsTaskResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	StartDetectMitigationActionsTaskResponse *shared.StartDetectMitigationActionsTaskResponse
	StatusCode                               int
	RawResponse                              *http.Response
	// TaskAlreadyExistsException
	TaskAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
