/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class NewProject extends SpeakeasyBase {
  /**
   * Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callback_url" })
  callbackUrl?: string;

  /**
   * Coupon code to redeem
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coupon_code" })
  couponCode?: string;

  /**
   * Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom" })
  custom?: string[];

  /**
   * Optional. You can add as many files as you want in documents[] parameter. Or you add your documents later in separate calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documents[]" })
  documents?: Uint8Array;

  /**
   * Optional. Only one glossary is supported at the moment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "glossaries[]" })
  glossaries?: Uint8Array;

  @SpeakeasyMetadata()
  @Expose({ name: "source_language" })
  sourceLanguage?: string;

  /**
   * Optional. You can add as many files as you want in styleguides[] parameter. Or you add your style guides later in separate calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "styleguides[]" })
  styleguides?: Uint8Array;

  @SpeakeasyMetadata()
  @Expose({ name: "target_languages[]" })
  targetLanguages?: string[];
}
