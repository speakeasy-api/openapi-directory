// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum - The App Engine integration mode to use for this database.
type GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum string

const (
	GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnumAppEngineIntegrationModeUnspecified GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum = "APP_ENGINE_INTEGRATION_MODE_UNSPECIFIED"
	GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnumEnabled                             GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum = "ENABLED"
	GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnumDisabled                            GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum = "DISABLED"
)

func (e GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum) ToPointer() *GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum {
	return &e
}

func (e *GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "APP_ENGINE_INTEGRATION_MODE_UNSPECIFIED":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLED":
		*e = GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum: %v", v)
	}
}

// GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum - The concurrency control mode to use for this database.
type GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum string

const (
	GoogleFirestoreAdminV1DatabaseConcurrencyModeEnumConcurrencyModeUnspecified GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum = "CONCURRENCY_MODE_UNSPECIFIED"
	GoogleFirestoreAdminV1DatabaseConcurrencyModeEnumOptimistic                 GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum = "OPTIMISTIC"
	GoogleFirestoreAdminV1DatabaseConcurrencyModeEnumPessimistic                GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum = "PESSIMISTIC"
	GoogleFirestoreAdminV1DatabaseConcurrencyModeEnumOptimisticWithEntityGroups GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum = "OPTIMISTIC_WITH_ENTITY_GROUPS"
)

func (e GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum) ToPointer() *GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum {
	return &e
}

func (e *GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONCURRENCY_MODE_UNSPECIFIED":
		fallthrough
	case "OPTIMISTIC":
		fallthrough
	case "PESSIMISTIC":
		fallthrough
	case "OPTIMISTIC_WITH_ENTITY_GROUPS":
		*e = GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum: %v", v)
	}
}

// GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum - State of delete protection for the database.
type GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum string

const (
	GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnumDeleteProtectionStateUnspecified GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum = "DELETE_PROTECTION_STATE_UNSPECIFIED"
	GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnumDeleteProtectionDisabled         GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum = "DELETE_PROTECTION_DISABLED"
	GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnumDeleteProtectionEnabled          GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum = "DELETE_PROTECTION_ENABLED"
)

func (e GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum) ToPointer() *GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum {
	return &e
}

func (e *GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DELETE_PROTECTION_STATE_UNSPECIFIED":
		fallthrough
	case "DELETE_PROTECTION_DISABLED":
		fallthrough
	case "DELETE_PROTECTION_ENABLED":
		*e = GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum: %v", v)
	}
}

// GoogleFirestoreAdminV1DatabaseTypeEnum - The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore for information about how to choose.
type GoogleFirestoreAdminV1DatabaseTypeEnum string

const (
	GoogleFirestoreAdminV1DatabaseTypeEnumDatabaseTypeUnspecified GoogleFirestoreAdminV1DatabaseTypeEnum = "DATABASE_TYPE_UNSPECIFIED"
	GoogleFirestoreAdminV1DatabaseTypeEnumFirestoreNative         GoogleFirestoreAdminV1DatabaseTypeEnum = "FIRESTORE_NATIVE"
	GoogleFirestoreAdminV1DatabaseTypeEnumDatastoreMode           GoogleFirestoreAdminV1DatabaseTypeEnum = "DATASTORE_MODE"
)

func (e GoogleFirestoreAdminV1DatabaseTypeEnum) ToPointer() *GoogleFirestoreAdminV1DatabaseTypeEnum {
	return &e
}

func (e *GoogleFirestoreAdminV1DatabaseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DATABASE_TYPE_UNSPECIFIED":
		fallthrough
	case "FIRESTORE_NATIVE":
		fallthrough
	case "DATASTORE_MODE":
		*e = GoogleFirestoreAdminV1DatabaseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleFirestoreAdminV1DatabaseTypeEnum: %v", v)
	}
}

// GoogleFirestoreAdminV1Database - A Cloud Firestore Database. Currently only one database is allowed per cloud project; this database must have a `database_id` of '(default)'.
type GoogleFirestoreAdminV1Database struct {
	// The App Engine integration mode to use for this database.
	AppEngineIntegrationMode *GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum `json:"appEngineIntegrationMode,omitempty"`
	// The concurrency control mode to use for this database.
	ConcurrencyMode *GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum `json:"concurrencyMode,omitempty"`
	// Output only. The timestamp at which this database was created. Databases created before 2016 do not populate create_time.
	CreateTime *string `json:"createTime,omitempty"`
	// State of delete protection for the database.
	DeleteProtectionState *GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum `json:"deleteProtectionState,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// Output only. The key_prefix for this database. This key_prefix is used, in combination with the project id ("~") to construct the application id that is returned from the Cloud Datastore APIs in Google App Engine first generation runtimes. This value may be empty in which case the appid to use for URL-encoded keys is the project_id (eg: foo instead of v~foo).
	KeyPrefix *string `json:"keyPrefix,omitempty"`
	// The location of the database. Available databases are listed at https://cloud.google.com/firestore/docs/locations.
	LocationID *string `json:"locationId,omitempty"`
	// The resource name of the Database. Format: `projects/{project}/databases/{database}`
	Name *string `json:"name,omitempty"`
	// The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore for information about how to choose.
	Type *GoogleFirestoreAdminV1DatabaseTypeEnum `json:"type,omitempty"`
	// Output only. The system-generated UUID4 for this Database.
	UID *string `json:"uid,omitempty"`
	// Output only. The timestamp at which this database was most recently updated. Note this only includes updates to the database resource and not data contained by the database.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// GoogleFirestoreAdminV1DatabaseInput - A Cloud Firestore Database. Currently only one database is allowed per cloud project; this database must have a `database_id` of '(default)'.
type GoogleFirestoreAdminV1DatabaseInput struct {
	// The App Engine integration mode to use for this database.
	AppEngineIntegrationMode *GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum `json:"appEngineIntegrationMode,omitempty"`
	// The concurrency control mode to use for this database.
	ConcurrencyMode *GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum `json:"concurrencyMode,omitempty"`
	// State of delete protection for the database.
	DeleteProtectionState *GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum `json:"deleteProtectionState,omitempty"`
	// This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// The location of the database. Available databases are listed at https://cloud.google.com/firestore/docs/locations.
	LocationID *string `json:"locationId,omitempty"`
	// The resource name of the Database. Format: `projects/{project}/databases/{database}`
	Name *string `json:"name,omitempty"`
	// The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore for information about how to choose.
	Type *GoogleFirestoreAdminV1DatabaseTypeEnum `json:"type,omitempty"`
}
