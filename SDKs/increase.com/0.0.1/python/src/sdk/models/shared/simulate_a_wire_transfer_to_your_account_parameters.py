"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SimulateAWireTransferToYourAccountParameters:
    
    account_number_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_number_id') }})
    r"""The identifier of the Account Number the inbound Wire Transfer is for."""  
    amount: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The transfer amount in cents. Must be positive."""  
    beneficiary_address_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_address_line1'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set beneficiary_address_line1 in production. You can simulate any value here."""  
    beneficiary_address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_address_line2'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set beneficiary_address_line2 in production. You can simulate any value here."""  
    beneficiary_address_line3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_address_line3'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set beneficiary_address_line3 in production. You can simulate any value here."""  
    beneficiary_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_name'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set beneficiary_name in production. You can simulate any value here."""  
    beneficiary_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beneficiary_reference'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set beneficiary_reference in production. You can simulate any value here."""  
    originator_address_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_address_line1'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_address_line1 in production. You can simulate any value here."""  
    originator_address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_address_line2'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_address_line2 in production. You can simulate any value here."""  
    originator_address_line3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_address_line3'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_address_line3 in production. You can simulate any value here."""  
    originator_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_name'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_name in production. You can simulate any value here."""  
    originator_to_beneficiary_information_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_to_beneficiary_information_line1'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_to_beneficiary_information_line1 in production. You can simulate any value here."""  
    originator_to_beneficiary_information_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_to_beneficiary_information_line2'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_to_beneficiary_information_line2 in production. You can simulate any value here."""  
    originator_to_beneficiary_information_line3: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_to_beneficiary_information_line3'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_to_beneficiary_information_line3 in production. You can simulate any value here."""  
    originator_to_beneficiary_information_line4: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originator_to_beneficiary_information_line4'), 'exclude': lambda f: f is None }})
    r"""The sending bank will set originator_to_beneficiary_information_line4 in production. You can simulate any value here."""  
    