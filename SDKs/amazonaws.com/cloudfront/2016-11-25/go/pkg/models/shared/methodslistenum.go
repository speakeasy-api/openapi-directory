// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MethodsListEnum string

const (
	MethodsListEnumGet     MethodsListEnum = "GET"
	MethodsListEnumHead    MethodsListEnum = "HEAD"
	MethodsListEnumPost    MethodsListEnum = "POST"
	MethodsListEnumPut     MethodsListEnum = "PUT"
	MethodsListEnumPatch   MethodsListEnum = "PATCH"
	MethodsListEnumOptions MethodsListEnum = "OPTIONS"
	MethodsListEnumDelete  MethodsListEnum = "DELETE"
)

func (e MethodsListEnum) ToPointer() *MethodsListEnum {
	return &e
}

func (e *MethodsListEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GET":
		fallthrough
	case "HEAD":
		fallthrough
	case "POST":
		fallthrough
	case "PUT":
		fallthrough
	case "PATCH":
		fallthrough
	case "OPTIONS":
		fallthrough
	case "DELETE":
		*e = MethodsListEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MethodsListEnum: %v", v)
	}
}
