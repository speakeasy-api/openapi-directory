// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplacementEnum string

const (
	ReplacementEnumTrue        ReplacementEnum = "True"
	ReplacementEnumFalse       ReplacementEnum = "False"
	ReplacementEnumConditional ReplacementEnum = "Conditional"
)

func (e *ReplacementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "True":
		fallthrough
	case "False":
		fallthrough
	case "Conditional":
		*e = ReplacementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplacementEnum: %s", s)
	}
}
