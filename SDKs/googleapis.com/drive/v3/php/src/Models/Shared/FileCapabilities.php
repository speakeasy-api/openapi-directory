<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FileCapabilities - Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user can take.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FileCapabilities
{
    /**
     * Whether the current user is the pending owner of the file. Not populated for shared drive files.
     * 
     * @var ?bool $canAcceptOwnership
     */
	#[\JMS\Serializer\Annotation\SerializedName('canAcceptOwnership')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canAcceptOwnership = null;
    
    /**
     * Whether the current user can add children to this folder. This is always false when the item isn't a folder.
     * 
     * @var ?bool $canAddChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canAddChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canAddChildren = null;
    
    /**
     * Whether the current user can add a folder from another drive (different shared drive or My Drive) to this folder. This is false when the item isn't a folder. Only populated for items in shared drives.
     * 
     * @var ?bool $canAddFolderFromAnotherDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canAddFolderFromAnotherDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canAddFolderFromAnotherDrive = null;
    
    /**
     * Whether the current user can add a parent for the item without removing an existing parent in the same request. Not populated for shared drive files.
     * 
     * @var ?bool $canAddMyDriveParent
     */
	#[\JMS\Serializer\Annotation\SerializedName('canAddMyDriveParent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canAddMyDriveParent = null;
    
    /**
     * Whether the current user can change the copyRequiresWriterPermission restriction of this file.
     * 
     * @var ?bool $canChangeCopyRequiresWriterPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeCopyRequiresWriterPermission')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeCopyRequiresWriterPermission = null;
    
    /**
     * Whether the current user can change the securityUpdateEnabled field on link share metadata.
     * 
     * @var ?bool $canChangeSecurityUpdateEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeSecurityUpdateEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeSecurityUpdateEnabled = null;
    
    /**
     * Deprecated
     * 
     * @var ?bool $canChangeViewersCanCopyContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('canChangeViewersCanCopyContent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canChangeViewersCanCopyContent = null;
    
    /**
     * Whether the current user can comment on this file.
     * 
     * @var ?bool $canComment
     */
	#[\JMS\Serializer\Annotation\SerializedName('canComment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canComment = null;
    
    /**
     * Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it's not a folder.
     * 
     * @var ?bool $canCopy
     */
	#[\JMS\Serializer\Annotation\SerializedName('canCopy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canCopy = null;
    
    /**
     * Whether the current user can delete this file.
     * 
     * @var ?bool $canDelete
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDelete')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDelete = null;
    
    /**
     * Whether the current user can delete children of this folder. This is false when the item isn't a folder. Only populated for items in shared drives.
     * 
     * @var ?bool $canDeleteChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDeleteChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDeleteChildren = null;
    
    /**
     * Whether the current user can download this file.
     * 
     * @var ?bool $canDownload
     */
	#[\JMS\Serializer\Annotation\SerializedName('canDownload')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canDownload = null;
    
    /**
     * Whether the current user can edit this file. Other factors might limit the type of changes a user can make to a file. For example, see canChangeCopyRequiresWriterPermission or canModifyContent.
     * 
     * @var ?bool $canEdit
     */
	#[\JMS\Serializer\Annotation\SerializedName('canEdit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canEdit = null;
    
    /**
     * Whether the current user can list the children of this folder. This is always false when the item isn't a folder.
     * 
     * @var ?bool $canListChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canListChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canListChildren = null;
    
    /**
     * Whether the current user can modify the content of this file.
     * 
     * @var ?bool $canModifyContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('canModifyContent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canModifyContent = null;
    
    /**
     * Whether the current user can modify restrictions on content of this file.
     * 
     * @var ?bool $canModifyContentRestriction
     */
	#[\JMS\Serializer\Annotation\SerializedName('canModifyContentRestriction')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canModifyContentRestriction = null;
    
    /**
     * Whether the current user can modify the labels on this file.
     * 
     * @var ?bool $canModifyLabels
     */
	#[\JMS\Serializer\Annotation\SerializedName('canModifyLabels')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canModifyLabels = null;
    
    /**
     * Whether the current user can move children of this folder outside of the shared drive. This is false when the item isn't a folder. Only populated for items in shared drives.
     * 
     * @var ?bool $canMoveChildrenOutOfDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveChildrenOutOfDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveChildrenOutOfDrive = null;
    
    /**
     * Deprecated - use canMoveChildrenOutOfDrive instead.
     * 
     * @var ?bool $canMoveChildrenOutOfTeamDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveChildrenOutOfTeamDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveChildrenOutOfTeamDrive = null;
    
    /**
     * Whether the current user can move children of this folder within this shared drive or My Drive. This is false when the item isn't a folder. Note that a request to move the child might still fail depending on the current user's access to the child and to the destination folder.
     * 
     * @var ?bool $canMoveChildrenWithinDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveChildrenWithinDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveChildrenWithinDrive = null;
    
    /**
     * Deprecated - use canMoveChildrenWithinDrive instead.
     * 
     * @var ?bool $canMoveChildrenWithinTeamDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveChildrenWithinTeamDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveChildrenWithinTeamDrive = null;
    
    /**
     * Deprecated - use canMoveItemOutOfDrive instead.
     * 
     * @var ?bool $canMoveItemIntoTeamDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveItemIntoTeamDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveItemIntoTeamDrive = null;
    
    /**
     * Whether the current user can move this item outside of this shared drive or My Drive by changing its parent. Note that a request to change the parent of the item might still fail depending on the new parent that's being added.
     * 
     * @var ?bool $canMoveItemOutOfDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveItemOutOfDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveItemOutOfDrive = null;
    
    /**
     * Deprecated - use canMoveItemOutOfDrive instead.
     * 
     * @var ?bool $canMoveItemOutOfTeamDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveItemOutOfTeamDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveItemOutOfTeamDrive = null;
    
    /**
     * Whether the current user can move this item within this shared drive or My Drive. Note that a request to change the parent of the item might still fail depending on the new parent that's being added and the parent that's being removed.
     * 
     * @var ?bool $canMoveItemWithinDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveItemWithinDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveItemWithinDrive = null;
    
    /**
     * Deprecated - use canMoveItemWithinDrive instead.
     * 
     * @var ?bool $canMoveItemWithinTeamDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveItemWithinTeamDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveItemWithinTeamDrive = null;
    
    /**
     * Deprecated - use canMoveItemWithinDrive or canMoveItemOutOfDrive instead.
     * 
     * @var ?bool $canMoveTeamDriveItem
     */
	#[\JMS\Serializer\Annotation\SerializedName('canMoveTeamDriveItem')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canMoveTeamDriveItem = null;
    
    /**
     * Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.
     * 
     * @var ?bool $canReadDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canReadDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canReadDrive = null;
    
    /**
     * Whether the current user can read the labels on this file.
     * 
     * @var ?bool $canReadLabels
     */
	#[\JMS\Serializer\Annotation\SerializedName('canReadLabels')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canReadLabels = null;
    
    /**
     * Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it's not a folder, can be read.
     * 
     * @var ?bool $canReadRevisions
     */
	#[\JMS\Serializer\Annotation\SerializedName('canReadRevisions')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canReadRevisions = null;
    
    /**
     * Deprecated - use canReadDrive instead.
     * 
     * @var ?bool $canReadTeamDrive
     */
	#[\JMS\Serializer\Annotation\SerializedName('canReadTeamDrive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canReadTeamDrive = null;
    
    /**
     * Whether the current user can remove children from this folder. This is always false when the item isn't a folder. For a folder in a shared drive, use canDeleteChildren or canTrashChildren instead.
     * 
     * @var ?bool $canRemoveChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canRemoveChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canRemoveChildren = null;
    
    /**
     * Whether the current user can remove a parent from the item without adding another parent in the same request. Not populated for shared drive files.
     * 
     * @var ?bool $canRemoveMyDriveParent
     */
	#[\JMS\Serializer\Annotation\SerializedName('canRemoveMyDriveParent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canRemoveMyDriveParent = null;
    
    /**
     * Whether the current user can rename this file.
     * 
     * @var ?bool $canRename
     */
	#[\JMS\Serializer\Annotation\SerializedName('canRename')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canRename = null;
    
    /**
     * Whether the current user can modify the sharing settings for this file.
     * 
     * @var ?bool $canShare
     */
	#[\JMS\Serializer\Annotation\SerializedName('canShare')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canShare = null;
    
    /**
     * Whether the current user can move this file to trash.
     * 
     * @var ?bool $canTrash
     */
	#[\JMS\Serializer\Annotation\SerializedName('canTrash')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canTrash = null;
    
    /**
     * Whether the current user can trash children of this folder. This is false when the item isn't a folder. Only populated for items in shared drives.
     * 
     * @var ?bool $canTrashChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('canTrashChildren')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canTrashChildren = null;
    
    /**
     * Whether the current user can restore this file from trash.
     * 
     * @var ?bool $canUntrash
     */
	#[\JMS\Serializer\Annotation\SerializedName('canUntrash')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canUntrash = null;
    
	public function __construct()
	{
		$this->canAcceptOwnership = null;
		$this->canAddChildren = null;
		$this->canAddFolderFromAnotherDrive = null;
		$this->canAddMyDriveParent = null;
		$this->canChangeCopyRequiresWriterPermission = null;
		$this->canChangeSecurityUpdateEnabled = null;
		$this->canChangeViewersCanCopyContent = null;
		$this->canComment = null;
		$this->canCopy = null;
		$this->canDelete = null;
		$this->canDeleteChildren = null;
		$this->canDownload = null;
		$this->canEdit = null;
		$this->canListChildren = null;
		$this->canModifyContent = null;
		$this->canModifyContentRestriction = null;
		$this->canModifyLabels = null;
		$this->canMoveChildrenOutOfDrive = null;
		$this->canMoveChildrenOutOfTeamDrive = null;
		$this->canMoveChildrenWithinDrive = null;
		$this->canMoveChildrenWithinTeamDrive = null;
		$this->canMoveItemIntoTeamDrive = null;
		$this->canMoveItemOutOfDrive = null;
		$this->canMoveItemOutOfTeamDrive = null;
		$this->canMoveItemWithinDrive = null;
		$this->canMoveItemWithinTeamDrive = null;
		$this->canMoveTeamDriveItem = null;
		$this->canReadDrive = null;
		$this->canReadLabels = null;
		$this->canReadRevisions = null;
		$this->canReadTeamDrive = null;
		$this->canRemoveChildren = null;
		$this->canRemoveMyDriveParent = null;
		$this->canRename = null;
		$this->canShare = null;
		$this->canTrash = null;
		$this->canTrashChildren = null;
		$this->canUntrash = null;
	}
}
