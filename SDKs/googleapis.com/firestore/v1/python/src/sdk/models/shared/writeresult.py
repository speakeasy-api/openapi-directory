"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import value as shared_value
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WriteResult:
    r"""The result of applying a write."""
    
    transform_results: Optional[list[shared_value.Value]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transformResults'), 'exclude': lambda f: f is None }})
    r"""The results of applying each DocumentTransform.FieldTransform, in the same order."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""The last update time of the document after applying the write. Not set after a `delete`. If the write did not actually change the document, this will be the previous update_time."""  
    