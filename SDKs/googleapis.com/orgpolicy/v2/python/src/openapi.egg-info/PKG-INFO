Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/orgpolicy/v2/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.OrgpolicyOrganizationsCustomConstraintsCreateRequest(
    dollar_xgafv="2",
    google_cloud_orgpolicy_v2_custom_constraint_input=shared.GoogleCloudOrgpolicyV2CustomConstraintInput(
        action_type="ALLOW",
        condition="distinctio",
        description="quibusdam",
        display_name="unde",
        method_types=[
            "UPDATE",
            "DELETE",
            "CREATE",
            "UPDATE",
        ],
        name="deserunt",
        resource_types=[
            "iure",
            "magnam",
        ],
    ),
    access_token="debitis",
    alt="json",
    callback="delectus",
    fields_="tempora",
    key="suscipit",
    oauth_token="molestiae",
    parent="minus",
    pretty_print=False,
    quota_user="placeat",
    upload_type="voluptatum",
    upload_protocol="iusto",
)
    
res = s.organizations.orgpolicy_organizations_custom_constraints_create(req, operations.OrgpolicyOrganizationsCustomConstraintsCreateSecurity(
    oauth2="Bearer YOUR_ACCESS_TOKEN_HERE",
    oauth2c="Bearer YOUR_ACCESS_TOKEN_HERE",
))

if res.google_cloud_orgpolicy_v2_custom_constraint is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### organizations

* `orgpolicy_organizations_custom_constraints_create` - Creates a custom constraint. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the organization does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the constraint already exists on the given organization.
* `orgpolicy_organizations_custom_constraints_list` - Retrieves all of the custom constraints that exist on a particular organization resource.

### projects

* `orgpolicy_projects_constraints_list` - Lists constraints that could be applied on the specified resource.
* `orgpolicy_projects_policies_create` - Creates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the policy already exists on the given Google Cloud resource.
* `orgpolicy_projects_policies_delete` - Deletes a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or organization policy does not exist.
* `orgpolicy_projects_policies_get` - Gets a policy on a resource. If no policy is set on the resource, `NOT_FOUND` is returned. The `etag` value can be used with `UpdatePolicy()` to update a policy during read-modify-write.
* `orgpolicy_projects_policies_get_effective_policy` - Gets the effective policy on a resource. This is the result of merging policies in the resource hierarchy and evaluating conditions. The returned policy will not have an `etag` or `condition` set because it is an evaluated policy across multiple resources. Subtrees of Resource Manager resource hierarchy with 'under:' prefix will not be expanded.
* `orgpolicy_projects_policies_list` - Retrieves all of the policies that exist on a particular resource.
* `orgpolicy_projects_policies_patch` - Updates a policy. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the constraint or the policy do not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the policy Note: the supplied policy will perform a full overwrite of all fields.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
