<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class OrderreturnsRefundOperation
{
    /**
     * If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP.
     * 
     * @var ?bool $fullRefund
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullRefund')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $fullRefund = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('partialRefund')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderreturnsPartialRefund')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderreturnsPartialRefund $partialRefund = null;
    
    /**
     * The payment way of issuing refund. Default value is ORIGINAL_FOP if not set.
     * 
     * @var ?string $paymentType
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentType = null;
    
    /**
     * The explanation of the reason.
     * 
     * @var ?string $reasonText
     */
	#[\JMS\Serializer\Annotation\SerializedName('reasonText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reasonText = null;
    
    /**
     * Code of the refund reason.
     * 
     * @var ?string $returnRefundReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnRefundReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $returnRefundReason = null;
    
	public function __construct()
	{
		$this->fullRefund = null;
		$this->partialRefund = null;
		$this->paymentType = null;
		$this->reasonText = null;
		$this->returnRefundReason = null;
	}
}
