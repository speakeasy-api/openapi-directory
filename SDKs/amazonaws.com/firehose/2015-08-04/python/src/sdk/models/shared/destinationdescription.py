"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amazonopensearchserverlessdestinationdescription as shared_amazonopensearchserverlessdestinationdescription
from ..shared import amazonopensearchservicedestinationdescription as shared_amazonopensearchservicedestinationdescription
from ..shared import elasticsearchdestinationdescription as shared_elasticsearchdestinationdescription
from ..shared import extendeds3destinationdescription as shared_extendeds3destinationdescription
from ..shared import httpendpointdestinationdescription as shared_httpendpointdestinationdescription
from ..shared import redshiftdestinationdescription as shared_redshiftdestinationdescription
from ..shared import s3destinationdescription as shared_s3destinationdescription
from ..shared import splunkdestinationdescription as shared_splunkdestinationdescription
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DestinationDescription:
    r"""Describes the destination for a delivery stream."""
    
    destination_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DestinationId') }})  
    amazon_open_search_serverless_destination_description: Optional[shared_amazonopensearchserverlessdestinationdescription.AmazonOpenSearchServerlessDestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmazonOpenSearchServerlessDestinationDescription'), 'exclude': lambda f: f is None }})  
    amazonopensearchservice_destination_description: Optional[shared_amazonopensearchservicedestinationdescription.AmazonopensearchserviceDestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AmazonopensearchserviceDestinationDescription'), 'exclude': lambda f: f is None }})  
    elasticsearch_destination_description: Optional[shared_elasticsearchdestinationdescription.ElasticsearchDestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ElasticsearchDestinationDescription'), 'exclude': lambda f: f is None }})  
    extended_s3_destination_description: Optional[shared_extendeds3destinationdescription.ExtendedS3DestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExtendedS3DestinationDescription'), 'exclude': lambda f: f is None }})  
    http_endpoint_destination_description: Optional[shared_httpendpointdestinationdescription.HTTPEndpointDestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HttpEndpointDestinationDescription'), 'exclude': lambda f: f is None }})  
    redshift_destination_description: Optional[shared_redshiftdestinationdescription.RedshiftDestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedshiftDestinationDescription'), 'exclude': lambda f: f is None }})  
    s3_destination_description: Optional[shared_s3destinationdescription.S3DestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3DestinationDescription'), 'exclude': lambda f: f is None }})  
    splunk_destination_description: Optional[shared_splunkdestinationdescription.SplunkDestinationDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SplunkDestinationDescription'), 'exclude': lambda f: f is None }})  
    