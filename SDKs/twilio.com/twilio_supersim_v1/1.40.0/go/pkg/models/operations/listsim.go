// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListSimServerList = []string{
	"https://supersim.twilio.com",
}

type ListSimSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListSimQueryParams struct {
	// The SID or unique name of the Fleet to which a list of Sims are assigned.
	Fleet *string `queryParam:"style=form,explode=true,name=Fleet"`
	// The [ICCID](https://en.wikipedia.org/wiki/Subscriber_identity_module#ICCID) associated with a Super SIM to filter the list by. Passing this parameter will always return a list containing zero or one SIMs.
	Iccid *string `queryParam:"style=form,explode=true,name=Iccid"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// The status of the Sim resources to read. Can be `new`, `ready`, `active`, `inactive`, or `scheduled`.
	Status *shared.SimEnumStatusEnum `queryParam:"style=form,explode=true,name=Status"`
}

type ListSimRequest struct {
	QueryParams ListSimQueryParams
	Security    ListSimSecurity
	ServerURL   *string
}

type ListSimListSimResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListSimListSimResponse - OK
type ListSimListSimResponse struct {
	Meta *ListSimListSimResponseMeta `json:"meta,omitempty"`
	Sims []shared.SupersimV1Sim      `json:"sims,omitempty"`
}

type ListSimResponse struct {
	ContentType string
	// OK
	ListSimResponse *ListSimListSimResponse
	StatusCode      int
	RawResponse     *http.Response
}
