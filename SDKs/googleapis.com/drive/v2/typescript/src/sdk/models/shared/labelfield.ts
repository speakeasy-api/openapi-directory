/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { User } from "./user";
import { Expose, Type } from "class-transformer";

/**
 * Representation of a label field.
 */
export class LabelField extends SpeakeasyBase {
  /**
   * Only present if valueType is dateString. RFC 3339 formatted date: YYYY-MM-DD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateString" })
  dateString?: Date[];

  /**
   * The identifier of this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Only present if valueType is integer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integer" })
  integer?: string[];

  /**
   * This is always drive#labelField.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Only present if valueType is selection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selection" })
  selection?: string[];

  /**
   * Only present if valueType is text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: string[];

  /**
   * Only present if valueType is user.
   */
  @SpeakeasyMetadata({ elemType: User })
  @Expose({ name: "user" })
  @Type(() => User)
  user?: User[];

  /**
   * The field type. While new values may be supported in the future, the following are currently allowed:
   *
   * @remarks
   * - dateString
   * - integer
   * - selection
   * - text
   * - user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueType" })
  valueType?: string;
}
