/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LatLng } from "./latlng";
import { Expose, Type } from "class-transformer";

/**
 * Rectangle determined by min and max `LatLng` pairs.
 */
export class GoogleCloudVisionV1p2beta1LatLongRect extends SpeakeasyBase {
  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxLatLng" })
  @Type(() => LatLng)
  maxLatLng?: LatLng;

  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minLatLng" })
  @Type(() => LatLng)
  minLatLng?: LatLng;
}
