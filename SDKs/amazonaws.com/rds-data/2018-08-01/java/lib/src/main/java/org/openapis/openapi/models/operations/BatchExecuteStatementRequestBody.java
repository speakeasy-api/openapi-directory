/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BatchExecuteStatementRequestBody {
    /**
     * The name of the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("database")
    public String database;

    public BatchExecuteStatementRequestBody withDatabase(String database) {
        this.database = database;
        return this;
    }
    
    /**
     * &lt;p&gt;The parameter set for the batch operation.&lt;/p&gt; &lt;p&gt;The SQL statement is executed as many times as the number of parameter sets provided. To execute a SQL statement with no parameters, use one of the following options:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Specify one or more empty parameter sets.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use the &lt;code&gt;ExecuteStatement&lt;/code&gt; operation instead of the &lt;code&gt;BatchExecuteStatement&lt;/code&gt; operation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;note&gt; &lt;p&gt;Array parameters are not supported.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameterSets")
    public org.openapis.openapi.models.shared.SqlParameter[][] parameterSets;

    public BatchExecuteStatementRequestBody withParameterSets(org.openapis.openapi.models.shared.SqlParameter[][] parameterSets) {
        this.parameterSets = parameterSets;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of the Aurora Serverless DB cluster.
     */
    @JsonProperty("resourceArn")
    public String resourceArn;

    public BatchExecuteStatementRequestBody withResourceArn(String resourceArn) {
        this.resourceArn = resourceArn;
        return this;
    }
    
    /**
     * &lt;p&gt;The name of the database schema.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Currently, the &lt;code&gt;schema&lt;/code&gt; parameter isn't supported.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schema")
    public String schema;

    public BatchExecuteStatementRequestBody withSchema(String schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * &lt;p&gt;The ARN of the secret that enables access to the DB cluster. Enter the database user name and password for the credentials in the secret.&lt;/p&gt; &lt;p&gt;For information about creating the secret, see &lt;a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html"&gt;Create a database secret&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonProperty("secretArn")
    public String secretArn;

    public BatchExecuteStatementRequestBody withSecretArn(String secretArn) {
        this.secretArn = secretArn;
        return this;
    }
    
    /**
     * The SQL statement to run. Don't include a semicolon (;) at the end of the SQL statement.
     */
    @JsonProperty("sql")
    public String sql;

    public BatchExecuteStatementRequestBody withSql(String sql) {
        this.sql = sql;
        return this;
    }
    
    /**
     * &lt;p&gt;The identifier of a transaction that was started by using the &lt;code&gt;BeginTransaction&lt;/code&gt; operation. Specify the transaction ID of the transaction that you want to include the SQL statement in.&lt;/p&gt; &lt;p&gt;If the SQL statement is not part of a transaction, don't set this parameter.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionId")
    public String transactionId;

    public BatchExecuteStatementRequestBody withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    public BatchExecuteStatementRequestBody(@JsonProperty("resourceArn") String resourceArn, @JsonProperty("secretArn") String secretArn, @JsonProperty("sql") String sql) {
        this.resourceArn = resourceArn;
        this.secretArn = secretArn;
        this.sql = sql;
  }
}
