// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LogDriverEnum string

const (
	LogDriverEnumJSONFile LogDriverEnum = "json-file"
	LogDriverEnumSyslog   LogDriverEnum = "syslog"
	LogDriverEnumJournald LogDriverEnum = "journald"
	LogDriverEnumGelf     LogDriverEnum = "gelf"
	LogDriverEnumFluentd  LogDriverEnum = "fluentd"
	LogDriverEnumAwslogs  LogDriverEnum = "awslogs"
	LogDriverEnumSplunk   LogDriverEnum = "splunk"
)

func (e *LogDriverEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json-file":
		fallthrough
	case "syslog":
		fallthrough
	case "journald":
		fallthrough
	case "gelf":
		fallthrough
	case "fluentd":
		fallthrough
	case "awslogs":
		fallthrough
	case "splunk":
		*e = LogDriverEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LogDriverEnum: %s", s)
	}
}
