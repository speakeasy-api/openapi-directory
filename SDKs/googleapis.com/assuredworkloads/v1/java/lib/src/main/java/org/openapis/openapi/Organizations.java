/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class Organizations {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public Organizations(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListResponse assuredworkloadsOrganizationsLocationsOperationsList(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListRequest.class, baseUrl, "/v1/{name}/operations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsOperationsListResponse(contentType, httpRes.statusCode()) {{
            googleLongrunningListOperationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningListOperationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningListOperationsResponse.class);
                res.googleLongrunningListOperationsResponse = out;
            }
        }

        return res;
    }

    /**
     * Creates Assured Workload.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateResponse assuredworkloadsOrganizationsLocationsWorkloadsCreate(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateRequest.class, baseUrl, "/v1/{parent}/workloads", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudAssuredworkloadsV1WorkloadInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsCreateResponse(contentType, httpRes.statusCode()) {{
            googleLongrunningOperation = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleLongrunningOperation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleLongrunningOperation.class);
                res.googleLongrunningOperation = out;
            }
        }

        return res;
    }

    /**
     * Deletes the workload. Make sure that workload's direct children are already in a deleted state, otherwise the request will fail with a FAILED_PRECONDITION error.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteResponse assuredworkloadsOrganizationsLocationsWorkloadsDelete(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteRequest.class, baseUrl, "/v1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsDeleteResponse(contentType, httpRes.statusCode()) {{
            googleProtobufEmpty = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleProtobufEmpty = out;
            }
        }

        return res;
    }

    /**
     * Lists Assured Workloads under a CRM Node.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListResponse assuredworkloadsOrganizationsLocationsWorkloadsList(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListRequest.class, baseUrl, "/v1/{parent}/workloads", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1ListWorkloadsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1ListWorkloadsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1ListWorkloadsResponse.class);
                res.googleCloudAssuredworkloadsV1ListWorkloadsResponse = out;
            }
        }

        return res;
    }

    /**
     * Update the permissions settings for an existing partner workload. For force updates don't set etag field in the Workload. Only one update operation per workload can be in progress.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsResponse assuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissions(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsRequest.class, baseUrl, "/v1/{name}:mutatePartnerPermissions", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudAssuredworkloadsV1MutatePartnerPermissionsRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsMutatePartnerPermissionsResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1Workload = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1Workload out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1Workload.class);
                res.googleCloudAssuredworkloadsV1Workload = out;
            }
        }

        return res;
    }

    /**
     * Updates an existing workload. Currently allows updating of workload display_name and labels. For force updates don't set etag field in the Workload. Only one update operation per workload can be in progress.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchResponse assuredworkloadsOrganizationsLocationsWorkloadsPatch(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchRequest.class, baseUrl, "/v1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("PATCH");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudAssuredworkloadsV1WorkloadInput", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsPatchResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1Workload = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1Workload out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1Workload.class);
                res.googleCloudAssuredworkloadsV1Workload = out;
            }
        }

        return res;
    }

    /**
     * Restrict the list of resources allowed in the Workload environment. The current list of allowed products can be found at https://cloud.google.com/assured-workloads/docs/supported-products In addition to assuredworkloads.workload.update permission, the user should also have orgpolicy.policy.set permission on the folder resource to use this functionality.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesResponse assuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResources(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesRequest.class, baseUrl, "/v1/{name}:restrictAllowedResources", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudAssuredworkloadsV1RestrictAllowedResourcesRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsRestrictAllowedResourcesResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1RestrictAllowedResourcesResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleCloudAssuredworkloadsV1RestrictAllowedResourcesResponse = out;
            }
        }

        return res;
    }

    /**
     * Acknowledges an existing violation. By acknowledging a violation, users acknowledge the existence of a compliance violation in their workload and decide to ignore it due to a valid business justification. Acknowledgement is a permanent operation and it cannot be reverted.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeResponse assuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledge(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeRequest.class, baseUrl, "/v1/{name}:acknowledge", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "googleCloudAssuredworkloadsV1AcknowledgeViolationRequest", "json");
        req.setBody(serializedRequestBody);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsAcknowledgeResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1AcknowledgeViolationResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                java.util.Map<String, Object> out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), new TypeReference<java.util.Map<String, Object>>() {});
                res.googleCloudAssuredworkloadsV1AcknowledgeViolationResponse = out;
            }
        }

        return res;
    }

    /**
     * Retrieves Assured Workload Violation based on ID.
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetResponse assuredworkloadsOrganizationsLocationsWorkloadsViolationsGet(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetRequest.class, baseUrl, "/v1/{name}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsGetResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1Violation = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1Violation out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1Violation.class);
                res.googleCloudAssuredworkloadsV1Violation = out;
            }
        }

        return res;
    }

    /**
     * Lists the Violations in the AssuredWorkload Environment. Callers may also choose to read across multiple Workloads as per [AIP-159](https://google.aip.dev/159) by using '-' (the hyphen or dash character) as a wildcard character instead of workload-id in the parent. Format `organizations/{org_id}/locations/{location}/workloads/-`
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListResponse assuredworkloadsOrganizationsLocationsWorkloadsViolationsList(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListRequest request, org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListRequest.class, baseUrl, "/v1/{parent}/violations", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListResponse res = new org.openapis.openapi.models.operations.AssuredworkloadsOrganizationsLocationsWorkloadsViolationsListResponse(contentType, httpRes.statusCode()) {{
            googleCloudAssuredworkloadsV1ListViolationsResponse = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1ListViolationsResponse out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.GoogleCloudAssuredworkloadsV1ListViolationsResponse.class);
                res.googleCloudAssuredworkloadsV1ListViolationsResponse = out;
            }
        }

        return res;
    }
}