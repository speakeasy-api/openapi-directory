"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cachebehavior as shared_cachebehavior
from ..shared import cachebehaviorperpath as shared_cachebehaviorperpath
from ..shared import cachesettings as shared_cachesettings
from ..shared import inputorigin as shared_inputorigin
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDistributionRequest:
    
    distribution_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('distributionName') }})  
    cache_behaviors: Optional[list[shared_cachebehaviorperpath.CacheBehaviorPerPath]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cacheBehaviors'), 'exclude': lambda f: f is None }})  
    cache_behavior_settings: Optional[shared_cachesettings.CacheSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cacheBehaviorSettings'), 'exclude': lambda f: f is None }})  
    default_cache_behavior: Optional[shared_cachebehavior.CacheBehavior] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultCacheBehavior'), 'exclude': lambda f: f is None }})  
    is_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isEnabled'), 'exclude': lambda f: f is None }})  
    origin: Optional[shared_inputorigin.InputOrigin] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin'), 'exclude': lambda f: f is None }})  
    