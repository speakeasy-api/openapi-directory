/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The structure containing configurations related to insights.
 */
export class UpdateGroupRequestBodyInsightsConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "InsightsEnabled" })
  insightsEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationsEnabled" })
  notificationsEnabled?: boolean;
}

export class UpdateGroupRequestBody extends SpeakeasyBase {
  /**
   * The updated filter expression defining criteria by which to group traces.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FilterExpression" })
  filterExpression?: string;

  /**
   * The ARN that was generated upon creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GroupARN" })
  groupARN?: string;

  /**
   * The case-sensitive name of the group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "GroupName" })
  groupName?: string;

  /**
   * The structure containing configurations related to insights.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InsightsConfiguration" })
  @Type(() => UpdateGroupRequestBodyInsightsConfiguration)
  insightsConfiguration?: UpdateGroupRequestBodyInsightsConfiguration;
}

export class UpdateGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateGroupRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottledException
   */
  @SpeakeasyMetadata()
  throttledException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateGroupResult?: shared.UpdateGroupResult;
}
