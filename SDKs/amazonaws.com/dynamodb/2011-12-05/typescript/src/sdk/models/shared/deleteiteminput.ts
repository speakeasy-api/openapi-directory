/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ExpectedAttributeValue } from "./expectedattributevalue";
import { Key } from "./key";
import { ReturnValueEnum } from "./returnvalueenum";
import { Expose, Transform, Type } from "class-transformer";

export class DeleteItemInput extends SpeakeasyBase {
  /**
   * Designates an attribute for a conditional modification. The <code>Expected</code> parameter allows you to provide an attribute name, and whether or not Amazon DynamoDB should check to see if the attribute has a particular value before modifying it.
   */
  @SpeakeasyMetadata({ elemType: ExpectedAttributeValue })
  @Expose({ name: "Expected" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ExpectedAttributeValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ExpectedAttributeValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  expected?: Record<string, ExpectedAttributeValue>;

  /**
   * The primary key that uniquely identifies each item in a table. A primary key can be a one attribute (hash) primary key or a two attribute (hash-and-range) primary key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Key" })
  @Type(() => Key)
  key: Key;

  /**
   * <p>Use this parameter if you want to get the attribute name-value pairs before or after they are modified. For <code>PUT</code> operations, the possible parameter values are <code>NONE</code> (default) or <code>ALL_OLD</code>. For update operations, the possible parameter values are <code>NONE</code> (default) or <code>ALL_OLD</code>, <code>UPDATED_OLD</code>, <code>ALL_NEW</code> or <code>UPDATED_NEW</code>.</p> <ul> <li><code>NONE</code>: Nothing is returned.</li> <li><code>ALL_OLD</code>: Returns the attributes of the item as they were before the operation.</li> <li><code>UPDATED_OLD</code>: Returns the values of the updated attributes, only, as they were before the operation.</li> <li><code>ALL_NEW</code>: Returns all the attributes and their new values after the operation.</li> <li><code>UPDATED_NEW</code>: Returns the values of the updated attributes, only, as they are after the operation.</li> </ul>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ReturnValues" })
  returnValues?: ReturnValueEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName: string;
}
