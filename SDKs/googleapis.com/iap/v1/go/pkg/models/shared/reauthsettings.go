// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReauthSettingsMethodEnum - Reauth method requested.
type ReauthSettingsMethodEnum string

const (
	ReauthSettingsMethodEnumMethodUnspecified     ReauthSettingsMethodEnum = "METHOD_UNSPECIFIED"
	ReauthSettingsMethodEnumLogin                 ReauthSettingsMethodEnum = "LOGIN"
	ReauthSettingsMethodEnumPassword              ReauthSettingsMethodEnum = "PASSWORD"
	ReauthSettingsMethodEnumSecureKey             ReauthSettingsMethodEnum = "SECURE_KEY"
	ReauthSettingsMethodEnumEnrolledSecondFactors ReauthSettingsMethodEnum = "ENROLLED_SECOND_FACTORS"
)

func (e *ReauthSettingsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METHOD_UNSPECIFIED":
		fallthrough
	case "LOGIN":
		fallthrough
	case "PASSWORD":
		fallthrough
	case "SECURE_KEY":
		fallthrough
	case "ENROLLED_SECOND_FACTORS":
		*e = ReauthSettingsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReauthSettingsMethodEnum: %s", s)
	}
}

// ReauthSettingsPolicyTypeEnum - How IAP determines the effective policy in cases of hierarchial policies. Policies are merged from higher in the hierarchy to lower in the hierarchy.
type ReauthSettingsPolicyTypeEnum string

const (
	ReauthSettingsPolicyTypeEnumPolicyTypeUnspecified ReauthSettingsPolicyTypeEnum = "POLICY_TYPE_UNSPECIFIED"
	ReauthSettingsPolicyTypeEnumMinimum               ReauthSettingsPolicyTypeEnum = "MINIMUM"
	ReauthSettingsPolicyTypeEnumDefault               ReauthSettingsPolicyTypeEnum = "DEFAULT"
)

func (e *ReauthSettingsPolicyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "POLICY_TYPE_UNSPECIFIED":
		fallthrough
	case "MINIMUM":
		fallthrough
	case "DEFAULT":
		*e = ReauthSettingsPolicyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReauthSettingsPolicyTypeEnum: %s", s)
	}
}

// ReauthSettings - Configuration for IAP reauthentication policies.
type ReauthSettings struct {
	// Reauth session lifetime, how long before a user has to reauthenticate again.
	MaxAge *string `json:"maxAge,omitempty"`
	// Reauth method requested.
	Method *ReauthSettingsMethodEnum `json:"method,omitempty"`
	// How IAP determines the effective policy in cases of hierarchial policies. Policies are merged from higher in the hierarchy to lower in the hierarchy.
	PolicyType *ReauthSettingsPolicyTypeEnum `json:"policyType,omitempty"`
}
