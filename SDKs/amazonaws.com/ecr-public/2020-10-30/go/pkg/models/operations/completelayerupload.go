// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CompleteLayerUploadXAmzTargetEnum
type CompleteLayerUploadXAmzTargetEnum string

const (
	CompleteLayerUploadXAmzTargetEnumSpencerFrontendServiceCompleteLayerUpload CompleteLayerUploadXAmzTargetEnum = "SpencerFrontendService.CompleteLayerUpload"
)

func (e *CompleteLayerUploadXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SpencerFrontendService.CompleteLayerUpload":
		*e = CompleteLayerUploadXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CompleteLayerUploadXAmzTargetEnum: %s", s)
	}
}

type CompleteLayerUploadHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CompleteLayerUploadXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CompleteLayerUploadRequest struct {
	Headers CompleteLayerUploadHeaders
	Request shared.CompleteLayerUploadRequest `request:"mediaType=application/json"`
}

type CompleteLayerUploadResponse struct {
	// Success
	CompleteLayerUploadResponse *shared.CompleteLayerUploadResponse
	ContentType                 string
	// EmptyUploadException
	EmptyUploadException interface{}
	// InvalidLayerException
	InvalidLayerException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// LayerAlreadyExistsException
	LayerAlreadyExistsException interface{}
	// LayerPartTooSmallException
	LayerPartTooSmallException interface{}
	// RegistryNotFoundException
	RegistryNotFoundException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// UnsupportedCommandException
	UnsupportedCommandException interface{}
	// UploadNotFoundException
	UploadNotFoundException interface{}
}
