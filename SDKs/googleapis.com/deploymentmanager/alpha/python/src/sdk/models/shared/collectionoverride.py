"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import methodmap as shared_methodmap
from ..shared import options as shared_options
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CollectionOverride:
    r"""CollectionOverride allows resource handling overrides for specific resources within a BaseType"""
    
    collection: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collection'), 'exclude': lambda f: f is None }})
    r"""The collection that identifies this resource within its service."""  
    method_map: Optional[shared_methodmap.MethodMap] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('methodMap'), 'exclude': lambda f: f is None }})
    r"""Deployment Manager will call these methods during the events of creation/deletion/update/get/setIamPolicy"""  
    options: Optional[shared_options.Options] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})
    r"""Options allows customized resource handling by Deployment Manager."""  
    