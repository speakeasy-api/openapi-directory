// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceConfigNetworkConfigEnum - The type of network configuration on the instance.
type InstanceConfigNetworkConfigEnum string

const (
	InstanceConfigNetworkConfigEnumNetworkconfigUnspecified InstanceConfigNetworkConfigEnum = "NETWORKCONFIG_UNSPECIFIED"
	InstanceConfigNetworkConfigEnumSingleVlan               InstanceConfigNetworkConfigEnum = "SINGLE_VLAN"
	InstanceConfigNetworkConfigEnumMultiVlan                InstanceConfigNetworkConfigEnum = "MULTI_VLAN"
)

func (e InstanceConfigNetworkConfigEnum) ToPointer() *InstanceConfigNetworkConfigEnum {
	return &e
}

func (e *InstanceConfigNetworkConfigEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NETWORKCONFIG_UNSPECIFIED":
		fallthrough
	case "SINGLE_VLAN":
		fallthrough
	case "MULTI_VLAN":
		*e = InstanceConfigNetworkConfigEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceConfigNetworkConfigEnum: %v", v)
	}
}

// InstanceConfigInput - Configuration parameters for a new instance.
type InstanceConfigInput struct {
	// If true networks can be from different projects of the same vendor account.
	AccountNetworksEnabled *bool `json:"accountNetworksEnabled,omitempty"`
	// A network.
	ClientNetwork *NetworkAddress `json:"clientNetwork,omitempty"`
	// Whether the instance should be provisioned with Hyperthreading enabled.
	Hyperthreading *bool `json:"hyperthreading,omitempty"`
	// A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
	ID *string `json:"id,omitempty"`
	// Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	InstanceType *string `json:"instanceType,omitempty"`
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
	LogicalInterfaces []GoogleCloudBaremetalsolutionV2LogicalInterface `json:"logicalInterfaces,omitempty"`
	// The type of network configuration on the instance.
	NetworkConfig *InstanceConfigNetworkConfigEnum `json:"networkConfig,omitempty"`
	// Server network template name. Filled if InstanceConfig.multivlan_config is true.
	NetworkTemplate *string `json:"networkTemplate,omitempty"`
	// OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	OsImage *string `json:"osImage,omitempty"`
	// A network.
	PrivateNetwork *NetworkAddress `json:"privateNetwork,omitempty"`
	// User note field, it can be used by customers to add additional information for the BMS Ops team .
	UserNote *string `json:"userNote,omitempty"`
}

// InstanceConfig - Configuration parameters for a new instance.
type InstanceConfig struct {
	// If true networks can be from different projects of the same vendor account.
	AccountNetworksEnabled *bool `json:"accountNetworksEnabled,omitempty"`
	// A network.
	ClientNetwork *NetworkAddress `json:"clientNetwork,omitempty"`
	// Whether the instance should be provisioned with Hyperthreading enabled.
	Hyperthreading *bool `json:"hyperthreading,omitempty"`
	// A transient unique identifier to idenfity an instance within an ProvisioningConfig request.
	ID *string `json:"id,omitempty"`
	// Instance type. [Available types](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	InstanceType *string `json:"instanceType,omitempty"`
	// List of logical interfaces for the instance. The number of logical interfaces will be the same as number of hardware bond/nic on the chosen network template. Filled if InstanceConfig.multivlan_config is true.
	LogicalInterfaces []GoogleCloudBaremetalsolutionV2LogicalInterface `json:"logicalInterfaces,omitempty"`
	// Output only. The name of the instance config.
	Name *string `json:"name,omitempty"`
	// The type of network configuration on the instance.
	NetworkConfig *InstanceConfigNetworkConfigEnum `json:"networkConfig,omitempty"`
	// Server network template name. Filled if InstanceConfig.multivlan_config is true.
	NetworkTemplate *string `json:"networkTemplate,omitempty"`
	// OS image to initialize the instance. [Available images](https://cloud.google.com/bare-metal/docs/bms-planning#server_configurations)
	OsImage *string `json:"osImage,omitempty"`
	// A network.
	PrivateNetwork *NetworkAddress `json:"privateNetwork,omitempty"`
	// User note field, it can be used by customers to add additional information for the BMS Ops team .
	UserNote *string `json:"userNote,omitempty"`
}
