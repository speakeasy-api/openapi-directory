"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolumeConfig = exports.VolumeConfigInput = exports.VolumeConfigTypeEnum = exports.VolumeConfigProtocolEnum = exports.VolumeConfigPerformanceTierEnum = void 0;
var utils_1 = require("../../../internal/utils");
var lunrange_1 = require("./lunrange");
var nfsexport_1 = require("./nfsexport");
var class_transformer_1 = require("class-transformer");
/**
 * Performance tier of the Volume. Default is SHARED.
 */
var VolumeConfigPerformanceTierEnum;
(function (VolumeConfigPerformanceTierEnum) {
    VolumeConfigPerformanceTierEnum["VolumePerformanceTierUnspecified"] = "VOLUME_PERFORMANCE_TIER_UNSPECIFIED";
    VolumeConfigPerformanceTierEnum["VolumePerformanceTierShared"] = "VOLUME_PERFORMANCE_TIER_SHARED";
    VolumeConfigPerformanceTierEnum["VolumePerformanceTierAssigned"] = "VOLUME_PERFORMANCE_TIER_ASSIGNED";
    VolumeConfigPerformanceTierEnum["VolumePerformanceTierHt"] = "VOLUME_PERFORMANCE_TIER_HT";
})(VolumeConfigPerformanceTierEnum = exports.VolumeConfigPerformanceTierEnum || (exports.VolumeConfigPerformanceTierEnum = {}));
/**
 * Volume protocol.
 */
var VolumeConfigProtocolEnum;
(function (VolumeConfigProtocolEnum) {
    VolumeConfigProtocolEnum["ProtocolUnspecified"] = "PROTOCOL_UNSPECIFIED";
    VolumeConfigProtocolEnum["ProtocolFc"] = "PROTOCOL_FC";
    VolumeConfigProtocolEnum["ProtocolNfs"] = "PROTOCOL_NFS";
})(VolumeConfigProtocolEnum = exports.VolumeConfigProtocolEnum || (exports.VolumeConfigProtocolEnum = {}));
/**
 * The type of this Volume.
 */
var VolumeConfigTypeEnum;
(function (VolumeConfigTypeEnum) {
    VolumeConfigTypeEnum["TypeUnspecified"] = "TYPE_UNSPECIFIED";
    VolumeConfigTypeEnum["Flash"] = "FLASH";
    VolumeConfigTypeEnum["Disk"] = "DISK";
})(VolumeConfigTypeEnum = exports.VolumeConfigTypeEnum || (exports.VolumeConfigTypeEnum = {}));
/**
 * Configuration parameters for a new volume.
 */
var VolumeConfigInput = /** @class */ (function (_super) {
    __extends(VolumeConfigInput, _super);
    function VolumeConfigInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gcpService" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "gcpService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: lunrange_1.LunRange }),
        (0, class_transformer_1.Expose)({ name: "lunRanges" }),
        (0, class_transformer_1.Type)(function () { return lunrange_1.LunRange; }),
        __metadata("design:type", Array)
    ], VolumeConfigInput.prototype, "lunRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "machineIds" }),
        __metadata("design:type", Array)
    ], VolumeConfigInput.prototype, "machineIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: nfsexport_1.NfsExport }),
        (0, class_transformer_1.Expose)({ name: "nfsExports" }),
        (0, class_transformer_1.Type)(function () { return nfsexport_1.NfsExport; }),
        __metadata("design:type", Array)
    ], VolumeConfigInput.prototype, "nfsExports", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "performanceTier" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "performanceTier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protocol" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sizeGb" }),
        __metadata("design:type", Number)
    ], VolumeConfigInput.prototype, "sizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotsEnabled" }),
        __metadata("design:type", Boolean)
    ], VolumeConfigInput.prototype, "snapshotsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageAggregatePool" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "storageAggregatePool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userNote" }),
        __metadata("design:type", String)
    ], VolumeConfigInput.prototype, "userNote", void 0);
    return VolumeConfigInput;
}(utils_1.SpeakeasyBase));
exports.VolumeConfigInput = VolumeConfigInput;
/**
 * Configuration parameters for a new volume.
 */
var VolumeConfig = /** @class */ (function (_super) {
    __extends(VolumeConfig, _super);
    function VolumeConfig() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gcpService" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "gcpService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: lunrange_1.LunRange }),
        (0, class_transformer_1.Expose)({ name: "lunRanges" }),
        (0, class_transformer_1.Type)(function () { return lunrange_1.LunRange; }),
        __metadata("design:type", Array)
    ], VolumeConfig.prototype, "lunRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "machineIds" }),
        __metadata("design:type", Array)
    ], VolumeConfig.prototype, "machineIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: nfsexport_1.NfsExport }),
        (0, class_transformer_1.Expose)({ name: "nfsExports" }),
        (0, class_transformer_1.Type)(function () { return nfsexport_1.NfsExport; }),
        __metadata("design:type", Array)
    ], VolumeConfig.prototype, "nfsExports", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "performanceTier" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "performanceTier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protocol" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "protocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sizeGb" }),
        __metadata("design:type", Number)
    ], VolumeConfig.prototype, "sizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotsEnabled" }),
        __metadata("design:type", Boolean)
    ], VolumeConfig.prototype, "snapshotsEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageAggregatePool" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "storageAggregatePool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userNote" }),
        __metadata("design:type", String)
    ], VolumeConfig.prototype, "userNote", void 0);
    return VolumeConfig;
}(utils_1.SpeakeasyBase));
exports.VolumeConfig = VolumeConfig;
