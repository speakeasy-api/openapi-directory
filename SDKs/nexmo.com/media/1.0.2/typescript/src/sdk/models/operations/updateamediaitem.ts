/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class UpdateAMediaItemRequestBody extends SpeakeasyBase {
  /**
   * A description of the media file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=description" })
  description?: string;

  /**
   * The maximum number of times the file may be downloaded. Unlimited when not provided.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=max_downloads_allowed" })
  maxDownloadsAllowed?: number;

  /**
   * A string containing metadata about the media file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=metadata_primary" })
  metadataPrimary?: string;

  /**
   * A string containing further metadata about the media file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=metadata_secondary" })
  metadataSecondary?: string;

  /**
   * The MIME type of the media file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=mime_type" })
  mimeType?: string;

  /**
   * Whether the item is publicly available without authentication.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=public" })
  public?: boolean;

  /**
   * A string containing a title for the media file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=title" })
  title?: string;
}

export class UpdateAMediaItemResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
