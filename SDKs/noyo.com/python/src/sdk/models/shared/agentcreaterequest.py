"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import agencydetails as shared_agencydetails
from ..shared import generalagencydetails as shared_generalagencydetails
from ..shared import splitcommissiondetails as shared_splitcommissiondetails
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AgentCreateRequestAgentDetails:
    r"""Details about the agent"""
    
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_name'), 'exclude': lambda f: f is None }})
    r"""The first name of the agent"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_name'), 'exclude': lambda f: f is None }})
    r"""The last name of the agent"""  
    license_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('license_number'), 'exclude': lambda f: f is None }})
    r"""The license number for the agent"""  
    national_producer_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('national_producer_number'), 'exclude': lambda f: f is None }})
    r"""The national producer number for the agent"""  
    tax_id_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax_id_number'), 'exclude': lambda f: f is None }})
    r"""The tax ID number for the agent"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AgentCreateRequest:
    
    agency_details: Optional[shared_agencydetails.AgencyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agency_details'), 'exclude': lambda f: f is None }})  
    agent_details: Optional[AgentCreateRequestAgentDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent_details'), 'exclude': lambda f: f is None }})
    r"""Details about the agent"""  
    commission_details: Optional[list[shared_splitcommissiondetails.SplitCommissionDetails]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commission_details'), 'exclude': lambda f: f is None }})
    r"""Details of the agent commission structure"""  
    general_agency_details: Optional[shared_generalagencydetails.GeneralAgencyDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('general_agency_details'), 'exclude': lambda f: f is None }})  
    license_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('license_number'), 'exclude': lambda f: f is None }})
    r"""License number of the agent"""  
    signature_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signature_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The signature date for the agent on the application"""  
    