"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tablecelllocation as shared_tablecelllocation
from ..shared import tablecellproperties as shared_tablecellproperties
from ..shared import textcontent as shared_textcontent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TableCell:
    r"""Properties and contents of each table cell."""
    
    column_span: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnSpan'), 'exclude': lambda f: f is None }})
    r"""Column span of the cell."""  
    location: Optional[shared_tablecelllocation.TableCellLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""A location of a single table cell within a table."""  
    row_span: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowSpan'), 'exclude': lambda f: f is None }})
    r"""Row span of the cell."""  
    table_cell_properties: Optional[shared_tablecellproperties.TableCellProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableCellProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of the TableCell."""  
    text: Optional[shared_textcontent.TextContent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The general text content. The text must reside in a compatible shape (e.g. text box or rectangle) or a table cell in a page."""  
    