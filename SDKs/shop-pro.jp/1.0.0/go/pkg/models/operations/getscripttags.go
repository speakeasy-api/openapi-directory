// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetScriptTagsSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type GetScriptTagsRequest struct {
	Security GetScriptTagsSecurity
}

// GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum - スクリプトを出力するページ。
//
// - `all`: ショップページと注文完了ページの両方
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
// - `cart`: カートの途中のページ
type GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum string

const (
	GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnumAll        GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum = "all"
	GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnumShop       GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum = "shop"
	GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnumThanksPage GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum = "thanks_page"
	GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnumCart       GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum = "cart"
)

func (e *GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "shop":
		fallthrough
	case "thanks_page":
		fallthrough
	case "cart":
		*e = GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum: %s", s)
	}
}

type GetScriptTags200ApplicationJSONScriptTags struct {
	// スクリプトを出力するページ。
	//
	// - `all`: ショップページと注文完了ページの両方
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	// - `cart`: カートの途中のページ
	//
	DisplayScope *GetScriptTags200ApplicationJSONScriptTagsDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトタグID
	ID *int64 `json:"id,omitempty"`
	// 作成日時
	MakeDate *int64 `json:"make_date,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
	// 更新日時
	UpdateDate *int64 `json:"update_date,omitempty"`
}

type GetScriptTags200ApplicationJSON struct {
	ScriptTags []GetScriptTags200ApplicationJSONScriptTags `json:"script_tags,omitempty"`
}

type GetScriptTagsResponse struct {
	ContentType                           string
	StatusCode                            int
	RawResponse                           *http.Response
	GetScriptTags200ApplicationJSONObject *GetScriptTags200ApplicationJSON
}
