// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type JobsProjectsCompleteSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type JobsProjectsCompleteSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type JobsProjectsCompleteSecurity struct {
	Option1 *JobsProjectsCompleteSecurityOption1 `security:"option"`
	Option2 *JobsProjectsCompleteSecurityOption2 `security:"option"`
}

// JobsProjectsCompleteScopeEnum - Optional. The scope of the completion. The defaults is CompletionScope.PUBLIC.
type JobsProjectsCompleteScopeEnum string

const (
	JobsProjectsCompleteScopeEnumCompletionScopeUnspecified JobsProjectsCompleteScopeEnum = "COMPLETION_SCOPE_UNSPECIFIED"
	JobsProjectsCompleteScopeEnumTenant                     JobsProjectsCompleteScopeEnum = "TENANT"
	JobsProjectsCompleteScopeEnumPublic                     JobsProjectsCompleteScopeEnum = "PUBLIC"
)

func (e *JobsProjectsCompleteScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPLETION_SCOPE_UNSPECIFIED":
		fallthrough
	case "TENANT":
		fallthrough
	case "PUBLIC":
		*e = JobsProjectsCompleteScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsProjectsCompleteScopeEnum: %s", s)
	}
}

// JobsProjectsCompleteTypeEnum - Optional. The completion topic. The default is CompletionType.COMBINED.
type JobsProjectsCompleteTypeEnum string

const (
	JobsProjectsCompleteTypeEnumCompletionTypeUnspecified JobsProjectsCompleteTypeEnum = "COMPLETION_TYPE_UNSPECIFIED"
	JobsProjectsCompleteTypeEnumJobTitle                  JobsProjectsCompleteTypeEnum = "JOB_TITLE"
	JobsProjectsCompleteTypeEnumCompanyName               JobsProjectsCompleteTypeEnum = "COMPANY_NAME"
	JobsProjectsCompleteTypeEnumCombined                  JobsProjectsCompleteTypeEnum = "COMBINED"
)

func (e *JobsProjectsCompleteTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPLETION_TYPE_UNSPECIFIED":
		fallthrough
	case "JOB_TITLE":
		fallthrough
	case "COMPANY_NAME":
		fallthrough
	case "COMBINED":
		*e = JobsProjectsCompleteTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobsProjectsCompleteTypeEnum: %s", s)
	}
}

type JobsProjectsCompleteRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Optional. If provided, restricts completion to specified company. The format is "projects/{project_id}/companies/{company_id}", for example, "projects/api-test-project/companies/foo".
	CompanyName *string `queryParam:"style=form,explode=true,name=companyName"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Deprecated. Use language_codes instead. Optional. The language of the query. This is the BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47). For CompletionType.JOB_TITLE type, only open jobs with the same language_code are returned. For CompletionType.COMPANY_NAME type, only companies having open jobs with the same language_code are returned. For CompletionType.COMBINED type, only open jobs with the same language_code or companies having open jobs with the same language_code are returned. The maximum number of allowed characters is 255.
	LanguageCode *string `queryParam:"style=form,explode=true,name=languageCode"`
	// Optional. The list of languages of the query. This is the BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see [Tags for Identifying Languages](https://tools.ietf.org/html/bcp47). For CompletionType.JOB_TITLE type, only open jobs with the same language_codes are returned. For CompletionType.COMPANY_NAME type, only companies having open jobs with the same language_codes are returned. For CompletionType.COMBINED type, only open jobs with the same language_codes or companies having open jobs with the same language_codes are returned. The maximum number of allowed characters is 255.
	LanguageCodes []string `queryParam:"style=form,explode=true,name=languageCodes"`
	// Required. Resource name of project the completion is performed within. The format is "projects/{project_id}", for example, "projects/api-test-project".
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Required. Completion result count. The maximum allowed page size is 10.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Required. The query used to generate suggestions. The maximum number of allowed characters is 255.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Optional. The scope of the completion. The defaults is CompletionScope.PUBLIC.
	Scope *JobsProjectsCompleteScopeEnum `queryParam:"style=form,explode=true,name=scope"`
	// Optional. The completion topic. The default is CompletionType.COMBINED.
	Type *JobsProjectsCompleteTypeEnum `queryParam:"style=form,explode=true,name=type"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type JobsProjectsCompleteResponse struct {
	// Successful response
	CompleteQueryResponse *shared.CompleteQueryResponse
	ContentType           string
	StatusCode            int
	RawResponse           *http.Response
}
