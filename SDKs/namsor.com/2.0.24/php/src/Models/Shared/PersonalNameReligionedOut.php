<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PersonalNameReligionedOut - religious-coded names
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PersonalNameReligionedOut
{
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The input name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. 
     * 
     * @var ?float $probabilityAltCalibrated
     */
	#[\JMS\Serializer\Annotation\SerializedName('probabilityAltCalibrated')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $probabilityAltCalibrated = null;
    
    /**
     * The calibrated probability for country to have been guessed correctly. -1 = still calibrating. 
     * 
     * @var ?float $probabilityCalibrated
     */
	#[\JMS\Serializer\Annotation\SerializedName('probabilityCalibrated')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $probabilityCalibrated = null;
    
    /**
     * Most likely religion
     * 
     * @var ?string $religion
     */
	#[\JMS\Serializer\Annotation\SerializedName('religion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $religion = null;
    
    /**
     * Second best alternative : religion 
     * 
     * @var ?string $religionAlt
     */
	#[\JMS\Serializer\Annotation\SerializedName('religionAlt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $religionAlt = null;
    
    /**
     * List countries (top 10)
     * 
     * @var ?array<string> $religionsTop
     */
	#[\JMS\Serializer\Annotation\SerializedName('religionsTop')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $religionsTop = null;
    
    /**
     * Higher score is better, but score is not normalized. Use calibratedProbability if available. 
     * 
     * @var ?float $score
     */
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $score = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('script')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $script = null;
    
	public function __construct()
	{
		$this->id = null;
		$this->name = null;
		$this->probabilityAltCalibrated = null;
		$this->probabilityCalibrated = null;
		$this->religion = null;
		$this->religionAlt = null;
		$this->religionsTop = null;
		$this->score = null;
		$this->script = null;
	}
}
