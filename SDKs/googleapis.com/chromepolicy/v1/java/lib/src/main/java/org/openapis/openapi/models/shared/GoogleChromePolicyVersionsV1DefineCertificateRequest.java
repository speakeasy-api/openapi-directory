/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleChromePolicyVersionsV1DefineCertificateRequest - Request object for creating a certificate.
 */
public class GoogleChromePolicyVersionsV1DefineCertificateRequest {
    /**
     * Optional. The optional name of the certificate. If not specified, the certificate issuer will be used as the name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ceritificateName")
    public String ceritificateName;
    public GoogleChromePolicyVersionsV1DefineCertificateRequest withCeritificateName(String ceritificateName) {
        this.ceritificateName = ceritificateName;
        return this;
    }
    
    /**
     * Required. The raw contents of the .PEM, .CRT, or .CER file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificate")
    public String certificate;
    public GoogleChromePolicyVersionsV1DefineCertificateRequest withCertificate(String certificate) {
        this.certificate = certificate;
        return this;
    }
    
    /**
     * Optional. Certificate settings within the chrome.networks.certificates namespace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public GoogleChromePolicyVersionsV1NetworkSetting[] settings;
    public GoogleChromePolicyVersionsV1DefineCertificateRequest withSettings(GoogleChromePolicyVersionsV1NetworkSetting[] settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * Required. The target resource on which this certificate is applied. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetResource")
    public String targetResource;
    public GoogleChromePolicyVersionsV1DefineCertificateRequest withTargetResource(String targetResource) {
        this.targetResource = targetResource;
        return this;
    }
    
}
