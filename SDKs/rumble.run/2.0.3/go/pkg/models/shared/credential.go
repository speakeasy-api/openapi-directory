// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CredentialTypeEnum - The service the credentials are for.
type CredentialTypeEnum string

const (
	CredentialTypeEnumMiradoreAPIKeyV1 CredentialTypeEnum = "miradore_api_key_v1"
	CredentialTypeEnumAwsAccessSecret  CredentialTypeEnum = "aws_access_secret"
)

func (e *CredentialTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "miradore_api_key_v1":
		fallthrough
	case "aws_access_secret":
		*e = CredentialTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CredentialTypeEnum: %s", s)
	}
}

// Credential - credential details
type Credential struct {
	ACL            map[string]interface{} `json:"acl,omitempty"`
	Cidrs          []string               `json:"cidrs,omitempty"`
	ClientID       *string                `json:"client_id,omitempty"`
	CreatedAt      *int64                 `json:"created_at,omitempty"`
	CreatedByEmail *string                `json:"created_by_email,omitempty"`
	CreatedByID    *string                `json:"created_by_id,omitempty"`
	Global         *bool                  `json:"global,omitempty"`
	ID             string                 `json:"id"`
	LastUsedAt     *int64                 `json:"last_used_at,omitempty"`
	LastUsedByID   *string                `json:"last_used_by_id,omitempty"`
	Name           *string                `json:"name,omitempty"`
	// The service the credentials are for.
	Type *CredentialTypeEnum `json:"type,omitempty"`
}
