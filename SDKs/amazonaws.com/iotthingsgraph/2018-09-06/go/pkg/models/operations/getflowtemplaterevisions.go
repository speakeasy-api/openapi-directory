// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetFlowTemplateRevisionsXAmzTargetEnum
type GetFlowTemplateRevisionsXAmzTargetEnum string

const (
	GetFlowTemplateRevisionsXAmzTargetEnumIotThingsGraphFrontEndServiceGetFlowTemplateRevisions GetFlowTemplateRevisionsXAmzTargetEnum = "IotThingsGraphFrontEndService.GetFlowTemplateRevisions"
)

func (e GetFlowTemplateRevisionsXAmzTargetEnum) ToPointer() *GetFlowTemplateRevisionsXAmzTargetEnum {
	return &e
}

func (e *GetFlowTemplateRevisionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IotThingsGraphFrontEndService.GetFlowTemplateRevisions":
		*e = GetFlowTemplateRevisionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFlowTemplateRevisionsXAmzTargetEnum: %v", v)
	}
}

type GetFlowTemplateRevisionsRequest struct {
	GetFlowTemplateRevisionsRequest shared.GetFlowTemplateRevisionsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      GetFlowTemplateRevisionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetFlowTemplateRevisionsResponse struct {
	ContentType string
	// Success
	GetFlowTemplateRevisionsResponse *shared.GetFlowTemplateRevisionsResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
