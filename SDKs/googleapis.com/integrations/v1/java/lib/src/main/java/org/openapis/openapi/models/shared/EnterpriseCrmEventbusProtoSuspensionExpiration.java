/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EnterpriseCrmEventbusProtoSuspensionExpiration {
    /**
     * Milliseconds after which the suspension expires, if no action taken.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireAfterMs")
    public Integer expireAfterMs;

    public EnterpriseCrmEventbusProtoSuspensionExpiration withExpireAfterMs(Integer expireAfterMs) {
        this.expireAfterMs = expireAfterMs;
        return this;
    }
    
    /**
     * Whether the suspension will be REJECTED or LIFTED upon expiration. REJECTED is the default behavior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liftWhenExpired")
    public Boolean liftWhenExpired;

    public EnterpriseCrmEventbusProtoSuspensionExpiration withLiftWhenExpired(Boolean liftWhenExpired) {
        this.liftWhenExpired = liftWhenExpired;
        return this;
    }
    
    /**
     * Milliseconds after which the previous suspension action reminder, if any, is sent using the selected notification option, for a suspension which is still PENDING_UNSPECIFIED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remindAfterMs")
    public Integer remindAfterMs;

    public EnterpriseCrmEventbusProtoSuspensionExpiration withRemindAfterMs(Integer remindAfterMs) {
        this.remindAfterMs = remindAfterMs;
        return this;
    }
    
    public EnterpriseCrmEventbusProtoSuspensionExpiration(){}
}
