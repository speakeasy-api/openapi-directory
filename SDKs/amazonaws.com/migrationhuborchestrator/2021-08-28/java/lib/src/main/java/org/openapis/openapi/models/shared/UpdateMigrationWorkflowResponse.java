/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * UpdateMigrationWorkflowResponse - Success
 */
public class UpdateMigrationWorkflowResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adsApplicationConfigurationId")
    public String adsApplicationConfigurationId;

    public UpdateMigrationWorkflowResponse withAdsApplicationConfigurationId(String adsApplicationConfigurationId) {
        this.adsApplicationConfigurationId = adsApplicationConfigurationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public UpdateMigrationWorkflowResponse withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationTime")
    public OffsetDateTime creationTime;

    public UpdateMigrationWorkflowResponse withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public UpdateMigrationWorkflowResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public UpdateMigrationWorkflowResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastModifiedTime")
    public OffsetDateTime lastModifiedTime;

    public UpdateMigrationWorkflowResponse withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public UpdateMigrationWorkflowResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public MigrationWorkflowStatusEnumEnum status;

    public UpdateMigrationWorkflowResponse withStatus(MigrationWorkflowStatusEnumEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stepTargets")
    public String[] stepTargets;

    public UpdateMigrationWorkflowResponse withStepTargets(String[] stepTargets) {
        this.stepTargets = stepTargets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public UpdateMigrationWorkflowResponse withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("templateId")
    public String templateId;

    public UpdateMigrationWorkflowResponse withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowInputs")
    public java.util.Map<String, StepInput> workflowInputs;

    public UpdateMigrationWorkflowResponse withWorkflowInputs(java.util.Map<String, StepInput> workflowInputs) {
        this.workflowInputs = workflowInputs;
        return this;
    }
    
    public UpdateMigrationWorkflowResponse(){}
}
