"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ForwardInfoTargetEnum(str, Enum):
    r"""Target type where this packet is forwarded to."""
    TARGET_UNSPECIFIED = 'TARGET_UNSPECIFIED'
    PEERING_VPC = 'PEERING_VPC'
    VPN_GATEWAY = 'VPN_GATEWAY'
    INTERCONNECT = 'INTERCONNECT'
    GKE_MASTER = 'GKE_MASTER'
    IMPORTED_CUSTOM_ROUTE_NEXT_HOP = 'IMPORTED_CUSTOM_ROUTE_NEXT_HOP'
    CLOUD_SQL_INSTANCE = 'CLOUD_SQL_INSTANCE'
    ANOTHER_PROJECT = 'ANOTHER_PROJECT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ForwardInfo:
    r"""Details of the final state \\"forward\\" and associated resource."""
    
    resource_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceUri'), 'exclude': lambda f: f is None }})
    r"""URI of the resource that the packet is forwarded to."""  
    target: Optional[ForwardInfoTargetEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target'), 'exclude': lambda f: f is None }})
    r"""Target type where this packet is forwarded to."""  
    