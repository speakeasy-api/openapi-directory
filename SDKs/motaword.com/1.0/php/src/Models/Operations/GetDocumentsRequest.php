<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetDocumentsRequest
{
    /**
     * searches in source language of documents, in source and target languages of document's quote
     * 
     * @var ?string $languageCode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=language_code')]
    public ?string $languageCode = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_by')]
    public ?GetDocumentsOrderByEnum $orderBy = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order_type')]
    public ?\OpenAPI\OpenAPI\Models\Shared\ListOrderTypeEnum $orderType = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * When true, this will return the most 4 recent active documents.
     * 
     * @var ?bool $recent
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=recent')]
    public ?bool $recent = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=search')]
    public ?string $search = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type_filter')]
    public ?GetDocumentsTypeFilterEnum $typeFilter = null;
    
    /**
     * Attach further information. Possible values 'preview' to fetch temporary preview URLs. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetDocumentsWithEnum> $with
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=with[]')]
    public ?array $with = null;
    
	public function __construct()
	{
		$this->languageCode = null;
		$this->orderBy = null;
		$this->orderType = null;
		$this->page = null;
		$this->perPage = null;
		$this->recent = null;
		$this->search = null;
		$this->typeFilter = null;
		$this->with = null;
	}
}
