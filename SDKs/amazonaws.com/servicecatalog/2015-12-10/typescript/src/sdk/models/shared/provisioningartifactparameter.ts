/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParameterConstraints } from "./parameterconstraints";
import { Expose, Type } from "class-transformer";

/**
 * Information about a parameter used to provision a product.
 */
export class ProvisioningArtifactParameter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DefaultValue" })
  defaultValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsNoEcho" })
  isNoEcho?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterConstraints" })
  @Type(() => ParameterConstraints)
  parameterConstraints?: ParameterConstraints;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterKey" })
  parameterKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterType" })
  parameterType?: string;
}
