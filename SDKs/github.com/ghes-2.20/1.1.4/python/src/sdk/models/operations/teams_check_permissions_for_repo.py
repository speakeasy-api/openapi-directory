"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import full_repository as shared_full_repository
from ..shared import minimal_repository as shared_minimal_repository
from typing import Optional


@dataclasses.dataclass
class TeamsCheckPermissionsForRepoRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})  
    team_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'team_id', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class TeamsCheckPermissionsForRepoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    full_repository: Optional[shared_full_repository.FullRepository] = dataclasses.field(default=None)
    r"""Alternative response with extra repository information"""  
    minimal_repository: Optional[shared_minimal_repository.MinimalRepository] = dataclasses.field(default=None)
    r"""Alternative response with extra repository information"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    