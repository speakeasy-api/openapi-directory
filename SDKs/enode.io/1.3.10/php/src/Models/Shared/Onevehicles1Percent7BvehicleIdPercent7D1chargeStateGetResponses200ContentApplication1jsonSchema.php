<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Onevehicles1Percent7BvehicleIdPercent7D1chargeStateGetResponses200ContentApplication1jsonSchema
{
    /**
     * Vehicle's maximum physical battery capacity in kWh. This number slowly decreases/degrades over time.
     * 
     * @var ?float $batteryCapacity
     */
	#[\JMS\Serializer\Annotation\SerializedName('batteryCapacity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $batteryCapacity = null;
    
    /**
     * Remaining battery in percent
     * 
     * @var ?float $batteryLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('batteryLevel')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $batteryLevel = null;
    
    /**
     * Charge limit, as a percent of `batteryCapacity`.
     * 
     * @var ?float $chargeLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeLimit')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $chargeLimit = null;
    
    /**
     * The current charge rate in kW.
     * 
     * 
     * This property is only available when the vehicle is charging, and is `null` any other time.
     * 
     * @var ?float $chargeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $chargeRate = null;
    
    /**
     * Estimated time until the current charging intent is completed, in minutes.
     * 
     * 
     * This property is only available when the vehicle is charging, and is `null` any other time.
     * 
     * @var ?float $chargeTimeRemaining
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeTimeRemaining')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $chargeTimeRemaining = null;
    
    /**
     * Current charging status of the vehicle
     * 
     * @var ?bool $isCharging
     */
	#[\JMS\Serializer\Annotation\SerializedName('isCharging')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isCharging = null;
    
    /**
     * Array of string constants that explain why the car is or is not charging. May contain multiple values.
     * 
     * 
     * **Any:**
     * - DEFAULT - the car is not being controlled by Enode
     * 
     * **Not Charging:**
     * - NOT_PLUGGED_IN - because the car is not plugged into a charger
     * - FULLY_CHARGED - because the car is fully charged
     * - MANUALLY_STOPPED - because the car has been manually commanded to stop charging
     * - SMART_CHARGING_DELAY - because Smart Charging has identified an opportunity to delay charging until prices are lower
     * 
     * **Charging:**
     * - MANUALLY_STARTED - because the car has been manually commanded to start charging
     * - SMART_CHARGING_ACTIVE - because Smart Charging has identified that this is an optimal time to charge
     * - SMART_CHARGING_DEADLINE - because, regardless of price, charging must be active to meet the configured deadline
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Onevehicles1Percent7BvehicleIdPercent7D1chargeStateGetResponses200ContentApplication1jsonSchemaIsChargingReasonsEnum> $isChargingReasons
     */
	#[\JMS\Serializer\Annotation\SerializedName('isChargingReasons')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\Onevehicles1Percent7BvehicleIdPercent7D1chargeStateGetResponses200ContentApplication1jsonSchemaIsChargingReasonsEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $isChargingReasons = null;
    
    /**
     * Indicates whether the vehicle is connected to a charging box (regardless of whether it is actually charging)
     * 
     * @var ?bool $isPluggedIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPluggedIn')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPluggedIn = null;
    
    /**
     * Estimated remaining kilometers
     * 
     * @var ?float $range
     */
	#[\JMS\Serializer\Annotation\SerializedName('range')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $range = null;
    
	public function __construct()
	{
		$this->batteryCapacity = null;
		$this->batteryLevel = null;
		$this->chargeLimit = null;
		$this->chargeRate = null;
		$this->chargeTimeRemaining = null;
		$this->isCharging = null;
		$this->isChargingReasons = null;
		$this->isPluggedIn = null;
		$this->range = null;
	}
}
