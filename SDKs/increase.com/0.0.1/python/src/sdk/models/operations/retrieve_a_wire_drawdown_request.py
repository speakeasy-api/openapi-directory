"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import wire_drawdown_request as shared_wire_drawdown_request
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class RetrieveAWireDrawdownRequestRequest:
    
    wire_drawdown_request_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'wire_drawdown_request_id', 'style': 'simple', 'explode': False }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON13StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_NINE = '429'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON13TypeEnum(str, Enum):
    RATE_LIMITED_ERROR = 'rate_limited_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON13:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON13StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON13TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    retry_after: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retry_after'), 'exclude': lambda f: f is None }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON12StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON12TypeEnum(str, Enum):
    PRIVATE_FEATURE_ERROR = 'private_feature_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON12:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON12StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON12TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON11StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON11TypeEnum(str, Enum):
    OBJECT_NOT_FOUND_ERROR = 'object_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON11:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON11StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON11TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON10StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON10TypeEnum(str, Enum):
    MALFORMED_REQUEST_ERROR = 'malformed_request_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON10:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON10StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON10TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON9StatusEnum(str, Enum):
    FOUR_HUNDRED = '400'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON9TypeEnum(str, Enum):
    INVALID_PARAMETERS_ERROR = 'invalid_parameters_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON9:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON9StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON9TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    errors: Optional[list[dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""All errors related to parsing the request parameters."""  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON8StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON8TypeEnum(str, Enum):
    INVALID_OPERATION_ERROR = 'invalid_operation_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON8:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON8StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON8TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON7StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_ONE = '401'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON7TypeEnum(str, Enum):
    INVALID_API_KEY_ERROR = 'invalid_api_key_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON7:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON7StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON7TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON6StatusEnum(str, Enum):
    FIVE_HUNDRED = '500'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON6TypeEnum(str, Enum):
    INTERNAL_SERVER_ERROR = 'internal_server_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON6:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON6StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON6TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON5StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON5TypeEnum(str, Enum):
    INSUFFICIENT_PERMISSIONS_ERROR = 'insufficient_permissions_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON5:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON5StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON5TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON4StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_TWENTY_TWO = '422'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON4TypeEnum(str, Enum):
    IDEMPOTENCY_UNPROCESSABLE_ERROR = 'idempotency_unprocessable_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON4:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON4StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON4TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON3StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_NINE = '409'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON3TypeEnum(str, Enum):
    IDEMPOTENCY_CONFLICT_ERROR = 'idempotency_conflict_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON3:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON3StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON3TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON2StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_THREE = '403'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON2TypeEnum(str, Enum):
    ENVIRONMENT_MISMATCH_ERROR = 'environment_mismatch_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON2:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON2StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON2TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    
class RetrieveAWireDrawdownRequestDefaultApplicationJSON1StatusEnum(str, Enum):
    FOUR_HUNDRED_AND_FOUR = '404'

class RetrieveAWireDrawdownRequestDefaultApplicationJSON1TypeEnum(str, Enum):
    API_METHOD_NOT_FOUND_ERROR = 'api_method_not_found_error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RetrieveAWireDrawdownRequestDefaultApplicationJSON1:
    
    detail: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail') }})  
    status: RetrieveAWireDrawdownRequestDefaultApplicationJSON1StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    type: RetrieveAWireDrawdownRequestDefaultApplicationJSON1TypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    

@dataclasses.dataclass
class RetrieveAWireDrawdownRequestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[Any] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    wire_drawdown_request: Optional[shared_wire_drawdown_request.WireDrawdownRequest] = dataclasses.field(default=None)
    r"""Wire Drawdown Request"""  
    