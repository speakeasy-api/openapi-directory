/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The role of the person who first paused this deal.
 */
export enum DealPauseStatusFirstPausedByEnum {
  BuyerSellerRoleUnspecified = "BUYER_SELLER_ROLE_UNSPECIFIED",
  Buyer = "BUYER",
  Seller = "SELLER",
}

/**
 * Tracks which parties (if any) have paused a deal. The deal is considered paused if either hasBuyerPaused or hasSellPaused is true.
 */
export class DealPauseStatus extends SpeakeasyBase {
  /**
   * The buyer's reason for pausing, if the buyer paused the deal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "buyerPauseReason" })
  buyerPauseReason?: string;

  /**
   * The role of the person who first paused this deal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstPausedBy" })
  firstPausedBy?: DealPauseStatusFirstPausedByEnum;

  /**
   * True, if the buyer has paused the deal unilaterally.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasBuyerPaused" })
  hasBuyerPaused?: boolean;

  /**
   * True, if the seller has paused the deal unilaterally.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasSellerPaused" })
  hasSellerPaused?: boolean;

  /**
   * The seller's reason for pausing, if the seller paused the deal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellerPauseReason" })
  sellerPauseReason?: string;
}
