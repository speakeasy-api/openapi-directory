"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import simpleaddresstype as shared_simpleaddresstype
from ..shared import source as shared_source
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PollingLocation:
    r"""A location where a voter can vote. This may be an early vote site, an election day voting location, or a drop off location for a completed ballot."""
    
    address: Optional[shared_simpleaddresstype.SimpleAddressType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    r"""A simple representation of an address."""  
    end_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endDate'), 'exclude': lambda f: f is None }})
    r"""The last date that this early vote site or drop off location may be used. This field is not populated for polling locations."""  
    latitude: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latitude'), 'exclude': lambda f: f is None }})
    r"""Latitude of the location, in degrees north of the equator. Note this field may not be available for some locations."""  
    longitude: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longitude'), 'exclude': lambda f: f is None }})
    r"""Longitude of the location, in degrees east of the Prime Meridian. Note this field may not be available for some locations."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the early vote site or drop off location. This field is not populated for polling locations."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""Notes about this location (e.g. accessibility ramp or entrance to use)."""  
    polling_hours: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pollingHours'), 'exclude': lambda f: f is None }})
    r"""A description of when this location is open."""  
    sources: Optional[list[shared_source.Source]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sources'), 'exclude': lambda f: f is None }})
    r"""A list of sources for this location. If multiple sources are listed the data has been aggregated from those sources."""  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate'), 'exclude': lambda f: f is None }})
    r"""The first date that this early vote site or drop off location may be used. This field is not populated for polling locations."""  
    voter_services: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voterServices'), 'exclude': lambda f: f is None }})
    r"""The services provided by this early vote site or drop off location. This field is not populated for polling locations."""  
    