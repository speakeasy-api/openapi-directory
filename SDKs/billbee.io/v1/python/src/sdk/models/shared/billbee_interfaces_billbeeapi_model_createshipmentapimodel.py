"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import billbee_interfaces_billbeeapi_model_shipmentaddressapimodel as shared_billbee_interfaces_billbeeapi_model_shipmentaddressapimodel
from ..shared import billbee_interfaces_shipping_shipmentdata_dimensions as shared_billbee_interfaces_shipping_shipmentdata_dimensions
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class BillbeeInterfacesBillbeeAPIModelCreateShipmentAPIModelShippingCarrierEnum(str, Enum):
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    ELEVEN = '11'
    TWELVE = '12'
    THIRTEEN = '13'
    FOURTEEN = '14'
    FIFTEEN = '15'
    SIXTEEN = '16'
    SEVENTEEN = '17'
    EIGHTEEN = '18'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelCreateShipmentAPIModelInput:
    r"""Data to specify shipment parameters"""
    
    client_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientReference'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ClientReference' }})
    r"""Optional specify a text to be included on the label. Not possible with all carriers"""  
    content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Content'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Content' }})
    r"""Optional specify a text describing the content of the shipment. Used for export shipments"""  
    customer_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomerNumber'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'CustomerNumber' }})
    r"""Not used anymore"""  
    dimension: Optional[shared_billbee_interfaces_shipping_shipmentdata_dimensions.BillbeeInterfacesShippingShipmentDataDimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Dimension'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Dimension', 'json': True }})  
    order_currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderCurrencyCode'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'OrderCurrencyCode' }})
    r"""The Currency if the ordersum"""  
    order_sum: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderSum'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'OrderSum' }})
    r"""The value of the shipments content"""  
    printer_id_for_export_docs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrinterIdForExportDocs'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'PrinterIdForExportDocs' }})
    r"""The id of a connected Cloudprinter to sent the export docs to"""  
    printer_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrinterName'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'PrinterName' }})
    r"""The name of a connected Cloudprinter to sent the label to"""  
    product_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductCode'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ProductCode' }})
    r"""The productcode to be used when creating the shipment. Values depends on the carrier used"""  
    provider_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProviderName'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ProviderName' }})
    r"""The name of the provider as specified in the billbee account"""  
    receiver_address: Optional[shared_billbee_interfaces_billbeeapi_model_shipmentaddressapimodel.BillbeeInterfacesBillbeeAPIModelShipmentAddressAPIModelInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReceiverAddress'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ReceiverAddress', 'json': True }})  
    ship_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShipDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ShipDate' }})
    r"""Optional overwrite the shipdate to be transferred to the carrier"""  
    shipping_carrier: Optional[BillbeeInterfacesBillbeeAPIModelCreateShipmentAPIModelShippingCarrierEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingCarrier'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'shippingCarrier' }})  
    total_net: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalNet'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'TotalNet' }})
    r"""The value of the shipments content (net)"""  
    weight_in_gram: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WeightInGram'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'WeightInGram' }})
    r"""Optional specify the weight in gram of the shipment"""  
    