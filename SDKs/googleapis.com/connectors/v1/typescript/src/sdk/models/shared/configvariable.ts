/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Secret } from "./secret";
import { Expose, Type } from "class-transformer";

/**
 * ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.
 */
export class ConfigVariable extends SpeakeasyBase {
  /**
   * Value is a bool.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  /**
   * Value is an integer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intValue" })
  intValue?: string;

  /**
   * Key of the config variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Secret provides a reference to entries in Secret Manager.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secretValue" })
  @Type(() => Secret)
  secretValue?: Secret;

  /**
   * Value is a string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;
}
