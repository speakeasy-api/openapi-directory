// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum - Optional. The type of how to aggregate answers.
type GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum string

const (
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnumStringAggregationTypeUnspecified GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum = "STRING_AGGREGATION_TYPE_UNSPECIFIED"
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnumMajorityVote                     GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum = "MAJORITY_VOTE"
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnumUnanimousVote                    GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum = "UNANIMOUS_VOTE"
	GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnumNoAggregation                    GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum = "NO_AGGREGATION"
)

func (e GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum) ToPointer() *GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum {
	return &e
}

func (e *GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING_AGGREGATION_TYPE_UNSPECIFIED":
		fallthrough
	case "MAJORITY_VOTE":
		fallthrough
	case "UNANIMOUS_VOTE":
		fallthrough
	case "NO_AGGREGATION":
		*e = GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum: %v", v)
	}
}

// GoogleCloudDatalabelingV1beta1ImageClassificationConfig - Config for image classification human labeling task.
type GoogleCloudDatalabelingV1beta1ImageClassificationConfig struct {
	// Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.
	AllowMultiLabel *bool `json:"allowMultiLabel,omitempty"`
	// Required. Annotation spec set resource name.
	AnnotationSpecSet *string `json:"annotationSpecSet,omitempty"`
	// Optional. The type of how to aggregate answers.
	AnswerAggregationType *GoogleCloudDatalabelingV1beta1ImageClassificationConfigAnswerAggregationTypeEnum `json:"answerAggregationType,omitempty"`
}
