<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetMediaRequestBodyStartSelector - <p>Identifies the chunk on the Kinesis video stream where you want the <code>GetMedia</code> API to start returning media data. You have the following options to identify the starting chunk: </p> <ul> <li> <p>Choose the latest (or oldest) chunk.</p> </li> <li> <p>Identify a specific chunk. You can identify a specific chunk either by providing a fragment number or timestamp (server or producer). </p> </li> <li> <p>Each chunk's metadata includes a continuation token as a Matroska (MKV) tag (<code>AWS_KINESISVIDEO_CONTINUATION_TOKEN</code>). If your previous <code>GetMedia</code> request terminated, you can use this tag value in your next <code>GetMedia</code> request. The API then starts returning chunks starting where the last API ended.</p> </li> </ul>
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetMediaRequestBodyStartSelector
{
	#[\JMS\Serializer\Annotation\SerializedName('AfterFragmentNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $afterFragmentNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ContinuationToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $continuationToken = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StartSelectorType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StartSelectorTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\OpenAPI\OpenAPI\Models\Shared\StartSelectorTypeEnum $startSelectorType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StartTimestamp')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $startTimestamp = null;
    
	public function __construct()
	{
		$this->afterFragmentNumber = null;
		$this->continuationToken = null;
		$this->startSelectorType = null;
		$this->startTimestamp = null;
	}
}
