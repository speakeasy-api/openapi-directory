// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutAppValidationConfigurationXAmzTargetEnum
type PutAppValidationConfigurationXAmzTargetEnum string

const (
	PutAppValidationConfigurationXAmzTargetEnumAwsServerMigrationServiceV20161024PutAppValidationConfiguration PutAppValidationConfigurationXAmzTargetEnum = "AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration"
)

func (e PutAppValidationConfigurationXAmzTargetEnum) ToPointer() *PutAppValidationConfigurationXAmzTargetEnum {
	return &e
}

func (e *PutAppValidationConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSServerMigrationService_V2016_10_24.PutAppValidationConfiguration":
		*e = PutAppValidationConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAppValidationConfigurationXAmzTargetEnum: %v", v)
	}
}

type PutAppValidationConfigurationRequest struct {
	PutAppValidationConfigurationRequest shared.PutAppValidationConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           PutAppValidationConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutAppValidationConfigurationResponse struct {
	ContentType string
	// InternalError
	InternalError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// MissingRequiredParameterException
	MissingRequiredParameterException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// Success
	PutAppValidationConfigurationResponse map[string]interface{}
	StatusCode                            int
	RawResponse                           *http.Response
	// UnauthorizedOperationException
	UnauthorizedOperationException interface{}
}
