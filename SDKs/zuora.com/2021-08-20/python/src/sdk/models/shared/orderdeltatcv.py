"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderDeltaTcv:
    r"""Order Delta Tcv. This is a metric that reflects the change to the TCV on Rate Plan Charge object, or the Total Contracted Value for an Order Line Item as the result of the order"""
    
    charge_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeNumber'), 'exclude': lambda f: f is None }})
    r"""The charge number for the associated Rate Plan Charge. This field can be null if the metric is generated for an Order Line Item."""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""ISO 3-letter currency code (uppercase). For example, USD."""  
    end_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The end date for the order delta metric."""  
    gross_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grossAmount'), 'exclude': lambda f: f is None }})
    r"""The gross amount for the metric. The is the amount excluding applied discount."""  
    net_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('netAmount'), 'exclude': lambda f: f is None }})
    r"""The net amount for the metric. The is the amount with discounts applied"""  
    order_action_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderActionId'), 'exclude': lambda f: f is None }})
    r"""The Id for the related Order Action. This field can be null if the metric is generated for an Order Line Item."""  
    order_action_sequence: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderActionSequence'), 'exclude': lambda f: f is None }})
    r"""The sequence for the related Order Action. This field can be null if the metric is generated for an Order Line Item."""  
    order_action_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderActionType'), 'exclude': lambda f: f is None }})
    r"""The type for the related Order Action. This field can be null if the metric is generated for an Order Line Item."""  
    order_line_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderLineItemId'), 'exclude': lambda f: f is None }})
    r"""The sytem generated Id for the Order Line Item. This field can be null if the metric is generated for subscriptions."""  
    product_rate_plan_charge_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productRatePlanChargeId'), 'exclude': lambda f: f is None }})
    r"""The Id for the associated Product Rate Plan Charge. This field can be null if the Order Line Item is not associated with a Product Rate Plan Charge."""  
    rate_plan_charge_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ratePlanChargeId'), 'exclude': lambda f: f is None }})
    r"""The id for the associated Rate Plan Charge. This field can be null if the metric is generated for an Order Line Item."""  
    start_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The start date for the order delta metric."""  
    subscription_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptionNumber'), 'exclude': lambda f: f is None }})
    r"""The number of the subscription. This field can be null if the metric is generated for an Order Line Item."""  
    