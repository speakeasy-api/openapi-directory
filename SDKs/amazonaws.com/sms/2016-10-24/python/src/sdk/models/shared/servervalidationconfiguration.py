"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import server as shared_server
from ..shared import servervalidationstrategy_enum as shared_servervalidationstrategy_enum
from ..shared import userdatavalidationparameters as shared_userdatavalidationparameters
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServerValidationConfiguration:
    r"""Configuration for validating an instance."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    server: Optional[shared_server.Server] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('server'), 'exclude': lambda f: f is None }})
    r"""Represents a server."""  
    server_validation_strategy: Optional[shared_servervalidationstrategy_enum.ServerValidationStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverValidationStrategy'), 'exclude': lambda f: f is None }})  
    user_data_validation_parameters: Optional[shared_userdatavalidationparameters.UserDataValidationParameters] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userDataValidationParameters'), 'exclude': lambda f: f is None }})  
    validation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationId'), 'exclude': lambda f: f is None }})  
    