/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StandardHl7Configuration - A standard HL7 configuration
 */
public class StandardHl7Configuration {
    /**
     * A comma delimited list of HL7 fields to convert to the yyyMMddHHmmss format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("convertTimestampToDateTime")
    public String convertTimestampToDateTime;

    public StandardHl7Configuration withConvertTimestampToDateTime(String convertTimestampToDateTime) {
        this.convertTimestampToDateTime = convertTimestampToDateTime;
        return this;
    }
    
    /**
     * Default the AOE result to UNK
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultAoeToUnknown")
    public Boolean defaultAoeToUnknown;

    public StandardHl7Configuration withDefaultAoeToUnknown(Boolean defaultAoeToUnknown) {
        this.defaultAoeToUnknown = defaultAoeToUnknown;
        return this;
    }
    
    /**
     * Include the AOE
     */
    @JsonProperty("includeAOE")
    public Boolean includeAOE;

    public StandardHl7Configuration withIncludeAOE(Boolean includeAOE) {
        this.includeAOE = includeAOE;
        return this;
    }
    
    /**
     * The format to use for the file name generated by the translation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nameFormat")
    public String nameFormat;

    public StandardHl7Configuration withNameFormat(String nameFormat) {
        this.nameFormat = nameFormat;
        return this;
    }
    
    /**
     * How to format phone numbers (XTN fields)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumberFormatting")
    public StandardHl7ConfigurationPhoneNumberFormattingEnum phoneNumberFormatting;

    public StandardHl7Configuration withPhoneNumberFormatting(StandardHl7ConfigurationPhoneNumberFormattingEnum phoneNumberFormatting) {
        this.phoneNumberFormatting = phoneNumberFormatting;
        return this;
    }
    
    /**
     * The receiving application name (needed for HL7 formats)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receivingApplicationName")
    public String receivingApplicationName;

    public StandardHl7Configuration withReceivingApplicationName(String receivingApplicationName) {
        this.receivingApplicationName = receivingApplicationName;
        return this;
    }
    
    /**
     * The receiving application OID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receivingApplicationOID")
    public String receivingApplicationOID;

    public StandardHl7Configuration withReceivingApplicationOID(String receivingApplicationOID) {
        this.receivingApplicationOID = receivingApplicationOID;
        return this;
    }
    
    /**
     * The receiving facility name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receivingFacilityName")
    public String receivingFacilityName;

    public StandardHl7Configuration withReceivingFacilityName(String receivingFacilityName) {
        this.receivingFacilityName = receivingFacilityName;
        return this;
    }
    
    /**
     * The receiving facility name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receivingFacilityOID")
    public String receivingFacilityOID;

    public StandardHl7Configuration withReceivingFacilityOID(String receivingFacilityOID) {
        this.receivingFacilityOID = receivingFacilityOID;
        return this;
    }
    
    /**
     * The name of the receiving organization in the message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receivingOrganization")
    public String receivingOrganization;

    public StandardHl7Configuration withReceivingOrganization(String receivingOrganization) {
        this.receivingOrganization = receivingOrganization;
        return this;
    }
    
    /**
     * The reporting facility id (if different from CDC PRIME's OID)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportingFacilityId")
    public String reportingFacilityId;

    public StandardHl7Configuration withReportingFacilityId(String reportingFacilityId) {
        this.reportingFacilityId = reportingFacilityId;
        return this;
    }
    
    /**
     * The reporting facility id type (if different from OID)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportingFacilityIdType")
    public String reportingFacilityIdType;

    public StandardHl7Configuration withReportingFacilityIdType(String reportingFacilityIdType) {
        this.reportingFacilityIdType = reportingFacilityIdType;
        return this;
    }
    
    /**
     * The reporting facility name (if different from CDC PRIME)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportingFacilityName")
    public String reportingFacilityName;

    public StandardHl7Configuration withReportingFacilityName(String reportingFacilityName) {
        this.reportingFacilityName = reportingFacilityName;
        return this;
    }
    
    /**
     * Suppress the AOE OBX results
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suppressAoe")
    public Boolean suppressAoe;

    public StandardHl7Configuration withSuppressAoe(Boolean suppressAoe) {
        this.suppressAoe = suppressAoe;
        return this;
    }
    
    /**
     * A comma delimited list of HL7 fields to suppress
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suppressHl7Fields")
    public String suppressHl7Fields;

    public StandardHl7Configuration withSuppressHl7Fields(String suppressHl7Fields) {
        this.suppressHl7Fields = suppressHl7Fields;
        return this;
    }
    
    /**
     * Suppress QST component is AOE OBX segments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suppressQstForAoe")
    public Boolean suppressQstForAoe;

    public StandardHl7Configuration withSuppressQstForAoe(Boolean suppressQstForAoe) {
        this.suppressQstForAoe = suppressQstForAoe;
        return this;
    }
    
    @JsonProperty("transport")
    public Object transport;

    public StandardHl7Configuration withTransport(Object transport) {
        this.transport = transport;
        return this;
    }
    
    /**
     * Truncate the HD fields to HD_TRUNCATION_LIMIT
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("truncateHDNamespaceIds")
    public Boolean truncateHDNamespaceIds;

    public StandardHl7Configuration withTruncateHDNamespaceIds(Boolean truncateHDNamespaceIds) {
        this.truncateHDNamespaceIds = truncateHDNamespaceIds;
        return this;
    }
    
    /**
     * The discrimenator
     */
    @JsonProperty("type")
    public String type;

    public StandardHl7Configuration withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Use BHS and FHS header
     */
    @JsonProperty("useBatchHeaders")
    public Boolean useBatchHeaders;

    public StandardHl7Configuration withUseBatchHeaders(Boolean useBatchHeaders) {
        this.useBatchHeaders = useBatchHeaders;
        return this;
    }
    
    /**
     * A comma delimited list of element names that should use blank instead of unknown
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useBlankInsteadOfUnknown")
    public String useBlankInsteadOfUnknown;

    public StandardHl7Configuration withUseBlankInsteadOfUnknown(String useBlankInsteadOfUnknown) {
        this.useBlankInsteadOfUnknown = useBlankInsteadOfUnknown;
        return this;
    }
    
    /**
     * Use the PID-14 field for patient email instead of the standard PID-13 field
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usePid14ForPatientEmail")
    public Boolean usePid14ForPatientEmail;

    public StandardHl7Configuration withUsePid14ForPatientEmail(Boolean usePid14ForPatientEmail) {
        this.usePid14ForPatientEmail = usePid14ForPatientEmail;
        return this;
    }
    
    /**
     * Set a test process mode flag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useTestProcessingMode")
    public Boolean useTestProcessingMode;

    public StandardHl7Configuration withUseTestProcessingMode(Boolean useTestProcessingMode) {
        this.useTestProcessingMode = useTestProcessingMode;
        return this;
    }
    
    public StandardHl7Configuration(@JsonProperty("includeAOE") Boolean includeAOE, @JsonProperty("transport") Object transport, @JsonProperty("type") String type, @JsonProperty("useBatchHeaders") Boolean useBatchHeaders) {
        this.includeAOE = includeAOE;
        this.transport = transport;
        this.type = type;
        this.useBatchHeaders = useBatchHeaders;
  }
}
