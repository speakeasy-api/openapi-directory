/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request to set the account information.
 */
export class IdentitytoolkitRelyingpartySetAccountInfoRequest extends SpeakeasyBase {
  /**
   * The captcha challenge.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "captchaChallenge" })
  captchaChallenge?: string;

  /**
   * Response to the captcha.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "captchaResponse" })
  captchaResponse?: string;

  /**
   * The timestamp when the account is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  /**
   * The custom attributes to be set in the user's id token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customAttributes" })
  customAttributes?: string;

  /**
   * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delegatedProjectNumber" })
  delegatedProjectNumber?: string;

  /**
   * The attributes users request to delete.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleteAttribute" })
  deleteAttribute?: string[];

  /**
   * The IDPs the user request to delete.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleteProvider" })
  deleteProvider?: string[];

  /**
   * Whether to disable the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disableUser" })
  disableUser?: boolean;

  /**
   * The name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The email of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Mark the email as verified or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailVerified" })
  emailVerified?: boolean;

  /**
   * The GITKit token of the authenticated user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idToken" })
  idToken?: string;

  /**
   * Instance id token of the app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceId" })
  instanceId?: string;

  /**
   * Last login timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastLoginAt" })
  lastLoginAt?: string;

  /**
   * The local ID of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localId" })
  localId?: string;

  /**
   * The out-of-band code of the change email request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oobCode" })
  oobCode?: string;

  /**
   * The new password of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * Privileged caller can update user with specified phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  phoneNumber?: string;

  /**
   * The photo url of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * The associated IDPs of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider?: string[];

  /**
   * Whether return sts id token and refresh token instead of gitkit token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnSecureToken" })
  returnSecureToken?: boolean;

  /**
   * Mark the user to upgrade to federated login.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgradeToFederatedLogin" })
  upgradeToFederatedLogin?: boolean;

  /**
   * Timestamp in seconds for valid login token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validSince" })
  validSince?: string;
}
