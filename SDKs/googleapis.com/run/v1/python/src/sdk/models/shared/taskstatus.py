"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrunv1condition as shared_googlecloudrunv1condition
from ..shared import taskattemptresult as shared_taskattemptresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskStatus:
    r"""TaskStatus represents the status of a task."""
    
    completion_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completionTime'), 'exclude': lambda f: f is None }})
    r"""Optional. Represents time when the task was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC."""  
    conditions: Optional[list[shared_googlecloudrunv1condition.GoogleCloudRunV1Condition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conditions'), 'exclude': lambda f: f is None }})
    r"""Optional. Conditions communicate information about ongoing/complete reconciliation processes that bring the \\"spec\\" inline with the observed state of the world. Task-specific conditions include: * `Started`: `True` when the task has started to execute. * `Completed`: `True` when the task has succeeded. `False` when the task has failed."""  
    index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index'), 'exclude': lambda f: f is None }})
    r"""Required. Index of the task, unique per execution, and beginning at 0."""  
    last_attempt_result: Optional[shared_taskattemptresult.TaskAttemptResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAttemptResult'), 'exclude': lambda f: f is None }})
    r"""Result of a task attempt."""  
    log_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logUri'), 'exclude': lambda f: f is None }})
    r"""Optional. URI where logs for this task can be found in Cloud Console."""  
    observed_generation: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('observedGeneration'), 'exclude': lambda f: f is None }})
    r"""Optional. The 'generation' of the task that was last processed by the controller."""  
    retried: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retried'), 'exclude': lambda f: f is None }})
    r"""Optional. The number of times this task was retried. Instances are retried when they fail up to the maxRetries limit."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Optional. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC."""  
    