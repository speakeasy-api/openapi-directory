// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GuaranteedOrderStatusEntityStatusEnum - Whether or not the guaranteed order is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
type GuaranteedOrderStatusEntityStatusEnum string

const (
	GuaranteedOrderStatusEntityStatusEnumEntityStatusUnspecified          GuaranteedOrderStatusEntityStatusEnum = "ENTITY_STATUS_UNSPECIFIED"
	GuaranteedOrderStatusEntityStatusEnumEntityStatusActive               GuaranteedOrderStatusEntityStatusEnum = "ENTITY_STATUS_ACTIVE"
	GuaranteedOrderStatusEntityStatusEnumEntityStatusArchived             GuaranteedOrderStatusEntityStatusEnum = "ENTITY_STATUS_ARCHIVED"
	GuaranteedOrderStatusEntityStatusEnumEntityStatusDraft                GuaranteedOrderStatusEntityStatusEnum = "ENTITY_STATUS_DRAFT"
	GuaranteedOrderStatusEntityStatusEnumEntityStatusPaused               GuaranteedOrderStatusEntityStatusEnum = "ENTITY_STATUS_PAUSED"
	GuaranteedOrderStatusEntityStatusEnumEntityStatusScheduledForDeletion GuaranteedOrderStatusEntityStatusEnum = "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
)

func (e *GuaranteedOrderStatusEntityStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENTITY_STATUS_UNSPECIFIED":
		fallthrough
	case "ENTITY_STATUS_ACTIVE":
		fallthrough
	case "ENTITY_STATUS_ARCHIVED":
		fallthrough
	case "ENTITY_STATUS_DRAFT":
		fallthrough
	case "ENTITY_STATUS_PAUSED":
		fallthrough
	case "ENTITY_STATUS_SCHEDULED_FOR_DELETION":
		*e = GuaranteedOrderStatusEntityStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GuaranteedOrderStatusEntityStatusEnum: %s", s)
	}
}

// GuaranteedOrderStatusInput - The status settings of the guaranteed order.
type GuaranteedOrderStatusInput struct {
	// The user-provided reason for pausing this guaranteed order. Must be UTF-8 encoded with a maximum length of 100 bytes. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.
	EntityPauseReason *string `json:"entityPauseReason,omitempty"`
	// Whether or not the guaranteed order is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
	EntityStatus *GuaranteedOrderStatusEntityStatusEnum `json:"entityStatus,omitempty"`
}

// GuaranteedOrderStatusConfigStatusEnum - Output only. The configuration status of the guaranteed order. Acceptable values are `PENDING` and `COMPLETED`. A guaranteed order must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve. Currently the configuration action can only be performed via UI.
type GuaranteedOrderStatusConfigStatusEnum string

const (
	GuaranteedOrderStatusConfigStatusEnumGuaranteedOrderConfigStatusUnspecified GuaranteedOrderStatusConfigStatusEnum = "GUARANTEED_ORDER_CONFIG_STATUS_UNSPECIFIED"
	GuaranteedOrderStatusConfigStatusEnumPending                                GuaranteedOrderStatusConfigStatusEnum = "PENDING"
	GuaranteedOrderStatusConfigStatusEnumCompleted                              GuaranteedOrderStatusConfigStatusEnum = "COMPLETED"
)

func (e *GuaranteedOrderStatusConfigStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GUARANTEED_ORDER_CONFIG_STATUS_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "COMPLETED":
		*e = GuaranteedOrderStatusConfigStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GuaranteedOrderStatusConfigStatusEnum: %s", s)
	}
}

// GuaranteedOrderStatus - The status settings of the guaranteed order.
type GuaranteedOrderStatus struct {
	// Output only. The configuration status of the guaranteed order. Acceptable values are `PENDING` and `COMPLETED`. A guaranteed order must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve. Currently the configuration action can only be performed via UI.
	ConfigStatus *GuaranteedOrderStatusConfigStatusEnum `json:"configStatus,omitempty"`
	// The user-provided reason for pausing this guaranteed order. Must be UTF-8 encoded with a maximum length of 100 bytes. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.
	EntityPauseReason *string `json:"entityPauseReason,omitempty"`
	// Whether or not the guaranteed order is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
	EntityStatus *GuaranteedOrderStatusEntityStatusEnum `json:"entityStatus,omitempty"`
}
