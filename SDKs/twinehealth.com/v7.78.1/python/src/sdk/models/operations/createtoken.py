"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createorupdateerrorresponse as shared_createorupdateerrorresponse
from ..shared import createtokenrequest as shared_createtokenrequest
from ..shared import createtokenresponse as shared_createtokenresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateTokenSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class CreateTokenIncludeEnum(str, Enum):
    r"""List of related resources to include in the response"""
    GROUPS = 'groups'
    ORGANIZATION = 'organization'


@dataclasses.dataclass
class CreateTokenRequest:
    
    create_token_request: shared_createtokenrequest.CreateTokenRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    include: Optional[CreateTokenIncludeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include', 'style': 'form', 'explode': True }})
    r"""List of related resources to include in the response"""  
    

@dataclasses.dataclass
class CreateTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_or_update_error_response: Optional[shared_createorupdateerrorresponse.CreateOrUpdateErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    create_token_response: Optional[shared_createtokenresponse.CreateTokenResponse] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    