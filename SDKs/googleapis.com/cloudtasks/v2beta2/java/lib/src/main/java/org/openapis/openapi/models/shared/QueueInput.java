/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueueInput - A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, target types, and others.
 */
public class QueueInput {
    /**
     * App Engine HTTP target. The task will be delivered to the App Engine application hostname specified by its AppEngineHttpTarget and AppEngineHttpRequest. The documentation for AppEngineHttpRequest explains how the task's host URL is constructed. Using AppEngineHttpTarget requires [`appengine.applications.get`](https://cloud.google.com/appengine/docs/admin-api/access-control) Google IAM permission for the project and the following scope: `https://www.googleapis.com/auth/cloud-platform`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appEngineHttpTarget")
    public AppEngineHttpTarget appEngineHttpTarget;

    public QueueInput withAppEngineHttpTarget(AppEngineHttpTarget appEngineHttpTarget) {
        this.appEngineHttpTarget = appEngineHttpTarget;
        return this;
    }
    
    /**
     * HTTP target. When specified as a Queue, all the tasks with [HttpRequest] will be overridden according to the target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpTarget")
    public HttpTarget httpTarget;

    public QueueInput withHttpTarget(HttpTarget httpTarget) {
        this.httpTarget = httpTarget;
        return this;
    }
    
    /**
     * Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public QueueInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Pull target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pullTarget")
    public java.util.Map<String, Object> pullTarget;

    public QueueInput withPullTarget(java.util.Map<String, Object> pullTarget) {
        this.pullTarget = pullTarget;
        return this;
    }
    
    /**
     * Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purgeTime")
    public String purgeTime;

    public QueueInput withPurgeTime(String purgeTime) {
        this.purgeTime = purgeTime;
        return this;
    }
    
    /**
     * Rate limits. This message determines the maximum rate that tasks can be dispatched by a queue, regardless of whether the dispatch is a first task attempt or a retry. Note: The debugging command, RunTask, will run a task even if the queue has reached its RateLimits.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rateLimits")
    public RateLimits rateLimits;

    public QueueInput withRateLimits(RateLimits rateLimits) {
        this.rateLimits = rateLimits;
        return this;
    }
    
    /**
     * Retry config. These settings determine how a failed task attempt is retried.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryConfig")
    public RetryConfig retryConfig;

    public QueueInput withRetryConfig(RetryConfig retryConfig) {
        this.retryConfig = retryConfig;
        return this;
    }
    
    /**
     * Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public QueueStateEnum state;

    public QueueInput withState(QueueStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskTtl")
    public String taskTtl;

    public QueueInput withTaskTtl(String taskTtl) {
        this.taskTtl = taskTtl;
        return this;
    }
    
    /**
     * The task tombstone time to live (TTL). After a task is deleted or completed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tombstoneTtl")
    public String tombstoneTtl;

    public QueueInput withTombstoneTtl(String tombstoneTtl) {
        this.tombstoneTtl = tombstoneTtl;
        return this;
    }
    
    public QueueInput(){}
}
