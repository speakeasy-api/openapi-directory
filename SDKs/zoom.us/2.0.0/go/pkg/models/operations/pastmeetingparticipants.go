// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PastMeetingParticipantsSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PastMeetingParticipantsRequest struct {
	// The meeting UUID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for other API calls if the UUID begins with a '/'or contains '//' in it.
	MeetingUUID string `pathParam:"style=simple,explode=false,name=meetingUUID"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type PastMeetingParticipants200ApplicationXMLParticipants struct {
	// Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
	ID *string
	// Participant display name.
	Name *string
	// Email address of the user. This field will be returned if the user logged into Zoom to join the meeting.
	UserEmail *string
}

// PastMeetingParticipants200ApplicationXML - Pagination object.
type PastMeetingParticipants200ApplicationXML struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// The number of pages returned for the request made.
	PageCount *int64
	// The number of records returned within a single API call.
	PageSize *int64
	// Array of meeting participant objects.
	Participants []PastMeetingParticipants200ApplicationXMLParticipants
	// The number of all records available across pages.
	TotalRecords *int64
}

type PastMeetingParticipants200ApplicationJSONParticipants struct {
	// Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
	ID *string `json:"id,omitempty"`
	// Participant display name.
	Name *string `json:"name,omitempty"`
	// Email address of the user. This field will be returned if the user logged into Zoom to join the meeting.
	UserEmail *string `json:"user_email,omitempty"`
}

// PastMeetingParticipants200ApplicationJSON - Pagination object.
type PastMeetingParticipants200ApplicationJSON struct {
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// Array of meeting participant objects.
	Participants []PastMeetingParticipants200ApplicationJSONParticipants `json:"participants,omitempty"`
	// The number of all records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type PastMeetingParticipantsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Meeting participants' report returned.
	PastMeetingParticipants200ApplicationJSONObject *PastMeetingParticipants200ApplicationJSON
}
