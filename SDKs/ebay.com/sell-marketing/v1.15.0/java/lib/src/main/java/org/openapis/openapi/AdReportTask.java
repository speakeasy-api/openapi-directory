/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.apache.http.NameValuePair;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class AdReportTask {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public AdReportTask(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * &lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt; Using multiple funding models in one report is deprecated. If multiple funding models are used, a Warning will be returned in a header. This functionality will be decommissioned on April 3, 2023. See &lt;a href="/develop/apis/api-deprecation-status"&gt;API Deprecation Status&lt;/a&gt; for details.&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;This method creates a &lt;i&gt;report task&lt;/i&gt;, which generates a Promoted Listings report based on the values specified in the call.&lt;br /&gt;&lt;br /&gt;The report is generated based on the criteria you specify, including the report type, the report's dimensions and metrics, the report's start and end dates, the listings to include in the report, and more. &lt;i&gt;Metrics &lt;/i&gt;are the quantitative measurements in the report while &lt;i&gt;dimensions&lt;/i&gt; specify the attributes of the data included in the reports.&lt;br /&gt;&lt;br /&gt;When creating a report task, you can specify the items you want included in the report. The items you specify, using either &lt;b&gt;listingId&lt;/b&gt; or &lt;b&gt;inventoryReference&lt;/b&gt; values, must be in a Promoted Listings campaign for them to be included in the report.&lt;br /&gt;&lt;br /&gt;For details on the required and optional fields for each report type, see &lt;a href="/api-docs/sell/static/marketing/pl-reports.html"&gt;Promoted Listings reporting&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This call returns the URL to the report task in the &lt;b&gt;Location&lt;/b&gt; response header, and the URL includes the report-task ID.&lt;br /&gt;&lt;br /&gt;Reports often take time to generate and it's common for this call to return an HTTP status of &lt;code&gt;202&lt;/code&gt;, which indicates the report is being generated. Call &lt;a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks"&gt;getReportTasks&lt;/a&gt; (or &lt;a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTask"&gt;getReportTask&lt;/a&gt; with the report-task ID) to determine the status of a Promoted Listings report. When a report is complete, eBay sets its status to &lt;b&gt;SUCCESS&lt;/b&gt; and you can download it using the URL returned in the &lt;b&gt;reportHref&lt;/b&gt; field of the &lt;b&gt;getReportTask&lt;/b&gt; call. Report files are tab-separated value gzip files with a file extension of &lt;code&gt;.tsv.gz&lt;/code&gt;.&lt;br/&gt;&lt;br/&gt;&lt;span class="tablenote"&gt;&lt;b&gt;Note:&lt;/b&gt; The reporting of some data related to sales and ad-fees may require a 72-hour (&lt;b&gt;maximum&lt;/b&gt;) adjustment period which is often referred to as the &lt;i&gt;Reconciliation Period&lt;/i&gt;. Such adjustment periods should, on average, be minimal. However, at any given time, the &lt;b&gt;payments&lt;/b&gt; tab may be used to view those amounts that have actually been charged.&lt;/span&gt;&lt;br /&gt;&lt;span class="tablenote"&gt;&lt;span style="color:#004680"&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/span&gt; This call fails if you don't submit all the required fields for the specified report type. Fields not supported by the specified report type are ignored. Call &lt;a href="/api-docs/sell/marketing/resources/ad_report_metadata/methods/getReportMetadata"&gt;getReportMetadata&lt;/a&gt; to retrieve a list of the fields you need to configure for each Promoted Listings report type.&lt;/span&gt;&lt;br/&gt;&lt;div class="msgbox_important"&gt;&lt;p class="msgbox_importantInDiv" data-mc-autonum="&amp;lt;b&amp;gt;&amp;lt;span style=&amp;quot;color: #dd1e31;&amp;quot; class=&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;"&gt;&lt;span class="autonumber"&gt;&lt;span&gt;&lt;b&gt;&lt;span style="color: #dd1e31;" class="mcFormatColor"&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;For &lt;b&gt;ad_report&lt;/b&gt; and &lt;b&gt;ad_report_task&lt;/b&gt; methods, the API call limit is subject to a per user quota. These API calls can &lt;b&gt;only&lt;/b&gt; be executed a maximum of 200 times per hour for each seller/user. If the number of calls per hour exceeds this limit, any new calls will be blocked for the next hour.&lt;/p&gt;&lt;/div&gt;
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateReportTaskResponse createReportTask(org.openapis.openapi.models.shared.CreateReportTask request, org.openapis.openapi.models.operations.CreateReportTaskSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/ad_report_task");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateReportTaskResponse res = new org.openapis.openapi.models.operations.CreateReportTaskResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 202 || httpRes.statusCode() == 400 || httpRes.statusCode() == 403 || httpRes.statusCode() == 409 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * This call deletes the report task specified by the &lt;b&gt;report_task_id&lt;/b&gt; path parameter. This method also deletes any reports generated by the report task.  &lt;p&gt;Report task IDs are generated by eBay when you call &lt;a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask"&gt;createReportTask&lt;/a&gt;. Get a complete list of a seller's report-task IDs by calling &lt;a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks"&gt;getReportTasks&lt;/a&gt;.&lt;/p&gt;&lt;br/&gt;&lt;div class="msgbox_important"&gt;&lt;p class="msgbox_importantInDiv" data-mc-autonum="&amp;lt;b&amp;gt;&amp;lt;span style=&amp;quot;color: #dd1e31;&amp;quot; class=&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;"&gt;&lt;span class="autonumber"&gt;&lt;span&gt;&lt;b&gt;&lt;span style="color: #dd1e31;" class="mcFormatColor"&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;For &lt;b&gt;ad_report&lt;/b&gt; and &lt;b&gt;ad_report_task&lt;/b&gt; methods, the API call limit is subject to a per user quota. These API calls can &lt;b&gt;only&lt;/b&gt; be executed a maximum of 200 times per hour for each seller/user. If the number of calls per hour exceeds this limit, any new calls will be blocked for the next hour.&lt;/p&gt;&lt;/div&gt;
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.DeleteReportTaskResponse deleteReportTask(org.openapis.openapi.models.operations.DeleteReportTaskRequest request, org.openapis.openapi.models.operations.DeleteReportTaskSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.DeleteReportTaskRequest.class, baseUrl, "/ad_report_task/{report_task_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("DELETE");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.DeleteReportTaskResponse res = new org.openapis.openapi.models.operations.DeleteReportTaskResponse(contentType, httpRes.statusCode()) {{
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 204 || httpRes.statusCode() == 400 || httpRes.statusCode() == 404 || httpRes.statusCode() == 409 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * This call returns the details of a specific Promoted Listings report task, as specified by the &lt;b&gt;report_task_id&lt;/b&gt; path parameter. &lt;p&gt;The report task includes the report criteria (such as the report dimensions, metrics, and included listing) and the report-generation rules (such as starting and ending dates for the specified report task).&lt;/p&gt;  &lt;p&gt;Report-task IDs are generated by eBay when you call &lt;a href="/api-docs/sell/marketing/resources/ad_report_task/methods/createReportTask"&gt;createReportTask&lt;/a&gt;. Get a complete list of a seller's report-task IDs by calling &lt;a href="/api-docs/sell/marketing/resources/ad_report_task/methods/getReportTasks"&gt;getReportTasks&lt;/a&gt;.&lt;/p&gt;&lt;br/&gt;&lt;div class="msgbox_important"&gt;&lt;p class="msgbox_importantInDiv" data-mc-autonum="&amp;lt;b&amp;gt;&amp;lt;span style=&amp;quot;color: #dd1e31;&amp;quot; class=&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;"&gt;&lt;span class="autonumber"&gt;&lt;span&gt;&lt;b&gt;&lt;span style="color: #dd1e31;" class="mcFormatColor"&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;For &lt;b&gt;ad_report&lt;/b&gt; and &lt;b&gt;ad_report_task&lt;/b&gt; methods, the API call limit is subject to a per user quota. These API calls can &lt;b&gt;only&lt;/b&gt; be executed a maximum of 200 times per hour for each seller/user. If the number of calls per hour exceeds this limit, any new calls will be blocked for the next hour.&lt;/p&gt;&lt;/div&gt;
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetReportTaskResponse getReportTask(org.openapis.openapi.models.operations.GetReportTaskRequest request, org.openapis.openapi.models.operations.GetReportTaskSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.GetReportTaskRequest.class, baseUrl, "/ad_report_task/{report_task_id}", request, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetReportTaskResponse res = new org.openapis.openapi.models.operations.GetReportTaskResponse(contentType, httpRes.statusCode()) {{
            reportTask = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ReportTask out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ReportTask.class);
                res.reportTask = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 404 || httpRes.statusCode() == 500) {
        }

        return res;
    }

    /**
     * This method returns information on all the existing report tasks related to a seller. &lt;p&gt;Use the &lt;b&gt;report_task_statuses&lt;/b&gt; query parameter to control which reports to return. You can paginate the result set by specifying a &lt;b&gt;limit&lt;/b&gt;, which dictates how many report tasks to return on each page of the response. Use the &lt;b&gt;offset&lt;/b&gt; parameter to specify how many reports to skip in the result set before returning the first result.&lt;/p&gt;&lt;br/&gt;&lt;div class="msgbox_important"&gt;&lt;p class="msgbox_importantInDiv" data-mc-autonum="&amp;lt;b&amp;gt;&amp;lt;span style=&amp;quot;color: #dd1e31;&amp;quot; class=&amp;quot;mcFormatColor&amp;quot;&amp;gt;Important! &amp;lt;/span&amp;gt;&amp;lt;/b&amp;gt;"&gt;&lt;span class="autonumber"&gt;&lt;span&gt;&lt;b&gt;&lt;span style="color: #dd1e31;" class="mcFormatColor"&gt;Important!&lt;/span&gt;&lt;/b&gt;&lt;/span&gt;&lt;/span&gt;For &lt;b&gt;ad_report&lt;/b&gt; and &lt;b&gt;ad_report_task&lt;/b&gt; methods, the API call limit is subject to a per user quota. These API calls can &lt;b&gt;only&lt;/b&gt; be executed a maximum of 200 times per hour for each seller/user. If the number of calls per hour exceeds this limit, any new calls will be blocked for the next hour.&lt;/p&gt;&lt;/div&gt;
     * @param request the request object containing all of the parameters for the API call
     * @param security the security details to use for authentication
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.GetReportTasksResponse getReportTasks(org.openapis.openapi.models.operations.GetReportTasksRequest request, org.openapis.openapi.models.operations.GetReportTasksSecurity security) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/ad_report_task");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("GET");
        req.setURL(url);
        
        java.util.List<NameValuePair> queryParams = org.openapis.openapi.utils.Utils.getQueryParams(org.openapis.openapi.models.operations.GetReportTasksRequest.class, request, null);
        if (queryParams != null) {
            for (NameValuePair queryParam : queryParams) {
                req.addQueryParam(queryParam);
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.GetReportTasksResponse res = new org.openapis.openapi.models.operations.GetReportTasksResponse(contentType, httpRes.statusCode()) {{
            reportTaskPagedCollection = null;
        }};
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 200) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.shared.ReportTaskPagedCollection out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.shared.ReportTaskPagedCollection.class);
                res.reportTaskPagedCollection = out;
            }
        }
        else if (httpRes.statusCode() == 400 || httpRes.statusCode() == 500) {
        }

        return res;
    }
}