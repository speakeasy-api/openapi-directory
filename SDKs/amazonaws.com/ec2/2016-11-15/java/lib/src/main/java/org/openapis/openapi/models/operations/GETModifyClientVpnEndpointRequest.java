/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyClientVpnEndpointRequest {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyClientVpnEndpointActionEnum action;
    public GETModifyClientVpnEndpointRequest withAction(GETModifyClientVpnEndpointActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The options for managing connection authorization for new client connections.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientConnectOptions")
    public GETModifyClientVpnEndpointClientConnectOptions clientConnectOptions;
    public GETModifyClientVpnEndpointRequest withClientConnectOptions(GETModifyClientVpnEndpointClientConnectOptions clientConnectOptions) {
        this.clientConnectOptions = clientConnectOptions;
        return this;
    }
    
    /**
     * Options for enabling a customizable text banner that will be displayed on Amazon Web Services provided clients when a VPN session is established.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientLoginBannerOptions")
    public GETModifyClientVpnEndpointClientLoginBannerOptions clientLoginBannerOptions;
    public GETModifyClientVpnEndpointRequest withClientLoginBannerOptions(GETModifyClientVpnEndpointClientLoginBannerOptions clientLoginBannerOptions) {
        this.clientLoginBannerOptions = clientLoginBannerOptions;
        return this;
    }
    
    /**
     * The ID of the Client VPN endpoint to modify.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientVpnEndpointId")
    public String clientVpnEndpointId;
    public GETModifyClientVpnEndpointRequest withClientVpnEndpointId(String clientVpnEndpointId) {
        this.clientVpnEndpointId = clientVpnEndpointId;
        return this;
    }
    
    /**
     * &lt;p&gt;Information about the client connection logging options.&lt;/p&gt; &lt;p&gt;If you enable client connection logging, data about client connections is sent to a Cloudwatch Logs log stream. The following information is logged:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Client connection requests&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Client connection results (successful and unsuccessful)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Reasons for unsuccessful client connection requests&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Client connection termination time&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ConnectionLogOptions")
    public GETModifyClientVpnEndpointConnectionLogOptions connectionLogOptions;
    public GETModifyClientVpnEndpointRequest withConnectionLogOptions(GETModifyClientVpnEndpointConnectionLogOptions connectionLogOptions) {
        this.connectionLogOptions = connectionLogOptions;
        return this;
    }
    
    /**
     * A brief description of the Client VPN endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Description")
    public String description;
    public GETModifyClientVpnEndpointRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Information about the DNS servers to be used by Client VPN connections. A Client VPN endpoint can have up to two DNS servers.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DnsServers")
    public GETModifyClientVpnEndpointDNSServers dnsServers;
    public GETModifyClientVpnEndpointRequest withDnsServers(GETModifyClientVpnEndpointDNSServers dnsServers) {
        this.dnsServers = dnsServers;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETModifyClientVpnEndpointRequest withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The IDs of one or more security groups to apply to the target network.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SecurityGroupId")
    public String[] securityGroupId;
    public GETModifyClientVpnEndpointRequest withSecurityGroupId(String[] securityGroupId) {
        this.securityGroupId = securityGroupId;
        return this;
    }
    
    /**
     * Specify whether to enable the self-service portal for the Client VPN endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SelfServicePortal")
    public GETModifyClientVpnEndpointSelfServicePortalEnum selfServicePortal;
    public GETModifyClientVpnEndpointRequest withSelfServicePortal(GETModifyClientVpnEndpointSelfServicePortalEnum selfServicePortal) {
        this.selfServicePortal = selfServicePortal;
        return this;
    }
    
    /**
     * The ARN of the server certificate to be used. The server certificate must be provisioned in Certificate Manager (ACM).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ServerCertificateArn")
    public String serverCertificateArn;
    public GETModifyClientVpnEndpointRequest withServerCertificateArn(String serverCertificateArn) {
        this.serverCertificateArn = serverCertificateArn;
        return this;
    }
    
    /**
     * &lt;p&gt;The maximum VPN session duration time in hours.&lt;/p&gt; &lt;p&gt;Valid values: &lt;code&gt;8 | 10 | 12 | 24&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Default value: &lt;code&gt;24&lt;/code&gt; &lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SessionTimeoutHours")
    public Long sessionTimeoutHours;
    public GETModifyClientVpnEndpointRequest withSessionTimeoutHours(Long sessionTimeoutHours) {
        this.sessionTimeoutHours = sessionTimeoutHours;
        return this;
    }
    
    /**
     * &lt;p&gt;Indicates whether the VPN is split-tunnel.&lt;/p&gt; &lt;p&gt;For information about split-tunnel VPN endpoints, see &lt;a href="https://docs.aws.amazon.com/vpn/latest/clientvpn-admin/split-tunnel-vpn.html"&gt;Split-tunnel Client VPN endpoint&lt;/a&gt; in the &lt;i&gt;Client VPN Administrator Guide&lt;/i&gt;.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SplitTunnel")
    public Boolean splitTunnel;
    public GETModifyClientVpnEndpointRequest withSplitTunnel(Boolean splitTunnel) {
        this.splitTunnel = splitTunnel;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyClientVpnEndpointVersionEnum version;
    public GETModifyClientVpnEndpointRequest withVersion(GETModifyClientVpnEndpointVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The ID of the VPC to associate with the Client VPN endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpcId")
    public String vpcId;
    public GETModifyClientVpnEndpointRequest withVpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }
    
    /**
     * &lt;p&gt;The port number to assign to the Client VPN endpoint for TCP and UDP traffic.&lt;/p&gt; &lt;p&gt;Valid Values: &lt;code&gt;443&lt;/code&gt; | &lt;code&gt;1194&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Default Value: &lt;code&gt;443&lt;/code&gt; &lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpnPort")
    public Long vpnPort;
    public GETModifyClientVpnEndpointRequest withVpnPort(Long vpnPort) {
        this.vpnPort = vpnPort;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public GETModifyClientVpnEndpointRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public GETModifyClientVpnEndpointRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public GETModifyClientVpnEndpointRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public GETModifyClientVpnEndpointRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public GETModifyClientVpnEndpointRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public GETModifyClientVpnEndpointRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public GETModifyClientVpnEndpointRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
}
