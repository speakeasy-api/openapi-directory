// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InsertSectionBreakRequestSectionTypeEnum - The type of section to insert.
type InsertSectionBreakRequestSectionTypeEnum string

const (
	InsertSectionBreakRequestSectionTypeEnumSectionTypeUnspecified InsertSectionBreakRequestSectionTypeEnum = "SECTION_TYPE_UNSPECIFIED"
	InsertSectionBreakRequestSectionTypeEnumContinuous             InsertSectionBreakRequestSectionTypeEnum = "CONTINUOUS"
	InsertSectionBreakRequestSectionTypeEnumNextPage               InsertSectionBreakRequestSectionTypeEnum = "NEXT_PAGE"
)

func (e *InsertSectionBreakRequestSectionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SECTION_TYPE_UNSPECIFIED":
		fallthrough
	case "CONTINUOUS":
		fallthrough
	case "NEXT_PAGE":
		*e = InsertSectionBreakRequestSectionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsertSectionBreakRequestSectionTypeEnum: %s", s)
	}
}

// InsertSectionBreakRequest - Inserts a section break at the given location. A newline character will be inserted before the section break.
type InsertSectionBreakRequest struct {
	// Location at the end of a body, header, footer or footnote. The location is immediately before the last newline in the document segment.
	EndOfSegmentLocation *EndOfSegmentLocation `json:"endOfSegmentLocation,omitempty"`
	// A particular location in the document.
	Location *Location `json:"location,omitempty"`
	// The type of section to insert.
	SectionType *InsertSectionBreakRequestSectionTypeEnum `json:"sectionType,omitempty"`
}
