/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecaptchaenterpriseV1TransactionData - Transaction data associated with a payment protected by reCAPTCHA Enterprise. All fields are optional.
 */
public class GoogleCloudRecaptchaenterpriseV1TransactionData {
    /**
     * Structured address format for billing and shipping addresses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingAddress")
    public GoogleCloudRecaptchaenterpriseV1TransactionDataAddress billingAddress;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withBillingAddress(GoogleCloudRecaptchaenterpriseV1TransactionDataAddress billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    /**
     * The Bank Identification Number - generally the first 6 or 8 digits of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardBin")
    public String cardBin;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withCardBin(String cardBin) {
        this.cardBin = cardBin;
        return this;
    }
    
    /**
     * The last four digits of the card.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardLastFour")
    public String cardLastFour;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withCardLastFour(String cardLastFour) {
        this.cardLastFour = cardLastFour;
        return this;
    }
    
    /**
     * The currency code in ISO-4217 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * Details about the transaction from the gateway.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatewayInfo")
    public GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo gatewayInfo;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withGatewayInfo(GoogleCloudRecaptchaenterpriseV1TransactionDataGatewayInfo gatewayInfo) {
        this.gatewayInfo = gatewayInfo;
        return this;
    }
    
    /**
     * Items purchased in this transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public GoogleCloudRecaptchaenterpriseV1TransactionDataItem[] items;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withItems(GoogleCloudRecaptchaenterpriseV1TransactionDataItem[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Information about the user or users fulfilling the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchants")
    public GoogleCloudRecaptchaenterpriseV1TransactionDataUser[] merchants;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withMerchants(GoogleCloudRecaptchaenterpriseV1TransactionDataUser[] merchants) {
        this.merchants = merchants;
        return this;
    }
    
    /**
     * The payment method for the transaction. The allowed values are: * credit-card * debit-card * gift-card * processor-{name} (If a third-party is used, for example, processor-paypal) * custom-{name} (If an alternative method is used, for example, custom-crypto)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentMethod")
    public String paymentMethod;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * Structured address format for billing and shipping addresses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingAddress")
    public GoogleCloudRecaptchaenterpriseV1TransactionDataAddress shippingAddress;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withShippingAddress(GoogleCloudRecaptchaenterpriseV1TransactionDataAddress shippingAddress) {
        this.shippingAddress = shippingAddress;
        return this;
    }
    
    /**
     * The value of shipping in the specified currency. 0 for free or no shipping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingValue")
    public Double shippingValue;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withShippingValue(Double shippingValue) {
        this.shippingValue = shippingValue;
        return this;
    }
    
    /**
     * Unique identifier for the transaction. This custom identifier can be used to reference this transaction in the future, for example, labeling a refund or chargeback event. Two attempts at the same transaction should use the same transaction id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionId")
    public String transactionId;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * Details about a user's account involved in the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public GoogleCloudRecaptchaenterpriseV1TransactionDataUser user;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withUser(GoogleCloudRecaptchaenterpriseV1TransactionDataUser user) {
        this.user = user;
        return this;
    }
    
    /**
     * The decimal value of the transaction in the specified currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Double value;
    public GoogleCloudRecaptchaenterpriseV1TransactionData withValue(Double value) {
        this.value = value;
        return this;
    }
    
}
