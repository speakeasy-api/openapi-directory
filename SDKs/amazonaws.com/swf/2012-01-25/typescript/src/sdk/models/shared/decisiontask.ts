/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HistoryEvent } from "./historyevent";
import { WorkflowExecution } from "./workflowexecution";
import { WorkflowType } from "./workflowtype";
import { Expose, Type } from "class-transformer";

/**
 * A structure that represents a decision task. Decision tasks are sent to deciders in order for them to make decisions.
 */
export class DecisionTask extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: HistoryEvent })
  @Expose({ name: "events" })
  @Type(() => HistoryEvent)
  events: HistoryEvent[];

  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previousStartedEventId" })
  previousStartedEventId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startedEventId" })
  startedEventId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "taskToken" })
  taskToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowExecution" })
  @Type(() => WorkflowExecution)
  workflowExecution: WorkflowExecution;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowType" })
  @Type(() => WorkflowType)
  workflowType: WorkflowType;
}
