// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// CreateEmailTemplateRequestBodyTemplateContent - The content of the email, composed of a subject line, an HTML part, and a text-only part.
type CreateEmailTemplateRequestBodyTemplateContent struct {
	HTML    *string `json:"Html,omitempty"`
	Subject *string `json:"Subject,omitempty"`
	Text    *string `json:"Text,omitempty"`
}

type CreateEmailTemplateRequestBody struct {
	// The content of the email, composed of a subject line, an HTML part, and a text-only part.
	TemplateContent CreateEmailTemplateRequestBodyTemplateContent `json:"TemplateContent"`
	// The name of the template. You will refer to this name when you send email using the <code>SendTemplatedEmail</code> or <code>SendBulkTemplatedEmail</code> operations.
	TemplateName string `json:"TemplateName"`
}

type CreateEmailTemplateRequest struct {
	RequestBody       CreateEmailTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateEmailTemplateResponse struct {
	// AlreadyExistsException
	AlreadyExistsException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateEmailTemplateResponse map[string]interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
