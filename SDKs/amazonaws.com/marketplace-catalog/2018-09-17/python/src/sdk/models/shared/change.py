"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import entity as shared_entity
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Change:
    r"""An object that contains the <code>ChangeType</code>, <code>Details</code>, and <code>Entity</code>."""
    
    change_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChangeType') }})  
    details: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Details') }})  
    entity: shared_entity.Entity = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Entity') }})  
    change_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChangeName'), 'exclude': lambda f: f is None }})  
    entity_tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntityTags'), 'exclude': lambda f: f is None }})  
    