/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GlueTable } from "./gluetable";
import { TransformEncryption } from "./transformencryption";
import { TransformParameters } from "./transformparameters";
import { WorkerTypeEnum } from "./workertypeenum";
import { Expose, Type } from "class-transformer";

export class CreateMLTransformRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GlueVersion" })
  glueVersion?: string;

  @SpeakeasyMetadata({ elemType: GlueTable })
  @Expose({ name: "InputRecordTables" })
  @Type(() => GlueTable)
  inputRecordTables: GlueTable[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxRetries" })
  maxRetries?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfWorkers" })
  numberOfWorkers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  @Type(() => TransformParameters)
  parameters: TransformParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "Role" })
  role: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Timeout" })
  timeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TransformEncryption" })
  @Type(() => TransformEncryption)
  transformEncryption?: TransformEncryption;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerType" })
  workerType?: WorkerTypeEnum;
}
