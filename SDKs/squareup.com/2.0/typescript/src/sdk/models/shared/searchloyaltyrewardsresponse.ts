/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { LoyaltyReward } from "./loyaltyreward";
import { Expose, Type } from "class-transformer";

/**
 * A response that includes the loyalty rewards satisfying the search criteria.
 */
export class SearchLoyaltyRewardsResponse extends SpeakeasyBase {
  /**
   * The pagination cursor to be used in a subsequent
   *
   * @remarks
   * request. If empty, this is the final response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * Any errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * The loyalty rewards that satisfy the search criteria.
   *
   * @remarks
   * These are returned in descending order by `updated_at`.
   */
  @SpeakeasyMetadata({ elemType: LoyaltyReward })
  @Expose({ name: "rewards" })
  @Type(() => LoyaltyReward)
  rewards?: LoyaltyReward[];
}
