"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Autolink:
    r"""An autolink reference."""
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    is_alphanumeric: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_alphanumeric') }})
    r"""Whether this autolink reference matches alphanumeric characters. If false, this autolink reference only matches numeric characters."""  
    key_prefix: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key_prefix') }})
    r"""The prefix of a key that is linkified."""  
    url_template: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_template') }})
    r"""A template for the target URL that is generated if a key was found."""  
    