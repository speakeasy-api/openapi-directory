"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class ReportsIndexRequest:
    
    end_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""The end date of the report in the format ddmmyyyy (i.e 31012016)"""  
    page: int = dataclasses.field(metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The page offset to return."""  
    page_size: int = dataclasses.field(metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of rows to return."""  
    report_type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'report_type', 'style': 'simple', 'explode': False }})
    r"""Report Type Id (i.e Daily, Monthly, Annual)"""  
    sites: str = dataclasses.field(metadata={'query_param': { 'field_name': 'sites', 'style': 'form', 'explode': True }})
    r"""Comma separated list of site Ids."""  
    start_date: str = dataclasses.field(metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""The start date of the report in the format ddmmyyyy (i.e 31012016)"""  
    version: str = dataclasses.field(metadata={'path_param': { 'field_name': 'version', 'style': 'simple', 'explode': False }})  
    report_sub_type_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'reportSubTypeId', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class ReportsIndexResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    