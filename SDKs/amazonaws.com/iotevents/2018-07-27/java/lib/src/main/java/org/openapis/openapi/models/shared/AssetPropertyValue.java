/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AssetPropertyValue - &lt;p&gt;A structure that contains value information. For more information, see &lt;a href="https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html"&gt;AssetPropertyValue&lt;/a&gt; in the &lt;i&gt;AWS IoT SiteWise API Reference&lt;/i&gt;.&lt;/p&gt; &lt;p&gt;You must use expressions for all parameters in &lt;code&gt;AssetPropertyValue&lt;/code&gt;. The expressions accept literals, operators, functions, references, and substitution templates.&lt;/p&gt; &lt;p class="title"&gt; &lt;b&gt;Examples&lt;/b&gt; &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For literal values, the expressions must contain single quotes. For example, the value for the &lt;code&gt;quality&lt;/code&gt; parameter can be &lt;code&gt;'GOOD'&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For references, you must specify either variables or input values. For example, the value for the &lt;code&gt;quality&lt;/code&gt; parameter can be &lt;code&gt;$input.TemperatureInput.sensorData.quality&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html"&gt;Expressions&lt;/a&gt; in the &lt;i&gt;AWS IoT Events Developer Guide&lt;/i&gt;.&lt;/p&gt;
 */
public class AssetPropertyValue {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quality")
    public String quality;
    public AssetPropertyValue withQuality(String quality) {
        this.quality = quality;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public AssetPropertyTimestamp timestamp;
    public AssetPropertyValue withTimestamp(AssetPropertyTimestamp timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public AssetPropertyVariant value;
    public AssetPropertyValue withValue(AssetPropertyVariant value) {
        this.value = value;
        return this;
    }
    
}
