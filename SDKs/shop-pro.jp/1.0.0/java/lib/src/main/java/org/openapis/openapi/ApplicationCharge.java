/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi;

import com.fasterxml.jackson.databind.ObjectMapper;
import java.net.http.HttpResponse;
import java.nio.charset.StandardCharsets;
import org.openapis.openapi.utils.HTTPClient;
import org.openapis.openapi.utils.HTTPRequest;
import org.openapis.openapi.utils.JSON;
import org.openapis.openapi.utils.SerializedBody;

public class ApplicationCharge {
	
	private HTTPClient _defaultClient;
	private HTTPClient _securityClient;
	private String _serverUrl;
	private String _language;
	private String _sdkVersion;
	private String _genVersion;

	public ApplicationCharge(HTTPClient defaultClient, HTTPClient securityClient, String serverUrl, String language, String sdkVersion, String genVersion) {
		this._defaultClient = defaultClient;
		this._securityClient = securityClient;
		this._serverUrl = serverUrl;
		this._language = language;
		this._sdkVersion = sdkVersion;
		this._genVersion = genVersion;
	}

    /**
     * \u5f93\u91cf\u8ab2\u91d1\u30c7\u30fc\u30bf\u306e\u4f5c\u6210
     * \u30a2\u30d7\u30ea\u5185\u3067\u57fa\u672c\u6a5f\u80fd\u304c\u5229\u7528\u3055\u308c\u305f\u983b\u5ea6\u306b\u4f34\u3063\u3066\u6bce\u6708\u306e\u8acb\u6c42\u304c\u5909\u52d5\u3059\u308b\u3088\u3046\u306a\u30a2\u30d7\u30ea\u306e\u5834\u5408\u306f\u300c\u5f93\u91cf\u8ab2\u91d1\u300d\u3092\u4f7f\u3063\u3066\u5229\u7528\u8005\u306b\u5909\u52d5\u5206\u306e\u8acb\u6c42\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002
     * \u203b\u7121\u6599\u304a\u8a66\u3057\u671f\u9593\u4e2d\u306e\u30b7\u30e7\u30c3\u30d7\u306b\u5bfe\u3057\u3066\u306f\u5f93\u91cf\u8ab2\u91d1\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3067\u304d\u307e\u305b\u3093\u3002
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.CreateUsageChargeResponse createUsageCharge(org.openapis.openapi.models.operations.CreateUsageChargeRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(org.openapis.openapi.models.operations.CreateUsageChargePathParams.class, baseUrl, "/appstore/v1/recurring_application_charges/{recurringApplicationChargeId}/usage_charges.json", request.pathParams, null);
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        java.util.Map<String, java.util.List<String>> headers = org.openapis.openapi.utils.Utils.getHeaders(request.headers);
        if (headers != null) {
            for (java.util.Map.Entry<String, java.util.List<String>> header : headers.entrySet()) {
                for (String value : header.getValue()) {
                    req.addHeader(header.getKey(), value);
                }
            }
        }
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.CreateUsageChargeResponse res = new org.openapis.openapi.models.operations.CreateUsageChargeResponse() {{
            createUsageCharge201ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.CreateUsageCharge201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.CreateUsageCharge201ApplicationJSON.class);
                res.createUsageCharge201ApplicationJSONObject = out;
            }
        }

        return res;
    }

    /**
     * \u30a2\u30d7\u30ea\u5185\u8ab2\u91d1\u30c7\u30fc\u30bf\u306e\u4f5c\u6210
     * \u300c\u30a2\u30d7\u30ea\u5185\u8ab2\u91d1\u300d\u306f\u3059\u3067\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306e\u30a2\u30d7\u30ea\u4e0a\u306b\u304a\u3044\u3066\u3001\u5229\u7528\u8005\u304c\u8ffd\u52a0\u306e\u8cb7\u3044\u5207\u308a\u306b\u3088\u308b\u8ab2\u91d1\u306b\u3088\u3063\u3066\u65b0\u305f\u306a\u30a2\u30d7\u30ea\u5185\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3055\u308c\u308b\u5834\u5408\u306a\u3069\u306b\u3001\u5229\u7528\u8005\u3078\u8cb7\u3044\u5207\u308a\u306e\u8ab2\u91d1\u5206\u306e\u8acb\u6c42\u3092\u884c\u3046\u305f\u3081\u306e\u8ab2\u91d1\u5f62\u5f0f\u3067\u3059\u3002
     * 
     * \u3053\u306e\u8ab2\u91d1\u306f\u30d7\u30e9\u30f3\u8ab2\u91d1\u306e\u60c5\u5831\u306b\u7d10\u4ed8\u304b\u306a\u3044\u305f\u3081\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u8ab2\u91d1\u30c7\u30fc\u30bf\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\u307e\u305f\u3001\u540c\u4e00\u306e\u30a2\u30d7\u30ea\u5185\u8ab2\u91d1ID\u3067\u540c\u3058\u5229\u7528\u8005\u3078\u8907\u6570\u56de\u8acb\u6c42\u3092\u884c\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002
     * 
     * \u305f\u3060\u3057\u3001\u30a2\u30d7\u30ea\u306e\u57fa\u672c\u6a5f\u80fd\u3068\u3057\u3066\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u5229\u7528\u3057\u305f\u91cf\u3084\u305d\u306e\u983b\u5ea6\u306a\u3069\u306b\u4f34\u3063\u3066\u6bce\u6708\u7570\u306a\u3063\u305f\u984d\u306e\u8acb\u6c42\u3092\u884c\u3046\u3088\u3046\u306a\u8ab2\u91d1\u306b\u3064\u3044\u3066\u306f\u3001\u30d7\u30e9\u30f3\u8ab2\u91d1\u306e\u300c\u5f93\u91cf\u306b\u3088\u308b\u8ab2\u91d1\u300d\u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u8acb\u6c42\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002
     * 
     * @param request the request object containing all of the parameters for the API call
     * @return the response from the API call
     * @throws Exception if the API call fails
     */
    public org.openapis.openapi.models.operations.PostApplicationChargeResponse postApplicationCharge(org.openapis.openapi.models.operations.PostApplicationChargeRequest request) throws Exception {
        String baseUrl = this._serverUrl;
        String url = org.openapis.openapi.utils.Utils.generateURL(baseUrl, "/appstore/v1/application_charges.json");
        
        HTTPRequest req = new HTTPRequest();
        req.setMethod("POST");
        req.setURL(url);
        SerializedBody serializedRequestBody = org.openapis.openapi.utils.Utils.serializeRequestBody(request, "request", "json");
        if (serializedRequestBody == null) {
            throw new Exception("Request body is required");
        }
        req.setBody(serializedRequestBody);
        
        
        HTTPClient client = org.openapis.openapi.utils.Utils.configureSecurityClient(this._defaultClient, request.security);
        
        HttpResponse<byte[]> httpRes = client.send(req);

        String contentType = httpRes.headers().firstValue("Content-Type").orElse("application/octet-stream");

        org.openapis.openapi.models.operations.PostApplicationChargeResponse res = new org.openapis.openapi.models.operations.PostApplicationChargeResponse() {{
            postApplicationCharge201ApplicationJSONObject = null;
        }};
        res.statusCode = httpRes.statusCode();
        res.contentType = contentType;
        res.rawResponse = httpRes;
        
        if (httpRes.statusCode() == 201) {
            if (org.openapis.openapi.utils.Utils.matchContentType(contentType, "application/json")) {
                ObjectMapper mapper = JSON.getMapper();
                org.openapis.openapi.models.operations.PostApplicationCharge201ApplicationJSON out = mapper.readValue(new String(httpRes.body(), StandardCharsets.UTF_8), org.openapis.openapi.models.operations.PostApplicationCharge201ApplicationJSON.class);
                res.postApplicationCharge201ApplicationJSONObject = out;
            }
        }

        return res;
    }
}