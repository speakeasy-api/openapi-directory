/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MessageEvent - An event describing a message sent/received between Spans.
 */
public class MessageEvent {
    /**
     * The number of compressed bytes sent or received. If missing, the compressed size is assumed to be the same size as the uncompressed size.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compressedSizeBytes")
    public String compressedSizeBytes;

    public MessageEvent withCompressedSizeBytes(String compressedSizeBytes) {
        this.compressedSizeBytes = compressedSizeBytes;
        return this;
    }
    
    /**
     * An identifier for the MessageEvent's message that can be used to match `SENT` and `RECEIVED` MessageEvents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public MessageEvent withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Type of MessageEvent. Indicates whether the message was sent or received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public MessageEventTypeEnum type;

    public MessageEvent withType(MessageEventTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The number of uncompressed bytes sent or received.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uncompressedSizeBytes")
    public String uncompressedSizeBytes;

    public MessageEvent withUncompressedSizeBytes(String uncompressedSizeBytes) {
        this.uncompressedSizeBytes = uncompressedSizeBytes;
        return this;
    }
    
    public MessageEvent(){}
}
