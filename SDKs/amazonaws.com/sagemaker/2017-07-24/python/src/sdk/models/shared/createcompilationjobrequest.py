"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inputconfig as shared_inputconfig
from ..shared import neovpcconfig as shared_neovpcconfig
from ..shared import outputconfig as shared_outputconfig
from ..shared import stoppingcondition as shared_stoppingcondition
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCompilationJobRequest:
    
    compilation_job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompilationJobName') }})  
    output_config: shared_outputconfig.OutputConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputConfig') }})  
    role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleArn') }})  
    stopping_condition: shared_stoppingcondition.StoppingCondition = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoppingCondition') }})  
    input_config: Optional[shared_inputconfig.InputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputConfig'), 'exclude': lambda f: f is None }})  
    model_package_version_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelPackageVersionArn'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    vpc_config: Optional[shared_neovpcconfig.NeoVpcConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcConfig'), 'exclude': lambda f: f is None }})  
    