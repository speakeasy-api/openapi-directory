// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateSlotTypeRequestBodyCompositeSlotTypeSetting - A composite slot is a combination of two or more slots that capture multiple pieces of information in a single user input.
type UpdateSlotTypeRequestBodyCompositeSlotTypeSetting struct {
	SubSlots []shared.SubSlotTypeComposition `json:"subSlots,omitempty"`
}

// UpdateSlotTypeRequestBodyExternalSourceSetting - Provides information about the external source of the slot type's definition.
type UpdateSlotTypeRequestBodyExternalSourceSetting struct {
	GrammarSlotTypeSetting *shared.GrammarSlotTypeSetting `json:"grammarSlotTypeSetting,omitempty"`
}

// UpdateSlotTypeRequestBodyValueSelectionSetting - Contains settings used by Amazon Lex to select a slot value.
type UpdateSlotTypeRequestBodyValueSelectionSetting struct {
	AdvancedRecognitionSetting *shared.AdvancedRecognitionSetting      `json:"advancedRecognitionSetting,omitempty"`
	RegexFilter                *shared.SlotValueRegexFilter            `json:"regexFilter,omitempty"`
	ResolutionStrategy         *shared.SlotValueResolutionStrategyEnum `json:"resolutionStrategy,omitempty"`
}

type UpdateSlotTypeRequestBody struct {
	// A composite slot is a combination of two or more slots that capture multiple pieces of information in a single user input.
	CompositeSlotTypeSetting *UpdateSlotTypeRequestBodyCompositeSlotTypeSetting `json:"compositeSlotTypeSetting,omitempty"`
	// The new description of the slot type.
	Description *string `json:"description,omitempty"`
	// Provides information about the external source of the slot type's definition.
	ExternalSourceSetting *UpdateSlotTypeRequestBodyExternalSourceSetting `json:"externalSourceSetting,omitempty"`
	// The new built-in slot type that should be used as the parent of this slot type.
	ParentSlotTypeSignature *string `json:"parentSlotTypeSignature,omitempty"`
	// The new name of the slot type.
	SlotTypeName string `json:"slotTypeName"`
	// A new list of values and their optional synonyms that define the values that the slot type can take.
	SlotTypeValues []shared.SlotTypeValue `json:"slotTypeValues,omitempty"`
	// Contains settings used by Amazon Lex to select a slot value.
	ValueSelectionSetting *UpdateSlotTypeRequestBodyValueSelectionSetting `json:"valueSelectionSetting,omitempty"`
}

type UpdateSlotTypeRequest struct {
	RequestBody       UpdateSlotTypeRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The identifier of the bot that contains the slot type.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The version of the bot that contains the slot type. Must be <code>DRAFT</code>.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
	// The identifier of the language and locale that contains the slot type. The string must match one of the supported locales. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
	// The unique identifier of the slot type to update.
	SlotTypeID string `pathParam:"style=simple,explode=false,name=slotTypeId"`
}

type UpdateSlotTypeResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateSlotTypeResponse *shared.UpdateSlotTypeResponse
	// ValidationException
	ValidationException interface{}
}
