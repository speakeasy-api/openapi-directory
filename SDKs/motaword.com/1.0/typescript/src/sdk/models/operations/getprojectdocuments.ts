/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetProjectDocumentsWithEnum {
  Preview = "preview",
  Editors = "editors",
}

export class GetProjectDocumentsRequest extends SpeakeasyBase {
  /**
   * Project ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: number;

  /**
   * Attach further information. Possible values 'preview' to fetch temporary preview URLs. This is NOT recommended to be used with list calls. Only use with[]=preview for single document/style guide calls.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with[]",
  })
  with?: GetProjectDocumentsWithEnum[];
}

export class GetProjectDocumentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * A list of document models
   */
  @SpeakeasyMetadata()
  documentList?: shared.DocumentList;

  /**
   * ProjectNotFound
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
