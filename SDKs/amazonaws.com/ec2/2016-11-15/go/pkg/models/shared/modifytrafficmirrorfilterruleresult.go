// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleDestinationPortRange - The destination port range assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleDestinationPortRange struct {
	FromPort *int64
	ToPort   *int64
}

// ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum - The action assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum string

const (
	ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnumAccept ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum = "accept"
	ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnumReject ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum = "reject"
)

func (e *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "accept":
		fallthrough
	case "reject":
		*e = ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleSourcePortRange - The source port range assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleSourcePortRange struct {
	FromPort *int64
	ToPort   *int64
}

// ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum - The traffic direction assigned to the Traffic Mirror rule.
type ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum string

const (
	ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnumIngress ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum = "ingress"
	ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnumEgress  ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum = "egress"
)

func (e *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ingress":
		fallthrough
	case "egress":
		*e = ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum: %s", s)
	}
}

// ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRule - Modifies a Traffic Mirror rule.
type ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRule struct {
	Description               *string
	DestinationCidrBlock      *string
	DestinationPortRange      *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleDestinationPortRange
	Protocol                  *int64
	RuleAction                *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleRuleActionEnum
	RuleNumber                *int64
	SourceCidrBlock           *string
	SourcePortRange           *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleSourcePortRange
	TrafficDirection          *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRuleTrafficDirectionEnum
	TrafficMirrorFilterID     *string
	TrafficMirrorFilterRuleID *string
}

// ModifyTrafficMirrorFilterRuleResult - Success
type ModifyTrafficMirrorFilterRuleResult struct {
	TrafficMirrorFilterRule *ModifyTrafficMirrorFilterRuleResultTrafficMirrorFilterRule
}
