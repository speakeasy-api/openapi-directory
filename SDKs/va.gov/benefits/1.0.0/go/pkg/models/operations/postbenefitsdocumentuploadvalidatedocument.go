// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// PostBenefitsDocumentUploadValidateDocument500ApplicationJSON - Internal server error
type PostBenefitsDocumentUploadValidateDocument500ApplicationJSON struct {
	// Unambiguous status code. Only present if status = "error"
	//
	// * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
	// * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
	// * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
	// * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
	// * `DOC105` - Invalid or unknown id
	// * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
	// * `DOC107` - Empty payload.
	// * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
	// * `DOC201` - Upload server error.
	// * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
	//
	Code *string `json:"code,omitempty"`
	// Human readable error detail. Only present if status = "error"
	Detail *string `json:"detail,omitempty"`
	// Unambiguous status code. Only present if status = "error"
	//
	// * `DOC101` - Invalid multipart payload provided - not a multipart, or missing one or more required parts.
	// * `DOC102` - Invalid metadata - not parseable as JSON, incorrect fields, etc.
	// * `DOC103` - Invalid content - not parseable as PDF. Detail field will indicate which document or attachment part was affected.
	// * `DOC104` - Upload rejected by upstream system. Processing failed and upload must be resubmitted. Detail field will indicate nature of rejection.
	// * `DOC105` - Invalid or unknown id
	// * `DOC106` - File size limit exceeded. Each document may be a maximum of 100MB.
	// * `DOC107` - Empty payload.
	// * `DOC108` - Maximum dimensions exceeded. Height and width must be less than 21 in x 21 in.
	// * `DOC201` - Upload server error.
	// * `DOC202` - Error during processing by upstream system. Processing failed and upload must be resubmitted. Detail field will provide additional details where available.
	//
	Status *string `json:"status,omitempty"`
	// Human readable title description.
	Title *string `json:"title,omitempty"`
}

// PostBenefitsDocumentUploadValidateDocument429ApplicationJSON - Too many requests
type PostBenefitsDocumentUploadValidateDocument429ApplicationJSON struct {
	// message
	Message *string `json:"Message,omitempty"`
}

// PostBenefitsDocumentUploadValidateDocument422ApplicationJSON - Document did NOT pass system requirements
type PostBenefitsDocumentUploadValidateDocument422ApplicationJSON struct {
	Errors []shared.DocumentValidationErrorModel `json:"errors"`
}

// PostBenefitsDocumentUploadValidateDocument403ApplicationJSON - Forbidden
type PostBenefitsDocumentUploadValidateDocument403ApplicationJSON struct {
	// Error detail
	Message *string `json:"Message,omitempty"`
}

// PostBenefitsDocumentUploadValidateDocument401ApplicationJSON - Unauthorized request
type PostBenefitsDocumentUploadValidateDocument401ApplicationJSON struct {
	// Error detail
	Message *string `json:"Message,omitempty"`
}

type PostBenefitsDocumentUploadValidateDocument200ApplicationJSONDataAttributes struct {
	Status *string `json:"status,omitempty"`
}

type PostBenefitsDocumentUploadValidateDocument200ApplicationJSONData struct {
	Attributes *PostBenefitsDocumentUploadValidateDocument200ApplicationJSONDataAttributes `json:"attributes,omitempty"`
	// schema type
	Type *string `json:"type,omitempty"`
}

// PostBenefitsDocumentUploadValidateDocument200ApplicationJSON - Document passed system requirements
type PostBenefitsDocumentUploadValidateDocument200ApplicationJSON struct {
	Data *PostBenefitsDocumentUploadValidateDocument200ApplicationJSONData `json:"data,omitempty"`
}

type PostBenefitsDocumentUploadValidateDocumentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Document passed system requirements
	PostBenefitsDocumentUploadValidateDocument200ApplicationJSONObject *PostBenefitsDocumentUploadValidateDocument200ApplicationJSON
	// Unauthorized request
	PostBenefitsDocumentUploadValidateDocument401ApplicationJSONObject *PostBenefitsDocumentUploadValidateDocument401ApplicationJSON
	// Forbidden
	PostBenefitsDocumentUploadValidateDocument403ApplicationJSONObject *PostBenefitsDocumentUploadValidateDocument403ApplicationJSON
	// Document did NOT pass system requirements
	PostBenefitsDocumentUploadValidateDocument422ApplicationJSONObject *PostBenefitsDocumentUploadValidateDocument422ApplicationJSON
	// Too many requests
	PostBenefitsDocumentUploadValidateDocument429ApplicationJSONObject *PostBenefitsDocumentUploadValidateDocument429ApplicationJSON
	// Internal server error
	PostBenefitsDocumentUploadValidateDocument500ApplicationJSONObject *PostBenefitsDocumentUploadValidateDocument500ApplicationJSON
}
