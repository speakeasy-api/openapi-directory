// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// EventSubscriptionSelectedEventCategoryEnum - If specified, this subscription will only receive webhooks for Events with the specified `category`.
type EventSubscriptionSelectedEventCategoryEnum string

const (
	EventSubscriptionSelectedEventCategoryEnumAccountCreated                                       EventSubscriptionSelectedEventCategoryEnum = "account.created"
	EventSubscriptionSelectedEventCategoryEnumAccountUpdated                                       EventSubscriptionSelectedEventCategoryEnum = "account.updated"
	EventSubscriptionSelectedEventCategoryEnumAccountNumberCreated                                 EventSubscriptionSelectedEventCategoryEnum = "account_number.created"
	EventSubscriptionSelectedEventCategoryEnumAccountNumberUpdated                                 EventSubscriptionSelectedEventCategoryEnum = "account_number.updated"
	EventSubscriptionSelectedEventCategoryEnumAccountStatementCreated                              EventSubscriptionSelectedEventCategoryEnum = "account_statement.created"
	EventSubscriptionSelectedEventCategoryEnumAccountTransferCreated                               EventSubscriptionSelectedEventCategoryEnum = "account_transfer.created"
	EventSubscriptionSelectedEventCategoryEnumAccountTransferUpdated                               EventSubscriptionSelectedEventCategoryEnum = "account_transfer.updated"
	EventSubscriptionSelectedEventCategoryEnumAchPrenotificationCreated                            EventSubscriptionSelectedEventCategoryEnum = "ach_prenotification.created"
	EventSubscriptionSelectedEventCategoryEnumAchPrenotificationUpdated                            EventSubscriptionSelectedEventCategoryEnum = "ach_prenotification.updated"
	EventSubscriptionSelectedEventCategoryEnumAchTransferCreated                                   EventSubscriptionSelectedEventCategoryEnum = "ach_transfer.created"
	EventSubscriptionSelectedEventCategoryEnumAchTransferUpdated                                   EventSubscriptionSelectedEventCategoryEnum = "ach_transfer.updated"
	EventSubscriptionSelectedEventCategoryEnumCardCreated                                          EventSubscriptionSelectedEventCategoryEnum = "card.created"
	EventSubscriptionSelectedEventCategoryEnumCardUpdated                                          EventSubscriptionSelectedEventCategoryEnum = "card.updated"
	EventSubscriptionSelectedEventCategoryEnumCardPaymentCreated                                   EventSubscriptionSelectedEventCategoryEnum = "card_payment.created"
	EventSubscriptionSelectedEventCategoryEnumCardPaymentUpdated                                   EventSubscriptionSelectedEventCategoryEnum = "card_payment.updated"
	EventSubscriptionSelectedEventCategoryEnumCardDisputeCreated                                   EventSubscriptionSelectedEventCategoryEnum = "card_dispute.created"
	EventSubscriptionSelectedEventCategoryEnumCardDisputeUpdated                                   EventSubscriptionSelectedEventCategoryEnum = "card_dispute.updated"
	EventSubscriptionSelectedEventCategoryEnumCheckDepositCreated                                  EventSubscriptionSelectedEventCategoryEnum = "check_deposit.created"
	EventSubscriptionSelectedEventCategoryEnumCheckDepositUpdated                                  EventSubscriptionSelectedEventCategoryEnum = "check_deposit.updated"
	EventSubscriptionSelectedEventCategoryEnumCheckTransferCreated                                 EventSubscriptionSelectedEventCategoryEnum = "check_transfer.created"
	EventSubscriptionSelectedEventCategoryEnumCheckTransferUpdated                                 EventSubscriptionSelectedEventCategoryEnum = "check_transfer.updated"
	EventSubscriptionSelectedEventCategoryEnumDeclinedTransactionCreated                           EventSubscriptionSelectedEventCategoryEnum = "declined_transaction.created"
	EventSubscriptionSelectedEventCategoryEnumDigitalWalletTokenCreated                            EventSubscriptionSelectedEventCategoryEnum = "digital_wallet_token.created"
	EventSubscriptionSelectedEventCategoryEnumDigitalWalletTokenUpdated                            EventSubscriptionSelectedEventCategoryEnum = "digital_wallet_token.updated"
	EventSubscriptionSelectedEventCategoryEnumDocumentCreated                                      EventSubscriptionSelectedEventCategoryEnum = "document.created"
	EventSubscriptionSelectedEventCategoryEnumEntityCreated                                        EventSubscriptionSelectedEventCategoryEnum = "entity.created"
	EventSubscriptionSelectedEventCategoryEnumEntityUpdated                                        EventSubscriptionSelectedEventCategoryEnum = "entity.updated"
	EventSubscriptionSelectedEventCategoryEnumExternalAccountCreated                               EventSubscriptionSelectedEventCategoryEnum = "external_account.created"
	EventSubscriptionSelectedEventCategoryEnumFileCreated                                          EventSubscriptionSelectedEventCategoryEnum = "file.created"
	EventSubscriptionSelectedEventCategoryEnumGroupUpdated                                         EventSubscriptionSelectedEventCategoryEnum = "group.updated"
	EventSubscriptionSelectedEventCategoryEnumGroupHeartbeat                                       EventSubscriptionSelectedEventCategoryEnum = "group.heartbeat"
	EventSubscriptionSelectedEventCategoryEnumInboundAchTransferReturnCreated                      EventSubscriptionSelectedEventCategoryEnum = "inbound_ach_transfer_return.created"
	EventSubscriptionSelectedEventCategoryEnumInboundAchTransferReturnUpdated                      EventSubscriptionSelectedEventCategoryEnum = "inbound_ach_transfer_return.updated"
	EventSubscriptionSelectedEventCategoryEnumInboundWireDrawdownRequestCreated                    EventSubscriptionSelectedEventCategoryEnum = "inbound_wire_drawdown_request.created"
	EventSubscriptionSelectedEventCategoryEnumOauthConnectionCreated                               EventSubscriptionSelectedEventCategoryEnum = "oauth_connection.created"
	EventSubscriptionSelectedEventCategoryEnumOauthConnectionDeactivated                           EventSubscriptionSelectedEventCategoryEnum = "oauth_connection.deactivated"
	EventSubscriptionSelectedEventCategoryEnumPendingTransactionCreated                            EventSubscriptionSelectedEventCategoryEnum = "pending_transaction.created"
	EventSubscriptionSelectedEventCategoryEnumPendingTransactionUpdated                            EventSubscriptionSelectedEventCategoryEnum = "pending_transaction.updated"
	EventSubscriptionSelectedEventCategoryEnumRealTimeDecisionCardAuthorizationRequested           EventSubscriptionSelectedEventCategoryEnum = "real_time_decision.card_authorization_requested"
	EventSubscriptionSelectedEventCategoryEnumRealTimeDecisionDigitalWalletTokenRequested          EventSubscriptionSelectedEventCategoryEnum = "real_time_decision.digital_wallet_token_requested"
	EventSubscriptionSelectedEventCategoryEnumRealTimeDecisionDigitalWalletAuthenticationRequested EventSubscriptionSelectedEventCategoryEnum = "real_time_decision.digital_wallet_authentication_requested"
	EventSubscriptionSelectedEventCategoryEnumRealTimePaymentsTransferCreated                      EventSubscriptionSelectedEventCategoryEnum = "real_time_payments_transfer.created"
	EventSubscriptionSelectedEventCategoryEnumRealTimePaymentsTransferUpdated                      EventSubscriptionSelectedEventCategoryEnum = "real_time_payments_transfer.updated"
	EventSubscriptionSelectedEventCategoryEnumRealTimePaymentsRequestForPaymentCreated             EventSubscriptionSelectedEventCategoryEnum = "real_time_payments_request_for_payment.created"
	EventSubscriptionSelectedEventCategoryEnumRealTimePaymentsRequestForPaymentUpdated             EventSubscriptionSelectedEventCategoryEnum = "real_time_payments_request_for_payment.updated"
	EventSubscriptionSelectedEventCategoryEnumTransactionCreated                                   EventSubscriptionSelectedEventCategoryEnum = "transaction.created"
	EventSubscriptionSelectedEventCategoryEnumWireDrawdownRequestCreated                           EventSubscriptionSelectedEventCategoryEnum = "wire_drawdown_request.created"
	EventSubscriptionSelectedEventCategoryEnumWireDrawdownRequestUpdated                           EventSubscriptionSelectedEventCategoryEnum = "wire_drawdown_request.updated"
	EventSubscriptionSelectedEventCategoryEnumWireTransferCreated                                  EventSubscriptionSelectedEventCategoryEnum = "wire_transfer.created"
	EventSubscriptionSelectedEventCategoryEnumWireTransferUpdated                                  EventSubscriptionSelectedEventCategoryEnum = "wire_transfer.updated"
)

func (e EventSubscriptionSelectedEventCategoryEnum) ToPointer() *EventSubscriptionSelectedEventCategoryEnum {
	return &e
}

func (e *EventSubscriptionSelectedEventCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account.created":
		fallthrough
	case "account.updated":
		fallthrough
	case "account_number.created":
		fallthrough
	case "account_number.updated":
		fallthrough
	case "account_statement.created":
		fallthrough
	case "account_transfer.created":
		fallthrough
	case "account_transfer.updated":
		fallthrough
	case "ach_prenotification.created":
		fallthrough
	case "ach_prenotification.updated":
		fallthrough
	case "ach_transfer.created":
		fallthrough
	case "ach_transfer.updated":
		fallthrough
	case "card.created":
		fallthrough
	case "card.updated":
		fallthrough
	case "card_payment.created":
		fallthrough
	case "card_payment.updated":
		fallthrough
	case "card_dispute.created":
		fallthrough
	case "card_dispute.updated":
		fallthrough
	case "check_deposit.created":
		fallthrough
	case "check_deposit.updated":
		fallthrough
	case "check_transfer.created":
		fallthrough
	case "check_transfer.updated":
		fallthrough
	case "declined_transaction.created":
		fallthrough
	case "digital_wallet_token.created":
		fallthrough
	case "digital_wallet_token.updated":
		fallthrough
	case "document.created":
		fallthrough
	case "entity.created":
		fallthrough
	case "entity.updated":
		fallthrough
	case "external_account.created":
		fallthrough
	case "file.created":
		fallthrough
	case "group.updated":
		fallthrough
	case "group.heartbeat":
		fallthrough
	case "inbound_ach_transfer_return.created":
		fallthrough
	case "inbound_ach_transfer_return.updated":
		fallthrough
	case "inbound_wire_drawdown_request.created":
		fallthrough
	case "oauth_connection.created":
		fallthrough
	case "oauth_connection.deactivated":
		fallthrough
	case "pending_transaction.created":
		fallthrough
	case "pending_transaction.updated":
		fallthrough
	case "real_time_decision.card_authorization_requested":
		fallthrough
	case "real_time_decision.digital_wallet_token_requested":
		fallthrough
	case "real_time_decision.digital_wallet_authentication_requested":
		fallthrough
	case "real_time_payments_transfer.created":
		fallthrough
	case "real_time_payments_transfer.updated":
		fallthrough
	case "real_time_payments_request_for_payment.created":
		fallthrough
	case "real_time_payments_request_for_payment.updated":
		fallthrough
	case "transaction.created":
		fallthrough
	case "wire_drawdown_request.created":
		fallthrough
	case "wire_drawdown_request.updated":
		fallthrough
	case "wire_transfer.created":
		fallthrough
	case "wire_transfer.updated":
		*e = EventSubscriptionSelectedEventCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventSubscriptionSelectedEventCategoryEnum: %v", v)
	}
}

// EventSubscriptionStatusEnum - This indicates if we'll send notifications to this subscription.
type EventSubscriptionStatusEnum string

const (
	EventSubscriptionStatusEnumActive            EventSubscriptionStatusEnum = "active"
	EventSubscriptionStatusEnumDisabled          EventSubscriptionStatusEnum = "disabled"
	EventSubscriptionStatusEnumDeleted           EventSubscriptionStatusEnum = "deleted"
	EventSubscriptionStatusEnumRequiresAttention EventSubscriptionStatusEnum = "requires_attention"
)

func (e EventSubscriptionStatusEnum) ToPointer() *EventSubscriptionStatusEnum {
	return &e
}

func (e *EventSubscriptionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "disabled":
		fallthrough
	case "deleted":
		fallthrough
	case "requires_attention":
		*e = EventSubscriptionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventSubscriptionStatusEnum: %v", v)
	}
}

// EventSubscriptionTypeEnum - A constant representing the object's type. For this resource it will always be `event_subscription`.
type EventSubscriptionTypeEnum string

const (
	EventSubscriptionTypeEnumEventSubscription EventSubscriptionTypeEnum = "event_subscription"
)

func (e EventSubscriptionTypeEnum) ToPointer() *EventSubscriptionTypeEnum {
	return &e
}

func (e *EventSubscriptionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "event_subscription":
		*e = EventSubscriptionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EventSubscriptionTypeEnum: %v", v)
	}
}

// EventSubscription - Webhooks are event notifications we send to you by HTTPS POST requests. Event Subscriptions are how you configure your application to listen for them. You can create an Event Subscription through your [developer dashboard](https://dashboard.increase.com/developers/webhooks) or the API. For more information, see our [webhooks guide](https://increase.com/documentation/webhooks).
type EventSubscription struct {
	// The time the event subscription was created.
	CreatedAt time.Time `json:"created_at"`
	// The event subscription identifier.
	ID string `json:"id"`
	// If specified, this subscription will only receive webhooks for Events with the specified `category`.
	SelectedEventCategory EventSubscriptionSelectedEventCategoryEnum `json:"selected_event_category"`
	// The key that will be used to sign webhooks.
	SharedSecret string `json:"shared_secret"`
	// This indicates if we'll send notifications to this subscription.
	Status EventSubscriptionStatusEnum `json:"status"`
	// A constant representing the object's type. For this resource it will always be `event_subscription`.
	Type EventSubscriptionTypeEnum `json:"type"`
	// The webhook url where we'll send notifications.
	URL string `json:"url"`
}
