/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class FlightOfferPricingOptions {
    /**
     * type of fare of the flight-offer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fareType")
    public PricingOptionsFareTypeEnum[] fareType;

    public FlightOfferPricingOptions withFareType(PricingOptionsFareTypeEnum[] fareType) {
        this.fareType = fareType;
        return this;
    }
    
    /**
     * If true, returns the flight-offers with included checked bags only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includedCheckedBagsOnly")
    public Boolean includedCheckedBagsOnly;

    public FlightOfferPricingOptions withIncludedCheckedBagsOnly(Boolean includedCheckedBagsOnly) {
        this.includedCheckedBagsOnly = includedCheckedBagsOnly;
        return this;
    }
    
    /**
     * If true, returns the flight-offers with no penalty fares only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noPenaltyFare")
    public Boolean noPenaltyFare;

    public FlightOfferPricingOptions withNoPenaltyFare(Boolean noPenaltyFare) {
        this.noPenaltyFare = noPenaltyFare;
        return this;
    }
    
    /**
     * If true, returns the flight-offers with no restriction fares only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noRestrictionFare")
    public Boolean noRestrictionFare;

    public FlightOfferPricingOptions withNoRestrictionFare(Boolean noRestrictionFare) {
        this.noRestrictionFare = noRestrictionFare;
        return this;
    }
    
    /**
     * If true, returns the flight-offers with refundable fares only
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundableFare")
    public Boolean refundableFare;

    public FlightOfferPricingOptions withRefundableFare(Boolean refundableFare) {
        this.refundableFare = refundableFare;
        return this;
    }
    
    public FlightOfferPricingOptions(){}
}
