// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesSpaceIDLegalEntitiesIDProvidersSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesSpaceIDLegalEntitiesIDProvidersPathParams struct {
	// Id of the provider or memberId
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnumConfidential PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum = "confidential"
	PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnumRegular      PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum = "regular"
	PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnumPublic       PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum = "public"
)

func (e *PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum: %s", s)
	}
}

// PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBody - Provider to add (except name, class and archivaldate)
type PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBody struct {
	About          *string                                                        `json:"About,omitempty"`
	Comment        *string                                                        `json:"Comment,omitempty"`
	Designation    *string                                                        `json:"Designation,omitempty"`
	End            *string                                                        `json:"End,omitempty"`
	Home           *bool                                                          `json:"Home,omitempty"`
	Keywords       []string                                                       `json:"Keywords,omitempty"`
	Level          *PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBodyLevelEnum `json:"Level,omitempty"`
	ProviderNumber *string                                                        `json:"ProviderNumber,omitempty"`
	Start          *string                                                        `json:"Start,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDProvidersRequest struct {
	PathParams PostSpacesSpaceIDLegalEntitiesIDProvidersPathParams
	// Provider to add (except name, class and archivaldate)
	Request  PostSpacesSpaceIDLegalEntitiesIDProvidersRequestBody `request:"mediaType=application/json"`
	Security PostSpacesSpaceIDLegalEntitiesIDProvidersSecurity
}

// PostSpacesSpaceIDLegalEntitiesIDProviders201ApplicationJSON - Id of folder created
type PostSpacesSpaceIDLegalEntitiesIDProviders201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDProvidersResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of folder created
	PostSpacesSpaceIDLegalEntitiesIDProviders201ApplicationJSONObject *PostSpacesSpaceIDLegalEntitiesIDProviders201ApplicationJSON
}
