<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetArticlesResponse - Representation of an article returned in a list
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetArticlesResponse
{
    /**
     * The body of the article
     * 
     * @var ?string $bodyMarkdown
     */
	#[\JMS\Serializer\Annotation\SerializedName('body_markdown')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bodyMarkdown = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('canonical_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $canonicalUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('cover_image')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $coverImage;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('crossposted_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $crosspostedAt;
    
    /**
     * A description of the article
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
	#[\JMS\Serializer\Annotation\SerializedName('edited_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $editedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_comment_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $lastCommentAt;
    
    /**
     * The organization the resource belongs to
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SharedOrganization $organization
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SharedOrganization')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SharedOrganization $organization = null;
    
    /**
     * A relative path of the article.
     * 
     * @var string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $path;
    
	#[\JMS\Serializer\Annotation\SerializedName('positive_reactions_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $positiveReactionsCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('public_reactions_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $publicReactionsCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('published_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $publishedAt;
    
    /**
     * Crossposting or published date time
     * 
     * @var \DateTime $publishedTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('published_timestamp')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $publishedTimestamp;
    
	#[\JMS\Serializer\Annotation\SerializedName('readable_publish_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $readablePublishDate;
    
    /**
     * Reading time, in minutes
     * 
     * @var int $readingTimeMinutes
     */
	#[\JMS\Serializer\Annotation\SerializedName('reading_time_minutes')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $readingTimeMinutes;
    
	#[\JMS\Serializer\Annotation\SerializedName('slug')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $slug;
    
	#[\JMS\Serializer\Annotation\SerializedName('social_image')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $socialImage;
    
    /**
     * An array representation of the tags that are associated with an article
     * 
     * @var array<string> $tagList
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag_list')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $tagList;
    
    /**
     * An array representation of the tags that are associated with an article
     * 
     * @var string $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tags;
    
    /**
     * The article title
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
	#[\JMS\Serializer\Annotation\SerializedName('type_of')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $typeOf;
    
    /**
     * The url of the article. Can be used to link to the article.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * The author
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SharedUser $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SharedUser')]
    public SharedUser $user;
    
	public function __construct()
	{
		$this->bodyMarkdown = null;
		$this->canonicalUrl = "";
		$this->coverImage = "";
		$this->createdAt = new \DateTime();
		$this->crosspostedAt = new \DateTime();
		$this->description = "";
		$this->editedAt = new \DateTime();
		$this->id = 0;
		$this->lastCommentAt = new \DateTime();
		$this->organization = null;
		$this->path = "";
		$this->positiveReactionsCount = 0;
		$this->publicReactionsCount = 0;
		$this->publishedAt = new \DateTime();
		$this->publishedTimestamp = new \DateTime();
		$this->readablePublishDate = "";
		$this->readingTimeMinutes = 0;
		$this->slug = "";
		$this->socialImage = "";
		$this->tagList = [];
		$this->tags = "";
		$this->title = "";
		$this->typeOf = "";
		$this->url = "";
		$this->user = new \OpenAPI\OpenAPI\Models\Shared\SharedUser();
	}
}
