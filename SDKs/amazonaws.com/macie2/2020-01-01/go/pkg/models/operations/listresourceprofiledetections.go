// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListResourceProfileDetectionsQueryParams struct {
	// The maximum number of items to include in each page of a paginated response.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The nextToken string that specifies which page of results to return in a paginated response.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The Amazon Resource Name (ARN) of the S3 bucket that the request applies to.
	ResourceArn string `queryParam:"style=form,explode=true,name=resourceArn"`
}

type ListResourceProfileDetectionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListResourceProfileDetectionsRequest struct {
	QueryParams ListResourceProfileDetectionsQueryParams
	Headers     ListResourceProfileDetectionsHeaders
}

type ListResourceProfileDetectionsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListResourceProfileDetectionsResponse *shared.ListResourceProfileDetectionsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
