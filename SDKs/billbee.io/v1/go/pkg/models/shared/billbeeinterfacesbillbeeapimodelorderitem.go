// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type BillbeeInterfacesBillbeeAPIModelOrderItemInput struct {
	// A list of product attributes for this position
	Attributes []BillbeeInterfacesBillbeeAPIModelOrderItemAttribute `json:"Attributes,omitempty"`
	// The billbee id of this item
	BillbeeID *int64 `json:"BillbeeId,omitempty"`
	// Sets the discount in percent
	Discount *float64 `json:"Discount,omitempty"`
	// If true, the import of this order won't adjust the stock level at billbee.
	DontAdjustStock *bool `json:"DontAdjustStock,omitempty"`
	// If true, the price will be overwritten by the known article price in billbee if available
	GetPriceFromArticleIfAny *bool `json:"GetPriceFromArticleIfAny,omitempty"`
	// Contains the SKU from OrderDetail (if available) or from Product
	InvoiceSKU *string `json:"InvoiceSKU,omitempty"`
	// Determines if it is a coupon, which is interpreted as tax-free payment
	IsCoupon *bool                                             `json:"IsCoupon,omitempty"`
	Product  *BillbeeInterfacesBillbeeAPIModelSoldProductInput `json:"Product,omitempty"`
	// The sold quantity
	Quantity *float64 `json:"Quantity,omitempty"`
	// Contains the used serial number
	SerialNumber *string `json:"SerialNumber,omitempty"`
	// Determines if it is a coupon, which is interpreted as tax-free payment
	ShippingProfileID *string `json:"ShippingProfileId,omitempty"`
	// The tax amount in the total price
	TaxAmount *float64 `json:"TaxAmount,omitempty"`
	// The tax index.
	TaxIndex *int `json:"TaxIndex,omitempty"`
	// The total price (unit price * quantity)
	TotalPrice *float64 `json:"TotalPrice,omitempty"`
	// Id of the individual transaction. Only required by Ebay to detect aggregated orders
	TransactionID *string `json:"TransactionId,omitempty"`
	// Is just used for the billbee api
	UnrebatedTotalPrice *float64 `json:"UnrebatedTotalPrice,omitempty"`
}

type BillbeeInterfacesBillbeeAPIModelOrderItem struct {
	// A list of product attributes for this position
	Attributes []BillbeeInterfacesBillbeeAPIModelOrderItemAttribute `json:"Attributes,omitempty"`
	// The billbee id of this item
	BillbeeID *int64 `json:"BillbeeId,omitempty"`
	// Sets the discount in percent
	Discount *float64 `json:"Discount,omitempty"`
	// If true, the import of this order won't adjust the stock level at billbee.
	DontAdjustStock *bool `json:"DontAdjustStock,omitempty"`
	// If true, the price will be overwritten by the known article price in billbee if available
	GetPriceFromArticleIfAny *bool `json:"GetPriceFromArticleIfAny,omitempty"`
	// Contains the SKU from OrderDetail (if available) or from Product
	InvoiceSKU *string `json:"InvoiceSKU,omitempty"`
	// Determines if it is a coupon, which is interpreted as tax-free payment
	IsCoupon *bool                                        `json:"IsCoupon,omitempty"`
	Product  *BillbeeInterfacesBillbeeAPIModelSoldProduct `json:"Product,omitempty"`
	// The sold quantity
	Quantity *float64 `json:"Quantity,omitempty"`
	// Contains the used serial number
	SerialNumber *string `json:"SerialNumber,omitempty"`
	// Determines if it is a coupon, which is interpreted as tax-free payment
	ShippingProfileID *string `json:"ShippingProfileId,omitempty"`
	// The tax amount in the total price
	TaxAmount *float64 `json:"TaxAmount,omitempty"`
	// The tax index.
	TaxIndex *int `json:"TaxIndex,omitempty"`
	// The total price (unit price * quantity)
	TotalPrice *float64 `json:"TotalPrice,omitempty"`
	// Id of the individual transaction. Only required by Ebay to detect aggregated orders
	TransactionID *string `json:"TransactionId,omitempty"`
	// Is just used for the billbee api
	UnrebatedTotalPrice *float64 `json:"UnrebatedTotalPrice,omitempty"`
}
