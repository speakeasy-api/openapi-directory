/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AudioMapping - The mapping for the `Job.edit_list` atoms with audio `EditAtom.inputs`.
 */
public class AudioMapping {
    /**
     * Required. The `EditAtom.key` that references the atom with audio inputs in the `Job.edit_list`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("atomKey")
    public String atomKey;

    public AudioMapping withAtomKey(String atomKey) {
        this.atomKey = atomKey;
        return this;
    }
    
    /**
     * Audio volume control in dB. Negative values decrease volume, positive values increase. The default is 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gainDb")
    public Double gainDb;

    public AudioMapping withGainDb(Double gainDb) {
        this.gainDb = gainDb;
        return this;
    }
    
    /**
     * Required. The zero-based index of the channel in the input audio stream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputChannel")
    public Integer inputChannel;

    public AudioMapping withInputChannel(Integer inputChannel) {
        this.inputChannel = inputChannel;
        return this;
    }
    
    /**
     * Required. The `Input.key` that identifies the input file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputKey")
    public String inputKey;

    public AudioMapping withInputKey(String inputKey) {
        this.inputKey = inputKey;
        return this;
    }
    
    /**
     * Required. The zero-based index of the track in the input file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputTrack")
    public Integer inputTrack;

    public AudioMapping withInputTrack(Integer inputTrack) {
        this.inputTrack = inputTrack;
        return this;
    }
    
    /**
     * Required. The zero-based index of the channel in the output audio stream.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputChannel")
    public Integer outputChannel;

    public AudioMapping withOutputChannel(Integer outputChannel) {
        this.outputChannel = outputChannel;
        return this;
    }
    
    public AudioMapping(){}
}
