/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Can be used multiple times.
 */
export enum GetPlacementGroupsSortEnum {
  Id = "id",
  IdAsc = "id:asc",
  IdDesc = "id:desc",
  Name = "name",
  NameAsc = "name:asc",
  NameDesc = "name:desc",
  Created = "created",
  CreatedAsc = "created:asc",
  CreatedDesc = "created:desc",
}

/**
 * Can be used multiple times. The response will only contain PlacementGroups matching the type.
 */
export enum GetPlacementGroupsTypeParameterTypeEnum {
  Spread = "spread",
}

export class GetPlacementGroupsRequest extends SpeakeasyBase {
  /**
   * Can be used to filter resources by labels. The response will only contain resources matching the label selector.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=label_selector",
  })
  labelSelector?: string;

  /**
   * Can be used to filter resources by their name. The response will only contain the resources matching the specified name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Can be used multiple times.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetPlacementGroupsSortEnum;

  /**
   * Can be used multiple times. The response will only contain PlacementGroups matching the type.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: GetPlacementGroupsTypeParameterTypeEnum;
}

export class GetPlacementGroupsPlacementGroupsResponseMetaPagination extends SpeakeasyBase {
  /**
   * ID of the last page available. Can be null if the current page is the last one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_page" })
  lastPage: number;

  /**
   * ID of the next page. Can be null if the current page is the last one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page" })
  nextPage: number;

  /**
   * Current page number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page: number;

  /**
   * Maximum number of items shown per page in the response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "per_page" })
  perPage: number;

  /**
   * ID of the previous page. Can be null if the current page is the first one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous_page" })
  previousPage: number;

  /**
   * The total number of entries that exist in the database for this query. Nullable if unknown.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_entries" })
  totalEntries: number;
}

export class GetPlacementGroupsPlacementGroupsResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "pagination" })
  @Type(() => GetPlacementGroupsPlacementGroupsResponseMetaPagination)
  pagination: GetPlacementGroupsPlacementGroupsResponseMetaPagination;
}

/**
 * Type of the Placement Group
 */
export enum GetPlacementGroupsPlacementGroupsResponsePlacementGroupTypeEnum {
  Spread = "spread",
}

export class GetPlacementGroupsPlacementGroupsResponsePlacementGroup extends SpeakeasyBase {
  /**
   * Point in time when the Resource was created (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * User-defined labels (key-value pairs)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels: Record<string, string>;

  /**
   * Name of the Resource. Must be unique per Project.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Array of IDs of Servers that are part of this Placement Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "servers" })
  servers: number[];

  /**
   * Type of the Placement Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: GetPlacementGroupsPlacementGroupsResponsePlacementGroupTypeEnum;
}

/**
 * The `placement_groups` key contains an array of PlacementGroup objects
 */
export class GetPlacementGroupsPlacementGroupsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => GetPlacementGroupsPlacementGroupsResponseMeta)
  meta?: GetPlacementGroupsPlacementGroupsResponseMeta;

  @SpeakeasyMetadata({
    elemType: GetPlacementGroupsPlacementGroupsResponsePlacementGroup,
  })
  @Expose({ name: "placement_groups" })
  @Type(() => GetPlacementGroupsPlacementGroupsResponsePlacementGroup)
  placementGroups: GetPlacementGroupsPlacementGroupsResponsePlacementGroup[];
}

export class GetPlacementGroupsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The `placement_groups` key contains an array of PlacementGroup objects
   */
  @SpeakeasyMetadata()
  placementGroupsResponse?: GetPlacementGroupsPlacementGroupsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
