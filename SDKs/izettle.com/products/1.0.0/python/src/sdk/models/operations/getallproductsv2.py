"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import productresponse as shared_productresponse
from typing import Optional


@dataclasses.dataclass
class GetAllProductsV2Security:
    
    zettle_oauth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAllProductsV2Request:
    
    organization_uuid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationUuid', 'style': 'simple', 'explode': False }})  
    sort: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""If true, sorts response by created date"""  
    

@dataclasses.dataclass
class GetAllProductsV2Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    product_responses: Optional[list[shared_productresponse.ProductResponse]] = dataclasses.field(default=None)
    r"""A list of products"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    