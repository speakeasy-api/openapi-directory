/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * the `active` to sort by most recently posted statuses (default) or `new` to sort by most recently created profiles.
 */
export enum GetApiV1DirectoryOrderEnum {
  Active = "active",
  New = "new",
}

export class GetApiV1DirectoryRequest extends SpeakeasyBase {
  /**
   * How many accounts to load. Default 40.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Only return local accounts.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=local" })
  local?: boolean;

  /**
   * How many accounts to skip before returning results. Default 0.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * the `active` to sort by most recently posted statuses (default) or `new` to sort by most recently created profiles.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: GetApiV1DirectoryOrderEnum;
}

export class GetApiV1DirectoryResponse extends SpeakeasyBase {
  /**
   * List of accounts
   */
  @SpeakeasyMetadata({ elemType: shared.Account })
  accounts?: shared.Account[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
