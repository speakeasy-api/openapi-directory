/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetNetworkClients200ApplicationJSON - Successful operation
 */
public class GetNetworkClients200ApplicationJSON {
    /**
     * The adaptive policy group of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adaptivePolicyGroup")
    public String adaptivePolicyGroup;
    public GetNetworkClients200ApplicationJSON withAdaptivePolicyGroup(String adaptivePolicyGroup) {
        this.adaptivePolicyGroup = adaptivePolicyGroup;
        return this;
    }
    
    /**
     * Short description of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GetNetworkClients200ApplicationJSON withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Prediction of the client's device type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceTypePrediction")
    public String deviceTypePrediction;
    public GetNetworkClients200ApplicationJSON withDeviceTypePrediction(String deviceTypePrediction) {
        this.deviceTypePrediction = deviceTypePrediction;
        return this;
    }
    
    /**
     * Timestamp client was first seen in the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firstSeen")
    public Long firstSeen;
    public GetNetworkClients200ApplicationJSON withFirstSeen(Long firstSeen) {
        this.firstSeen = firstSeen;
        return this;
    }
    
    /**
     * 802.1x group policy of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupPolicy8021x")
    public String groupPolicy8021x;
    public GetNetworkClients200ApplicationJSON withGroupPolicy8021x(String groupPolicy8021x) {
        this.groupPolicy8021x = groupPolicy8021x;
        return this;
    }
    
    /**
     * The ID of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetNetworkClients200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The IP address of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;
    public GetNetworkClients200ApplicationJSON withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * The IPv6 address of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip6")
    public String ip6;
    public GetNetworkClients200ApplicationJSON withIp6(String ip6) {
        this.ip6 = ip6;
        return this;
    }
    
    /**
     * Local IPv6 address of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip6Local")
    public String ip6Local;
    public GetNetworkClients200ApplicationJSON withIp6Local(String ip6Local) {
        this.ip6Local = ip6Local;
        return this;
    }
    
    /**
     * Timestamp client was last seen in the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastSeen")
    public Long lastSeen;
    public GetNetworkClients200ApplicationJSON withLastSeen(Long lastSeen) {
        this.lastSeen = lastSeen;
        return this;
    }
    
    /**
     * The MAC address of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mac")
    public String mac;
    public GetNetworkClients200ApplicationJSON withMac(String mac) {
        this.mac = mac;
        return this;
    }
    
    /**
     * Manufacturer of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manufacturer")
    public String manufacturer;
    public GetNetworkClients200ApplicationJSON withManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
        return this;
    }
    
    /**
     * Named VLAN of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namedVlan")
    public String namedVlan;
    public GetNetworkClients200ApplicationJSON withNamedVlan(String namedVlan) {
        this.namedVlan = namedVlan;
        return this;
    }
    
    /**
     * Notes on the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public GetNetworkClients200ApplicationJSON withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The operating system of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os")
    public String os;
    public GetNetworkClients200ApplicationJSON withOs(String os) {
        this.os = os;
        return this;
    }
    
    /**
     * Client's most recent connection type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentDeviceConnection")
    public GetNetworkClients200ApplicationJSONRecentDeviceConnectionEnum recentDeviceConnection;
    public GetNetworkClients200ApplicationJSON withRecentDeviceConnection(GetNetworkClients200ApplicationJSONRecentDeviceConnectionEnum recentDeviceConnection) {
        this.recentDeviceConnection = recentDeviceConnection;
        return this;
    }
    
    /**
     * The MAC address of the node that the device was last connected to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentDeviceMac")
    public String recentDeviceMac;
    public GetNetworkClients200ApplicationJSON withRecentDeviceMac(String recentDeviceMac) {
        this.recentDeviceMac = recentDeviceMac;
        return this;
    }
    
    /**
     * The name of the node the device was last connected to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentDeviceName")
    public String recentDeviceName;
    public GetNetworkClients200ApplicationJSON withRecentDeviceName(String recentDeviceName) {
        this.recentDeviceName = recentDeviceName;
        return this;
    }
    
    /**
     * The serial of the node the device was last connected to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentDeviceSerial")
    public String recentDeviceSerial;
    public GetNetworkClients200ApplicationJSON withRecentDeviceSerial(String recentDeviceSerial) {
        this.recentDeviceSerial = recentDeviceSerial;
        return this;
    }
    
    /**
     * Status of SM for the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smInstalled")
    public Boolean smInstalled;
    public GetNetworkClients200ApplicationJSON withSmInstalled(Boolean smInstalled) {
        this.smInstalled = smInstalled;
        return this;
    }
    
    /**
     * The name of the SSID that the client is connected to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssid")
    public String ssid;
    public GetNetworkClients200ApplicationJSON withSsid(String ssid) {
        this.ssid = ssid;
        return this;
    }
    
    /**
     * The connection status of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GetNetworkClients200ApplicationJSONStatusEnum status;
    public GetNetworkClients200ApplicationJSON withStatus(GetNetworkClients200ApplicationJSONStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The switch port that the client is connected to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("switchport")
    public String switchport;
    public GetNetworkClients200ApplicationJSON withSwitchport(String switchport) {
        this.switchport = switchport;
        return this;
    }
    
    /**
     * Usage, sent and received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage")
    public GetNetworkClients200ApplicationJSONUsage usage;
    public GetNetworkClients200ApplicationJSON withUsage(GetNetworkClients200ApplicationJSONUsage usage) {
        this.usage = usage;
        return this;
    }
    
    /**
     * The username of the user of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public String user;
    public GetNetworkClients200ApplicationJSON withUser(String user) {
        this.user = user;
        return this;
    }
    
    /**
     * The name of the VLAN that the client is connected to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public String vlan;
    public GetNetworkClients200ApplicationJSON withVlan(String vlan) {
        this.vlan = vlan;
        return this;
    }
    
    /**
     * Wireless capabilities of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wirelessCapabilities")
    public String wirelessCapabilities;
    public GetNetworkClients200ApplicationJSON withWirelessCapabilities(String wirelessCapabilities) {
        this.wirelessCapabilities = wirelessCapabilities;
        return this;
    }
    
}
