"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImageAnalysis = void 0;
var utils_1 = require("../../../internal/utils");
var adultinfo_1 = require("./adultinfo");
var category_1 = require("./category");
var colorinfo_1 = require("./colorinfo");
var detectedbrand_1 = require("./detectedbrand");
var detectedobject_1 = require("./detectedobject");
var facedescription_1 = require("./facedescription");
var imagedescriptiondetails_1 = require("./imagedescriptiondetails");
var imagemetadata_1 = require("./imagemetadata");
var imagetag_1 = require("./imagetag");
var imagetype_1 = require("./imagetype");
var class_transformer_1 = require("class-transformer");
/**
 * Result of AnalyzeImage operation.
 */
var ImageAnalysis = /** @class */ (function (_super) {
    __extends(ImageAnalysis, _super);
    function ImageAnalysis() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "adult" }),
        (0, class_transformer_1.Type)(function () { return adultinfo_1.AdultInfo; }),
        __metadata("design:type", adultinfo_1.AdultInfo)
    ], ImageAnalysis.prototype, "adult", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: detectedbrand_1.DetectedBrand }),
        (0, class_transformer_1.Expose)({ name: "brands" }),
        (0, class_transformer_1.Type)(function () { return detectedbrand_1.DetectedBrand; }),
        __metadata("design:type", Array)
    ], ImageAnalysis.prototype, "brands", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: category_1.Category }),
        (0, class_transformer_1.Expose)({ name: "categories" }),
        (0, class_transformer_1.Type)(function () { return category_1.Category; }),
        __metadata("design:type", Array)
    ], ImageAnalysis.prototype, "categories", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "color" }),
        (0, class_transformer_1.Type)(function () { return colorinfo_1.ColorInfo; }),
        __metadata("design:type", colorinfo_1.ColorInfo)
    ], ImageAnalysis.prototype, "color", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        (0, class_transformer_1.Type)(function () { return imagedescriptiondetails_1.ImageDescriptionDetails; }),
        __metadata("design:type", imagedescriptiondetails_1.ImageDescriptionDetails)
    ], ImageAnalysis.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: facedescription_1.FaceDescription }),
        (0, class_transformer_1.Expose)({ name: "faces" }),
        (0, class_transformer_1.Type)(function () { return facedescription_1.FaceDescription; }),
        __metadata("design:type", Array)
    ], ImageAnalysis.prototype, "faces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "imageType" }),
        (0, class_transformer_1.Type)(function () { return imagetype_1.ImageType; }),
        __metadata("design:type", imagetype_1.ImageType)
    ], ImageAnalysis.prototype, "imageType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        (0, class_transformer_1.Type)(function () { return imagemetadata_1.ImageMetadata; }),
        __metadata("design:type", imagemetadata_1.ImageMetadata)
    ], ImageAnalysis.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: detectedobject_1.DetectedObject }),
        (0, class_transformer_1.Expose)({ name: "objects" }),
        (0, class_transformer_1.Type)(function () { return detectedobject_1.DetectedObject; }),
        __metadata("design:type", Array)
    ], ImageAnalysis.prototype, "objects", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "requestId" }),
        __metadata("design:type", String)
    ], ImageAnalysis.prototype, "requestId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: imagetag_1.ImageTag }),
        (0, class_transformer_1.Expose)({ name: "tags" }),
        (0, class_transformer_1.Type)(function () { return imagetag_1.ImageTag; }),
        __metadata("design:type", Array)
    ], ImageAnalysis.prototype, "tags", void 0);
    return ImageAnalysis;
}(utils_1.SpeakeasyBase));
exports.ImageAnalysis = ImageAnalysis;
