// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetWorkGroupXAmzTargetEnum
type GetWorkGroupXAmzTargetEnum string

const (
	GetWorkGroupXAmzTargetEnumAmazonAthenaGetWorkGroup GetWorkGroupXAmzTargetEnum = "AmazonAthena.GetWorkGroup"
)

func (e *GetWorkGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonAthena.GetWorkGroup":
		*e = GetWorkGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkGroupXAmzTargetEnum: %s", s)
	}
}

type GetWorkGroupRequest struct {
	GetWorkGroupInput shared.GetWorkGroupInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetWorkGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetWorkGroupResponse struct {
	ContentType string
	// Success
	GetWorkGroupOutput *shared.GetWorkGroupOutput
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
