/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillingAddress } from "./billingaddress";
import { CustomerAdditionalField } from "./customeradditionalfield";
import { CustomerCategory } from "./customercategory";
import { ShippingAddress } from "./shippingaddress";
import { Expose, Type } from "class-transformer";

/**
 * Status of the Customer
 */
export enum CustomerFieldsStatusEnum {
  Approved = "approved",
  Pending = "pending",
  Disabled = "disabled",
}

export class CustomerFields extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billing_address" })
  @Type(() => BillingAddress)
  billingAddress?: BillingAddress;

  @SpeakeasyMetadata({ elemType: CustomerAdditionalField })
  @Expose({ name: "customer_additional_fields" })
  @Type(() => CustomerAdditionalField)
  customerAdditionalFields?: CustomerAdditionalField[];

  @SpeakeasyMetadata({ elemType: CustomerCategory })
  @Expose({ name: "customer_categories" })
  @Type(() => CustomerCategory)
  customerCategories?: CustomerCategory[];

  /**
   * Email of the Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Unique identifier of the Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name of the Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Phone of the Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shipping_address" })
  @Type(() => ShippingAddress)
  shippingAddress?: ShippingAddress;

  /**
   * Status of the Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CustomerFieldsStatusEnum;

  /**
   * Surname of the Customer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "surname" })
  surname?: string;
}
