/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ActionNotificationExportEntity - Show Action Notification Export
 */
public class ActionNotificationExportEntity {
    /**
     * End date/time of export range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("end_at")
    public OffsetDateTime endAt;

    public ActionNotificationExportEntity withEndAt(OffsetDateTime endAt) {
        this.endAt = endAt;
        return this;
    }
    
    /**
     * Version of the underlying records for the export.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("export_version")
    public String exportVersion;

    public ActionNotificationExportEntity withExportVersion(String exportVersion) {
        this.exportVersion = exportVersion;
        return this;
    }
    
    /**
     * History Export ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;

    public ActionNotificationExportEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Return notifications that were triggered by actions in this folder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_folder")
    public String queryFolder;

    public ActionNotificationExportEntity withQueryFolder(String queryFolder) {
        this.queryFolder = queryFolder;
        return this;
    }
    
    /**
     * Error message associated with the request, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_message")
    public String queryMessage;

    public ActionNotificationExportEntity withQueryMessage(String queryMessage) {
        this.queryMessage = queryMessage;
        return this;
    }
    
    /**
     * Return notifications that were triggered by actions on this specific path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_path")
    public String queryPath;

    public ActionNotificationExportEntity withQueryPath(String queryPath) {
        this.queryPath = queryPath;
        return this;
    }
    
    /**
     * The HTTP request method used by the webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_request_method")
    public String queryRequestMethod;

    public ActionNotificationExportEntity withQueryRequestMethod(String queryRequestMethod) {
        this.queryRequestMethod = queryRequestMethod;
        return this;
    }
    
    /**
     * The target webhook URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_request_url")
    public String queryRequestUrl;

    public ActionNotificationExportEntity withQueryRequestUrl(String queryRequestUrl) {
        this.queryRequestUrl = queryRequestUrl;
        return this;
    }
    
    /**
     * The HTTP status returned from the server in response to the webhook request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_status")
    public String queryStatus;

    public ActionNotificationExportEntity withQueryStatus(String queryStatus) {
        this.queryStatus = queryStatus;
        return this;
    }
    
    /**
     * true if the webhook request succeeded (i.e. returned a 200 or 204 response status). false otherwise.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query_success")
    public Boolean querySuccess;

    public ActionNotificationExportEntity withQuerySuccess(Boolean querySuccess) {
        this.querySuccess = querySuccess;
        return this;
    }
    
    /**
     * If `status` is `ready`, this will be a URL where all the results can be downloaded at once as a CSV.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("results_url")
    public String resultsUrl;

    public ActionNotificationExportEntity withResultsUrl(String resultsUrl) {
        this.resultsUrl = resultsUrl;
        return this;
    }
    
    /**
     * Start date/time of export range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("start_at")
    public OffsetDateTime startAt;

    public ActionNotificationExportEntity withStartAt(OffsetDateTime startAt) {
        this.startAt = startAt;
        return this;
    }
    
    /**
     * Status of export.  Valid values: `building`, `ready`, or `failed`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public ActionNotificationExportEntity withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public ActionNotificationExportEntity(){}
}
