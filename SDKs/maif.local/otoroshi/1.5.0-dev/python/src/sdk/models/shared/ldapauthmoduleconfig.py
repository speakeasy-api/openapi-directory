"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LdapAuthModuleConfig:
    r"""Settings to authenticate users using a generic OAuth2 provider"""
    
    admin_password: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adminPassword') }})
    r"""The admin password"""  
    admin_username: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adminUsername') }})
    r"""The admin username"""  
    desc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desc') }})
    r"""Description of the config"""  
    email_field: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailField') }})
    r"""Field name to get email from user profile"""  
    group_filter: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupFilter') }})
    r"""Filter for groups"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Unique id of the config"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the config"""  
    name_field: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameField') }})
    r"""Field name to get name from user profile"""  
    search_base: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchBase') }})
    r"""LDAP search base"""  
    search_filter: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchFilter') }})
    r"""Filter for users"""  
    server_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverUrl') }})
    r"""URL of the ldap server"""  
    session_max_age: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sessionMaxAge') }})
    r"""Max age of the session"""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of settings. value is ldap"""  
    user_base: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userBase') }})
    r"""LDAP user base DN"""  
    otoroshi_data_field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('otoroshiDataField'), 'exclude': lambda f: f is None }})
    r"""Field name to get otoroshi metadata from. You can specify sub fields using | as separator"""  
    