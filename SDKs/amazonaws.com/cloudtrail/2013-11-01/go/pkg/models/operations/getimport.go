// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetImportXAmzTargetEnum
type GetImportXAmzTargetEnum string

const (
	GetImportXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101GetImport GetImportXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetImport"
)

func (e *GetImportXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetImport":
		*e = GetImportXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetImportXAmzTargetEnum: %s", s)
	}
}

type GetImportHeaders struct {
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetImportXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetImportRequest struct {
	Headers GetImportHeaders
	Request shared.GetImportRequest `request:"mediaType=application/json"`
}

type GetImportResponse struct {
	ContentType string
	// Success
	GetImportResponse *shared.GetImportResponse
	// ImportNotFoundException
	ImportNotFoundException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
