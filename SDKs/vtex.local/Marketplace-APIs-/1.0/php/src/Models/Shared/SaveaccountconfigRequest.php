<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SaveaccountconfigRequest
{
    /**
     * This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include: 
     * 
     * 
     * - `default` where the Matcher reviews the SKU, and approves it based on its score 
     * 
     * - `manual` for manual approvals through the Received SKU UI or Match API 
     * 
     * - `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.
     * 
     * @var string $matchFlux
     */
	#[\JMS\Serializer\Annotation\SerializedName('MatchFlux')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $matchFlux;
    
    /**
     * Matchers for approving and rejecting SKUs received from sellers.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Matcher> $matchers
     */
	#[\JMS\Serializer\Annotation\SerializedName('Matchers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Matcher>')]
    public array $matchers;
    
    /**
     * Matcher rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved` or `Denied`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Score $score
     */
	#[\JMS\Serializer\Annotation\SerializedName('Score')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Score')]
    public Score $score;
    
    /**
     * This attribute maps product and SKU specifications.
     * 
     * @var array<string> $specificationsMapping
     */
	#[\JMS\Serializer\Annotation\SerializedName('SpecificationsMapping')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $specificationsMapping;
    
	public function __construct()
	{
		$this->matchFlux = "";
		$this->matchers = [];
		$this->score = new \OpenAPI\OpenAPI\Models\Shared\Score();
		$this->specificationsMapping = [];
	}
}
