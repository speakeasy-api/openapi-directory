/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class StorageCreateFileSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-JWT",
  })
  jwt: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Key",
  })
  key: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class StorageCreateFileRequestBody extends SpeakeasyBase {
  /**
   * Binary file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;

  /**
   * An array of strings with read permissions. By default only the current user is granted with read permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=read" })
  read?: string[];

  /**
   * An array of strings with write permissions. By default only the current user is granted with write permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=write" })
  write?: string[];
}

export class StorageCreateFileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * File
   */
  @SpeakeasyMetadata()
  file?: shared.File;
}
