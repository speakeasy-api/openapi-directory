"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class List:
    
    affiliate_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affiliateId') }})
    r"""Three letter code indicating the marketplace in which the order was placed."""  
    authorized_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedDate') }})
    r"""Authorized date."""  
    call_center_operator_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callCenterOperatorName') }})
    r"""Call center operator name."""  
    client_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientName') }})
    r"""Client name."""  
    creation_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate') }})
    r"""Creation date."""  
    currency_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode') }})
    r"""Currency code."""  
    items: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items') }})
    r"""Order items."""  
    last_message_unread: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastMessageUnread') }})
    r"""Last unread message."""  
    list_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listId') }})
    r"""List ID."""  
    list_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listType') }})
    r"""List type."""  
    market_place_order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketPlaceOrderId') }})
    r"""ID of the order in the marketplace."""  
    order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderId') }})
    r"""Order ID."""  
    order_is_complete: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderIsComplete') }})
    r"""Indicates whether order is complete."""  
    origin: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin') }})
    r"""Indicates whether order is marketplace, fulfillment or chain."""  
    payment_names: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentNames') }})
    r"""Order payment names."""  
    sales_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannel') }})
    r"""Sales channel."""  
    sequence: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sequence') }})
    r"""Order sequence number."""  
    shipping_estimated_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingEstimatedDate') }})
    r"""Shipping estimate date."""  
    shipping_estimated_date_max: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingEstimatedDateMax') }})
    r"""Maximum shipping estimate date."""  
    shipping_estimated_date_min: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingEstimatedDateMin') }})
    r"""Minimum shipping estimate date."""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Order status."""  
    status_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusDescription') }})
    r"""Order status description."""  
    total_items: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItems') }})
    r"""Total items."""  
    total_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalValue') }})
    r"""Order total value in cents."""  
    workflow_in_error_state: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflowInErrorState') }})
    r"""Indicates whether order workflow is in error state."""  
    workflow_in_retry: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflowInRetry') }})
    r"""Indicates whether workflow is in retry."""  
    