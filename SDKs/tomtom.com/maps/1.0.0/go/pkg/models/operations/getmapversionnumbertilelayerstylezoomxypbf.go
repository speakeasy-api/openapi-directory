// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum - Layer of tile to be rendered
type GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnumBasic  GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum = "basic"
	GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnumHybrid GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum = "hybrid"
	GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnumLabels GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum = "labels"
)

func (e GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum) ToPointer() *GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum {
	return &e
}

func (e *GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "basic":
		fallthrough
	case "hybrid":
		fallthrough
	case "labels":
		*e = GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum: %v", v)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum - Style of tile to be rendered
type GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnumMain GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum = "main"
)

func (e GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum) ToPointer() *GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum {
	return &e
}

func (e *GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "main":
		*e = GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum: %v", v)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum - Version of the service to call. The current version is 1
type GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum int64

const (
	GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnumOne GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum = 1
)

func (e GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum) ToPointer() *GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum {
	return &e
}

func (e *GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		*e = GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum: %v", v)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum - Geopolitical view. Determines rendering of disputed areas. See the <a href="/maps-api/maps-api-documentation-vector/tile">documentation</a> for an explanation of how this works in live services.
type GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnumUnified GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum = "Unified"
	GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnumIl      GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum = "IL"
	GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnumIn      GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum = "IN"
)

func (e GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum) ToPointer() *GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum {
	return &e
}

func (e *GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unified":
		fallthrough
	case "IL":
		fallthrough
	case "IN":
		*e = GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum: %v", v)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum - Zoom level of tile to be rendered
type GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum int64

const (
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumZero      GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 0
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumOne       GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 1
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumTwo       GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 2
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumThree     GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 3
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumFour      GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 4
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumFive      GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 5
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumSix       GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 6
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumSeven     GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 7
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumEight     GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 8
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumNine      GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 9
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumTen       GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 10
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumEleven    GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 11
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumTwelve    GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 12
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumThirteen  GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 13
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumFourteen  GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 14
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumFifteen   GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 15
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumSixteen   GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 16
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumSeventeen GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 17
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumEighteen  GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 18
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumNineteen  GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 19
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumTwenty    GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 20
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumTwentyOne GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 21
	GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnumTwentyTwo GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = 22
)

func (e GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum) ToPointer() *GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum {
	return &e
}

func (e *GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		fallthrough
	case 5:
		fallthrough
	case 6:
		fallthrough
	case 7:
		fallthrough
	case 8:
		fallthrough
	case 9:
		fallthrough
	case 10:
		fallthrough
	case 11:
		fallthrough
	case 12:
		fallthrough
	case 13:
		fallthrough
	case 14:
		fallthrough
	case 15:
		fallthrough
	case 16:
		fallthrough
	case 17:
		fallthrough
	case 18:
		fallthrough
	case 19:
		fallthrough
	case 20:
		fallthrough
	case 21:
		fallthrough
	case 22:
		*e = GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum: %v", v)
	}
}

type GetMapVersionNumberTileLayerStyleZoomXYPbfRequest struct {
	// x coordinate of tile on zoom grid
	X int64 `pathParam:"style=simple,explode=false,name=X"`
	// y coordinate of tile on zoom grid
	Y int64 `pathParam:"style=simple,explode=false,name=Y"`
	// Language to be used for labels in the response. The default is NGT: Neutral Ground Truth, which uses each place's local official language and script (where available). See the <a href="/maps-api/maps-api-documentation-vector/tile">documentation</a> for a full list of options.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// Layer of tile to be rendered
	Layer GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum `pathParam:"style=simple,explode=false,name=layer"`
	// Style of tile to be rendered
	Style GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum `pathParam:"style=simple,explode=false,name=style"`
	// Version of the service to call. The current version is 1
	VersionNumber GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum `pathParam:"style=simple,explode=false,name=versionNumber"`
	// Geopolitical view. Determines rendering of disputed areas. See the <a href="/maps-api/maps-api-documentation-vector/tile">documentation</a> for an explanation of how this works in live services.
	View *GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum `queryParam:"style=form,explode=true,name=view"`
	// Zoom level of tile to be rendered
	Zoom GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum `pathParam:"style=simple,explode=false,name=zoom"`
}

type GetMapVersionNumberTileLayerStyleZoomXYPbfResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
