/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BillbeeInterfacesBillbeeAPIModelOrderItemInput {
    /**
     * A list of product attributes for this position
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attributes")
    public BillbeeInterfacesBillbeeAPIModelOrderItemAttribute[] attributes;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withAttributes(BillbeeInterfacesBillbeeAPIModelOrderItemAttribute[] attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The billbee id of this item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillbeeId")
    public Long billbeeId;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withBillbeeId(Long billbeeId) {
        this.billbeeId = billbeeId;
        return this;
    }
    
    /**
     * Sets the discount in percent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Discount")
    public Double discount;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withDiscount(Double discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * If true, the import of this order won't adjust the stock level at billbee.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DontAdjustStock")
    public Boolean dontAdjustStock;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withDontAdjustStock(Boolean dontAdjustStock) {
        this.dontAdjustStock = dontAdjustStock;
        return this;
    }
    
    /**
     * If true, the price will be overwritten by the known article price in billbee if available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GetPriceFromArticleIfAny")
    public Boolean getPriceFromArticleIfAny;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withGetPriceFromArticleIfAny(Boolean getPriceFromArticleIfAny) {
        this.getPriceFromArticleIfAny = getPriceFromArticleIfAny;
        return this;
    }
    
    /**
     * Contains the SKU from OrderDetail (if available) or from Product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceSKU")
    public String invoiceSKU;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withInvoiceSKU(String invoiceSKU) {
        this.invoiceSKU = invoiceSKU;
        return this;
    }
    
    /**
     * Determines if it is a coupon, which is interpreted as tax-free payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsCoupon")
    public Boolean isCoupon;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withIsCoupon(Boolean isCoupon) {
        this.isCoupon = isCoupon;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Product")
    public BillbeeInterfacesBillbeeAPIModelSoldProductInput product;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withProduct(BillbeeInterfacesBillbeeAPIModelSoldProductInput product) {
        this.product = product;
        return this;
    }
    
    /**
     * The sold quantity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quantity")
    public Double quantity;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Contains the used serial number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SerialNumber")
    public String serialNumber;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * Determines if it is a coupon, which is interpreted as tax-free payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingProfileId")
    public String shippingProfileId;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withShippingProfileId(String shippingProfileId) {
        this.shippingProfileId = shippingProfileId;
        return this;
    }
    
    /**
     * The tax amount in the total price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxAmount")
    public Double taxAmount;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * The tax index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxIndex")
    public Integer taxIndex;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withTaxIndex(Integer taxIndex) {
        this.taxIndex = taxIndex;
        return this;
    }
    
    /**
     * The total price (unit price * quantity)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalPrice")
    public Double totalPrice;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withTotalPrice(Double totalPrice) {
        this.totalPrice = totalPrice;
        return this;
    }
    
    /**
     * Id of the individual transaction. Only required by Ebay to detect aggregated orders
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransactionId")
    public String transactionId;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
    /**
     * Is just used for the billbee api
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UnrebatedTotalPrice")
    public Double unrebatedTotalPrice;

    public BillbeeInterfacesBillbeeAPIModelOrderItemInput withUnrebatedTotalPrice(Double unrebatedTotalPrice) {
        this.unrebatedTotalPrice = unrebatedTotalPrice;
        return this;
    }
    
    public BillbeeInterfacesBillbeeAPIModelOrderItemInput(){}
}
