/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LambdaEventSource } from "./lambdaeventsource";
import { LambdaInputPayloadEncodingTypeEnum } from "./lambdainputpayloadencodingtypeenum";
import { LambdaLinuxProcessParams } from "./lambdalinuxprocessparams";
import { Expose, Type } from "class-transformer";

/**
 * Contains parameters for a Lambda function that runs on IoT Greengrass.
 */
export class LambdaExecutionParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "environmentVariables" })
  environmentVariables?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: LambdaEventSource })
  @Expose({ name: "eventSources" })
  @Type(() => LambdaEventSource)
  eventSources?: LambdaEventSource[];

  @SpeakeasyMetadata()
  @Expose({ name: "execArgs" })
  execArgs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "inputPayloadEncodingType" })
  inputPayloadEncodingType?: LambdaInputPayloadEncodingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "linuxProcessParams" })
  @Type(() => LambdaLinuxProcessParams)
  linuxProcessParams?: LambdaLinuxProcessParams;

  @SpeakeasyMetadata()
  @Expose({ name: "maxIdleTimeInSeconds" })
  maxIdleTimeInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxInstancesCount" })
  maxInstancesCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "maxQueueSize" })
  maxQueueSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pinned" })
  pinned?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "statusTimeoutInSeconds" })
  statusTimeoutInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutInSeconds" })
  timeoutInSeconds?: number;
}
