"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import four_hundred_and_five as shared_four_hundred_and_five
from ..shared import four_hundred_and_twelve as shared_four_hundred_and_twelve
from ..shared import nodata as shared_nodata
from ..shared import success as shared_success
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class KkidAllowancePostSecurity:
    
    auth_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-Auth' }})  
    
class KkidAllowancePostTransactionTypeEnum(str, Enum):
    r"""Sort order:
     * `Add` - Add Allowance
     * `Subtract` - Subtract Allowance
    """
    ADD = 'Add'
    SUBTRACT = 'Subtract'


@dataclasses.dataclass
class KkidAllowancePostRequest:
    
    amount: float = dataclasses.field(metadata={'query_param': { 'field_name': 'amount', 'style': 'form', 'explode': True }})
    r"""amount you wish to Add/Subtract (subtract value should be a negative value)"""  
    description: str = dataclasses.field(metadata={'query_param': { 'field_name': 'description', 'style': 'form', 'explode': True }})
    r"""Description (reason) of allowance transaction"""  
    kid_user_id: int = dataclasses.field(metadata={'query_param': { 'field_name': 'kidUserId', 'style': 'form', 'explode': True }})
    r"""userID of the kid"""  
    transaction_type: KkidAllowancePostTransactionTypeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'transactionType', 'style': 'form', 'explode': True }})
    r"""Transaction Type (Add/Subtract)"""  
    

@dataclasses.dataclass
class KkidAllowancePostResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    four_hundred_and_five: Optional[shared_four_hundred_and_five.FourHundredAndFive] = dataclasses.field(default=None)
    r"""Method Not Allowed- API user does not have access to use this method"""  
    four_hundred_and_twelve: Optional[shared_four_hundred_and_twelve.FourHundredAndTwelve] = dataclasses.field(default=None)
    r"""API Access Denied! Your API key is invalid, expired, or not supplied!"""  
    nodata: Optional[shared_nodata.Nodata] = dataclasses.field(default=None)
    r"""No Data Returned"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    success: Optional[shared_success.Success] = dataclasses.field(default=None)
    r"""search results matching criteria"""  
    