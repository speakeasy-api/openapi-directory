/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WorkspaceStatus } from "./workspacestatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents the properties of a workspace.
 */
export class WorkspaceDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "prometheusEndpoint" })
  prometheusEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => WorkspaceStatus)
  status: WorkspaceStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "workspaceId" })
  workspaceId: string;
}
