"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GETSetDefaultPolicyVersionActionEnum(str, Enum):
    SET_DEFAULT_POLICY_VERSION = 'SetDefaultPolicyVersion'

class GETSetDefaultPolicyVersionVersionEnum(str, Enum):
    TWO_THOUSAND_AND_TEN_05_08 = '2010-05-08'


@dataclasses.dataclass
class GETSetDefaultPolicyVersionRequest:
    
    action: GETSetDefaultPolicyVersionActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Action', 'style': 'form', 'explode': True }})  
    policy_arn: str = dataclasses.field(metadata={'query_param': { 'field_name': 'PolicyArn', 'style': 'form', 'explode': True }})
    r"""<p>The Amazon Resource Name (ARN) of the IAM policy whose default version you want to set.</p> <p>For more information about ARNs, see <a href=\\"https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html\\">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>"""  
    version: GETSetDefaultPolicyVersionVersionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Version', 'style': 'form', 'explode': True }})  
    version_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'VersionId', 'style': 'form', 'explode': True }})
    r"""<p>The version of the policy to set as the default (operative) version.</p> <p>For more information about managed policy versions, see <a href=\\"https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html\\">Versioning for managed policies</a> in the <i>IAM User Guide</i>.</p>"""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GETSetDefaultPolicyVersionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    