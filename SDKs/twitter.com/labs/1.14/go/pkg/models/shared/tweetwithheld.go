// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TweetWithheldScopeEnum - Indicates whether the content being withheld is the `tweet` or a `user`.
type TweetWithheldScopeEnum string

const (
	TweetWithheldScopeEnumTweet TweetWithheldScopeEnum = "tweet"
	TweetWithheldScopeEnumUser  TweetWithheldScopeEnum = "user"
)

func (e *TweetWithheldScopeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "tweet":
		fallthrough
	case "user":
		*e = TweetWithheldScopeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TweetWithheldScopeEnum: %s", s)
	}
}

// TweetWithheld - Indicates withholding details for [withheld content](https://help.twitter.com/en/rules-and-policies/tweet-withheld-by-country).
type TweetWithheld struct {
	// Indicates if the content is being withheld for on the basis of copyright infringement.
	Copyright bool `json:"copyright"`
	// Provides a list of countries where this content is not available.
	CountryCodes []string `json:"country_codes"`
	// Indicates whether the content being withheld is the `tweet` or a `user`.
	Scope *TweetWithheldScopeEnum `json:"scope,omitempty"`
}
