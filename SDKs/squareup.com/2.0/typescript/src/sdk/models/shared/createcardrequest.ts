/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Card } from "./card";
import { Expose, Type } from "class-transformer";

/**
 * Creates a card from the source (nonce, payment id, etc). Accessible via
 *
 * @remarks
 * HTTP requests at POST https://connect.squareup.com/v2/cards
 */
export class CreateCardRequest extends SpeakeasyBase {
  /**
   * Represents the payment details of a card to be used for payments. These
   *
   * @remarks
   * details are determined by the payment token generated by Web Payments SDK.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "card" })
  @Type(() => Card)
  card: Card;

  /**
   * A unique string that identifies this CreateCard request. Keys can be
   *
   * @remarks
   * any valid string and must be unique for every request.
   *
   * Max: 45 characters
   *
   * See [Idempotency keys](https://developer.squareup.com/docs/basics/api101/idempotency) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idempotency_key" })
  idempotencyKey: string;

  /**
   * The ID of the source which represents the card information to be stored. This can be a card nonce or a payment id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_id" })
  sourceId: string;

  /**
   * An identifying token generated by [Payments.verifyBuyer()](https://developer.squareup.com/reference/sdks/web/payments/objects/Payments#Payments.verifyBuyer).
   *
   * @remarks
   * Verification tokens encapsulate customer device information and 3-D Secure
   * challenge results to indicate that Square has verified the buyer identity.
   *
   * See the [SCA Overview](https://developer.squareup.com/docs/sca-overview).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verification_token" })
  verificationToken?: string;
}
