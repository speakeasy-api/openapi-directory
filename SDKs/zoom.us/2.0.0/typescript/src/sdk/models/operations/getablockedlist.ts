/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetABlockedListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetABlockedListRequest extends SpeakeasyBase {
  /**
   * Unique Identifier of the blocked list.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=blockedListId",
  })
  blockedListId: string;
}

/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
export enum GetABlockedList200ApplicationXMLBlockTypeEnum {
  Inbound = "inbound",
  Outbound = "outbound",
}

/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
export enum GetABlockedList200ApplicationXMLMatchTypeEnum {
  PhoneNumber = "phoneNumber",
  Prefix = "prefix",
}

/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
export enum GetABlockedList200ApplicationXMLStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list retrieved successfully.
 */
export class GetABlockedList200ApplicationXML extends SpeakeasyBase {
  /**
   * Block type.<br>
   *
   * @remarks
   * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
   * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
   */
  @SpeakeasyMetadata()
  blockType?: GetABlockedList200ApplicationXMLBlockTypeEnum;

  /**
   * Provide a comment to help you identify the blocked number or prefix.
   */
  @SpeakeasyMetadata()
  comment?: string;

  /**
   * Unique identifier of the blocked list.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Indicates the match type for the blocked list. The values can be one of the following:<br>
   *
   * @remarks
   * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
   * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
   */
  @SpeakeasyMetadata()
  matchType?: GetABlockedList200ApplicationXMLMatchTypeEnum;

  /**
   * The phone number or the prefix number that is blocked based on the `match_type`.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;

  /**
   * Indicates whether the blocking is active or inactive. <br>
   *
   * @remarks
   * `active`: The blocked list is active.<br>
   * `inactive`: The blocked list is inactive.
   */
  @SpeakeasyMetadata()
  status?: GetABlockedList200ApplicationXMLStatusEnum;
}

/**
 * Block type.<br>
 *
 * @remarks
 * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
 * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
 */
export enum GetABlockedList200ApplicationJSONBlockTypeEnum {
  Inbound = "inbound",
  Outbound = "outbound",
}

/**
 * Indicates the match type for the blocked list. The values can be one of the following:<br>
 *
 * @remarks
 * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
 * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
 */
export enum GetABlockedList200ApplicationJSONMatchTypeEnum {
  PhoneNumber = "phoneNumber",
  Prefix = "prefix",
}

/**
 * Indicates whether the blocking is active or inactive. <br>
 *
 * @remarks
 * `active`: The blocked list is active.<br>
 * `inactive`: The blocked list is inactive.
 */
export enum GetABlockedList200ApplicationJSONStatusEnum {
  Active = "active",
  Inactive = "inactive",
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Blocked list retrieved successfully.
 */
export class GetABlockedList200ApplicationJSON extends SpeakeasyBase {
  /**
   * Block type.<br>
   *
   * @remarks
   * `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.<br><br>
   * `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "block_type" })
  blockType?: GetABlockedList200ApplicationJSONBlockTypeEnum;

  /**
   * Provide a comment to help you identify the blocked number or prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * Unique identifier of the blocked list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Indicates the match type for the blocked list. The values can be one of the following:<br>
   *
   * @remarks
   * `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.<br><br>
   * `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "match_type" })
  matchType?: GetABlockedList200ApplicationJSONMatchTypeEnum;

  /**
   * The phone number or the prefix number that is blocked based on the `match_type`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Indicates whether the blocking is active or inactive. <br>
   *
   * @remarks
   * `active`: The blocked list is active.<br>
   * `inactive`: The blocked list is inactive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetABlockedList200ApplicationJSONStatusEnum;
}

export class GetABlockedListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Blocked list retrieved successfully.
   */
  @SpeakeasyMetadata()
  getABlockedList200ApplicationJSONObject?: GetABlockedList200ApplicationJSON;
}
