/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedRackGroup } from "./nestedrackgroup";
import { NestedRackRole } from "./nestedrackrole";
import { NestedSite } from "./nestedsite";
import { NestedTenant } from "./nestedtenant";
import { Expose, Transform, Type } from "class-transformer";

export enum RackOuterUnitLabelEnum {
  Millimeters = "Millimeters",
  Inches = "Inches",
}

export enum RackOuterUnitValueEnum {
  Mm = "mm",
  In = "in",
}

export class RackOuterUnit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: RackOuterUnitLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: RackOuterUnitValueEnum;
}

export enum RackStatusLabelEnum {
  Reserved = "Reserved",
  Available = "Available",
  Planned = "Planned",
  Active = "Active",
  Deprecated = "Deprecated",
}

export enum RackStatusValueEnum {
  Reserved = "reserved",
  Available = "available",
  Planned = "planned",
  Active = "active",
  Deprecated = "deprecated",
}

export class RackStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: RackStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: RackStatusValueEnum;
}

export enum RackTypeLabelEnum {
  TwoPostFrame = "2-post frame",
  FourPostFrame = "4-post frame",
  FourPostCabinet = "4-post cabinet",
  WallMountedFrame = "Wall-mounted frame",
  WallMountedCabinet = "Wall-mounted cabinet",
}

export enum RackTypeValueEnum {
  TwoPostFrame = "2-post-frame",
  FourPostFrame = "4-post-frame",
  FourPostCabinet = "4-post-cabinet",
  WallFrame = "wall-frame",
  WallCabinet = "wall-cabinet",
}

export class RackType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: RackTypeLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: RackTypeValueEnum;
}

export enum RackWidthLabelEnum {
  TenInches = "10 inches",
  NineteenInches = "19 inches",
  TwentyOneInches = "21 inches",
  TwentyThreeInches = "23 inches",
}

export enum RackWidthValueEnum {
  Ten = "10",
  Nineteen = "19",
  TwentyOne = "21",
  TwentyThree = "23",
}

export class RackWidth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: RackWidthLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: RackWidthValueEnum;
}

export class Rack extends SpeakeasyBase {
  /**
   * A unique tag used to identify this rack
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asset_tag" })
  assetTag?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  /**
   * Units are numbered top-to-bottom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desc_units" })
  descUnits?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "device_count" })
  deviceCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * Locally-assigned identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "facility_id" })
  facilityId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => NestedRackGroup)
  group?: NestedRackGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Outer dimension of rack (depth)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outer_depth" })
  outerDepth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "outer_unit" })
  @Type(() => RackOuterUnit)
  outerUnit?: RackOuterUnit;

  /**
   * Outer dimension of rack (width)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outer_width" })
  outerWidth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "powerfeed_count" })
  powerfeedCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => NestedRackRole)
  role?: NestedRackRole;

  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => NestedSite)
  site: NestedSite;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => RackStatus)
  status?: RackStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => RackType)
  type?: RackType;

  /**
   * Height in rack units
   */
  @SpeakeasyMetadata()
  @Expose({ name: "u_height" })
  uHeight?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  @Type(() => RackWidth)
  width?: RackWidth;
}
