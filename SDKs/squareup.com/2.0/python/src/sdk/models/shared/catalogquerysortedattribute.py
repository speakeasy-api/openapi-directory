"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogQuerySortedAttribute:
    r"""The query expression to specify the key to sort search results."""
    
    attribute_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attribute_name') }})
    r"""The attribute whose value is used as the sort key."""  
    initial_attribute_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initial_attribute_value'), 'exclude': lambda f: f is None }})
    r"""The first attribute value to be returned by the query. Ascending sorts will return only
    objects with this value or greater, while descending sorts will return only objects with this value
    or less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).
    """  
    sort_order: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sort_order'), 'exclude': lambda f: f is None }})
    r"""The desired sort order, `\\"ASC\\"` (ascending) or `\\"DESC\\"` (descending)."""  
    