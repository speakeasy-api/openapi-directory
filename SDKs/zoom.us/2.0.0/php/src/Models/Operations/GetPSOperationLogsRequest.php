<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetPSOperationLogsRequest
{
    /**
     * Filter the response by the category of the action performed. By default, the value of this field is "all" and thus, the response will include log of all operations for the defined period.<br><br>To only include response for a specific category type, provide a value for `category_type` from this [table](http://marketplace.zoom.us/docs/phone-operation-categories ).
     * 
     * @var ?string $categoryType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=category_type')]
    public ?string $categoryType = null;
    
    /**
     * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report provides only one month worth of data per API request.
     * 
     * @var ?string $from
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=from')]
    public ?string $from = null;
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     * 
     * @var ?string $nextPageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=next_page_token')]
    public ?string $nextPageToken = null;
    
    /**
     * The number of records returned within a single API call.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page_size')]
    public ?int $pageSize = null;
    
    /**
     * End date in 'yyyy-mm-dd' format.
     * 
     * @var ?string $to
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=to')]
    public ?string $to = null;
    
	public function __construct()
	{
		$this->categoryType = null;
		$this->from = null;
		$this->nextPageToken = null;
		$this->pageSize = null;
		$this->to = null;
	}
}
