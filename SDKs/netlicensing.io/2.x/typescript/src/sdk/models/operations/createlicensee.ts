/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateLicenseeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateLicenseeRequestBody extends SpeakeasyBase {
  /**
   * If set to 'false', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled
   */
  @SpeakeasyMetadata({ data: "form, name=active" })
  active: boolean;

  /**
   * Mark Licensee for transfer.
   */
  @SpeakeasyMetadata({ data: "form, name=markedForTransfer" })
  markedForTransfer?: boolean;

  @SpeakeasyMetadata({ data: "form, name=name" })
  name?: string;

  /**
   * Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee
   */
  @SpeakeasyMetadata({ data: "form, name=number" })
  number?: string;

  /**
   * 'productNumber' to assign new Licensee object
   */
  @SpeakeasyMetadata({ data: "form, name=productNumber" })
  productNumber: string;
}

export class CreateLicenseeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful request
   */
  @SpeakeasyMetadata()
  netlicensing?: shared.Netlicensing;
}
