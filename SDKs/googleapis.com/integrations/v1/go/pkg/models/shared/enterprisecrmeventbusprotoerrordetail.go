// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnterpriseCrmEventbusProtoErrorDetailSeverityEnum - The severity of the error: ERROR|WARN|INFO.
type EnterpriseCrmEventbusProtoErrorDetailSeverityEnum string

const (
	EnterpriseCrmEventbusProtoErrorDetailSeverityEnumSeverityUnspecified EnterpriseCrmEventbusProtoErrorDetailSeverityEnum = "SEVERITY_UNSPECIFIED"
	EnterpriseCrmEventbusProtoErrorDetailSeverityEnumError               EnterpriseCrmEventbusProtoErrorDetailSeverityEnum = "ERROR"
	EnterpriseCrmEventbusProtoErrorDetailSeverityEnumWarn                EnterpriseCrmEventbusProtoErrorDetailSeverityEnum = "WARN"
	EnterpriseCrmEventbusProtoErrorDetailSeverityEnumInfo                EnterpriseCrmEventbusProtoErrorDetailSeverityEnum = "INFO"
)

func (e EnterpriseCrmEventbusProtoErrorDetailSeverityEnum) ToPointer() *EnterpriseCrmEventbusProtoErrorDetailSeverityEnum {
	return &e
}

func (e *EnterpriseCrmEventbusProtoErrorDetailSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "ERROR":
		fallthrough
	case "WARN":
		fallthrough
	case "INFO":
		*e = EnterpriseCrmEventbusProtoErrorDetailSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmEventbusProtoErrorDetailSeverityEnum: %v", v)
	}
}

// EnterpriseCrmEventbusProtoErrorDetail - An error, warning, or information message associated with a workflow.
type EnterpriseCrmEventbusProtoErrorDetail struct {
	// Registered ids for errors, as "oneof" enums. Each task or logical grouping of tasks may share the same enum.
	ErrorCode *CrmlogErrorCode `json:"errorCode,omitempty"`
	// The full text of the error message, including any parameters that were thrown along with the exception.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// The severity of the error: ERROR|WARN|INFO.
	Severity *EnterpriseCrmEventbusProtoErrorDetailSeverityEnum `json:"severity,omitempty"`
	// The task try-number, in which, the error occurred. If zero, the error happened at the event level.
	TaskNumber *int `json:"taskNumber,omitempty"`
}
