<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDataplexV1DataQualityRule - A rule captures data quality intent about a data source.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDataplexV1DataQualityRule
{
    /**
     * Optional. The unnested column which this rule is evaluated against.
     * 
     * @var ?string $column
     */
	#[\JMS\Serializer\Annotation\SerializedName('column')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $column = null;
    
    /**
     * Required. The dimension a rule belongs to. Results are also aggregated at the dimension level. Supported dimensions are "COMPLETENESS", "ACCURACY", "CONSISTENCY", "VALIDITY", "UNIQUENESS", "INTEGRITY"
     * 
     * @var ?string $dimension
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimension')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dimension = null;
    
    /**
     * Optional. Rows with null values will automatically fail a rule, unless ignore_null is true. In that case, such null rows are trivially considered passing.Only applicable to ColumnMap rules.
     * 
     * @var ?bool $ignoreNull
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreNull')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreNull = null;
    
    /**
     * Evaluates whether each column value is null.
     * 
     * @var ?array<string, mixed> $nonNullExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('nonNullExpectation')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nonNullExpectation = null;
    
    /**
     * Evaluates whether each column value lies between a specified range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleRangeExpectation $rangeExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('rangeExpectation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleRangeExpectation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1DataQualityRuleRangeExpectation $rangeExpectation = null;
    
    /**
     * Evaluates whether each column value matches a specified regex.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleRegexExpectation $regexExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('regexExpectation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleRegexExpectation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1DataQualityRuleRegexExpectation $regexExpectation = null;
    
    /**
     * Evaluates whether each row passes the specified condition.The SQL expression needs to use BigQuery standard SQL syntax and should produce a boolean value per row as the result.Example: col1 >= 0 AND col2 < 10
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation $rowConditionExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('rowConditionExpectation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1DataQualityRuleRowConditionExpectation $rowConditionExpectation = null;
    
    /**
     * Evaluates whether each column value is contained by a specified set.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleSetExpectation $setExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('setExpectation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleSetExpectation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1DataQualityRuleSetExpectation $setExpectation = null;
    
    /**
     * Evaluates whether the column aggregate statistic lies between a specified range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation $statisticRangeExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('statisticRangeExpectation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1DataQualityRuleStatisticRangeExpectation $statisticRangeExpectation = null;
    
    /**
     * Evaluates whether the provided expression is true.The SQL expression needs to use BigQuery standard SQL syntax and should produce a scalar boolean result.Example: MIN(col1) >= 0
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation $tableConditionExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('tableConditionExpectation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1DataQualityRuleTableConditionExpectation $tableConditionExpectation = null;
    
    /**
     * Optional. The minimum ratio of passing_rows / total_rows required to pass this rule, with a range of 0.0, 1.0.0 indicates default value (i.e. 1.0).
     * 
     * @var ?float $threshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('threshold')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $threshold = null;
    
    /**
     * Evaluates whether the column has duplicates.
     * 
     * @var ?array<string, mixed> $uniquenessExpectation
     */
	#[\JMS\Serializer\Annotation\SerializedName('uniquenessExpectation')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $uniquenessExpectation = null;
    
	public function __construct()
	{
		$this->column = null;
		$this->dimension = null;
		$this->ignoreNull = null;
		$this->nonNullExpectation = null;
		$this->rangeExpectation = null;
		$this->regexExpectation = null;
		$this->rowConditionExpectation = null;
		$this->setExpectation = null;
		$this->statisticRangeExpectation = null;
		$this->tableConditionExpectation = null;
		$this->threshold = null;
		$this->uniquenessExpectation = null;
	}
}
