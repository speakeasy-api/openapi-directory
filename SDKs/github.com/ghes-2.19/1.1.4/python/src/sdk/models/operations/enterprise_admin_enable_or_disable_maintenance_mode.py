"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import maintenance_status as shared_maintenance_status
from typing import Optional


@dataclasses.dataclass
class EnterpriseAdminEnableOrDisableMaintenanceModeRequestBody:
    
    maintenance: str = dataclasses.field(metadata={'form': { 'field_name': 'maintenance' }})
    r"""A JSON string with the attributes `enabled` and `when`.
    
    The possible values for `enabled` are `true` and `false`. When it's `false`, the attribute `when` is ignored and the maintenance mode is turned off. `when` defines the time period when the maintenance was enabled.
    
    The possible values for `when` are `now` or any date parseable by [mojombo/chronic](https://github.com/mojombo/chronic).
    """  
    

@dataclasses.dataclass
class EnterpriseAdminEnableOrDisableMaintenanceModeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    maintenance_status: Optional[shared_maintenance_status.MaintenanceStatus] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    