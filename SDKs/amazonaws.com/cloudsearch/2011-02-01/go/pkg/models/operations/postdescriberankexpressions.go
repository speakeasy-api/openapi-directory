// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeRankExpressionsActionEnum
type POSTDescribeRankExpressionsActionEnum string

const (
	POSTDescribeRankExpressionsActionEnumDescribeRankExpressions POSTDescribeRankExpressionsActionEnum = "DescribeRankExpressions"
)

func (e *POSTDescribeRankExpressionsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeRankExpressions":
		*e = POSTDescribeRankExpressionsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeRankExpressionsActionEnum: %s", s)
	}
}

// POSTDescribeRankExpressionsVersionEnum
type POSTDescribeRankExpressionsVersionEnum string

const (
	POSTDescribeRankExpressionsVersionEnumTwoThousandAndEleven0201 POSTDescribeRankExpressionsVersionEnum = "2011-02-01"
)

func (e *POSTDescribeRankExpressionsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-02-01":
		*e = POSTDescribeRankExpressionsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeRankExpressionsVersionEnum: %s", s)
	}
}

type POSTDescribeRankExpressionsQueryParams struct {
	Action  POSTDescribeRankExpressionsActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDescribeRankExpressionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeRankExpressionsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeRankExpressionsRequest struct {
	QueryParams POSTDescribeRankExpressionsQueryParams
	Headers     POSTDescribeRankExpressionsHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeRankExpressionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
