"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import account as shared_account
from ..shared import targetlocation as shared_targetlocation
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class InvitationRoleEnum(str, Enum):
    r"""Output only. The invited role on the account."""
    ADMIN_ROLE_UNSPECIFIED = 'ADMIN_ROLE_UNSPECIFIED'
    PRIMARY_OWNER = 'PRIMARY_OWNER'
    OWNER = 'OWNER'
    MANAGER = 'MANAGER'
    SITE_MANAGER = 'SITE_MANAGER'

class InvitationTargetTypeEnum(str, Enum):
    r"""Output only. Specifies which target types should appear in the response."""
    TARGET_TYPE_UNSPECIFIED = 'TARGET_TYPE_UNSPECIFIED'
    ACCOUNTS_ONLY = 'ACCOUNTS_ONLY'
    LOCATIONS_ONLY = 'LOCATIONS_ONLY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Invitation:
    r"""Represents a pending invitation."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The resource name for the invitation. `accounts/{account_id}/invitations/{invitation_id}`."""  
    role: Optional[InvitationRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""Output only. The invited role on the account."""  
    target_account: Optional[shared_account.Account] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetAccount'), 'exclude': lambda f: f is None }})
    r"""An account is a container for your location. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325)."""  
    target_location: Optional[shared_targetlocation.TargetLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetLocation'), 'exclude': lambda f: f is None }})
    r"""Represents a target location for a pending invitation."""  
    target_type: Optional[InvitationTargetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetType'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies which target types should appear in the response."""  
    