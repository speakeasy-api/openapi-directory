/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Configuration for the AzureAD Auth flow.
 */
export class IdentityServiceAzureADConfig extends SpeakeasyBase {
  /**
   * ID for the registered client application that makes authentication requests to the Azure AD identity provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret?: string;

  /**
   * Output only. Encrypted AzureAD client secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encryptedClientSecret" })
  encryptedClientSecret?: string;

  /**
   * The redirect URL that kubectl uses for authorization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kubectlRedirectUri" })
  kubectlRedirectUri?: string;

  /**
   * Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: string;
}

/**
 * Configuration for the AzureAD Auth flow.
 */
export class IdentityServiceAzureADConfigInput extends SpeakeasyBase {
  /**
   * ID for the registered client application that makes authentication requests to the Azure AD identity provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * Input only. Unencrypted AzureAD client secret will be passed to the GKE Hub CLH.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientSecret" })
  clientSecret?: string;

  /**
   * The redirect URL that kubectl uses for authorization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kubectlRedirectUri" })
  kubectlRedirectUri?: string;

  /**
   * Kind of Azure AD account to be authenticated. Supported values are or for accounts belonging to a specific tenant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: string;
}
