/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListRecordingQueryParams {
    /**
     * The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CallSid")
    public String callSid;
    public ListRecordingQueryParams withCallSid(String callSid) {
        this.callSid = callSid;
        return this;
    }
    
    /**
     * The Conference SID that identifies the conference associated with the recording to read.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ConferenceSid")
    public String conferenceSid;
    public ListRecordingQueryParams withConferenceSid(String conferenceSid) {
        this.conferenceSid = conferenceSid;
        return this;
    }
    
    /**
     * Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated&lt;=YYYY-MM-DD`, to read recordings that were created on or before midnight of this date, and `DateCreated&gt;=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreated")
    public OffsetDateTime dateCreated;
    public ListRecordingQueryParams withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated&lt;=YYYY-MM-DD`, to read recordings that were created on or before midnight of this date, and `DateCreated&gt;=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreated<")
    public OffsetDateTime dateCreatedLessThan;
    public ListRecordingQueryParams withDateCreatedLessThan(OffsetDateTime dateCreatedLessThan) {
        this.dateCreatedLessThan = dateCreatedLessThan;
        return this;
    }
    
    /**
     * Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated&lt;=YYYY-MM-DD`, to read recordings that were created on or before midnight of this date, and `DateCreated&gt;=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DateCreated>")
    public OffsetDateTime dateCreatedGreaterThan;
    public ListRecordingQueryParams withDateCreatedGreaterThan(OffsetDateTime dateCreatedGreaterThan) {
        this.dateCreatedGreaterThan = dateCreatedGreaterThan;
        return this;
    }
    
    /**
     * A boolean parameter indicating whether to retrieve soft deleted recordings or not. Recordings metadata are kept after deletion for a retention period of 40 days.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=IncludeSoftDeleted")
    public Boolean includeSoftDeleted;
    public ListRecordingQueryParams withIncludeSoftDeleted(Boolean includeSoftDeleted) {
        this.includeSoftDeleted = includeSoftDeleted;
        return this;
    }
    
    /**
     * The page index. This value is simply for client state.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Page")
    public Long page;
    public ListRecordingQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageSize")
    public Long pageSize;
    public ListRecordingQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The page token. This is provided by the API.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PageToken")
    public String pageToken;
    public ListRecordingQueryParams withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
}
