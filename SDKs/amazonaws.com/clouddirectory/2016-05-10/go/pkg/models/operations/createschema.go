// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateSchemaRequestBody struct {
	// The name that is associated with the schema. This is unique to each account and in each region.
	Name string `json:"Name"`
}

type CreateSchemaRequest struct {
	RequestBody       CreateSchemaRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateSchemaResponse struct {
	// AccessDeniedException
	AccessDeniedException *shared.AccessDeniedException
	ContentType           string
	// Success
	CreateSchemaResponse *shared.CreateSchemaResponse
	// InternalServiceException
	InternalServiceException *shared.InternalServiceException
	// InvalidArnException
	InvalidArnException *shared.InvalidArnException
	// LimitExceededException
	LimitExceededException *shared.LimitExceededException
	StatusCode             int
	RawResponse            *http.Response
	// RetryableConflictException
	RetryableConflictException *shared.RetryableConflictException
	// SchemaAlreadyExistsException
	SchemaAlreadyExistsException *shared.SchemaAlreadyExistsException
	// ValidationException
	ValidationException *shared.ValidationException
}
