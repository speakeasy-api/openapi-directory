/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Customer - When a Google customer's account is registered with a reseller, the customer's subscriptions for Google services are managed by this reseller. A customer is described by a primary domain name and a physical address.
 */
public class Customer {
    /**
     * Like the "Customer email" in the reseller tools, this email is the secondary contact used if something happens to the customer's service such as service outage or a security issue. This property is required when creating a new "domain" customer and should not use the same domain as `customerDomain`. The `alternateEmail` field is not necessary to create a "team" customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alternateEmail")
    public String alternateEmail;
    public Customer withAlternateEmail(String alternateEmail) {
        this.alternateEmail = alternateEmail;
        return this;
    }
    
    /**
     * The customer's primary domain name string. `customerDomain` is required when creating a new customer. Do not include the `www` prefix in the domain when adding a customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerDomain")
    public String customerDomain;
    public Customer withCustomerDomain(String customerDomain) {
        this.customerDomain = customerDomain;
        return this;
    }
    
    /**
     * Whether the customer's primary domain has been verified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerDomainVerified")
    public Boolean customerDomainVerified;
    public Customer withCustomerDomainVerified(Boolean customerDomainVerified) {
        this.customerDomainVerified = customerDomainVerified;
        return this;
    }
    
    /**
     * This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary domain or the unique identifier generated by Google.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public String customerId;
    public Customer withCustomerId(String customerId) {
        this.customerId = customerId;
        return this;
    }
    
    /**
     * Identifies the type of the customer. Acceptable values include: * `domain`: Implies a domain-verified customer (default). * `team`: Implies an email-verified customer. For more information, see [managed teams](https://support.google.com/a/users/answer/9939479).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerType")
    public CustomerCustomerTypeEnum customerType;
    public Customer withCustomerType(CustomerCustomerTypeEnum customerType) {
        this.customerType = customerType;
        return this;
    }
    
    /**
     * Identifies the resource as a customer. Value: `reseller#customer`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Customer withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Customer contact phone number. Must start with "+" followed by the country code. The rest of the number can be contiguous numbers or respect the phone local format conventions, but it must be a real phone number and not, for example, "123". This field is silently ignored if invalid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public String phoneNumber;
    public Customer withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * JSON template for address of a customer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalAddress")
    public Address postalAddress;
    public Customer withPostalAddress(Address postalAddress) {
        this.postalAddress = postalAddress;
        return this;
    }
    
    /**
     * JSON template for primary admin in case of TEAM customers
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryAdmin")
    public PrimaryAdmin primaryAdmin;
    public Customer withPrimaryAdmin(PrimaryAdmin primaryAdmin) {
        this.primaryAdmin = primaryAdmin;
        return this;
    }
    
    /**
     * URL to customer's Admin console dashboard. The read-only URL is generated by the API service. This is used if your client application requires the customer to complete a task in the Admin console.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceUiUrl")
    public String resourceUiUrl;
    public Customer withResourceUiUrl(String resourceUiUrl) {
        this.resourceUiUrl = resourceUiUrl;
        return this;
    }
    
}
