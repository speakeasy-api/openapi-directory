// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeviceManagementTypeEnum - Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - "managedDevice", a device that has the EMM's device policy controller (DPC) as the device owner. - "managedProfile", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - "containerApp", no longer used (deprecated). - "unmanagedProfile", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC.
type DeviceManagementTypeEnum string

const (
	DeviceManagementTypeEnumManagedDevice    DeviceManagementTypeEnum = "managedDevice"
	DeviceManagementTypeEnumManagedProfile   DeviceManagementTypeEnum = "managedProfile"
	DeviceManagementTypeEnumContainerApp     DeviceManagementTypeEnum = "containerApp"
	DeviceManagementTypeEnumUnmanagedProfile DeviceManagementTypeEnum = "unmanagedProfile"
)

func (e *DeviceManagementTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "managedDevice":
		fallthrough
	case "managedProfile":
		fallthrough
	case "containerApp":
		fallthrough
	case "unmanagedProfile":
		*e = DeviceManagementTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceManagementTypeEnum: %s", s)
	}
}

// Device - A Devices resource represents a mobile device managed by the EMM and belonging to a specific enterprise user.
type Device struct {
	// The Google Play Services Android ID for the device encoded as a lowercase hex string. For example, "123456789abcdef0".
	AndroidID *string `json:"androidId,omitempty"`
	// The internal hardware codename of the device. This comes from android.os.Build.DEVICE. (field named "device" per logs/wireless/android/android_checkin.proto)
	Device *string `json:"device,omitempty"`
	// The build fingerprint of the device if known.
	LatestBuildFingerprint *string `json:"latestBuildFingerprint,omitempty"`
	// The manufacturer of the device. This comes from android.os.Build.MANUFACTURER.
	Maker *string `json:"maker,omitempty"`
	// Identifies the extent to which the device is controlled by a managed Google Play EMM in various deployment configurations. Possible values include: - "managedDevice", a device that has the EMM's device policy controller (DPC) as the device owner. - "managedProfile", a device that has a profile managed by the DPC (DPC is profile owner) in addition to a separate, personal profile that is unavailable to the DPC. - "containerApp", no longer used (deprecated). - "unmanagedProfile", a device that has been allowed (by the domain's admin, using the Admin Console to enable the privilege) to use managed Google Play, but the profile is itself not owned by a DPC.
	ManagementType *DeviceManagementTypeEnum `json:"managementType,omitempty"`
	// The model name of the device. This comes from android.os.Build.MODEL.
	Model *string `json:"model,omitempty"`
	// The device policy for a given managed device.
	Policy *Policy `json:"policy,omitempty"`
	// The product name of the device. This comes from android.os.Build.PRODUCT.
	Product *string `json:"product,omitempty"`
	// Device report updated with the latest app states for managed apps on the device.
	Report *DeviceReport `json:"report,omitempty"`
	// Retail brand for the device, if set. See https://developer.android.com/reference/android/os/Build.html#BRAND
	RetailBrand *string `json:"retailBrand,omitempty"`
	// API compatibility version.
	SDKVersion *int `json:"sdkVersion,omitempty"`
}
