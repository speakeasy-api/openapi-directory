/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * OBTransaction6 - Provides further details on an entry in the report.
 */
public class OBTransaction6 {
    /**
     * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
     */
    @JsonProperty("AccountId")
    public String accountId;

    public OBTransaction6 withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonProperty("Amount")
    public OBActiveOrHistoricCurrencyAndAmount amount;

    public OBTransaction6 withAmount(OBActiveOrHistoricCurrencyAndAmount amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Set of elements used to define the balance as a numerical representation of the net increases and decreases in an account after a transaction entry is applied to the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Balance")
    public OBTransactionCashBalance balance;

    public OBTransaction6 withBalance(OBTransactionCashBalance balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * Date and time when a transaction entry is posted to an account on the account servicer's books.
     * Usage: Booking date is the expected booking date, unless the status is booked, in which case it is the actual booking date.All dates in the JSON payloads are represented in ISO 8601 date-time format.
     * All date-time fields in responses must include the timezone.An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("BookingDateTime")
    public OffsetDateTime bookingDateTime;

    public OBTransaction6 withBookingDateTime(OffsetDateTime bookingDateTime) {
        this.bookingDateTime = bookingDateTime;
        return this;
    }
    
    @JsonProperty("CreditDebitIndicator")
    public OBCreditDebitCodeEnum creditDebitIndicator;

    public OBTransaction6 withCreditDebitIndicator(OBCreditDebitCodeEnum creditDebitIndicator) {
        this.creditDebitIndicator = creditDebitIndicator;
        return this;
    }
    
    /**
     * Unambiguous identification of the account of the creditor, in the case of a debit transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditorAccount")
    public OBCashAccount6 creditorAccount;

    public OBTransaction6 withCreditorAccount(OBCashAccount6 creditorAccount) {
        this.creditorAccount = creditorAccount;
        return this;
    }
    
    /**
     * Unambiguous identification of the account of the creditor, in the case of a debit transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DebtorAccount")
    public OBCashAccount6 debtorAccount;

    public OBTransaction6 withDebtorAccount(OBCashAccount6 debtorAccount) {
        this.debtorAccount = debtorAccount;
        return this;
    }
    
    /**
     * Set of elements to fully identify a proprietary bank transaction code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProprietaryBankTransactionCode")
    public ProprietaryBankTransactionCodeStructure1 proprietaryBankTransactionCode;

    public OBTransaction6 withProprietaryBankTransactionCode(ProprietaryBankTransactionCodeStructure1 proprietaryBankTransactionCode) {
        this.proprietaryBankTransactionCode = proprietaryBankTransactionCode;
        return this;
    }
    
    @JsonProperty("Status")
    public OBEntryStatus1CodeEnum status;

    public OBTransaction6 withStatus(OBEntryStatus1CodeEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Further details of the transaction.
     * This is the transaction narrative, which is unstructured text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransactionInformation")
    public String transactionInformation;

    public OBTransaction6 withTransactionInformation(String transactionInformation) {
        this.transactionInformation = transactionInformation;
        return this;
    }
    
    /**
     * Unique reference for the transaction. This reference is optionally populated, and may as an example be the FPID in the Faster Payments context.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransactionReference")
    public String transactionReference;

    public OBTransaction6 withTransactionReference(String transactionReference) {
        this.transactionReference = transactionReference;
        return this;
    }
    
    /**
     * Date and time at which assets become available to the account owner in case of a credit entry, or cease to be available to the account owner in case of a debit transaction entry.
     * Usage: If transaction entry status is pending and value date is present, then the value date refers to an expected/requested value date.
     * For transaction entries subject to availability/float and for which availability information is provided, the value date must not be used.In this case the availability component identifies the number of availability days.All dates in the JSON payloads are represented in ISO 8601 date-time format.
     * All date-time fields in responses must include the timezone.An example is below:
     * 2017-04-05T10:43:07+00:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ValueDateTime")
    public OffsetDateTime valueDateTime;

    public OBTransaction6 withValueDateTime(OffsetDateTime valueDateTime) {
        this.valueDateTime = valueDateTime;
        return this;
    }
    
    public OBTransaction6(@JsonProperty("AccountId") String accountId, @JsonProperty("Amount") OBActiveOrHistoricCurrencyAndAmount amount, @JsonProperty("BookingDateTime") OffsetDateTime bookingDateTime, @JsonProperty("CreditDebitIndicator") OBCreditDebitCodeEnum creditDebitIndicator, @JsonProperty("Status") OBEntryStatus1CodeEnum status) {
        this.accountId = accountId;
        this.amount = amount;
        this.bookingDateTime = bookingDateTime;
        this.creditDebitIndicator = creditDebitIndicator;
        this.status = status;
  }
}
