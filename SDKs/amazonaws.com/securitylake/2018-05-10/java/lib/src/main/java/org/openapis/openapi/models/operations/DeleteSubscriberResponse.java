/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class DeleteSubscriberResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;
    public DeleteSubscriberResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    /**
     * AccountNotFoundException
     */
    
    public Object accountNotFoundException;
    public DeleteSubscriberResponse withAccountNotFoundException(Object accountNotFoundException) {
        this.accountNotFoundException = accountNotFoundException;
        return this;
    }
    
    /**
     * BucketNotFoundException
     */
    
    public Object bucketNotFoundException;
    public DeleteSubscriberResponse withBucketNotFoundException(Object bucketNotFoundException) {
        this.bucketNotFoundException = bucketNotFoundException;
        return this;
    }
    
    /**
     * ConcurrentModificationException
     */
    
    public Object concurrentModificationException;
    public DeleteSubscriberResponse withConcurrentModificationException(Object concurrentModificationException) {
        this.concurrentModificationException = concurrentModificationException;
        return this;
    }
    
    
    public String contentType;
    public DeleteSubscriberResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> deleteSubscriberResponse;
    public DeleteSubscriberResponse withDeleteSubscriberResponse(java.util.Map<String, Object> deleteSubscriberResponse) {
        this.deleteSubscriberResponse = deleteSubscriberResponse;
        return this;
    }
    
    /**
     * InternalServerException
     */
    
    public Object internalServerException;
    public DeleteSubscriberResponse withInternalServerException(Object internalServerException) {
        this.internalServerException = internalServerException;
        return this;
    }
    
    /**
     * InvalidInputException
     */
    
    public Object invalidInputException;
    public DeleteSubscriberResponse withInvalidInputException(Object invalidInputException) {
        this.invalidInputException = invalidInputException;
        return this;
    }
    
    
    public Integer statusCode;
    public DeleteSubscriberResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public DeleteSubscriberResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public DeleteSubscriberResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;
    public DeleteSubscriberResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
}
