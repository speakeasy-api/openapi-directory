/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Status } from "./status";
import { Thumbnail } from "./thumbnail";
import { ToolOutputReference } from "./tooloutputreference";
import { Expose, Type } from "class-transformer";

/**
 * An image, with a link to the main image and a thumbnail.
 */
export class Image extends SpeakeasyBase {
  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * A reference to a ToolExecution output file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceImage" })
  @Type(() => ToolOutputReference)
  sourceImage?: ToolOutputReference;

  /**
   * The step to which the image is attached. Always set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stepId" })
  stepId?: string;

  /**
   * A single thumbnail, with its size and format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnail" })
  @Type(() => Thumbnail)
  thumbnail?: Thumbnail;
}
