"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBodyDeviceTypePoliciesDevicePolicyEnum(str, Enum):
    r"""The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'"""
    ALLOWED = 'Allowed'
    BLOCKED = 'Blocked'
    GROUP_POLICY = 'Group policy'

class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBodyDeviceTypePoliciesDeviceTypeEnum(str, Enum):
    r"""The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'"""
    ANDROID = 'Android'
    B_AND_N_NOOK = 'B&N Nook'
    BLACK_BERRY = 'BlackBerry'
    CHROME_OS = 'Chrome OS'
    MAC_OS_X = 'Mac OS X'
    OTHER_OS = 'Other OS'
    WINDOWS = 'Windows'
    WINDOWS_PHONE = 'Windows Phone'
    I_PAD = 'iPad'
    I_PHONE = 'iPhone'
    I_POD = 'iPod'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBodyDeviceTypePolicies:
    
    device_policy: UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBodyDeviceTypePoliciesDevicePolicyEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devicePolicy') }})
    r"""The device policy. Can be one of 'Allowed', 'Blocked' or 'Group policy'"""  
    device_type: UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBodyDeviceTypePoliciesDeviceTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceType') }})
    r"""The device type. Can be one of 'Android', 'BlackBerry', 'Chrome OS', 'iPad', 'iPhone', 'iPod', 'Mac OS X', 'Windows', 'Windows Phone', 'B&N Nook' or 'Other OS'"""  
    group_policy_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupPolicyId'), 'exclude': lambda f: f is None }})
    r"""ID of the group policy object."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBody:
    
    device_type_policies: Optional[list[UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBodyDeviceTypePolicies]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceTypePolicies'), 'exclude': lambda f: f is None }})
    r"""List of device type policies."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""If true, the SSID device type group policies are enabled."""  
    

@dataclasses.dataclass
class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    number: str = dataclasses.field(metadata={'path_param': { 'field_name': 'number', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkWirelessSsidDeviceTypeGroupPoliciesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_wireless_ssid_device_type_group_policies_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    