// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GETListsOverviewFormatSecurity struct {
	APIKey string `security:"scheme,type=apiKey,subtype=query,name=api-key"`
}

// GETListsOverviewFormatFormatEnum
type GETListsOverviewFormatFormatEnum string

const (
	GETListsOverviewFormatFormatEnumJSON  GETListsOverviewFormatFormatEnum = "json"
	GETListsOverviewFormatFormatEnumJsonp GETListsOverviewFormatFormatEnum = "jsonp"
)

func (e *GETListsOverviewFormatFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "jsonp":
		*e = GETListsOverviewFormatFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListsOverviewFormatFormatEnum: %s", s)
	}
}

type GETListsOverviewFormatRequest struct {
	APIKey *string                          `queryParam:"style=form,explode=true,name=api-key"`
	Format GETListsOverviewFormatFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// The best-seller list publication date. YYYY-MM-DD
	//
	// You do not have to specify the exact date the list was published. The service will search forward (into the future) for the closest publication date to the date you specify. For example, a request for lists/overview/2013-05-22 will retrieve the list that was published on 05-26.
	//
	// If you do not include a published_date, the current week's best-sellers lists will be returned.
	PublishedDate *string `queryParam:"style=form,explode=true,name=published_date"`
}

type GETListsOverviewFormat200ApplicationJSONResultsListsBooks struct {
	AgeGroup        *string `json:"age_group,omitempty"`
	Author          *string `json:"author,omitempty"`
	Contributor     *string `json:"contributor,omitempty"`
	ContributorNote *string `json:"contributor_note,omitempty"`
	CreatedDate     *string `json:"created_date,omitempty"`
	Description     *string `json:"description,omitempty"`
	Price           *int64  `json:"price,omitempty"`
	PrimaryIsbn10   *string `json:"primary_isbn10,omitempty"`
	PrimaryIsbn13   *string `json:"primary_isbn13,omitempty"`
	Publisher       *string `json:"publisher,omitempty"`
	Rank            *int64  `json:"rank,omitempty"`
	Title           *string `json:"title,omitempty"`
	UpdatedDate     *string `json:"updated_date,omitempty"`
}

type GETListsOverviewFormat200ApplicationJSONResultsLists struct {
	Books       []GETListsOverviewFormat200ApplicationJSONResultsListsBooks `json:"books,omitempty"`
	DisplayName *string                                                     `json:"display_name,omitempty"`
	ListID      *int64                                                      `json:"list_id,omitempty"`
	ListImage   *string                                                     `json:"list_image,omitempty"`
	ListName    *string                                                     `json:"list_name,omitempty"`
	Updated     *string                                                     `json:"updated,omitempty"`
}

type GETListsOverviewFormat200ApplicationJSONResults struct {
	BestsellersDate *string                                                `json:"bestsellers_date,omitempty"`
	Lists           []GETListsOverviewFormat200ApplicationJSONResultsLists `json:"lists,omitempty"`
	PublishedDate   *string                                                `json:"published_date,omitempty"`
}

type GETListsOverviewFormat200ApplicationJSON struct {
	Copyright  *string                                          `json:"copyright,omitempty"`
	NumResults *int64                                           `json:"num_results,omitempty"`
	Results    *GETListsOverviewFormat200ApplicationJSONResults `json:"results,omitempty"`
	Status     *string                                          `json:"status,omitempty"`
}

type GETListsOverviewFormatResponse struct {
	ContentType                                    string
	GETListsOverviewFormat200ApplicationJSONObject *GETListsOverviewFormat200ApplicationJSON
	StatusCode                                     int
	RawResponse                                    *http.Response
}
