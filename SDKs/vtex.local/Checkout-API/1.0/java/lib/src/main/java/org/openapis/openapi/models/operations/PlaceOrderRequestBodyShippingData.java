/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PlaceOrderRequestBodyShippingData - Shipping information.
 */
public class PlaceOrderRequestBodyShippingData {
    /**
     * Shipping address.
     * 
     * For customers already in your data base, it is enough to send this object only with an `addressId`, which you may obtain from a [Cart simulation request](https://developers.vtex.com/vtex-rest-api/reference/shopping-cart#cartsimulation), for example.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public PlaceOrderRequestBodyShippingDataAddress address;

    public PlaceOrderRequestBodyShippingData withAddress(PlaceOrderRequestBodyShippingDataAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Array of objects containing logistics information of each item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logisticsInfo")
    public PlaceOrderRequestBodyShippingDataLogisticsInfo[] logisticsInfo;

    public PlaceOrderRequestBodyShippingData withLogisticsInfo(PlaceOrderRequestBodyShippingDataLogisticsInfo[] logisticsInfo) {
        this.logisticsInfo = logisticsInfo;
        return this;
    }
    
    /**
     * Indicate whether this object's information is up to date according to the order's items. An order can not be placed if `"outdated"`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateStatus")
    public String updateStatus;

    public PlaceOrderRequestBodyShippingData withUpdateStatus(String updateStatus) {
        this.updateStatus = updateStatus;
        return this;
    }
    
    public PlaceOrderRequestBodyShippingData(){}
}
