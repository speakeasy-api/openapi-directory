/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Competition {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AreaId")
    public Long areaId;

    public Competition withAreaId(Long areaId) {
        this.areaId = areaId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AreaName")
    public String areaName;

    public Competition withAreaName(String areaName) {
        this.areaName = areaName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompetitionId")
    public Long competitionId;

    public Competition withCompetitionId(Long competitionId) {
        this.competitionId = competitionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Format")
    public String format;

    public Competition withFormat(String format) {
        this.format = format;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Gender")
    public String gender;

    public Competition withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Competition withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerStatsCoverage")
    public Boolean playerStatsCoverage;

    public Competition withPlayerStatsCoverage(Boolean playerStatsCoverage) {
        this.playerStatsCoverage = playerStatsCoverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Seasons")
    public Season[] seasons;

    public Competition withSeasons(Season[] seasons) {
        this.seasons = seasons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public String type;

    public Competition withType(String type) {
        this.type = type;
        return this;
    }
    
    public Competition(){}
}
