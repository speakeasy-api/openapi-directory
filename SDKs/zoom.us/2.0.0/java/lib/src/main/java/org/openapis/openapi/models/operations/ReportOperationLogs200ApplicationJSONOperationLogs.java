/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ReportOperationLogs200ApplicationJSONOperationLogs {
    /**
     * Action
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String action;
    public ReportOperationLogs200ApplicationJSONOperationLogs withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * Category type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("category_type")
    public String categoryType;
    public ReportOperationLogs200ApplicationJSONOperationLogs withCategoryType(String categoryType) {
        this.categoryType = categoryType;
        return this;
    }
    
    /**
     * Operation detail
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operation_detail")
    public String operationDetail;
    public ReportOperationLogs200ApplicationJSONOperationLogs withOperationDetail(String operationDetail) {
        this.operationDetail = operationDetail;
        return this;
    }
    
    /**
     * The user who performed the operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public String operator;
    public ReportOperationLogs200ApplicationJSONOperationLogs withOperator(String operator) {
        this.operator = operator;
        return this;
    }
    
    /**
     * The time at which the operation was performed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("time")
    public OffsetDateTime time;
    public ReportOperationLogs200ApplicationJSONOperationLogs withTime(OffsetDateTime time) {
        this.time = time;
        return this;
    }
    
}
