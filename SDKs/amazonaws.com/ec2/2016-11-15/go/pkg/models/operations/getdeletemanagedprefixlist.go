// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteManagedPrefixListActionEnum
type GETDeleteManagedPrefixListActionEnum string

const (
	GETDeleteManagedPrefixListActionEnumDeleteManagedPrefixList GETDeleteManagedPrefixListActionEnum = "DeleteManagedPrefixList"
)

func (e GETDeleteManagedPrefixListActionEnum) ToPointer() *GETDeleteManagedPrefixListActionEnum {
	return &e
}

func (e *GETDeleteManagedPrefixListActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteManagedPrefixList":
		*e = GETDeleteManagedPrefixListActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteManagedPrefixListActionEnum: %v", v)
	}
}

// GETDeleteManagedPrefixListVersionEnum
type GETDeleteManagedPrefixListVersionEnum string

const (
	GETDeleteManagedPrefixListVersionEnumTwoThousandAndSixteen1115 GETDeleteManagedPrefixListVersionEnum = "2016-11-15"
)

func (e GETDeleteManagedPrefixListVersionEnum) ToPointer() *GETDeleteManagedPrefixListVersionEnum {
	return &e
}

func (e *GETDeleteManagedPrefixListVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteManagedPrefixListVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteManagedPrefixListVersionEnum: %v", v)
	}
}

type GETDeleteManagedPrefixListRequest struct {
	Action GETDeleteManagedPrefixListActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the prefix list.
	PrefixListID      string                                `queryParam:"style=form,explode=true,name=PrefixListId"`
	Version           GETDeleteManagedPrefixListVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteManagedPrefixListResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
