"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applicationcodeconfigurationupdate as shared_applicationcodeconfigurationupdate
from ..shared import applicationsnapshotconfigurationupdate as shared_applicationsnapshotconfigurationupdate
from ..shared import environmentpropertyupdates as shared_environmentpropertyupdates
from ..shared import flinkapplicationconfigurationupdate as shared_flinkapplicationconfigurationupdate
from ..shared import sqlapplicationconfigurationupdate as shared_sqlapplicationconfigurationupdate
from ..shared import vpcconfigurationupdate as shared_vpcconfigurationupdate
from ..shared import zeppelinapplicationconfigurationupdate as shared_zeppelinapplicationconfigurationupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApplicationConfigurationUpdate:
    r"""Describes updates to an application's configuration."""
    
    application_code_configuration_update: Optional[shared_applicationcodeconfigurationupdate.ApplicationCodeConfigurationUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApplicationCodeConfigurationUpdate'), 'exclude': lambda f: f is None }})  
    application_snapshot_configuration_update: Optional[shared_applicationsnapshotconfigurationupdate.ApplicationSnapshotConfigurationUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ApplicationSnapshotConfigurationUpdate'), 'exclude': lambda f: f is None }})  
    environment_property_updates: Optional[shared_environmentpropertyupdates.EnvironmentPropertyUpdates] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnvironmentPropertyUpdates'), 'exclude': lambda f: f is None }})  
    flink_application_configuration_update: Optional[shared_flinkapplicationconfigurationupdate.FlinkApplicationConfigurationUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FlinkApplicationConfigurationUpdate'), 'exclude': lambda f: f is None }})  
    sql_application_configuration_update: Optional[shared_sqlapplicationconfigurationupdate.SQLApplicationConfigurationUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqlApplicationConfigurationUpdate'), 'exclude': lambda f: f is None }})  
    vpc_configuration_updates: Optional[list[shared_vpcconfigurationupdate.VpcConfigurationUpdate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcConfigurationUpdates'), 'exclude': lambda f: f is None }})  
    zeppelin_application_configuration_update: Optional[shared_zeppelinapplicationconfigurationupdate.ZeppelinApplicationConfigurationUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ZeppelinApplicationConfigurationUpdate'), 'exclude': lambda f: f is None }})  
    