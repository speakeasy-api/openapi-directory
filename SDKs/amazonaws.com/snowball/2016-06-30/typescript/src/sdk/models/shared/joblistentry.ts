/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { JobStateEnum } from "./jobstateenum";
import { JobTypeEnum } from "./jobtypeenum";
import { SnowballTypeEnum } from "./snowballtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Each <code>JobListEntry</code> object contains a job's state, a job's ID, and a value that indicates whether the job is a job part, in the case of an export job.
 */
export class JobListEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsMaster" })
  isMaster?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "JobId" })
  jobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobState" })
  jobState?: JobStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "JobType" })
  jobType?: JobTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SnowballType" })
  snowballType?: SnowballTypeEnum;
}
