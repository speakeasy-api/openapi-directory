/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetOfferingsOfferingIdAnalyticsSubmissionsUserEmailAssignmentsAssessmentIdRequest extends SpeakeasyBase {
  /**
   * assessment's id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=assessmentId",
  })
  assessmentId: string;

  /**
   * offering's id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=offeringId",
  })
  offeringId: string;

  /**
   * user's email
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userEmail",
  })
  userEmail: string;
}

export class GetOfferingsOfferingIdAnalyticsSubmissionsUserEmailAssignmentsAssessmentIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * No authorization token was found.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Responds with the learner's assessment submission and any marks for the submission.
   */
  @SpeakeasyMetadata({ elemType: shared.SubmissionMarkResponse })
  submissionMarkResponses?: shared.SubmissionMarkResponse[];
}
