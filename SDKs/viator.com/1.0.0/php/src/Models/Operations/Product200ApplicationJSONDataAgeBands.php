<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class Product200ApplicationJSONDataAgeBands
{
    /**
     * **indicator**: `true` if *this* age band describes adults (not children)
     * 
     * @var ?bool $adult
     */
	#[\JMS\Serializer\Annotation\SerializedName('adult')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $adult = null;
    
    /**
     * **numeric lower age limit** of the age range defined by *this* age band
     * 
     * @var ?int $ageFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageFrom')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ageFrom = null;
    
    /**
     * **numeric upper age limit** of the age range included in *this* age band
     * 
     * @var ?int $ageTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageTo')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $ageTo = null;
    
    /**
     * **unique numeric identifier** for the age band
     * 
     * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
     * 
     * 
     * @var ?int $bandId
     */
	#[\JMS\Serializer\Annotation\SerializedName('bandId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bandId = null;
    
    /**
     * **number** of participants in *this* age band required to book the product
     * 
     * @var ?int $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $count = null;
    
    /**
     * **natural-language description** (singular) of *this* age band
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * **natural-language description** (plural) of *this* age band
     * 
     * @var ?string $pluralDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('pluralDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pluralDescription = null;
    
    /**
     * **sort order** for *this* age band object
     * 
     * @var ?int $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortOrder')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sortOrder = null;
    
    /**
     * **indicator**: `true` if members of this age band are considered to be adults
     * 
     * @var ?bool $treatAsAdult
     */
	#[\JMS\Serializer\Annotation\SerializedName('treatAsAdult')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $treatAsAdult = null;
    
	public function __construct()
	{
		$this->adult = null;
		$this->ageFrom = null;
		$this->ageTo = null;
		$this->bandId = null;
		$this->count = null;
		$this->description = null;
		$this->pluralDescription = null;
		$this->sortOrder = null;
		$this->treatAsAdult = null;
	}
}
