/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BankAccountInfo {
    /**
     * The bank account number (without separators).
     * 
     *  When this is provided, the `branchCode` is also required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public BankAccountInfo withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The type of bank account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountType")
    public String accountType;
    public BankAccountInfo withAccountType(String accountType) {
        this.accountType = accountType;
        return this;
    }
    
    /**
     * The bank's BIC or SWIFT code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankBicSwift")
    public String bankBicSwift;
    public BankAccountInfo withBankBicSwift(String bankBicSwift) {
        this.bankBicSwift = bankBicSwift;
        return this;
    }
    
    /**
     * The city where the bank is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCity")
    public String bankCity;
    public BankAccountInfo withBankCity(String bankCity) {
        this.bankCity = bankCity;
        return this;
    }
    
    /**
     * The bank code of the banking institution with which the bank account is registered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCode")
    public String bankCode;
    public BankAccountInfo withBankCode(String bankCode) {
        this.bankCode = bankCode;
        return this;
    }
    
    /**
     * The name of the banking institution where the bank account is held.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankName")
    public String bankName;
    public BankAccountInfo withBankName(String bankName) {
        this.bankName = bankName;
        return this;
    }
    
    /**
     * The branch code of the branch under which the bank account is registered.
     * 
     * Required when you provide an `accountNumber`.
     * 
     *  In the following countries, this value corresponds to:
     * 
     * 
     * * United States: routing number
     * * United Kingdom: sort code
     * * Germany: Bankleitzahl
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branchCode")
    public String branchCode;
    public BankAccountInfo withBranchCode(String branchCode) {
        this.branchCode = branchCode;
        return this;
    }
    
    /**
     * The check code of the bank account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checkCode")
    public String checkCode;
    public BankAccountInfo withCheckCode(String checkCode) {
        this.checkCode = checkCode;
        return this;
    }
    
    /**
     * The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the bank account is registered. For example, **NL**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countryCode")
    public String countryCode;
    public BankAccountInfo withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * The account's three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes). For example, **EUR**.
     */
    @JsonProperty("currencyCode")
    public String currencyCode;
    public BankAccountInfo withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * The international bank account number as defined in the [ISO-13616](https://www.iso.org/standard/81090.html) standard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;
    public BankAccountInfo withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
}
