/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AcmeTxtRecordInput } from "./acmetxtrecord";
import { Expose, Type } from "class-transformer";

/**
 * The request message for the RotateChallenges RPC. Requires an access token, a root domain, and either records_to_add or records_to_remove to be populated. Records may be set for multiple subdomains at once to support SAN requests for multiple subdomains in a single domain. By default, ACME TXT record challenges that are older than 30 days will be removed. Set `keep_expired_records` to false if this behavior is undesired. There is a record maximum of 100 records per domain including expired records. Any request sent that would exceed this maximum will result in a FAILED_PRECONDITION error. NEXT ID: 6
 */
export class RotateChallengesRequestInput extends SpeakeasyBase {
  /**
   * Required. ACME DNS access token. This is a base64 token secret that is procured from the Google Domains website. It authorizes ACME TXT record updates for a domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessToken" })
  accessToken?: string;

  /**
   * Keep records older than 30 days that were used for previous requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keepExpiredRecords" })
  keepExpiredRecords?: boolean;

  /**
   * ACME TXT record challenges to add. Supports multiple challenges on the same FQDN.
   */
  @SpeakeasyMetadata({ elemType: AcmeTxtRecordInput })
  @Expose({ name: "recordsToAdd" })
  @Type(() => AcmeTxtRecordInput)
  recordsToAdd?: AcmeTxtRecordInput[];

  /**
   * ACME TXT record challenges to remove.
   */
  @SpeakeasyMetadata({ elemType: AcmeTxtRecordInput })
  @Expose({ name: "recordsToRemove" })
  @Type(() => AcmeTxtRecordInput)
  recordsToRemove?: AcmeTxtRecordInput[];
}
