/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedRIR } from "./nestedrir";
import { Expose, Transform, Type } from "class-transformer";

export enum AggregateFamilyEnum {
  Four = "4",
  Six = "6",
}

export class Aggregate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "date_added" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateAdded?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "family" })
  family?: AggregateFamilyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rir" })
  @Type(() => NestedRIR)
  rir: NestedRIR;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];
}
