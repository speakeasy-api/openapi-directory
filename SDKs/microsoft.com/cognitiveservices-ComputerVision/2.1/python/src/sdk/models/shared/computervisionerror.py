"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ComputerVisionErrorCodeEnum(str, Enum):
    r"""The error code."""
    INVALID_IMAGE_FORMAT = 'InvalidImageFormat'
    UNSUPPORTED_MEDIA_TYPE = 'UnsupportedMediaType'
    INVALID_IMAGE_URL = 'InvalidImageUrl'
    NOT_SUPPORTED_FEATURE = 'NotSupportedFeature'
    NOT_SUPPORTED_IMAGE = 'NotSupportedImage'
    TIMEOUT = 'Timeout'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    INVALID_IMAGE_SIZE = 'InvalidImageSize'
    BAD_ARGUMENT = 'BadArgument'
    DETECT_FACE_ERROR = 'DetectFaceError'
    NOT_SUPPORTED_LANGUAGE = 'NotSupportedLanguage'
    INVALID_THUMBNAIL_SIZE = 'InvalidThumbnailSize'
    INVALID_DETAILS = 'InvalidDetails'
    INVALID_MODEL = 'InvalidModel'
    CANCELLED_REQUEST = 'CancelledRequest'
    NOT_SUPPORTED_VISUAL_FEATURE = 'NotSupportedVisualFeature'
    FAILED_TO_PROCESS = 'FailedToProcess'
    UNSPECIFIED = 'Unspecified'
    STORAGE_EXCEPTION = 'StorageException'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ComputerVisionError:
    r"""Details about the API request error."""
    
    code: ComputerVisionErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""The error code."""  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})
    r"""A message explaining the error reported by the service."""  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId'), 'exclude': lambda f: f is None }})
    r"""A unique request identifier."""  
    