// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum - The tunnel protocol.
type CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum string

const (
	CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnumGre CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum = "gre"
)

func (e *CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "gre":
		*e = CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum: %s", s)
	}
}

// CreateTransitGatewayConnectResultTransitGatewayConnectOptions - The Connect attachment options.
type CreateTransitGatewayConnectResultTransitGatewayConnectOptions struct {
	Protocol *CreateTransitGatewayConnectResultTransitGatewayConnectOptionsProtocolEnum
}

// CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum - The state of the attachment.
type CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum string

const (
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumInitiating        CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "initiating"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumInitiatingRequest CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "initiatingRequest"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumPendingAcceptance CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "pendingAcceptance"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumRollingBack       CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "rollingBack"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumPending           CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "pending"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumAvailable         CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "available"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumModifying         CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "modifying"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumDeleting          CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "deleting"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumDeleted           CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "deleted"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumFailed            CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "failed"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumRejected          CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "rejected"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumRejecting         CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "rejecting"
	CreateTransitGatewayConnectResultTransitGatewayConnectStateEnumFailing           CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum = "failing"
)

func (e *CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initiating":
		fallthrough
	case "initiatingRequest":
		fallthrough
	case "pendingAcceptance":
		fallthrough
	case "rollingBack":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "rejecting":
		fallthrough
	case "failing":
		*e = CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum: %s", s)
	}
}

// CreateTransitGatewayConnectResultTransitGatewayConnectTags - Describes a tag.
type CreateTransitGatewayConnectResultTransitGatewayConnectTags struct {
	Key   *string
	Value *string
}

// CreateTransitGatewayConnectResultTransitGatewayConnect - Information about the Connect attachment.
type CreateTransitGatewayConnectResultTransitGatewayConnect struct {
	CreationTime                        *time.Time
	Options                             *CreateTransitGatewayConnectResultTransitGatewayConnectOptions
	State                               *CreateTransitGatewayConnectResultTransitGatewayConnectStateEnum
	Tags                                []CreateTransitGatewayConnectResultTransitGatewayConnectTags
	TransitGatewayAttachmentID          *string
	TransitGatewayID                    *string
	TransportTransitGatewayAttachmentID *string
}

// CreateTransitGatewayConnectResult - Success
type CreateTransitGatewayConnectResult struct {
	TransitGatewayConnect *CreateTransitGatewayConnectResultTransitGatewayConnect
}
