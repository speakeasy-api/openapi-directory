// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeConstraintXAmzTargetEnum
type DescribeConstraintXAmzTargetEnum string

const (
	DescribeConstraintXAmzTargetEnumAws242ServiceCatalogServiceDescribeConstraint DescribeConstraintXAmzTargetEnum = "AWS242ServiceCatalogService.DescribeConstraint"
)

func (e *DescribeConstraintXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.DescribeConstraint":
		*e = DescribeConstraintXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConstraintXAmzTargetEnum: %s", s)
	}
}

type DescribeConstraintRequest struct {
	DescribeConstraintInput shared.DescribeConstraintInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DescribeConstraintXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeConstraintResponse struct {
	ContentType string
	// Success
	DescribeConstraintOutput *shared.DescribeConstraintOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
