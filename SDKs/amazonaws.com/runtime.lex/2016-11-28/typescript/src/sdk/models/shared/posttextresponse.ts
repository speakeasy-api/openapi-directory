/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActiveContext } from "./activecontext";
import { DialogStateEnum } from "./dialogstateenum";
import { IntentConfidence } from "./intentconfidence";
import { MessageFormatTypeEnum } from "./messageformattypeenum";
import { PredictedIntent } from "./predictedintent";
import { ResponseCard } from "./responsecard";
import { SentimentResponse } from "./sentimentresponse";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class PostTextResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ActiveContext })
  @Expose({ name: "activeContexts" })
  @Type(() => ActiveContext)
  activeContexts?: ActiveContext[];

  @SpeakeasyMetadata({ elemType: PredictedIntent })
  @Expose({ name: "alternativeIntents" })
  @Type(() => PredictedIntent)
  alternativeIntents?: PredictedIntent[];

  @SpeakeasyMetadata()
  @Expose({ name: "botVersion" })
  botVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dialogState" })
  dialogState?: DialogStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "intentName" })
  intentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "messageFormat" })
  messageFormat?: MessageFormatTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "nluIntentConfidence" })
  @Type(() => IntentConfidence)
  nluIntentConfidence?: IntentConfidence;

  @SpeakeasyMetadata()
  @Expose({ name: "responseCard" })
  @Type(() => ResponseCard)
  responseCard?: ResponseCard;

  @SpeakeasyMetadata()
  @Expose({ name: "sentimentResponse" })
  @Type(() => SentimentResponse)
  sentimentResponse?: SentimentResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionAttributes" })
  sessionAttributes?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slotToElicit" })
  slotToElicit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slots" })
  slots?: Record<string, string>;
}
