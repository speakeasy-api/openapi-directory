/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2KAnonymityEquivalenceClass } from "./googleprivacydlpv2kanonymityequivalenceclass";
import { Expose, Type } from "class-transformer";

/**
 * Histogram of k-anonymity equivalence classes.
 */
export class GooglePrivacyDlpV2KAnonymityHistogramBucket extends SpeakeasyBase {
  /**
   * Total number of equivalence classes in this bucket.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bucketSize" })
  bucketSize?: string;

  /**
   * Total number of distinct equivalence classes in this bucket.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bucketValueCount" })
  bucketValueCount?: string;

  /**
   * Sample of equivalence classes in this bucket. The total number of classes returned per bucket is capped at 20.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2KAnonymityEquivalenceClass })
  @Expose({ name: "bucketValues" })
  @Type(() => GooglePrivacyDlpV2KAnonymityEquivalenceClass)
  bucketValues?: GooglePrivacyDlpV2KAnonymityEquivalenceClass[];

  /**
   * Lower bound on the size of the equivalence classes in this bucket.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "equivalenceClassSizeLowerBound" })
  equivalenceClassSizeLowerBound?: string;

  /**
   * Upper bound on the size of the equivalence classes in this bucket.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "equivalenceClassSizeUpperBound" })
  equivalenceClassSizeUpperBound?: string;
}
