/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CurrencyEnum } from "./currencyenum";
import { Department } from "./department";
import { JobStatusEnum } from "./jobstatusenum";
import { Expose, Transform, Type } from "class-transformer";

export class JobBlocks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

/**
 * Details of the branch for which the job is created.
 */
export class JobBranch extends SpeakeasyBase {
  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the branch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export enum JobEmploymentTermsEnum {
  FullTime = "full-time",
  PartTime = "part-time",
  Internship = "internship",
  Contractor = "contractor",
  Employee = "employee",
  Freelance = "freelance",
  Temp = "temp",
  Seasonal = "seasonal",
  Volunteer = "volunteer",
  Other = "other",
}

export class JobHiringManagers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class JobSalary extends SpeakeasyBase {
  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Maximum salary payable for the job role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max" })
  max?: number;

  /**
   * Minimum salary payable for the job role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min?: number;
}

/**
 * The visibility of the job
 */
export enum JobVisibilityEnum {
  Public = "public",
  Internal = "internal",
}

export class Job extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Address })
  @Expose({ name: "addresses" })
  @Type(() => Address)
  addresses?: Address[];

  /**
   * Specifies whether an employee of the organization can apply for the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "available_to_employees" })
  availableToEmployees?: boolean;

  @SpeakeasyMetadata({ elemType: JobBlocks })
  @Expose({ name: "blocks" })
  @Type(() => JobBlocks)
  blocks?: JobBlocks[];

  /**
   * Details of the branch for which the job is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "branch" })
  @Type(() => JobBranch)
  branch?: JobBranch;

  @SpeakeasyMetadata()
  @Expose({ name: "closing" })
  closing?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "closing_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  closingDate?: Date;

  /**
   * The closing section of the job description in HTML format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closing_html" })
  closingHtml?: string;

  /**
   * The code of the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "confidential" })
  confidential?: boolean;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "department" })
  @Type(() => Department)
  department?: Department;

  /**
   * A description of the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The job description in HTML format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description_html" })
  descriptionHtml?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "employment_terms" })
  employmentTerms?: JobEmploymentTermsEnum;

  /**
   * Level of experience required for the job role.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "experience" })
  experience?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "followers" })
  followers?: string[];

  @SpeakeasyMetadata({ elemType: JobHiringManagers })
  @Expose({ name: "hiring_managers" })
  @Type(() => JobHiringManagers)
  hiringManagers?: JobHiringManagers[];

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * URL of the job portal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_portal_url" })
  jobPortalUrl?: string;

  /**
   * language code according to ISO 639-1. For the United States - EN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner_id" })
  ownerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "published_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "record_url" })
  recordUrl?: string;

  /**
   * The recruiter is generally someone who is tasked to help the hiring manager find and screen qualified applicant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recruiters" })
  recruiters?: string[];

  /**
   * Specifies whether the posting is for a remote job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remote" })
  remote?: boolean;

  /**
   * A job's Requisition ID (Req ID) allows your organization to identify and track a job based on alphanumeric naming conventions unique to your company's internal processes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requisition_id" })
  requisitionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "salary" })
  @Type(() => JobSalary)
  salary?: JobSalary;

  /**
   * Sequence in relation to other jobs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sequence" })
  sequence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;

  /**
   * The status of the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: JobStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * The job title of the person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;

  /**
   * URL of the job description
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The visibility of the job
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: JobVisibilityEnum;
}
