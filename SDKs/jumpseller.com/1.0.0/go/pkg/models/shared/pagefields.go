// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PageFieldsImage - Image of the Page
type PageFieldsImage struct {
	ID  *int64  `json:"id,omitempty"`
	URL *string `json:"url,omitempty"`
}

// PageFieldsStatusEnum - Status of the Page
type PageFieldsStatusEnum string

const (
	PageFieldsStatusEnumPublic PageFieldsStatusEnum = "public"
	PageFieldsStatusEnumDraft  PageFieldsStatusEnum = "draft"
	PageFieldsStatusEnumHidden PageFieldsStatusEnum = "hidden"
)

func (e *PageFieldsStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "public":
		fallthrough
	case "draft":
		fallthrough
	case "hidden":
		*e = PageFieldsStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PageFieldsStatusEnum: %s", s)
	}
}

type PageFields struct {
	// Body of the Page
	Body *string `json:"body,omitempty"`
	// Page categories to which the Page belongs to
	Categories []PageCategory `json:"categories,omitempty"`
	// Id of the Page
	ID *int64 `json:"id,omitempty"`
	// Image of the Page
	Image *PageFieldsImage `json:"image,omitempty"`
	// True if it is a legal page
	Legal *bool `json:"legal,omitempty"`
	// Meta description of the Page
	MetaDescription *string `json:"meta_description,omitempty"`
	// Meta title of the Page
	PageTitle *string `json:"page_title,omitempty"`
	// URL of the Page
	Permalink *string `json:"permalink,omitempty"`
	// Status of the Page
	Status *PageFieldsStatusEnum `json:"status,omitempty"`
	// Template of the Page
	Template *PageTemplate `json:"template,omitempty"`
	// Title of the Page
	Title *string `json:"title,omitempty"`
}
