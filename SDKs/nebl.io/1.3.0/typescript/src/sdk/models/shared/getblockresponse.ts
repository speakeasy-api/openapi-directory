/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Object containing all information on a blockchain block
 */
export class GetBlockResponse extends SpeakeasyBase {
  /**
   * Block bits
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bits" })
  bits?: string;

  /**
   * Number of confirmations block has
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmations" })
  confirmations?: number;

  /**
   * Block difficulty
   */
  @SpeakeasyMetadata()
  @Expose({ name: "difficulty" })
  difficulty?: number;

  /**
   * Block hash
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hash" })
  hash?: string;

  /**
   * Block height
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: number;

  /**
   * Merkleroot of block
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merkleroot" })
  merkleroot?: string;

  /**
   * Hash of the next block on the chain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextblockhash" })
  nextblockhash?: string;

  /**
   * Block nonce
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonce" })
  nonce?: number;

  /**
   * Hash of the previous block on the chain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previousblockhash" })
  previousblockhash?: string;

  /**
   * Number of NEBL awarded in this block
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reward" })
  reward?: number;

  /**
   * Block size in bytes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  /**
   * Block time relative to epoch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: number;

  /**
   * Array of tx ids in the block
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tx" })
  tx?: string[];

  /**
   * Block version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
