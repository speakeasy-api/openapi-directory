// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETIdentityNotificationAttributesActionEnum
type GETGETIdentityNotificationAttributesActionEnum string

const (
	GETGETIdentityNotificationAttributesActionEnumGetIdentityNotificationAttributes GETGETIdentityNotificationAttributesActionEnum = "GetIdentityNotificationAttributes"
)

func (e GETGETIdentityNotificationAttributesActionEnum) ToPointer() *GETGETIdentityNotificationAttributesActionEnum {
	return &e
}

func (e *GETGETIdentityNotificationAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetIdentityNotificationAttributes":
		*e = GETGETIdentityNotificationAttributesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETIdentityNotificationAttributesActionEnum: %v", v)
	}
}

// GETGETIdentityNotificationAttributesVersionEnum
type GETGETIdentityNotificationAttributesVersionEnum string

const (
	GETGETIdentityNotificationAttributesVersionEnumTwoThousandAndTen1201 GETGETIdentityNotificationAttributesVersionEnum = "2010-12-01"
)

func (e GETGETIdentityNotificationAttributesVersionEnum) ToPointer() *GETGETIdentityNotificationAttributesVersionEnum {
	return &e
}

func (e *GETGETIdentityNotificationAttributesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETGETIdentityNotificationAttributesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETIdentityNotificationAttributesVersionEnum: %v", v)
	}
}

type GETGETIdentityNotificationAttributesRequest struct {
	Action GETGETIdentityNotificationAttributesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A list of one or more identities. You can specify an identity by using its name or by using its Amazon Resource Name (ARN). Examples: <code>user@example.com</code>, <code>example.com</code>, <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.
	Identities        []string                                        `queryParam:"style=form,explode=true,name=Identities"`
	Version           GETGETIdentityNotificationAttributesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETIdentityNotificationAttributesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
