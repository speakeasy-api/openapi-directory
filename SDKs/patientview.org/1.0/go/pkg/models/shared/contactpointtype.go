// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactPointTypeValueEnum string

const (
	ContactPointTypeValueEnumUnitWebAddress     ContactPointTypeValueEnum = "UNIT_WEB_ADDRESS"
	ContactPointTypeValueEnumTrustWebAddress    ContactPointTypeValueEnum = "TRUST_WEB_ADDRESS"
	ContactPointTypeValueEnumPvAdminName        ContactPointTypeValueEnum = "PV_ADMIN_NAME"
	ContactPointTypeValueEnumPvAdminPhone       ContactPointTypeValueEnum = "PV_ADMIN_PHONE"
	ContactPointTypeValueEnumPvAdminEmail       ContactPointTypeValueEnum = "PV_ADMIN_EMAIL"
	ContactPointTypeValueEnumUnitEnquiriesPhone ContactPointTypeValueEnum = "UNIT_ENQUIRIES_PHONE"
	ContactPointTypeValueEnumUnitEnquiriesEmail ContactPointTypeValueEnum = "UNIT_ENQUIRIES_EMAIL"
	ContactPointTypeValueEnumAppointmentPhone   ContactPointTypeValueEnum = "APPOINTMENT_PHONE"
	ContactPointTypeValueEnumAppointmentEmail   ContactPointTypeValueEnum = "APPOINTMENT_EMAIL"
	ContactPointTypeValueEnumOutOfHoursInfo     ContactPointTypeValueEnum = "OUT_OF_HOURS_INFO"
)

func (e *ContactPointTypeValueEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNIT_WEB_ADDRESS":
		fallthrough
	case "TRUST_WEB_ADDRESS":
		fallthrough
	case "PV_ADMIN_NAME":
		fallthrough
	case "PV_ADMIN_PHONE":
		fallthrough
	case "PV_ADMIN_EMAIL":
		fallthrough
	case "UNIT_ENQUIRIES_PHONE":
		fallthrough
	case "UNIT_ENQUIRIES_EMAIL":
		fallthrough
	case "APPOINTMENT_PHONE":
		fallthrough
	case "APPOINTMENT_EMAIL":
		fallthrough
	case "OUT_OF_HOURS_INFO":
		*e = ContactPointTypeValueEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactPointTypeValueEnum: %s", s)
	}
}

type ContactPointType struct {
	Description *string                    `json:"description,omitempty"`
	ID          *int64                     `json:"id,omitempty"`
	LookupType  *LookupType                `json:"lookupType,omitempty"`
	Value       *ContactPointTypeValueEnum `json:"value,omitempty"`
}
