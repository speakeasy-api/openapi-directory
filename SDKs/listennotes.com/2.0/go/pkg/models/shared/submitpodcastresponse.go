// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubmitPodcastResponseStatusEnum - The status of this submission.
type SubmitPodcastResponseStatusEnum string

const (
	SubmitPodcastResponseStatusEnumFound    SubmitPodcastResponseStatusEnum = "found"
	SubmitPodcastResponseStatusEnumInReview SubmitPodcastResponseStatusEnum = "in review"
	SubmitPodcastResponseStatusEnumRejected SubmitPodcastResponseStatusEnum = "rejected"
)

func (e *SubmitPodcastResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "found":
		fallthrough
	case "in review":
		fallthrough
	case "rejected":
		*e = SubmitPodcastResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitPodcastResponseStatusEnum: %s", s)
	}
}

// SubmitPodcastResponse - OK
type SubmitPodcastResponse struct {
	Podcast PodcastMinimum `json:"podcast"`
	// The status of this submission.
	Status SubmitPodcastResponseStatusEnum `json:"status"`
}
