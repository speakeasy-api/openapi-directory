<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination - BigQuery destination.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudAssetV1QueryAssetsOutputConfigBigQueryDestination
{
    /**
     * Required. The BigQuery dataset where the query results will be saved. It has the format of "projects/{projectId}/datasets/{datasetId}".
     * 
     * @var ?string $dataset
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataset')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataset = null;
    
    /**
     * Required. The BigQuery table where the query results will be saved. If this table does not exist, a new table with the given name will be created.
     * 
     * @var ?string $table
     */
	#[\JMS\Serializer\Annotation\SerializedName('table')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $table = null;
    
    /**
     * Specifies the action that occurs if the destination table or partition already exists. The following values are supported: * WRITE_TRUNCATE: If the table or partition already exists, BigQuery overwrites the entire table or all the partitions data. * WRITE_APPEND: If the table or partition already exists, BigQuery appends the data to the table or the latest partition. * WRITE_EMPTY: If the table already exists and contains data, a 'duplicate' error is returned in the job result. The default value is WRITE_EMPTY.
     * 
     * @var ?string $writeDisposition
     */
	#[\JMS\Serializer\Annotation\SerializedName('writeDisposition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $writeDisposition = null;
    
	public function __construct()
	{
		$this->dataset = null;
		$this->table = null;
		$this->writeDisposition = null;
	}
}
