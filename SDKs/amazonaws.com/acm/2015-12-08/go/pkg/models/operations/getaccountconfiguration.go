// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAccountConfigurationXAmzTargetEnum
type GetAccountConfigurationXAmzTargetEnum string

const (
	GetAccountConfigurationXAmzTargetEnumCertificateManagerGetAccountConfiguration GetAccountConfigurationXAmzTargetEnum = "CertificateManager.GetAccountConfiguration"
)

func (e GetAccountConfigurationXAmzTargetEnum) ToPointer() *GetAccountConfigurationXAmzTargetEnum {
	return &e
}

func (e *GetAccountConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CertificateManager.GetAccountConfiguration":
		*e = GetAccountConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAccountConfigurationXAmzTargetEnum: %v", v)
	}
}

type GetAccountConfigurationRequest struct {
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetAccountConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAccountConfigurationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetAccountConfigurationResponse *shared.GetAccountConfigurationResponse
	StatusCode                      int
	RawResponse                     *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
