// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisassociateDiscoveredResourceXAmzTargetEnum
type DisassociateDiscoveredResourceXAmzTargetEnum string

const (
	DisassociateDiscoveredResourceXAmzTargetEnumAwsMigrationHubDisassociateDiscoveredResource DisassociateDiscoveredResourceXAmzTargetEnum = "AWSMigrationHub.DisassociateDiscoveredResource"
)

func (e DisassociateDiscoveredResourceXAmzTargetEnum) ToPointer() *DisassociateDiscoveredResourceXAmzTargetEnum {
	return &e
}

func (e *DisassociateDiscoveredResourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSMigrationHub.DisassociateDiscoveredResource":
		*e = DisassociateDiscoveredResourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateDiscoveredResourceXAmzTargetEnum: %v", v)
	}
}

type DisassociateDiscoveredResourceRequest struct {
	DisassociateDiscoveredResourceRequest shared.DisassociateDiscoveredResourceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            DisassociateDiscoveredResourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisassociateDiscoveredResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DisassociateDiscoveredResourceResult map[string]interface{}
	// DryRunOperation
	DryRunOperation interface{}
	// HomeRegionNotSetException
	HomeRegionNotSetException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedOperation
	UnauthorizedOperation interface{}
}
