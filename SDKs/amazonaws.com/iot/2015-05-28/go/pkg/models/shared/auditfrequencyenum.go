// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuditFrequencyEnum string

const (
	AuditFrequencyEnumDaily    AuditFrequencyEnum = "DAILY"
	AuditFrequencyEnumWeekly   AuditFrequencyEnum = "WEEKLY"
	AuditFrequencyEnumBiweekly AuditFrequencyEnum = "BIWEEKLY"
	AuditFrequencyEnumMonthly  AuditFrequencyEnum = "MONTHLY"
)

func (e AuditFrequencyEnum) ToPointer() *AuditFrequencyEnum {
	return &e
}

func (e *AuditFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DAILY":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "BIWEEKLY":
		fallthrough
	case "MONTHLY":
		*e = AuditFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditFrequencyEnum: %v", v)
	}
}
