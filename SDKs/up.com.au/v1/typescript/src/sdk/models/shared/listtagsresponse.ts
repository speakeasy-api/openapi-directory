/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TagResource } from "./tagresource";
import { Expose, Type } from "class-transformer";

export class ListTagsResponseLinks extends SpeakeasyBase {
  /**
   * The link to the next page in the results. If this value is `null`
   *
   * @remarks
   * there is no next page.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next: string;

  /**
   * The link to the previous page in the results. If this value is `null`
   *
   * @remarks
   * there is no previous page.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prev" })
  prev: string;
}

/**
 * Successful response to get all tags. This returns a paginated list of
 *
 * @remarks
 * tags, which can be scrolled by following the `prev` and `next` links if
 * present.
 *
 */
export class ListTagsResponse extends SpeakeasyBase {
  /**
   * The list of tags returned in this response.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: TagResource })
  @Expose({ name: "data" })
  @Type(() => TagResource)
  data: TagResource[];

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => ListTagsResponseLinks)
  links: ListTagsResponseLinks;
}
