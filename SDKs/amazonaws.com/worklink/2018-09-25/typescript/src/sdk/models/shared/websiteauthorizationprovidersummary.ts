/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthorizationProviderTypeEnum } from "./authorizationprovidertypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The summary of the website authorization provider.
 */
export class WebsiteAuthorizationProviderSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizationProviderId" })
  authorizationProviderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizationProviderType" })
  authorizationProviderType: AuthorizationProviderTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName?: string;
}
