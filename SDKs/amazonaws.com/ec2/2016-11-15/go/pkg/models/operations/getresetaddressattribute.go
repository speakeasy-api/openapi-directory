// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResetAddressAttributeActionEnum
type GETResetAddressAttributeActionEnum string

const (
	GETResetAddressAttributeActionEnumResetAddressAttribute GETResetAddressAttributeActionEnum = "ResetAddressAttribute"
)

func (e GETResetAddressAttributeActionEnum) ToPointer() *GETResetAddressAttributeActionEnum {
	return &e
}

func (e *GETResetAddressAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResetAddressAttribute":
		*e = GETResetAddressAttributeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetAddressAttributeActionEnum: %v", v)
	}
}

// GETResetAddressAttributeAttributeEnum - The attribute of the IP address.
type GETResetAddressAttributeAttributeEnum string

const (
	GETResetAddressAttributeAttributeEnumDomainName GETResetAddressAttributeAttributeEnum = "domain-name"
)

func (e GETResetAddressAttributeAttributeEnum) ToPointer() *GETResetAddressAttributeAttributeEnum {
	return &e
}

func (e *GETResetAddressAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "domain-name":
		*e = GETResetAddressAttributeAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetAddressAttributeAttributeEnum: %v", v)
	}
}

// GETResetAddressAttributeVersionEnum
type GETResetAddressAttributeVersionEnum string

const (
	GETResetAddressAttributeVersionEnumTwoThousandAndSixteen1115 GETResetAddressAttributeVersionEnum = "2016-11-15"
)

func (e GETResetAddressAttributeVersionEnum) ToPointer() *GETResetAddressAttributeVersionEnum {
	return &e
}

func (e *GETResetAddressAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETResetAddressAttributeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetAddressAttributeVersionEnum: %v", v)
	}
}

type GETResetAddressAttributeRequest struct {
	Action GETResetAddressAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// [EC2-VPC] The allocation ID.
	AllocationID string `queryParam:"style=form,explode=true,name=AllocationId"`
	// The attribute of the IP address.
	Attribute GETResetAddressAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun            *bool                               `queryParam:"style=form,explode=true,name=DryRun"`
	Version           GETResetAddressAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResetAddressAttributeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
