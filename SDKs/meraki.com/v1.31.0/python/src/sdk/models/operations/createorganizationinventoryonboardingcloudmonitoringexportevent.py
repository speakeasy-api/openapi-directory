"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequestBody:
    
    log_event: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logEvent') }})
    r"""The type of log event this is recording, e.g. download or opening a banner"""  
    timestamp: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp') }})
    r"""A JavaScript UTC datetime stamp for when the even occurred"""  
    request: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request'), 'exclude': lambda f: f is None }})
    r"""Used to describe if this event was the result of a redirect. E.g. a query param if an info banner is being used"""  
    target_os: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetOS'), 'exclude': lambda f: f is None }})
    r"""The name of the onboarding distro being downloaded"""  
    

@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequest:
    
    organization_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'organizationId', 'style': 'simple', 'explode': False }})  
    request_body: CreateOrganizationInventoryOnboardingCloudMonitoringExportEventRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class CreateOrganizationInventoryOnboardingCloudMonitoringExportEventResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_organization_inventory_onboarding_cloud_monitoring_export_event_202_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    