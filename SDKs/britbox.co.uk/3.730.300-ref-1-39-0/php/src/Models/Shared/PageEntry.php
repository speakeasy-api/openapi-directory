<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PageEntry - Represents an entry of a Page.
 * 
 * Defines what specific piece of content should be presented e.g. an Item or ItemList.
 * Also defines what visual template should be used to render that content.
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PageEntry
{
    /**
     * A map of custom fields defined by a curator for a page entry.
     * 
     * @var ?array<string, mixed> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('customFields')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
    /**
     * The unique identifier for a page entry.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The images for the page entry if any.
     * 
     * 
     * For example the images of an `ImageEntry`.
     * 
     * 
     * @var ?array<string, string> $images
     */
	#[\JMS\Serializer\Annotation\SerializedName('images')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $images = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('item')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ItemSummary')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ItemSummary $item = null;
    
    /**
     * A pageable list of items.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ItemList $list
     */
	#[\JMS\Serializer\Annotation\SerializedName('list')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ItemList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ItemList $list = null;
    
    /**
     * If 'type' is 'PeopleEntry' then this is the array of people to present.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Person> $people
     */
	#[\JMS\Serializer\Annotation\SerializedName('people')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Person>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $people = null;
    
    /**
     * Template type used to present the content of the PageEntry.
     * 
     * @var string $template
     */
	#[\JMS\Serializer\Annotation\SerializedName('template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $template;
    
    /**
     * If 'type' is 'TextEntry' then this is the text to be represented.
     * 
     * @var ?string $text
     */
	#[\JMS\Serializer\Annotation\SerializedName('text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $text = null;
    
    /**
     * The name of the Page Entry.
     * 
     * @var string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
    /**
     * The type of PageEntry. Used to help identify what type of content will be presented.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PageEntryTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PageEntryTypeEnum>')]
    public PageEntryTypeEnum $type;
    
	public function __construct()
	{
		$this->customFields = null;
		$this->id = "";
		$this->images = null;
		$this->item = null;
		$this->list = null;
		$this->people = null;
		$this->template = "";
		$this->text = null;
		$this->title = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\PageEntryTypeEnum::ITEM_ENTRY;
	}
}
