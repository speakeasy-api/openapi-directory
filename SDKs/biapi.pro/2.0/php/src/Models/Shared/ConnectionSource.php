<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConnectionSource - Successful DELETE on ConnectionSource resource
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConnectionSource
{
    /**
     * Expiration date of the access
     * 
     * @var ?\DateTime $accessExpire
     */
	#[\JMS\Serializer\Annotation\SerializedName('access_expire')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $accessExpire = null;
    
    /**
     * Creation date of the connection source
     * 
     * @var \DateTime $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('created')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $created;
    
    /**
     * This source is not used to synchronize the connection
     * 
     * @var ?\DateTime $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $disabled = null;
    
    /**
     * Expiration of the connection source. Used to purge the connection in case completion was not finished
     * 
     * @var ?\DateTime $expire
     */
	#[\JMS\Serializer\Annotation\SerializedName('expire')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expire = null;
    
    /**
     * ID of connection
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * ID of the related connection
     * 
     * @var int $idConnection
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_connection')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $idConnection;
    
    /**
     * ID of the related connector source
     * 
     * @var int $idConnectorSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_connector_source')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $idConnectorSource;
    
    /**
     * Last successful update
     * 
     * @var ?\DateTime $lastUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_update')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUpdate = null;
    
    /**
     * Name of the connection source
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Date of next synchronization
     * 
     * @var ?\DateTime $nextTry
     */
	#[\JMS\Serializer\Annotation\SerializedName('next_try')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $nextTry = null;
    
    /**
     * If the last update has failed, the state code
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
	public function __construct()
	{
		$this->accessExpire = null;
		$this->created = new \DateTime();
		$this->disabled = null;
		$this->expire = null;
		$this->id = 0;
		$this->idConnection = 0;
		$this->idConnectorSource = 0;
		$this->lastUpdate = null;
		$this->name = "";
		$this->nextTry = null;
		$this->state = null;
	}
}
