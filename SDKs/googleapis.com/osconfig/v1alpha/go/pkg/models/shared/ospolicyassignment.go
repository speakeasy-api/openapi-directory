// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OSPolicyAssignmentInput - OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
type OSPolicyAssignmentInput struct {
	// OS policy assignment description. Length of the description is limited to 1024 characters.
	Description *string `json:"description,omitempty"`
	// The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.
	Etag *string `json:"etag,omitempty"`
	// Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them.
	InstanceFilter *OSPolicyAssignmentInstanceFilter `json:"instanceFilter,omitempty"`
	// Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment.
	Name *string `json:"name,omitempty"`
	// Required. List of OS policies to be applied to the VMs.
	OsPolicies []OSPolicy `json:"osPolicies,omitempty"`
	// Message to configure the rollout at the zonal level for the OS policy assignment.
	Rollout *OSPolicyAssignmentRollout `json:"rollout,omitempty"`
}

// OSPolicyAssignmentRolloutStateEnum - Output only. OS policy assignment rollout state
type OSPolicyAssignmentRolloutStateEnum string

const (
	OSPolicyAssignmentRolloutStateEnumRolloutStateUnspecified OSPolicyAssignmentRolloutStateEnum = "ROLLOUT_STATE_UNSPECIFIED"
	OSPolicyAssignmentRolloutStateEnumInProgress              OSPolicyAssignmentRolloutStateEnum = "IN_PROGRESS"
	OSPolicyAssignmentRolloutStateEnumCancelling              OSPolicyAssignmentRolloutStateEnum = "CANCELLING"
	OSPolicyAssignmentRolloutStateEnumCancelled               OSPolicyAssignmentRolloutStateEnum = "CANCELLED"
	OSPolicyAssignmentRolloutStateEnumSucceeded               OSPolicyAssignmentRolloutStateEnum = "SUCCEEDED"
)

func (e OSPolicyAssignmentRolloutStateEnum) ToPointer() *OSPolicyAssignmentRolloutStateEnum {
	return &e
}

func (e *OSPolicyAssignmentRolloutStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ROLLOUT_STATE_UNSPECIFIED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "SUCCEEDED":
		*e = OSPolicyAssignmentRolloutStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OSPolicyAssignmentRolloutStateEnum: %v", v)
	}
}

// OSPolicyAssignment - OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
type OSPolicyAssignment struct {
	// Output only. Indicates that this revision has been successfully rolled out in this zone and new VMs will be assigned OS policies from this revision. For a given OS policy assignment, there is only one revision with a value of `true` for this field.
	Baseline *bool `json:"baseline,omitempty"`
	// Output only. Indicates that this revision deletes the OS policy assignment.
	Deleted *bool `json:"deleted,omitempty"`
	// OS policy assignment description. Length of the description is limited to 1024 characters.
	Description *string `json:"description,omitempty"`
	// The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.
	Etag *string `json:"etag,omitempty"`
	// Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them.
	InstanceFilter *OSPolicyAssignmentInstanceFilter `json:"instanceFilter,omitempty"`
	// Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment.
	Name *string `json:"name,omitempty"`
	// Required. List of OS policies to be applied to the VMs.
	OsPolicies []OSPolicy `json:"osPolicies,omitempty"`
	// Output only. Indicates that reconciliation is in progress for the revision. This value is `true` when the `rollout_state` is one of: * IN_PROGRESS * CANCELLING
	Reconciling *bool `json:"reconciling,omitempty"`
	// Output only. The timestamp that the revision was created.
	RevisionCreateTime *string `json:"revisionCreateTime,omitempty"`
	// Output only. The assignment revision ID A new revision is committed whenever a rollout is triggered for a OS policy assignment
	RevisionID *string `json:"revisionId,omitempty"`
	// Message to configure the rollout at the zonal level for the OS policy assignment.
	Rollout *OSPolicyAssignmentRollout `json:"rollout,omitempty"`
	// Output only. OS policy assignment rollout state
	RolloutState *OSPolicyAssignmentRolloutStateEnum `json:"rolloutState,omitempty"`
	// Output only. Server generated unique id for the OS policy assignment resource.
	UID *string `json:"uid,omitempty"`
}
