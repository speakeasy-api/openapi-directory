// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTPutMetricStreamActionEnum
type POSTPutMetricStreamActionEnum string

const (
	POSTPutMetricStreamActionEnumPutMetricStream POSTPutMetricStreamActionEnum = "PutMetricStream"
)

func (e POSTPutMetricStreamActionEnum) ToPointer() *POSTPutMetricStreamActionEnum {
	return &e
}

func (e *POSTPutMetricStreamActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PutMetricStream":
		*e = POSTPutMetricStreamActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTPutMetricStreamActionEnum: %v", v)
	}
}

// POSTPutMetricStreamVersionEnum
type POSTPutMetricStreamVersionEnum string

const (
	POSTPutMetricStreamVersionEnumTwoThousandAndTen0801 POSTPutMetricStreamVersionEnum = "2010-08-01"
)

func (e POSTPutMetricStreamVersionEnum) ToPointer() *POSTPutMetricStreamVersionEnum {
	return &e
}

func (e *POSTPutMetricStreamVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = POSTPutMetricStreamVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTPutMetricStreamVersionEnum: %v", v)
	}
}

type POSTPutMetricStreamRequest struct {
	Action            POSTPutMetricStreamActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                         `request:"mediaType=text/xml"`
	Version           POSTPutMetricStreamVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTPutMetricStreamResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
