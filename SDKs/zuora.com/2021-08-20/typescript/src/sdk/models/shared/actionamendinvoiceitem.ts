/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ActionAmendInvoiceItem extends SpeakeasyBase {
  /**
   *  The accounting code for the item's charge. Accounting codes group transactions that contain similar accounting attributes.
   *
   * @remarks
   *
   *
   * **Character limit**: 100
   *
   * **Values**: inherited from `RatePlanCharge.AccountingCode`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountingCode" })
  accountingCode?: string;

  /**
   *  Associates a discount invoice item to a specific invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from the ID of the charge that a discount applies to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AppliedToInvoiceItemId" })
  appliedToInvoiceItemId?: string;

  /**
   *  The amount being charged for the invoice item. This amount doesn't include taxes regardless if the charge's tax mode is inclusive or exclusive.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values**: automatically calculated from multiple fields in multiple objects
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeAmount" })
  chargeAmount?: number;

  /**
   *  The date when the Invoice Item is created .
   *
   * @remarks
   *
   *
   * **Character limit**: 29
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  chargeDate?: Date;

  /**
   *  A description of the invoice item's charge.
   *
   * @remarks
   *
   *
   * **Character limit**: 500
   *
   * **Values**: inherited from `RatePlanCharge.Description`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeDescription" })
  chargeDescription?: string;

  /**
   *  The ID of the rate plan charge that is associated with this invoice item upon object creation.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `RatePlanCharge.Id`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeId" })
  chargeId?: string;

  /**
   *  The name of the invoice item's charge.
   *
   * @remarks
   * **Character limi**t: 50
   *
   * **Values: **inherited from `RatePlanCharge.Name`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeName" })
  chargeName?: string;

  /**
   *  The unique identifier of the invoice item's charge.
   *
   * @remarks
   *
   *
   * **Character limit:** 50
   *
   * **Values:** inherited from `RatePlanCharge.ChargeNumber`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeNumber" })
  chargeNumber?: string;

  /**
   *  Specifies the type of charge.
   *
   * @remarks
   *
   *
   * **Character limit**: 9
   *
   * **Values**: one of the following:
   *
   * - `OneTime`
   * - `Recurring`
   * - `Usage`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeType" })
  chargeType?: string;

  /**
   *  The user ID of the person who created the invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   *  The date the invoice item was created.
   *
   * @remarks
   *
   *
   * **Character limit:** 29
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   *  The ID of the invoice that's associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `Invoice.Id`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceId" })
  invoiceId?: string;

  /**
   *  Identifies the kind of charge where 0 is a charge, 1 is a discount, 2 is a prepayment, and 3 is a tax. The returned value is text not decimal on data sources.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values: **
   *
   * - 0: charge
   * - 1: discount
   * - 2: prepayment
   * - 3: tax
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingType" })
  processingType?: number;

  /**
   *  A description of the product associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 500
   *
   * **Values**: inherited from `Product.Description`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductDescription" })
  productDescription?: string;

  /**
   *  The ID of the product associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `Product.Id`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId?: string;

  /**
   *  The name of the product associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 255
   *
   * **Values: **inherited from `Product.Name`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductName" })
  productName?: string;

  /**
   *  The ID of the rate plan charge that's associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `ProductRatePlanCharge.Id` You cannot query for this field. Only the subscribe preview and the amend preview calls will return the value of this field in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProductRatePlanChargeId" })
  productRatePlanChargeId?: string;

  /**
   *  The number of units for this invoice item.
   *
   * @remarks
   *
   *
   * **Values**: inherited from `RatePlanCharge.Quantity`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Quantity" })
  quantity?: number;

  /**
   *  The ID of the rate plan charge that's associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `RatePlanCharge.Id`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RatePlanChargeId" })
  ratePlanChargeId?: string;

  /**
   *  Associates this invoice item with a specific revenue recognition code.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `ProductRatePlanCharge.RevRecCode`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RevRecCode" })
  revRecCode?: string;

  /**
   *  The date when revenue recognition is triggered.
   *
   * @remarks
   *
   *
   * **Character limit**: 29
   *
   * **Values**: generated from `InvoiceItem.RevRecTriggerCondition`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RevRecStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  revRecStartDate?: Date;

  /**
   *  Specifies when revenue recognition begins based on a triggering event.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values**: inherited from `ProductRatePlanCharge`.`RevRecTriggerCondition`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RevRecTriggerCondition" })
  revRecTriggerCondition?: string;

  /**
   *  The unique SKU for the product associated with this invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 255
   *
   * **Values**: inherited from `Product.SKU`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SKU" })
  sku?: string;

  /**
   *  The end date of the service period associated with this invoice item. Service ends one second before the date in this value.
   *
   * @remarks
   *
   *
   * **Character limit**: 29
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceEndDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceEndDate?: Date;

  /**
   *  The start date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.
   *
   * @remarks
   *
   *
   * **Character limit:** 29
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceStartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serviceStartDate?: Date;

  /**
   *  The ID of the subscription associated with the invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: inherited from `Subscription.Id`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionId" })
  subscriptionId?: string;

  /**
   *  The number of the subscription associated with the invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionNumber" })
  subscriptionNumber?: string;

  /**
   *  The amount of tax applied to the invoice item's charge.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values**: calculated from multiple fields in the ProductRatePlanCharge object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxAmount" })
  taxAmount?: number;

  /**
   *  Specifies the tax code for taxation rules.
   *
   * @remarks
   *
   *
   * **Character limit**: 6
   *
   * **Values**: inherited from `ProductRatePlanCharge.TaxCode`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxCode" })
  taxCode?: string;

  /**
   *  The amount of the invoice item's charge that's tax exempt.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values**: calculated from multiple fields in the ProductRatePlanCharge object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxExemptAmount" })
  taxExemptAmount?: number;

  /**
   *  The tax mode of the invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 12
   *
   * **Values**: `TaxExclusive`, `TaxInclusive`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TaxMode" })
  taxMode?: string;

  /**
   *  Specifies the units to measure usage. Units of measure are configured in the web-based UI: **Z-Billing > Settings**
   *
   * @remarks
   *
   * **Character limit**:
   *
   * **Values**: inherited from `ProductRatePlanCharge.UOM`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UOM" })
  uom?: string;

  /**
   *  The per-unit price of the invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**:
   *
   * **Values**: calculated from multiple fields in ProductRatePlanCharge and ProductRatePlanChargeTier objets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UnitPrice" })
  unitPrice?: number;

  /**
   *  The ID of the user who last updated the invoice item.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   *  The date when the invoice item was last updated.
   *
   * @remarks
   *
   *
   * **Character limit**: 29
   *
   * **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
