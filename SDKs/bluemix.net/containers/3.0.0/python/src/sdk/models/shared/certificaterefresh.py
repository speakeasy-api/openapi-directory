"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CertificateRefresh:
    r"""Ok. A list of updated certificates is returned."""
    
    ca_cert: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ca_cert'), 'exclude': lambda f: f is None }})
    r"""Certificate Authority (CA) certificate including the CA public key."""  
    reg_host: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reg_host'), 'exclude': lambda f: f is None }})
    r"""Full URL to the IBM Bluemix registry."""  
    server_cert: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('server_cert'), 'exclude': lambda f: f is None }})
    r"""Server certificate including the server's public key."""  
    user_cert: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_cert'), 'exclude': lambda f: f is None }})
    r"""User certificate including the user's public key."""  
    user_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_key'), 'exclude': lambda f: f is None }})
    r"""User's private key."""  
    