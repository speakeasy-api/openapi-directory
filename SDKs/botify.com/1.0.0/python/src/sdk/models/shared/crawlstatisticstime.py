"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import crawlstatisticstimepoint as shared_crawlstatisticstimepoint
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrawlStatisticsTime:
    r"""Successful operation"""
    
    avg_delay: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_delay') }})  
    avg_size: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avg_size') }})  
    frequency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequency') }})  
    http_code_2xx: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_code_2xx') }})  
    http_code_3xx: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_code_3xx') }})  
    http_code_4xx: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_code_4xx') }})  
    http_code_5xx: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_code_5xx') }})  
    http_code_xxx: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_code_xxx') }})  
    last_update_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_update_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    new_urls: list[shared_crawlstatisticstimepoint.CrawlStatisticsTimePoint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('new_urls') }})  
    