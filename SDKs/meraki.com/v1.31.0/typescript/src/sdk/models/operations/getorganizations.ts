/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * API related settings
 */
export class GetOrganizations200ApplicationJSONApi extends SpeakeasyBase {
  /**
   * Enable API access
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;
}

/**
 * Region info
 */
export class GetOrganizations200ApplicationJSONCloudRegion extends SpeakeasyBase {
  /**
   * Name of region
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Data for this organization
 */
export class GetOrganizations200ApplicationJSONCloud extends SpeakeasyBase {
  /**
   * Region info
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  @Type(() => GetOrganizations200ApplicationJSONCloudRegion)
  region?: GetOrganizations200ApplicationJSONCloudRegion;
}

/**
 * Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
 */
export enum GetOrganizations200ApplicationJSONLicensingModelEnum {
  CoTerm = "co-term",
  PerDevice = "per-device",
  Subscription = "subscription",
}

/**
 * Licensing related settings
 */
export class GetOrganizations200ApplicationJSONLicensing extends SpeakeasyBase {
  /**
   * Organization licensing model. Can be 'co-term', 'per-device', or 'subscription'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: GetOrganizations200ApplicationJSONLicensingModelEnum;
}

export class GetOrganizations200ApplicationJSONManagementDetails extends SpeakeasyBase {
  /**
   * Name of management data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Value of management data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Information about the organization's management system
 */
export class GetOrganizations200ApplicationJSONManagement extends SpeakeasyBase {
  /**
   * Details related to organization management, possibly empty
   */
  @SpeakeasyMetadata({
    elemType: GetOrganizations200ApplicationJSONManagementDetails,
  })
  @Expose({ name: "details" })
  @Type(() => GetOrganizations200ApplicationJSONManagementDetails)
  details?: GetOrganizations200ApplicationJSONManagementDetails[];
}

export class GetOrganizations200ApplicationJSON extends SpeakeasyBase {
  /**
   * API related settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api" })
  @Type(() => GetOrganizations200ApplicationJSONApi)
  api?: GetOrganizations200ApplicationJSONApi;

  /**
   * Data for this organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cloud" })
  @Type(() => GetOrganizations200ApplicationJSONCloud)
  cloud?: GetOrganizations200ApplicationJSONCloud;

  /**
   * Organization ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Licensing related settings
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licensing" })
  @Type(() => GetOrganizations200ApplicationJSONLicensing)
  licensing?: GetOrganizations200ApplicationJSONLicensing;

  /**
   * Information about the organization's management system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "management" })
  @Type(() => GetOrganizations200ApplicationJSONManagement)
  management?: GetOrganizations200ApplicationJSONManagement;

  /**
   * Organization name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Organization URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class GetOrganizationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({ elemType: GetOrganizations200ApplicationJSON })
  getOrganizations200ApplicationJSONObjects?: GetOrganizations200ApplicationJSON[];
}
