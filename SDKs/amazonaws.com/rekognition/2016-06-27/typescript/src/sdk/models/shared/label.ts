/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Instance } from "./instance";
import { LabelAlias } from "./labelalias";
import { LabelCategory } from "./labelcategory";
import { Parent } from "./parent";
import { Expose, Type } from "class-transformer";

/**
 * <p>Structure containing details about the detected label, including the name, detected instances, parent labels, and level of confidence.</p> <p> </p>
 */
export class Label extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: LabelAlias })
  @Expose({ name: "Aliases" })
  @Type(() => LabelAlias)
  aliases?: LabelAlias[];

  @SpeakeasyMetadata({ elemType: LabelCategory })
  @Expose({ name: "Categories" })
  @Type(() => LabelCategory)
  categories?: LabelCategory[];

  @SpeakeasyMetadata()
  @Expose({ name: "Confidence" })
  confidence?: number;

  @SpeakeasyMetadata({ elemType: Instance })
  @Expose({ name: "Instances" })
  @Type(() => Instance)
  instances?: Instance[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Parent })
  @Expose({ name: "Parents" })
  @Type(() => Parent)
  parents?: Parent[];
}
