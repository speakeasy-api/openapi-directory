// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type QueryStatusEnum string

const (
	QueryStatusEnumQueued    QueryStatusEnum = "QUEUED"
	QueryStatusEnumRunning   QueryStatusEnum = "RUNNING"
	QueryStatusEnumFinished  QueryStatusEnum = "FINISHED"
	QueryStatusEnumFailed    QueryStatusEnum = "FAILED"
	QueryStatusEnumCancelled QueryStatusEnum = "CANCELLED"
	QueryStatusEnumTimedOut  QueryStatusEnum = "TIMED_OUT"
)

func (e QueryStatusEnum) ToPointer() *QueryStatusEnum {
	return &e
}

func (e *QueryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUEUED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FINISHED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "TIMED_OUT":
		*e = QueryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryStatusEnum: %v", v)
	}
}
