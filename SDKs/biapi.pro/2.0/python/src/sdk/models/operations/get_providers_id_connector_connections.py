"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import connection as shared_connection
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetProvidersIDConnectorConnectionsRequest:
    
    id_connector: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_connector', 'style': 'simple', 'explode': False }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    range: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'range', 'style': 'form', 'explode': True }})
    r"""the length of the connection subset"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetProvidersIDConnectorConnections200ApplicationJSON:
    r"""connections"""
    
    connections: list[shared_connection.Connection] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connections') }})  
    total: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""total number of results"""  
    

@dataclasses.dataclass
class GetProvidersIDConnectorConnectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_providers_id_connector_connections_200_application_json_object: Optional[GetProvidersIDConnectorConnections200ApplicationJSON] = dataclasses.field(default=None)
    r"""connections"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    