/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Role inside this project
 */
export enum ProjectPrivateRoleEnum {
  Owner = "Owner",
  Collaborator = "Collaborator",
  Viewer = "Viewer",
}

/**
 * Project storage type
 */
export enum ProjectPrivateStorageEnum {
  Individual = "individual",
  Group = "group",
}

export class ProjectPrivate extends SpeakeasyBase {
  /**
   * Project id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Date when project was published
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_date" })
  publishedDate: string;

  /**
   * Role inside this project
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role: ProjectPrivateRoleEnum;

  /**
   * Project storage type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storage" })
  storage: ProjectPrivateStorageEnum;

  /**
   * Project title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * Api endpoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
