/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * YoutubeAndPartnersThirdPartyMeasurementSettings - Settings that control what third-party vendors are measuring specific line item metrics.
 */
public class YoutubeAndPartnersThirdPartyMeasurementSettings {
    /**
     * The third-party vendors measuring brand lift. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_DYNATA` * `THIRD_PARTY_VENDOR_KANTAR`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brandLiftVendorConfigs")
    public ThirdPartyVendorConfig[] brandLiftVendorConfigs;

    public YoutubeAndPartnersThirdPartyMeasurementSettings withBrandLiftVendorConfigs(ThirdPartyVendorConfig[] brandLiftVendorConfigs) {
        this.brandLiftVendorConfigs = brandLiftVendorConfigs;
        return this;
    }
    
    /**
     * The third-party vendors measuring brand safety. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_ZERF` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brandSafetyVendorConfigs")
    public ThirdPartyVendorConfig[] brandSafetyVendorConfigs;

    public YoutubeAndPartnersThirdPartyMeasurementSettings withBrandSafetyVendorConfigs(ThirdPartyVendorConfig[] brandSafetyVendorConfigs) {
        this.brandSafetyVendorConfigs = brandSafetyVendorConfigs;
        return this;
    }
    
    /**
     * The third-party vendors measuring reach. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_NIELSEN` * `THIRD_PARTY_VENDOR_COMSCORE` * `THIRD_PARTY_VENDOR_KANTAR`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reachVendorConfigs")
    public ThirdPartyVendorConfig[] reachVendorConfigs;

    public YoutubeAndPartnersThirdPartyMeasurementSettings withReachVendorConfigs(ThirdPartyVendorConfig[] reachVendorConfigs) {
        this.reachVendorConfigs = reachVendorConfigs;
        return this;
    }
    
    /**
     * The third-party vendors measuring viewability. The following third-party vendors are applicable: * `THIRD_PARTY_VENDOR_MOAT` * `THIRD_PARTY_VENDOR_DOUBLE_VERIFY` * `THIRD_PARTY_VENDOR_INTEGRAL_AD_SCIENCE` * `THIRD_PARTY_VENDOR_COMSCORE` * `THIRD_PARTY_VENDOR_TELEMETRY` * `THIRD_PARTY_VENDOR_MEETRICS`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("viewabilityVendorConfigs")
    public ThirdPartyVendorConfig[] viewabilityVendorConfigs;

    public YoutubeAndPartnersThirdPartyMeasurementSettings withViewabilityVendorConfigs(ThirdPartyVendorConfig[] viewabilityVendorConfigs) {
        this.viewabilityVendorConfigs = viewabilityVendorConfigs;
        return this;
    }
    
    public YoutubeAndPartnersThirdPartyMeasurementSettings(){}
}
