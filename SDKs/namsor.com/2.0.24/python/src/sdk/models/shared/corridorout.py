"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import firstlastnamediasporaedout as shared_firstlastnamediasporaedout
from ..shared import firstlastnamegenderedout as shared_firstlastnamegenderedout
from ..shared import firstlastnameoriginedout as shared_firstlastnameoriginedout
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CorridorOut:
    r"""Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)"""
    
    first_last_name_diasporaed_out: Optional[shared_firstlastnamediasporaedout.FirstLastNameDiasporaedOut] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstLastNameDiasporaedOut'), 'exclude': lambda f: f is None }})
    r"""Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence."""  
    first_last_name_gendered_out: Optional[shared_firstlastnamegenderedout.FirstLastNameGenderedOut] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstLastNameGenderedOut'), 'exclude': lambda f: f is None }})
    r"""Represents the output of inferring the LIKELY gender from a personal name."""  
    first_last_name_origined_out: Optional[shared_firstlastnameoriginedout.FirstLastNameOriginedOut] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstLastNameOriginedOut'), 'exclude': lambda f: f is None }})
    r"""Represents the output of inferring the LIKELY country of Origin from a personal name."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script'), 'exclude': lambda f: f is None }})  
    