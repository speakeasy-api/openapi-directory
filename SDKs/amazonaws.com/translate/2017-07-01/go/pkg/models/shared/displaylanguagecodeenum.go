// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DisplayLanguageCodeEnum string

const (
	DisplayLanguageCodeEnumDe   DisplayLanguageCodeEnum = "de"
	DisplayLanguageCodeEnumEn   DisplayLanguageCodeEnum = "en"
	DisplayLanguageCodeEnumEs   DisplayLanguageCodeEnum = "es"
	DisplayLanguageCodeEnumFr   DisplayLanguageCodeEnum = "fr"
	DisplayLanguageCodeEnumIt   DisplayLanguageCodeEnum = "it"
	DisplayLanguageCodeEnumJa   DisplayLanguageCodeEnum = "ja"
	DisplayLanguageCodeEnumKo   DisplayLanguageCodeEnum = "ko"
	DisplayLanguageCodeEnumPt   DisplayLanguageCodeEnum = "pt"
	DisplayLanguageCodeEnumZh   DisplayLanguageCodeEnum = "zh"
	DisplayLanguageCodeEnumZhTw DisplayLanguageCodeEnum = "zh-TW"
)

func (e DisplayLanguageCodeEnum) ToPointer() *DisplayLanguageCodeEnum {
	return &e
}

func (e *DisplayLanguageCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "de":
		fallthrough
	case "en":
		fallthrough
	case "es":
		fallthrough
	case "fr":
		fallthrough
	case "it":
		fallthrough
	case "ja":
		fallthrough
	case "ko":
		fallthrough
	case "pt":
		fallthrough
	case "zh":
		fallthrough
	case "zh-TW":
		*e = DisplayLanguageCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisplayLanguageCodeEnum: %v", v)
	}
}
