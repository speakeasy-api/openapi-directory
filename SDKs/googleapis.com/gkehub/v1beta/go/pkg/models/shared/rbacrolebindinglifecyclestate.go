// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RBACRoleBindingLifecycleStateCodeEnum - Output only. The current state of the rbacrolebinding resource.
type RBACRoleBindingLifecycleStateCodeEnum string

const (
	RBACRoleBindingLifecycleStateCodeEnumCodeUnspecified RBACRoleBindingLifecycleStateCodeEnum = "CODE_UNSPECIFIED"
	RBACRoleBindingLifecycleStateCodeEnumCreating        RBACRoleBindingLifecycleStateCodeEnum = "CREATING"
	RBACRoleBindingLifecycleStateCodeEnumReady           RBACRoleBindingLifecycleStateCodeEnum = "READY"
	RBACRoleBindingLifecycleStateCodeEnumDeleting        RBACRoleBindingLifecycleStateCodeEnum = "DELETING"
	RBACRoleBindingLifecycleStateCodeEnumUpdating        RBACRoleBindingLifecycleStateCodeEnum = "UPDATING"
)

func (e RBACRoleBindingLifecycleStateCodeEnum) ToPointer() *RBACRoleBindingLifecycleStateCodeEnum {
	return &e
}

func (e *RBACRoleBindingLifecycleStateCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CODE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "DELETING":
		fallthrough
	case "UPDATING":
		*e = RBACRoleBindingLifecycleStateCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RBACRoleBindingLifecycleStateCodeEnum: %v", v)
	}
}

// RBACRoleBindingLifecycleState - RBACRoleBindingLifecycleState describes the state of a RbacRoleBinding resource.
type RBACRoleBindingLifecycleState struct {
	// Output only. The current state of the rbacrolebinding resource.
	Code *RBACRoleBindingLifecycleStateCodeEnum `json:"code,omitempty"`
}
