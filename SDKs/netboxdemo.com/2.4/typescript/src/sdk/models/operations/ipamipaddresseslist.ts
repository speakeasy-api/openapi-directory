/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class IpamIpAddressesListRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=address",
  })
  address?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device",
  })
  device?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device_id",
  })
  deviceId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=family",
  })
  family?: string;

  /**
   * Multiple values may be separated by commas.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=id__in",
  })
  idIn?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=interface_id",
  })
  interfaceId?: string;

  /**
   * Number of results to return per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=mask_length",
  })
  maskLength?: number;

  /**
   * The initial index from which to return the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parent",
  })
  parent?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=role" })
  role?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tenant",
  })
  tenant?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tenant_id",
  })
  tenantId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=virtual_machine",
  })
  virtualMachine?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=virtual_machine_id",
  })
  virtualMachineId?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=vrf" })
  vrf?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=vrf_id",
  })
  vrfId?: string;
}

export class IpamIpAddressesList200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string;

  @SpeakeasyMetadata({ elemType: shared.IPAddress })
  @Expose({ name: "results" })
  @Type(() => shared.IPAddress)
  results: shared.IPAddress[];
}

export class IpamIpAddressesListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  ipamIpAddressesList200ApplicationJSONObject?: IpamIpAddressesList200ApplicationJSON;
}
