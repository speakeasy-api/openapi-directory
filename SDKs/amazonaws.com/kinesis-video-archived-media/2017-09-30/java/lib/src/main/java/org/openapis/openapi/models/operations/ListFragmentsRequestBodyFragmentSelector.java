/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ListFragmentsRequestBodyFragmentSelector - &lt;p&gt;Describes the timestamp range and timestamp origin of a range of fragments.&lt;/p&gt; &lt;p&gt;Only fragments with a start timestamp greater than or equal to the given start time and less than or equal to the end time are returned. For example, if a stream contains fragments with the following start timestamps: &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;00:00:00&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;00:00:02&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;00:00:04&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;00:00:06&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; A fragment selector range with a start time of 00:00:01 and end time of 00:00:04 would return the fragments with start times of 00:00:02 and 00:00:04. &lt;/p&gt;
 */
public class ListFragmentsRequestBodyFragmentSelector {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FragmentSelectorType")
    public org.openapis.openapi.models.shared.FragmentSelectorTypeEnum fragmentSelectorType;

    public ListFragmentsRequestBodyFragmentSelector withFragmentSelectorType(org.openapis.openapi.models.shared.FragmentSelectorTypeEnum fragmentSelectorType) {
        this.fragmentSelectorType = fragmentSelectorType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimestampRange")
    public org.openapis.openapi.models.shared.TimestampRange timestampRange;

    public ListFragmentsRequestBodyFragmentSelector withTimestampRange(org.openapis.openapi.models.shared.TimestampRange timestampRange) {
        this.timestampRange = timestampRange;
        return this;
    }
    
    public ListFragmentsRequestBodyFragmentSelector(){}
}
