"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createsecretrequest as shared_createsecretrequest
from ..shared import errorapikeynotfound as shared_errorapikeynotfound
from ..shared import secretinfo as shared_secretinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class CreateAPISecretSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateAPISecretRequest:
    
    api_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'api_key', 'style': 'simple', 'explode': False }})
    r"""The API key to manage secrets for"""  
    create_secret_request: shared_createsecretrequest.CreateSecretRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAPISecret401ApplicationJSON:
    r"""Credentials are missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""More detail regarding this error, including the expected value"""  
    instance: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instance'), 'exclude': lambda f: f is None }})
    r"""Internal Trace ID"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Description of the error"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""URL for further information"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAPISecret400ApplicationJSONInvalidParameters:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Field name"""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""Explanation of why parameter is considered invalid"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateAPISecret400ApplicationJSON:
    r"""Bad request. This usually indicates valid data but can also occur when a user has exceeded the allowed number of secrets on their account."""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""More detail regarding this error, including the API key supplied"""  
    instance: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instance'), 'exclude': lambda f: f is None }})
    r"""Internal Trace ID"""  
    invalid_parameters: Optional[list[CreateAPISecret400ApplicationJSONInvalidParameters]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalid_parameters'), 'exclude': lambda f: f is None }})
    r"""Array of the parameters that are considered invalid, and explanations of why"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Description of the error"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""URL for further information"""  
    

@dataclasses.dataclass
class CreateAPISecretResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_api_secret_400_application_json_object: Optional[CreateAPISecret400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad request. This usually indicates valid data but can also occur when a user has exceeded the allowed number of secrets on their account."""  
    create_api_secret_401_application_json_object: Optional[CreateAPISecret401ApplicationJSON] = dataclasses.field(default=None)
    r"""Credentials are missing or invalid"""  
    error_api_key_not_found: Optional[shared_errorapikeynotfound.ErrorAPIKeyNotFound] = dataclasses.field(default=None)
    r"""Item not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    secret_info: Optional[shared_secretinfo.SecretInfo] = dataclasses.field(default=None)
    r"""Secret created"""  
    