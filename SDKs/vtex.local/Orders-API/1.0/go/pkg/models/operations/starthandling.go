// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type StartHandlingPathParams struct {
	// Order ID is a unique code that identifies an order.
	OrderID string `pathParam:"style=simple,explode=false,name=orderId"`
}

type StartHandlingHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type StartHandlingRequest struct {
	PathParams StartHandlingPathParams
	Headers    StartHandlingHeaders
}

// StartHandling409ApplicationJSONError - Object containing the error information
type StartHandling409ApplicationJSONError struct {
	// Error code in the Order Management System
	Code *string `json:"code,omitempty"`
	// Exception
	Exception *string `json:"exception,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
}

// StartHandling409ApplicationJSON - Root object
type StartHandling409ApplicationJSON struct {
	// Object containing the error information
	Error *StartHandling409ApplicationJSONError `json:"error,omitempty"`
}

// StartHandling401ApplicationJSONError - Object containing the error information
type StartHandling401ApplicationJSONError struct {
	// Error code in the Order Management System
	Code *string `json:"code,omitempty"`
	// Exception
	Exception *string `json:"exception,omitempty"`
	// Error message
	Message *string `json:"message,omitempty"`
}

// StartHandling401ApplicationJSON - Root object
type StartHandling401ApplicationJSON struct {
	// Object containing the error information
	Error *StartHandling401ApplicationJSONError `json:"error,omitempty"`
}

type StartHandlingResponse struct {
	ContentType string
	// [Unauthorized](https://httpstatuses.com/401)
	StartHandling401ApplicationJSONObject *StartHandling401ApplicationJSON
	// [Conflict](https://httpstatuses.com/409)
	StartHandling409ApplicationJSONObject *StartHandling409ApplicationJSON
	StatusCode                            int
	RawResponse                           *http.Response
}
