"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import auxiliarymessage as shared_auxiliarymessage
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Printer:
    r"""Printer configuration."""
    
    auxiliary_messages: Optional[list[shared_auxiliarymessage.AuxiliaryMessage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auxiliaryMessages'), 'exclude': lambda f: f is None }})
    r"""Output only. Auxiliary messages about issues with the printer configuration if any."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time when printer was created."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Editable. Description of printer."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Editable. Name of printer."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Id of the printer. (During printer creation leave empty)"""  
    make_and_model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('makeAndModel'), 'exclude': lambda f: f is None }})
    r"""Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"""  
    org_unit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgUnitId'), 'exclude': lambda f: f is None }})
    r"""Organization Unit that owns this printer (Only can be set during Printer creation)"""  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""Editable. Printer URI."""  
    use_driverless_config: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useDriverlessConfig'), 'exclude': lambda f: f is None }})
    r"""Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrinterInput:
    r"""Printer configuration."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Editable. Description of printer."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Editable. Name of printer."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Id of the printer. (During printer creation leave empty)"""  
    make_and_model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('makeAndModel'), 'exclude': lambda f: f is None }})
    r"""Editable. Make and model of printer. e.g. Lexmark MS610de Value must be in format as seen in ListPrinterModels response."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the Printer object, in the format customers/{customer-id}/printers/{printer-id} (During printer creation leave empty)"""  
    org_unit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgUnitId'), 'exclude': lambda f: f is None }})
    r"""Organization Unit that owns this printer (Only can be set during Printer creation)"""  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})
    r"""Editable. Printer URI."""  
    use_driverless_config: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('useDriverlessConfig'), 'exclude': lambda f: f is None }})
    r"""Editable. flag to use driverless configuration or not. If it's set to be true, make_and_model can be ignored"""  
    