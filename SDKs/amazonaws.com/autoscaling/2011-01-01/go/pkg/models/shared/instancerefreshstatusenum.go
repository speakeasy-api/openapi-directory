// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceRefreshStatusEnum string

const (
	InstanceRefreshStatusEnumPending            InstanceRefreshStatusEnum = "Pending"
	InstanceRefreshStatusEnumInProgress         InstanceRefreshStatusEnum = "InProgress"
	InstanceRefreshStatusEnumSuccessful         InstanceRefreshStatusEnum = "Successful"
	InstanceRefreshStatusEnumFailed             InstanceRefreshStatusEnum = "Failed"
	InstanceRefreshStatusEnumCancelling         InstanceRefreshStatusEnum = "Cancelling"
	InstanceRefreshStatusEnumCancelled          InstanceRefreshStatusEnum = "Cancelled"
	InstanceRefreshStatusEnumRollbackInProgress InstanceRefreshStatusEnum = "RollbackInProgress"
	InstanceRefreshStatusEnumRollbackFailed     InstanceRefreshStatusEnum = "RollbackFailed"
	InstanceRefreshStatusEnumRollbackSuccessful InstanceRefreshStatusEnum = "RollbackSuccessful"
)

func (e InstanceRefreshStatusEnum) ToPointer() *InstanceRefreshStatusEnum {
	return &e
}

func (e *InstanceRefreshStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Successful":
		fallthrough
	case "Failed":
		fallthrough
	case "Cancelling":
		fallthrough
	case "Cancelled":
		fallthrough
	case "RollbackInProgress":
		fallthrough
	case "RollbackFailed":
		fallthrough
	case "RollbackSuccessful":
		*e = InstanceRefreshStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRefreshStatusEnum: %v", v)
	}
}
