/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PatchComplianceLevelEnum } from "./patchcompliancelevelenum";
import { PatchFilterGroup } from "./patchfiltergroup";
import { Expose, Type } from "class-transformer";

/**
 * Defines an approval rule for a patch baseline.
 */
export class PatchRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApproveAfterDays" })
  approveAfterDays?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ApproveUntilDate" })
  approveUntilDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ComplianceLevel" })
  complianceLevel?: PatchComplianceLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableNonSecurity" })
  enableNonSecurity?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "PatchFilterGroup" })
  @Type(() => PatchFilterGroup)
  patchFilterGroup: PatchFilterGroup;
}
