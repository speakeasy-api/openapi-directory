/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OwnerEnum } from "./ownerenum";
import { StepActionTypeEnum } from "./stepactiontypeenum";
import { TargetTypeEnum } from "./targettypeenum";
import { Expose } from "class-transformer";

/**
 * The summary of the step.
 */
export class TemplateStepSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: OwnerEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  previous?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "stepActionType" })
  stepActionType?: StepActionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stepGroupId" })
  stepGroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetType" })
  targetType?: TargetTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "templateId" })
  templateId?: string;
}
