<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RoutineInput - A user-defined function or a stored procedure.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RoutineInput
{
    /**
     * Optional.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Argument> $arguments
     */
	#[\JMS\Serializer\Annotation\SerializedName('arguments')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Argument>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $arguments = null;
    
    /**
     * Required. The body of the routine. For functions, this is the expression in the AS clause. If language=SQL, it is the substring inside (but excluding) the parentheses. For example, for the function created with the following statement: `CREATE FUNCTION JoinLines(x string, y string) as (concat(x, "\n", y))` The definition_body is `concat(x, "\n", y)` (\n is not replaced with linebreak). If language=JAVASCRIPT, it is the evaluated string in the AS clause. For example, for the function created with the following statement: `CREATE FUNCTION f() RETURNS STRING LANGUAGE js AS 'return "\n";\n'` The definition_body is `return "\n";\n` Note that both \n are replaced with linebreaks.
     * 
     * @var ?string $definitionBody
     */
	#[\JMS\Serializer\Annotation\SerializedName('definitionBody')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $definitionBody = null;
    
    /**
     * Optional. The description of the routine, if defined.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Optional. The determinism level of the JavaScript UDF, if defined.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RoutineDeterminismLevelEnum $determinismLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('determinismLevel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RoutineDeterminismLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RoutineDeterminismLevelEnum $determinismLevel = null;
    
    /**
     * Optional. If language = "JAVASCRIPT", this field stores the path of the imported JAVASCRIPT libraries.
     * 
     * @var ?array<string> $importedLibraries
     */
	#[\JMS\Serializer\Annotation\SerializedName('importedLibraries')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $importedLibraries = null;
    
    /**
     * Optional. Defaults to "SQL" if remote_function_options field is absent, not set otherwise.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RoutineLanguageEnum $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RoutineLanguageEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RoutineLanguageEnum $language = null;
    
    /**
     * Options for a remote user-defined function.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RemoteFunctionOptions $remoteFunctionOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('remoteFunctionOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RemoteFunctionOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RemoteFunctionOptions $remoteFunctionOptions = null;
    
    /**
     * A table type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StandardSqlTableType $returnTableType
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnTableType')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StandardSqlTableType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StandardSqlTableType $returnTableType = null;
    
    /**
     * The data type of a variable such as a function argument. Examples include: * INT64: `{"typeKind": "INT64"}` * ARRAY: { "typeKind": "ARRAY", "arrayElementType": {"typeKind": "STRING"} } * STRUCT>: { "typeKind": "STRUCT", "structType": { "fields": [ { "name": "x", "type": {"typeKind": "STRING"} }, { "name": "y", "type": { "typeKind": "ARRAY", "arrayElementType": {"typeKind": "DATE"} } } ] } }
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StandardSqlDataType $returnType
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnType')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StandardSqlDataType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StandardSqlDataType $returnType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('routineReference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RoutineReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RoutineReference $routineReference = null;
    
    /**
     * Required. The type of routine.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RoutineRoutineTypeEnum $routineType
     */
	#[\JMS\Serializer\Annotation\SerializedName('routineType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RoutineRoutineTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RoutineRoutineTypeEnum $routineType = null;
    
    /**
     * Options for a user-defined Spark routine.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SparkOptions $sparkOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('sparkOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SparkOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SparkOptions $sparkOptions = null;
    
    /**
     * Optional. Can be set for procedures only. If true (default), the definition body will be validated in the creation and the updates of the procedure. For procedures with an argument of ANY TYPE, the definition body validtion is not supported at creation/update time, and thus this field must be set to false explicitly.
     * 
     * @var ?bool $strictMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('strictMode')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $strictMode = null;
    
	public function __construct()
	{
		$this->arguments = null;
		$this->definitionBody = null;
		$this->description = null;
		$this->determinismLevel = null;
		$this->importedLibraries = null;
		$this->language = null;
		$this->remoteFunctionOptions = null;
		$this->returnTableType = null;
		$this->returnType = null;
		$this->routineReference = null;
		$this->routineType = null;
		$this->sparkOptions = null;
		$this->strictMode = null;
	}
}
