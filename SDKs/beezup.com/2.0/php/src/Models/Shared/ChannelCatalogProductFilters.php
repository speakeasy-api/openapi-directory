<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ChannelCatalogProductFilters
{
    /**
     * Describe a filter on a product's column.
     * 
     * The key is the column identifier of your catalog or a custom column.
     * 
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonAdditionalProductFiltersValue> $additionalProductFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalProductFilters')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\BeezUPCommonAdditionalProductFiltersValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalProductFilters = null;
    
    /**
     * The catalog product EAN filter (multiple values)
     * 
     * @var ?array<string> $catalogEans
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalogEans')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $catalogEans = null;
    
    /**
     * The catalog product MPN filter (multiple values)
     * 
     * @var ?array<string> $catalogMpns
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalogMpns')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $catalogMpns = null;
    
    /**
     * The catalog product SKU filter (multiple values)
     * 
     * @var ?array<string> $catalogSkus
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalogSkus')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $catalogSkus = null;
    
    /**
     * The channel product EAN filter (multiple values)
     * 
     * @var ?array<string> $channelEans
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelEans')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $channelEans = null;
    
    /**
     * The channel product MPN filter (multiple values)
     * 
     * @var ?array<string> $channelMpns
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelMpns')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $channelMpns = null;
    
    /**
     * The channel product SKU filter (multiple values)
     * 
     * @var ?array<string> $channelSkus
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelSkus')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $channelSkus = null;
    
    /**
     * The product title filter
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->additionalProductFilters = null;
		$this->catalogEans = null;
		$this->catalogMpns = null;
		$this->catalogSkus = null;
		$this->channelEans = null;
		$this->channelMpns = null;
		$this->channelSkus = null;
		$this->title = null;
	}
}
