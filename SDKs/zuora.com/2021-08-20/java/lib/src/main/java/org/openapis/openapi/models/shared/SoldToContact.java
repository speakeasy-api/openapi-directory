/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SoldToContact - Container for custom fields of a Contact object.
 * 
 */
public class SoldToContact {
    /**
     * First line of the contact's address. This is often a street address or a business name.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address1")
    public String address1;
    public SoldToContact withAddress1(String address1) {
        this.address1 = address1;
        return this;
    }
    
    /**
     * Second line of the contact's address.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address2")
    public String address2;
    public SoldToContact withAddress2(String address2) {
        this.address2 = address2;
        return this;
    }
    
    /**
     * City of the contact's address.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public SoldToContact withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the sold-to contact to calculate tax. A bill-to contact may be used if no sold-to contact is provided.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public SoldToContact withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * County of the contact's address.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("county")
    public String county;
    public SoldToContact withCounty(String county) {
        this.county = county;
        return this;
    }
    
    /**
     * Fax number of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fax")
    public String fax;
    public SoldToContact withFax(String fax) {
        this.fax = fax;
        return this;
    }
    
    /**
     * First name of the contact.
     * 
     */
    @JsonProperty("firstName")
    public String firstName;
    public SoldToContact withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Home phone number of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homePhone")
    public String homePhone;
    public SoldToContact withHomePhone(String homePhone) {
        this.homePhone = homePhone;
        return this;
    }
    
    /**
     * Last name of the contact.
     * 
     */
    @JsonProperty("lastName")
    public String lastName;
    public SoldToContact withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Mobile phone number of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mobilePhone")
    public String mobilePhone;
    public SoldToContact withMobilePhone(String mobilePhone) {
        this.mobilePhone = mobilePhone;
        return this;
    }
    
    /**
     * Nickname of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nickname")
    public String nickname;
    public SoldToContact withNickname(String nickname) {
        this.nickname = nickname;
        return this;
    }
    
    /**
     * Additional phone number of the contact. Use the `otherPhoneType` field to specify the type of phone number.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherPhone")
    public String otherPhone;
    public SoldToContact withOtherPhone(String otherPhone) {
        this.otherPhone = otherPhone;
        return this;
    }
    
    /**
     * Specifies the type of phone number in the `otherPhone` field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherPhoneType")
    public SoldToContactOtherPhoneTypeEnum otherPhoneType;
    public SoldToContact withOtherPhoneType(SoldToContactOtherPhoneTypeEnum otherPhoneType) {
        this.otherPhoneType = otherPhoneType;
        return this;
    }
    
    /**
     * Personal email address of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("personalEmail")
    public String personalEmail;
    public SoldToContact withPersonalEmail(String personalEmail) {
        this.personalEmail = personalEmail;
        return this;
    }
    
    /**
     * ZIP code or other postal code of the contact's address.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;
    public SoldToContact withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * State or province of the contact's address.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public SoldToContact withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Region defined in your taxation rules. Only applicable if you use Zuora Tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRegion")
    public String taxRegion;
    public SoldToContact withTaxRegion(String taxRegion) {
        this.taxRegion = taxRegion;
        return this;
    }
    
    /**
     * Business email address of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workEmail")
    public String workEmail;
    public SoldToContact withWorkEmail(String workEmail) {
        this.workEmail = workEmail;
        return this;
    }
    
    /**
     * Business phone number of the contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workPhone")
    public String workPhone;
    public SoldToContact withWorkPhone(String workPhone) {
        this.workPhone = workPhone;
        return this;
    }
    
}
