// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type PostOrdersSecurity struct {
	FdcAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// PostOrdersOrderRequestV2IntegratorEnum - Use of this property requires special permission and must be discussed with your account executive; values are restricted while custom values need to be accepted by your AE.
type PostOrdersOrderRequestV2IntegratorEnum string

const (
	PostOrdersOrderRequestV2IntegratorEnumOneShoppingCart PostOrdersOrderRequestV2IntegratorEnum = "1ShoppingCart"
	PostOrdersOrderRequestV2IntegratorEnumThreedCart      PostOrdersOrderRequestV2IntegratorEnum = "3dCart"
	PostOrdersOrderRequestV2IntegratorEnumAdobeBc         PostOrdersOrderRequestV2IntegratorEnum = "AdobeBC"
	PostOrdersOrderRequestV2IntegratorEnumAmazonAu        PostOrdersOrderRequestV2IntegratorEnum = "AmazonAU"
	PostOrdersOrderRequestV2IntegratorEnumAmazonEu        PostOrdersOrderRequestV2IntegratorEnum = "AmazonEU"
	PostOrdersOrderRequestV2IntegratorEnumAmazonNa        PostOrdersOrderRequestV2IntegratorEnum = "AmazonNA"
	PostOrdersOrderRequestV2IntegratorEnumBigCommerce     PostOrdersOrderRequestV2IntegratorEnum = "BigCommerce"
	PostOrdersOrderRequestV2IntegratorEnumBrandBoom       PostOrdersOrderRequestV2IntegratorEnum = "BrandBoom"
	PostOrdersOrderRequestV2IntegratorEnumBrightPearl     PostOrdersOrderRequestV2IntegratorEnum = "BrightPearl"
	PostOrdersOrderRequestV2IntegratorEnumBuyGoods        PostOrdersOrderRequestV2IntegratorEnum = "BuyGoods"
	PostOrdersOrderRequestV2IntegratorEnumCelery          PostOrdersOrderRequestV2IntegratorEnum = "Celery"
	PostOrdersOrderRequestV2IntegratorEnumChannelAdvisor  PostOrdersOrderRequestV2IntegratorEnum = "ChannelAdvisor"
	PostOrdersOrderRequestV2IntegratorEnumClickbank       PostOrdersOrderRequestV2IntegratorEnum = "Clickbank"
	PostOrdersOrderRequestV2IntegratorEnumCommerceHub     PostOrdersOrderRequestV2IntegratorEnum = "CommerceHub"
	PostOrdersOrderRequestV2IntegratorEnumCustom          PostOrdersOrderRequestV2IntegratorEnum = "Custom"
	PostOrdersOrderRequestV2IntegratorEnumDemandware      PostOrdersOrderRequestV2IntegratorEnum = "Demandware"
	PostOrdersOrderRequestV2IntegratorEnumEbay            PostOrdersOrderRequestV2IntegratorEnum = "Ebay"
	PostOrdersOrderRequestV2IntegratorEnumEcwid           PostOrdersOrderRequestV2IntegratorEnum = "Ecwid"
	PostOrdersOrderRequestV2IntegratorEnumEtsy            PostOrdersOrderRequestV2IntegratorEnum = "Etsy"
	PostOrdersOrderRequestV2IntegratorEnumFoxyCart        PostOrdersOrderRequestV2IntegratorEnum = "FoxyCart"
	PostOrdersOrderRequestV2IntegratorEnumGoodsie         PostOrdersOrderRequestV2IntegratorEnum = "Goodsie"
	PostOrdersOrderRequestV2IntegratorEnumInfusionsoft    PostOrdersOrderRequestV2IntegratorEnum = "Infusionsoft"
	PostOrdersOrderRequestV2IntegratorEnumKonnektive      PostOrdersOrderRequestV2IntegratorEnum = "Konnektive"
	PostOrdersOrderRequestV2IntegratorEnumLimeLight       PostOrdersOrderRequestV2IntegratorEnum = "LimeLight"
	PostOrdersOrderRequestV2IntegratorEnumLinio           PostOrdersOrderRequestV2IntegratorEnum = "Linio"
	PostOrdersOrderRequestV2IntegratorEnumLinnworks       PostOrdersOrderRequestV2IntegratorEnum = "Linnworks"
	PostOrdersOrderRequestV2IntegratorEnumMagento         PostOrdersOrderRequestV2IntegratorEnum = "Magento"
	PostOrdersOrderRequestV2IntegratorEnumNetsuite        PostOrdersOrderRequestV2IntegratorEnum = "Netsuite"
	PostOrdersOrderRequestV2IntegratorEnumNewEgg          PostOrdersOrderRequestV2IntegratorEnum = "NewEgg"
	PostOrdersOrderRequestV2IntegratorEnumNexternal       PostOrdersOrderRequestV2IntegratorEnum = "Nexternal"
	PostOrdersOrderRequestV2IntegratorEnumNuOrder         PostOrdersOrderRequestV2IntegratorEnum = "NuOrder"
	PostOrdersOrderRequestV2IntegratorEnumOpencart        PostOrdersOrderRequestV2IntegratorEnum = "Opencart"
	PostOrdersOrderRequestV2IntegratorEnumOrderWave       PostOrdersOrderRequestV2IntegratorEnum = "OrderWave"
	PostOrdersOrderRequestV2IntegratorEnumOsCommerce1     PostOrdersOrderRequestV2IntegratorEnum = "osCommerce1"
	PostOrdersOrderRequestV2IntegratorEnumOverstock       PostOrdersOrderRequestV2IntegratorEnum = "Overstock"
	PostOrdersOrderRequestV2IntegratorEnumPayPal          PostOrdersOrderRequestV2IntegratorEnum = "PayPal"
	PostOrdersOrderRequestV2IntegratorEnumPrestaShop      PostOrdersOrderRequestV2IntegratorEnum = "PrestaShop"
	PostOrdersOrderRequestV2IntegratorEnumPricefalls      PostOrdersOrderRequestV2IntegratorEnum = "Pricefalls"
	PostOrdersOrderRequestV2IntegratorEnumQuickbooks      PostOrdersOrderRequestV2IntegratorEnum = "Quickbooks"
	PostOrdersOrderRequestV2IntegratorEnumRakuten         PostOrdersOrderRequestV2IntegratorEnum = "Rakuten"
	PostOrdersOrderRequestV2IntegratorEnumSears           PostOrdersOrderRequestV2IntegratorEnum = "Sears"
	PostOrdersOrderRequestV2IntegratorEnumSellbrite       PostOrdersOrderRequestV2IntegratorEnum = "Sellbrite"
	PostOrdersOrderRequestV2IntegratorEnumSellerCloud     PostOrdersOrderRequestV2IntegratorEnum = "SellerCloud"
	PostOrdersOrderRequestV2IntegratorEnumShipstation     PostOrdersOrderRequestV2IntegratorEnum = "Shipstation"
	PostOrdersOrderRequestV2IntegratorEnumShopify         PostOrdersOrderRequestV2IntegratorEnum = "Shopify"
	PostOrdersOrderRequestV2IntegratorEnumSkubana         PostOrdersOrderRequestV2IntegratorEnum = "Skubana"
	PostOrdersOrderRequestV2IntegratorEnumSolidCommerce   PostOrdersOrderRequestV2IntegratorEnum = "SolidCommerce"
	PostOrdersOrderRequestV2IntegratorEnumSparkPay        PostOrdersOrderRequestV2IntegratorEnum = "SparkPay"
	PostOrdersOrderRequestV2IntegratorEnumSpreeCommerce   PostOrdersOrderRequestV2IntegratorEnum = "SpreeCommerce"
	PostOrdersOrderRequestV2IntegratorEnumSpsCommerce     PostOrdersOrderRequestV2IntegratorEnum = "spsCommerce"
	PostOrdersOrderRequestV2IntegratorEnumStitchLabs      PostOrdersOrderRequestV2IntegratorEnum = "StitchLabs"
	PostOrdersOrderRequestV2IntegratorEnumStoneEdge       PostOrdersOrderRequestV2IntegratorEnum = "StoneEdge"
	PostOrdersOrderRequestV2IntegratorEnumTradeGecko      PostOrdersOrderRequestV2IntegratorEnum = "TradeGecko"
	PostOrdersOrderRequestV2IntegratorEnumUltraCart       PostOrdersOrderRequestV2IntegratorEnum = "UltraCart"
	PostOrdersOrderRequestV2IntegratorEnumVolusion        PostOrdersOrderRequestV2IntegratorEnum = "Volusion"
	PostOrdersOrderRequestV2IntegratorEnumVtex            PostOrdersOrderRequestV2IntegratorEnum = "VTEX"
	PostOrdersOrderRequestV2IntegratorEnumWalmart         PostOrdersOrderRequestV2IntegratorEnum = "Walmart"
	PostOrdersOrderRequestV2IntegratorEnumWooCommerce     PostOrdersOrderRequestV2IntegratorEnum = "WooCommerce"
	PostOrdersOrderRequestV2IntegratorEnumYahoo           PostOrdersOrderRequestV2IntegratorEnum = "Yahoo"
)

func (e PostOrdersOrderRequestV2IntegratorEnum) ToPointer() *PostOrdersOrderRequestV2IntegratorEnum {
	return &e
}

func (e *PostOrdersOrderRequestV2IntegratorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "1ShoppingCart":
		fallthrough
	case "3dCart":
		fallthrough
	case "AdobeBC":
		fallthrough
	case "AmazonAU":
		fallthrough
	case "AmazonEU":
		fallthrough
	case "AmazonNA":
		fallthrough
	case "BigCommerce":
		fallthrough
	case "BrandBoom":
		fallthrough
	case "BrightPearl":
		fallthrough
	case "BuyGoods":
		fallthrough
	case "Celery":
		fallthrough
	case "ChannelAdvisor":
		fallthrough
	case "Clickbank":
		fallthrough
	case "CommerceHub":
		fallthrough
	case "Custom":
		fallthrough
	case "Demandware":
		fallthrough
	case "Ebay":
		fallthrough
	case "Ecwid":
		fallthrough
	case "Etsy":
		fallthrough
	case "FoxyCart":
		fallthrough
	case "Goodsie":
		fallthrough
	case "Infusionsoft":
		fallthrough
	case "Konnektive":
		fallthrough
	case "LimeLight":
		fallthrough
	case "Linio":
		fallthrough
	case "Linnworks":
		fallthrough
	case "Magento":
		fallthrough
	case "Netsuite":
		fallthrough
	case "NewEgg":
		fallthrough
	case "Nexternal":
		fallthrough
	case "NuOrder":
		fallthrough
	case "Opencart":
		fallthrough
	case "OrderWave":
		fallthrough
	case "osCommerce1":
		fallthrough
	case "Overstock":
		fallthrough
	case "PayPal":
		fallthrough
	case "PrestaShop":
		fallthrough
	case "Pricefalls":
		fallthrough
	case "Quickbooks":
		fallthrough
	case "Rakuten":
		fallthrough
	case "Sears":
		fallthrough
	case "Sellbrite":
		fallthrough
	case "SellerCloud":
		fallthrough
	case "Shipstation":
		fallthrough
	case "Shopify":
		fallthrough
	case "Skubana":
		fallthrough
	case "SolidCommerce":
		fallthrough
	case "SparkPay":
		fallthrough
	case "SpreeCommerce":
		fallthrough
	case "spsCommerce":
		fallthrough
	case "StitchLabs":
		fallthrough
	case "StoneEdge":
		fallthrough
	case "TradeGecko":
		fallthrough
	case "UltraCart":
		fallthrough
	case "Volusion":
		fallthrough
	case "VTEX":
		fallthrough
	case "Walmart":
		fallthrough
	case "WooCommerce":
		fallthrough
	case "Yahoo":
		*e = PostOrdersOrderRequestV2IntegratorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostOrdersOrderRequestV2IntegratorEnum: %v", v)
	}
}

type PostOrdersOrderRequestV2Items struct {
	// Using USD, a per unit value of a single SKU. If your declaring a kit this is the sum total for a single kit. In both scenarios we will multiply the `declaredValue` against the `quantity` for customs declaration.
	DeclaredValue string `json:"declaredValue"`
	Quantity      int64  `json:"quantity"`
	Sku           string `json:"sku"`
}

type PostOrdersOrderRequestV2ConsigneeNewV2 struct {
	// Address Line 1
	Address1 string `json:"address1"`
	// Address Line 2
	Address2 *string `json:"address2,omitempty"`
	// City
	AddressLocality string `json:"addressLocality"`
	// Province / State
	AddressRegion string  `json:"addressRegion"`
	CompanyName   *string `json:"companyName,omitempty"`
	// Country, for best results please provide the two character ISO code
	Country string `json:"country"`
	// Email, required for international shipments
	Email     string `json:"email"`
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	// Phone number, required for international shipments
	Phone string `json:"phone"`
	// Postal Code / Zip
	PostalCode *string `json:"postalCode,omitempty"`
}

// PostOrdersOrderRequestV2Warehouse - We automatically select a warehouse based on inventory availability, requested carrier and delivery schedule, and carrier cost. You may however override this process. Because this is not recommended please inform your AE prior to using so they may enable this feature.
type PostOrdersOrderRequestV2Warehouse struct {
	ID *int64 `json:"id,omitempty"`
}

// PostOrdersOrderRequestV2 - The order to create
type PostOrdersOrderRequestV2 struct {
	// Use of this property requires special permission and must be discussed with your account executive; values are restricted while custom values need to be accepted by your AE.
	Integrator *PostOrdersOrderRequestV2IntegratorEnum `json:"integrator,omitempty"`
	Items      []PostOrdersOrderRequestV2Items         `json:"items"`
	// Necessary if you have a multitenancy account, otherwise we will associate the order with your account
	MerchantID *int64 `json:"merchantId,omitempty"`
	// Unique ID provided by the merchant
	MerchantOrderID string                                 `json:"merchantOrderId"`
	Notes           *string                                `json:"notes,omitempty"`
	Recipient       PostOrdersOrderRequestV2ConsigneeNewV2 `json:"recipient"`
	// Custom for you, it will be mapped to an actual method within the OMS UI
	ShippingMethod string `json:"shippingMethod"`
	// We automatically select a warehouse based on inventory availability, requested carrier and delivery schedule, and carrier cost. You may however override this process. Because this is not recommended please inform your AE prior to using so they may enable this feature.
	Warehouse *PostOrdersOrderRequestV2Warehouse `json:"warehouse,omitempty"`
}

// PostOrdersErrorStandardWithContextV2 - Conflict
type PostOrdersErrorStandardWithContextV2 struct {
	Context []map[string]interface{} `json:"context,omitempty"`
	Message *string                  `json:"message,omitempty"`
}

// PostOrdersOrderResponseV2StatusEventV2StatusTypeV2ActionRequiredBy - Responsibility for resolving this issue
type PostOrdersOrderResponseV2StatusEventV2StatusTypeV2ActionRequiredBy struct {
	ID *int64 `json:"id,omitempty"`
	// Human readable description of responsible party to resolve the issue
	Name *string `json:"name,omitempty"`
}

type PostOrdersOrderResponseV2StatusEventV2StatusTypeV2Stage struct {
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
}

type PostOrdersOrderResponseV2StatusEventV2StatusTypeV2State struct {
	Code *string `json:"code,omitempty"`
	Name *string `json:"name,omitempty"`
}

type PostOrdersOrderResponseV2StatusEventV2StatusTypeV2 struct {
	// Responsibility for resolving this issue
	ActionRequiredBy *PostOrdersOrderResponseV2StatusEventV2StatusTypeV2ActionRequiredBy `json:"actionRequiredBy,omitempty"`
	// Code, see [status codes](#section/Getting-Started/Status-Codes)
	Code       string  `json:"code"`
	Detail     *string `json:"detail,omitempty"`
	DetailCode string  `json:"detailCode"`
	// Depricated, use code instead
	ID *int64 `json:"id,omitempty"`
	// Depricated, does this status event close the order
	IsClosed *bool `json:"isClosed,omitempty"`
	// Depricated, use stage/state instead
	Name *string `json:"name,omitempty"`
	// Depricated
	Reason *string                                                 `json:"reason,omitempty"`
	Stage  PostOrdersOrderResponseV2StatusEventV2StatusTypeV2Stage `json:"stage"`
	State  PostOrdersOrderResponseV2StatusEventV2StatusTypeV2State `json:"state"`
}

type PostOrdersOrderResponseV2StatusEventV2 struct {
	CreatedBy *shared.OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy `json:"createdBy,omitempty"`
	// DateTime of Status Event
	Date *time.Time `json:"date,omitempty"`
	ID   int64      `json:"id"`
	// Explanation for status
	Reason *string                                             `json:"reason,omitempty"`
	Status *PostOrdersOrderResponseV2StatusEventV2StatusTypeV2 `json:"status,omitempty"`
}

type PostOrdersOrderResponseV2MerchantV2 struct {
	ID int64 `json:"id"`
	// Merchant Company Name
	Name string `json:"name"`
}

type PostOrdersOrderResponseV2ConsigneeV2IsoCountryV2 struct {
	ID *int64 `json:"id,omitempty"`
	// Two character ISO code
	Iso2 *string `json:"iso2,omitempty"`
	// Country Name
	Name *string `json:"name,omitempty"`
}

type PostOrdersOrderResponseV2ConsigneeV2 struct {
	Address1 string  `json:"address1"`
	Address2 *string `json:"address2,omitempty"`
	// City
	AddressLocality string `json:"addressLocality"`
	// Province / State
	AddressRegion string  `json:"addressRegion"`
	CompanyName   *string `json:"companyName,omitempty"`
	// Ideally provide the two character ISO code
	Country   string                                            `json:"country"`
	Email     *string                                           `json:"email,omitempty"`
	FirstName string                                            `json:"firstName"`
	ID        int64                                             `json:"id"`
	Iso       *PostOrdersOrderResponseV2ConsigneeV2IsoCountryV2 `json:"iso,omitempty"`
	LastName  string                                            `json:"lastName"`
	Phone     *string                                           `json:"phone,omitempty"`
	// Postal Code / Zip
	PostalCode string                                                                                               `json:"postalCode"`
	UpdatedAt  *time.Time                                                                                           `json:"updatedAt,omitempty"`
	UpdatedBy  *shared.OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy `json:"updatedBy,omitempty"`
}

type PostOrdersOrderResponseV2ParentOrder struct {
	// Reference to parent `id` if order was grouped
	ID *int64 `json:"id,omitempty"`
}

type PostOrdersOrderResponseV2TrackingNumberV2CarrierSimpleV2 struct {
	ID int64 `json:"id"`
}

type PostOrdersOrderResponseV2TrackingNumberV2 struct {
	// The computer readable alternative to the human readable
	BarcodeScanValue *string                                                   `json:"barcodeScanValue,omitempty"`
	Carrier          *PostOrdersOrderResponseV2TrackingNumberV2CarrierSimpleV2 `json:"carrier,omitempty"`
	// The human readable tracking number recipients (consignee) expect
	Value *string `json:"value,omitempty"`
}

type PostOrdersOrderResponseV2WarehouseV2 struct {
	ID int64 `json:"id"`
}

// PostOrdersOrderResponseV2 - Order Created
type PostOrdersOrderResponseV2 struct {
	CurrentStatus PostOrdersOrderResponseV2StatusEventV2 `json:"currentStatus"`
	// DateTime order departed an FDC warehouse
	DepartDate *time.Time `json:"departDate,omitempty"`
	// DateTime order was dispatched for fulfillment by FDC
	DispatchDate *time.Time `json:"dispatchDate,omitempty"`
	// FDC ID for this order
	ID       int64                               `json:"id"`
	Merchant PostOrdersOrderResponseV2MerchantV2 `json:"merchant"`
	// Merchant provided ID
	MerchantOrderID string `json:"merchantOrderId"`
	// Requested ship method
	MerchantShippingMethod string                                `json:"merchantShippingMethod"`
	OriginalConsignee      PostOrdersOrderResponseV2ConsigneeV2  `json:"originalConsignee"`
	ParentOrder            *PostOrdersOrderResponseV2ParentOrder `json:"parentOrder,omitempty"`
	// Merchant provided PO#
	PurchaseOrderNum *string `json:"purchaseOrderNum,omitempty"`
	// DateTime order was recorded by FDC
	RecordedOn         time.Time                                                                                `json:"recordedOn"`
	TrackingNumbers    []PostOrdersOrderResponseV2TrackingNumberV2                                              `json:"trackingNumbers,omitempty"`
	ValidatedConsignee shared.OneordersPostResponses201ContentApplication1jsonSchemaPropertiesOriginalConsignee `json:"validatedConsignee"`
	Warehouse          *PostOrdersOrderResponseV2WarehouseV2                                                    `json:"warehouse,omitempty"`
}

type PostOrdersResponse struct {
	ContentType string
	// Conflict
	ErrorStandardWithContextV2 *PostOrdersErrorStandardWithContextV2
	// Order Created
	OrderResponseV2 *PostOrdersOrderResponseV2
	StatusCode      int
	RawResponse     *http.Response
	// Invalid order object
	OneordersGetResponses404ContentApplication1jsonSchema *shared.OneordersGetResponses404ContentApplication1jsonSchema
}
