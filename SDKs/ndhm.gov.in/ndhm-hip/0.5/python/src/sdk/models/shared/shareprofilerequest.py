"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import identifier as shared_identifier
from ..shared import patientaddress as shared_patientaddress
from ..shared import patientgender_enum as shared_patientgender_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShareProfileRequestPatientUserDemographics:
    
    gender: shared_patientgender_enum.PatientGenderEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gender') }})  
    health_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('healthId') }})  
    health_id_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('healthIdNumber') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    year_of_birth: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('yearOfBirth') }})  
    address: Optional[shared_patientaddress.PatientAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    day_of_birth: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfBirth'), 'exclude': lambda f: f is None }})  
    identifiers: Optional[list[shared_identifier.Identifier]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identifiers'), 'exclude': lambda f: f is None }})  
    month_of_birth: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monthOfBirth'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShareProfileRequestPatient:
    
    user_demographics: ShareProfileRequestPatientUserDemographics = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userDemographics') }})  
    hip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hipCode'), 'exclude': lambda f: f is None }})
    r"""additional details about HIP retrieved after scanning QR."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ShareProfileRequest:
    
    patient: ShareProfileRequestPatient = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('patient') }})  
    request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId') }})
    r"""a nonce, unique for each HTTP request."""  
    timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ"""  
    