/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SlaDomainSummary - Summary of newly created SLA Domain.
 */
public class SlaDomainSummary {
    @JsonProperty("allowedBackupWindows")
    public BackupWindow[] allowedBackupWindows;

    public SlaDomainSummary withAllowedBackupWindows(BackupWindow[] allowedBackupWindows) {
        this.allowedBackupWindows = allowedBackupWindows;
        return this;
    }
    
    /**
     * Specification for archival locations on this SLA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archivalSpecs")
    public ArchivalSpec[] archivalSpecs;

    public SlaDomainSummary withArchivalSpecs(ArchivalSpec[] archivalSpecs) {
        this.archivalSpecs = archivalSpecs;
        return this;
    }
    
    @JsonProperty("firstFullAllowedBackupWindows")
    public BackupWindow[] firstFullAllowedBackupWindows;

    public SlaDomainSummary withFirstFullAllowedBackupWindows(BackupWindow[] firstFullAllowedBackupWindows) {
        this.firstFullAllowedBackupWindows = firstFullAllowedBackupWindows;
        return this;
    }
    
    @JsonProperty("frequencies")
    public SlaFrequency[] frequencies;

    public SlaDomainSummary withFrequencies(SlaFrequency[] frequencies) {
        this.frequencies = frequencies;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public SlaDomainSummary withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("isDefault")
    public Boolean isDefault;

    public SlaDomainSummary withIsDefault(Boolean isDefault) {
        this.isDefault = isDefault;
        return this;
    }
    
    /**
     * A Boolean value that specifies whether protection for all the snappables that are protected by the specified SLA Domain is paused. When the value is 'true' protection is paused.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPaused")
    public Boolean isPaused;

    public SlaDomainSummary withIsPaused(Boolean isPaused) {
        this.isPaused = isPaused;
        return this;
    }
    
    /**
     * Boolean value that identifies a Retention Lock SLA Domain. Value is true when an SLA Domain is Retention Locked and false when it is not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRetentionLocked")
    public Boolean isRetentionLocked;

    public SlaDomainSummary withIsRetentionLocked(Boolean isRetentionLocked) {
        this.isRetentionLocked = isRetentionLocked;
        return this;
    }
    
    /**
     * Retention limit for snapshots on the local Rubrik system. If none, they will remain as long as SLA requires.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localRetentionLimit")
    public Long localRetentionLimit;

    public SlaDomainSummary withLocalRetentionLimit(Long localRetentionLimit) {
        this.localRetentionLimit = localRetentionLimit;
        return this;
    }
    
    /**
     * Maximum limit for snapshots to be retained on the local Rubrik system. For local sla, it would be max of frequencies but for remote sla, it would be the retentionLimit set on the replication target location. (Local location is the replication target location for remote sla).
     */
    @JsonProperty("maxLocalRetentionLimit")
    public Long maxLocalRetentionLimit;

    public SlaDomainSummary withMaxLocalRetentionLimit(Long maxLocalRetentionLimit) {
        this.maxLocalRetentionLimit = maxLocalRetentionLimit;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public SlaDomainSummary withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of actively protected databases under this SLA domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numDbs")
    public Integer numDbs;

    public SlaDomainSummary withNumDbs(Integer numDbs) {
        this.numDbs = numDbs;
        return this;
    }
    
    /**
     * The number of EC2 instances protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numEc2Instances")
    public Integer numEc2Instances;

    public SlaDomainSummary withNumEc2Instances(Integer numEc2Instances) {
        this.numEc2Instances = numEc2Instances;
        return this;
    }
    
    /**
     * The number of filesets protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numFilesets")
    public Integer numFilesets;

    public SlaDomainSummary withNumFilesets(Integer numFilesets) {
        this.numFilesets = numFilesets;
        return this;
    }
    
    /**
     * The number of Hyper-V virtual machines protected under this SLA domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numHypervVms")
    public Integer numHypervVms;

    public SlaDomainSummary withNumHypervVms(Integer numHypervVms) {
        this.numHypervVms = numHypervVms;
        return this;
    }
    
    /**
     * The number of Linux servers with filesets protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numLinuxHosts")
    public Integer numLinuxHosts;

    public SlaDomainSummary withNumLinuxHosts(Integer numLinuxHosts) {
        this.numLinuxHosts = numLinuxHosts;
        return this;
    }
    
    /**
     * The number of Managed volumes protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numManagedVolumes")
    public Integer numManagedVolumes;

    public SlaDomainSummary withNumManagedVolumes(Integer numManagedVolumes) {
        this.numManagedVolumes = numManagedVolumes;
        return this;
    }
    
    /**
     * The number of Nutanix virtual machines protected under this SLA domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numNutanixVms")
    public Integer numNutanixVms;

    public SlaDomainSummary withNumNutanixVms(Integer numNutanixVms) {
        this.numNutanixVms = numNutanixVms;
        return this;
    }
    
    /**
     * The number of actively protected oracle databases under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numOracleDbs")
    public Integer numOracleDbs;

    public SlaDomainSummary withNumOracleDbs(Integer numOracleDbs) {
        this.numOracleDbs = numOracleDbs;
        return this;
    }
    
    /**
     * The total number of protected ojects under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numProtectedObjects")
    public Integer numProtectedObjects;

    public SlaDomainSummary withNumProtectedObjects(Integer numProtectedObjects) {
        this.numProtectedObjects = numProtectedObjects;
        return this;
    }
    
    /**
     * The number of shares protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numShares")
    public Integer numShares;

    public SlaDomainSummary withNumShares(Integer numShares) {
        this.numShares = numShares;
        return this;
    }
    
    /**
     * The number of storage array volume groups protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numStorageArrayVolumeGroups")
    public Integer numStorageArrayVolumeGroups;

    public SlaDomainSummary withNumStorageArrayVolumeGroups(Integer numStorageArrayVolumeGroups) {
        this.numStorageArrayVolumeGroups = numStorageArrayVolumeGroups;
        return this;
    }
    
    /**
     * The number of vApps protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numVcdVapps")
    public Integer numVcdVapps;

    public SlaDomainSummary withNumVcdVapps(Integer numVcdVapps) {
        this.numVcdVapps = numVcdVapps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numVms")
    public Integer numVms;

    public SlaDomainSummary withNumVms(Integer numVms) {
        this.numVms = numVms;
        return this;
    }
    
    /**
     * The number of Windows servers with filesets protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numWindowsHosts")
    public Integer numWindowsHosts;

    public SlaDomainSummary withNumWindowsHosts(Integer numWindowsHosts) {
        this.numWindowsHosts = numWindowsHosts;
        return this;
    }
    
    /**
     * The number of Windows volume groups protected under this SLA Domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numWindowsVolumeGroups")
    public Integer numWindowsVolumeGroups;

    public SlaDomainSummary withNumWindowsVolumeGroups(Integer numWindowsVolumeGroups) {
        this.numWindowsVolumeGroups = numWindowsVolumeGroups;
        return this;
    }
    
    @JsonProperty("primaryClusterId")
    public String primaryClusterId;

    public SlaDomainSummary withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Specification for replication locations on this SLA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationSpecs")
    public ReplicationSpec[] replicationSpecs;

    public SlaDomainSummary withReplicationSpecs(ReplicationSpec[] replicationSpecs) {
        this.replicationSpecs = replicationSpecs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uiColor")
    public String uiColor;

    public SlaDomainSummary withUiColor(String uiColor) {
        this.uiColor = uiColor;
        return this;
    }
    
    public SlaDomainSummary(@JsonProperty("allowedBackupWindows") BackupWindow[] allowedBackupWindows, @JsonProperty("firstFullAllowedBackupWindows") BackupWindow[] firstFullAllowedBackupWindows, @JsonProperty("frequencies") SlaFrequency[] frequencies, @JsonProperty("id") String id, @JsonProperty("isDefault") Boolean isDefault, @JsonProperty("maxLocalRetentionLimit") Long maxLocalRetentionLimit, @JsonProperty("name") String name, @JsonProperty("primaryClusterId") String primaryClusterId) {
        this.allowedBackupWindows = allowedBackupWindows;
        this.firstFullAllowedBackupWindows = firstFullAllowedBackupWindows;
        this.frequencies = frequencies;
        this.id = id;
        this.isDefault = isDefault;
        this.maxLocalRetentionLimit = maxLocalRetentionLimit;
        this.name = name;
        this.primaryClusterId = primaryClusterId;
  }
}
