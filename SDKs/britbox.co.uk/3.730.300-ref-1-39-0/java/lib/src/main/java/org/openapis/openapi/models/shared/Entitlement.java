/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Entitlement - The base type for both Offer and Entitlement.
 */
public class Entitlement {
    /**
     * The date of activation. If no date is defined the entitlement has not be activated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("activationDate")
    public OffsetDateTime activationDate;

    public Entitlement withActivationDate(OffsetDateTime activationDate) {
        this.activationDate = activationDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public ClassificationSummary classification;

    public Entitlement withClassification(ClassificationSummary classification) {
        this.classification = classification;
        return this;
    }
    
    /**
     * The date the entitlement was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDate")
    public OffsetDateTime creationDate;

    public Entitlement withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    @JsonProperty("deliveryType")
    public EntitlementDeliveryTypeEnum deliveryType;

    public Entitlement withDeliveryType(EntitlementDeliveryTypeEnum deliveryType) {
        this.deliveryType = deliveryType;
        return this;
    }
    
    /**
     * Any specific playback exclusion rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exclusionRules")
    public ExclusionRule[] exclusionRules;

    public Entitlement withExclusionRules(ExclusionRule[] exclusionRules) {
        this.exclusionRules = exclusionRules;
        return this;
    }
    
    /**
     * The date the entitlement expires.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expirationDate")
    public OffsetDateTime expirationDate;

    public Entitlement withExpirationDate(OffsetDateTime expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    /**
     * The id of the item this entitlement is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemId")
    public String itemId;

    public Entitlement withItemId(String itemId) {
        this.itemId = itemId;
        return this;
    }
    
    /**
     * The type of item this entitlement is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemType")
    public EntitlementItemTypeEnum itemType;

    public Entitlement withItemType(EntitlementItemTypeEnum itemType) {
        this.itemType = itemType;
        return this;
    }
    
    /**
     * The maximum number of allowed downloads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDownloads")
    public Integer maxDownloads;

    public Entitlement withMaxDownloads(Integer maxDownloads) {
        this.maxDownloads = maxDownloads;
        return this;
    }
    
    /**
     * The maximum number of allowed plays.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxPlays")
    public Integer maxPlays;

    public Entitlement withMaxPlays(Integer maxPlays) {
        this.maxPlays = maxPlays;
        return this;
    }
    
    /**
     * The duration of the entitled media.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediaDuration")
    public Integer mediaDuration;

    public Entitlement withMediaDuration(Integer mediaDuration) {
        this.mediaDuration = mediaDuration;
        return this;
    }
    
    @JsonProperty("ownership")
    public EntitlementOwnershipEnum ownership;

    public Entitlement withOwnership(EntitlementOwnershipEnum ownership) {
        this.ownership = ownership;
        return this;
    }
    
    /**
     * The id of the plan this entitlement is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("planId")
    public String planId;

    public Entitlement withPlanId(String planId) {
        this.planId = planId;
        return this;
    }
    
    /**
     * How many times the media has been played.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playCount")
    public Integer playCount;

    public Entitlement withPlayCount(Integer playCount) {
        this.playCount = playCount;
        return this;
    }
    
    /**
     * The length of time in minutes which the rental will last once played for the first time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playPeriod")
    public Integer playPeriod;

    public Entitlement withPlayPeriod(Integer playPeriod) {
        this.playPeriod = playPeriod;
        return this;
    }
    
    /**
     * How many more downloads of this media are available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remainingDownloads")
    public Integer remainingDownloads;

    public Entitlement withRemainingDownloads(Integer remainingDownloads) {
        this.remainingDownloads = remainingDownloads;
        return this;
    }
    
    /**
     * The length of time in minutes which the rental will last once purchased.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rentalPeriod")
    public Integer rentalPeriod;

    public Entitlement withRentalPeriod(Integer rentalPeriod) {
        this.rentalPeriod = rentalPeriod;
        return this;
    }
    
    @JsonProperty("resolution")
    public EntitlementResolutionEnum resolution;

    public Entitlement withResolution(EntitlementResolutionEnum resolution) {
        this.resolution = resolution;
        return this;
    }
    
    @JsonProperty("scopes")
    public String[] scopes;

    public Entitlement withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    public Entitlement(@JsonProperty("deliveryType") EntitlementDeliveryTypeEnum deliveryType, @JsonProperty("ownership") EntitlementOwnershipEnum ownership, @JsonProperty("resolution") EntitlementResolutionEnum resolution, @JsonProperty("scopes") String[] scopes) {
        this.deliveryType = deliveryType;
        this.ownership = ownership;
        this.resolution = resolution;
        this.scopes = scopes;
  }
}
