/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LaunchTemplateSpecification } from "./launchtemplatespecification";
import { LifecycleHookSpecification } from "./lifecyclehookspecification";
import { MixedInstancesPolicy } from "./mixedinstancespolicy";
import { Tag } from "./tag";
import { TrafficSourceIdentifier } from "./trafficsourceidentifier";

export class CreateAutoScalingGroupType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  autoScalingGroupName: string;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  capacityRebalance?: boolean;

  @SpeakeasyMetadata()
  context?: string;

  @SpeakeasyMetadata()
  defaultCooldown?: number;

  @SpeakeasyMetadata()
  defaultInstanceWarmup?: number;

  @SpeakeasyMetadata()
  desiredCapacity?: number;

  @SpeakeasyMetadata()
  desiredCapacityType?: string;

  @SpeakeasyMetadata()
  healthCheckGracePeriod?: number;

  @SpeakeasyMetadata()
  healthCheckType?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  launchConfigurationName?: string;

  @SpeakeasyMetadata()
  launchTemplate?: LaunchTemplateSpecification;

  @SpeakeasyMetadata({ elemType: LifecycleHookSpecification })
  lifecycleHookSpecificationList?: LifecycleHookSpecification[];

  @SpeakeasyMetadata()
  loadBalancerNames?: string[];

  @SpeakeasyMetadata()
  maxInstanceLifetime?: number;

  @SpeakeasyMetadata()
  maxSize: number;

  @SpeakeasyMetadata()
  minSize: number;

  @SpeakeasyMetadata()
  mixedInstancesPolicy?: MixedInstancesPolicy;

  @SpeakeasyMetadata()
  newInstancesProtectedFromScaleIn?: boolean;

  @SpeakeasyMetadata()
  placementGroup?: string;

  @SpeakeasyMetadata()
  serviceLinkedRoleARN?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  tags?: Tag[];

  @SpeakeasyMetadata()
  targetGroupARNs?: string[];

  @SpeakeasyMetadata()
  terminationPolicies?: string[];

  @SpeakeasyMetadata({ elemType: TrafficSourceIdentifier })
  trafficSources?: TrafficSourceIdentifier[];

  @SpeakeasyMetadata()
  vpcZoneIdentifier?: string;
}
