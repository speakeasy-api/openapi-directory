// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TeamGameLogsBySeasonFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type TeamGameLogsBySeasonFormatEnum string

const (
	TeamGameLogsBySeasonFormatEnumJSON TeamGameLogsBySeasonFormatEnum = "JSON"
	TeamGameLogsBySeasonFormatEnumXML  TeamGameLogsBySeasonFormatEnum = "XML"
)

func (e *TeamGameLogsBySeasonFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "JSON":
		fallthrough
	case "XML":
		*e = TeamGameLogsBySeasonFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamGameLogsBySeasonFormatEnum: %s", s)
	}
}

type TeamGameLogsBySeasonRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format TeamGameLogsBySeasonFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// How many games to return. Example <code>all</code>, <code>10</code>, <code>25</code>
	Numberofgames string `pathParam:"style=simple,explode=false,name=numberofgames"`
	// Season to get games from. Example <code>2019POST</code>, <code>2020</code>
	Season string `pathParam:"style=simple,explode=false,name=season"`
	// Unique ID of team.  Example <code> 12 </code>
	Teamid string `pathParam:"style=simple,explode=false,name=teamid"`
}

type TeamGameLogsBySeasonResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	TeamGames   []shared.TeamGame
}
