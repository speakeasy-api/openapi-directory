/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class HookDeliveryRequest extends SpeakeasyBase {
  /**
   * The request headers sent with the webhook delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers: Record<string, any>;

  /**
   * The webhook payload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payload" })
  payload: Record<string, any>;
}

export class HookDeliveryResponse extends SpeakeasyBase {
  /**
   * The response headers received when the delivery was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers: Record<string, any>;

  /**
   * The response payload received.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payload" })
  payload: string;
}

/**
 * Delivery made by a webhook.
 */
export class HookDelivery extends SpeakeasyBase {
  /**
   * The type of activity for the event that triggered the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: string;

  /**
   * Time when the delivery was delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delivered_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deliveredAt: Date;

  /**
   * Time spent delivering.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: number;

  /**
   * The event that triggered the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event: string;

  /**
   * Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guid" })
  guid: string;

  /**
   * Unique identifier of the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The id of the GitHub App installation associated with this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installation_id" })
  installationId: number;

  /**
   * Whether the delivery is a redelivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redelivery" })
  redelivery: boolean;

  /**
   * The id of the repository associated with this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_id" })
  repositoryId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "request" })
  @Type(() => HookDeliveryRequest)
  request: HookDeliveryRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  @Type(() => HookDeliveryResponse)
  response: HookDeliveryResponse;

  /**
   * Description of the status of the attempted delivery
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * Status code received when delivery was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_code" })
  statusCode: number;

  /**
   * The URL target of the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
