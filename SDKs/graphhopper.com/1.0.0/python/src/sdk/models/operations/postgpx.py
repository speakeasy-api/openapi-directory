"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import gherror as shared_gherror
from ..shared import routeresponse as shared_routeresponse
from typing import Optional


@dataclasses.dataclass
class PostGPXRequest:
    
    gps_accuracy: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'gps_accuracy', 'style': 'form', 'explode': True }})
    r"""Specify the precision of a point, in meter"""  
    vehicle: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'vehicle', 'style': 'form', 'explode': True }})
    r"""Specify the vehicle profile like car"""  
    

@dataclasses.dataclass
class PostGPXResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    gh_error: Optional[shared_gherror.GHError] = dataclasses.field(default=None)
    r"""Unexpected Error"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    route_response: Optional[shared_routeresponse.RouteResponse] = dataclasses.field(default=None)
    r"""Routing Result"""  
    