/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



public class GetGroupLockSettings200ApplicationXML1ScheduleMeeting {
    /**
     * Determine how participants can join the audio portion of the meeting.
     */
    
    public Boolean audioType;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withAudioType(Boolean audioType) {
        this.audioType = audioType;
        return this;
    }
    
    /**
     * If the value is set to `true`, the meeting password will be encrypted and included in the join meeting link to allow participants to join with just one click without having to enter the password.
     *  
     */
    
    public Boolean embedPasswordInJoinLink;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withEmbedPasswordInJoinLink(Boolean embedPasswordInJoinLink) {
        this.embedPasswordInJoinLink = embedPasswordInJoinLink;
        return this;
    }
    
    /**
     * If join before host option is enabled for a personal meeting, then enforce password requirement.
     */
    
    public Boolean forcePmiJbhPassword;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withForcePmiJbhPassword(Boolean forcePmiJbhPassword) {
        this.forcePmiJbhPassword = forcePmiJbhPassword;
        return this;
    }
    
    /**
     * Start meetings with host video on.
     */
    
    public Boolean hostVideo;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withHostVideo(Boolean hostVideo) {
        this.hostVideo = hostVideo;
        return this;
    }
    
    /**
     * Allow participants to join the meeting before the host arrives
     */
    
    public Boolean joinBeforeHost;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withJoinBeforeHost(Boolean joinBeforeHost) {
        this.joinBeforeHost = joinBeforeHost;
        return this;
    }
    
    /**
     * Only authenticated users can join meetings
     */
    
    public Boolean meetingAuthentication;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withMeetingAuthentication(Boolean meetingAuthentication) {
        this.meetingAuthentication = meetingAuthentication;
        return this;
    }
    
    /**
     * Automatically mute all participants when they join the meeting.
     */
    
    public Boolean muteUponEntry;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withMuteUponEntry(Boolean muteUponEntry) {
        this.muteUponEntry = muteUponEntry;
        return this;
    }
    
    /**
     * Start meetings with participant video on.
     */
    
    public Boolean participantVideo;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withParticipantVideo(Boolean participantVideo) {
        this.participantVideo = participantVideo;
        return this;
    }
    
    /**
     * Generate and send new passwords for newly scheduled or edited meetings.
     */
    
    public Boolean pstnPasswordProtected;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withPstnPasswordProtected(Boolean pstnPasswordProtected) {
        this.pstnPasswordProtected = pstnPasswordProtected;
        return this;
    }
    
    /**
     * Require password for instant meetings. If you use PMI for your instant meetings, this option will be disabled.
     */
    
    public Boolean requirePasswordForInstantMeetings;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForInstantMeetings(Boolean requirePasswordForInstantMeetings) {
        this.requirePasswordForInstantMeetings = requirePasswordForInstantMeetings;
        return this;
    }
    
    /**
     * Require participants to enter password for PMI meetings.
     */
    
    public Boolean requirePasswordForPmiMeetings;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForPmiMeetings(Boolean requirePasswordForPmiMeetings) {
        this.requirePasswordForPmiMeetings = requirePasswordForPmiMeetings;
        return this;
    }
    
    /**
     * This setting applies for regular meetings that do not use PMI. If enabled, a password will be generated while a host schedules a new meeting and participants will be required to enter the password before they can join the meeting.
     */
    
    public Boolean requirePasswordForSchedulingNewMeetings;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withRequirePasswordForSchedulingNewMeetings(Boolean requirePasswordForSchedulingNewMeetings) {
        this.requirePasswordForSchedulingNewMeetings = requirePasswordForSchedulingNewMeetings;
        return this;
    }
    
    /**
     * Receive desktop notification for upcoming meetings.
     */
    
    public Boolean upcomingMeetingReminder;
    public GetGroupLockSettings200ApplicationXML1ScheduleMeeting withUpcomingMeetingReminder(Boolean upcomingMeetingReminder) {
        this.upcomingMeetingReminder = upcomingMeetingReminder;
        return this;
    }
    
}
