"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2valuefrequency as shared_googleprivacydlpv2valuefrequency
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2CategoricalStatsHistogramBucket:
    r"""Histogram of value frequencies in the column."""
    
    bucket_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bucketSize'), 'exclude': lambda f: f is None }})
    r"""Total number of values in this bucket."""  
    bucket_value_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bucketValueCount'), 'exclude': lambda f: f is None }})
    r"""Total number of distinct values in this bucket."""  
    bucket_values: Optional[list[shared_googleprivacydlpv2valuefrequency.GooglePrivacyDlpV2ValueFrequency]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bucketValues'), 'exclude': lambda f: f is None }})
    r"""Sample of value frequencies in this bucket. The total number of values returned per bucket is capped at 20."""  
    value_frequency_lower_bound: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valueFrequencyLowerBound'), 'exclude': lambda f: f is None }})
    r"""Lower bound on the value frequency of the values in this bucket."""  
    value_frequency_upper_bound: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valueFrequencyUpperBound'), 'exclude': lambda f: f is None }})
    r"""Upper bound on the value frequency of the values in this bucket."""  
    