// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum - Optional. Item stock state. If provided, this overrides the stock state in Catalog for items in this event.
type GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum string

const (
	GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnumStockStateUnspecified GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum = "STOCK_STATE_UNSPECIFIED"
	GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnumInStock               GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum = "IN_STOCK"
	GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnumOutOfStock            GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum = "OUT_OF_STOCK"
	GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnumPreorder              GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum = "PREORDER"
	GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnumBackorder             GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum = "BACKORDER"
)

func (e *GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STOCK_STATE_UNSPECIFIED":
		fallthrough
	case "IN_STOCK":
		fallthrough
	case "OUT_OF_STOCK":
		fallthrough
	case "PREORDER":
		fallthrough
	case "BACKORDER":
		*e = GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum: %s", s)
	}
}

// GoogleCloudRecommendationengineV1beta1ProductDetail - Detailed product information associated with a user event.
type GoogleCloudRecommendationengineV1beta1ProductDetail struct {
	// Optional. Quantity of the products in stock when a user event happens. Optional. If provided, this overrides the available quantity in Catalog for this event. and can only be set if `stock_status` is set to `IN_STOCK`. Note that if an item is out of stock, you must set the `stock_state` field to be `OUT_OF_STOCK`. Leaving this field unspecified / as zero is not sufficient to mark the item out of stock.
	AvailableQuantity *int `json:"availableQuantity,omitempty"`
	// Optional. Currency code for price/costs. Use three-character ISO-4217 code. Required only if originalPrice or displayPrice is set.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Optional. Display price of the product (e.g. discounted price). If provided, this will override the display price in Catalog for this product.
	DisplayPrice *float32 `json:"displayPrice,omitempty"`
	// Required. Catalog item ID. UTF-8 encoded string with a length limit of 128 characters.
	ID *string `json:"id,omitempty"`
	// FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
	ItemAttributes *GoogleCloudRecommendationengineV1beta1FeatureMap `json:"itemAttributes,omitempty"`
	// Optional. Original price of the product. If provided, this will override the original price in Catalog for this product.
	OriginalPrice *float32 `json:"originalPrice,omitempty"`
	// Optional. Quantity of the product associated with the user event. For example, this field will be 2 if two products are added to the shopping cart for `add-to-cart` event. Required for `add-to-cart`, `add-to-list`, `remove-from-cart`, `checkout-start`, `purchase-complete`, `refund` event types.
	Quantity *int `json:"quantity,omitempty"`
	// Optional. Item stock state. If provided, this overrides the stock state in Catalog for items in this event.
	StockState *GoogleCloudRecommendationengineV1beta1ProductDetailStockStateEnum `json:"stockState,omitempty"`
}
