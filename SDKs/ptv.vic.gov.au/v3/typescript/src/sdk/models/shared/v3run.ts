/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { V3VehicleDescriptor } from "./v3vehicledescriptor";
import { V3VehiclePosition } from "./v3vehicleposition";
import { Expose, Type } from "class-transformer";

export class V3Run extends SpeakeasyBase {
  /**
   * Name of destination of run
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination_name" })
  destinationName?: string;

  /**
   * Direction of travel identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction_id" })
  directionId?: number;

  /**
   * The number of remaining skipped/express stations for the run/service from a stop
   */
  @SpeakeasyMetadata()
  @Expose({ name: "express_stop_count" })
  expressStopCount?: number;

  /**
   * stop_id of final stop of run
   */
  @SpeakeasyMetadata()
  @Expose({ name: "final_stop_id" })
  finalStopId?: number;

  /**
   * Geopath of the route
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geopath" })
  geopath?: Record<string, any>[];

  /**
   * Route identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "route_id" })
  routeId?: number;

  /**
   * Transport mode identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "route_type" })
  routeType?: number;

  /**
   * Numeric trip/service run identifier. Defaults to -1 when run identifier is Alphanumeric
   */
  @SpeakeasyMetadata()
  @Expose({ name: "run_id" })
  runId?: number;

  /**
   * Alphanumeric trip/service run identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "run_ref" })
  runRef?: string;

  /**
   * Chronological sequence of the trip/service run on the route in direction. Order ascendingly by this field to get chronological order (earliest first) of runs with the same route_id and direction_id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "run_sequence" })
  runSequence?: number;

  /**
   * Status of metropolitan train run; returns "scheduled" for other modes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vehicle_descriptor" })
  @Type(() => V3VehicleDescriptor)
  vehicleDescriptor?: V3VehicleDescriptor;

  @SpeakeasyMetadata()
  @Expose({ name: "vehicle_position" })
  @Type(() => V3VehiclePosition)
  vehiclePosition?: V3VehiclePosition;
}
