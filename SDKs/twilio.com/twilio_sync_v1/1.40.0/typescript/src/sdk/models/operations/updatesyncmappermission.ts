/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateSyncMapPermissionServerList = [
  "https://sync.twilio.com",
] as const;

export class UpdateSyncMapPermissionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateSyncMapPermissionUpdateSyncMapPermissionRequest extends SpeakeasyBase {
  /**
   * Whether the identity can delete the Sync Map. Default value is `false`.
   */
  @SpeakeasyMetadata({ data: "form, name=Manage" })
  manage: boolean;

  /**
   * Whether the identity can read the Sync Map and its Items. Default value is `false`.
   */
  @SpeakeasyMetadata({ data: "form, name=Read" })
  read: boolean;

  /**
   * Whether the identity can create, update, and delete Items in the Sync Map. Default value is `false`.
   */
  @SpeakeasyMetadata({ data: "form, name=Write" })
  write: boolean;
}

export class UpdateSyncMapPermissionRequest extends SpeakeasyBase {
  /**
   * The application-defined string that uniquely identifies the User's Sync Map Permission resource to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=Identity",
  })
  identity: string;

  /**
   * The SID of the Sync Map with the Sync Map Permission resource to update. Can be the Sync Map resource's `sid` or its `unique_name`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=MapSid",
  })
  mapSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateSyncMapPermissionUpdateSyncMapPermissionRequest;

  /**
   * The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Map Permission resource to update. Can be the Service's `sid` value or `default`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class UpdateSyncMapPermissionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  syncV1ServiceSyncMapSyncMapPermission?: shared.SyncV1ServiceSyncMapSyncMapPermission;
}
