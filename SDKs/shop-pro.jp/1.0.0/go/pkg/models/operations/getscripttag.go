// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetScriptTagSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetScriptTagRequest struct {
	// スクリプトタグID
	ScriptTagID int64 `pathParam:"style=simple,explode=false,name=scriptTagId"`
}

// GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum - スクリプトを出力するページ。
//
// - `all`: ショップページと注文完了ページの両方
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
// - `cart`: カートの途中のページ
type GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum string

const (
	GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnumAll        GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "all"
	GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnumShop       GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "shop"
	GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnumThanksPage GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "thanks_page"
	GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnumCart       GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "cart"
)

func (e GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) ToPointer() *GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum {
	return &e
}

func (e *GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "shop":
		fallthrough
	case "thanks_page":
		fallthrough
	case "cart":
		*e = GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum: %v", v)
	}
}

type GetScriptTag200ApplicationJSONScriptTag struct {
	// スクリプトを出力するページ。
	//
	// - `all`: ショップページと注文完了ページの両方
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	// - `cart`: カートの途中のページ
	//
	DisplayScope *GetScriptTag200ApplicationJSONScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトタグID
	ID *int64 `json:"id,omitempty"`
	// 作成日時
	MakeDate *int64 `json:"make_date,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
	// 更新日時
	UpdateDate *int64 `json:"update_date,omitempty"`
}

type GetScriptTag200ApplicationJSON struct {
	ScriptTag *GetScriptTag200ApplicationJSONScriptTag `json:"script_tag,omitempty"`
}

type GetScriptTagResponse struct {
	ContentType                          string
	StatusCode                           int
	RawResponse                          *http.Response
	GetScriptTag200ApplicationJSONObject *GetScriptTag200ApplicationJSON
}
