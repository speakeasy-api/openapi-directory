/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LdapAuthModuleConfig - Settings to authenticate users using a generic OAuth2 provider
 */
public class LdapAuthModuleConfig {
    /**
     * The admin password
     */
    @JsonProperty("adminPassword")
    public String adminPassword;

    public LdapAuthModuleConfig withAdminPassword(String adminPassword) {
        this.adminPassword = adminPassword;
        return this;
    }
    
    /**
     * The admin username
     */
    @JsonProperty("adminUsername")
    public String adminUsername;

    public LdapAuthModuleConfig withAdminUsername(String adminUsername) {
        this.adminUsername = adminUsername;
        return this;
    }
    
    /**
     * Description of the config
     */
    @JsonProperty("desc")
    public String desc;

    public LdapAuthModuleConfig withDesc(String desc) {
        this.desc = desc;
        return this;
    }
    
    /**
     * Field name to get email from user profile
     */
    @JsonProperty("emailField")
    public String emailField;

    public LdapAuthModuleConfig withEmailField(String emailField) {
        this.emailField = emailField;
        return this;
    }
    
    /**
     * Filter for groups
     */
    @JsonProperty("groupFilter")
    public String groupFilter;

    public LdapAuthModuleConfig withGroupFilter(String groupFilter) {
        this.groupFilter = groupFilter;
        return this;
    }
    
    /**
     * Unique id of the config
     */
    @JsonProperty("id")
    public String id;

    public LdapAuthModuleConfig withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the config
     */
    @JsonProperty("name")
    public String name;

    public LdapAuthModuleConfig withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Field name to get name from user profile
     */
    @JsonProperty("nameField")
    public String nameField;

    public LdapAuthModuleConfig withNameField(String nameField) {
        this.nameField = nameField;
        return this;
    }
    
    /**
     * Field name to get otoroshi metadata from. You can specify sub fields using | as separator
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otoroshiDataField")
    public String otoroshiDataField;

    public LdapAuthModuleConfig withOtoroshiDataField(String otoroshiDataField) {
        this.otoroshiDataField = otoroshiDataField;
        return this;
    }
    
    /**
     * LDAP search base
     */
    @JsonProperty("searchBase")
    public String searchBase;

    public LdapAuthModuleConfig withSearchBase(String searchBase) {
        this.searchBase = searchBase;
        return this;
    }
    
    /**
     * Filter for users
     */
    @JsonProperty("searchFilter")
    public String searchFilter;

    public LdapAuthModuleConfig withSearchFilter(String searchFilter) {
        this.searchFilter = searchFilter;
        return this;
    }
    
    /**
     * URL of the ldap server
     */
    @JsonProperty("serverUrl")
    public String serverUrl;

    public LdapAuthModuleConfig withServerUrl(String serverUrl) {
        this.serverUrl = serverUrl;
        return this;
    }
    
    /**
     * Max age of the session
     */
    @JsonProperty("sessionMaxAge")
    public Integer sessionMaxAge;

    public LdapAuthModuleConfig withSessionMaxAge(Integer sessionMaxAge) {
        this.sessionMaxAge = sessionMaxAge;
        return this;
    }
    
    /**
     * Type of settings. value is ldap
     */
    @JsonProperty("type")
    public String type;

    public LdapAuthModuleConfig withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * LDAP user base DN
     */
    @JsonProperty("userBase")
    public String userBase;

    public LdapAuthModuleConfig withUserBase(String userBase) {
        this.userBase = userBase;
        return this;
    }
    
    public LdapAuthModuleConfig(@JsonProperty("adminUsername") String adminUsername, @JsonProperty("adminPassword") String adminPassword, @JsonProperty("desc") String desc, @JsonProperty("emailField") String emailField, @JsonProperty("groupFilter") String groupFilter, @JsonProperty("id") String id, @JsonProperty("name") String name, @JsonProperty("nameField") String nameField, @JsonProperty("searchBase") String searchBase, @JsonProperty("searchFilter") String searchFilter, @JsonProperty("serverUrl") String serverUrl, @JsonProperty("sessionMaxAge") Integer sessionMaxAge, @JsonProperty("type") String type) {
        this.adminUsername = adminUsername;
        this.adminPassword = adminPassword;
        this.desc = desc;
        this.emailField = emailField;
        this.groupFilter = groupFilter;
        this.id = id;
        this.name = name;
        this.nameField = nameField;
        this.searchBase = searchBase;
        this.searchFilter = searchFilter;
        this.serverUrl = serverUrl;
        this.sessionMaxAge = sessionMaxAge;
        this.type = type;
  }
}
