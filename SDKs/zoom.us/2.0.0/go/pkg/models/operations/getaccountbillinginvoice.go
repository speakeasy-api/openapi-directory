// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
)

type GetAccountBillingInvoiceRequest struct {
	// The account ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The invoice ID.
	InvoiceID string `pathParam:"style=simple,explode=false,name=invoiceId"`
}

type GetAccountBillingInvoice200ApplicationXMLInvoiceItems struct {
	// Description for the charge.
	ChargeName *string
	// Identifier for the charge.
	ChargeNumber *string
	// Charge type.
	ChargeType *string
	// Billing end date.
	EndDate *types.Date
	// Quantity.
	Quantity *int64
	// Billing start date.
	StartDate *types.Date
	// Tax amount.
	TaxAmount *float64
	// Total amount.
	TotalAmount *float64
}

// GetAccountBillingInvoice200ApplicationXML - **HTTP Status Code:** `200`<br>
// Account billing invoice information returned.
type GetAccountBillingInvoice200ApplicationXML struct {
	// The remaining balance of the invoice after all payments, adjustments, and refunds are applied.
	//
	//
	Balance *float64
	// Billing currency.
	Currency *string
	// The date by which the payment for this invoice is due.
	//
	//
	DueDate *string
	// Unique identifier of the invoice.
	ID *string
	// The date when the invoice was generated.
	//
	InvoiceDate  *string
	InvoiceItems []GetAccountBillingInvoice200ApplicationXMLInvoiceItems
	// Invoice number.
	InvoiceNumber *string
	// Status of the invoice.
	Status *string
	// This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
	//
	TargetDate *string
	// Tax amount.
	TaxAmount *float64
	// Total invoice amount.
	TotalAmount *float64
}

type GetAccountBillingInvoice200ApplicationJSONInvoiceItems struct {
	// Description for the charge.
	ChargeName *string `json:"charge_name,omitempty"`
	// Identifier for the charge.
	ChargeNumber *string `json:"charge_number,omitempty"`
	// Charge type.
	ChargeType *string `json:"charge_type,omitempty"`
	// Billing end date.
	EndDate *types.Date `json:"end_date,omitempty"`
	// Quantity.
	Quantity *int64 `json:"quantity,omitempty"`
	// Billing start date.
	StartDate *types.Date `json:"start_date,omitempty"`
	// Tax amount.
	TaxAmount *float64 `json:"tax_amount,omitempty"`
	// Total amount.
	TotalAmount *float64 `json:"total_amount,omitempty"`
}

// GetAccountBillingInvoice200ApplicationJSON - **HTTP Status Code:** `200`<br>
// Account billing invoice information returned.
type GetAccountBillingInvoice200ApplicationJSON struct {
	// The remaining balance of the invoice after all payments, adjustments, and refunds are applied.
	//
	//
	Balance *float64 `json:"balance,omitempty"`
	// Billing currency.
	Currency *string `json:"currency,omitempty"`
	// The date by which the payment for this invoice is due.
	//
	//
	DueDate *string `json:"due_date,omitempty"`
	// Unique identifier of the invoice.
	ID *string `json:"id,omitempty"`
	// The date when the invoice was generated.
	//
	InvoiceDate  *string                                                  `json:"invoice_date,omitempty"`
	InvoiceItems []GetAccountBillingInvoice200ApplicationJSONInvoiceItems `json:"invoice_items,omitempty"`
	// Invoice number.
	InvoiceNumber *string `json:"invoice_number,omitempty"`
	// Status of the invoice.
	Status *string `json:"status,omitempty"`
	// This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in the invoice.
	//
	TargetDate *string `json:"target_date,omitempty"`
	// Tax amount.
	TaxAmount *float64 `json:"tax_amount,omitempty"`
	// Total invoice amount.
	TotalAmount *float64 `json:"total_amount,omitempty"`
}

type GetAccountBillingInvoiceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Account billing invoice information returned.
	GetAccountBillingInvoice200ApplicationJSONObject *GetAccountBillingInvoice200ApplicationJSON
}
