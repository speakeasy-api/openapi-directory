/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExpressionTypeEnum } from "./expressiontypeenum";
import { InputSerialization } from "./inputserialization";
import { OutputSerialization } from "./outputserialization";
import { Expose, Type } from "class-transformer";

/**
 * Contains information about the parameters used for a select.
 */
export class SelectParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Expression" })
  expression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpressionType" })
  expressionType?: ExpressionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "InputSerialization" })
  @Type(() => InputSerialization)
  inputSerialization?: InputSerialization;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputSerialization" })
  @Type(() => OutputSerialization)
  outputSerialization?: OutputSerialization;
}
