"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDSumInvoicesRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    before_vat: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'BeforeVAT', 'style': 'form', 'explode': True }})
    r"""amount before VAT"""  
    due_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'DueDate', 'style': 'form', 'explode': True }})
    r"""range date due payment"""  
    incl_vat: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'InclVat', 'style': 'form', 'explode': True }})
    r"""amount incl. VAT"""  
    invoice_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'InvoiceDate', 'style': 'form', 'explode': True }})
    r"""range date of invoice"""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Number', 'style': 'form', 'explode': True }})
    r"""Number of the invoice"""  
    payment_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'PaymentDate', 'style': 'form', 'explode': True }})
    r"""range date of payment"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDSumInvoices200ApplicationJSON:
    r"""Sum of the invoices of the folder"""
    
    before_vat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BeforeVAT'), 'exclude': lambda f: f is None }})  
    incl_vat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InclVAT'), 'exclude': lambda f: f is None }})  
    vat: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VAT'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDSumInvoicesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_sum_invoices_200_application_json_object: Optional[GetSpacesSpaceIDFoldersIDSumInvoices200ApplicationJSON] = dataclasses.field(default=None)
    r"""Sum of the invoices of the folder"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    