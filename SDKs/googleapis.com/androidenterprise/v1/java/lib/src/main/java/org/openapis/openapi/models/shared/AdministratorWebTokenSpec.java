/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AdministratorWebTokenSpec - Specification for a token used to generate iframes. The token specifies what data the admin is allowed to modify and the URI the iframe is allowed to communiate with.
 */
public class AdministratorWebTokenSpec {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("managedConfigurations")
    public AdministratorWebTokenSpecManagedConfigurations managedConfigurations;
    public AdministratorWebTokenSpec withManagedConfigurations(AdministratorWebTokenSpecManagedConfigurations managedConfigurations) {
        this.managedConfigurations = managedConfigurations;
        return this;
    }
    
    /**
     * The URI of the parent frame hosting the iframe. To prevent XSS, the iframe may not be hosted at other URIs. This URI must be https. Use whitespaces to separate multiple parent URIs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;
    public AdministratorWebTokenSpec withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    /**
     * Deprecated. Use PlaySearch.approveApps.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permission")
    public AdministratorWebTokenSpecPermissionEnum[] permission;
    public AdministratorWebTokenSpec withPermission(AdministratorWebTokenSpecPermissionEnum[] permission) {
        this.permission = permission;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playSearch")
    public AdministratorWebTokenSpecPlaySearch playSearch;
    public AdministratorWebTokenSpec withPlaySearch(AdministratorWebTokenSpecPlaySearch playSearch) {
        this.playSearch = playSearch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateApps")
    public AdministratorWebTokenSpecPrivateApps privateApps;
    public AdministratorWebTokenSpec withPrivateApps(AdministratorWebTokenSpecPrivateApps privateApps) {
        this.privateApps = privateApps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeBuilder")
    public AdministratorWebTokenSpecStoreBuilder storeBuilder;
    public AdministratorWebTokenSpec withStoreBuilder(AdministratorWebTokenSpecStoreBuilder storeBuilder) {
        this.storeBuilder = storeBuilder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webApps")
    public AdministratorWebTokenSpecWebApps webApps;
    public AdministratorWebTokenSpec withWebApps(AdministratorWebTokenSpecWebApps webApps) {
        this.webApps = webApps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zeroTouch")
    public AdministratorWebTokenSpecZeroTouch zeroTouch;
    public AdministratorWebTokenSpec withZeroTouch(AdministratorWebTokenSpecZeroTouch zeroTouch) {
        this.zeroTouch = zeroTouch;
        return this;
    }
    
}
