"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bands as shared_bands
from ..shared import instruments as shared_instruments
from ..shared import preview as shared_preview
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Descriptors:
    r"""Information about a descriptor"""
    
    average_render_speed: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('average_render_speed'), 'exclude': lambda f: f is None }})
    r"""The average ratio of the length of the music to the time it takes to render; for example, a render speed of 3.0 generates 30 seconds of music in about 10 seconds"""  
    bands: Optional[list[shared_bands.Bands]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bands'), 'exclude': lambda f: f is None }})
    r"""The bands that are available to use this descriptor"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the descriptor"""  
    instruments: Optional[list[shared_instruments.Instruments]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instruments'), 'exclude': lambda f: f is None }})
    r"""The instruments that can play with this descriptor"""  
    max_tempo: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_tempo'), 'exclude': lambda f: f is None }})
    r"""The maximum beats per minute that the descriptor is intended to be used with"""  
    min_tempo: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('min_tempo'), 'exclude': lambda f: f is None }})
    r"""The minimum beats per minute that the descriptor is intended to be used with"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the descriptor"""  
    previews: Optional[list[shared_preview.Preview]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previews'), 'exclude': lambda f: f is None }})
    r"""Preview of the descriptor"""  
    tags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})
    r"""Tags that describe the descriptor"""  
    