/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InterfaceCircuitTermination {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("circuit")
    public InterfaceNestedCircuit circuit;
    public InterfaceCircuitTermination withCircuit(InterfaceNestedCircuit circuit) {
        this.circuit = circuit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public InterfaceCircuitTermination withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("port_speed")
    public Long portSpeed;
    public InterfaceCircuitTermination withPortSpeed(Long portSpeed) {
        this.portSpeed = portSpeed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pp_info")
    public String ppInfo;
    public InterfaceCircuitTermination withPpInfo(String ppInfo) {
        this.ppInfo = ppInfo;
        return this;
    }
    
    @JsonProperty("term_side")
    public InterfaceCircuitTerminationTerminationEnum termSide;
    public InterfaceCircuitTermination withTermSide(InterfaceCircuitTerminationTerminationEnum termSide) {
        this.termSide = termSide;
        return this;
    }
    
    /**
     * Upstream speed, if different from port speed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upstream_speed")
    public Long upstreamSpeed;
    public InterfaceCircuitTermination withUpstreamSpeed(Long upstreamSpeed) {
        this.upstreamSpeed = upstreamSpeed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("xconnect_id")
    public String xconnectId;
    public InterfaceCircuitTermination withXconnectId(String xconnectId) {
        this.xconnectId = xconnectId;
        return this;
    }
    
}
