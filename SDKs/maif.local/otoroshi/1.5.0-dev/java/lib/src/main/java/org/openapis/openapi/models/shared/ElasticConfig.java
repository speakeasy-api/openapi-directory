/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ElasticConfig - The configuration for elastic access
 */
public class ElasticConfig {
    /**
     * URL of the elastic cluster
     */
    @JsonProperty("clusterUri")
    public String clusterUri;

    public ElasticConfig withClusterUri(String clusterUri) {
        this.clusterUri = clusterUri;
        return this;
    }
    
    /**
     * Additionnal http headers
     */
    @JsonProperty("headers")
    public java.util.Map<String, String> headers;

    public ElasticConfig withHeaders(java.util.Map<String, String> headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * Index for events. Default is otoroshi-events
     */
    @JsonProperty("index")
    public String index;

    public ElasticConfig withIndex(String index) {
        this.index = index;
        return this;
    }
    
    /**
     * Optional password
     */
    @JsonProperty("password")
    public String password;

    public ElasticConfig withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Type of events. Default is event
     */
    @JsonProperty("type")
    public String type;

    public ElasticConfig withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Optional user
     */
    @JsonProperty("user")
    public String user;

    public ElasticConfig withUser(String user) {
        this.user = user;
        return this;
    }
    
    public ElasticConfig(@JsonProperty("user") String user, @JsonProperty("password") String password, @JsonProperty("clusterUri") String clusterUri, @JsonProperty("headers") java.util.Map<String, String> headers, @JsonProperty("index") String index, @JsonProperty("type") String type) {
        this.user = user;
        this.password = password;
        this.clusterUri = clusterUri;
        this.headers = headers;
        this.index = index;
        this.type = type;
  }
}
