/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AuditNodeInfo - Audit node info
 */
public class AuditNodeInfo {
    /**
     * Number of direct children
     * 
     * (no recursion; for rooms only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countChildren")
    public Long countChildren;
    public AuditNodeInfo withCountChildren(Long countChildren) {
        this.countChildren = countChildren;
        return this;
    }
    
    /**
     * Node ID
     */
    @JsonProperty("nodeId")
    public Long nodeId;
    public AuditNodeInfo withNodeId(Long nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * Encryption state
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeIsEncrypted")
    public Boolean nodeIsEncrypted;
    public AuditNodeInfo withNodeIsEncrypted(Boolean nodeIsEncrypted) {
        this.nodeIsEncrypted = nodeIsEncrypted;
        return this;
    }
    
    /**
     * Node name
     */
    @JsonProperty("nodeName")
    public String nodeName;
    public AuditNodeInfo withNodeName(String nodeName) {
        this.nodeName = nodeName;
        return this;
    }
    
    /**
     * Parent room ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeParentId")
    public Long nodeParentId;
    public AuditNodeInfo withNodeParentId(Long nodeParentId) {
        this.nodeParentId = nodeParentId;
        return this;
    }
    
    /**
     * Parent node path
     * 
     * `/` if node is a root node (room)
     */
    @JsonProperty("nodeParentPath")
    public String nodeParentPath;
    public AuditNodeInfo withNodeParentPath(String nodeParentPath) {
        this.nodeParentPath = nodeParentPath;
        return this;
    }
    
}
