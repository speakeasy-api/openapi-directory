// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StackInstanceDetailedStatusEnum string

const (
	StackInstanceDetailedStatusEnumPending    StackInstanceDetailedStatusEnum = "PENDING"
	StackInstanceDetailedStatusEnumRunning    StackInstanceDetailedStatusEnum = "RUNNING"
	StackInstanceDetailedStatusEnumSucceeded  StackInstanceDetailedStatusEnum = "SUCCEEDED"
	StackInstanceDetailedStatusEnumFailed     StackInstanceDetailedStatusEnum = "FAILED"
	StackInstanceDetailedStatusEnumCancelled  StackInstanceDetailedStatusEnum = "CANCELLED"
	StackInstanceDetailedStatusEnumInoperable StackInstanceDetailedStatusEnum = "INOPERABLE"
)

func (e StackInstanceDetailedStatusEnum) ToPointer() *StackInstanceDetailedStatusEnum {
	return &e
}

func (e *StackInstanceDetailedStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "INOPERABLE":
		*e = StackInstanceDetailedStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StackInstanceDetailedStatusEnum: %v", v)
	}
}
