/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersonMetadata - The metadata about a person.
 */
public class PersonMetadata {
    /**
     * Output only. True if the person resource has been deleted. Populated only for `people.connections.list` and `otherContacts.list` sync requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleted")
    public Boolean deleted;

    public PersonMetadata withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * Output only. Resource names of people linked to this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedPeopleResourceNames")
    public String[] linkedPeopleResourceNames;

    public PersonMetadata withLinkedPeopleResourceNames(String[] linkedPeopleResourceNames) {
        this.linkedPeopleResourceNames = linkedPeopleResourceNames;
        return this;
    }
    
    /**
     * Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectType")
    public PersonMetadataObjectTypeEnum objectType;

    public PersonMetadata withObjectType(PersonMetadataObjectTypeEnum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * Output only. Any former resource names this person has had. Populated only for `people.connections.list` requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previousResourceNames")
    public String[] previousResourceNames;

    public PersonMetadata withPreviousResourceNames(String[] previousResourceNames) {
        this.previousResourceNames = previousResourceNames;
        return this;
    }
    
    /**
     * The sources of data for the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sources")
    public Source[] sources;

    public PersonMetadata withSources(Source[] sources) {
        this.sources = sources;
        return this;
    }
    
    public PersonMetadata(){}
}
