/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class Recipient extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "campaign_id" })
  campaignId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "channel_cid" })
  channelCid: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message_id" })
  messageId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "receiver_id" })
  receiverId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
