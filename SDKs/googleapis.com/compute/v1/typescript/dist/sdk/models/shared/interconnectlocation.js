"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterconnectLocation = exports.InterconnectLocationStatusEnum = exports.InterconnectLocationContinentEnum = void 0;
var utils_1 = require("../../../internal/utils");
var interconnectlocationregioninfo_1 = require("./interconnectlocationregioninfo");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] Continent for this location, which can take one of the following values: - AFRICA - ASIA_PAC - EUROPE - NORTH_AMERICA - SOUTH_AMERICA
 */
var InterconnectLocationContinentEnum;
(function (InterconnectLocationContinentEnum) {
    InterconnectLocationContinentEnum["Africa"] = "AFRICA";
    InterconnectLocationContinentEnum["AsiaPac"] = "ASIA_PAC";
    InterconnectLocationContinentEnum["CAfrica"] = "C_AFRICA";
    InterconnectLocationContinentEnum["CAsiaPac"] = "C_ASIA_PAC";
    InterconnectLocationContinentEnum["CEurope"] = "C_EUROPE";
    InterconnectLocationContinentEnum["CNorthAmerica"] = "C_NORTH_AMERICA";
    InterconnectLocationContinentEnum["CSouthAmerica"] = "C_SOUTH_AMERICA";
    InterconnectLocationContinentEnum["Europe"] = "EUROPE";
    InterconnectLocationContinentEnum["NorthAmerica"] = "NORTH_AMERICA";
    InterconnectLocationContinentEnum["SouthAmerica"] = "SOUTH_AMERICA";
})(InterconnectLocationContinentEnum = exports.InterconnectLocationContinentEnum || (exports.InterconnectLocationContinentEnum = {}));
/**
 * [Output Only] The status of this InterconnectLocation, which can take one of the following values: - CLOSED: The InterconnectLocation is closed and is unavailable for provisioning new Interconnects. - AVAILABLE: The InterconnectLocation is available for provisioning new Interconnects.
 */
var InterconnectLocationStatusEnum;
(function (InterconnectLocationStatusEnum) {
    InterconnectLocationStatusEnum["Available"] = "AVAILABLE";
    InterconnectLocationStatusEnum["Closed"] = "CLOSED";
})(InterconnectLocationStatusEnum = exports.InterconnectLocationStatusEnum || (exports.InterconnectLocationStatusEnum = {}));
/**
 * Represents an Interconnect Attachment (VLAN) Location resource. You can use this resource to find location details about an Interconnect attachment (VLAN). For more information about interconnect attachments, read Creating VLAN Attachments.
 */
var InterconnectLocation = /** @class */ (function (_super) {
    __extends(InterconnectLocation, _super);
    function InterconnectLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "availabilityZone" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "continent" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "continent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "facilityProvider" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "facilityProvider", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "facilityProviderFacilityId" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "facilityProviderFacilityId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peeringdbFacilityId" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "peeringdbFacilityId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: interconnectlocationregioninfo_1.InterconnectLocationRegionInfo }),
        (0, class_transformer_1.Expose)({ name: "regionInfos" }),
        (0, class_transformer_1.Type)(function () { return interconnectlocationregioninfo_1.InterconnectLocationRegionInfo; }),
        __metadata("design:type", Array)
    ], InterconnectLocation.prototype, "regionInfos", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], InterconnectLocation.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportsPzs" }),
        __metadata("design:type", Boolean)
    ], InterconnectLocation.prototype, "supportsPzs", void 0);
    return InterconnectLocation;
}(utils_1.SpeakeasyBase));
exports.InterconnectLocation = InterconnectLocation;
