// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GistsUpdatePathParams struct {
	// gist_id parameter
	GistID string `pathParam:"style=simple,explode=false,name=gist_id"`
}

type GistsUpdateRequestBody2Files3 struct {
	// The new content of the file
	Content *string `json:"content,omitempty"`
	// The new filename for the file
	Filename *string `json:"filename,omitempty"`
}

type GistsUpdateRequestBody2Files2 struct {
	// The new content of the file
	Content *string `json:"content,omitempty"`
	// The new filename for the file
	Filename string `json:"filename"`
}

type GistsUpdateRequestBody2Files1 struct {
	// The new content of the file
	Content string `json:"content"`
	// The new filename for the file
	Filename *string `json:"filename,omitempty"`
}

type GistsUpdateRequestBody2 struct {
	// Description of the gist
	Description *string `json:"description,omitempty"`
	// Names of files to be updated
	Files map[string]interface{} `json:"files"`
}

type GistsUpdateRequestBody1Files3 struct {
	// The new content of the file
	Content *string `json:"content,omitempty"`
	// The new filename for the file
	Filename *string `json:"filename,omitempty"`
}

type GistsUpdateRequestBody1Files2 struct {
	// The new content of the file
	Content *string `json:"content,omitempty"`
	// The new filename for the file
	Filename string `json:"filename"`
}

type GistsUpdateRequestBody1Files1 struct {
	// The new content of the file
	Content string `json:"content"`
	// The new filename for the file
	Filename *string `json:"filename,omitempty"`
}

type GistsUpdateRequestBody1 struct {
	// Description of the gist
	Description string `json:"description"`
	// Names of files to be updated
	Files map[string]interface{} `json:"files,omitempty"`
}

type GistsUpdateRequest struct {
	PathParams GistsUpdatePathParams
	Request    interface{} `request:"mediaType=application/json"`
}

type GistsUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	GistSimple *shared.GistSimple
	// Validation failed
	ValidationError *shared.ValidationError
}
