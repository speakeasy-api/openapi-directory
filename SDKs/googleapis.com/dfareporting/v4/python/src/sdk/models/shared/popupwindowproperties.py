"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import offsetposition as shared_offsetposition
from ..shared import size as shared_size
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PopupWindowPropertiesPositionTypeEnum(str, Enum):
    r"""Popup window position either centered or at specific coordinate."""
    CENTER = 'CENTER'
    COORDINATES = 'COORDINATES'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PopupWindowProperties:
    r"""Popup Window Properties."""
    
    dimension: Optional[shared_size.Size] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension'), 'exclude': lambda f: f is None }})
    r"""Represents the dimensions of ads, placements, creatives, or creative assets."""  
    offset: Optional[shared_offsetposition.OffsetPosition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offset'), 'exclude': lambda f: f is None }})
    r"""Offset Position."""  
    position_type: Optional[PopupWindowPropertiesPositionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('positionType'), 'exclude': lambda f: f is None }})
    r"""Popup window position either centered or at specific coordinate."""  
    show_address_bar: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showAddressBar'), 'exclude': lambda f: f is None }})
    r"""Whether to display the browser address bar."""  
    show_menu_bar: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showMenuBar'), 'exclude': lambda f: f is None }})
    r"""Whether to display the browser menu bar."""  
    show_scroll_bar: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showScrollBar'), 'exclude': lambda f: f is None }})
    r"""Whether to display the browser scroll bar."""  
    show_status_bar: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showStatusBar'), 'exclude': lambda f: f is None }})
    r"""Whether to display the browser status bar."""  
    show_tool_bar: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('showToolBar'), 'exclude': lambda f: f is None }})
    r"""Whether to display the browser tool bar."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Title of popup window."""  
    