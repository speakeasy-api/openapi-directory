/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The format of the certificate data.
 */
export enum CertificateAddParameterCertificateFormatEnum {
  Pfx = "pfx",
  Cer = "cer",
  Unmapped = "unmapped",
}

/**
 * A certificate that can be installed on compute nodes and can be used to authenticate operations on the machine.
 */
export class CertificateAddParameter extends SpeakeasyBase {
  /**
   * The format of the certificate data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificateFormat" })
  certificateFormat?: CertificateAddParameterCertificateFormatEnum;

  /**
   * The base64-encoded contents of the certificate. The maximum size is 10KB.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data: string;

  /**
   * The password to access the certificate's private key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * The X.509 thumbprint of the certificate. This is a sequence of up to 40 hex digits (it may include spaces but these are removed).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbprint" })
  thumbprint: string;

  /**
   * The algorithm used to derive the thumbprint. This must be sha1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbprintAlgorithm" })
  thumbprintAlgorithm: string;
}
