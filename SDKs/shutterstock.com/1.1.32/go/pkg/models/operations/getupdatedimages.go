// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type GetUpdatedImagesSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetUpdatedImagesSortEnum - Sort order
type GetUpdatedImagesSortEnum string

const (
	GetUpdatedImagesSortEnumNewest GetUpdatedImagesSortEnum = "newest"
	GetUpdatedImagesSortEnumOldest GetUpdatedImagesSortEnum = "oldest"
)

func (e GetUpdatedImagesSortEnum) ToPointer() *GetUpdatedImagesSortEnum {
	return &e
}

func (e *GetUpdatedImagesSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "newest":
		fallthrough
	case "oldest":
		*e = GetUpdatedImagesSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUpdatedImagesSortEnum: %v", v)
	}
}

type GetUpdatedImagesTypeEnum string

const (
	GetUpdatedImagesTypeEnumAddition GetUpdatedImagesTypeEnum = "addition"
	GetUpdatedImagesTypeEnumDeletion GetUpdatedImagesTypeEnum = "deletion"
	GetUpdatedImagesTypeEnumEdit     GetUpdatedImagesTypeEnum = "edit"
)

func (e GetUpdatedImagesTypeEnum) ToPointer() *GetUpdatedImagesTypeEnum {
	return &e
}

func (e *GetUpdatedImagesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "addition":
		fallthrough
	case "deletion":
		fallthrough
	case "edit":
		*e = GetUpdatedImagesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUpdatedImagesTypeEnum: %v", v)
	}
}

type GetUpdatedImagesRequest struct {
	// Show images updated before the specified date
	EndDate *types.Date `queryParam:"style=form,explode=true,name=end_date"`
	// Show images updated in the specified time period, where the time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR, or 30 MINUTE; the default is 1 HOUR, which shows images that were updated in the hour preceding the request
	Interval *string `queryParam:"style=form,explode=true,name=interval"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Sort order
	Sort *GetUpdatedImagesSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Show images updated on or after the specified date
	StartDate *types.Date `queryParam:"style=form,explode=true,name=start_date"`
	// Show images that were added, deleted, or edited; by default, the endpoint returns images that were updated in any of these ways
	Type []GetUpdatedImagesTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetUpdatedImagesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	UpdatedMediaDataList *shared.UpdatedMediaDataList
}
