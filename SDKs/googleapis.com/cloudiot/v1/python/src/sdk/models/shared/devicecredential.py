"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import publickeycredential as shared_publickeycredential
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceCredential:
    r"""A server-stored device credential used for authentication."""
    
    expiration_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expirationTime'), 'exclude': lambda f: f is None }})
    r"""[Optional] The time at which this credential becomes invalid. This credential will be ignored for new client authentication requests after this timestamp; however, it will not be automatically deleted."""  
    public_key: Optional[shared_publickeycredential.PublicKeyCredential] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publicKey'), 'exclude': lambda f: f is None }})
    r"""A public key format and data."""  
    