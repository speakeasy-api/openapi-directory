"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FourHundredAndSixNOTACCEPTABLECodeEnum(str, Enum):
    INVALID_HEADER_VALUE = 'INVALID_HEADER_VALUE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FourHundredAndSixNOTACCEPTABLE:
    r"""Not Acceptable"""
    
    code: Optional[FourHundredAndSixNOTACCEPTABLECodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Describes which in-header parameter was not acceptable to this system; e.g., 'Invalid value for header: exp-api-key'"""  
    timestamp: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestamp'), 'exclude': lambda f: f is None }})
    r"""Timestamp of the request
    
      * e.g.: `2019-09-17T03:20:45.737043Z`
    """  
    tracking_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trackingId'), 'exclude': lambda f: f is None }})
    r"""Tracking identifier for this error response"""  
    