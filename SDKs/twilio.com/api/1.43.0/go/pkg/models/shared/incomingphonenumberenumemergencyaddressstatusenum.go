// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IncomingPhoneNumberEnumEmergencyAddressStatusEnum string

const (
	IncomingPhoneNumberEnumEmergencyAddressStatusEnumRegistered            IncomingPhoneNumberEnumEmergencyAddressStatusEnum = "registered"
	IncomingPhoneNumberEnumEmergencyAddressStatusEnumUnregistered          IncomingPhoneNumberEnumEmergencyAddressStatusEnum = "unregistered"
	IncomingPhoneNumberEnumEmergencyAddressStatusEnumPendingRegistration   IncomingPhoneNumberEnumEmergencyAddressStatusEnum = "pending-registration"
	IncomingPhoneNumberEnumEmergencyAddressStatusEnumRegistrationFailure   IncomingPhoneNumberEnumEmergencyAddressStatusEnum = "registration-failure"
	IncomingPhoneNumberEnumEmergencyAddressStatusEnumPendingUnregistration IncomingPhoneNumberEnumEmergencyAddressStatusEnum = "pending-unregistration"
	IncomingPhoneNumberEnumEmergencyAddressStatusEnumUnregistrationFailure IncomingPhoneNumberEnumEmergencyAddressStatusEnum = "unregistration-failure"
)

func (e IncomingPhoneNumberEnumEmergencyAddressStatusEnum) ToPointer() *IncomingPhoneNumberEnumEmergencyAddressStatusEnum {
	return &e
}

func (e *IncomingPhoneNumberEnumEmergencyAddressStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "registered":
		fallthrough
	case "unregistered":
		fallthrough
	case "pending-registration":
		fallthrough
	case "registration-failure":
		fallthrough
	case "pending-unregistration":
		fallthrough
	case "unregistration-failure":
		*e = IncomingPhoneNumberEnumEmergencyAddressStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncomingPhoneNumberEnumEmergencyAddressStatusEnum: %v", v)
	}
}
