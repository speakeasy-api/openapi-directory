/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Endpoint } from "./endpoint";
import { Expose, Type } from "class-transformer";

/**
 * A response containing bidder endpoints.
 */
export class ListEndpointsResponse extends SpeakeasyBase {
  /**
   * List of bidder endpoints.
   */
  @SpeakeasyMetadata({ elemType: Endpoint })
  @Expose({ name: "endpoints" })
  @Type(() => Endpoint)
  endpoints?: Endpoint[];

  /**
   * A token which can be passed to a subsequent call to the `ListEndpoints` method to retrieve the next page of results in ListEndpointsRequest.pageToken.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
