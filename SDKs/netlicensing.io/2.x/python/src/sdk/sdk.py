"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .license import License
from .license_template import LicenseTemplate
from .licensee import Licensee
from .payment_method import PaymentMethod
from .product import Product
from .product_module import ProductModule
from .token import Token
from .transaction import Transaction
from .utility import Utility

SERVERS = [
    "https://go.netlicensing.io/core/v2/rest",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""The Labs64 <a href='https://netlicensing.io/wiki/restful-api' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>"""
    license: License
    r"""License operations
    https://netlicensing.io/wiki/license-services - License Services
    """
    license_template: LicenseTemplate
    r"""License Template operations
    https://netlicensing.io/wiki/license-template-services - License Template Services
    """
    licensee: Licensee
    r"""Licensee operations
    https://netlicensing.io/wiki/licensee-services - Licensee Services
    """
    payment_method: PaymentMethod
    r"""Payment Method operations
    https://netlicensing.io/wiki/payment-method-services - Payment Method Services
    """
    product: Product
    r"""Product operations
    https://netlicensing.io/wiki/product-services - Product Services
    """
    product_module: ProductModule
    r"""Product Module operations
    https://netlicensing.io/wiki/product-module-services - Product Module Services
    """
    token: Token
    r"""Token operations
    https://netlicensing.io/wiki/token-services - Token Services
    """
    transaction: Transaction
    r"""Transaction operations
    https://netlicensing.io/wiki/transaction-services - Transaction Services
    """
    utility: Utility
    r"""Utility operations
    https://netlicensing.io/wiki/utility-services - Utility Services
    """

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.license = License(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.license_template = LicenseTemplate(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.licensee = Licensee(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.payment_method = PaymentMethod(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.product = Product(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.product_module = ProductModule(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.token = Token(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.transaction = Transaction(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.utility = Utility(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    