// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReactionsCreateForPullRequestReviewCommentPathParams struct {
	// The unique identifier of the comment.
	CommentID int64 `pathParam:"style=simple,explode=false,name=comment_id"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

// ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum - The [reaction type](https://docs.github.com/enterprise-server@3.6/rest/reference/reactions#reaction-types) to add to the pull request review comment.
type ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum string

const (
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumPlus1    ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "+1"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumMinus1   ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "-1"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumLaugh    ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "laugh"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumConfused ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "confused"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumHeart    ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "heart"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumHooray   ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "hooray"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumRocket   ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "rocket"
	ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnumEyes     ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum = "eyes"
)

func (e *ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum: %s", s)
	}
}

type ReactionsCreateForPullRequestReviewCommentRequestBody struct {
	// The [reaction type](https://docs.github.com/enterprise-server@3.6/rest/reference/reactions#reaction-types) to add to the pull request review comment.
	Content ReactionsCreateForPullRequestReviewCommentRequestBodyContentEnum `json:"content"`
}

type ReactionsCreateForPullRequestReviewCommentRequest struct {
	PathParams ReactionsCreateForPullRequestReviewCommentPathParams
	Request    ReactionsCreateForPullRequestReviewCommentRequestBody `request:"mediaType=application/json"`
}

type ReactionsCreateForPullRequestReviewCommentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Reaction exists
	Reaction *shared.Reaction
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
