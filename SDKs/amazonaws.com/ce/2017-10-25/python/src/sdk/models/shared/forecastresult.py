"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dateinterval as shared_dateinterval
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ForecastResult:
    r"""The forecast that's created for your query."""
    
    mean_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MeanValue'), 'exclude': lambda f: f is None }})  
    prediction_interval_lower_bound: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PredictionIntervalLowerBound'), 'exclude': lambda f: f is None }})  
    prediction_interval_upper_bound: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PredictionIntervalUpperBound'), 'exclude': lambda f: f is None }})  
    time_period: Optional[shared_dateinterval.DateInterval] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimePeriod'), 'exclude': lambda f: f is None }})  
    