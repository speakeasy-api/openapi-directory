// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PiiEntityTypeEnum string

const (
	PiiEntityTypeEnumBankAccountNumber PiiEntityTypeEnum = "BANK_ACCOUNT_NUMBER"
	PiiEntityTypeEnumBankRouting       PiiEntityTypeEnum = "BANK_ROUTING"
	PiiEntityTypeEnumCreditDebitNumber PiiEntityTypeEnum = "CREDIT_DEBIT_NUMBER"
	PiiEntityTypeEnumCreditDebitCvv    PiiEntityTypeEnum = "CREDIT_DEBIT_CVV"
	PiiEntityTypeEnumCreditDebitExpiry PiiEntityTypeEnum = "CREDIT_DEBIT_EXPIRY"
	PiiEntityTypeEnumPin               PiiEntityTypeEnum = "PIN"
	PiiEntityTypeEnumEmail             PiiEntityTypeEnum = "EMAIL"
	PiiEntityTypeEnumAddress           PiiEntityTypeEnum = "ADDRESS"
	PiiEntityTypeEnumName              PiiEntityTypeEnum = "NAME"
	PiiEntityTypeEnumPhone             PiiEntityTypeEnum = "PHONE"
	PiiEntityTypeEnumSsn               PiiEntityTypeEnum = "SSN"
	PiiEntityTypeEnumAll               PiiEntityTypeEnum = "ALL"
)

func (e *PiiEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BANK_ACCOUNT_NUMBER":
		fallthrough
	case "BANK_ROUTING":
		fallthrough
	case "CREDIT_DEBIT_NUMBER":
		fallthrough
	case "CREDIT_DEBIT_CVV":
		fallthrough
	case "CREDIT_DEBIT_EXPIRY":
		fallthrough
	case "PIN":
		fallthrough
	case "EMAIL":
		fallthrough
	case "ADDRESS":
		fallthrough
	case "NAME":
		fallthrough
	case "PHONE":
		fallthrough
	case "SSN":
		fallthrough
	case "ALL":
		*e = PiiEntityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PiiEntityTypeEnum: %s", s)
	}
}
