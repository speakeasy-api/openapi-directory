// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAppsDriveLabelsV2LabelPermissionRoleEnum - The role the principal should have.
type GoogleAppsDriveLabelsV2LabelPermissionRoleEnum string

const (
	GoogleAppsDriveLabelsV2LabelPermissionRoleEnumLabelRoleUnspecified GoogleAppsDriveLabelsV2LabelPermissionRoleEnum = "LABEL_ROLE_UNSPECIFIED"
	GoogleAppsDriveLabelsV2LabelPermissionRoleEnumReader               GoogleAppsDriveLabelsV2LabelPermissionRoleEnum = "READER"
	GoogleAppsDriveLabelsV2LabelPermissionRoleEnumApplier              GoogleAppsDriveLabelsV2LabelPermissionRoleEnum = "APPLIER"
	GoogleAppsDriveLabelsV2LabelPermissionRoleEnumOrganizer            GoogleAppsDriveLabelsV2LabelPermissionRoleEnum = "ORGANIZER"
	GoogleAppsDriveLabelsV2LabelPermissionRoleEnumEditor               GoogleAppsDriveLabelsV2LabelPermissionRoleEnum = "EDITOR"
)

func (e GoogleAppsDriveLabelsV2LabelPermissionRoleEnum) ToPointer() *GoogleAppsDriveLabelsV2LabelPermissionRoleEnum {
	return &e
}

func (e *GoogleAppsDriveLabelsV2LabelPermissionRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LABEL_ROLE_UNSPECIFIED":
		fallthrough
	case "READER":
		fallthrough
	case "APPLIER":
		fallthrough
	case "ORGANIZER":
		fallthrough
	case "EDITOR":
		*e = GoogleAppsDriveLabelsV2LabelPermissionRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsDriveLabelsV2LabelPermissionRoleEnum: %v", v)
	}
}

// GoogleAppsDriveLabelsV2LabelPermission - The permission that applies to a principal (user, group, audience) on a label.
type GoogleAppsDriveLabelsV2LabelPermission struct {
	// Audience to grant a role to. The magic value of `audiences/default` may be used to apply the role to the default audience in the context of the organization that owns the Label.
	Audience *string `json:"audience,omitempty"`
	// Specifies the email address for a user or group pricinpal. Not populated for audience principals. User and Group permissions may only be inserted using email address. On update requests, if email address is specified, no principal should be specified.
	Email *string `json:"email,omitempty"`
	// Group resource name.
	Group *string `json:"group,omitempty"`
	// Resource name of this permission.
	Name *string `json:"name,omitempty"`
	// Person resource name.
	Person *string `json:"person,omitempty"`
	// The role the principal should have.
	Role *GoogleAppsDriveLabelsV2LabelPermissionRoleEnum `json:"role,omitempty"`
}
