"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class PostTaxationItemTypeTaxModeEnum(str, Enum):
    r"""The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax."""
    TAX_INCLUSIVE = 'TaxInclusive'
    TAX_EXCLUSIVE = 'TaxExclusive'

class PostTaxationItemTypeTaxRateTypeEnum(str, Enum):
    r"""The type of the tax rate applied to the invoice item."""
    PERCENTAGE = 'Percentage'
    FLAT_FEE = 'FlatFee'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTaxationItemType:
    r"""Container for custom fields of a Taxation Item object."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of taxation."""  
    tax_amount: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxAmount') }})
    r"""The amount of the taxation item in the invoice item."""  
    tax_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxCode') }})
    r"""The tax code identifies which tax rules and tax rates to apply to a specific invoice item."""  
    tax_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxDate'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""The date that the tax is applied to the invoice item, in `yyyy-mm-dd` format."""  
    tax_mode: PostTaxationItemTypeTaxModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxMode') }})
    r"""The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax."""  
    tax_rate: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxRate') }})
    r"""The tax rate applied to the invoice item."""  
    tax_rate_type: PostTaxationItemTypeTaxRateTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxRateType') }})
    r"""The type of the tax rate applied to the invoice item."""  
    exempt_amount: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exemptAmount'), 'exclude': lambda f: f is None }})
    r"""The amount of taxes or VAT, for which your customer has an exemption."""  
    jurisdiction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jurisdiction'), 'exclude': lambda f: f is None }})
    r"""The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city."""  
    location_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationCode'), 'exclude': lambda f: f is None }})
    r"""The identifier for the location based on the value of the `taxCode` field."""  
    tax_code_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxCodeDescription'), 'exclude': lambda f: f is None }})
    r"""The description of the tax code."""  
    tax_rate_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxRateDescription'), 'exclude': lambda f: f is None }})
    r"""The description of the tax rate."""  
    