/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class FetchPatientHealthResultsRequest extends SpeakeasyBase {
  /**
   * A comma-separated list of action identifiers
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[actions]",
  })
  filterActions?: string;

  /**
   * The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[created_at]",
  })
  filterCreatedAt?: string;

  /**
   * Filter results that occurred before the passed ISO date and time string
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[end_at]",
  })
  filterEndAt?: string;

  /**
   * Filter the patient health results for a specified patient
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[patient]",
  })
  filterPatient: string;

  /**
   * Filter results that occurred after the passed ISO date and time string
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[start_at]",
  })
  filterStartAt?: string;

  /**
   * A comma-separated list of thread identifiers
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[threads]",
  })
  filterThreads?: string;

  /**
   * The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[updated_at]",
  })
  filterUpdatedAt?: string;

  /**
   * Page cursor
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[after]",
  })
  pageAfter?: string;

  /**
   * Page limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[limit]",
  })
  pageLimit?: number;

  /**
   * Page number
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[number]",
  })
  pageNumber?: number;

  /**
   * Page size
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[size]",
  })
  pageSize?: number;
}

export class FetchPatientHealthResultsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fetchErrorResponse?: shared.FetchErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  fetchPatientHealthResultResponse?: shared.FetchPatientHealthResultResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
