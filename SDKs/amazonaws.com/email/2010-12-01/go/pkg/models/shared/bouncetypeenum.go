// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BounceTypeEnum string

const (
	BounceTypeEnumDoesNotExist     BounceTypeEnum = "DoesNotExist"
	BounceTypeEnumMessageTooLarge  BounceTypeEnum = "MessageTooLarge"
	BounceTypeEnumExceededQuota    BounceTypeEnum = "ExceededQuota"
	BounceTypeEnumContentRejected  BounceTypeEnum = "ContentRejected"
	BounceTypeEnumUndefined        BounceTypeEnum = "Undefined"
	BounceTypeEnumTemporaryFailure BounceTypeEnum = "TemporaryFailure"
)

func (e *BounceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DoesNotExist":
		fallthrough
	case "MessageTooLarge":
		fallthrough
	case "ExceededQuota":
		fallthrough
	case "ContentRejected":
		fallthrough
	case "Undefined":
		fallthrough
	case "TemporaryFailure":
		*e = BounceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BounceTypeEnum: %s", s)
	}
}
