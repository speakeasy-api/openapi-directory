"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SplitInt64:
    r"""A representation of an int64, n, that is immune to precision loss when encoded in JSON."""
    
    high_bits: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('highBits'), 'exclude': lambda f: f is None }})
    r"""The high order bits, including the sign: n >> 32."""  
    low_bits: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lowBits'), 'exclude': lambda f: f is None }})
    r"""The low order bits: n & 0xffffffff."""  
    