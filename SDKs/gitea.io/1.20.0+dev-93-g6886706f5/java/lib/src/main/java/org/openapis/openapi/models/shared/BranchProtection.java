/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BranchProtection - BranchProtection represents a branch protection for a repository
 */
public class BranchProtection {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approvals_whitelist_teams")
    public String[] approvalsWhitelistTeams;
    public BranchProtection withApprovalsWhitelistTeams(String[] approvalsWhitelistTeams) {
        this.approvalsWhitelistTeams = approvalsWhitelistTeams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approvals_whitelist_username")
    public String[] approvalsWhitelistUsername;
    public BranchProtection withApprovalsWhitelistUsername(String[] approvalsWhitelistUsername) {
        this.approvalsWhitelistUsername = approvalsWhitelistUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("block_on_official_review_requests")
    public Boolean blockOnOfficialReviewRequests;
    public BranchProtection withBlockOnOfficialReviewRequests(Boolean blockOnOfficialReviewRequests) {
        this.blockOnOfficialReviewRequests = blockOnOfficialReviewRequests;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("block_on_outdated_branch")
    public Boolean blockOnOutdatedBranch;
    public BranchProtection withBlockOnOutdatedBranch(Boolean blockOnOutdatedBranch) {
        this.blockOnOutdatedBranch = blockOnOutdatedBranch;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("block_on_rejected_reviews")
    public Boolean blockOnRejectedReviews;
    public BranchProtection withBlockOnRejectedReviews(Boolean blockOnRejectedReviews) {
        this.blockOnRejectedReviews = blockOnRejectedReviews;
        return this;
    }
    
    /**
     * Deprecated: true
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branch_name")
    public String branchName;
    public BranchProtection withBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public BranchProtection withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dismiss_stale_approvals")
    public Boolean dismissStaleApprovals;
    public BranchProtection withDismissStaleApprovals(Boolean dismissStaleApprovals) {
        this.dismissStaleApprovals = dismissStaleApprovals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable_approvals_whitelist")
    public Boolean enableApprovalsWhitelist;
    public BranchProtection withEnableApprovalsWhitelist(Boolean enableApprovalsWhitelist) {
        this.enableApprovalsWhitelist = enableApprovalsWhitelist;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable_merge_whitelist")
    public Boolean enableMergeWhitelist;
    public BranchProtection withEnableMergeWhitelist(Boolean enableMergeWhitelist) {
        this.enableMergeWhitelist = enableMergeWhitelist;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable_push")
    public Boolean enablePush;
    public BranchProtection withEnablePush(Boolean enablePush) {
        this.enablePush = enablePush;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable_push_whitelist")
    public Boolean enablePushWhitelist;
    public BranchProtection withEnablePushWhitelist(Boolean enablePushWhitelist) {
        this.enablePushWhitelist = enablePushWhitelist;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enable_status_check")
    public Boolean enableStatusCheck;
    public BranchProtection withEnableStatusCheck(Boolean enableStatusCheck) {
        this.enableStatusCheck = enableStatusCheck;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_whitelist_teams")
    public String[] mergeWhitelistTeams;
    public BranchProtection withMergeWhitelistTeams(String[] mergeWhitelistTeams) {
        this.mergeWhitelistTeams = mergeWhitelistTeams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merge_whitelist_usernames")
    public String[] mergeWhitelistUsernames;
    public BranchProtection withMergeWhitelistUsernames(String[] mergeWhitelistUsernames) {
        this.mergeWhitelistUsernames = mergeWhitelistUsernames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protected_file_patterns")
    public String protectedFilePatterns;
    public BranchProtection withProtectedFilePatterns(String protectedFilePatterns) {
        this.protectedFilePatterns = protectedFilePatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push_whitelist_deploy_keys")
    public Boolean pushWhitelistDeployKeys;
    public BranchProtection withPushWhitelistDeployKeys(Boolean pushWhitelistDeployKeys) {
        this.pushWhitelistDeployKeys = pushWhitelistDeployKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push_whitelist_teams")
    public String[] pushWhitelistTeams;
    public BranchProtection withPushWhitelistTeams(String[] pushWhitelistTeams) {
        this.pushWhitelistTeams = pushWhitelistTeams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push_whitelist_usernames")
    public String[] pushWhitelistUsernames;
    public BranchProtection withPushWhitelistUsernames(String[] pushWhitelistUsernames) {
        this.pushWhitelistUsernames = pushWhitelistUsernames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("require_signed_commits")
    public Boolean requireSignedCommits;
    public BranchProtection withRequireSignedCommits(Boolean requireSignedCommits) {
        this.requireSignedCommits = requireSignedCommits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required_approvals")
    public Long requiredApprovals;
    public BranchProtection withRequiredApprovals(Long requiredApprovals) {
        this.requiredApprovals = requiredApprovals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rule_name")
    public String ruleName;
    public BranchProtection withRuleName(String ruleName) {
        this.ruleName = ruleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_check_contexts")
    public String[] statusCheckContexts;
    public BranchProtection withStatusCheckContexts(String[] statusCheckContexts) {
        this.statusCheckContexts = statusCheckContexts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unprotected_file_patterns")
    public String unprotectedFilePatterns;
    public BranchProtection withUnprotectedFilePatterns(String unprotectedFilePatterns) {
        this.unprotectedFilePatterns = unprotectedFilePatterns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public BranchProtection withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
