"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import webhook as shared_webhook
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetTargetsTargetIDWebhooksRequest:
    
    target_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'target_id', 'style': 'simple', 'explode': False }})
    r"""Target id"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDWebhooks403ApplicationJSON:
    r"""Not allowed to perform operation"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Error message."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDWebhooks401ApplicationJSON:
    r"""Access token is missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDWebhooks200ApplicationJSON:
    r"""Webhook list"""
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Number of objects in the response."""  
    length: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('length'), 'exclude': lambda f: f is None }})
    r"""Number of objects per page."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page'), 'exclude': lambda f: f is None }})
    r"""Current page."""  
    page_total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_total'), 'exclude': lambda f: f is None }})
    r"""Number of pages."""  
    results: Optional[list[shared_webhook.Webhook]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})
    r"""Webhook objects"""  
    

@dataclasses.dataclass
class GetTargetsTargetIDWebhooksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_targets_target_id_webhooks_200_application_json_object: Optional[GetTargetsTargetIDWebhooks200ApplicationJSON] = dataclasses.field(default=None)
    r"""Webhook list"""  
    get_targets_target_id_webhooks_401_application_json_object: Optional[GetTargetsTargetIDWebhooks401ApplicationJSON] = dataclasses.field(default=None)
    r"""Access token is missing or invalid"""  
    get_targets_target_id_webhooks_403_application_json_object: Optional[GetTargetsTargetIDWebhooks403ApplicationJSON] = dataclasses.field(default=None)
    r"""Not allowed to perform operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    