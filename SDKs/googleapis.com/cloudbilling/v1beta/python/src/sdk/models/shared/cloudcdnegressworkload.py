"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import usage as shared_usage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CloudCdnEgressWorkloadCacheEgressDestinationEnum(str, Enum):
    r"""The destination for the cache egress charges."""
    CACHE_EGRESS_DESTINATION_UNSPECIFIED = 'CACHE_EGRESS_DESTINATION_UNSPECIFIED'
    CACHE_EGRESS_DESTINATION_ASIA_PACIFIC = 'CACHE_EGRESS_DESTINATION_ASIA_PACIFIC'
    CACHE_EGRESS_DESTINATION_CHINA = 'CACHE_EGRESS_DESTINATION_CHINA'
    CACHE_EGRESS_DESTINATION_EUROPE = 'CACHE_EGRESS_DESTINATION_EUROPE'
    CACHE_EGRESS_DESTINATION_NORTH_AMERICA = 'CACHE_EGRESS_DESTINATION_NORTH_AMERICA'
    CACHE_EGRESS_DESTINATION_OCEANIA = 'CACHE_EGRESS_DESTINATION_OCEANIA'
    CACHE_EGRESS_DESTINATION_LATIN_AMERICA = 'CACHE_EGRESS_DESTINATION_LATIN_AMERICA'
    CACHE_EGRESS_DESTINATION_OTHER_DESTINATIONS = 'CACHE_EGRESS_DESTINATION_OTHER_DESTINATIONS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CloudCdnEgressWorkload:
    r"""Specifies usage for Cloud CDN egress."""
    
    cache_egress_destination: Optional[CloudCdnEgressWorkloadCacheEgressDestinationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cacheEgressDestination'), 'exclude': lambda f: f is None }})
    r"""The destination for the cache egress charges."""  
    cache_egress_rate: Optional[shared_usage.Usage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cacheEgressRate'), 'exclude': lambda f: f is None }})
    r"""An amount of usage over a time frame."""  
    