"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFirebaseAppcheckV1betaExchangeAppAttestAttestationRequest:
    r"""Request message for the ExchangeAppAttestAttestation method."""
    
    attestation_statement: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attestationStatement'), 'exclude': lambda f: f is None }})
    r"""Required. The App Attest statement returned by the client-side App Attest API. This is a base64url encoded CBOR object in the JSON response."""  
    challenge: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('challenge'), 'exclude': lambda f: f is None }})
    r"""Required. A one-time challenge returned by an immediately prior call to GenerateAppAttestChallenge."""  
    key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyId'), 'exclude': lambda f: f is None }})
    r"""Required. The key ID generated by App Attest for the client app."""  
    