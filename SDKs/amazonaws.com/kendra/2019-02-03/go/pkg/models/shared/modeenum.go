// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ModeEnum string

const (
	ModeEnumEnabled   ModeEnum = "ENABLED"
	ModeEnumLearnOnly ModeEnum = "LEARN_ONLY"
)

func (e ModeEnum) ToPointer() *ModeEnum {
	return &e
}

func (e *ModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENABLED":
		fallthrough
	case "LEARN_ONLY":
		*e = ModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModeEnum: %v", v)
	}
}
