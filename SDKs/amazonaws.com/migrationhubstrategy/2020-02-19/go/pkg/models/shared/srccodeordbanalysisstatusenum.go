// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SrcCodeOrDbAnalysisStatusEnum string

const (
	SrcCodeOrDbAnalysisStatusEnumAnalysisToBeScheduled  SrcCodeOrDbAnalysisStatusEnum = "ANALYSIS_TO_BE_SCHEDULED"
	SrcCodeOrDbAnalysisStatusEnumAnalysisStarted        SrcCodeOrDbAnalysisStatusEnum = "ANALYSIS_STARTED"
	SrcCodeOrDbAnalysisStatusEnumAnalysisSuccess        SrcCodeOrDbAnalysisStatusEnum = "ANALYSIS_SUCCESS"
	SrcCodeOrDbAnalysisStatusEnumAnalysisFailed         SrcCodeOrDbAnalysisStatusEnum = "ANALYSIS_FAILED"
	SrcCodeOrDbAnalysisStatusEnumAnalysisPartialSuccess SrcCodeOrDbAnalysisStatusEnum = "ANALYSIS_PARTIAL_SUCCESS"
	SrcCodeOrDbAnalysisStatusEnumUnconfigured           SrcCodeOrDbAnalysisStatusEnum = "UNCONFIGURED"
	SrcCodeOrDbAnalysisStatusEnumConfigured             SrcCodeOrDbAnalysisStatusEnum = "CONFIGURED"
)

func (e SrcCodeOrDbAnalysisStatusEnum) ToPointer() *SrcCodeOrDbAnalysisStatusEnum {
	return &e
}

func (e *SrcCodeOrDbAnalysisStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANALYSIS_TO_BE_SCHEDULED":
		fallthrough
	case "ANALYSIS_STARTED":
		fallthrough
	case "ANALYSIS_SUCCESS":
		fallthrough
	case "ANALYSIS_FAILED":
		fallthrough
	case "ANALYSIS_PARTIAL_SUCCESS":
		fallthrough
	case "UNCONFIGURED":
		fallthrough
	case "CONFIGURED":
		*e = SrcCodeOrDbAnalysisStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SrcCodeOrDbAnalysisStatusEnum: %v", v)
	}
}
