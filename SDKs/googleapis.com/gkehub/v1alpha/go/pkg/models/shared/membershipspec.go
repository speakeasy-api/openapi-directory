// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MembershipSpecCertificateManagementEnum - Specifies workload certificate management.
type MembershipSpecCertificateManagementEnum string

const (
	MembershipSpecCertificateManagementEnumCertificateManagementUnspecified MembershipSpecCertificateManagementEnum = "CERTIFICATE_MANAGEMENT_UNSPECIFIED"
	MembershipSpecCertificateManagementEnumDisabled                         MembershipSpecCertificateManagementEnum = "DISABLED"
	MembershipSpecCertificateManagementEnumEnabled                          MembershipSpecCertificateManagementEnum = "ENABLED"
)

func (e MembershipSpecCertificateManagementEnum) ToPointer() *MembershipSpecCertificateManagementEnum {
	return &e
}

func (e *MembershipSpecCertificateManagementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CERTIFICATE_MANAGEMENT_UNSPECIFIED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED":
		*e = MembershipSpecCertificateManagementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipSpecCertificateManagementEnum: %v", v)
	}
}

// MembershipSpec - **Workload Certificate**: The membership-specific input for WorkloadCertificate feature.
type MembershipSpec struct {
	// Specifies workload certificate management.
	CertificateManagement *MembershipSpecCertificateManagementEnum `json:"certificateManagement,omitempty"`
}
