// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum - 'Deny' traffic specified by this rule
type UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum string

const (
	UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnumDeny UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum = "deny"
)

func (e UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum) ToPointer() *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum {
	return &e
}

func (e *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deny":
		*e = UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum: %v", v)
	}
}

// UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum - Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
type UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum string

const (
	UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnumApplication         UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "application"
	UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnumApplicationCategory UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "applicationCategory"
	UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnumHost                UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "host"
	UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnumIPRange             UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "ipRange"
	UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnumPort                UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum = "port"
)

func (e UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum) ToPointer() *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum {
	return &e
}

func (e *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "application":
		fallthrough
	case "applicationCategory":
		fallthrough
	case "host":
		fallthrough
	case "ipRange":
		fallthrough
	case "port":
		*e = UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum: %v", v)
	}
}

type UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRules struct {
	// 'Deny' traffic specified by this rule
	Policy *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesPolicyEnum `json:"policy,omitempty"`
	// Type of the L7 firewall rule. One of: 'application', 'applicationCategory', 'host', 'port', 'ipRange'
	Type *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRulesTypeEnum `json:"type,omitempty"`
	// The value of what needs to get blocked. Format of the value varies depending on type of the firewall rule selected.
	Value *string `json:"value,omitempty"`
}

type UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBody struct {
	// An array of L7 firewall rules for this SSID. Rules will get applied in the same order user has specified in request. Empty array will clear the L7 firewall rule configuration.
	Rules []UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBodyRules `json:"rules,omitempty"`
}

type UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequest struct {
	RequestBody *UpdateNetworkWirelessSsidFirewallL7FirewallRulesRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                                       `pathParam:"style=simple,explode=false,name=networkId"`
	Number      string                                                       `pathParam:"style=simple,explode=false,name=number"`
}

type UpdateNetworkWirelessSsidFirewallL7FirewallRulesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkWirelessSsidFirewallL7FirewallRules200ApplicationJSONObject map[string]interface{}
}
