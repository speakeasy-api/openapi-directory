// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeHostsActionEnum
type POSTDescribeHostsActionEnum string

const (
	POSTDescribeHostsActionEnumDescribeHosts POSTDescribeHostsActionEnum = "DescribeHosts"
)

func (e POSTDescribeHostsActionEnum) ToPointer() *POSTDescribeHostsActionEnum {
	return &e
}

func (e *POSTDescribeHostsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeHosts":
		*e = POSTDescribeHostsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeHostsActionEnum: %v", v)
	}
}

// POSTDescribeHostsVersionEnum
type POSTDescribeHostsVersionEnum string

const (
	POSTDescribeHostsVersionEnumTwoThousandAndSixteen1115 POSTDescribeHostsVersionEnum = "2016-11-15"
)

func (e POSTDescribeHostsVersionEnum) ToPointer() *POSTDescribeHostsVersionEnum {
	return &e
}

func (e *POSTDescribeHostsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribeHostsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeHostsVersionEnum: %v", v)
	}
}

type POSTDescribeHostsRequest struct {
	Action POSTDescribeHostsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                      `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                       `request:"mediaType=text/xml"`
	Version           POSTDescribeHostsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeHostsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
