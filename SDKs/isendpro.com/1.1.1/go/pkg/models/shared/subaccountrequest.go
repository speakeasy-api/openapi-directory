// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubaccountRequestSubAccountEditEnum - action à réaliser soit setPrice pour définir un prix ou addCredit pour ajouter du credit ou setRestriction modifier la restriction stop /
type SubaccountRequestSubAccountEditEnum string

const (
	SubaccountRequestSubAccountEditEnumSetPrice       SubaccountRequestSubAccountEditEnum = "setPrice"
	SubaccountRequestSubAccountEditEnumAddCredit      SubaccountRequestSubAccountEditEnum = "addCredit"
	SubaccountRequestSubAccountEditEnumSetRestriction SubaccountRequestSubAccountEditEnum = "setRestriction"
)

func (e SubaccountRequestSubAccountEditEnum) ToPointer() *SubaccountRequestSubAccountEditEnum {
	return &e
}

func (e *SubaccountRequestSubAccountEditEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "setPrice":
		fallthrough
	case "addCredit":
		fallthrough
	case "setRestriction":
		*e = SubaccountRequestSubAccountEditEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubaccountRequestSubAccountEditEnum: %v", v)
	}
}

type SubaccountRequestSubAccountRestrictionStopEnum string

const (
	SubaccountRequestSubAccountRestrictionStopEnumZero SubaccountRequestSubAccountRestrictionStopEnum = "0"
	SubaccountRequestSubAccountRestrictionStopEnumOne  SubaccountRequestSubAccountRestrictionStopEnum = "1"
)

func (e SubaccountRequestSubAccountRestrictionStopEnum) ToPointer() *SubaccountRequestSubAccountRestrictionStopEnum {
	return &e
}

func (e *SubaccountRequestSubAccountRestrictionStopEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "0":
		fallthrough
	case "1":
		*e = SubaccountRequestSubAccountRestrictionStopEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubaccountRequestSubAccountRestrictionStopEnum: %v", v)
	}
}

type SubaccountRequestSubAccountRestrictionTimeEnum string

const (
	SubaccountRequestSubAccountRestrictionTimeEnumZero SubaccountRequestSubAccountRestrictionTimeEnum = "0"
	SubaccountRequestSubAccountRestrictionTimeEnumOne  SubaccountRequestSubAccountRestrictionTimeEnum = "1"
)

func (e SubaccountRequestSubAccountRestrictionTimeEnum) ToPointer() *SubaccountRequestSubAccountRestrictionTimeEnum {
	return &e
}

func (e *SubaccountRequestSubAccountRestrictionTimeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "0":
		fallthrough
	case "1":
		*e = SubaccountRequestSubAccountRestrictionTimeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubaccountRequestSubAccountRestrictionTimeEnum: %v", v)
	}
}

// SubaccountRequest - edit sub account request
type SubaccountRequest struct {
	// Clé API
	Keyid string `json:"keyid"`
	// montant du crédit à ajouter
	SubAccountAddCredit   *string `json:"subAccountAddCredit,omitempty"`
	SubAccountCountryCode *string `json:"subAccountCountryCode,omitempty"`
	// action à réaliser soit setPrice pour définir un prix ou addCredit pour ajouter du credit ou setRestriction modifier la restriction stop /
	SubAccountEdit SubaccountRequestSubAccountEditEnum `json:"subAccountEdit"`
	// keyid du sous-compte
	SubAccountKeyID           *string                                         `json:"subAccountKeyId,omitempty"`
	SubAccountPrice           *string                                         `json:"subAccountPrice,omitempty"`
	SubAccountRestrictionStop *SubaccountRequestSubAccountRestrictionStopEnum `json:"subAccountRestrictionStop,omitempty"`
	SubAccountRestrictionTime *SubaccountRequestSubAccountRestrictionTimeEnum `json:"subAccountRestrictionTime,omitempty"`
}
