// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoSettingsOrientationEnum - Orientation of a video placement. If this value is set, placement will return assets matching the specified orientation.
type VideoSettingsOrientationEnum string

const (
	VideoSettingsOrientationEnumAny       VideoSettingsOrientationEnum = "ANY"
	VideoSettingsOrientationEnumLandscape VideoSettingsOrientationEnum = "LANDSCAPE"
	VideoSettingsOrientationEnumPortrait  VideoSettingsOrientationEnum = "PORTRAIT"
)

func (e *VideoSettingsOrientationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ANY":
		fallthrough
	case "LANDSCAPE":
		fallthrough
	case "PORTRAIT":
		*e = VideoSettingsOrientationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoSettingsOrientationEnum: %s", s)
	}
}

// VideoSettings - Video Settings
type VideoSettings struct {
	// Companion Settings
	CompanionSettings *CompanionSetting `json:"companionSettings,omitempty"`
	// Identifies what kind of resource this is. Value: the fixed string "dfareporting#videoSettings".
	Kind *string `json:"kind,omitempty"`
	// Orientation of a video placement. If this value is set, placement will return assets matching the specified orientation.
	Orientation *VideoSettingsOrientationEnum `json:"orientation,omitempty"`
	// Skippable Settings
	SkippableSettings *SkippableSetting `json:"skippableSettings,omitempty"`
	// Transcode Settings
	TranscodeSettings *TranscodeSetting `json:"transcodeSettings,omitempty"`
}
