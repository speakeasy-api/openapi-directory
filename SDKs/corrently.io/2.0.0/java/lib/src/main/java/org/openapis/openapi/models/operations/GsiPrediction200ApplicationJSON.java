/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GsiPrediction200ApplicationJSON - Success
 */
public class GsiPrediction200ApplicationJSON {
    /**
     * Prediction for the upcomming hours
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forecast")
    public org.openapis.openapi.models.shared.ForecastItem[] forecast;

    public GsiPrediction200ApplicationJSON withForecast(org.openapis.openapi.models.shared.ForecastItem[] forecast) {
        this.forecast = forecast;
        return this;
    }
    
    /**
     * Standarized location info sourced for prediction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public GsiPrediction200ApplicationJSONLocation location;

    public GsiPrediction200ApplicationJSON withLocation(GsiPrediction200ApplicationJSONLocation location) {
        this.location = location;
        return this;
    }
    
    /**
     * Device switching recommendation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matrix")
    public GsiPrediction200ApplicationJSONMatrix matrix;

    public GsiPrediction200ApplicationJSON withMatrix(GsiPrediction200ApplicationJSONMatrix matrix) {
        this.matrix = matrix;
        return this;
    }
    
    public GsiPrediction200ApplicationJSON(){}
}
