<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetPayoutsForPayorV4Request
{
    /**
     * The name of the payor whose payees are being paid. This filters via a case insensitive substring match.
     * 
     * @var ?string $fromPayorName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fromPayorName')]
    public ?string $fromPayorName = null;
    
    /**
     * Page number. Default is 1.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * The number of results to return in a page
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=pageSize')]
    public ?int $pageSize = null;
    
    /**
     * The id (UUID) of the payor funding the payout or the payor whose payees are being paid.
     * 
     * @var ?string $payorId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=payorId')]
    public ?string $payorId = null;
    
    /**
     * Payout Memo filter - case insensitive sub-string match
     * 
     * @var ?string $payoutMemo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=payoutMemo')]
    public ?string $payoutMemo = null;
    
    /**
     * Payout Schedule Status
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetPayoutsForPayorV4ScheduleStatusEnum $scheduleStatus
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=scheduleStatus')]
    public ?GetPayoutsForPayorV4ScheduleStatusEnum $scheduleStatus = null;
    
    /**
     * Filter payouts scheduled to run on or after the given date. Format is yyyy-MM-dd.
     * 
     * @var ?\DateTime $scheduledForDateFrom
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=scheduledForDateFrom,dateTimeFormat=Y-m-d')]
    public ?\DateTime $scheduledForDateFrom = null;
    
    /**
     * Filter payouts scheduled to run on or before the given date. Format is yyyy-MM-dd.
     * 
     * @var ?\DateTime $scheduledForDateTo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=scheduledForDateTo,dateTimeFormat=Y-m-d')]
    public ?\DateTime $scheduledForDateTo = null;
    
    /**
     * List of sort fields (e.g. ?sort=submittedDateTime:asc,instructedDateTime:asc,status:asc)
     * 
     * Default is submittedDateTime:asc
     * The supported sort fields are: submittedDateTime, instructedDateTime, status, totalPayments, payoutId, scheduledFor
     * 
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Payout Status
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetPayoutsForPayorV4StatusEnum $status
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=status')]
    public ?GetPayoutsForPayorV4StatusEnum $status = null;
    
    /**
     * The submitted date from range filter. Format is yyyy-MM-dd.
     * 
     * @var ?\DateTime $submittedDateFrom
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=submittedDateFrom,dateTimeFormat=Y-m-d')]
    public ?\DateTime $submittedDateFrom = null;
    
    /**
     * The submitted date to range filter. Format is yyyy-MM-dd.
     * 
     * @var ?\DateTime $submittedDateTo
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=submittedDateTo,dateTimeFormat=Y-m-d')]
    public ?\DateTime $submittedDateTo = null;
    
	public function __construct()
	{
		$this->fromPayorName = null;
		$this->page = null;
		$this->pageSize = null;
		$this->payorId = null;
		$this->payoutMemo = null;
		$this->scheduleStatus = null;
		$this->scheduledForDateFrom = null;
		$this->scheduledForDateTo = null;
		$this->sort = null;
		$this->status = null;
		$this->submittedDateFrom = null;
		$this->submittedDateTo = null;
	}
}
