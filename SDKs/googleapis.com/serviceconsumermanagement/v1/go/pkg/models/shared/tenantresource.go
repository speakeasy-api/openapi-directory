// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TenantResourceStatusEnum - Status of tenant resource.
type TenantResourceStatusEnum string

const (
	TenantResourceStatusEnumStatusUnspecified TenantResourceStatusEnum = "STATUS_UNSPECIFIED"
	TenantResourceStatusEnumPendingCreate     TenantResourceStatusEnum = "PENDING_CREATE"
	TenantResourceStatusEnumActive            TenantResourceStatusEnum = "ACTIVE"
	TenantResourceStatusEnumPendingDelete     TenantResourceStatusEnum = "PENDING_DELETE"
	TenantResourceStatusEnumFailed            TenantResourceStatusEnum = "FAILED"
	TenantResourceStatusEnumDeleted           TenantResourceStatusEnum = "DELETED"
)

func (e *TenantResourceStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "PENDING_CREATE":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "PENDING_DELETE":
		fallthrough
	case "FAILED":
		fallthrough
	case "DELETED":
		*e = TenantResourceStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TenantResourceStatusEnum: %s", s)
	}
}

// TenantResource - Resource constituting the TenancyUnit.
type TenantResource struct {
	// Output only. @OutputOnly Identifier of the tenant resource. For cloud projects, it is in the form 'projects/{number}'. For example 'projects/123456'.
	Resource *string `json:"resource,omitempty"`
	// Status of tenant resource.
	Status *TenantResourceStatusEnum `json:"status,omitempty"`
	// Unique per single tenancy unit.
	Tag *string `json:"tag,omitempty"`
}
