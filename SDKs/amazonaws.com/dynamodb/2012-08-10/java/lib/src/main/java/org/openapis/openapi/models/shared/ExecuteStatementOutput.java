/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExecuteStatementOutput - Success
 */
public class ExecuteStatementOutput {
    /**
     * The capacity units consumed by an operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. &lt;code&gt;ConsumedCapacity&lt;/code&gt; is only returned if the request asked for it. For more information, see &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html"&gt;Provisioned Throughput&lt;/a&gt; in the &lt;i&gt;Amazon DynamoDB Developer Guide&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsumedCapacity")
    public ConsumedCapacity consumedCapacity;
    public ExecuteStatementOutput withConsumedCapacity(ConsumedCapacity consumedCapacity) {
        this.consumedCapacity = consumedCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Items")
    public java.util.Map<String, AttributeValue>[] items;
    public ExecuteStatementOutput withItems(java.util.Map<String, AttributeValue>[] items) {
        this.items = items;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastEvaluatedKey")
    public java.util.Map<String, AttributeValue> lastEvaluatedKey;
    public ExecuteStatementOutput withLastEvaluatedKey(java.util.Map<String, AttributeValue> lastEvaluatedKey) {
        this.lastEvaluatedKey = lastEvaluatedKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextToken")
    public String nextToken;
    public ExecuteStatementOutput withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
