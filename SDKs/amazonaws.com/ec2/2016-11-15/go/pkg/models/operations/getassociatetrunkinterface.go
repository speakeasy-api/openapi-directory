// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAssociateTrunkInterfaceActionEnum
type GETAssociateTrunkInterfaceActionEnum string

const (
	GETAssociateTrunkInterfaceActionEnumAssociateTrunkInterface GETAssociateTrunkInterfaceActionEnum = "AssociateTrunkInterface"
)

func (e *GETAssociateTrunkInterfaceActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AssociateTrunkInterface":
		*e = GETAssociateTrunkInterfaceActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateTrunkInterfaceActionEnum: %s", s)
	}
}

// GETAssociateTrunkInterfaceVersionEnum
type GETAssociateTrunkInterfaceVersionEnum string

const (
	GETAssociateTrunkInterfaceVersionEnumTwoThousandAndSixteen1115 GETAssociateTrunkInterfaceVersionEnum = "2016-11-15"
)

func (e *GETAssociateTrunkInterfaceVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETAssociateTrunkInterfaceVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAssociateTrunkInterfaceVersionEnum: %s", s)
	}
}

type GETAssociateTrunkInterfaceRequest struct {
	Action GETAssociateTrunkInterfaceActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the branch network interface.
	BranchInterfaceID string `queryParam:"style=form,explode=true,name=BranchInterfaceId"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html">How to Ensure Idempotency</a>.
	ClientToken *string `queryParam:"style=form,explode=true,name=ClientToken"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The application key. This applies to the GRE protocol.
	GreKey *int64 `queryParam:"style=form,explode=true,name=GreKey"`
	// The ID of the trunk network interface.
	TrunkInterfaceID string                                `queryParam:"style=form,explode=true,name=TrunkInterfaceId"`
	Version          GETAssociateTrunkInterfaceVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the VLAN. This applies to the VLAN protocol.
	VlanID            *int64  `queryParam:"style=form,explode=true,name=VlanId"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAssociateTrunkInterfaceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
