"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import link as shared_link
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Links:
    r"""A collection of links, which are references from this span to a span in the same or different trace."""
    
    dropped_links_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('droppedLinksCount'), 'exclude': lambda f: f is None }})
    r"""The number of dropped links after the maximum size was enforced. If this value is 0, then no links were dropped."""  
    link: Optional[list[shared_link.Link]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link'), 'exclude': lambda f: f is None }})
    r"""A collection of links."""  
    