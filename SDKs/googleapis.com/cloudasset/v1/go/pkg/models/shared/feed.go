// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FeedContentTypeEnum - Asset content type. If not specified, no content but the asset name and type will be returned.
type FeedContentTypeEnum string

const (
	FeedContentTypeEnumContentTypeUnspecified FeedContentTypeEnum = "CONTENT_TYPE_UNSPECIFIED"
	FeedContentTypeEnumResource               FeedContentTypeEnum = "RESOURCE"
	FeedContentTypeEnumIamPolicy              FeedContentTypeEnum = "IAM_POLICY"
	FeedContentTypeEnumOrgPolicy              FeedContentTypeEnum = "ORG_POLICY"
	FeedContentTypeEnumAccessPolicy           FeedContentTypeEnum = "ACCESS_POLICY"
	FeedContentTypeEnumOsInventory            FeedContentTypeEnum = "OS_INVENTORY"
	FeedContentTypeEnumRelationship           FeedContentTypeEnum = "RELATIONSHIP"
)

func (e FeedContentTypeEnum) ToPointer() *FeedContentTypeEnum {
	return &e
}

func (e *FeedContentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTENT_TYPE_UNSPECIFIED":
		fallthrough
	case "RESOURCE":
		fallthrough
	case "IAM_POLICY":
		fallthrough
	case "ORG_POLICY":
		fallthrough
	case "ACCESS_POLICY":
		fallthrough
	case "OS_INVENTORY":
		fallthrough
	case "RELATIONSHIP":
		*e = FeedContentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeedContentTypeEnum: %v", v)
	}
}

// Feed - An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics.
type Feed struct {
	// A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).
	AssetNames []string `json:"assetNames,omitempty"`
	// A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `"compute.googleapis.com/Disk"` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types).
	AssetTypes []string `json:"assetTypes,omitempty"`
	// Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() < 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' && document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
	Condition *Expr `json:"condition,omitempty"`
	// Asset content type. If not specified, no content but the asset name and type will be returned.
	ContentType *FeedContentTypeEnum `json:"contentType,omitempty"`
	// Output configuration for asset feed destination.
	FeedOutputConfig *FeedOutputConfig `json:"feedOutputConfig,omitempty"`
	// Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization.
	Name *string `json:"name,omitempty"`
	// A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn't belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn't belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
	RelationshipTypes []string `json:"relationshipTypes,omitempty"`
}
