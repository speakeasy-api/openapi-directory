/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ValueData } from "./valuedata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * API Container for a Meter Value
 */
export class ValuesData extends SpeakeasyBase {
  /**
   * The Date of the Value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * The ID of the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeviceId" })
  deviceId?: string;

  /**
   * All values
   */
  @SpeakeasyMetadata({ elemType: ValueData })
  @Expose({ name: "Values" })
  @Type(() => ValueData)
  values?: ValueData[];
}
