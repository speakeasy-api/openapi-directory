/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BlockDeviceMapping } from "./blockdevicemapping";
import { InstanceMetadataOptions } from "./instancemetadataoptions";
import { InstanceMonitoring } from "./instancemonitoring";

export class CreateLaunchConfigurationType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  associatePublicIpAddress?: boolean;

  @SpeakeasyMetadata({ elemType: BlockDeviceMapping })
  blockDeviceMappings?: BlockDeviceMapping[];

  @SpeakeasyMetadata()
  classicLinkVPCId?: string;

  @SpeakeasyMetadata()
  classicLinkVPCSecurityGroups?: string[];

  @SpeakeasyMetadata()
  ebsOptimized?: boolean;

  @SpeakeasyMetadata()
  iamInstanceProfile?: string;

  @SpeakeasyMetadata()
  imageId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  instanceMonitoring?: InstanceMonitoring;

  @SpeakeasyMetadata()
  instanceType?: string;

  @SpeakeasyMetadata()
  kernelId?: string;

  @SpeakeasyMetadata()
  keyName?: string;

  @SpeakeasyMetadata()
  launchConfigurationName: string;

  @SpeakeasyMetadata()
  metadataOptions?: InstanceMetadataOptions;

  @SpeakeasyMetadata()
  placementTenancy?: string;

  @SpeakeasyMetadata()
  ramdiskId?: string;

  @SpeakeasyMetadata()
  securityGroups?: string[];

  @SpeakeasyMetadata()
  spotPrice?: string;

  @SpeakeasyMetadata()
  userData?: string;
}
