/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetGameWeatherRequest extends SpeakeasyBase {
  /**
   * Division classification filter (fbs/fcs/ii/iii)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=classification",
  })
  classification?: string;

  /**
   * Conference filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=conference",
  })
  conference?: string;

  /**
   * Game id filter (required if no year)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=gameId",
  })
  gameId?: number;

  /**
   * Season type filter (regular, postseason, or both)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=seasonType",
  })
  seasonType?: string;

  /**
   * Team filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Week filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=week" })
  week?: number;

  /**
   * Year filter (required if no game id)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class GetGameWeatherResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.GameWeather })
  gameWeathers?: shared.GameWeather[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
