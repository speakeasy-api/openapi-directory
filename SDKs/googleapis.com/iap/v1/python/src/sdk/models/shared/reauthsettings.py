"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReauthSettingsMethodEnum(str, Enum):
    r"""Reauth method requested."""
    METHOD_UNSPECIFIED = 'METHOD_UNSPECIFIED'
    LOGIN = 'LOGIN'
    PASSWORD = 'PASSWORD'
    SECURE_KEY = 'SECURE_KEY'
    ENROLLED_SECOND_FACTORS = 'ENROLLED_SECOND_FACTORS'

class ReauthSettingsPolicyTypeEnum(str, Enum):
    r"""How IAP determines the effective policy in cases of hierarchial policies. Policies are merged from higher in the hierarchy to lower in the hierarchy."""
    POLICY_TYPE_UNSPECIFIED = 'POLICY_TYPE_UNSPECIFIED'
    MINIMUM = 'MINIMUM'
    DEFAULT = 'DEFAULT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReauthSettings:
    r"""Configuration for IAP reauthentication policies."""
    
    max_age: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxAge'), 'exclude': lambda f: f is None }})
    r"""Reauth session lifetime, how long before a user has to reauthenticate again."""  
    method: Optional[ReauthSettingsMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""Reauth method requested."""  
    policy_type: Optional[ReauthSettingsPolicyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyType'), 'exclude': lambda f: f is None }})
    r"""How IAP determines the effective policy in cases of hierarchial policies. Policies are merged from higher in the hierarchy to lower in the hierarchy."""  
    