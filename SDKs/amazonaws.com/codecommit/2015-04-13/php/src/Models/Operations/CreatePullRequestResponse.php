<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreatePullRequestResponse
{
    /**
     * ClientRequestTokenRequiredException
     * 
     * @var mixed $clientRequestTokenRequiredException
     */
	
    public mixed $clientRequestTokenRequiredException = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreatePullRequestOutput $createPullRequestOutput
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\CreatePullRequestOutput $createPullRequestOutput = null;
    
    /**
     * EncryptionIntegrityChecksFailedException
     * 
     * @var mixed $encryptionIntegrityChecksFailedException
     */
	
    public mixed $encryptionIntegrityChecksFailedException = null;
    
    /**
     * EncryptionKeyAccessDeniedException
     * 
     * @var mixed $encryptionKeyAccessDeniedException
     */
	
    public mixed $encryptionKeyAccessDeniedException = null;
    
    /**
     * EncryptionKeyDisabledException
     * 
     * @var mixed $encryptionKeyDisabledException
     */
	
    public mixed $encryptionKeyDisabledException = null;
    
    /**
     * EncryptionKeyNotFoundException
     * 
     * @var mixed $encryptionKeyNotFoundException
     */
	
    public mixed $encryptionKeyNotFoundException = null;
    
    /**
     * EncryptionKeyUnavailableException
     * 
     * @var mixed $encryptionKeyUnavailableException
     */
	
    public mixed $encryptionKeyUnavailableException = null;
    
    /**
     * IdempotencyParameterMismatchException
     * 
     * @var mixed $idempotencyParameterMismatchException
     */
	
    public mixed $idempotencyParameterMismatchException = null;
    
    /**
     * InvalidClientRequestTokenException
     * 
     * @var mixed $invalidClientRequestTokenException
     */
	
    public mixed $invalidClientRequestTokenException = null;
    
    /**
     * InvalidDescriptionException
     * 
     * @var mixed $invalidDescriptionException
     */
	
    public mixed $invalidDescriptionException = null;
    
    /**
     * InvalidReferenceNameException
     * 
     * @var mixed $invalidReferenceNameException
     */
	
    public mixed $invalidReferenceNameException = null;
    
    /**
     * InvalidRepositoryNameException
     * 
     * @var mixed $invalidRepositoryNameException
     */
	
    public mixed $invalidRepositoryNameException = null;
    
    /**
     * InvalidTargetException
     * 
     * @var mixed $invalidTargetException
     */
	
    public mixed $invalidTargetException = null;
    
    /**
     * InvalidTargetsException
     * 
     * @var mixed $invalidTargetsException
     */
	
    public mixed $invalidTargetsException = null;
    
    /**
     * InvalidTitleException
     * 
     * @var mixed $invalidTitleException
     */
	
    public mixed $invalidTitleException = null;
    
    /**
     * MaximumOpenPullRequestsExceededException
     * 
     * @var mixed $maximumOpenPullRequestsExceededException
     */
	
    public mixed $maximumOpenPullRequestsExceededException = null;
    
    /**
     * MultipleRepositoriesInPullRequestException
     * 
     * @var mixed $multipleRepositoriesInPullRequestException
     */
	
    public mixed $multipleRepositoriesInPullRequestException = null;
    
    /**
     * ReferenceDoesNotExistException
     * 
     * @var mixed $referenceDoesNotExistException
     */
	
    public mixed $referenceDoesNotExistException = null;
    
    /**
     * ReferenceNameRequiredException
     * 
     * @var mixed $referenceNameRequiredException
     */
	
    public mixed $referenceNameRequiredException = null;
    
    /**
     * ReferenceTypeNotSupportedException
     * 
     * @var mixed $referenceTypeNotSupportedException
     */
	
    public mixed $referenceTypeNotSupportedException = null;
    
    /**
     * RepositoryDoesNotExistException
     * 
     * @var mixed $repositoryDoesNotExistException
     */
	
    public mixed $repositoryDoesNotExistException = null;
    
    /**
     * RepositoryNameRequiredException
     * 
     * @var mixed $repositoryNameRequiredException
     */
	
    public mixed $repositoryNameRequiredException = null;
    
    /**
     * SourceAndDestinationAreSameException
     * 
     * @var mixed $sourceAndDestinationAreSameException
     */
	
    public mixed $sourceAndDestinationAreSameException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * TargetRequiredException
     * 
     * @var mixed $targetRequiredException
     */
	
    public mixed $targetRequiredException = null;
    
    /**
     * TargetsRequiredException
     * 
     * @var mixed $targetsRequiredException
     */
	
    public mixed $targetsRequiredException = null;
    
    /**
     * TitleRequiredException
     * 
     * @var mixed $titleRequiredException
     */
	
    public mixed $titleRequiredException = null;
    
	public function __construct()
	{
		$this->clientRequestTokenRequiredException = null;
		$this->contentType = "";
		$this->createPullRequestOutput = null;
		$this->encryptionIntegrityChecksFailedException = null;
		$this->encryptionKeyAccessDeniedException = null;
		$this->encryptionKeyDisabledException = null;
		$this->encryptionKeyNotFoundException = null;
		$this->encryptionKeyUnavailableException = null;
		$this->idempotencyParameterMismatchException = null;
		$this->invalidClientRequestTokenException = null;
		$this->invalidDescriptionException = null;
		$this->invalidReferenceNameException = null;
		$this->invalidRepositoryNameException = null;
		$this->invalidTargetException = null;
		$this->invalidTargetsException = null;
		$this->invalidTitleException = null;
		$this->maximumOpenPullRequestsExceededException = null;
		$this->multipleRepositoriesInPullRequestException = null;
		$this->referenceDoesNotExistException = null;
		$this->referenceNameRequiredException = null;
		$this->referenceTypeNotSupportedException = null;
		$this->repositoryDoesNotExistException = null;
		$this->repositoryNameRequiredException = null;
		$this->sourceAndDestinationAreSameException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->targetRequiredException = null;
		$this->targetsRequiredException = null;
		$this->titleRequiredException = null;
	}
}
