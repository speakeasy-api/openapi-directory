/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UALookupRequest extends SpeakeasyBase {
  /**
   * This parameter is only used in combination with 'device-model' when doing direct device lookups without any user-agent data. Set this to the brand or manufacturer name, this is required for accurate device detection with ambiguous model names. On android you can get the device brand from: https://developer.android.com/reference/android/os/Build#MANUFACTURER
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device-brand",
  })
  deviceBrand?: string;

  /**
   * For client hints this corresponds to the 'UA-Model' header or 'model' from NavigatorUAData. <br>You can also use this parameter to lookup a device directly by its model name, model code or hardware code, on android you can get the model name from: https://developer.android.com/reference/android/os/Build.html#MODEL
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=device-model",
  })
  deviceModel?: string;

  /**
   * The user-agent string to lookup. For client hints use the 'UA' header or the JSON data directly from 'navigator.userAgentData.brands' or 'navigator.userAgentData.getHighEntropyValues()'
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ua" })
  ua: string;

  /**
   * For client hints this corresponds to the 'UA-Mobile' header or 'mobile' from NavigatorUAData
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ua-mobile",
  })
  uaMobile?: string;

  /**
   * For client hints this corresponds to the 'UA-Platform' header or 'platform' from NavigatorUAData
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ua-platform",
  })
  uaPlatform?: string;

  /**
   * For client hints this corresponds to the 'UA-Platform-Version' header or 'platformVersion' from NavigatorUAData
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ua-platform-version",
  })
  uaPlatformVersion?: string;

  /**
   * For client hints this corresponds to the 'UA-Full-Version' header or 'uaFullVersion' from NavigatorUAData
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ua-version",
  })
  uaVersion?: string;
}

export class UALookupResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  uaLookupResponse?: shared.UALookupResponse;
}
