// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateStreamingURLXAmzTargetEnum
type CreateStreamingURLXAmzTargetEnum string

const (
	CreateStreamingURLXAmzTargetEnumPhotonAdminProxyServiceCreateStreamingURL CreateStreamingURLXAmzTargetEnum = "PhotonAdminProxyService.CreateStreamingURL"
)

func (e CreateStreamingURLXAmzTargetEnum) ToPointer() *CreateStreamingURLXAmzTargetEnum {
	return &e
}

func (e *CreateStreamingURLXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PhotonAdminProxyService.CreateStreamingURL":
		*e = CreateStreamingURLXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateStreamingURLXAmzTargetEnum: %v", v)
	}
}

type CreateStreamingURLRequest struct {
	CreateStreamingURLRequest shared.CreateStreamingURLRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                CreateStreamingURLXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateStreamingURLResponse struct {
	ContentType string
	// Success
	CreateStreamingURLResult *shared.CreateStreamingURLResult
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// ResourceNotAvailableException
	ResourceNotAvailableException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
