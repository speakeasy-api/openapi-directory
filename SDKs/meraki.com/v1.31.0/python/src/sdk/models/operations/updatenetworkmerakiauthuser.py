"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkMerakiAuthUserRequestBodyAuthorizations:
    
    ssid_number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssidNumber') }})
    r"""SSID for which the user is being authorized"""  
    expires_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiresAt'), 'exclude': lambda f: f is None }})
    r"""Date for authorization to expire. Default is for authorization to not expire."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkMerakiAuthUserRequestBody:
    
    authorizations: Optional[list[UpdateNetworkMerakiAuthUserRequestBodyAuthorizations]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizations'), 'exclude': lambda f: f is None }})
    r"""Authorization zones and expiration dates for the user."""  
    email_password_to_user: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emailPasswordToUser'), 'exclude': lambda f: f is None }})
    r"""Whether or not Meraki should email the password to user. Default is false."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user. Only allowed If the user is not Dashboard administrator."""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""The password for this user account. Only allowed If the user is not Dashboard administrator."""  
    

@dataclasses.dataclass
class UpdateNetworkMerakiAuthUserRequest:
    
    meraki_auth_user_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'merakiAuthUserId', 'style': 'simple', 'explode': False }})  
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkMerakiAuthUserRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkMerakiAuthUser200ApplicationJSONAuthorizations:
    
    authorized_by_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedByEmail'), 'exclude': lambda f: f is None }})
    r"""User is authorized by the account email address"""  
    authorized_by_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedByName'), 'exclude': lambda f: f is None }})
    r"""User is authorized by the account name"""  
    authorized_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedZone'), 'exclude': lambda f: f is None }})
    r"""Authorized zone of the user"""  
    expires_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiresAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Authorization expiration time"""  
    ssid_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssidNumber'), 'exclude': lambda f: f is None }})
    r"""SSID number"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkMerakiAuthUser200ApplicationJSON:
    r"""Successful operation"""
    
    account_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountType'), 'exclude': lambda f: f is None }})
    r"""Authorization type for user."""  
    authorizations: Optional[list[UpdateNetworkMerakiAuthUser200ApplicationJSONAuthorizations]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizations'), 'exclude': lambda f: f is None }})
    r"""User authorization info"""  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Creation time of the user"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Email address of the user"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Meraki auth user id"""  
    is_admin: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isAdmin'), 'exclude': lambda f: f is None }})
    r"""Whether or not the user is a Dashboard administrator"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user"""  
    

@dataclasses.dataclass
class UpdateNetworkMerakiAuthUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_meraki_auth_user_200_application_json_object: Optional[UpdateNetworkMerakiAuthUser200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful operation"""  
    