/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregatedSourceStatusTypeEnum } from "./aggregatedsourcestatustypeenum";
import { AggregatedSourceTypeEnum } from "./aggregatedsourcetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The current sync status between the source and the aggregator account.
 */
export class AggregatedSourceStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AwsRegion" })
  awsRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastErrorCode" })
  lastErrorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastErrorMessage" })
  lastErrorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateStatus" })
  lastUpdateStatus?: AggregatedSourceStatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceId" })
  sourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceType" })
  sourceType?: AggregatedSourceTypeEnum;
}
