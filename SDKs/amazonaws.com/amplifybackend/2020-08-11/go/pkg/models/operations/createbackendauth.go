// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum - Defines whether you want to configure only authentication or both authentication and authorization settings.
type CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum string

const (
	CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnumUserPoolOnly            CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum = "USER_POOL_ONLY"
	CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnumIdentityPoolAndUserPool CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum = "IDENTITY_POOL_AND_USER_POOL"
)

func (e *CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER_POOL_ONLY":
		fallthrough
	case "IDENTITY_POOL_AND_USER_POOL":
		*e = CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum: %s", s)
	}
}

// CreateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs - Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.
type CreateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs struct {
	IdentityPoolName     string `json:"IdentityPoolName"`
	UnauthenticatedLogin bool   `json:"UnauthenticatedLogin"`
}

// CreateBackendAuthRequestBodyResourceConfigServiceEnum - Defines the service name to use when configuring an authentication resource in your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigServiceEnum string

const (
	CreateBackendAuthRequestBodyResourceConfigServiceEnumCognito CreateBackendAuthRequestBodyResourceConfigServiceEnum = "COGNITO"
)

func (e *CreateBackendAuthRequestBodyResourceConfigServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COGNITO":
		*e = CreateBackendAuthRequestBodyResourceConfigServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAuthRequestBodyResourceConfigServiceEnum: %s", s)
	}
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum - <b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users who want to recover their password.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum string

const (
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnumEmail CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum = "EMAIL"
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnumSms   CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum = "SMS"
)

func (e *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EMAIL":
		fallthrough
	case "SMS":
		*e = CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum: %s", s)
	}
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings - <b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings struct {
	EmailMessage *string `json:"EmailMessage,omitempty"`
	EmailSubject *string `json:"EmailSubject,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings - <b>(DEPRECATED)</b> The configuration for the SMS message sent when an app user forgets their password.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings struct {
	SmsMessage *string `json:"SmsMessage,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword - <b>(DEPRECATED)</b> Describes the forgotten password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword struct {
	DeliveryMethod CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum `json:"DeliveryMethod"`
	EmailSettings  *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings     `json:"EmailSettings,omitempty"`
	SmsSettings    *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings       `json:"SmsSettings,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings - Describes the configuration settings and methods for your Amplify app users to use MFA.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings struct {
	MfaTypes   []shared.MfaTypesElementEnum `json:"MfaTypes,omitempty"`
	SmsMessage *string                      `json:"SmsMessage,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa - Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa struct {
	MFAMode  shared.MFAModeEnum                                                    `json:"MFAMode"`
	Settings *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings `json:"Settings,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum - The OAuth grant type that you use to allow app users to authenticate from your Amplify app.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum string

const (
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnumCode     CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum = "CODE"
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnumImplicit CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum = "IMPLICIT"
)

func (e *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE":
		fallthrough
	case "IMPLICIT":
		*e = CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum: %s", s)
	}
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings - The settings for using social providers to access your Amplify app.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings struct {
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	Facebook *shared.BackendAuthSocialProviderConfig `json:"Facebook,omitempty"`
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	Google *shared.BackendAuthSocialProviderConfig `json:"Google,omitempty"`
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	LoginWithAmazon *shared.BackendAuthSocialProviderConfig `json:"LoginWithAmazon,omitempty"`
	// Describes Apple social federation configurations for allowing your app users to sign in using OAuth.
	SignInWithApple *shared.BackendAuthAppleProviderConfig `json:"SignInWithApple,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth - Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth struct {
	DomainPrefix           *string                                                                               `json:"DomainPrefix,omitempty"`
	OAuthGrantType         CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum      `json:"OAuthGrantType"`
	OAuthScopes            []shared.OAuthScopesElementEnum                                                       `json:"OAuthScopes"`
	RedirectSignInURIs     []string                                                                              `json:"RedirectSignInURIs"`
	RedirectSignOutURIs    []string                                                                              `json:"RedirectSignOutURIs"`
	SocialProviderSettings *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings `json:"SocialProviderSettings,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy - Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy struct {
	AdditionalConstraints []shared.AdditionalConstraintsElementEnum `json:"AdditionalConstraints,omitempty"`
	MinimumLength         float64                                   `json:"MinimumLength"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum - Describes the sign-in methods that your Amplify app users use to log in using the Amazon Cognito user pool, configured as a part of your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum string

const (
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnumEmail               CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum = "EMAIL"
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnumEmailAndPhoneNumber CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum = "EMAIL_AND_PHONE_NUMBER"
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnumPhoneNumber         CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum = "PHONE_NUMBER"
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnumUsername            CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum = "USERNAME"
)

func (e *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EMAIL":
		fallthrough
	case "EMAIL_AND_PHONE_NUMBER":
		fallthrough
	case "PHONE_NUMBER":
		fallthrough
	case "USERNAME":
		*e = CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum: %s", s)
	}
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum - The type of verification message to send.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum string

const (
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnumEmail CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum = "EMAIL"
	CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnumSms   CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum = "SMS"
)

func (e *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EMAIL":
		fallthrough
	case "SMS":
		*e = CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum: %s", s)
	}
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings - The settings for the email message.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings struct {
	EmailMessage *string `json:"EmailMessage,omitempty"`
	EmailSubject *string `json:"EmailSubject,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings - The settings for the SMS message.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings struct {
	SmsMessage *string `json:"SmsMessage,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage - Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage struct {
	DeliveryMethod CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum `json:"DeliveryMethod"`
	EmailSettings  *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings     `json:"EmailSettings,omitempty"`
	SmsSettings    *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings       `json:"SmsSettings,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfigUserPoolConfigs - Describes authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.
type CreateBackendAuthRequestBodyResourceConfigUserPoolConfigs struct {
	ForgotPassword           *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword      `json:"ForgotPassword,omitempty"`
	Mfa                      *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa                 `json:"Mfa,omitempty"`
	OAuth                    *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth               `json:"OAuth,omitempty"`
	PasswordPolicy           *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy      `json:"PasswordPolicy,omitempty"`
	RequiredSignUpAttributes []shared.RequiredSignUpAttributesElementEnum                                  `json:"RequiredSignUpAttributes"`
	SignInMethod             CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsSignInMethodEnum     `json:"SignInMethod"`
	UserPoolName             string                                                                        `json:"UserPoolName"`
	VerificationMessage      *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage `json:"VerificationMessage,omitempty"`
}

// CreateBackendAuthRequestBodyResourceConfig - Defines the resource configuration when creating an auth resource in your Amplify project.
type CreateBackendAuthRequestBodyResourceConfig struct {
	AuthResources       *CreateBackendAuthRequestBodyResourceConfigAuthResourcesEnum   `json:"AuthResources,omitempty"`
	IdentityPoolConfigs *CreateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs `json:"IdentityPoolConfigs,omitempty"`
	Service             *CreateBackendAuthRequestBodyResourceConfigServiceEnum         `json:"Service,omitempty"`
	UserPoolConfigs     *CreateBackendAuthRequestBodyResourceConfigUserPoolConfigs     `json:"UserPoolConfigs,omitempty"`
}

type CreateBackendAuthRequestBody struct {
	// The name of the backend environment.
	BackendEnvironmentName string `json:"backendEnvironmentName"`
	// Defines the resource configuration when creating an auth resource in your Amplify project.
	ResourceConfig CreateBackendAuthRequestBodyResourceConfig `json:"resourceConfig"`
	// The name of this resource.
	ResourceName string `json:"resourceName"`
}

type CreateBackendAuthRequest struct {
	RequestBody       CreateBackendAuthRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The app ID.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
}

type CreateBackendAuthResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateBackendAuthResponse *shared.CreateBackendAuthResponse
	// GatewayTimeoutException
	GatewayTimeoutException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
