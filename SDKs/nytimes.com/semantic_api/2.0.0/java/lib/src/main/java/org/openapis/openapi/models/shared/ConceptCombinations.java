/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ConceptCombinations {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_note")
    public String combinationNote;
    public ConceptCombinations withCombinationNote(String combinationNote) {
        this.combinationNote = combinationNote;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_source_concept_id")
    public Long combinationSourceConceptId;
    public ConceptCombinations withCombinationSourceConceptId(Long combinationSourceConceptId) {
        this.combinationSourceConceptId = combinationSourceConceptId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_source_concept_name")
    public String combinationSourceConceptName;
    public ConceptCombinations withCombinationSourceConceptName(String combinationSourceConceptName) {
        this.combinationSourceConceptName = combinationSourceConceptName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_source_concept_type")
    public String combinationSourceConceptType;
    public ConceptCombinations withCombinationSourceConceptType(String combinationSourceConceptType) {
        this.combinationSourceConceptType = combinationSourceConceptType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_target_concept_id")
    public Long combinationTargetConceptId;
    public ConceptCombinations withCombinationTargetConceptId(Long combinationTargetConceptId) {
        this.combinationTargetConceptId = combinationTargetConceptId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_target_concept_name")
    public String combinationTargetConceptName;
    public ConceptCombinations withCombinationTargetConceptName(String combinationTargetConceptName) {
        this.combinationTargetConceptName = combinationTargetConceptName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("combination_target_concept_type")
    public String combinationTargetConceptType;
    public ConceptCombinations withCombinationTargetConceptType(String combinationTargetConceptType) {
        this.combinationTargetConceptType = combinationTargetConceptType;
        return this;
    }
    
}
