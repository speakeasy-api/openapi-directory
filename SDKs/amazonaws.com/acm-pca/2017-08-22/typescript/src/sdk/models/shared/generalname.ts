/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Asn1Subject } from "./asn1subject";
import { EdiPartyName } from "./edipartyname";
import { OtherName } from "./othername";
import { Expose, Type } from "class-transformer";

/**
 * Describes an ASN.1 X.400 <code>GeneralName</code> as defined in <a href="https://datatracker.ietf.org/doc/html/rfc5280">RFC 5280</a>. Only one of the following naming options should be provided. Providing more than one option results in an <code>InvalidArgsException</code> error.
 */
export class GeneralName extends SpeakeasyBase {
  /**
   * Contains information about the certificate subject. The <code>Subject</code> field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The <code>Subject </code>must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DirectoryName" })
  @Type(() => Asn1Subject)
  directoryName?: Asn1Subject;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsName" })
  dnsName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EdiPartyName" })
  @Type(() => EdiPartyName)
  ediPartyName?: EdiPartyName;

  @SpeakeasyMetadata()
  @Expose({ name: "IpAddress" })
  ipAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OtherName" })
  @Type(() => OtherName)
  otherName?: OtherName;

  @SpeakeasyMetadata()
  @Expose({ name: "RegisteredId" })
  registeredId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Rfc822Name" })
  rfc822Name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UniformResourceIdentifier" })
  uniformResourceIdentifier?: string;
}
