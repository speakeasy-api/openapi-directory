/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SubscribeRequest {
    /**
     *  This is the Account object containing the information for this particular subscription. It has all the information needed to create an account for a subscription.
     * 
     * **Values:** A valid account.
     */
    @JsonProperty("Account")
    public SubscribeRequestAccount account;
    public SubscribeRequest withAccount(SubscribeRequestAccount account) {
        this.account = account;
        return this;
    }
    
    /**
     *  This is the object that contains the contact associated with this account in the Account's `BillToId` field.
     * This field is only required if the account does not exist.
     * Values: A valid contact for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillToContact")
    public SubscribeRequestBillToContact billToContact;
    public SubscribeRequest withBillToContact(SubscribeRequestBillToContact billToContact) {
        this.billToContact = billToContact;
        return this;
    }
    
    /**
     *  This is the object defining the payment details for the Account. The Account will be updated with this payment as the default payment method.
     * Use this field if you are associating an electronic payment method with the account. A payment gateway must be enabled.
     * Values: A valid electronic PaymentMethod.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentMethod")
    public SubscribeRequestPaymentMethod paymentMethod;
    public SubscribeRequest withPaymentMethod(SubscribeRequestPaymentMethod paymentMethod) {
        this.paymentMethod = paymentMethod;
        return this;
    }
    
    /**
     * Only used if you want to call this operation in preview mode. After a call in preview mode is completed, Zuora will roll back the subscription and return only the temporary invoice data.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PreviewOptions")
    public SubscribeRequestPreviewOptions previewOptions;
    public SubscribeRequest withPreviewOptions(SubscribeRequestPreviewOptions previewOptions) {
        this.previewOptions = previewOptions;
        return this;
    }
    
    /**
     *  Unless otherwise specified, this field defaults to the information in the `BillToContact` field.
     * 
     * **Values:** A valid contact. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SoldToContact")
    public SubscribeRequestSoldToContact soldToContact;
    public SubscribeRequest withSoldToContact(SubscribeRequestSoldToContact soldToContact) {
        this.soldToContact = soldToContact;
        return this;
    }
    
    /**
     *  This optional object specifies parameters related to invoicing - whether to immediately generate an invoice and collect payment, and whether the invoice should cover all subscriptions or just this new subscription.
     * The default behavior is to invoice immediately for all the account's subscriptions, with the current date as the target date, and immediately collect payment if the account's `AutoPay` flag is true.
     * 
     * 
     * **Values:** A valid SubscribeOptions object. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubscribeOptions")
    public SubscribeRequestSubscribeOptions subscribeOptions;
    public SubscribeRequest withSubscribeOptions(SubscribeRequestSubscribeOptions subscribeOptions) {
        this.subscribeOptions = subscribeOptions;
        return this;
    }
    
    /**
     *  This object contains the information on the contract's dates and terms.
     * 
     * 
     * **Values:** A valid SubscriptionData object. 
     */
    @JsonProperty("SubscriptionData")
    public SubscribeRequestSubscriptionData subscriptionData;
    public SubscribeRequest withSubscriptionData(SubscribeRequestSubscriptionData subscriptionData) {
        this.subscriptionData = subscriptionData;
        return this;
    }
    
}
