/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateAccountResponse - OK - the request has succeeded.
 */
public class CreateAccountResponse {
    /**
     * The code of the new account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountCode")
    public String accountCode;

    public CreateAccountResponse withAccountCode(String accountCode) {
        this.accountCode = accountCode;
        return this;
    }
    
    /**
     * The code of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountHolderCode")
    public String accountHolderCode;

    public CreateAccountResponse withAccountHolderCode(String accountHolderCode) {
        this.accountHolderCode = accountHolderCode;
        return this;
    }
    
    /**
     * The bankAccountUUID of the bank account held by the account holder to couple the account with. Scheduled payouts in currencies matching the currency of this bank account will be sent to this bank account. Payouts in different currencies will be sent to a matching bank account of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountUUID")
    public String bankAccountUUID;

    public CreateAccountResponse withBankAccountUUID(String bankAccountUUID) {
        this.bankAccountUUID = bankAccountUUID;
        return this;
    }
    
    /**
     * The description of the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateAccountResponse withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A list of fields that caused the `/createAccount` request to fail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidFields")
    public ErrorFieldType[] invalidFields;

    public CreateAccountResponse withInvalidFields(ErrorFieldType[] invalidFields) {
        this.invalidFields = invalidFields;
        return this;
    }
    
    /**
     * A set of key and value pairs containing metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;

    public CreateAccountResponse withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * The payout method code held by the account holder to couple the account with. Scheduled card payouts will be sent using this payout method code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutMethodCode")
    public String payoutMethodCode;

    public CreateAccountResponse withPayoutMethodCode(String payoutMethodCode) {
        this.payoutMethodCode = payoutMethodCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutSchedule")
    public PayoutScheduleResponse payoutSchedule;

    public CreateAccountResponse withPayoutSchedule(PayoutScheduleResponse payoutSchedule) {
        this.payoutSchedule = payoutSchedule;
        return this;
    }
    
    /**
     * Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutSpeed")
    public CreateAccountResponsePayoutSpeedEnum payoutSpeed;

    public CreateAccountResponse withPayoutSpeed(CreateAccountResponsePayoutSpeedEnum payoutSpeed) {
        this.payoutSpeed = payoutSpeed;
        return this;
    }
    
    /**
     * The reference of a request. Can be used to uniquely identify the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pspReference")
    public String pspReference;

    public CreateAccountResponse withPspReference(String pspReference) {
        this.pspReference = pspReference;
        return this;
    }
    
    /**
     * The result code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultCode")
    public String resultCode;

    public CreateAccountResponse withResultCode(String resultCode) {
        this.resultCode = resultCode;
        return this;
    }
    
    /**
     * The status of the account.
     * &gt;Permitted values: `Active`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CreateAccountResponseStatusEnum status;

    public CreateAccountResponse withStatus(CreateAccountResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public CreateAccountResponse(){}
}
