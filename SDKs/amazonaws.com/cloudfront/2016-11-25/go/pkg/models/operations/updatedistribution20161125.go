// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDistribution20161125RequestBodyDistributionConfig - A distribution configuration.
type UpdateDistribution20161125RequestBodyDistributionConfig struct {
	Aliases              *shared.Aliases
	CacheBehaviors       *shared.CacheBehaviors
	CallerReference      *string
	Comment              *string
	CustomErrorResponses *shared.CustomErrorResponses
	DefaultCacheBehavior *shared.DefaultCacheBehavior
	DefaultRootObject    *string
	Enabled              *bool
	HTTPVersion          *shared.HTTPVersionEnum
	IsIpv6Enabled        *bool
	Logging              *shared.LoggingConfig
	Origins              *shared.Origins
	PriceClass           *shared.PriceClassEnum
	// A complex type that identifies ways in which you want to restrict distribution of your content.
	Restrictions *shared.Restrictions
	// <p>A complex type that specifies the following:</p> <ul> <li> <p>Which SSL/TLS certificate to use when viewers request objects using HTTPS</p> </li> <li> <p>Whether you want CloudFront to use dedicated IP addresses or SNI when you're using alternate domain names in your object names</p> </li> <li> <p>The minimum protocol version that you want CloudFront to use when communicating with viewers</p> </li> </ul> <p>For more information, see <a href="http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html">Using an HTTPS Connection to Access Your Objects</a> in the <i>Amazon Amazon CloudFront Developer Guide</i>.</p>
	ViewerCertificate *shared.ViewerCertificate
	WebACLID          *string
}

type UpdateDistribution20161125RequestBody struct {
	// A distribution configuration.
	DistributionConfig UpdateDistribution20161125RequestBodyDistributionConfig
}

type UpdateDistribution20161125Request struct {
	// The distribution's id.
	ID string `pathParam:"style=simple,explode=false,name=Id"`
	// The value of the <code>ETag</code> header that you received when retrieving the distribution's configuration. For example: <code>E2QWRUHAPOMQZL</code>.
	IfMatch           *string `header:"style=simple,explode=false,name=If-Match"`
	RequestBody       []byte  `request:"mediaType=text/xml"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateDistribution20161125Response struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
