"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = void 0;
var utils_1 = require("../../../internal/utils");
var api_1 = require("./api");
var authentication_1 = require("./authentication");
var backend_1 = require("./backend");
var billing_1 = require("./billing");
var context_1 = require("./context");
var control_1 = require("./control");
var customerror_1 = require("./customerror");
var documentation_1 = require("./documentation");
var endpoint_1 = require("./endpoint");
var enum_1 = require("./enum");
var http_1 = require("./http");
var logdescriptor_1 = require("./logdescriptor");
var logging_1 = require("./logging");
var metricdescriptor_1 = require("./metricdescriptor");
var monitoredresourcedescriptor_1 = require("./monitoredresourcedescriptor");
var monitoring_1 = require("./monitoring");
var publishing_1 = require("./publishing");
var quota_1 = require("./quota");
var sourceinfo_1 = require("./sourceinfo");
var systemparameters_1 = require("./systemparameters");
var type_1 = require("./type");
var usage_1 = require("./usage");
var class_transformer_1 = require("class-transformer");
/**
 * `Service` is the root object of Google API service configuration (service config). It describes the basic information about a logical service, such as the service name and the user-facing title, and delegates other aspects to sub-sections. Each sub-section is either a proto message or a repeated proto message that configures a specific aspect, such as auth. For more information, see each proto message definition. Example: type: google.api.Service name: calendar.googleapis.com title: Google Calendar API apis: - name: google.calendar.v3.Calendar visibility: rules: - selector: "google.calendar.v3.*" restriction: PREVIEW backend: rules: - selector: "google.calendar.v3.*" address: calendar.example.com authentication: providers: - id: google_calendar_auth jwks_uri: https://www.googleapis.com/oauth2/v1/certs issuer: https://securetoken.google.com rules: - selector: "*" requirements: provider_id: google_calendar_auth
 */
var Service = /** @class */ (function (_super) {
    __extends(Service, _super);
    function Service() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: api_1.Api }),
        (0, class_transformer_1.Expose)({ name: "apis" }),
        (0, class_transformer_1.Type)(function () { return api_1.Api; }),
        __metadata("design:type", Array)
    ], Service.prototype, "apis", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication" }),
        (0, class_transformer_1.Type)(function () { return authentication_1.Authentication; }),
        __metadata("design:type", authentication_1.Authentication)
    ], Service.prototype, "authentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "backend" }),
        (0, class_transformer_1.Type)(function () { return backend_1.Backend; }),
        __metadata("design:type", backend_1.Backend)
    ], Service.prototype, "backend", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billing" }),
        (0, class_transformer_1.Type)(function () { return billing_1.Billing; }),
        __metadata("design:type", billing_1.Billing)
    ], Service.prototype, "billing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "configVersion" }),
        __metadata("design:type", Number)
    ], Service.prototype, "configVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "context" }),
        (0, class_transformer_1.Type)(function () { return context_1.Context; }),
        __metadata("design:type", context_1.Context)
    ], Service.prototype, "context", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "control" }),
        (0, class_transformer_1.Type)(function () { return control_1.Control; }),
        __metadata("design:type", control_1.Control)
    ], Service.prototype, "control", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customError" }),
        (0, class_transformer_1.Type)(function () { return customerror_1.CustomError; }),
        __metadata("design:type", customerror_1.CustomError)
    ], Service.prototype, "customError", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "documentation" }),
        (0, class_transformer_1.Type)(function () { return documentation_1.Documentation; }),
        __metadata("design:type", documentation_1.Documentation)
    ], Service.prototype, "documentation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: endpoint_1.Endpoint }),
        (0, class_transformer_1.Expose)({ name: "endpoints" }),
        (0, class_transformer_1.Type)(function () { return endpoint_1.Endpoint; }),
        __metadata("design:type", Array)
    ], Service.prototype, "endpoints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: enum_1.Enum }),
        (0, class_transformer_1.Expose)({ name: "enums" }),
        (0, class_transformer_1.Type)(function () { return enum_1.Enum; }),
        __metadata("design:type", Array)
    ], Service.prototype, "enums", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "http" }),
        (0, class_transformer_1.Type)(function () { return http_1.Http; }),
        __metadata("design:type", http_1.Http)
    ], Service.prototype, "http", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Service.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "logging" }),
        (0, class_transformer_1.Type)(function () { return logging_1.Logging; }),
        __metadata("design:type", logging_1.Logging)
    ], Service.prototype, "logging", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: logdescriptor_1.LogDescriptor }),
        (0, class_transformer_1.Expose)({ name: "logs" }),
        (0, class_transformer_1.Type)(function () { return logdescriptor_1.LogDescriptor; }),
        __metadata("design:type", Array)
    ], Service.prototype, "logs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: metricdescriptor_1.MetricDescriptor }),
        (0, class_transformer_1.Expose)({ name: "metrics" }),
        (0, class_transformer_1.Type)(function () { return metricdescriptor_1.MetricDescriptor; }),
        __metadata("design:type", Array)
    ], Service.prototype, "metrics", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: monitoredresourcedescriptor_1.MonitoredResourceDescriptor }),
        (0, class_transformer_1.Expose)({ name: "monitoredResources" }),
        (0, class_transformer_1.Type)(function () { return monitoredresourcedescriptor_1.MonitoredResourceDescriptor; }),
        __metadata("design:type", Array)
    ], Service.prototype, "monitoredResources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monitoring" }),
        (0, class_transformer_1.Type)(function () { return monitoring_1.Monitoring; }),
        __metadata("design:type", monitoring_1.Monitoring)
    ], Service.prototype, "monitoring", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Service.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "producerProjectId" }),
        __metadata("design:type", String)
    ], Service.prototype, "producerProjectId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "publishing" }),
        (0, class_transformer_1.Type)(function () { return publishing_1.Publishing; }),
        __metadata("design:type", publishing_1.Publishing)
    ], Service.prototype, "publishing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quota" }),
        (0, class_transformer_1.Type)(function () { return quota_1.Quota; }),
        __metadata("design:type", quota_1.Quota)
    ], Service.prototype, "quota", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceInfo" }),
        (0, class_transformer_1.Type)(function () { return sourceinfo_1.SourceInfo; }),
        __metadata("design:type", sourceinfo_1.SourceInfo)
    ], Service.prototype, "sourceInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "systemParameters" }),
        (0, class_transformer_1.Type)(function () { return systemparameters_1.SystemParameters; }),
        __metadata("design:type", systemparameters_1.SystemParameters)
    ], Service.prototype, "systemParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: type_1.TypeT }),
        (0, class_transformer_1.Expose)({ name: "systemTypes" }),
        (0, class_transformer_1.Type)(function () { return type_1.TypeT; }),
        __metadata("design:type", Array)
    ], Service.prototype, "systemTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], Service.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: type_1.TypeT }),
        (0, class_transformer_1.Expose)({ name: "types" }),
        (0, class_transformer_1.Type)(function () { return type_1.TypeT; }),
        __metadata("design:type", Array)
    ], Service.prototype, "types", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "usage" }),
        (0, class_transformer_1.Type)(function () { return usage_1.Usage; }),
        __metadata("design:type", usage_1.Usage)
    ], Service.prototype, "usage", void 0);
    return Service;
}(utils_1.SpeakeasyBase));
exports.Service = Service;
