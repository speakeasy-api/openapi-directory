// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigurationDeploymentStatusEnum string

const (
	ConfigurationDeploymentStatusEnumDeployed ConfigurationDeploymentStatusEnum = "deployed"
	ConfigurationDeploymentStatusEnumPending  ConfigurationDeploymentStatusEnum = "pending"
	ConfigurationDeploymentStatusEnumFailed   ConfigurationDeploymentStatusEnum = "failed"
)

func (e ConfigurationDeploymentStatusEnum) ToPointer() *ConfigurationDeploymentStatusEnum {
	return &e
}

func (e *ConfigurationDeploymentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deployed":
		fallthrough
	case "pending":
		fallthrough
	case "failed":
		*e = ConfigurationDeploymentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigurationDeploymentStatusEnum: %v", v)
	}
}
