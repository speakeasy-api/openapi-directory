/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TeamsGetUsersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class TeamsGetUsersRequest extends SpeakeasyBase {
  /**
   * The organization's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=org_name",
  })
  orgName: string;

  /**
   * The team's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_name",
  })
  teamName: string;
}

export enum TeamsGetUsersDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class TeamsGetUsersDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: TeamsGetUsersDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class TeamsGetUsersDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => TeamsGetUsersDefaultApplicationJSONError)
  error: TeamsGetUsersDefaultApplicationJSONError;
}

/**
 * The role of the user has within the team
 */
export enum TeamsGetUsers200ApplicationJSONRoleEnum {
  Maintainer = "maintainer",
  Collaborator = "collaborator",
}

/**
 * Success
 */
export class TeamsGetUsers200ApplicationJSON extends SpeakeasyBase {
  /**
   * The full name of the user. Might for example be first and last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The unique name that is used to identify the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The role of the user has within the team
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role: TeamsGetUsers200ApplicationJSONRoleEnum;
}

export class TeamsGetUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  teamsGetUsers200ApplicationJSONObject?: TeamsGetUsers200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  teamsGetUsersDefaultApplicationJSONObject?: TeamsGetUsersDefaultApplicationJSON;
}
