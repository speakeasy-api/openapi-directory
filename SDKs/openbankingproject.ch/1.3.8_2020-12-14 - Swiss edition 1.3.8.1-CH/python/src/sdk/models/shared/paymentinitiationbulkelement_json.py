"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountreference16_ch as shared_accountreference16_ch
from ..shared import address as shared_address
from ..shared import amount as shared_amount
from ..shared import chargebearer_enum as shared_chargebearer_enum
from ..shared import creditoragent7_ch as shared_creditoragent7_ch
from ..shared import exchangerateinformation1 as shared_exchangerateinformation1
from ..shared import externalservicelevel1code_enum as shared_externalservicelevel1code_enum
from ..shared import purposecode_enum as shared_purposecode_enum
from ..shared import remittanceinformationstructured as shared_remittanceinformationstructured
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentInitiationBulkElementJSON:
    r"""Generic body for a bulk payment initation entry.
    
    The bulk entry type is a type which follows the JSON formats for the supported products for single payments
    excluding the data elements (if supported):
      * debtorAccount
      * requestedExecutionDate,
      * requestedExecutionTime.
    These data elements may not be contained in any bulk entry.
    
    This data object can be used to represent valid bulk payment initiations entry for the following JSON based payment product,
    which where defined in the Implementation Guidelines:
    
      * domestic-swiss-credit-transfers-isr
      * domestic-swiss-credit-transfers
      * domestic-swiss-credit-transfers-qr
      * domestic-swiss-foreign-credit-transfers
      * swiss-sepa-credit-transfers
      * swiss-cross-border-credit-transfers
    
    For the convenience of the implementer additional which are already predefinded in the Implementation Guidelines
    are included (but commented in source code), such that an ASPSP may add them easily.
    
    Take care: Since the format is intended to fit for all payment products
    there are additional conditions which are NOT covered by this specification.
    Please check the SIX Swiss Payment Standards implementation guidelines for details.
    
    
    The following data element are depending on the actual payment product available (in source code):
    
    <table style=\"width:100%\">
    <tr><td></td><td>Payment Type 1: ISR</td><td>Payment Type 3: IBAN/postal account and IID/BIC</td><td>Payment Type 3: QR-bill</td><td>Payment Type 4: Foreign currency</td><td>Payment Type 5: Foreign SEPA</td><td>Payment Type 6: Foreign</td></tr>
    <tr><td>CH Domestic Data Element</td><td>domestic-swiss-credit-transfers-isr</td><td>domestic-swiss-credit-transfers</td><td>domestic-swiss-credit-transfers-qr</td><td>domestic-swiss-foreign-credit-transfers</td><td>swiss-sepa-credit-transfers</td><td>swiss-cross-border-credit-transfers</td></tr>
    <tr><td>endToEndIdentification</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td></tr>
    <tr><td>instructionIdentification</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td></tr>
    <tr><td>debtorName</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td></tr>
    <tr><td>debtorId</td><td>optional 3)</td><td>optional 3)</td><td>optional 3)</td><td>optional 3)</td><td>optional 3)</td><td>optional 3)</td></tr>
    <tr><td>ultimateDebtor</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>instructedAmount (incl. currency)</td><td>mandatory</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td></tr>
    <tr><td>equivalentAmount</td><td>n.a.</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td></tr>
    <tr><td>transactionCurrency</td><td>n.a.</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td><td>dependent 1)</td></tr>
    <tr><td>exchangeRateInformation</td><td>n.a.</td><td>optional 2)</td><td>optional 2)</td><td>optional 2)</td><td>optional 2)</td><td>optional 2)</td></tr>
    <tr><td>creditorAccount</td><td>mandatory</td><td>mandatory</td><td>mandatory 8)</td><td>mandatory</td><td>mandatory</td><td>mandatory</td></tr>
    <tr><td>creditorAgent</td><td>n.a.</td><td>dependent 4)</td><td>dependent 4)</td><td>dependent 4)</td><td>dependent 4)</td><td>dependent 4)</td></tr>
    <tr><td>creditorAgentName</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>dependent 5)</td><td>n.a.</td><td>dependent 5)</td></tr>
    <tr><td>creditorName</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td><td>mandatory</td></tr>
    <tr><td>creditorId</td><td>n.a.</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>creditorAddress</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>creditorNameAndAddress</td><td>n.a.</td><td>dependent</td><td>dependent</td><td>dependent</td><td>dependent</td><td>dependent</td></tr>
    <tr><td>ultimateCreditor</td><td>n.a.</td><td>optional</td><td>n.a. (for future use)</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>chargeBearer</td><td>n.a.</td><td>optional</td><td>optional</td><td>optional</td><td>mandatory</td><td>optional</td></tr>
    <tr><td>purposeCode</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>serviceLevel</td><td>n.a.</td><td>optional</td><td>optional</td><td>optional</td><td>mandatory</td><td>optional</td></tr>
    <tr><td>remittanceInformationUnstructured</td><td>n.a.</td><td>optional</td><td>n.a.</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>remittanceInformationUnstructuredArray</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td></tr>
    <tr><td>remittanceInformationStructured</td><td>mandatory</td><td>optional</td><td>mandatory 6)</td><td>optional</td><td>optional</td><td>optional</td></tr>
    <tr><td>remittanceInformationStructuredArray</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>n.a.</td></tr>
    <tr><td>intermediaryAgent</td><td>n.a.</td><td>n.a.</td><td>n.a.</td><td>optional 2)</td><td>n.a.</td><td>optional 2)</td></tr>
    </table>
    
    Footnotes from the table:
    1) This element may only be used by agreement with the instructed financial institution.
    2) The element may only be used in consultation with the financial institution commissioned.
    3) The element is currently ignored by financial institutions.
    4) Dependence on creditorAccount, see SIX Swiss Payments Standards implementation guidelines.
    5) Type 4(V3), 6(V2, V3): Must be present. Type 4(V2): May be present. Other species: May not be present.
    6) QR-reference, creditor reference or IPI reference
    7) currencyOfTransfer is a subfield of equivalentAmount and may only be used if equivalentAmount is used instead of instructedAmount.
    8) QR-IBAN (CH/LI) must be present.
    
    IMPORTANT: In this API definition the following holds:
      *  All data elements mentioned above are defined, but some of them are commented,
        i.e. they are only visible in the source code and can be used by uncommenting them.
      * Data elements which are mandatory in the table above for all payment products
        are set to be mandatory in this specification.
      * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.
      * Data elements which are indicated to be option, conditional or mandatory for at least one payment product
        in the table above are set to be optional in the s specification except the case where all are definde to be mandatory.
      * Data element which are inticated to be n.a. can be used by the ASPS if needed.
        In this case uncomment tthe the relatetd lines in the source code.
      * If one uses this data types for some payment products he has to ensure that the used data type is
        valid according to the underlying payment product, e.g. by some appropriate validations.
    """
    
    creditor_account: shared_accountreference16_ch.AccountReference16CH = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorAccount') }})
    r"""Reference to an account by either
      * IBAN, of a payment accounts, or
      * otherAccountIdentification, for payment accounts if there is no IBAN
    adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
    """  
    creditor_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorName') }})
    r"""Creditor name."""  
    debtor_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debtorName') }})
    r"""Debtor name."""  
    end_to_end_identification: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endToEndIdentification') }})  
    charge_bearer: Optional[shared_chargebearer_enum.ChargeBearerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chargeBearer'), 'exclude': lambda f: f is None }})
    r"""Charge Bearer. ChargeBearerType1Code from ISO20022."""  
    creditor_address: Optional[shared_address.Address] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorAddress'), 'exclude': lambda f: f is None }})  
    creditor_agent: Optional[shared_creditoragent7_ch.CreditorAgent7CH] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorAgent'), 'exclude': lambda f: f is None }})
    r"""Reference to an creditorAgent by either
      * BIC, of the creditor bank, or
      * IID, of the creditor bank, or
      * IID and optional name and address of the creditor bank or
      * Name and address of the creditor bank
    adapted from ISO pain.001.001.03.ch.02 FinancialInstitutionIdentification7-CH
    """  
    creditor_agent_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorAgentName'), 'exclude': lambda f: f is None }})
    r"""Creditor agent name."""  
    creditor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorId'), 'exclude': lambda f: f is None }})
    r"""Identification of Creditors, e.g. a SEPA Creditor ID."""  
    creditor_name_and_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creditorNameAndAddress'), 'exclude': lambda f: f is None }})
    r"""Creditor Name and Address in a free text field."""  
    debtor_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('debtorId'), 'exclude': lambda f: f is None }})
    r"""Debtor Id."""  
    equivalent_amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('equivalentAmount'), 'exclude': lambda f: f is None }})  
    exchange_rate_information: Optional[shared_exchangerateinformation1.ExchangeRateInformation1] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchangeRateInformation'), 'exclude': lambda f: f is None }})
    r"""as in ISO pain.001.001.03.ch.02 ExchangeRateInformation1"""  
    instructed_amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructedAmount'), 'exclude': lambda f: f is None }})  
    intermediary_agent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intermediaryAgent'), 'exclude': lambda f: f is None }})
    r"""BICFI"""  
    purpose_code: Optional[shared_purposecode_enum.PurposeCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purposeCode'), 'exclude': lambda f: f is None }})
    r"""ExternalPurpose1Code from ISO 20022.
    
    Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
    """  
    remittance_information_structured: Optional[shared_remittanceinformationstructured.RemittanceInformationStructured] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remittanceInformationStructured'), 'exclude': lambda f: f is None }})
    r"""Structured remittance information."""  
    remittance_information_unstructured: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remittanceInformationUnstructured'), 'exclude': lambda f: f is None }})
    r"""Unstructured remittance information."""  
    service_level: Optional[shared_externalservicelevel1code_enum.ExternalServiceLevel1CodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceLevel'), 'exclude': lambda f: f is None }})
    r"""Specifies the external service level code in the format of character string with a maximum length of 4 characters."""  
    transaction_currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionCurrency'), 'exclude': lambda f: f is None }})
    r"""ISO 4217 Alpha 3 currency code."""  
    ultimate_creditor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ultimateCreditor'), 'exclude': lambda f: f is None }})
    r"""Ultimate creditor."""  
    ultimate_debtor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ultimateDebtor'), 'exclude': lambda f: f is None }})
    r"""Ultimate debtor."""  
    