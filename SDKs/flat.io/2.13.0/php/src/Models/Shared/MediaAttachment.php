<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MediaAttachment - Media attachment. The API will automatically resolve the details, oEmbed,
 * 
 * and media available if possible and return them in this object
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MediaAttachment
{
    /**
     * The resolved author name of the attachment
     * 
     * @var ?string $authorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorName = null;
    
    /**
     * The resolved author url of the attachment
     * 
     * @var ?string $authorUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authorUrl = null;
    
    /**
     * The resolved description of the attachment
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The ID of the Google Drive File
     * 
     * @var ?string $googleDriveFileId
     */
	#[\JMS\Serializer\Annotation\SerializedName('googleDriveFileId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $googleDriveFileId = null;
    
    /**
     * If the attachment type is `rich` or `video`, the HTML code of the
     * 
     * media to display
     * 
     * 
     * @var ?string $html
     */
	#[\JMS\Serializer\Annotation\SerializedName('html')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $html = null;
    
    /**
     * If the `html` is available, the height of the widget
     * 
     * @var ?string $htmlHeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlHeight')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlHeight = null;
    
    /**
     * If the `html` is available, the width of the widget
     * 
     * @var ?string $htmlWidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlWidth')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlWidth = null;
    
    /**
     * The URL of the icon
     * 
     * @var ?string $iconUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('iconUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iconUrl = null;
    
    /**
     * To be used with a score attached in `sharingMode` `copy` (score used as template). If true, students won't be able to change the original notes of the template.
     * 
     * @var ?bool $lockScoreTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('lockScoreTemplate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $lockScoreTemplate = null;
    
    /**
     * The mine type of the file
     * 
     * @var ?string $mimeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('mimeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mimeType = null;
    
    /**
     * An unique revision identifier of a score
     * 
     * @var ?string $revision
     */
	#[\JMS\Serializer\Annotation\SerializedName('revision')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revision = null;
    
    /**
     * An unique Flat score identifier
     * 
     * @var ?string $score
     */
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $score = null;
    
    /**
     * The sharing mode of the score for classes post and assignments
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaScoreSharingModeEnum $sharingMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('sharingMode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MediaScoreSharingModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaScoreSharingModeEnum $sharingMode = null;
    
    /**
     * If the `thumbnailUrl` is available, the width of the thumbnail
     * 
     * 
     * 
     * @var ?int $thumbnailHeight
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnailHeight')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $thumbnailHeight = null;
    
    /**
     * If the attachment type is `rich`, `video`, `photo` or `link`, a
     * 
     * displayable thumbnail for this attachment
     * 
     * 
     * @var ?string $thumbnailUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnailUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $thumbnailUrl = null;
    
    /**
     * If the `thumbnailUrl` is available, the width of the thumbnail
     * 
     * 
     * 
     * @var ?int $thumbnailWidth
     */
	#[\JMS\Serializer\Annotation\SerializedName('thumbnailWidth')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $thumbnailWidth = null;
    
    /**
     * The resolved title of the attachment
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * A unique track identifier
     * 
     * @var ?string $track
     */
	#[\JMS\Serializer\Annotation\SerializedName('track')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $track = null;
    
    /**
     * The type of the assignment resolved:
     * 
     * * `rich`, `photo`, `video` are attachment types that are automatically resolved from a `link` attachment.
     * * A `flat` attachment is a score document where the unique identifier will be specified in the `score` property. Its sharing mode will be provided in the `sharingMode` property.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MediaAttachmentTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MediaAttachmentTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MediaAttachmentTypeEnum $type = null;
    
    /**
     * The url of the attachment
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * An unique worksheet identifier
     * 
     * @var ?string $worksheet
     */
	#[\JMS\Serializer\Annotation\SerializedName('worksheet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $worksheet = null;
    
	public function __construct()
	{
		$this->authorName = null;
		$this->authorUrl = null;
		$this->description = null;
		$this->googleDriveFileId = null;
		$this->html = null;
		$this->htmlHeight = null;
		$this->htmlWidth = null;
		$this->iconUrl = null;
		$this->lockScoreTemplate = null;
		$this->mimeType = null;
		$this->revision = null;
		$this->score = null;
		$this->sharingMode = null;
		$this->thumbnailHeight = null;
		$this->thumbnailUrl = null;
		$this->thumbnailWidth = null;
		$this->title = null;
		$this->track = null;
		$this->type = null;
		$this->url = null;
		$this->worksheet = null;
	}
}
