// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateBackendAuthPathParams struct {
	// The app ID.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The name of the backend environment.
	BackendEnvironmentName string `pathParam:"style=simple,explode=false,name=backendEnvironmentName"`
}

type UpdateBackendAuthHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum - Defines the service name to use when configuring an authentication resource in your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum string

const (
	UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnumUserPoolOnly            UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum = "USER_POOL_ONLY"
	UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnumIdentityPoolAndUserPool UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum = "IDENTITY_POOL_AND_USER_POOL"
)

func (e *UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER_POOL_ONLY":
		fallthrough
	case "IDENTITY_POOL_AND_USER_POOL":
		*e = UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum: %s", s)
	}
}

// UpdateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs - Describes the authorization configuration for the Amazon Cognito identity pool, provisioned as a part of your auth resource in the Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs struct {
	UnauthenticatedLogin *bool `json:"UnauthenticatedLogin,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigServiceEnum - Defines the service name to use when configuring an authentication resource in your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigServiceEnum string

const (
	UpdateBackendAuthRequestBodyResourceConfigServiceEnumCognito UpdateBackendAuthRequestBodyResourceConfigServiceEnum = "COGNITO"
)

func (e *UpdateBackendAuthRequestBodyResourceConfigServiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COGNITO":
		*e = UpdateBackendAuthRequestBodyResourceConfigServiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAuthRequestBodyResourceConfigServiceEnum: %s", s)
	}
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum - <b>(DEPRECATED)</b> Describes which mode to use (either SMS or email) to deliver messages to app users that want to recover their password.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum string

const (
	UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnumEmail UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum = "EMAIL"
	UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnumSms   UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum = "SMS"
)

func (e *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EMAIL":
		fallthrough
	case "SMS":
		*e = UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum: %s", s)
	}
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings - <b>(DEPRECATED)</b> The configuration for the email sent when an app user forgets their password.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings struct {
	EmailMessage *string `json:"EmailMessage,omitempty"`
	EmailSubject *string `json:"EmailSubject,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings - <b>(DEPRECATED)</b> The configuration for the SMS message sent when an Amplify app user forgets their password.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings struct {
	SmsMessage *string `json:"SmsMessage,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword - <b>(DEPRECATED)</b> Describes the forgot password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword struct {
	DeliveryMethod *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordDeliveryMethodEnum `json:"DeliveryMethod,omitempty"`
	EmailSettings  *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordEmailSettings      `json:"EmailSettings,omitempty"`
	SmsSettings    *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPasswordSmsSettings        `json:"SmsSettings,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings - The settings of your MFA configuration for the backend of your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings struct {
	MfaTypes   []shared.MfaTypesElementEnum `json:"MfaTypes,omitempty"`
	SmsMessage *string                      `json:"SmsMessage,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa - Describes whether to apply multi-factor authentication policies for your Amazon Cognito user pool configured as a part of your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa struct {
	MFAMode  *shared.MFAModeEnum                                                   `json:"MFAMode,omitempty"`
	Settings *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfaSettings `json:"Settings,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum - The OAuth grant type to allow app users to authenticate from your Amplify app.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum string

const (
	UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnumCode     UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum = "CODE"
	UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnumImplicit UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum = "IMPLICIT"
)

func (e *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CODE":
		fallthrough
	case "IMPLICIT":
		*e = UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum: %s", s)
	}
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings - Describes third-party social federation configurations for allowing your users to sign in with OAuth.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings struct {
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	Facebook *shared.BackendAuthSocialProviderConfig `json:"Facebook,omitempty"`
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	Google *shared.BackendAuthSocialProviderConfig `json:"Google,omitempty"`
	// Describes third-party social federation configurations for allowing your app users to sign in using OAuth.
	LoginWithAmazon *shared.BackendAuthSocialProviderConfig `json:"LoginWithAmazon,omitempty"`
	// Describes Apple social federation configurations for allowing your app users to sign in using OAuth.
	SignInWithApple *shared.BackendAuthAppleProviderConfig `json:"SignInWithApple,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth - Describes the OAuth policy and rules for your Amazon Cognito user pool, configured as a part of your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth struct {
	DomainPrefix           *string                                                                               `json:"DomainPrefix,omitempty"`
	OAuthGrantType         *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthOAuthGrantTypeEnum     `json:"OAuthGrantType,omitempty"`
	OAuthScopes            []shared.OAuthScopesElementEnum                                                       `json:"OAuthScopes,omitempty"`
	RedirectSignInURIs     []string                                                                              `json:"RedirectSignInURIs,omitempty"`
	RedirectSignOutURIs    []string                                                                              `json:"RedirectSignOutURIs,omitempty"`
	SocialProviderSettings *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuthSocialProviderSettings `json:"SocialProviderSettings,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy - Describes the password policy for your Amazon Cognito user pool, configured as a part of your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy struct {
	AdditionalConstraints []shared.AdditionalConstraintsElementEnum `json:"AdditionalConstraints,omitempty"`
	MinimumLength         *float64                                  `json:"MinimumLength,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum - The type of verification message to send.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum string

const (
	UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnumEmail UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum = "EMAIL"
	UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnumSms   UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum = "SMS"
)

func (e *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EMAIL":
		fallthrough
	case "SMS":
		*e = UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum: %s", s)
	}
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings - The settings for the email message.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings struct {
	EmailMessage *string `json:"EmailMessage,omitempty"`
	EmailSubject *string `json:"EmailSubject,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings - The settings for the SMS message.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings struct {
	SmsMessage *string `json:"SmsMessage,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage - Describes the email or SMS verification message for your Amazon Cognito user pool, configured as a part of your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage struct {
	DeliveryMethod UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageDeliveryMethodEnum `json:"DeliveryMethod"`
	EmailSettings  *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageEmailSettings     `json:"EmailSettings,omitempty"`
	SmsSettings    *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessageSmsSettings       `json:"SmsSettings,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigs - Describes the authentication configuration for the Amazon Cognito user pool, provisioned as a part of your auth resource in the Amplify project.
type UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigs struct {
	ForgotPassword      *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsForgotPassword      `json:"ForgotPassword,omitempty"`
	Mfa                 *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsMfa                 `json:"Mfa,omitempty"`
	OAuth               *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsOAuth               `json:"OAuth,omitempty"`
	PasswordPolicy      *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsPasswordPolicy      `json:"PasswordPolicy,omitempty"`
	VerificationMessage *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigsVerificationMessage `json:"VerificationMessage,omitempty"`
}

// UpdateBackendAuthRequestBodyResourceConfig - Defines the resource configuration when updating an authentication resource in your Amplify project.
type UpdateBackendAuthRequestBodyResourceConfig struct {
	AuthResources       *UpdateBackendAuthRequestBodyResourceConfigAuthResourcesEnum   `json:"AuthResources,omitempty"`
	IdentityPoolConfigs *UpdateBackendAuthRequestBodyResourceConfigIdentityPoolConfigs `json:"IdentityPoolConfigs,omitempty"`
	Service             *UpdateBackendAuthRequestBodyResourceConfigServiceEnum         `json:"Service,omitempty"`
	UserPoolConfigs     *UpdateBackendAuthRequestBodyResourceConfigUserPoolConfigs     `json:"UserPoolConfigs,omitempty"`
}

type UpdateBackendAuthRequestBody struct {
	// Defines the resource configuration when updating an authentication resource in your Amplify project.
	ResourceConfig UpdateBackendAuthRequestBodyResourceConfig `json:"resourceConfig"`
	// The name of this resource.
	ResourceName string `json:"resourceName"`
}

type UpdateBackendAuthRequest struct {
	PathParams UpdateBackendAuthPathParams
	Headers    UpdateBackendAuthHeaders
	Request    UpdateBackendAuthRequestBody `request:"mediaType=application/json"`
}

type UpdateBackendAuthResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// GatewayTimeoutException
	GatewayTimeoutException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateBackendAuthResponse *shared.UpdateBackendAuthResponse
}
