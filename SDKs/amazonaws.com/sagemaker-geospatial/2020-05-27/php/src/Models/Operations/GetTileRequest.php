<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetTileRequest
{
    /**
     * The Amazon Resource Name (ARN) of the tile operation.
     * 
     * @var string $arn
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Arn')]
    public string $arn;
    
    /**
     * The particular assets or bands to tile.
     * 
     * @var array<string> $imageAssets
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ImageAssets')]
    public array $imageAssets;
    
    /**
     * Determines whether or not to return a valid data mask.
     * 
     * @var ?bool $imageMask
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ImageMask')]
    public ?bool $imageMask = null;
    
    /**
     * The output data type of the tile operation.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetTileOutputDataTypeEnum $outputDataType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=OutputDataType')]
    public ?GetTileOutputDataTypeEnum $outputDataType = null;
    
    /**
     * The data format of the output tile. The formats include .npy, .png and .jpg.
     * 
     * @var ?string $outputFormat
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=OutputFormat')]
    public ?string $outputFormat = null;
    
    /**
     * Property filters for the imagery to tile.
     * 
     * @var ?string $propertyFilters
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PropertyFilters')]
    public ?string $propertyFilters = null;
    
    /**
     * Determines what part of the Earth Observation job to tile. 'INPUT' or 'OUTPUT' are the valid options.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetTileTargetEnum $target
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Target')]
    public GetTileTargetEnum $target;
    
    /**
     * Time range filter applied to imagery to find the images to tile.
     * 
     * @var ?string $timeRangeFilter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TimeRangeFilter')]
    public ?string $timeRangeFilter = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
    /**
     * The x coordinate of the tile input.
     * 
     * @var int $x
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=x')]
    public int $x;
    
    /**
     * The y coordinate of the tile input.
     * 
     * @var int $y
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=y')]
    public int $y;
    
    /**
     * The z coordinate of the tile input.
     * 
     * @var int $z
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=z')]
    public int $z;
    
	public function __construct()
	{
		$this->arn = "";
		$this->imageAssets = [];
		$this->imageMask = null;
		$this->outputDataType = null;
		$this->outputFormat = null;
		$this->propertyFilters = null;
		$this->target = \OpenAPI\OpenAPI\Models\Operations\GetTileTargetEnum::INPUT;
		$this->timeRangeFilter = null;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
		$this->x = 0;
		$this->y = 0;
		$this->z = 0;
	}
}
