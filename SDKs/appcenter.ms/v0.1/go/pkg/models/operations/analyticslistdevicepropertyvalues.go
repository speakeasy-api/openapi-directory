// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AnalyticsListDevicePropertyValuesSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AnalyticsListDevicePropertyValuesRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// Contains string
	Contains *string `queryParam:"style=form,explode=true,name=contains"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// Device property
	PropertyName string `pathParam:"style=simple,explode=false,name=property_name"`
}

type AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum string

const (
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumBadRequest          AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumConflict            AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumNotAcceptable       AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumNotFound            AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumInternalServerError AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumUnauthorized        AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnumTooManyRequests     AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum) ToPointer() *AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type AnalyticsListDevicePropertyValuesDefaultApplicationJSONError struct {
	Code    AnalyticsListDevicePropertyValuesDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                               `json:"message"`
}

// AnalyticsListDevicePropertyValuesDefaultApplicationJSON - Error code with reason
type AnalyticsListDevicePropertyValuesDefaultApplicationJSON struct {
	Error AnalyticsListDevicePropertyValuesDefaultApplicationJSONError `json:"error"`
}

// AnalyticsListDevicePropertyValues200ApplicationJSON - List of device property values.
type AnalyticsListDevicePropertyValues200ApplicationJSON struct {
	// List of device property values.
	Values []string `json:"values"`
}

type AnalyticsListDevicePropertyValuesResponse struct {
	// List of supported device property values.
	AnalyticsListDevicePropertyValues200ApplicationJSONObject *AnalyticsListDevicePropertyValues200ApplicationJSON
	// Error code with reason
	AnalyticsListDevicePropertyValuesDefaultApplicationJSONObject *AnalyticsListDevicePropertyValuesDefaultApplicationJSON
	ContentType                                                   string
	StatusCode                                                    int
	RawResponse                                                   *http.Response
}
