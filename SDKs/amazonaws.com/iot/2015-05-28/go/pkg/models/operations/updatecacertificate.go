// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateCACertificatePathParams struct {
	// The CA certificate identifier.
	CaCertificateID string `pathParam:"style=simple,explode=false,name=caCertificateId"`
}

// UpdateCACertificateNewAutoRegistrationStatusEnum - The new value for the auto registration status. Valid values are: "ENABLE" or "DISABLE".
type UpdateCACertificateNewAutoRegistrationStatusEnum string

const (
	UpdateCACertificateNewAutoRegistrationStatusEnumEnable  UpdateCACertificateNewAutoRegistrationStatusEnum = "ENABLE"
	UpdateCACertificateNewAutoRegistrationStatusEnumDisable UpdateCACertificateNewAutoRegistrationStatusEnum = "DISABLE"
)

func (e *UpdateCACertificateNewAutoRegistrationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLE":
		fallthrough
	case "DISABLE":
		*e = UpdateCACertificateNewAutoRegistrationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCACertificateNewAutoRegistrationStatusEnum: %s", s)
	}
}

// UpdateCACertificateNewStatusEnum - <p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
type UpdateCACertificateNewStatusEnum string

const (
	UpdateCACertificateNewStatusEnumActive   UpdateCACertificateNewStatusEnum = "ACTIVE"
	UpdateCACertificateNewStatusEnumInactive UpdateCACertificateNewStatusEnum = "INACTIVE"
)

func (e *UpdateCACertificateNewStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		*e = UpdateCACertificateNewStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCACertificateNewStatusEnum: %s", s)
	}
}

type UpdateCACertificateQueryParams struct {
	// The new value for the auto registration status. Valid values are: "ENABLE" or "DISABLE".
	NewAutoRegistrationStatus *UpdateCACertificateNewAutoRegistrationStatusEnum `queryParam:"style=form,explode=true,name=newAutoRegistrationStatus"`
	// <p>The updated status of the CA certificate.</p> <p> <b>Note:</b> The status value REGISTER_INACTIVE is deprecated and should not be used.</p>
	NewStatus *UpdateCACertificateNewStatusEnum `queryParam:"style=form,explode=true,name=newStatus"`
}

type UpdateCACertificateHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdateCACertificateRequestBodyRegistrationConfig - The registration configuration.
type UpdateCACertificateRequestBodyRegistrationConfig struct {
	RoleArn      *string `json:"roleArn,omitempty"`
	TemplateBody *string `json:"templateBody,omitempty"`
	TemplateName *string `json:"templateName,omitempty"`
}

type UpdateCACertificateRequestBody struct {
	// The registration configuration.
	RegistrationConfig *UpdateCACertificateRequestBodyRegistrationConfig `json:"registrationConfig,omitempty"`
	// If true, removes auto registration.
	RemoveAutoRegistration *bool `json:"removeAutoRegistration,omitempty"`
}

type UpdateCACertificateRequest struct {
	PathParams  UpdateCACertificatePathParams
	QueryParams UpdateCACertificateQueryParams
	Headers     UpdateCACertificateHeaders
	Request     UpdateCACertificateRequestBody `request:"mediaType=application/json"`
}

type UpdateCACertificateResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
