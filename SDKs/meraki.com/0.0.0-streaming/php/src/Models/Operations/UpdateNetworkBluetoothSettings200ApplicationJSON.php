<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkBluetoothSettings200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkBluetoothSettings200ApplicationJSON
{
    /**
     * Whether APs will advertise beacons.
     * 
     * @var ?bool $advertisingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('advertisingEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $advertisingEnabled = null;
    
    /**
     * The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
     * 
     * @var ?int $major
     */
	#[\JMS\Serializer\Annotation\SerializedName('major')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $major = null;
    
    /**
     * The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
     * 
     * @var ?string $majorMinorAssignmentMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('majorMinorAssignmentMode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $majorMinorAssignmentMode = null;
    
    /**
     * The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
     * 
     * @var ?int $minor
     */
	#[\JMS\Serializer\Annotation\SerializedName('minor')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minor = null;
    
    /**
     * Whether APs will scan for Bluetooth enabled clients.
     * 
     * @var ?bool $scanningEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('scanningEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $scanningEnabled = null;
    
    /**
     * The UUID to be used in the beacon identifier.
     * 
     * @var ?string $uuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uuid = null;
    
	public function __construct()
	{
		$this->advertisingEnabled = null;
		$this->major = null;
		$this->majorMinorAssignmentMode = null;
		$this->minor = null;
		$this->scanningEnabled = null;
		$this->uuid = null;
	}
}
