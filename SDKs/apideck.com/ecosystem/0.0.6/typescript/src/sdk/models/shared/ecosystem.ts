/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CardSettings } from "./cardsettings";
import { CTASettings } from "./ctasettings";
import { CustomSettings } from "./customsettings";
import { IntegrationSettings } from "./integrationsettings";
import { LeadFormSettings } from "./leadformsettings";
import { ListingSettings } from "./listingsettings";
import { MastheadSettings } from "./mastheadsettings";
import { MetaTagSettings } from "./metatagsettings";
import { Expose, Transform, Type } from "class-transformer";

export enum EcosystemMenuPositionEnum {
  Top = "TOP",
  Left = "LEFT",
  Right = "RIGHT",
  Hidden = "HIDDEN",
}

export enum EcosystemMenuStyleEnum {
  List = "LIST",
  Pill = "PILL",
  Filter = "FILTER",
}

export enum EcosystemNavigationMobileMenuTypeEnum {
  Icon = "ICON",
  Text = "TEXT",
}

export class Ecosystem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "about" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "alternatives_background_color" })
  alternativesBackgroundColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "alternatives_color" })
  alternativesColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "attribution" })
  attribution?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "body_background_color" })
  bodyBackgroundColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_button_background_color" })
  bodyButtonBackgroundColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_button_color" })
  bodyButtonColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_color" })
  bodyColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "body_link_color" })
  bodyLinkColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "card_settings" })
  @Type(() => CardSettings)
  cardSettings?: CardSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "categories_count_badge" })
  categoriesCountBadge?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "categories_show_max_items" })
  categoriesShowMaxItems?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "collections_count_badge" })
  collectionsCountBadge?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "collections_title" })
  collectionsTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "create_link" })
  createLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "cta_settings" })
  @Type(() => CTASettings)
  ctaSettings?: CTASettings;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_domain" })
  customDomain?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_settings" })
  @Type(() => CustomSettings)
  customSettings?: CustomSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "detail_pages_enabled" })
  detailPagesEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "footer_background_color" })
  footerBackgroundColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "footer_color" })
  footerColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "google_site_verification_id" })
  googleSiteVerificationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hide_install_buttons" })
  hideInstallButtons?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "home_page_collection_category_cards" })
  homePageCollectionCategoryCards?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "home_page_show_all_listings" })
  homePageShowAllListings?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "installation_request_flow_enabled" })
  installationRequestFlowEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "integration_settings" })
  @Type(() => IntegrationSettings)
  integrationSettings?: IntegrationSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "is_published" })
  isPublished: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "lead_form_settings" })
  @Type(() => LeadFormSettings)
  leadFormSettings?: LeadFormSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "listing_settings" })
  @Type(() => ListingSettings)
  listingSettings?: ListingSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "masthead_settings" })
  @Type(() => MastheadSettings)
  mastheadSettings?: MastheadSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "menu_position" })
  menuPosition?: EcosystemMenuPositionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "menu_style" })
  menuStyle?: EcosystemMenuStyleEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "meta_tag_settings" })
  @Type(() => MetaTagSettings)
  metaTagSettings?: MetaTagSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "navigation_background_color" })
  navigationBackgroundColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "navigation_color" })
  navigationColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "navigation_logo_post_fix" })
  navigationLogoPostFix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "navigation_mobile_menu_type" })
  navigationMobileMenuType?: EcosystemNavigationMobileMenuTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "navigation_sticky" })
  navigationSticky?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_color" })
  primaryColor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "privacy_link" })
  privacyLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "request_link" })
  requestLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shadow_page_description" })
  shadowPageDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shadow_pages_enabled" })
  shadowPagesEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "show_attribution_badge" })
  showAttributionBadge?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "show_requested_listings" })
  showRequestedListings?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "terms_link" })
  termsLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total_published_listings" })
  totalPublishedListings?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unify_application_id" })
  unifyApplicationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "utm_campaign" })
  utmCampaign?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "zaps_menu_title" })
  zapsMenuTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "zaps_page_enabled" })
  zapsPageEnabled?: boolean;
}
