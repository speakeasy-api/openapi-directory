// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// ArticleDTO - The ArticleDTO Class.
// Contains relevant fields of Article DTO by masking actual Article entity's fields in application.
type ArticleDTO struct {
	// Active Status
	ActiveStatus    *bool    `json:"activeStatus,omitempty"`
	ApplyForAllGyms *bool    `json:"applyForAllGyms,omitempty"`
	ArticleID       *int     `json:"articleId,omitempty"`
	AvailableGyms   []GymDTO `json:"availableGyms"`
	// Default AvailableQty
	AvailableQty *float64   `json:"availableQty,omitempty"`
	Barcode      *string    `json:"barcode,omitempty"`
	CreatedDate  *time.Time `json:"createdDate,omitempty"`
	CreatedUser  *string    `json:"createdUser,omitempty"`
	// Access Schedule CRON Expression
	CronExpression *string  `json:"cronExpression,omitempty"`
	Description    *string  `json:"description,omitempty"`
	Discount       *float64 `json:"discount,omitempty"`
	// Default EmployeeDiscount
	EmployeeDiscount *float64 `json:"employeeDiscount,omitempty"`
	// Default EmployeePrice
	EmployeePrice *float64 `json:"employeePrice,omitempty"`
	// Gym Customizations
	GymArticles []GymArticleDetailsDTO `json:"gymArticles,omitempty"`
	IsAddOn     *bool                  `json:"isAddOn,omitempty"`
	// Default IsInventoryItem of the Article
	IsInventoryItem *bool `json:"isInventoryItem,omitempty"`
	// Default IsObsolete of the Article
	IsObsolete   *bool      `json:"isObsolete,omitempty"`
	MeasureUnit  string     `json:"measureUnit"`
	ModifiedDate *time.Time `json:"modifiedDate,omitempty"`
	ModifiedUser *string    `json:"modifiedUser,omitempty"`
	Name         string     `json:"name"`
	Number       *int       `json:"number,omitempty"`
	Price        float64    `json:"price"`
	// Deafault ReorderLevel
	ReorderLevel *float64 `json:"reorderLevel,omitempty"`
	// Default Revenue account
	RevenueAccountID *int `json:"revenueAccountId,omitempty"`
	// Default SellingPrice
	SellingPrice *float64 `json:"sellingPrice,omitempty"`
	Tags         *string  `json:"tags,omitempty"`
	Type         string   `json:"type"`
	Vat          *float64 `json:"vat,omitempty"`
	// VAT Applicable
	VatApplicable *bool `json:"vatApplicable,omitempty"`
}
