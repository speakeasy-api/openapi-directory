// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableRearPortTemplateTypeEnum string

const (
	WritableRearPortTemplateTypeEnumEightp8c              WritableRearPortTemplateTypeEnum = "8p8c"
	WritableRearPortTemplateTypeEnumOneHundredAndTenPunch WritableRearPortTemplateTypeEnum = "110-punch"
	WritableRearPortTemplateTypeEnumBnc                   WritableRearPortTemplateTypeEnum = "bnc"
	WritableRearPortTemplateTypeEnumMrj21                 WritableRearPortTemplateTypeEnum = "mrj21"
	WritableRearPortTemplateTypeEnumFc                    WritableRearPortTemplateTypeEnum = "fc"
	WritableRearPortTemplateTypeEnumLc                    WritableRearPortTemplateTypeEnum = "lc"
	WritableRearPortTemplateTypeEnumLcApc                 WritableRearPortTemplateTypeEnum = "lc-apc"
	WritableRearPortTemplateTypeEnumLsh                   WritableRearPortTemplateTypeEnum = "lsh"
	WritableRearPortTemplateTypeEnumLshApc                WritableRearPortTemplateTypeEnum = "lsh-apc"
	WritableRearPortTemplateTypeEnumMpo                   WritableRearPortTemplateTypeEnum = "mpo"
	WritableRearPortTemplateTypeEnumMtrj                  WritableRearPortTemplateTypeEnum = "mtrj"
	WritableRearPortTemplateTypeEnumSc                    WritableRearPortTemplateTypeEnum = "sc"
	WritableRearPortTemplateTypeEnumScApc                 WritableRearPortTemplateTypeEnum = "sc-apc"
	WritableRearPortTemplateTypeEnumSt                    WritableRearPortTemplateTypeEnum = "st"
)

func (e *WritableRearPortTemplateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "8p8c":
		fallthrough
	case "110-punch":
		fallthrough
	case "bnc":
		fallthrough
	case "mrj21":
		fallthrough
	case "fc":
		fallthrough
	case "lc":
		fallthrough
	case "lc-apc":
		fallthrough
	case "lsh":
		fallthrough
	case "lsh-apc":
		fallthrough
	case "mpo":
		fallthrough
	case "mtrj":
		fallthrough
	case "sc":
		fallthrough
	case "sc-apc":
		fallthrough
	case "st":
		*e = WritableRearPortTemplateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableRearPortTemplateTypeEnum: %s", s)
	}
}

type WritableRearPortTemplateInput struct {
	DeviceType int64                            `json:"device_type"`
	Name       string                           `json:"name"`
	Positions  *int64                           `json:"positions,omitempty"`
	Type       WritableRearPortTemplateTypeEnum `json:"type"`
}
