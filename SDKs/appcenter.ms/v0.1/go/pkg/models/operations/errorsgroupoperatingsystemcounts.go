// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ErrorsGroupOperatingSystemCountsSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type ErrorsGroupOperatingSystemCountsPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The id of the error group
	ErrorGroupID string `pathParam:"style=simple,explode=false,name=errorGroupId"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type ErrorsGroupOperatingSystemCountsQueryParams struct {
	// The maximum number of results to return. (0 will fetch all results till the max number.)
	DollarTop *int64 `queryParam:"style=form,explode=true,name=$top"`
}

type ErrorsGroupOperatingSystemCountsRequest struct {
	PathParams  ErrorsGroupOperatingSystemCountsPathParams
	QueryParams ErrorsGroupOperatingSystemCountsQueryParams
	Security    ErrorsGroupOperatingSystemCountsSecurity
}

type ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum string

const (
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumBadRequest          ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumConflict            ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "Conflict"
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumNotAcceptable       ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumNotFound            ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "NotFound"
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumInternalServerError ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumUnauthorized        ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnumTooManyRequests     ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type ErrorsGroupOperatingSystemCountsDefaultApplicationJSONError struct {
	Code    ErrorsGroupOperatingSystemCountsDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                              `json:"message"`
}

// ErrorsGroupOperatingSystemCountsDefaultApplicationJSON - Error code with reason
type ErrorsGroupOperatingSystemCountsDefaultApplicationJSON struct {
	Error ErrorsGroupOperatingSystemCountsDefaultApplicationJSONError `json:"error"`
}

type ErrorsGroupOperatingSystemCounts200ApplicationJSONOperatingSystems struct {
	// count of OS
	ErrorCount *int64 `json:"errorCount,omitempty"`
	// OS name
	OperatingSystemName *string `json:"operatingSystemName,omitempty"`
}

// ErrorsGroupOperatingSystemCounts200ApplicationJSON - Top OSes with percentage in descending order
type ErrorsGroupOperatingSystemCounts200ApplicationJSON struct {
	ErrorCount       *int64                                                               `json:"errorCount,omitempty"`
	OperatingSystems []ErrorsGroupOperatingSystemCounts200ApplicationJSONOperatingSystems `json:"operatingSystems,omitempty"`
}

type ErrorsGroupOperatingSystemCountsResponse struct {
	ContentType string
	// Top OSes with percentage in descending order
	ErrorsGroupOperatingSystemCounts200ApplicationJSONObject *ErrorsGroupOperatingSystemCounts200ApplicationJSON
	// Error code with reason
	ErrorsGroupOperatingSystemCountsDefaultApplicationJSONObject *ErrorsGroupOperatingSystemCountsDefaultApplicationJSON
	StatusCode                                                   int
	RawResponse                                                  *http.Response
}
