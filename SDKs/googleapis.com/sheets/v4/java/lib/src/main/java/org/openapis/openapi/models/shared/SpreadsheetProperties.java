/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SpreadsheetProperties - Properties of a spreadsheet.
 */
public class SpreadsheetProperties {
    /**
     * The amount of time to wait before volatile functions are recalculated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRecalc")
    public SpreadsheetPropertiesAutoRecalcEnum autoRecalc;

    public SpreadsheetProperties withAutoRecalc(SpreadsheetPropertiesAutoRecalcEnum autoRecalc) {
        this.autoRecalc = autoRecalc;
        return this;
    }
    
    /**
     * The format of a cell.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultFormat")
    public CellFormat defaultFormat;

    public SpreadsheetProperties withDefaultFormat(CellFormat defaultFormat) {
        this.defaultFormat = defaultFormat;
        return this;
    }
    
    /**
     * Settings to control how circular dependencies are resolved with iterative calculation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iterativeCalculationSettings")
    public IterativeCalculationSettings iterativeCalculationSettings;

    public SpreadsheetProperties withIterativeCalculationSettings(IterativeCalculationSettings iterativeCalculationSettings) {
        this.iterativeCalculationSettings = iterativeCalculationSettings;
        return this;
    }
    
    /**
     * The locale of the spreadsheet in one of the following formats: * an ISO 639-1 language code such as `en` * an ISO 639-2 language code such as `fil`, if no 639-1 code exists * a combination of the ISO language code and country code, such as `en_US` Note: when updating this field, not all locales/languages are supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    public String locale;

    public SpreadsheetProperties withLocale(String locale) {
        this.locale = locale;
        return this;
    }
    
    /**
     * Represents spreadsheet theme
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spreadsheetTheme")
    public SpreadsheetTheme spreadsheetTheme;

    public SpreadsheetProperties withSpreadsheetTheme(SpreadsheetTheme spreadsheetTheme) {
        this.spreadsheetTheme = spreadsheetTheme;
        return this;
    }
    
    /**
     * The time zone of the spreadsheet, in CLDR format such as `America/New_York`. If the time zone isn't recognized, this may be a custom time zone such as `GMT-07:00`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;

    public SpreadsheetProperties withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    /**
     * The title of the spreadsheet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public SpreadsheetProperties withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public SpreadsheetProperties(){}
}
