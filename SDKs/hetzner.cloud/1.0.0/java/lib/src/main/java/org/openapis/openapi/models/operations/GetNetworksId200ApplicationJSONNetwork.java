/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetNetworksId200ApplicationJSONNetwork {
    /**
     * Point in time when the Network was created (in ISO-8601 format)
     */
    @JsonProperty("created")
    public String created;

    public GetNetworksId200ApplicationJSONNetwork withCreated(String created) {
        this.created = created;
        return this;
    }
    
    /**
     * ID of the Network
     */
    @JsonProperty("id")
    public Long id;

    public GetNetworksId200ApplicationJSONNetwork withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * IPv4 prefix of the whole Network
     */
    @JsonProperty("ip_range")
    public String ipRange;

    public GetNetworksId200ApplicationJSONNetwork withIpRange(String ipRange) {
        this.ipRange = ipRange;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonProperty("labels")
    public java.util.Map<String, Object> labels;

    public GetNetworksId200ApplicationJSONNetwork withLabels(java.util.Map<String, Object> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Array of IDs of Load Balancers attached to this Network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("load_balancers")
    public Long[] loadBalancers;

    public GetNetworksId200ApplicationJSONNetwork withLoadBalancers(Long[] loadBalancers) {
        this.loadBalancers = loadBalancers;
        return this;
    }
    
    /**
     * Name of the Network
     */
    @JsonProperty("name")
    public String name;

    public GetNetworksId200ApplicationJSONNetwork withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Protection configuration for the Network
     */
    @JsonProperty("protection")
    public GetNetworksId200ApplicationJSONNetworkProtection protection;

    public GetNetworksId200ApplicationJSONNetwork withProtection(GetNetworksId200ApplicationJSONNetworkProtection protection) {
        this.protection = protection;
        return this;
    }
    
    /**
     * Array of routes set in this Network
     */
    @JsonProperty("routes")
    public GetNetworksId200ApplicationJSONNetworkRoutes[] routes;

    public GetNetworksId200ApplicationJSONNetwork withRoutes(GetNetworksId200ApplicationJSONNetworkRoutes[] routes) {
        this.routes = routes;
        return this;
    }
    
    /**
     * Array of IDs of Servers attached to this Network
     */
    @JsonProperty("servers")
    public Long[] servers;

    public GetNetworksId200ApplicationJSONNetwork withServers(Long[] servers) {
        this.servers = servers;
        return this;
    }
    
    /**
     * Array subnets allocated in this Network
     */
    @JsonProperty("subnets")
    public GetNetworksId200ApplicationJSONNetworkSubnets[] subnets;

    public GetNetworksId200ApplicationJSONNetwork withSubnets(GetNetworksId200ApplicationJSONNetworkSubnets[] subnets) {
        this.subnets = subnets;
        return this;
    }
    
    public GetNetworksId200ApplicationJSONNetwork(@JsonProperty("created") String created, @JsonProperty("id") Long id, @JsonProperty("ip_range") String ipRange, @JsonProperty("labels") java.util.Map<String, Object> labels, @JsonProperty("name") String name, @JsonProperty("protection") GetNetworksId200ApplicationJSONNetworkProtection protection, @JsonProperty("routes") GetNetworksId200ApplicationJSONNetworkRoutes[] routes, @JsonProperty("servers") Long[] servers, @JsonProperty("subnets") GetNetworksId200ApplicationJSONNetworkSubnets[] subnets) {
        this.created = created;
        this.id = id;
        this.ipRange = ipRange;
        this.labels = labels;
        this.name = name;
        this.protection = protection;
        this.routes = routes;
        this.servers = servers;
        this.subnets = subnets;
  }
}
