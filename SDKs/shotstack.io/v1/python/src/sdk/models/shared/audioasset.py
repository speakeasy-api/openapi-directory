"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AudioAssetEffectEnum(str, Enum):
    r"""The effect to apply to the audio asset <ul>
      <li>`fadeIn` - fade volume in only</li>
      <li>`fadeOut` - fade volume out only</li>
      <li>`fadeInFadeOut` - fade volume in and out</li>
    </ul>
    """
    FADE_IN = 'fadeIn'
    FADE_OUT = 'fadeOut'
    FADE_IN_FADE_OUT = 'fadeInFadeOut'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AudioAsset:
    r"""The AudioAsset is used to add sound effects and audio at specific intervals on the timeline. The src must be a publicly accessible URL to an audio resource such  as an mp3 file."""
    
    src: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('src') }})
    r"""The audio source URL. The URL must be publicly accessible or include credentials."""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of asset - set to `audio` for audio assets."""  
    effect: Optional[AudioAssetEffectEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effect'), 'exclude': lambda f: f is None }})
    r"""The effect to apply to the audio asset <ul>
      <li>`fadeIn` - fade volume in only</li>
      <li>`fadeOut` - fade volume out only</li>
      <li>`fadeInFadeOut` - fade volume in and out</li>
    </ul>
    """  
    trim: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trim'), 'exclude': lambda f: f is None }})
    r"""The start trim point of the audio clip, in seconds (defaults to 0). Audio will start from the in trim point. The audio will play until the file ends or the Clip length is reached."""  
    volume: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volume'), 'exclude': lambda f: f is None }})
    r"""Set the volume for the audio clip between 0 and 1 where 0 is muted and 1 is full volume (defaults to 1)."""  
    