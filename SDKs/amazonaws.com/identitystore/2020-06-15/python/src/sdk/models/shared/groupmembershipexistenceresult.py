"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import memberid as shared_memberid
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GroupMembershipExistenceResult:
    r"""Indicates whether a resource is a member of a group in the identity store."""
    
    group_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GroupId'), 'exclude': lambda f: f is None }})  
    member_id: Optional[shared_memberid.MemberID] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MemberId'), 'exclude': lambda f: f is None }})  
    membership_exists: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MembershipExists'), 'exclude': lambda f: f is None }})  
    