"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error_400 as shared_error_400
from ..shared import error_500 as shared_error_500
from ..shared import meta as shared_meta
from ..shared import recommendedlocation as shared_recommendedlocation
from ..shared import warning as shared_warning
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetRecommendedLocationRequest:
    
    city_codes: str = dataclasses.field(metadata={'query_param': { 'field_name': 'cityCodes', 'style': 'form', 'explode': True }})
    r"""City used by the algorythm to recommend new destination. Several cities can be specified using comma.
    
    City codes follow [IATA standard](http://www.iata.org/publications/Pages/code-search.aspx)
    """  
    destination_country_codes: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'destinationCountryCodes', 'style': 'form', 'explode': True }})
    r"""List of country the traveler want to visit, separated with comma.
    
    Country codes follow [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US)
    """  
    traveler_country_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'travelerCountryCode', 'style': 'form', 'explode': True }})
    r"""Origin country of the traveler following [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetRecommendedLocation200ApplicationVndAmadeusPlusJSON:
    r"""Successful reply"""
    
    data: Optional[list[shared_recommendedlocation.RecommendedLocation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data'), 'exclude': lambda f: f is None }})  
    meta: Optional[shared_meta.Meta] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('meta'), 'exclude': lambda f: f is None }})
    r"""Meta information about the returned object(s) in \\"data\\" """  
    warnings: Optional[list[shared_warning.WarningT]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warnings'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetRecommendedLocationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_400: Optional[shared_error_400.Error400] = dataclasses.field(default=None)
    r"""code    | title
    ------- | ------------------------------------- 
    477     | INVALID FORMAT
    572     | INVALID OPTION                            
    32171   | MANDATORY DATA MISSING
    """  
    error_500: Optional[shared_error_500.Error500] = dataclasses.field(default=None)
    r"""Internal Server Error"""  
    get_recommended_location_200_application_vnd_amadeus_plus_json_object: Optional[GetRecommendedLocation200ApplicationVndAmadeusPlusJSON] = dataclasses.field(default=None)
    r"""Successful reply"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    