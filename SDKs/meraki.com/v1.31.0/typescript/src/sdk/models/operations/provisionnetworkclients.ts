/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ProvisionNetworkClientsRequestBodyClients extends SpeakeasyBase {
  /**
   * The MAC address of the client. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mac" })
  mac: string;

  /**
   * The display name for the client. Optional. Limited to 255 bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyDevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
  PerConnection = "Per connection",
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  Normal = "Normal",
}

/**
 * An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked' or 'Normal'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy?: ProvisionNetworkClientsRequestBodyPoliciesBySecurityApplianceDevicePolicyEnum;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid0 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid0DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid1 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid1DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid10 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid10DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid11 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid11DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid12 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid12DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid13 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid13DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid14 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid14DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid2 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid2DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid3 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid3DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid4 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid4DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid5 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid5DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid6 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid6DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid7 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid7DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid8 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid8DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
 */
export enum ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum {
  Allowed = "Allowed",
  Blocked = "Blocked",
  GroupPolicy = "Group policy",
  Normal = "Normal",
}

/**
 * The number for the SSID
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid9 extends SpeakeasyBase {
  /**
   * The policy to apply to the specified client. Can be 'Allowed', 'Blocked', 'Normal' or 'Group policy'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyPoliciesBySsid9DevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;
}

/**
 * An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy
 */
export class ProvisionNetworkClientsRequestBodyPoliciesBySsid extends SpeakeasyBase {
  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "0" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid0)
  zero?: ProvisionNetworkClientsRequestBodyPoliciesBySsid0;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "1" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid1)
  one?: ProvisionNetworkClientsRequestBodyPoliciesBySsid1;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "10" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid10)
  ten?: ProvisionNetworkClientsRequestBodyPoliciesBySsid10;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "11" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid11)
  eleven?: ProvisionNetworkClientsRequestBodyPoliciesBySsid11;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "12" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid12)
  twelve?: ProvisionNetworkClientsRequestBodyPoliciesBySsid12;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "13" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid13)
  thirteen?: ProvisionNetworkClientsRequestBodyPoliciesBySsid13;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "14" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid14)
  fourteen?: ProvisionNetworkClientsRequestBodyPoliciesBySsid14;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "2" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid2)
  two?: ProvisionNetworkClientsRequestBodyPoliciesBySsid2;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "3" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid3)
  three?: ProvisionNetworkClientsRequestBodyPoliciesBySsid3;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "4" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid4)
  four?: ProvisionNetworkClientsRequestBodyPoliciesBySsid4;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "5" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid5)
  five?: ProvisionNetworkClientsRequestBodyPoliciesBySsid5;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "6" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid6)
  six?: ProvisionNetworkClientsRequestBodyPoliciesBySsid6;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "7" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid7)
  seven?: ProvisionNetworkClientsRequestBodyPoliciesBySsid7;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "8" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid8)
  eight?: ProvisionNetworkClientsRequestBodyPoliciesBySsid8;

  /**
   * The number for the SSID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "9" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid9)
  nine?: ProvisionNetworkClientsRequestBodyPoliciesBySsid9;
}

export class ProvisionNetworkClientsRequestBody extends SpeakeasyBase {
  /**
   * The array of clients to provision
   */
  @SpeakeasyMetadata({ elemType: ProvisionNetworkClientsRequestBodyClients })
  @Expose({ name: "clients" })
  @Type(() => ProvisionNetworkClientsRequestBodyClients)
  clients: ProvisionNetworkClientsRequestBodyClients[];

  /**
   * The policy to apply to the specified client. Can be 'Group policy', 'Allowed', 'Blocked', 'Per connection' or 'Normal'. Required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devicePolicy" })
  devicePolicy: ProvisionNetworkClientsRequestBodyDevicePolicyEnum;

  /**
   * The ID of the desired group policy to apply to the client. Required if 'devicePolicy' is set to "Group policy". Otherwise this is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPolicyId" })
  groupPolicyId?: string;

  /**
   * An object, describing what the policy-connection association is for the security appliance. (Only relevant if the security appliance is actually within the network)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policiesBySecurityAppliance" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance)
  policiesBySecurityAppliance?: ProvisionNetworkClientsRequestBodyPoliciesBySecurityAppliance;

  /**
   * An object, describing the policy-connection associations for each active SSID within the network. Keys should be the number of enabled SSIDs, mapping to an object describing the client's policy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policiesBySsid" })
  @Type(() => ProvisionNetworkClientsRequestBodyPoliciesBySsid)
  policiesBySsid?: ProvisionNetworkClientsRequestBodyPoliciesBySsid;
}

export class ProvisionNetworkClientsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ProvisionNetworkClientsRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class ProvisionNetworkClientsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  provisionNetworkClients201ApplicationJSONObject?: Record<string, any>;
}
