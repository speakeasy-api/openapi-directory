<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UpdateorderFormconfigurationRequest
{
    /**
     * Allows the editing of SKU prices right in the cart.
     * 
     * @var bool $allowManualPrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowManualPrice')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $allowManualPrice;
    
    /**
     * On the same purchase, allows the selection of items from multiple delivery channels.
     * 
     * @var bool $allowMultipleDeliveries
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowMultipleDeliveries')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $allowMultipleDeliveries;
    
    /**
     * Array of objects containing Apps configuration information.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\UpdateorderFormconfigurationRequestApps> $apps
     */
	#[\JMS\Serializer\Annotation\SerializedName('apps')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\UpdateorderFormconfigurationRequestApps>')]
    public array $apps;
    
    /**
     * Number of price digits.
     * 
     * @var int $decimalDigitsPrecision
     */
	#[\JMS\Serializer\Annotation\SerializedName('decimalDigitsPrecision')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $decimalDigitsPrecision;
    
    /**
     * Allows, on a first purchase, masking client's data. It could be useful when a shared cart is used and the client doesn't want to share its data.
     * 
     * @var ?bool $maskFirstPurchaseData
     */
	#[\JMS\Serializer\Annotation\SerializedName('maskFirstPurchaseData')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $maskFirstPurchaseData = null;
    
    /**
     * Allows the input of a limit of white label sellers involved on the cart.
     * 
     * @var ?int $maxNumberOfWhiteLabelSellers
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxNumberOfWhiteLabelSellers')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxNumberOfWhiteLabelSellers = null;
    
    /**
     * Minimum SKU quantity by cart.
     * 
     * @var int $minimumQuantityAccumulatedForItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimumQuantityAccumulatedForItems')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minimumQuantityAccumulatedForItems;
    
    /**
     * Minimum cart value.
     * 
     * @var int $minimumValueAccumulated
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimumValueAccumulated')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $minimumValueAccumulated;
    
    /**
     * Payment Configuration object
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PaymentConfiguration $paymentConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PaymentConfiguration')]
    public PaymentConfiguration $paymentConfiguration;
    
    /**
     * If you want to apply a first installment discount to a particular payment system, set this field to that payment system's ID. Learn more: [Configuring a discount for orders prepaid in full](https://help.vtex.com/en/tutorial/configurar-desconto-de-preco-a-vista--7Lfcj9Wb5dpYfA2gKkACIt).
     * 
     * @var ?string $paymentSystemToCheckFirstInstallment
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentSystemToCheckFirstInstallment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentSystemToCheckFirstInstallment = null;
    
    /**
     * Configures reCAPTCHA validation for the account, defining in which situations the shopper will be prompted to validate a purchase with reCAPTCHA. Learn more about [reCAPTCHA validation for VTEX stores](https://help.vtex.com/tutorial/recaptcha-no-checkout--18Te3oDd7f4qcjKu9jhNzP)
     * 
     * 
     * 
     * Possible values are:
     * 
     * - `"never"`: no purchases are validated with reCAPTCHA.
     * 
     * - `"always"`: every purchase is validated with reCAPTCHA.
     * 
     * - `"vtexCriteria"`: only some purchases are validated with reCAPTCHA in order to minimize friction and improve shopping experience. VTEXâ€™s algorithm determines which sessions are trustworthy and which should be validated with reCAPTCHA. This is the recommended option.
     * 
     * @var ?string $recaptchaValidation
     */
	#[\JMS\Serializer\Annotation\SerializedName('recaptchaValidation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recaptchaValidation = null;
    
    /**
     * External tax service configuration.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UpdateorderFormconfigurationRequestTaxConfiguration $taxConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UpdateorderFormconfigurationRequestTaxConfiguration')]
    public UpdateorderFormconfigurationRequestTaxConfiguration $taxConfiguration;
    
	public function __construct()
	{
		$this->allowManualPrice = false;
		$this->allowMultipleDeliveries = false;
		$this->apps = [];
		$this->decimalDigitsPrecision = 0;
		$this->maskFirstPurchaseData = null;
		$this->maxNumberOfWhiteLabelSellers = null;
		$this->minimumQuantityAccumulatedForItems = 0;
		$this->minimumValueAccumulated = 0;
		$this->paymentConfiguration = new \OpenAPI\OpenAPI\Models\Shared\PaymentConfiguration();
		$this->paymentSystemToCheckFirstInstallment = null;
		$this->recaptchaValidation = null;
		$this->taxConfiguration = new \OpenAPI\OpenAPI\Models\Shared\UpdateorderFormconfigurationRequestTaxConfiguration();
	}
}
