/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ShardDetail } from "./sharddetail";
import { Expose, Type } from "class-transformer";

/**
 * A list of cluster configuration options.
 */
export class ClusterConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EngineVersion" })
  engineVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaintenanceWindow" })
  maintenanceWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NodeType" })
  nodeType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NumShards" })
  numShards?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ParameterGroupName" })
  parameterGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Port" })
  port?: number;

  @SpeakeasyMetadata({ elemType: ShardDetail })
  @Expose({ name: "Shards" })
  @Type(() => ShardDetail)
  shards?: ShardDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "SnapshotRetentionLimit" })
  snapshotRetentionLimit?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SnapshotWindow" })
  snapshotWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetGroupName" })
  subnetGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TopicArn" })
  topicArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;
}
