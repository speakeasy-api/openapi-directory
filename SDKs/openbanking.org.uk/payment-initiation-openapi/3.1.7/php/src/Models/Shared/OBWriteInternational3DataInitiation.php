<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OBWriteInternational3DataInitiation - The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OBWriteInternational3DataInitiation
{
    /**
     * Specifies which party/parties will bear the charges associated with the processing of the payment transaction.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBChargeBearerType1CodeEnum $chargeBearer
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargeBearer')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OBChargeBearerType1CodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBChargeBearerType1CodeEnum $chargeBearer = null;
    
    /**
     * Party to which an amount of money is due.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditor $creditor
     */
	#[\JMS\Serializer\Annotation\SerializedName('Creditor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteInternational3DataInitiationCreditor $creditor = null;
    
    /**
     * Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditorAccount $creditorAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditorAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditorAccount')]
    public OBWriteInternational3DataInitiationCreditorAccount $creditorAccount;
    
    /**
     * Financial institution servicing an account for the creditor.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditorAgent $creditorAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditorAgent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditorAgent')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteInternational3DataInitiationCreditorAgent $creditorAgent = null;
    
    /**
     * Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account.
     * 
     * @var string $currencyOfTransfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrencyOfTransfer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currencyOfTransfer;
    
    /**
     * Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationDebtorAccount $debtorAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('DebtorAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationDebtorAccount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteInternational3DataInitiationDebtorAccount $debtorAccount = null;
    
    /**
     * Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code).
     * 
     * @var ?string $destinationCountryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('DestinationCountryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationCountryCode = null;
    
    /**
     * Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.
     * 
     * Usage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.
     * OB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field.
     * 
     * @var string $endToEndIdentification
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndToEndIdentification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $endToEndIdentification;
    
    /**
     * Provides details on the currency exchange rate and contract.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationExchangeRateInformation $exchangeRateInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExchangeRateInformation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationExchangeRateInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteInternational3DataInitiationExchangeRateInformation $exchangeRateInformation = null;
    
    /**
     * Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes.
     * 
     * @var ?string $extendedPurpose
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExtendedPurpose')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $extendedPurpose = null;
    
    /**
     * Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.
     * 
     * Usage: This amount has to be transported unchanged through the transaction chain.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationInstructedAmount $instructedAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('InstructedAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationInstructedAmount')]
    public OBWriteInternational3DataInitiationInstructedAmount $instructedAmount;
    
    /**
     * Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.
     * 
     * Usage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction.
     * 
     * @var string $instructionIdentification
     */
	#[\JMS\Serializer\Annotation\SerializedName('InstructionIdentification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $instructionIdentification;
    
    /**
     * Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationInstructionPriorityEnum $instructionPriority
     */
	#[\JMS\Serializer\Annotation\SerializedName('InstructionPriority')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationInstructionPriorityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteInternational3DataInitiationInstructionPriorityEnum $instructionPriority = null;
    
    /**
     * User community specific instrument.
     * 
     * Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.
     * 
     * @var ?string $localInstrument
     */
	#[\JMS\Serializer\Annotation\SerializedName('LocalInstrument')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $localInstrument = null;
    
    /**
     * Specifies the external purpose code in the format of character string with a maximum length of 4 characters.
     * 
     * The list of valid codes is an external code list published separately.
     * External code sets can be downloaded from www.iso20022.org.
     * 
     * @var ?string $purpose
     */
	#[\JMS\Serializer\Annotation\SerializedName('Purpose')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $purpose = null;
    
    /**
     * Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationRemittanceInformation $remittanceInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('RemittanceInformation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationRemittanceInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OBWriteInternational3DataInitiationRemittanceInformation $remittanceInformation = null;
    
    /**
     * Additional information that can not be captured in the structured fields and/or any other specific block.
     * 
     * @var ?array<string, mixed> $supplementaryData
     */
	#[\JMS\Serializer\Annotation\SerializedName('SupplementaryData')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $supplementaryData = null;
    
	public function __construct()
	{
		$this->chargeBearer = null;
		$this->creditor = null;
		$this->creditorAccount = new \OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationCreditorAccount();
		$this->creditorAgent = null;
		$this->currencyOfTransfer = "";
		$this->debtorAccount = null;
		$this->destinationCountryCode = null;
		$this->endToEndIdentification = "";
		$this->exchangeRateInformation = null;
		$this->extendedPurpose = null;
		$this->instructedAmount = new \OpenAPI\OpenAPI\Models\Shared\OBWriteInternational3DataInitiationInstructedAmount();
		$this->instructionIdentification = "";
		$this->instructionPriority = null;
		$this->localInstrument = null;
		$this->purpose = null;
		$this->remittanceInformation = null;
		$this->supplementaryData = null;
	}
}
