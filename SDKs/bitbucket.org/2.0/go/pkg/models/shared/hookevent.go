// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HookEventEventEnum - The event identifier.
type HookEventEventEnum string

const (
	HookEventEventEnumPullrequestChangesRequestCreated HookEventEventEnum = "pullrequest:changes_request_created"
	HookEventEventEnumPullrequestRejected              HookEventEventEnum = "pullrequest:rejected"
	HookEventEventEnumIssueUpdated                     HookEventEventEnum = "issue:updated"
	HookEventEventEnumPullrequestUnapproved            HookEventEventEnum = "pullrequest:unapproved"
	HookEventEventEnumPullrequestCommentDeleted        HookEventEventEnum = "pullrequest:comment_deleted"
	HookEventEventEnumRepoCommitStatusUpdated          HookEventEventEnum = "repo:commit_status_updated"
	HookEventEventEnumPullrequestChangesRequestRemoved HookEventEventEnum = "pullrequest:changes_request_removed"
	HookEventEventEnumPullrequestCommentCreated        HookEventEventEnum = "pullrequest:comment_created"
	HookEventEventEnumRepoTransfer                     HookEventEventEnum = "repo:transfer"
	HookEventEventEnumPullrequestFulfilled             HookEventEventEnum = "pullrequest:fulfilled"
	HookEventEventEnumRepoCommitCommentCreated         HookEventEventEnum = "repo:commit_comment_created"
	HookEventEventEnumIssueCommentCreated              HookEventEventEnum = "issue:comment_created"
	HookEventEventEnumProjectUpdated                   HookEventEventEnum = "project:updated"
	HookEventEventEnumPullrequestCommentUpdated        HookEventEventEnum = "pullrequest:comment_updated"
	HookEventEventEnumRepoCreated                      HookEventEventEnum = "repo:created"
	HookEventEventEnumRepoFork                         HookEventEventEnum = "repo:fork"
	HookEventEventEnumRepoUpdated                      HookEventEventEnum = "repo:updated"
	HookEventEventEnumRepoPush                         HookEventEventEnum = "repo:push"
	HookEventEventEnumPullrequestApproved              HookEventEventEnum = "pullrequest:approved"
	HookEventEventEnumRepoDeleted                      HookEventEventEnum = "repo:deleted"
	HookEventEventEnumRepoCommitStatusCreated          HookEventEventEnum = "repo:commit_status_created"
	HookEventEventEnumRepoImported                     HookEventEventEnum = "repo:imported"
	HookEventEventEnumIssueCreated                     HookEventEventEnum = "issue:created"
	HookEventEventEnumPullrequestUpdated               HookEventEventEnum = "pullrequest:updated"
	HookEventEventEnumPullrequestCreated               HookEventEventEnum = "pullrequest:created"
)

func (e *HookEventEventEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pullrequest:changes_request_created":
		fallthrough
	case "pullrequest:rejected":
		fallthrough
	case "issue:updated":
		fallthrough
	case "pullrequest:unapproved":
		fallthrough
	case "pullrequest:comment_deleted":
		fallthrough
	case "repo:commit_status_updated":
		fallthrough
	case "pullrequest:changes_request_removed":
		fallthrough
	case "pullrequest:comment_created":
		fallthrough
	case "repo:transfer":
		fallthrough
	case "pullrequest:fulfilled":
		fallthrough
	case "repo:commit_comment_created":
		fallthrough
	case "issue:comment_created":
		fallthrough
	case "project:updated":
		fallthrough
	case "pullrequest:comment_updated":
		fallthrough
	case "repo:created":
		fallthrough
	case "repo:fork":
		fallthrough
	case "repo:updated":
		fallthrough
	case "repo:push":
		fallthrough
	case "pullrequest:approved":
		fallthrough
	case "repo:deleted":
		fallthrough
	case "repo:commit_status_created":
		fallthrough
	case "repo:imported":
		fallthrough
	case "issue:created":
		fallthrough
	case "pullrequest:updated":
		fallthrough
	case "pullrequest:created":
		*e = HookEventEventEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HookEventEventEnum: %s", s)
	}
}

// HookEvent - An event, associated with a resource or subject type.
type HookEvent struct {
	// The category this event belongs to.
	Category *string `json:"category,omitempty"`
	// More detailed description of the webhook event type.
	Description *string `json:"description,omitempty"`
	// The event identifier.
	Event *HookEventEventEnum `json:"event,omitempty"`
	// Summary of the webhook event type.
	Label *string `json:"label,omitempty"`
}
