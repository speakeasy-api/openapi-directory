// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutQueryDefinitionXAmzTargetEnum
type PutQueryDefinitionXAmzTargetEnum string

const (
	PutQueryDefinitionXAmzTargetEnumLogs20140328PutQueryDefinition PutQueryDefinitionXAmzTargetEnum = "Logs_20140328.PutQueryDefinition"
)

func (e PutQueryDefinitionXAmzTargetEnum) ToPointer() *PutQueryDefinitionXAmzTargetEnum {
	return &e
}

func (e *PutQueryDefinitionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Logs_20140328.PutQueryDefinition":
		*e = PutQueryDefinitionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutQueryDefinitionXAmzTargetEnum: %v", v)
	}
}

type PutQueryDefinitionRequest struct {
	PutQueryDefinitionRequest shared.PutQueryDefinitionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                PutQueryDefinitionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutQueryDefinitionResponse struct {
	ContentType string
	// InvalidParameterException
	InvalidParameterException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	PutQueryDefinitionResponse *shared.PutQueryDefinitionResponse
	StatusCode                 int
	RawResponse                *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
