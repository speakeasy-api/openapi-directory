/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class ChatV1ServiceUser extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/api/rest/account) that created the User resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The JSON string that stores application-specific data. **Note** If this property has been assigned a value, it's only  displayed in a FETCH action that returns a single resource; otherwise, it's null. If the attributes have not been set, `{}` is returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: string;

  /**
   * The date and time in GMT when the resource was created specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the resource was last updated specified in [RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * The string that you assigned to describe the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * The application-defined string that uniquely identifies the resource's User within the [Service](https://www.twilio.com/docs/api/chat/rest/services). This value is often a username or an email address. See [access tokens](https://www.twilio.com/docs/api/chat/guides/create-tokens) for more info.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identity" })
  identity?: string;

  /**
   * Whether the User has a potentially valid Push Notification registration (APN or GCM) for the Service instance. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_notifiable" })
  isNotifiable?: boolean;

  /**
   * Whether the User is actively connected to the Service instance and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for the Service instance, even if the Service's `reachability_enabled` is `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_online" })
  isOnline?: boolean;

  /**
   * The number of Channels this User is a Member of.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "joined_channels_count" })
  joinedChannelsCount?: number;

  /**
   * The absolute URLs of the [Channel](https://www.twilio.com/docs/chat/api/channels) and [Binding](https://www.twilio.com/docs/chat/rest/bindings-resource) resources related to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * The SID of the [Role](https://www.twilio.com/docs/api/chat/rest/roles) assigned to the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role_sid" })
  roleSid?: string;

  /**
   * The SID of the [Service](https://www.twilio.com/docs/api/chat/rest/services) the resource is associated with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_sid" })
  serviceSid?: string;

  /**
   * The unique string that we created to identify the User resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The absolute URL of the User resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
