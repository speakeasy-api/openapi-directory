"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fetcherrorresponse as shared_fetcherrorresponse
from ..shared import fetchgroupsresponse as shared_fetchgroupsresponse
from typing import Optional


@dataclasses.dataclass
class FetchGroupsRequest:
    
    filter_organization: str = dataclasses.field(metadata={'query_param': { 'field_name': 'filter[organization]', 'style': 'form', 'explode': True }})
    r"""Organization identifier"""  
    filter_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[name]', 'style': 'form', 'explode': True }})
    r"""Group name"""  
    

@dataclasses.dataclass
class FetchGroupsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fetch_error_response: Optional[shared_fetcherrorresponse.FetchErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    fetch_groups_response: Optional[shared_fetchgroupsresponse.FetchGroupsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    