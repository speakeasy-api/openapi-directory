/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FirstAdminUser - First administrator user
 */
public class FirstAdminUser {
    /**
     * User Authentication Data
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authData")
    public UserAuthData authData;
    public FirstAdminUser withAuthData(UserAuthData authData) {
        this.authData = authData;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.13.0
     * 
     * Authentication methods:
     * 
     * * `sql`
     * 
     * * `active_directory`
     * 
     * * `radius`
     * 
     * * `openid`
     * 
     * use `authData` instead
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authMethods")
    public UserAuthMethod[] authMethods;
    public FirstAdminUser withAuthMethods(UserAuthMethod[] authMethods) {
        this.authMethods = authMethods;
        return this;
    }
    
    /**
     * Email 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public FirstAdminUser withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * User first name
     */
    @JsonProperty("firstName")
    public String firstName;
    public FirstAdminUser withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.12.0
     * 
     * Gender
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gender")
    public String gender;
    public FirstAdminUser withGender(String gender) {
        this.gender = gender;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.7.0
     * 
     * Language ID or ISO 639-1 code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public FirstAdminUser withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * User last name
     */
    @JsonProperty("lastName")
    public String lastName;
    public FirstAdminUser withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.13.0
     * 
     * User login name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("login")
    public String login;
    public FirstAdminUser withLogin(String login) {
        this.login = login;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.13.0
     * 
     * Determines whether user has to change his / her initial password.
     * 
     * use `authDate.mustChangePassword` instead
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("needsToChangePassword")
    public Boolean needsToChangePassword;
    public FirstAdminUser withNeedsToChangePassword(Boolean needsToChangePassword) {
        this.needsToChangePassword = needsToChangePassword;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.13.0
     * 
     * If `true`, the user must change the `userName` at the first login.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("needsToChangeUserName")
    public Boolean needsToChangeUserName;
    public FirstAdminUser withNeedsToChangeUserName(Boolean needsToChangeUserName) {
        this.needsToChangeUserName = needsToChangeUserName;
        return this;
    }
    
    /**
     * Notify user about his new account
     * 
     * * default: `true` for `basic` auth type
     * 
     * * default: `false` for `active_directory`, `openid` and `radius` auth types
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifyUser")
    public Boolean notifyUser;
    public FirstAdminUser withNotifyUser(Boolean notifyUser) {
        this.notifyUser = notifyUser;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.13.0
     * 
     * An initial password may be preset
     * 
     * use `authData` instead
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;
    public FirstAdminUser withPassword(String password) {
        this.password = password;
        return this;
    }
    
    /**
     * Phone number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;
    public FirstAdminUser withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * IETF language tag
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiverLanguage")
    public String receiverLanguage;
    public FirstAdminUser withReceiverLanguage(String receiverLanguage) {
        this.receiverLanguage = receiverLanguage;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.18.0
     * 
     * Job title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public FirstAdminUser withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.13.0
     * 
     * Username
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userName")
    public String userName;
    public FirstAdminUser withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
}
