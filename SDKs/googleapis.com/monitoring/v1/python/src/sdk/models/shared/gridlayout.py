"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import widget as shared_widget
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GridLayout:
    r"""A basic layout divides the available space into vertical columns of equal width and arranges a list of widgets using a row-first strategy."""
    
    columns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columns'), 'exclude': lambda f: f is None }})
    r"""The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering."""  
    widgets: Optional[list[shared_widget.Widget]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('widgets'), 'exclude': lambda f: f is None }})
    r"""The informational elements that are arranged into the columns row-first."""  
    