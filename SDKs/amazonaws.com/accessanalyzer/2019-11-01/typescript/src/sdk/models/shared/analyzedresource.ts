/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FindingStatusEnum } from "./findingstatusenum";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains details about the analyzed resource.
 */
export class AnalyzedResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "actions" })
  actions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "analyzedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  analyzedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isPublic" })
  isPublic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceArn" })
  resourceArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceOwnerAccount" })
  resourceOwnerAccount: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sharedVia" })
  sharedVia?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: FindingStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
