<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1AudioStatusReport - Status data for storage. * This field is telemetry information and this will change over time as the device is utilized. * Data for this field is controlled via policy: [ReportDeviceAudioStatus](https://chromeenterprise.google/policies/#ReportDeviceAudioStatus) * Data Collection Frequency: 10 minutes * Default Data Reporting Frequency: 3 hours - Policy Controlled: Yes * Cache: If the device is offline, the collected data is stored locally, and will be reported when the device is next online: No * Reported for affiliated users only: N/A * Granular permission needed: TELEMETRY_API_AUDIO_REPORT
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1AudioStatusReport
{
    /**
     * Output only. Active input device's name.
     * 
     * @var ?string $inputDevice
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputDevice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inputDevice = null;
    
    /**
     * Output only. Active input device's gain in [0, 100].
     * 
     * @var ?int $inputGain
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputGain')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $inputGain = null;
    
    /**
     * Output only. Is active input device mute or not.
     * 
     * @var ?bool $inputMute
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputMute')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $inputMute = null;
    
    /**
     * Output only. Active output device's name.
     * 
     * @var ?string $outputDevice
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputDevice')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $outputDevice = null;
    
    /**
     * Output only. Is active output device mute or not.
     * 
     * @var ?bool $outputMute
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputMute')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $outputMute = null;
    
    /**
     * Output only. Active output device's volume in [0, 100].
     * 
     * @var ?int $outputVolume
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputVolume')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $outputVolume = null;
    
    /**
     * Output only. Timestamp of when the sample was collected on device.
     * 
     * @var ?string $reportTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportTime = null;
    
	public function __construct()
	{
		$this->inputDevice = null;
		$this->inputGain = null;
		$this->inputMute = null;
		$this->outputDevice = null;
		$this->outputMute = null;
		$this->outputVolume = null;
		$this->reportTime = null;
	}
}
