/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
 */
export enum TeamGameLogsBySeasonFormatEnum {
  Xml = "XML",
  Json = "JSON",
}

export class TeamGameLogsBySeasonRequest extends SpeakeasyBase {
  /**
   * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: TeamGameLogsBySeasonFormatEnum;

  /**
   * How many games to return. Example <code>all</code>, <code>10</code>, <code>25</code>
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=numberofgames",
  })
  numberofgames: string;

  /**
   * Season to get games from. Example <code>2019POST</code>, <code>2020</code>
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=season",
  })
  season: string;

  /**
   * Unique ID of team.  Example <code> 1 </code>
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=teamid",
  })
  teamid: string;
}

export class TeamGameLogsBySeasonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata({ elemType: shared.TeamGame })
  teamGames?: shared.TeamGame[];
}
