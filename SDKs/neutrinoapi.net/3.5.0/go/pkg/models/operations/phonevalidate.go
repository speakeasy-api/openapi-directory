// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PhoneValidateRequestBodyOutputCaseEnum - The output case style
type PhoneValidateRequestBodyOutputCaseEnum string

const (
	PhoneValidateRequestBodyOutputCaseEnumCamel PhoneValidateRequestBodyOutputCaseEnum = "camel"
)

func (e *PhoneValidateRequestBodyOutputCaseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "camel":
		*e = PhoneValidateRequestBodyOutputCaseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneValidateRequestBodyOutputCaseEnum: %s", s)
	}
}

type PhoneValidateRequestBody struct {
	// ISO 2-letter country code, assume numbers are based in this country. If not set numbers are assumed to be in international format (with or without the leading + sign)
	CountryCode *string `form:"name=country-code"`
	// Pass in a users IP address and we will assume numbers are based in the country of the IP address
	IP *string `form:"name=ip"`
	// A phone number. This can be in international format (E.164) or local format. If passing local format you must also set either the 'country-code' OR 'ip' options as well
	Number string `form:"name=number"`
	// The output case style
	OutputCase *PhoneValidateRequestBodyOutputCaseEnum `form:"name=output-case"`
}

type PhoneValidateRequest struct {
	Request *PhoneValidateRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
}

type PhoneValidateResponse struct {
	// Your API request has been rejected. Check error code for details
	APIError              *shared.APIError
	ContentType           string
	PhoneValidateResponse *shared.PhoneValidateResponse
	StatusCode            int
	RawResponse           *http.Response
}
