/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitteeHistory } from "./committeehistory";
import { Expose, Transform, Type } from "class-transformer";

export class ScheduleE extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action_code" })
  actionCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "action_code_full" })
  actionCodeFull?: string;

  /**
   * Amendent types:
   *
   * @remarks
   *     -N   new
   *     -A   amendment
   *     -T   terminated
   *     -C   consolidated
   *     -M   multi-candidate
   *     -S   secondary
   *
   * NULL might be new or amendment. If amendment indicator is null and the filings is the first or first in a chain treat it as if it was a new. If it is not the first or first in a chain then treat the filing as an amendment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator" })
  amendmentIndicator?: string;

  /**
   *
   * @remarks
   * Number of times the report has been amended.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_number" })
  amendmentNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_schedule_name" })
  backReferenceScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_transaction_id" })
  backReferenceTransactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate" })
  candidate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_first_name" })
  candidateFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_id" })
  candidateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_last_name" })
  candidateLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_middle_name" })
  candidateMiddleName?: string;

  /**
   * Name of candidate running for office
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_name" })
  candidateName?: string;

  /**
   * Federal office candidate runs for: H, S or P
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office" })
  candidateOffice?: string;

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_district" })
  candidateOfficeDistrict?: string;

  /**
   * US state or territory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_state" })
  candidateOfficeState?: string;

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_party" })
  candidateParty?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_prefix" })
  candidatePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_suffix" })
  candidateSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "category_code" })
  categoryCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "category_code_full" })
  categoryCodeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee" })
  @Type(() => CommitteeHistory)
  committee?: CommitteeHistory;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_city" })
  conduitCommitteeCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_id" })
  conduitCommitteeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_name" })
  conduitCommitteeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_state" })
  conduitCommitteeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street1" })
  conduitCommitteeStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_street2" })
  conduitCommitteeStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conduit_committee_zip" })
  conduitCommitteeZip?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "dissemination_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  disseminationDate?: Date;

  /**
   * Election type
   *
   * @remarks
   * Convention, Primary,
   * General, Special,
   * Runoff etc.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_type" })
  electionType?: string;

  /**
   * Election type
   *
   * @remarks
   * Convention, Primary,
   * General, Special,
   * Runoff etc.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "election_type_full" })
  electionTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_amount" })
  expenditureAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expenditureDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_description" })
  expenditureDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_first_name" })
  filerFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_last_name" })
  filerLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_middle_name" })
  filerMiddleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_prefix" })
  filerPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_suffix" })
  filerSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filing_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  filingDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "filing_form" })
  filingForm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "image_number" })
  imageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "independent_sign_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  independentSignDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "independent_sign_name" })
  independentSignName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_notice" })
  isNotice?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link_id" })
  linkId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code" })
  memoCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code_full" })
  memoCodeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_text" })
  memoText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memoed_subtotal" })
  memoedSubtotal?: boolean;

  /**
   *
   * @remarks
   * Report is either new or is the most-recently filed amendment
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "most_recent" })
  mostRecent?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notary_commission_expiration_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notaryCommissionExpirationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notary_sign_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notarySignDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "notary_sign_name" })
  notarySignName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "office_total_ytd" })
  officeTotalYtd?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "original_sub_id" })
  originalSubId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_city" })
  payeeCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_first_name" })
  payeeFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_last_name" })
  payeeLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_middle_name" })
  payeeMiddleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_name" })
  payeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_prefix" })
  payeePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_state" })
  payeeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_street_1" })
  payeeStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_street_2" })
  payeeStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_suffix" })
  payeeSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_zip" })
  payeeZip?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_file_number" })
  previousFileNumber?: number;

  /**
   * Name of report where the underlying data comes from:
   *
   * @remarks
   *     - 10D Pre-Election
   *     - 10G Pre-General
   *     - 10P Pre-Primary
   *     - 10R Pre-Run-Off
   *     - 10S Pre-Special
   *     - 12C Pre-Convention
   *     - 12G Pre-General
   *     - 12P Pre-Primary
   *     - 12R Pre-Run-Off
   *     - 12S Pre-Special
   *     - 30D Post-Election
   *     - 30G Post-General
   *     - 30P Post-Primary
   *     - 30R Post-Run-Off
   *     - 30S Post-Special
   *     - 60D Post-Convention
   *     - M1  January Monthly
   *     - M10 October Monthly
   *     - M11 November Monthly
   *     - M12 December Monthly
   *     - M2  February Monthly
   *     - M3  March Monthly
   *     - M4  April Monthly
   *     - M5  May Monthly
   *     - M6  June Monthly
   *     - M7  July Monthly
   *     - M8  August Monthly
   *     - M9  September Monthly
   *     - MY  Mid-Year Report
   *     - Q1  April Quarterly
   *     - Q2  July Quarterly
   *     - Q3  October Quarterly
   *     - TER Termination Report
   *     - YE  Year-End
   *     - ADJ COMP ADJUST AMEND
   *     - CA  COMPREHENSIVE AMEND
   *     - 90S Post Inaugural Supplement
   *     - 90D Post Inaugural
   *     - 48  48 Hour Notification
   *     - 24  24 Hour Notification
   *     - M7S July Monthly/Semi-Annual
   *     - MSA Monthly Semi-Annual (MY)
   *     - MYS Monthly Year End/Semi-Annual
   *     - Q2S July Quarterly/Semi-Annual
   *     - QSA Quarterly Semi-Annual (MY)
   *     - QYS Quarterly Year End/Semi-Annual
   *     - QYE Quarterly Semi-Annual (YE)
   *     - QMS Quarterly Mid-Year/ Semi-Annual
   *     - MSY Monthly Semi-Annual (YE)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_type" })
  reportType?: string;

  /**
   *
   * @remarks
   * Forms with coverage date -
   *     year from the coverage ending date.
   * Forms without coverage date -
   *     year from the receipt date.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "report_year" })
  reportYear?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule_type" })
  scheduleType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule_type_full" })
  scheduleTypeFull?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sub_id" })
  subId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "support_oppose_indicator" })
  supportOpposeIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;
}
