/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Entity representing a Cloud Identity account that may be associated with a Channel Services API partner.
 */
export class GoogleCloudChannelV1CloudIdentityCustomerAccount extends SpeakeasyBase {
  /**
   * If existing = true, the Cloud Identity ID of the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerCloudIdentityId" })
  customerCloudIdentityId?: string;

  /**
   * If owned = true, the name of the customer that owns the Cloud Identity account. Customer_name uses the format: accounts/{account_id}/customers/{customer_id}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerName" })
  customerName?: string;

  /**
   * Returns true if a Cloud Identity account exists for a specific domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "existing" })
  existing?: boolean;

  /**
   * Returns true if the Cloud Identity account is associated with a customer of the Channel Services partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owned" })
  owned?: boolean;
}
