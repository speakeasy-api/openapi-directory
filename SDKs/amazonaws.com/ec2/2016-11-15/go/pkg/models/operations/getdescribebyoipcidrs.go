// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeByoipCidrsActionEnum
type GETDescribeByoipCidrsActionEnum string

const (
	GETDescribeByoipCidrsActionEnumDescribeByoipCidrs GETDescribeByoipCidrsActionEnum = "DescribeByoipCidrs"
)

func (e GETDescribeByoipCidrsActionEnum) ToPointer() *GETDescribeByoipCidrsActionEnum {
	return &e
}

func (e *GETDescribeByoipCidrsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeByoipCidrs":
		*e = GETDescribeByoipCidrsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeByoipCidrsActionEnum: %v", v)
	}
}

// GETDescribeByoipCidrsVersionEnum
type GETDescribeByoipCidrsVersionEnum string

const (
	GETDescribeByoipCidrsVersionEnumTwoThousandAndSixteen1115 GETDescribeByoipCidrsVersionEnum = "2016-11-15"
)

func (e GETDescribeByoipCidrsVersionEnum) ToPointer() *GETDescribeByoipCidrsVersionEnum {
	return &e
}

func (e *GETDescribeByoipCidrsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDescribeByoipCidrsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeByoipCidrsVersionEnum: %v", v)
	}
}

type GETDescribeByoipCidrsRequest struct {
	Action GETDescribeByoipCidrsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
	MaxResults int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// The token for the next page of results.
	NextToken         *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	Version           GETDescribeByoipCidrsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeByoipCidrsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
