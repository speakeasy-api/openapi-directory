<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetEvaluationOutput - Represents the output of a <code>GetEvaluation</code> operation and describes an <code>Evaluation</code>.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetEvaluationOutput
{
	#[\JMS\Serializer\Annotation\SerializedName('ComputeTime')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $computeTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CreatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CreatedByIamUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdByIamUser = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('EvaluationDataSourceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $evaluationDataSourceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('EvaluationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $evaluationId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('FinishedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $finishedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InputDataLocationS3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $inputDataLocationS3 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LastUpdatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUpdatedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LogUri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logUri = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MLModelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mlModelId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('PerformanceMetrics')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PerformanceMetrics')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PerformanceMetrics $performanceMetrics = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StartedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $startedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EntityStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EntityStatusEnum $status = null;
    
	public function __construct()
	{
		$this->computeTime = null;
		$this->createdAt = null;
		$this->createdByIamUser = null;
		$this->evaluationDataSourceId = null;
		$this->evaluationId = null;
		$this->finishedAt = null;
		$this->inputDataLocationS3 = null;
		$this->lastUpdatedAt = null;
		$this->logUri = null;
		$this->mlModelId = null;
		$this->message = null;
		$this->name = null;
		$this->performanceMetrics = null;
		$this->startedAt = null;
		$this->status = null;
	}
}
