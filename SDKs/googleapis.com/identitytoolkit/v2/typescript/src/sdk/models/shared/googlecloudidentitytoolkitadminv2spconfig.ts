/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudIdentitytoolkitAdminV2SpCertificate } from "./googlecloudidentitytoolkitadminv2spcertificate";
import { Expose, Type } from "class-transformer";

/**
 * The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
 */
export class GoogleCloudIdentitytoolkitAdminV2SpConfig extends SpeakeasyBase {
  /**
   * Callback URI where responses from IDP are handled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callbackUri" })
  callbackUri?: string;

  /**
   * Output only. Public certificates generated by the server to verify the signature in SAMLRequest in the SP-initiated flow.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudIdentitytoolkitAdminV2SpCertificate,
  })
  @Expose({ name: "spCertificates" })
  @Type(() => GoogleCloudIdentitytoolkitAdminV2SpCertificate)
  spCertificates?: GoogleCloudIdentitytoolkitAdminV2SpCertificate[];

  /**
   * Unique identifier for all SAML entities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spEntityId" })
  spEntityId?: string;
}

/**
 * The SAML SP (Service Provider) configuration when the project acts as the relying party to receive and accept an authentication assertion issued by a SAML identity provider.
 */
export class GoogleCloudIdentitytoolkitAdminV2SpConfigInput extends SpeakeasyBase {
  /**
   * Callback URI where responses from IDP are handled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callbackUri" })
  callbackUri?: string;

  /**
   * Unique identifier for all SAML entities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spEntityId" })
  spEntityId?: string;
}
