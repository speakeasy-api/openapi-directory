"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionLabels:
    r"""User-facing labels for this custom workflow action."""
    
    action_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionName') }})
    r"""The name of this custom action. This is what will show up when users are selecting an action in the workflows app."""  
    action_card_content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionCardContent'), 'exclude': lambda f: f is None }})
    r"""The label to be displayed in the action card of the workflow editor once this custom action has been added to a workflow."""  
    action_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionDescription'), 'exclude': lambda f: f is None }})
    r"""A description for this custom action. This will show up in the action editor along with the input fields."""  
    app_display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appDisplayName'), 'exclude': lambda f: f is None }})
    r"""The name to be displayed at the top of the action editor in the workflows app."""  
    input_field_descriptions: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputFieldDescriptions'), 'exclude': lambda f: f is None }})
    r"""A map of input field names to descriptions for the fields. These will show up as tooltips when users are editing your action."""  
    input_field_labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputFieldLabels'), 'exclude': lambda f: f is None }})
    r"""A map of input field names to the user-facing labels."""  
    