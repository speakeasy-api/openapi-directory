/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class BrowserBotRequestBody extends SpeakeasyBase {
  /**
   * Delay in seconds to wait before capturing any page data, executing selectors or JavaScript
   */
  @SpeakeasyMetadata({ data: "form, name=delay" })
  delay?: number;

  /**
   * Execute JavaScript on the website. This parameter accepts JavaScript as either a string containing JavaScript or for sending multiple separate statements a JSON array or POST array can also be used. If a statement returns any value it will be returned in the 'exec-results' response. You can also use the following specially defined user interaction functions: <br> <br> <div> sleep(seconds); Just wait/sleep for the specified number of seconds. <br>click('selector'); Click on the first element matching the given selector. <br>focus('selector'); Focus on the first element matching the given selector. <br>keys('characters'); Send the specified keyboard characters. Use click() or focus() first to send keys to a specific element. <br>enter(); Send the Enter key. <br>tab(); Send the Tab key. <br> </div>
   */
  @SpeakeasyMetadata({ data: "form, name=exec" })
  exec?: string[];

  /**
   * Ignore any TLS/SSL certificate errors and load the page anyway
   */
  @SpeakeasyMetadata({ data: "form, name=ignore-certificate-errors" })
  ignoreCertificateErrors?: boolean;

  /**
   * Extract content from the page DOM using this selector. Commonly known as a CSS selector, you can find a good reference <a href="https://www.w3schools.com/cssref/css_selectors.asp">here</a>
   */
  @SpeakeasyMetadata({ data: "form, name=selector" })
  selector?: string;

  /**
   * Timeout in seconds. Give up if still trying to load the page after this number of seconds
   */
  @SpeakeasyMetadata({ data: "form, name=timeout" })
  timeout?: number;

  /**
   * The URL to load
   */
  @SpeakeasyMetadata({ data: "form, name=url" })
  url: string;

  /**
   * Override the browsers default user-agent string with this one
   */
  @SpeakeasyMetadata({ data: "form, name=user-agent" })
  userAgent?: string;
}

export class BrowserBotResponse extends SpeakeasyBase {
  /**
   * Your API request has been rejected. Check error code for details
   */
  @SpeakeasyMetadata()
  apiError?: shared.APIError;

  @SpeakeasyMetadata()
  browserBotResponse?: shared.BrowserBotResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
