<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ArchivalSpec
{
	#[\JMS\Serializer\Annotation\SerializedName('archivalThreshold')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $archivalThreshold;
    
	#[\JMS\Serializer\Annotation\SerializedName('archivalTieringSpec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ArchivalTieringSpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ArchivalTieringSpec $archivalTieringSpec = null;
    
    /**
     * A Boolean value that identifies whether the archival location type supports direct archive backups.
     * 
     * 
     * 
     * @var ?bool $isPassthroughSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPassthroughSupported')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPassthroughSupported = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('locationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $locationId;
    
	#[\JMS\Serializer\Annotation\SerializedName('locationName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationName = null;
    
	public function __construct()
	{
		$this->archivalThreshold = 0;
		$this->archivalTieringSpec = null;
		$this->isPassthroughSupported = null;
		$this->locationId = "";
		$this->locationName = null;
	}
}
