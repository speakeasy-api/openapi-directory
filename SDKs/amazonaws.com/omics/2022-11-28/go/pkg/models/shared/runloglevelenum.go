// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RunLogLevelEnum string

const (
	RunLogLevelEnumOff   RunLogLevelEnum = "OFF"
	RunLogLevelEnumFatal RunLogLevelEnum = "FATAL"
	RunLogLevelEnumError RunLogLevelEnum = "ERROR"
	RunLogLevelEnumAll   RunLogLevelEnum = "ALL"
)

func (e RunLogLevelEnum) ToPointer() *RunLogLevelEnum {
	return &e
}

func (e *RunLogLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OFF":
		fallthrough
	case "FATAL":
		fallthrough
	case "ERROR":
		fallthrough
	case "ALL":
		*e = RunLogLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RunLogLevelEnum: %v", v)
	}
}
