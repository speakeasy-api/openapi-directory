<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ProductReviewsRequest
{
    /**
     * Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
     * 
     * 
     * 
     * @var string $acceptLanguage
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=Accept-Language')]
    public string $acceptLanguage;
    
    /**
     * **unique alphanumeric identifier** of the product
     * 
     * @var ?string $code
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=code')]
    public ?string $code = null;
    
    /**
     * **specifier** as to whether or not to show 'unavailable' products:
     * 
     * 
     *   - `true`: return *both* available and unavailable products
     *   - `false`: return *only* available products (default)
     * 
     * 
     * @var ?bool $showUnavailable
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=showUnavailable')]
    public ?bool $showUnavailable = null;
    
    /**
     * **specifier** of the order in which to return reviews
     * 
     * 
     * Sort order options:
     * 
     *   - `"REVIEW_RATING_A"`: Traveler Rating (low→high) Average
     *   - `"REVIEW_RATING_D"`: Traveler Rating (high→low) Average
     *   - `"REVIEW_RATING_SUBMISSION_DATE_D"`: Most recent review
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SortOrderREVIEWEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sortOrder')]
    public ?\OpenAPI\OpenAPI\Models\Shared\SortOrderREVIEWEnum $sortOrder = null;
    
    /**
     * **start and end rows** to return in the format {start}-{end}
     * 
     * - e.g. `'1-10'`, `'11-20'`
     * 
     * **Note**: 
     * - the maximum number of rows per request is 100; therefore, `'100-400'` will return the same as `'100-200'`
     * - if `topX` is not specified, the default is `'1-100'`
     * 
     * 
     * @var ?string $topX
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=topX')]
    public ?string $topX = null;
    
	public function __construct()
	{
		$this->acceptLanguage = "";
		$this->code = null;
		$this->showUnavailable = null;
		$this->sortOrder = null;
		$this->topX = null;
	}
}
