// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// GetTransactionsStatusEnum - Started to get only active transactions
type GetTransactionsStatusEnum string

const (
	GetTransactionsStatusEnumStarted GetTransactionsStatusEnum = "Started"
	GetTransactionsStatusEnumEnded   GetTransactionsStatusEnum = "Ended"
)

func (e GetTransactionsStatusEnum) ToPointer() *GetTransactionsStatusEnum {
	return &e
}

func (e *GetTransactionsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Started":
		fallthrough
	case "Ended":
		*e = GetTransactionsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTransactionsStatusEnum: %v", v)
	}
}

type GetTransactionsRequest struct {
	// Date as ISO String
	CreatedAtDollarGte *time.Time `queryParam:"style=form,explode=true,name=createdAt[$gte]"`
	// Date as ISO String
	CreatedAtDollarLte *time.Time `queryParam:"style=form,explode=true,name=createdAt[$lte]"`
	// Populate chargestation
	IncludeChargestation *bool `queryParam:"style=form,explode=true,name=include_chargestation"`
	// Populate connector
	IncludeConnector *bool `queryParam:"style=form,explode=true,name=include_connector"`
	// Populate driver
	IncludeDriver *bool `queryParam:"style=form,explode=true,name=include_driver"`
	// Populate evse
	IncludeEvse *bool `queryParam:"style=form,explode=true,name=include_evse"`
	// Populate organization
	IncludeOrganization *bool `queryParam:"style=form,explode=true,name=include_organization"`
	// Populate rate
	IncludeRate *bool `queryParam:"style=form,explode=true,name=include_rate"`
	// Populate reservation
	IncludeReservation *bool `queryParam:"style=form,explode=true,name=include_reservation"`
	// Populate token
	IncludeToken *bool `queryParam:"style=form,explode=true,name=include_token"`
	// Enable pagination
	PaginateEnabled *bool `queryParam:"style=form,explode=true,name=paginate_enabled"`
	// Number of results per page
	PaginateLimit *int64 `queryParam:"style=form,explode=true,name=paginate_limit"`
	// The queried page index
	PaginatePage *string `queryParam:"style=form,explode=true,name=paginate_page"`
	// Sort data by this key
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// asc to sort ascending (default is desc - descending)
	SortOrder *shared.SortOrder1Enum `queryParam:"style=form,explode=true,name=sort_order"`
	// Started to get only active transactions
	Status *GetTransactionsStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Date as ISO String
	UpdatedAtDollarGte *time.Time `queryParam:"style=form,explode=true,name=updatedAt[$gte]"`
	// Date as ISO String
	UpdatedAtDollarLte *time.Time `queryParam:"style=form,explode=true,name=updatedAt[$lte]"`
}

// GetTransactions200ApplicationJSON - Returns an array of transaction objects
type GetTransactions200ApplicationJSON struct {
	HasNext     *bool         `json:"hasNext,omitempty"`
	HasPrevious *bool         `json:"hasPrevious,omitempty"`
	Message     *string       `json:"message,omitempty"`
	Ok          *bool         `json:"ok,omitempty"`
	Result      []interface{} `json:"result,omitempty"`
}

type GetTransactionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Returns an array of transaction objects
	GetTransactions200ApplicationJSONObject *GetTransactions200ApplicationJSON
}
