/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostApiV1StatusesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

/**
 * Visibility of the posted status. Enumerable oneOf public, unlisted, private, direct.
 */
export enum PostApiV1StatusesRequestBodyVisibilityEnum {
  Public = "public",
  Unlisted = "unlisted",
  Private = "private",
  Direct = "direct",
}

export class PostApiV1StatusesRequestBody extends SpeakeasyBase {
  /**
   * ID of the status being replied to, if status is a reply
   */
  @SpeakeasyMetadata()
  @Expose({ name: "in_reply_to_id" })
  inReplyToId?: string;

  /**
   * ISO 639 language code for this status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * Array of Attachment ids to be attached as media. If provided, `status` becomes optional, and `poll` cannot be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "media_ids" })
  mediaIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "poll" })
  poll?: Record<string, any>[];

  /**
   * ISO 8601 Datetime at which to schedule a status. Providing this paramter will cause ScheduledStatus to be returned instead of Status. Must be at least 5 minutes in the future.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduled_at" })
  scheduledAt?: string;

  /**
   * Mark status and attached media as sensitive?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sensitive" })
  sensitive?: boolean;

  /**
   * Text to be shown as a warning or subject before the actual content. Statuses are generally collapsed behind this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spoiler_text" })
  spoilerText?: string;

  /**
   * Text content of the status. If `media_ids` is provided, this becomes optional. Attaching a `poll` is optional while `status` is provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Visibility of the posted status. Enumerable oneOf public, unlisted, private, direct.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: PostApiV1StatusesRequestBodyVisibilityEnum;
}

export class PostApiV1StatusesRequest extends SpeakeasyBase {
  /**
   * Prevent duplicate submissions of the same status. Idempotency keys are stored for up to 1 hour, and can be any arbitrary string. Consider using a hash or UUID generated client-side.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Idempotency-Key",
  })
  idempotencyKey?: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/json",
    elemType: PostApiV1StatusesRequestBody,
  })
  requestBody?: PostApiV1StatusesRequestBody[];
}

export class PostApiV1StatusesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing Authorization header
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Status will be posted with chosen parameters. If scheduled_at is provided, then a ScheduledStatus will be returned instead.
   */
  @SpeakeasyMetadata()
  postApiV1Statuses200ApplicationJSONOneOf?: any;
}
