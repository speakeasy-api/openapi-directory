"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventpublisher_enum as shared_eventpublisher_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Channel:
    r"""Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel."""
    
    event_publishers: list[shared_eventpublisher_enum.EventPublisherEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventPublishers') }})  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    