/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetAuditPrimaryCategoryQueryParams {
    /**
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=api_key")
    public String apiKey;
    public GetAuditPrimaryCategoryQueryParams withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * For paginating through results, starting at page 1
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Integer page;
    public GetAuditPrimaryCategoryQueryParams withPage(Integer page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of results returned per page. Defaults to 20.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Integer perPage;
    public GetAuditPrimaryCategoryQueryParams withPerPage(Integer perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Audit category ID (table PK)
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_category_id")
    public String[] primaryCategoryId;
    public GetAuditPrimaryCategoryQueryParams withPrimaryCategoryId(String[] primaryCategoryId) {
        this.primaryCategoryId = primaryCategoryId;
        return this;
    }
    
    /**
     * Primary Audit Category
     *     - No Findings or Issues/Not a Committee
     *     - Net Outstanding Campaign/Convention Expenditures/Obligations
     *     - Payments/Disgorgements
     *     - Allocation Issues
     *     - Prohibited Contributions
     *     - Disclosure
     *     - Recordkeeping
     *     - Repayment to US Treasury
     *     - Other
     *     - Misstatement of Financial Activity
     *     - Excessive Contributions
     *     - Failure to File Reports/Schedules/Notices
     *     - Loans
     *     - Referred Findings Not Listed
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_category_name")
    public String[] primaryCategoryName;
    public GetAuditPrimaryCategoryQueryParams withPrimaryCategoryName(String[] primaryCategoryName) {
        this.primaryCategoryName = primaryCategoryName;
        return this;
    }
    
    /**
     * Provide a field to sort by. Use `-` for descending order.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;
    public GetAuditPrimaryCategoryQueryParams withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Hide null values on sorted column(s).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_hide_null")
    public Boolean sortHideNull;
    public GetAuditPrimaryCategoryQueryParams withSortHideNull(Boolean sortHideNull) {
        this.sortHideNull = sortHideNull;
        return this;
    }
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_null_only")
    public Boolean sortNullOnly;
    public GetAuditPrimaryCategoryQueryParams withSortNullOnly(Boolean sortNullOnly) {
        this.sortNullOnly = sortNullOnly;
        return this;
    }
    
    /**
     * Toggle that sorts null values last
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_nulls_last")
    public Boolean sortNullsLast;
    public GetAuditPrimaryCategoryQueryParams withSortNullsLast(Boolean sortNullsLast) {
        this.sortNullsLast = sortNullsLast;
        return this;
    }
    
}
