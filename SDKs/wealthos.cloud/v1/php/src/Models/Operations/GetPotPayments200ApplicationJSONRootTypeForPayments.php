<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetPotPayments200ApplicationJSONRootTypeForPayments
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $amount;
    
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $currency;
    
    /**
     * mandatory only if purpose:"invest" and pot does not have a portfolio template attached (e.g. An execution-only or direct-to-consumer wealth manager)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsInvestmentInstructions> $investmentInstructions
     */
	#[\JMS\Serializer\Annotation\SerializedName('investment_instructions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsInvestmentInstructions>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $investmentInstructions = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('payment_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsPaymentTypeEnum>')]
    public GetPotPayments200ApplicationJSONRootTypeForPaymentsPaymentTypeEnum $paymentType;
    
	#[\JMS\Serializer\Annotation\SerializedName('purpose')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsPurposeEnum>')]
    public GetPotPayments200ApplicationJSONRootTypeForPaymentsPurposeEnum $purpose;
    
	#[\JMS\Serializer\Annotation\SerializedName('service_provider')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsServiceProviderEnum>')]
    public GetPotPayments200ApplicationJSONRootTypeForPaymentsServiceProviderEnum $serviceProvider;
    
    /**
     * Status of the payment
     * 
     * 
     * - `pending_confirmation`: Payment is pending approvals and confirmation
     * - `processing`: Payment is confirmed, and being processed. Depending on the payment method, this may be instantaneous (e.g. card) or take multiple days (e.g. cheque) 
     * - `succeeded`: Payment is successful. Cash is cleaned in account. 
     * - `cancelled`: Payment cancelled, and any held funds have been returned. 
     * - `failed`: Payment failed due to insufficient funds, invalid card details, network issues etc. 
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsStatusEnum>')]
    public GetPotPayments200ApplicationJSONRootTypeForPaymentsStatusEnum $status;
    
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transactionId;
    
	public function __construct()
	{
		$this->amount = "";
		$this->currency = "";
		$this->investmentInstructions = null;
		$this->paymentType = \OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsPaymentTypeEnum::CARD;
		$this->purpose = \OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsPurposeEnum::CASH;
		$this->serviceProvider = \OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsServiceProviderEnum::STRIPE;
		$this->status = \OpenAPI\OpenAPI\Models\Operations\GetPotPayments200ApplicationJSONRootTypeForPaymentsStatusEnum::PENDING_CONFIRMATION;
		$this->transactionId = "";
	}
}
