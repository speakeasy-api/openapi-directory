<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateCompanyWebhookRequest
{
    /**
     * Indicates if expired SSL certificates are accepted. Default value: **false**.
     * 
     * @var ?bool $acceptsExpiredCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptsExpiredCertificate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acceptsExpiredCertificate = null;
    
    /**
     * Indicates if self-signed SSL certificates are accepted. Default value: **false**.
     * 
     * @var ?bool $acceptsSelfSignedCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptsSelfSignedCertificate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acceptsSelfSignedCertificate = null;
    
    /**
     * Indicates if untrusted SSL certificates are accepted. Default value: **false**.
     * 
     * @var ?bool $acceptsUntrustedRootCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptsUntrustedRootCertificate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acceptsUntrustedRootCertificate = null;
    
    /**
     * Indicates if the webhook configuration is active. The field must be **true** for us to send webhooks about events related an account.
     * 
     * @var bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $active;
    
	#[\JMS\Serializer\Annotation\SerializedName('additionalSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AdditionalSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AdditionalSettings $additionalSettings = null;
    
    /**
     * Format or protocol for receiving webhooks. Possible values:
     * 
     * * **soap**
     * * **http**
     * * **json** 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestCommunicationFormatEnum $communicationFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('communicationFormat')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestCommunicationFormatEnum>')]
    public CreateCompanyWebhookRequestCommunicationFormatEnum $communicationFormat;
    
    /**
     * Your description for this webhook configuration.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Shows how merchant accounts are filtered when configuring the webhook. Possible values:
     * 
     * * **includeAccounts**: The webhook is configured for the merchant accounts listed in `filterMerchantAccounts`.
     * * **excludeAccounts**: The webhook is not configured for the merchant accounts listed in `filterMerchantAccounts`.
     * * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestFilterMerchantAccountTypeEnum $filterMerchantAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterMerchantAccountType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestFilterMerchantAccountTypeEnum>')]
    public CreateCompanyWebhookRequestFilterMerchantAccountTypeEnum $filterMerchantAccountType;
    
    /**
     * A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.
     * 
     * 
     * Required if `filterMerchantAccountType` is either:
     * * **includeAccounts**
     * * **excludeAccounts**
     * 
     * Not needed for `filterMerchantAccountType`: **allAccounts**.
     * 
     * @var array<string> $filterMerchantAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterMerchantAccounts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $filterMerchantAccounts;
    
    /**
     * Network type for Terminal API notification webhooks. Possible values:
     * 
     * * **public**
     * * **local**
     * 
     * Default Value: **public**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestNetworkTypeEnum $networkType
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestNetworkTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateCompanyWebhookRequestNetworkTypeEnum $networkType = null;
    
    /**
     * Password to access the webhook URL.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * Indicates if the SOAP action header needs to be populated. Default value: **false**.
     * 
     * 
     * Only applies if `communicationFormat`: **soap**.
     * 
     * @var ?bool $populateSoapActionHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('populateSoapActionHeader')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $populateSoapActionHeader = null;
    
    /**
     * SSL version to access the public webhook URL specified in the `url` field. Possible values:
     * 
     * * **TLSv1.3**
     * * **TLSv1.2**
     * * **HTTP** - Only allowed on Test environment.
     * 
     * If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestSslVersionEnum $sslVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('sslVersion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestSslVersionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateCompanyWebhookRequestSslVersionEnum $sslVersion = null;
    
    /**
     * The type of webhook that is being created. Possible values are:
     * 
     * 
     * - **standard**
     * - **account-settings-notification**
     * - **banktransfer-notification**
     * - **boletobancario-notification**
     * - **directdebit-notification**
     * - **pending-notification**
     * - **ideal-notification**
     * - **ideal-pending-notification**
     * - **report-notification**
     * - **rreq-notification**
     * 
     * Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Username to access the webhook URL.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->acceptsExpiredCertificate = null;
		$this->acceptsSelfSignedCertificate = null;
		$this->acceptsUntrustedRootCertificate = null;
		$this->active = false;
		$this->additionalSettings = null;
		$this->communicationFormat = \OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestCommunicationFormatEnum::HTTP;
		$this->description = null;
		$this->filterMerchantAccountType = \OpenAPI\OpenAPI\Models\Shared\CreateCompanyWebhookRequestFilterMerchantAccountTypeEnum::ALL_ACCOUNTS;
		$this->filterMerchantAccounts = [];
		$this->networkType = null;
		$this->password = null;
		$this->populateSoapActionHeader = null;
		$this->sslVersion = null;
		$this->type = "";
		$this->url = "";
		$this->username = null;
	}
}
