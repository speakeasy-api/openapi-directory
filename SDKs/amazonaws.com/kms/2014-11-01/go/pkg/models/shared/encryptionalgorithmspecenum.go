// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EncryptionAlgorithmSpecEnum string

const (
	EncryptionAlgorithmSpecEnumSymmetricDefault EncryptionAlgorithmSpecEnum = "SYMMETRIC_DEFAULT"
	EncryptionAlgorithmSpecEnumRsaesOaepSha1    EncryptionAlgorithmSpecEnum = "RSAES_OAEP_SHA_1"
	EncryptionAlgorithmSpecEnumRsaesOaepSha256  EncryptionAlgorithmSpecEnum = "RSAES_OAEP_SHA_256"
	EncryptionAlgorithmSpecEnumSm2Pke           EncryptionAlgorithmSpecEnum = "SM2PKE"
)

func (e *EncryptionAlgorithmSpecEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SYMMETRIC_DEFAULT":
		fallthrough
	case "RSAES_OAEP_SHA_1":
		fallthrough
	case "RSAES_OAEP_SHA_256":
		fallthrough
	case "SM2PKE":
		*e = EncryptionAlgorithmSpecEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EncryptionAlgorithmSpecEnum: %s", s)
	}
}
