/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SettingMetadata } from "./settingmetadata";
import { Expose, Type } from "class-transformer";

export enum OrganizationJurisdictionEnum {
  National = "National",
  State = "State",
  County = "County",
}

/**
 * An organization connected to data hub
 */
export class OrganizationInput extends SpeakeasyBase {
  /**
   * the county name (must match FIPS name)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countyName" })
  countyName?: string;

  /**
   * the displayable description of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jurisdiction" })
  jurisdiction: OrganizationJurisdictionEnum;

  /**
   * the unique id for the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * the two letter code for the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateCode" })
  stateCode?: string;
}

/**
 * An organization connected to data hub
 */
export class Organization extends SpeakeasyBase {
  /**
   * the county name (must match FIPS name)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countyName" })
  countyName?: string;

  /**
   * the displayable description of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jurisdiction" })
  jurisdiction: OrganizationJurisdictionEnum;

  /**
   * The metadata associated with an setting
   */
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => SettingMetadata)
  meta?: SettingMetadata;

  /**
   * the unique id for the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * the two letter code for the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateCode" })
  stateCode?: string;
}
