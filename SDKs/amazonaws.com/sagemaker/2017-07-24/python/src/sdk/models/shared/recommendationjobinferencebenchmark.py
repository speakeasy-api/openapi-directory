"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import endpointoutputconfiguration as shared_endpointoutputconfiguration
from ..shared import inferencemetrics as shared_inferencemetrics
from ..shared import modelconfiguration as shared_modelconfiguration
from ..shared import recommendationmetrics as shared_recommendationmetrics
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendationJobInferenceBenchmark:
    r"""The details for a specific benchmark from an Inference Recommender job."""
    
    model_configuration: shared_modelconfiguration.ModelConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelConfiguration') }})
    r"""Defines the model configuration. Includes the specification name and environment parameters."""  
    endpoint_configuration: Optional[shared_endpointoutputconfiguration.EndpointOutputConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointConfiguration'), 'exclude': lambda f: f is None }})
    r"""The endpoint configuration made by Inference Recommender during a recommendation job."""  
    endpoint_metrics: Optional[shared_inferencemetrics.InferenceMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointMetrics'), 'exclude': lambda f: f is None }})
    r"""The metrics for an existing endpoint compared in an Inference Recommender job."""  
    failure_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FailureReason'), 'exclude': lambda f: f is None }})  
    metrics: Optional[shared_recommendationmetrics.RecommendationMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Metrics'), 'exclude': lambda f: f is None }})
    r"""The metrics of recommendations."""  
    