<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SaveSuggestionRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('AvailableQuantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $availableQuantity;
    
    /**
     * Name of the brand to which this SKU belongs. It must match the brand created in the marketplace.
     * 
     * @var string $brandName
     */
	#[\JMS\Serializer\Annotation\SerializedName('BrandName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $brandName;
    
    /**
     * Full path to the SKU's category. It should be written as {department}/{category}. For example: if the department is **Appliances** and the category is **Oven**, the full path should be 'Appliances/Oven'.
     * 
     * @var string $categoryFullPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('CategoryFullPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $categoryFullPath;
    
    /**
     * SKU reference code. Mandatory if the RefId is not informed.
     * 
     * @var string $ean
     */
	#[\JMS\Serializer\Annotation\SerializedName('EAN')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $ean;
    
    /**
     * Height of the SKU.
     * 
     * @var int $height
     */
	#[\JMS\Serializer\Annotation\SerializedName('Height')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $height;
    
    /**
     * Array containing the URLs and names the SKU images.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Image> $images
     */
	#[\JMS\Serializer\Annotation\SerializedName('Images')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Image>')]
    public array $images;
    
    /**
     * Length of the SKU.
     * 
     * @var int $length
     */
	#[\JMS\Serializer\Annotation\SerializedName('Length')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $length;
    
    /**
     * Measurement unit that should be used for this SKU. If this information doesn't apply, you should use the default value `un`.
     * 
     * @var ?string $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('MeasurementUnit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measurementUnit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Pricing')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SaveSuggestionRequestPricing')]
    public SaveSuggestionRequestPricing $pricing;
    
    /**
     * Product Description containing the main information about the product (not the SKU).
     * 
     * @var string $productDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productDescription;
    
    /**
     * Product ID in seller's account.
     * 
     * @var string $productId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productId;
    
    /**
     * Name of the suggested product. This field has a limit of 150 characters.
     * 
     * @var string $productName
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productName;
    
    /**
     * Array containing the names and values of the product specifications.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ProductSpecification> $productSpecifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductSpecifications')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ProductSpecification>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productSpecifications = null;
    
    /**
     * SKU reference code. Mandotory if the EAN is not informed.
     * 
     * @var string $refId
     */
	#[\JMS\Serializer\Annotation\SerializedName('RefId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $refId;
    
    /**
     * ID of the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built.
     * 
     * @var string $sellerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('SellerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sellerId;
    
    /**
     * ID of the SKU registered in the seller.
     * 
     * @var ?int $sellerStockKeepingUnitId
     */
	#[\JMS\Serializer\Annotation\SerializedName('SellerStockKeepingUnitId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sellerStockKeepingUnitId = null;
    
    /**
     * Name of the suggested SKU.
     * 
     * @var string $skuName
     */
	#[\JMS\Serializer\Annotation\SerializedName('SkuName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $skuName;
    
    /**
     * Array containing the names and values of the SKU specifications.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SkuSpecification> $skuSpecifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('SkuSpecifications')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SkuSpecification>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $skuSpecifications = null;
    
    /**
     * Unit multiplier for this SKU. If this information doesn't apply, you should use the default value `1`.
     * 
     * @var ?int $unitMultiplier
     */
	#[\JMS\Serializer\Annotation\SerializedName('UnitMultiplier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $unitMultiplier = null;
    
    /**
     * Weight of the SKU in grams.
     * 
     * @var int $weight
     */
	#[\JMS\Serializer\Annotation\SerializedName('Weight')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $weight;
    
    /**
     * Width of the SKU.
     * 
     * @var int $width
     */
	#[\JMS\Serializer\Annotation\SerializedName('Width')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $width;
    
	public function __construct()
	{
		$this->availableQuantity = 0;
		$this->brandName = "";
		$this->categoryFullPath = "";
		$this->ean = "";
		$this->height = 0;
		$this->images = [];
		$this->length = 0;
		$this->measurementUnit = null;
		$this->pricing = new \OpenAPI\OpenAPI\Models\Shared\SaveSuggestionRequestPricing();
		$this->productDescription = "";
		$this->productId = "";
		$this->productName = "";
		$this->productSpecifications = null;
		$this->refId = "";
		$this->sellerId = "";
		$this->sellerStockKeepingUnitId = null;
		$this->skuName = "";
		$this->skuSpecifications = null;
		$this->unitMultiplier = null;
		$this->weight = 0;
		$this->width = 0;
	}
}
