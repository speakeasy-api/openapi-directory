/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of the peering route.
 */
export enum ExchangedPeeringRouteTypeEnum {
  DynamicPeeringRoute = "DYNAMIC_PEERING_ROUTE",
  StaticPeeringRoute = "STATIC_PEERING_ROUTE",
  SubnetPeeringRoute = "SUBNET_PEERING_ROUTE",
}

export class ExchangedPeeringRoute extends SpeakeasyBase {
  /**
   * The destination range of the route.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destRange" })
  destRange?: string;

  /**
   * True if the peering route has been imported from a peer. The actual import happens if the field networkPeering.importCustomRoutes is true for this network, and networkPeering.exportCustomRoutes is true for the peer network, and the import does not result in a route conflict.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imported" })
  imported?: boolean;

  /**
   * The region of peering route next hop, only applies to dynamic routes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextHopRegion" })
  nextHopRegion?: string;

  /**
   * The priority of the peering route.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: number;

  /**
   * The type of the peering route.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ExchangedPeeringRouteTypeEnum;
}
