/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetClientClientIdRequest extends SpeakeasyBase {
  /**
   * A client ID or email.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=client_id",
  })
  clientId: string;
}

/**
 * OK
 */
export class GetClientClientId200ApplicationJSON extends SpeakeasyBase {
  /**
   * URL of the Client's JSON representation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@id" })
  atId?: string;

  /**
   * OAuth 2.0 client identifier string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId: string;

  /**
   * Human-readable string name of the client to be presented to the end-user during authorization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_name" })
  clientName?: string;

  /**
   * OAuth 2.0 client secret string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret?: string;

  /**
   * URL string of a web page providing information about the client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_uri" })
  clientUri?: string;

  /**
   * Array of strings representing ways to contact people responsible for this client, typically email addresses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contacts" })
  contacts?: any[];

  /**
   * Array of OAuth 2.0 grant type strings that the client can use at the token endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grant_types" })
  grantTypes?: any[];

  /**
   * Client's JSON Web Key Set [RFC7517] document value, which contains the client's public keys.  The value of this field MUST be a JSON object containing a valid JWK Set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jwks" })
  jwks?: any[];

  /**
   * URL string referencing the client's JSON Web Key (JWK) Set [RFC7517] document, which contains the client's public keys.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jwks_uri" })
  jwksUri?: string;

  /**
   * An email address used to generate a gravatar.com logo_uri.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logo_email" })
  logoEmail?: string;

  /**
   * URL string that references a logo for the client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logo_uri" })
  logoUri?: string;

  /**
   * URL string that points to a human-readable privacy policy document that describes how the deployment organization collects, uses, retains, and discloses personal data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policy_uri" })
  policyUri?: string;

  /**
   * Array of redirection URI strings for use in redirect-based flows such as the authorization code and implicit flows.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redirect_uris" })
  redirectUris?: any[];

  /**
   * Array of the OAuth 2.0 response type strings that the client can use at the authorization endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response_types" })
  responseTypes?: any[];

  /**
   * String containing a space-separated list of scope values (as described in Section 3.3 of OAuth 2.0 [RFC6749]) that the client can use when requesting access tokens.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * A unique identifier string (e.g., a Universally Unique Identifier (UUID)) assigned by the client developer or software publisher used by registration endpoints to identify the client software to be dynamically registered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "software_id" })
  softwareId?: string;

  /**
   * A version identifier string for the client software identified by software_id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "software_version" })
  softwareVersion?: string;

  /**
   * String indicator of the requested authentication method for the token endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token_endpoint_auth_method" })
  tokenEndpointAuthMethod?: string;

  /**
   * URL string that points to a human-readable terms of service document for the client that describes a contractual relationship between the end-user and the client that the end-user accepts when authorizing the client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tos_uri" })
  tosUri?: string;
}

export class GetClientClientIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getClientClientId200ApplicationJSONObject?: GetClientClientId200ApplicationJSON;
}
