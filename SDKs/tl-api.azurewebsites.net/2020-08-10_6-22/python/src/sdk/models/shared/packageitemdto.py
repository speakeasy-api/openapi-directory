"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PackageItemDTO:
    r"""The PackageItemDTO Class.
    Contains relevant fields of PackageItem DTO by masking actual Package entity's fields in application.
    """
    
    article_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('articleId') }})
    r"""Refer to ArticleId in Article table in DB."""  
    article_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('articleName'), 'exclude': lambda f: f is None }})
    r"""Name of the article(Addon) in a particular package.
                 read only
    """  
    article_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('articleNumber'), 'exclude': lambda f: f is None }})
    r"""Number assigned the article(Addon) in a particular package.
                 read only
    """  
    article_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('articlePrice'), 'exclude': lambda f: f is None }})
    r"""Price of the article determined from that package.
    Price of a same article can be varied from package to package.
    """  
    end_order: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endOrder'), 'exclude': lambda f: f is None }})
    r"""Number of the installment this article is available to."""  
    is_include_service_in_charge: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isIncludeServiceInCharge'), 'exclude': lambda f: f is None }})
    r"""Is Included in service charge"""  
    measure_unit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('measureUnit'), 'exclude': lambda f: f is None }})  
    number_of_items: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfItems'), 'exclude': lambda f: f is None }})
    r"""How many article(Addon) is available for that package from that type."""  
    start_order: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startOrder'), 'exclude': lambda f: f is None }})
    r"""Number of the installment this article is available from."""  
    