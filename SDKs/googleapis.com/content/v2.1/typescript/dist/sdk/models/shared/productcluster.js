"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProductCluster = exports.ProductClusterInventoryStatusEnum = exports.ProductClusterBrandInventoryStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Tells if there is at least one product of the brand currently `IN_STOCK` in your product feed across multiple countries, all products are `OUT_OF_STOCK` in your product feed, or `NOT_IN_INVENTORY`. The field doesn't take the Best Sellers report country filter into account.
 */
var ProductClusterBrandInventoryStatusEnum;
(function (ProductClusterBrandInventoryStatusEnum) {
    ProductClusterBrandInventoryStatusEnum["InventoryStatusUnspecified"] = "INVENTORY_STATUS_UNSPECIFIED";
    ProductClusterBrandInventoryStatusEnum["InStock"] = "IN_STOCK";
    ProductClusterBrandInventoryStatusEnum["OutOfStock"] = "OUT_OF_STOCK";
    ProductClusterBrandInventoryStatusEnum["NotInInventory"] = "NOT_IN_INVENTORY";
})(ProductClusterBrandInventoryStatusEnum = exports.ProductClusterBrandInventoryStatusEnum || (exports.ProductClusterBrandInventoryStatusEnum = {}));
/**
 * Tells whether the product cluster is `IN_STOCK` in your product feed across multiple countries, `OUT_OF_STOCK` in your product feed, or `NOT_IN_INVENTORY` at all. The field doesn't take the Best Sellers report country filter into account.
 */
var ProductClusterInventoryStatusEnum;
(function (ProductClusterInventoryStatusEnum) {
    ProductClusterInventoryStatusEnum["InventoryStatusUnspecified"] = "INVENTORY_STATUS_UNSPECIFIED";
    ProductClusterInventoryStatusEnum["InStock"] = "IN_STOCK";
    ProductClusterInventoryStatusEnum["OutOfStock"] = "OUT_OF_STOCK";
    ProductClusterInventoryStatusEnum["NotInInventory"] = "NOT_IN_INVENTORY";
})(ProductClusterInventoryStatusEnum = exports.ProductClusterInventoryStatusEnum || (exports.ProductClusterInventoryStatusEnum = {}));
/**
 * Product cluster fields. A product cluster is a grouping for different offers that represent the same product. Values are only set for fields requested explicitly in the request's search query.
 */
var ProductCluster = /** @class */ (function (_super) {
    __extends(ProductCluster, _super);
    function ProductCluster() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "brand" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "brand", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "brandInventoryStatus" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "brandInventoryStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoryL1" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "categoryL1", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoryL2" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "categoryL2", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoryL3" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "categoryL3", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoryL4" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "categoryL4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoryL5" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "categoryL5", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "inventoryStatus" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "inventoryStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], ProductCluster.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "variantGtins" }),
        __metadata("design:type", Array)
    ], ProductCluster.prototype, "variantGtins", void 0);
    return ProductCluster;
}(utils_1.SpeakeasyBase));
exports.ProductCluster = ProductCluster;
