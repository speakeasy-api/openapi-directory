/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClientInput - A client represents an agency, a brand, or an advertiser customer of the buyer. Based on the client's role, its client users will have varying levels of restricted access to the Marketplace and certain other sections of the Authorized Buyers UI.
 */
public class ClientInput {
    /**
     * Required. Display name shown to publishers. Must be unique for clients without partnerClientId specified. Maximum length of 255 characters is allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public ClientInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Arbitrary unique identifier provided by the buyer. This field can be used to associate a client with an identifier in the namespace of the buyer, lookup clients by that identifier and verify whether an Authorized Buyers account of the client already exists. If present, must be unique across all the clients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partnerClientId")
    public String partnerClientId;
    public ClientInput withPartnerClientId(String partnerClientId) {
        this.partnerClientId = partnerClientId;
        return this;
    }
    
    /**
     * Required. The role assigned to the client. Each role implies a set of permissions granted to the client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public ClientRoleEnum role;
    public ClientInput withRole(ClientRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * Whether the client will be visible to sellers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerVisible")
    public Boolean sellerVisible;
    public ClientInput withSellerVisible(Boolean sellerVisible) {
        this.sellerVisible = sellerVisible;
        return this;
    }
    
}
