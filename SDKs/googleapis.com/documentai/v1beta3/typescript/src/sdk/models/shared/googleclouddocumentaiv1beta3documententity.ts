/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue } from "./googleclouddocumentaiv1beta3documententitynormalizedvalue";
import { GoogleCloudDocumentaiV1beta3DocumentPageAnchor } from "./googleclouddocumentaiv1beta3documentpageanchor";
import { GoogleCloudDocumentaiV1beta3DocumentProvenance } from "./googleclouddocumentaiv1beta3documentprovenance";
import { GoogleCloudDocumentaiV1beta3DocumentTextAnchor } from "./googleclouddocumentaiv1beta3documenttextanchor";
import { Expose, Type } from "class-transformer";

/**
 * An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
 */
export class GoogleCloudDocumentaiV1beta3DocumentEntity extends SpeakeasyBase {
  /**
   * Optional. Confidence of detected Schema entity. Range `[0, 1]`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidence" })
  confidence?: number;

  /**
   * Optional. Canonical id. This will be a unique value in the entity list for this document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Optional. Deprecated. Use `id` field instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mentionId" })
  mentionId?: string;

  /**
   * Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mentionText" })
  mentionText?: string;

  /**
   * Parsed and normalized entity value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "normalizedValue" })
  @Type(() => GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue)
  normalizedValue?: GoogleCloudDocumentaiV1beta3DocumentEntityNormalizedValue;

  /**
   * Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageAnchor" })
  @Type(() => GoogleCloudDocumentaiV1beta3DocumentPageAnchor)
  pageAnchor?: GoogleCloudDocumentaiV1beta3DocumentPageAnchor;

  /**
   * Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDocumentaiV1beta3DocumentEntity })
  @Expose({ name: "properties" })
  @Type(() => GoogleCloudDocumentaiV1beta3DocumentEntity)
  properties?: GoogleCloudDocumentaiV1beta3DocumentEntity[];

  /**
   * Structure to identify provenance relationships between annotations in different revisions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provenance" })
  @Type(() => GoogleCloudDocumentaiV1beta3DocumentProvenance)
  provenance?: GoogleCloudDocumentaiV1beta3DocumentProvenance;

  /**
   * Optional. Whether the entity will be redacted for de-identification purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redacted" })
  redacted?: boolean;

  /**
   * Text reference indexing into the Document.text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textAnchor" })
  @Type(() => GoogleCloudDocumentaiV1beta3DocumentTextAnchor)
  textAnchor?: GoogleCloudDocumentaiV1beta3DocumentTextAnchor;

  /**
   * Required. Entity type from a schema e.g. `Address`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
