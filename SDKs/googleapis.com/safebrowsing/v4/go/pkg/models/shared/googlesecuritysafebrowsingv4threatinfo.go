// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum string

const (
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumPlatformTypeUnspecified GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "PLATFORM_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumWindows                 GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "WINDOWS"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumLinux                   GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "LINUX"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumAndroid                 GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "ANDROID"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumOsx                     GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "OSX"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumIos                     GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "IOS"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumAnyPlatform             GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "ANY_PLATFORM"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumAllPlatforms            GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "ALL_PLATFORMS"
	GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnumChrome                  GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum = "CHROME"
)

func (e GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum) ToPointer() *GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum {
	return &e
}

func (e *GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PLATFORM_TYPE_UNSPECIFIED":
		fallthrough
	case "WINDOWS":
		fallthrough
	case "LINUX":
		fallthrough
	case "ANDROID":
		fallthrough
	case "OSX":
		fallthrough
	case "IOS":
		fallthrough
	case "ANY_PLATFORM":
		fallthrough
	case "ALL_PLATFORMS":
		fallthrough
	case "CHROME":
		*e = GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum: %v", v)
	}
}

type GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum string

const (
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumThreatEntryTypeUnspecified GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "THREAT_ENTRY_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumURL                        GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "URL"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumExecutable                 GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "EXECUTABLE"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumIPRange                    GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "IP_RANGE"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumChromeExtension            GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "CHROME_EXTENSION"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumFilename                   GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "FILENAME"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnumCert                       GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum = "CERT"
)

func (e GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum) ToPointer() *GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum {
	return &e
}

func (e *GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THREAT_ENTRY_TYPE_UNSPECIFIED":
		fallthrough
	case "URL":
		fallthrough
	case "EXECUTABLE":
		fallthrough
	case "IP_RANGE":
		fallthrough
	case "CHROME_EXTENSION":
		fallthrough
	case "FILENAME":
		fallthrough
	case "CERT":
		*e = GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum: %v", v)
	}
}

type GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum string

const (
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumThreatTypeUnspecified         GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "THREAT_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumMalware                       GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "MALWARE"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumSocialEngineering             GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "SOCIAL_ENGINEERING"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumUnwantedSoftware              GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "UNWANTED_SOFTWARE"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumPotentiallyHarmfulApplication GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "POTENTIALLY_HARMFUL_APPLICATION"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumSocialEngineeringInternal     GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "SOCIAL_ENGINEERING_INTERNAL"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumAPIAbuse                      GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "API_ABUSE"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumMaliciousBinary               GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "MALICIOUS_BINARY"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumCsdWhitelist                  GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "CSD_WHITELIST"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumCsdDownloadWhitelist          GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "CSD_DOWNLOAD_WHITELIST"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumClientIncident                GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "CLIENT_INCIDENT"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumClientIncidentWhitelist       GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "CLIENT_INCIDENT_WHITELIST"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumApkMalwareOffline             GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "APK_MALWARE_OFFLINE"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumSubresourceFilter             GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "SUBRESOURCE_FILTER"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumSuspicious                    GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "SUSPICIOUS"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumTrickToBill                   GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "TRICK_TO_BILL"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumHighConfidenceAllowlist       GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "HIGH_CONFIDENCE_ALLOWLIST"
	GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnumAccuracyTips                  GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum = "ACCURACY_TIPS"
)

func (e GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum) ToPointer() *GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum {
	return &e
}

func (e *GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "THREAT_TYPE_UNSPECIFIED":
		fallthrough
	case "MALWARE":
		fallthrough
	case "SOCIAL_ENGINEERING":
		fallthrough
	case "UNWANTED_SOFTWARE":
		fallthrough
	case "POTENTIALLY_HARMFUL_APPLICATION":
		fallthrough
	case "SOCIAL_ENGINEERING_INTERNAL":
		fallthrough
	case "API_ABUSE":
		fallthrough
	case "MALICIOUS_BINARY":
		fallthrough
	case "CSD_WHITELIST":
		fallthrough
	case "CSD_DOWNLOAD_WHITELIST":
		fallthrough
	case "CLIENT_INCIDENT":
		fallthrough
	case "CLIENT_INCIDENT_WHITELIST":
		fallthrough
	case "APK_MALWARE_OFFLINE":
		fallthrough
	case "SUBRESOURCE_FILTER":
		fallthrough
	case "SUSPICIOUS":
		fallthrough
	case "TRICK_TO_BILL":
		fallthrough
	case "HIGH_CONFIDENCE_ALLOWLIST":
		fallthrough
	case "ACCURACY_TIPS":
		*e = GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum: %v", v)
	}
}

// GoogleSecuritySafebrowsingV4ThreatInfo - The information regarding one or more threats that a client submits when checking for matches in threat lists.
type GoogleSecuritySafebrowsingV4ThreatInfo struct {
	// The platform types to be checked.
	PlatformTypes []GoogleSecuritySafebrowsingV4ThreatInfoPlatformTypesEnum `json:"platformTypes,omitempty"`
	// The threat entries to be checked.
	ThreatEntries []GoogleSecuritySafebrowsingV4ThreatEntry `json:"threatEntries,omitempty"`
	// The entry types to be checked.
	ThreatEntryTypes []GoogleSecuritySafebrowsingV4ThreatInfoThreatEntryTypesEnum `json:"threatEntryTypes,omitempty"`
	// The threat types to be checked.
	ThreatTypes []GoogleSecuritySafebrowsingV4ThreatInfoThreatTypesEnum `json:"threatTypes,omitempty"`
}
