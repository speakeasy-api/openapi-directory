// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateFacetRequestBodyObjectTypeEnum - The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
type UpdateFacetRequestBodyObjectTypeEnum string

const (
	UpdateFacetRequestBodyObjectTypeEnumNode     UpdateFacetRequestBodyObjectTypeEnum = "NODE"
	UpdateFacetRequestBodyObjectTypeEnumLeafNode UpdateFacetRequestBodyObjectTypeEnum = "LEAF_NODE"
	UpdateFacetRequestBodyObjectTypeEnumPolicy   UpdateFacetRequestBodyObjectTypeEnum = "POLICY"
	UpdateFacetRequestBodyObjectTypeEnumIndex    UpdateFacetRequestBodyObjectTypeEnum = "INDEX"
)

func (e *UpdateFacetRequestBodyObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NODE":
		fallthrough
	case "LEAF_NODE":
		fallthrough
	case "POLICY":
		fallthrough
	case "INDEX":
		*e = UpdateFacetRequestBodyObjectTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFacetRequestBodyObjectTypeEnum: %s", s)
	}
}

type UpdateFacetRequestBody struct {
	// List of attributes that need to be updated in a given schema <a>Facet</a>. Each attribute is followed by <code>AttributeAction</code>, which specifies the type of update operation to perform.
	AttributeUpdates []shared.FacetAttributeUpdate `json:"AttributeUpdates,omitempty"`
	// The name of the facet.
	Name string `json:"Name"`
	// The object type that is associated with the facet. See <a>CreateFacetRequest$ObjectType</a> for more details.
	ObjectType *UpdateFacetRequestBodyObjectTypeEnum `json:"ObjectType,omitempty"`
}

type UpdateFacetRequest struct {
	RequestBody       UpdateFacetRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The Amazon Resource Name (ARN) that is associated with the <a>Facet</a>. For more information, see <a>arns</a>.
	XAmzDataPartition string `header:"style=simple,explode=false,name=x-amz-data-partition"`
}

type UpdateFacetResponse struct {
	// AccessDeniedException
	AccessDeniedException *shared.AccessDeniedException
	ContentType           string
	// FacetNotFoundException
	FacetNotFoundException *shared.FacetNotFoundException
	// InternalServiceException
	InternalServiceException *shared.InternalServiceException
	// InvalidArnException
	InvalidArnException *shared.InvalidArnException
	// InvalidFacetUpdateException
	InvalidFacetUpdateException *shared.InvalidFacetUpdateException
	// InvalidRuleException
	InvalidRuleException *shared.InvalidRuleException
	// LimitExceededException
	LimitExceededException *shared.LimitExceededException
	// RetryableConflictException
	RetryableConflictException *shared.RetryableConflictException
	StatusCode                 int
	RawResponse                *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException *shared.ResourceNotFoundException
	// Success
	UpdateFacetResponse map[string]interface{}
	// ValidationException
	ValidationException *shared.ValidationException
}
