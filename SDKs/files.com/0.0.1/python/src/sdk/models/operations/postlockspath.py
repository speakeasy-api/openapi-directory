"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import lockentity as shared_lockentity
from typing import Optional


@dataclasses.dataclass
class PostLocksPathRequestBody:
    
    allow_access_by_any_user: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'allow_access_by_any_user' }})
    r"""Allow lock to be updated by any user?"""  
    exclusive: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'exclusive' }})
    r"""Is lock exclusive?"""  
    recursive: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'recursive' }})
    r"""Does lock apply to subfolders?"""  
    timeout: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'timeout' }})
    r"""Lock timeout length"""  
    

@dataclasses.dataclass
class PostLocksPathRequest:
    
    path: str = dataclasses.field(metadata={'path_param': { 'field_name': 'path', 'style': 'simple', 'explode': False }})
    r"""Path"""  
    request_body: Optional[PostLocksPathRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class PostLocksPathResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    lock_entity: Optional[shared_lockentity.LockEntity] = dataclasses.field(default=None)
    r"""The Locks object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    