/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Indicates whether appliance mode support is enabled.
 */
export enum CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * Indicates whether DNS support is enabled.
 */
export enum CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDnsSupportEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * Indicates whether IPv6 support is disabled.
 */
export enum CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum {
  Enable = "enable",
  Disable = "disable",
}

/**
 * The VPC attachment options.
 */
export class CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  applianceModeSupport?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsApplianceModeSupportEnum;

  @SpeakeasyMetadata()
  dnsSupport?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsDnsSupportEnum;

  @SpeakeasyMetadata()
  ipv6Support?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptionsIpv6SupportEnum;
}

/**
 * The state of the VPC attachment. Note that the <code>initiating</code> state has been deprecated.
 */
export enum CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum {
  Initiating = "initiating",
  InitiatingRequest = "initiatingRequest",
  PendingAcceptance = "pendingAcceptance",
  RollingBack = "rollingBack",
  Pending = "pending",
  Available = "available",
  Modifying = "modifying",
  Deleting = "deleting",
  Deleted = "deleted",
  Failed = "failed",
  Rejected = "rejected",
  Rejecting = "rejecting",
  Failing = "failing",
}

/**
 * Describes a tag.
 */
export class CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Information about the VPC attachment.
 */
export class CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  options?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentOptions;

  @SpeakeasyMetadata()
  state?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentStateEnum;

  @SpeakeasyMetadata()
  subnetIds?: string[];

  @SpeakeasyMetadata({
    elemType:
      CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentTags,
  })
  tags?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachmentTags[];

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcId?: string;

  @SpeakeasyMetadata()
  vpcOwnerId?: string;
}

/**
 * Success
 */
export class CreateTransitGatewayVpcAttachmentResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  transitGatewayVpcAttachment?: CreateTransitGatewayVpcAttachmentResultTransitGatewayVpcAttachment;
}
