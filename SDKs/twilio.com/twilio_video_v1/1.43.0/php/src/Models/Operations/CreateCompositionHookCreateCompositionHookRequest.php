<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateCompositionHookCreateCompositionHookRequest
{
    /**
     * An array of track names from the same group room to merge into the compositions created by the composition hook. Can include zero or more track names. A composition triggered by the composition hook includes all audio sources specified in `audio_sources` except those specified in `audio_sources_excluded`. The track names in this parameter can include an asterisk as a wild card character, which matches zero or more characters in a track name. For example, `student*` includes tracks named `student` as well as `studentTeam`.
     * 
     * @var ?array<string> $audioSources
     */
	#[SpeakeasyMetadata('form:name=AudioSources')]
    public ?array $audioSources = null;
    
    /**
     * An array of track names to exclude. A composition triggered by the composition hook includes all audio sources specified in `audio_sources` except for those specified in `audio_sources_excluded`. The track names in this parameter can include an asterisk as a wild card character, which matches zero or more characters in a track name. For example, `student*` excludes `student` as well as `studentTeam`. This parameter can also be empty.
     * 
     * @var ?array<string> $audioSourcesExcluded
     */
	#[SpeakeasyMetadata('form:name=AudioSourcesExcluded')]
    public ?array $audioSourcesExcluded = null;
    
    /**
     * Whether the composition hook is active. When `true`, the composition hook will be triggered for every completed Group Room in the account. When `false`, the composition hook will never be triggered.
     * 
     * @var ?bool $enabled
     */
	#[SpeakeasyMetadata('form:name=Enabled')]
    public ?bool $enabled = null;
    
	#[SpeakeasyMetadata('form:name=Format')]
    public ?\OpenAPI\OpenAPI\Models\Shared\CompositionHookEnumFormatEnum $format = null;
    
    /**
     * A descriptive string that you create to describe the resource. It can be up to  100 characters long and it must be unique within the account.
     * 
     * @var string $friendlyName
     */
	#[SpeakeasyMetadata('form:name=FriendlyName')]
    public string $friendlyName;
    
    /**
     * A string that describes the columns (width) and rows (height) of the generated composed video in pixels. Defaults to `640x480`. 
     * 
     * The string's format is `{width}x{height}` where: 
     * 
     * * 16 <= `{width}` <= 1280
     * * 16 <= `{height}` <= 1280
     * * `{width}` * `{height}` <= 921,600
     * 
     * Typical values are: 
     * 
     * * HD = `1280x720`
     * * PAL = `1024x576`
     * * VGA = `640x480`
     * * CIF = `320x240`
     * 
     * Note that the `resolution` imposes an aspect ratio to the resulting composition. When the original video tracks are constrained by the aspect ratio, they are scaled to fit. See [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for more info.
     * 
     * @var ?string $resolution
     */
	#[SpeakeasyMetadata('form:name=Resolution')]
    public ?string $resolution = null;
    
    /**
     * The URL we should call using the `status_callback_method` to send status information to your application on every composition event. If not provided, status callback events will not be dispatched.
     * 
     * @var ?string $statusCallback
     */
	#[SpeakeasyMetadata('form:name=StatusCallback')]
    public ?string $statusCallback = null;
    
    /**
     * The HTTP method we should use to call `status_callback`. Can be: `POST` or `GET` and the default is `POST`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateCompositionHookCreateCompositionHookRequestStatusCallbackMethodEnum $statusCallbackMethod
     */
	#[SpeakeasyMetadata('form:name=StatusCallbackMethod')]
    public ?CreateCompositionHookCreateCompositionHookRequestStatusCallbackMethodEnum $statusCallbackMethod = null;
    
    /**
     * Whether to clip the intervals where there is no active media in the Compositions triggered by the composition hook. The default is `true`. Compositions with `trim` enabled are shorter when the Room is created and no Participant joins for a while as well as if all the Participants leave the room and join later, because those gaps will be removed. See [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for more info.
     * 
     * @var ?bool $trim
     */
	#[SpeakeasyMetadata('form:name=Trim')]
    public ?bool $trim = null;
    
    /**
     * An object that describes the video layout of the composition hook in terms of regions. See [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for more info.
     * 
     * @var mixed $videoLayout
     */
	#[SpeakeasyMetadata('form:name=VideoLayout')]
    public mixed $videoLayout = null;
    
	public function __construct()
	{
		$this->audioSources = null;
		$this->audioSourcesExcluded = null;
		$this->enabled = null;
		$this->format = null;
		$this->friendlyName = "";
		$this->resolution = null;
		$this->statusCallback = null;
		$this->statusCallbackMethod = null;
		$this->trim = null;
		$this->videoLayout = null;
	}
}
