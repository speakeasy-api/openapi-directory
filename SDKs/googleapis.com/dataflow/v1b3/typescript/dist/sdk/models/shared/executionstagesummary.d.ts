import { SpeakeasyBase } from "../../../internal/utils";
import { ComponentSource } from "./componentsource";
import { ComponentTransform } from "./componenttransform";
import { StageSource } from "./stagesource";
/**
 * Type of transform this stage is executing.
 */
export declare enum ExecutionStageSummaryKindEnum {
    UnknownKind = "UNKNOWN_KIND",
    ParDoKind = "PAR_DO_KIND",
    GroupByKeyKind = "GROUP_BY_KEY_KIND",
    FlattenKind = "FLATTEN_KIND",
    ReadKind = "READ_KIND",
    WriteKind = "WRITE_KIND",
    ConstantKind = "CONSTANT_KIND",
    SingletonKind = "SINGLETON_KIND",
    ShuffleKind = "SHUFFLE_KIND"
}
/**
 * Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.
 */
export declare class ExecutionStageSummary extends SpeakeasyBase {
    /**
     * Collections produced and consumed by component transforms of this stage.
     */
    componentSource?: ComponentSource[];
    /**
     * Transforms that comprise this execution stage.
     */
    componentTransform?: ComponentTransform[];
    /**
     * Dataflow service generated id for this stage.
     */
    id?: string;
    /**
     * Input sources for this stage.
     */
    inputSource?: StageSource[];
    /**
     * Type of transform this stage is executing.
     */
    kind?: ExecutionStageSummaryKindEnum;
    /**
     * Dataflow service generated name for this stage.
     */
    name?: string;
    /**
     * Output sources for this stage.
     */
    outputSource?: StageSource[];
    /**
     * Other stages that must complete before this stage can run.
     */
    prerequisiteStage?: string[];
}
