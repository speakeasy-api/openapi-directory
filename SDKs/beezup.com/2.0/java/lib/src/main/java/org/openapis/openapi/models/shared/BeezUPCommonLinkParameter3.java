/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BeezUPCommonLinkParameter3 {
    /**
     * description of the parameter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public BeezUPCommonLinkParameter3 withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * * path: if the parameter must be pass in the path uri
     * * header: if the parameter must be passed in http header
     * * query: if the parameter must be passed in querystring
     * * body: if the paramter must be passed in the body
     * 
     */
    @JsonProperty("in")
    public BeezUPCommonParameterInEnum in;
    public BeezUPCommonLinkParameter3 withIn(BeezUPCommonParameterInEnum in) {
        this.in = in;
        return this;
    }
    
    /**
     * The label corresponding to the link parameter. This label is automatically translated based on the Accept-Language http header.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public BeezUPCommonLinkParameter3 withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Describe the way you have to follow to get access to the LOV
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lovLink")
    public BeezUPCommonLOVLink3 lovLink;
    public BeezUPCommonLinkParameter3 withLovLink(BeezUPCommonLOVLink3 lovLink) {
        this.lovLink = lovLink;
        return this;
    }
    
    /**
     * If true, you MUST indicate a value from the list of values otherwise it's a freetext
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lovRequired")
    public Boolean lovRequired;
    public BeezUPCommonLinkParameter3 withLovRequired(Boolean lovRequired) {
        this.lovRequired = lovRequired;
        return this;
    }
    
    /**
     * If the parameter is an object with flexible properties (additionProperties/dictionary), we will describe the properties of the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, BeezUPCommonLinkParameterProperty3> properties;
    public BeezUPCommonLinkParameter3 withProperties(java.util.Map<String, BeezUPCommonLinkParameterProperty3> properties) {
        this.properties = properties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public Boolean required;
    public BeezUPCommonLinkParameter3 withRequired(Boolean required) {
        this.required = required;
        return this;
    }
    
    /**
     * schema of the parameter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schema")
    public String schema;
    public BeezUPCommonLinkParameter3 withSchema(String schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * The value type of the parameter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public BeezUPCommonParameterTypeEnum type;
    public BeezUPCommonLinkParameter3 withType(BeezUPCommonParameterTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The value of the parameter. It can be an integer a string or an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public java.util.Map<String, Object> value;
    public BeezUPCommonLinkParameter3 withValue(java.util.Map<String, Object> value) {
        this.value = value;
        return this;
    }
    
}
