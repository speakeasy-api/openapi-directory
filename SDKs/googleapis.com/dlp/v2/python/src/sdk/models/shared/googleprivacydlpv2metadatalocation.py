"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2storagemetadatalabel as shared_googleprivacydlpv2storagemetadatalabel
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GooglePrivacyDlpV2MetadataLocationTypeEnum(str, Enum):
    r"""Type of metadata containing the finding."""
    METADATATYPE_UNSPECIFIED = 'METADATATYPE_UNSPECIFIED'
    STORAGE_METADATA = 'STORAGE_METADATA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2MetadataLocation:
    r"""Metadata Location"""
    
    storage_label: Optional[shared_googleprivacydlpv2storagemetadatalabel.GooglePrivacyDlpV2StorageMetadataLabel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageLabel'), 'exclude': lambda f: f is None }})
    r"""Storage metadata label to indicate which metadata entry contains findings."""  
    type: Optional[GooglePrivacyDlpV2MetadataLocationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of metadata containing the finding."""  
    