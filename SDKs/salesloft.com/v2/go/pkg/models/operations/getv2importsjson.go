// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetV2ImportsJSONRequest struct {
	// IDs of imports to fetch. If a record can't be found, that record won't be returned and your request will be successful
	Ids []int64 `queryParam:"style=form,explode=false,name=ids"`
	// Whether to include total_pages and total_count in the metadata. Defaults to false
	IncludePagingCounts *bool `queryParam:"style=form,explode=true,name=include_paging_counts"`
	// Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data
	LimitPagingCounts *bool `queryParam:"style=form,explode=true,name=limit_paging_counts"`
	// The current page to fetch results from. Defaults to 1
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// How many records to show per page in the range [1, 100]. Defaults to 25
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Key to sort on, must be one of: created_at, updated_at. Defaults to created_at
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
	SortDirection *string `queryParam:"style=form,explode=true,name=sort_direction"`
	// ID of users to fetch imports for. Using this filter will return an empty array for non-admin users who request other user's imports
	UserIds []int64 `queryParam:"style=form,explode=false,name=user_ids"`
}

type GetV2ImportsJSONResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
