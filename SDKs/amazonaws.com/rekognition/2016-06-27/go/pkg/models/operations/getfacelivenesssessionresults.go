// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetFaceLivenessSessionResultsXAmzTargetEnum
type GetFaceLivenessSessionResultsXAmzTargetEnum string

const (
	GetFaceLivenessSessionResultsXAmzTargetEnumRekognitionServiceGetFaceLivenessSessionResults GetFaceLivenessSessionResultsXAmzTargetEnum = "RekognitionService.GetFaceLivenessSessionResults"
)

func (e GetFaceLivenessSessionResultsXAmzTargetEnum) ToPointer() *GetFaceLivenessSessionResultsXAmzTargetEnum {
	return &e
}

func (e *GetFaceLivenessSessionResultsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RekognitionService.GetFaceLivenessSessionResults":
		*e = GetFaceLivenessSessionResultsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFaceLivenessSessionResultsXAmzTargetEnum: %v", v)
	}
}

type GetFaceLivenessSessionResultsRequest struct {
	GetFaceLivenessSessionResultsRequest shared.GetFaceLivenessSessionResultsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           GetFaceLivenessSessionResultsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetFaceLivenessSessionResultsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetFaceLivenessSessionResultsResponse *shared.GetFaceLivenessSessionResultsResponse
	// InternalServerError
	InternalServerError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// SessionNotFoundException
	SessionNotFoundException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
