/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PendingDeployment - Details of a deployment that is waiting for protection rules to pass
 */
public class PendingDeployment {
    /**
     * Whether the currently authenticated user can approve the deployment
     */
    @JsonProperty("current_user_can_approve")
    public Boolean currentUserCanApprove;

    public PendingDeployment withCurrentUserCanApprove(Boolean currentUserCanApprove) {
        this.currentUserCanApprove = currentUserCanApprove;
        return this;
    }
    
    @JsonProperty("environment")
    public PendingDeploymentEnvironment environment;

    public PendingDeployment withEnvironment(PendingDeploymentEnvironment environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * The people or teams that may approve jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
     */
    @JsonProperty("reviewers")
    public PendingDeploymentReviewers[] reviewers;

    public PendingDeployment withReviewers(PendingDeploymentReviewers[] reviewers) {
        this.reviewers = reviewers;
        return this;
    }
    
    /**
     * The set duration of the wait timer
     */
    @JsonProperty("wait_timer")
    public Long waitTimer;

    public PendingDeployment withWaitTimer(Long waitTimer) {
        this.waitTimer = waitTimer;
        return this;
    }
    
    /**
     * The time that the wait timer began.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("wait_timer_started_at")
    public OffsetDateTime waitTimerStartedAt;

    public PendingDeployment withWaitTimerStartedAt(OffsetDateTime waitTimerStartedAt) {
        this.waitTimerStartedAt = waitTimerStartedAt;
        return this;
    }
    
    public PendingDeployment(@JsonProperty("current_user_can_approve") Boolean currentUserCanApprove, @JsonProperty("environment") PendingDeploymentEnvironment environment, @JsonProperty("reviewers") PendingDeploymentReviewers[] reviewers, @JsonProperty("wait_timer") Long waitTimer, @JsonProperty("wait_timer_started_at") OffsetDateTime waitTimerStartedAt) {
        this.currentUserCanApprove = currentUserCanApprove;
        this.environment = environment;
        this.reviewers = reviewers;
        this.waitTimer = waitTimer;
        this.waitTimerStartedAt = waitTimerStartedAt;
  }
}
