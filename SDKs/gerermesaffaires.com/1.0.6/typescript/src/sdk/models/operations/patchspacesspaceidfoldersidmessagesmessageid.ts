/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export enum PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
}

export enum PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyNotifyHowEnum {
  Std = "std",
  Mail = "mail",
  Sms = "sms",
}

export class PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyNotify extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "How" })
  how?: PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyNotifyHowEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MemberIds" })
  memberIds?: string[];
}

/**
 * Message to modify (except Author and ModificationAuthor)
 */
export class PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "MessageDate" })
  messageDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Notify" })
  @Type(() => PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyNotify)
  notify?: PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBodyNotify;

  @SpeakeasyMetadata()
  @Expose({ name: "Text" })
  text?: string;
}

export class PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequest extends SpeakeasyBase {
  /**
   * Message to modify (except Author and ModificationAuthor)
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchSpacesSpaceIdFoldersIdMessagesMessageIdRequestBody;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the message
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=messageId",
  })
  messageId: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class PatchSpacesSpaceIdFoldersIdMessagesMessageIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
