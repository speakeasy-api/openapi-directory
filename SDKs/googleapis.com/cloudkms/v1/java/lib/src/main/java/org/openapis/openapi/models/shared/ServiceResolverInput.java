/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServiceResolverInput - A ServiceResolver represents an EKM replica that can be reached within an EkmConnection.
 */
public class ServiceResolverInput {
    /**
     * Optional. The filter applied to the endpoints of the resolved service. If no filter is specified, all endpoints will be considered. An endpoint will be chosen arbitrarily from the filtered list for each request. For endpoint filter syntax and examples, see https://cloud.google.com/service-directory/docs/reference/rpc/google.cloud.servicedirectory.v1#resolveservicerequest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpointFilter")
    public String endpointFilter;
    public ServiceResolverInput withEndpointFilter(String endpointFilter) {
        this.endpointFilter = endpointFilter;
        return this;
    }
    
    /**
     * Required. The hostname of the EKM replica used at TLS and HTTP layers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;
    public ServiceResolverInput withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * Required. A list of leaf server certificates used to authenticate HTTPS connections to the EKM replica. Currently, a maximum of 10 Certificate is supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverCertificates")
    public CertificateInput[] serverCertificates;
    public ServiceResolverInput withServerCertificates(CertificateInput[] serverCertificates) {
        this.serverCertificates = serverCertificates;
        return this;
    }
    
    /**
     * Required. The resource name of the Service Directory service pointing to an EKM replica, in the format `projects/* /locations/* /namespaces/* /services/*`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceDirectoryService")
    public String serviceDirectoryService;
    public ServiceResolverInput withServiceDirectoryService(String serviceDirectoryService) {
        this.serviceDirectoryService = serviceDirectoryService;
        return this;
    }
    
}
