"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class TeamMembershipRoleEnum(str, Enum):
    r"""The role of the user in the team."""
    MEMBER = 'member'
    MAINTAINER = 'maintainer'

class TeamMembershipStateEnum(str, Enum):
    r"""The state of the user's membership in the team."""
    ACTIVE = 'active'
    PENDING = 'pending'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamMembership:
    r"""Team Membership"""
    
    role: TeamMembershipRoleEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role') }})
    r"""The role of the user in the team."""  
    state: TeamMembershipStateEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})
    r"""The state of the user's membership in the team."""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})  
    