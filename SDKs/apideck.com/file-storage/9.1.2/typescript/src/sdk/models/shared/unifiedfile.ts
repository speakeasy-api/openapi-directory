/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FileTypeEnum } from "./filetypeenum";
import { LinkedFolder } from "./linkedfolder";
import { Owner } from "./owner";
import { Expose, Transform, Type } from "class-transformer";

export class UnifiedFile extends SpeakeasyBase {
  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Optional description of the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Whether the current user can download this file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downloadable" })
  downloadable?: boolean;

  /**
   * The third-party API ID of original entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downstream_id" })
  downstreamId?: string;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The MIME type of the file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mime_type" })
  mimeType?: string;

  /**
   * The name of the file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => Owner)
  owner?: Owner;

  /**
   * The parent folders of the file, starting from the root
   */
  @SpeakeasyMetadata({ elemType: LinkedFolder })
  @Expose({ name: "parent_folders" })
  @Type(() => LinkedFolder)
  parentFolders?: LinkedFolder[];

  /**
   * Whether the list of parent folder is complete. Some connectors only return the direct parent of a file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_folders_complete" })
  parentFoldersComplete?: boolean;

  /**
   * The full path of the file or folder (includes the file name)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * The size of the file in bytes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  /**
   * The type of resource. Could be file, folder or url
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: FileTypeEnum;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
