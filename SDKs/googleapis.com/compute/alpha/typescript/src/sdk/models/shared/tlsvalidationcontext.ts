/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SdsConfig } from "./sdsconfig";
import { Expose, Type } from "class-transformer";

/**
 * Defines how TLS certificates are obtained.
 */
export enum TlsValidationContextValidationSourceEnum {
  Invalid = "INVALID",
  UsePath = "USE_PATH",
  UseSds = "USE_SDS",
}

/**
 * [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
 */
export class TlsValidationContext extends SpeakeasyBase {
  /**
   * The path to the file holding the CA certificate to validate the client or server certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "certificatePath" })
  certificatePath?: string;

  /**
   * [Deprecated] The configuration to access the SDS server. The configuration to access the SDS server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sdsConfig" })
  @Type(() => SdsConfig)
  sdsConfig?: SdsConfig;

  /**
   * Defines how TLS certificates are obtained.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validationSource" })
  validationSource?: TlsValidationContextValidationSourceEnum;
}
