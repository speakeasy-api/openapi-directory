// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrivateArticleSearchOrderEnum - The field by which to order
type PrivateArticleSearchOrderEnum string

const (
	PrivateArticleSearchOrderEnumPublishedDate PrivateArticleSearchOrderEnum = "published_date"
	PrivateArticleSearchOrderEnumModifiedDate  PrivateArticleSearchOrderEnum = "modified_date"
	PrivateArticleSearchOrderEnumViews         PrivateArticleSearchOrderEnum = "views"
	PrivateArticleSearchOrderEnumShares        PrivateArticleSearchOrderEnum = "shares"
	PrivateArticleSearchOrderEnumDownloads     PrivateArticleSearchOrderEnum = "downloads"
	PrivateArticleSearchOrderEnumCites         PrivateArticleSearchOrderEnum = "cites"
)

func (e PrivateArticleSearchOrderEnum) ToPointer() *PrivateArticleSearchOrderEnum {
	return &e
}

func (e *PrivateArticleSearchOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		fallthrough
	case "shares":
		fallthrough
	case "downloads":
		fallthrough
	case "cites":
		*e = PrivateArticleSearchOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateArticleSearchOrderEnum: %v", v)
	}
}

// PrivateArticleSearchOrderDirectionEnum - Direction of ordering
type PrivateArticleSearchOrderDirectionEnum string

const (
	PrivateArticleSearchOrderDirectionEnumAsc  PrivateArticleSearchOrderDirectionEnum = "asc"
	PrivateArticleSearchOrderDirectionEnumDesc PrivateArticleSearchOrderDirectionEnum = "desc"
)

func (e PrivateArticleSearchOrderDirectionEnum) ToPointer() *PrivateArticleSearchOrderDirectionEnum {
	return &e
}

func (e *PrivateArticleSearchOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = PrivateArticleSearchOrderDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateArticleSearchOrderDirectionEnum: %v", v)
	}
}

// PrivateArticleSearch - Search Parameters
type PrivateArticleSearch struct {
	// Only return articles with this doi
	Doi *string `json:"doi,omitempty"`
	// only return collections from this group
	Group *int `json:"group,omitempty"`
	// Only return articles with this handle
	Handle *string `json:"handle,omitempty"`
	// only return collections from this institution
	Institution *int `json:"institution,omitempty"`
	// Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model
	ItemType *int64 `json:"item_type,omitempty"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `json:"limit,omitempty"`
	// Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	ModifiedSince *string `json:"modified_since,omitempty"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `json:"offset,omitempty"`
	// The field by which to order
	Order *PrivateArticleSearchOrderEnum `json:"order,omitempty"`
	// Direction of ordering
	OrderDirection *PrivateArticleSearchOrderDirectionEnum `json:"order_direction,omitempty"`
	// Page number. Used for pagination with page_size
	Page *int64 `json:"page,omitempty"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `json:"page_size,omitempty"`
	// Only return articles in this project
	ProjectID *int64 `json:"project_id,omitempty"`
	// Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	PublishedSince *string `json:"published_since,omitempty"`
	// Only return articles with this resource_doi
	ResourceDoi *string `json:"resource_doi,omitempty"`
	// only return collections with this resource_id
	ResourceID *string `json:"resource_id,omitempty"`
	// Search term
	SearchFor *string `json:"search_for,omitempty"`
}
