"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import privateconnectionprovisioningfailurecause_enum as shared_privateconnectionprovisioningfailurecause_enum
from ..shared import privateconnectionprovisioningstatus_enum as shared_privateconnectionprovisioningstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrivateConnectionProvisioningState:
    r"""Specifies the private connection provisioning state."""
    
    failure_cause: Optional[shared_privateconnectionprovisioningfailurecause_enum.PrivateConnectionProvisioningFailureCauseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureCause'), 'exclude': lambda f: f is None }})  
    failure_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failureMessage'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_privateconnectionprovisioningstatus_enum.PrivateConnectionProvisioningStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    