/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityResult } from "./entityresult";
import { Expose, Type } from "class-transformer";

/**
 * The result type for every entity in `entity_results`.
 */
export enum QueryResultBatchEntityResultTypeEnum {
  ResultTypeUnspecified = "RESULT_TYPE_UNSPECIFIED",
  Full = "FULL",
  Projection = "PROJECTION",
  KeyOnly = "KEY_ONLY",
}

/**
 * The state of the query after the current batch.
 */
export enum QueryResultBatchMoreResultsEnum {
  MoreResultsTypeUnspecified = "MORE_RESULTS_TYPE_UNSPECIFIED",
  NotFinished = "NOT_FINISHED",
  MoreResultsAfterLimit = "MORE_RESULTS_AFTER_LIMIT",
  MoreResultsAfterCursor = "MORE_RESULTS_AFTER_CURSOR",
  NoMoreResults = "NO_MORE_RESULTS",
}

/**
 * A batch of results produced by a query.
 */
export class QueryResultBatch extends SpeakeasyBase {
  /**
   * A cursor that points to the position after the last result in the batch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endCursor" })
  endCursor?: string;

  /**
   * The result type for every entity in `entity_results`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "entityResultType" })
  entityResultType?: QueryResultBatchEntityResultTypeEnum;

  /**
   * The results for this batch.
   */
  @SpeakeasyMetadata({ elemType: EntityResult })
  @Expose({ name: "entityResults" })
  @Type(() => EntityResult)
  entityResults?: EntityResult[];

  /**
   * The state of the query after the current batch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "moreResults" })
  moreResults?: QueryResultBatchMoreResultsEnum;

  /**
   * Read timestamp this batch was returned from. This applies to the range of results from the query's `start_cursor` (or the beginning of the query if no cursor was given) to this batch's `end_cursor` (not the query's `end_cursor`). In a single transaction, subsequent query result batches for the same query can have a greater timestamp. Each batch's read timestamp is valid for all preceding batches. This value will not be set for eventually consistent queries in Cloud Datastore.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * A cursor that points to the position after the last skipped result. Will be set when `skipped_results` != 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skippedCursor" })
  skippedCursor?: string;

  /**
   * The number of results skipped, typically because of an offset.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skippedResults" })
  skippedResults?: number;

  /**
   * The version number of the snapshot this batch was returned from. This applies to the range of results from the query's `start_cursor` (or the beginning of the query if no cursor was given) to this batch's `end_cursor` (not the query's `end_cursor`). In a single transaction, subsequent query result batches for the same query can have a greater snapshot version number. Each batch's snapshot version is valid for all preceding batches. The value will be zero for eventually consistent queries.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snapshotVersion" })
  snapshotVersion?: string;
}
