// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetV2ActivitiesEmailsJSONQueryParams struct {
	// Filters emails by action_id. Multiple action ids can be applied
	ActionID []int64 `queryParam:"style=form,explode=false,name=action_id"`
	// Filters emails by whether they have bounced or not
	Bounced *bool `queryParam:"style=form,explode=true,name=bounced"`
	// Filters emails by cadence. Multiple cadence ids can be applied
	CadenceID []int64 `queryParam:"style=form,explode=false,name=cadence_id"`
	// Filters emails by crm_activity_id. Multiple crm activty ids can be applied
	CrmActivityID []int64 `queryParam:"style=form,explode=false,name=crm_activity_id"`
	// Filters emails by recipient email address. Multiple emails can be applied.
	EmailAddresses []string `queryParam:"style=form,explode=false,name=email_addresses"`
	// IDs of emails to fetch. If a record can't be found, that record won't be returned and your request will be successful
	Ids []int64 `queryParam:"style=form,explode=false,name=ids"`
	// Whether to include total_pages and total_count in the metadata. Defaults to false
	IncludePagingCounts *bool `queryParam:"style=form,explode=true,name=include_paging_counts"`
	// Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data
	LimitPagingCounts *bool `queryParam:"style=form,explode=true,name=limit_paging_counts"`
	// Filters emails by one-off only
	OneOff *bool `queryParam:"style=form,explode=true,name=one_off"`
	// The current page to fetch results from. Defaults to 1
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// How many records to show per page in the range [1, 100]. Defaults to 25
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Filters emails by person_id. Multiple person ids can be applied
	PersonID []int64 `queryParam:"style=form,explode=false,name=person_id"`
	// Filters emails by personalization score
	Personalization []string `queryParam:"style=form,explode=false,name=personalization"`
	// Specify explicit scoped fields desired on the Email Resource.
	ScopedFields []string `queryParam:"style=form,explode=false,name=scoped_fields"`
	// Equality filters that are applied to the sent_at field. A single filter can be used by itself or combined with other filters to create a range.
	//
	// ---CUSTOM---
	// {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
	//
	SentAt []string `queryParam:"style=form,explode=false,name=sent_at"`
	// Key to sort on, must be one of: updated_at, send_time. Defaults to updated_at
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
	SortDirection *string `queryParam:"style=form,explode=true,name=sort_direction"`
	// Filters emails by status. Multiple status can be applied, possible values are sent, sent_from_gmail, sent_from_external, pending, pending_reply_check, scheduled, sending, delivering, failed, cancelled, pending_through_gmail, pending_through_external
	Status []string `queryParam:"style=form,explode=false,name=status"`
	// Filters emails by step. Multiple step ids can be applied
	StepID []int64 `queryParam:"style=form,explode=false,name=step_id"`
	// Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
	//
	// ---CUSTOM---
	// {"type":"object","keys":[{"name":"gt","type":"iso8601 string","description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"gte","type":"iso8601 string","description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lt","type":"iso8601 string","description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision."},{"name":"lte","type":"iso8601 string","description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision."}]}
	//
	UpdatedAt []string `queryParam:"style=form,explode=false,name=updated_at"`
	// Filters emails by user_id. Multiple User ids can be applied
	UserID []int64 `queryParam:"style=form,explode=false,name=user_id"`
}

type GetV2ActivitiesEmailsJSONRequest struct {
	QueryParams GetV2ActivitiesEmailsJSONQueryParams
}

type GetV2ActivitiesEmailsJSONResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
