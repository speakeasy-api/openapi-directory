"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gkeclusterconfig as shared_gkeclusterconfig
from ..shared import kubernetessoftwareconfig as shared_kubernetessoftwareconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class KubernetesClusterConfig:
    r"""The configuration for running the Dataproc cluster on Kubernetes."""
    
    gke_cluster_config: Optional[shared_gkeclusterconfig.GkeClusterConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gkeClusterConfig'), 'exclude': lambda f: f is None }})
    r"""The cluster's GKE config."""  
    kubernetes_namespace: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kubernetesNamespace'), 'exclude': lambda f: f is None }})
    r"""Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used."""  
    kubernetes_software_config: Optional[shared_kubernetessoftwareconfig.KubernetesSoftwareConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kubernetesSoftwareConfig'), 'exclude': lambda f: f is None }})
    r"""The software configuration for this Dataproc cluster running on Kubernetes."""  
    