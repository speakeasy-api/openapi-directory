// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AddWebhookHeaders struct {
	// Access token required to make the API call.
	EvAccessToken string `header:"style=simple,explode=false,name=ev-access-token"`
	// API key required to make the API call.
	EvAPIKey string `header:"style=simple,explode=false,name=ev-api-key"`
}

// AddWebhookAddWebhookRequestBodyResponseVersionEnum - What version of webhook request should be sent to the endpoint URL when messages are sent
type AddWebhookAddWebhookRequestBodyResponseVersionEnum string

const (
	AddWebhookAddWebhookRequestBodyResponseVersionEnumV1 AddWebhookAddWebhookRequestBodyResponseVersionEnum = "v1"
	AddWebhookAddWebhookRequestBodyResponseVersionEnumV2 AddWebhookAddWebhookRequestBodyResponseVersionEnum = "v2"
)

func (e *AddWebhookAddWebhookRequestBodyResponseVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "v1":
		fallthrough
	case "v2":
		*e = AddWebhookAddWebhookRequestBodyResponseVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddWebhookAddWebhookRequestBodyResponseVersionEnum: %s", s)
	}
}

type AddWebhookAddWebhookRequestBody struct {
	// The endpoint is where the webhook request will be sent.
	EndpointURL string `json:"endpointUrl"`
	// Resource identifier for the top folder this webhook is associated with
	Resource *string `json:"resource,omitempty"`
	// What version of webhook request should be sent to the endpoint URL when messages are sent
	ResponseVersion *AddWebhookAddWebhookRequestBodyResponseVersionEnum `json:"responseVersion,omitempty"`
	Triggers        *shared.WebhookTriggers                             `json:"triggers,omitempty"`
}

type AddWebhookRequest struct {
	Headers AddWebhookHeaders
	Request *AddWebhookAddWebhookRequestBody `request:"mediaType=application/json"`
}

type AddWebhookResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	WebhookResponse *shared.WebhookResponse
}
