<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EarningWithTQS
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
     * 
     * @var ?\DateTime $dueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('due_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dueDate = null;
    
    /**
     * Is this score above or below the average among other vendors in the same project?
     * 
     * @var ?bool $isAboveAverage
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_above_average')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAboveAverage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('project_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $projectId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $score = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EarningWithTQSStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EarningWithTQSStatusEnum $status = null;
    
    /**
     * The number of translated strings by this translator which was edited by a proofreader.
     * 
     * @var ?int $stringsEdited
     */
	#[\JMS\Serializer\Annotation\SerializedName('strings_edited')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stringsEdited = null;
    
    /**
     * The number of translated strings by this translator.
     * 
     * @var ?int $stringsTranslated
     */
	#[\JMS\Serializer\Annotation\SerializedName('strings_translated')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stringsTranslated = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('words')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $words = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('words_approved')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $wordsApproved = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('words_translated')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $wordsTranslated = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->currency = null;
		$this->dueDate = null;
		$this->isAboveAverage = null;
		$this->projectId = null;
		$this->score = null;
		$this->status = null;
		$this->stringsEdited = null;
		$this->stringsTranslated = null;
		$this->words = null;
		$this->wordsApproved = null;
		$this->wordsTranslated = null;
	}
}
