// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateAssociationStatusXAmzTargetEnum
type UpdateAssociationStatusXAmzTargetEnum string

const (
	UpdateAssociationStatusXAmzTargetEnumAmazonSsmUpdateAssociationStatus UpdateAssociationStatusXAmzTargetEnum = "AmazonSSM.UpdateAssociationStatus"
)

func (e UpdateAssociationStatusXAmzTargetEnum) ToPointer() *UpdateAssociationStatusXAmzTargetEnum {
	return &e
}

func (e *UpdateAssociationStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.UpdateAssociationStatus":
		*e = UpdateAssociationStatusXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAssociationStatusXAmzTargetEnum: %v", v)
	}
}

type UpdateAssociationStatusRequest struct {
	UpdateAssociationStatusRequest shared.UpdateAssociationStatusRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     UpdateAssociationStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateAssociationStatusResponse struct {
	// AssociationDoesNotExist
	AssociationDoesNotExist interface{}
	ContentType             string
	// InternalServerError
	InternalServerError interface{}
	// InvalidDocument
	InvalidDocument interface{}
	// InvalidInstanceId
	InvalidInstanceID interface{}
	StatusCode        int
	RawResponse       *http.Response
	// StatusUnchanged
	StatusUnchanged interface{}
	// TooManyUpdates
	TooManyUpdates interface{}
	// Success
	UpdateAssociationStatusResult *shared.UpdateAssociationStatusResult
}
