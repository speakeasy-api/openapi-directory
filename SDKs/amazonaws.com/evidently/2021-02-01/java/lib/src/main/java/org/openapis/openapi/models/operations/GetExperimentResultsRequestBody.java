/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class GetExperimentResultsRequestBody {
    /**
     * The statistic used to calculate experiment results. Currently the only valid value is &lt;code&gt;mean&lt;/code&gt;, which uses the mean of the collected values as the statistic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseStat")
    public GetExperimentResultsRequestBodyBaseStatEnum baseStat;
    public GetExperimentResultsRequestBody withBaseStat(GetExperimentResultsRequestBodyBaseStatEnum baseStat) {
        this.baseStat = baseStat;
        return this;
    }
    
    /**
     * The date and time that the experiment ended, if it is completed. This must be no longer than 30 days after the experiment start time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;
    public GetExperimentResultsRequestBody withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The names of the experiment metrics that you want to see the results of.
     */
    @JsonProperty("metricNames")
    public String[] metricNames;
    public GetExperimentResultsRequestBody withMetricNames(String[] metricNames) {
        this.metricNames = metricNames;
        return this;
    }
    
    /**
     * In seconds, the amount of time to aggregate results together. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("period")
    public Long period;
    public GetExperimentResultsRequestBody withPeriod(Long period) {
        this.period = period;
        return this;
    }
    
    /**
     * The names of the report types that you want to see. Currently, &lt;code&gt;BayesianInference&lt;/code&gt; is the only valid value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reportNames")
    public org.openapis.openapi.models.shared.ExperimentReportNameEnum[] reportNames;
    public GetExperimentResultsRequestBody withReportNames(org.openapis.openapi.models.shared.ExperimentReportNameEnum[] reportNames) {
        this.reportNames = reportNames;
        return this;
    }
    
    /**
     * &lt;p&gt;The statistics that you want to see in the returned results.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;PValue&lt;/code&gt; specifies to use p-values for the results. A p-value is used in hypothesis testing to measure how often you are willing to make a mistake in rejecting the null hypothesis. A general practice is to reject the null hypothesis and declare that the results are statistically significant when the p-value is less than 0.05.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;ConfidenceInterval&lt;/code&gt; specifies a confidence interval for the results. The confidence interval represents the range of values for the chosen metric that is likely to contain the true difference between the &lt;code&gt;baseStat&lt;/code&gt; of a variation and the baseline. Evidently returns the 95% confidence interval. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;TreatmentEffect&lt;/code&gt; is the difference in the statistic specified by the &lt;code&gt;baseStat&lt;/code&gt; parameter between each variation and the default variation. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;BaseStat&lt;/code&gt; returns the statistical values collected for the metric for each variation. The statistic uses the same statistic specified in the &lt;code&gt;baseStat&lt;/code&gt; parameter. Therefore, if &lt;code&gt;baseStat&lt;/code&gt; is &lt;code&gt;mean&lt;/code&gt;, this returns the mean of the values collected for each variation.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultStats")
    public org.openapis.openapi.models.shared.ExperimentResultRequestTypeEnum[] resultStats;
    public GetExperimentResultsRequestBody withResultStats(org.openapis.openapi.models.shared.ExperimentResultRequestTypeEnum[] resultStats) {
        this.resultStats = resultStats;
        return this;
    }
    
    /**
     * The date and time that the experiment started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;
    public GetExperimentResultsRequestBody withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The names of the experiment treatments that you want to see the results for.
     */
    @JsonProperty("treatmentNames")
    public String[] treatmentNames;
    public GetExperimentResultsRequestBody withTreatmentNames(String[] treatmentNames) {
        this.treatmentNames = treatmentNames;
        return this;
    }
    
}
