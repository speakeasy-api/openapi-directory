/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BeezUPCommonInfoSummaries } from "./beezupcommoninfosummaries";
import { BeezUPCommonLOVLink3 } from "./beezupcommonlovlink3";
import { ChannelCatalogMarketplacePropertyDiscriminatorTypeEnum } from "./channelcatalogmarketplacepropertydiscriminatortypeenum";
import { TypeEnum } from "./typeenum";
import { Expose, Type } from "class-transformer";

/**
 * Model for fetching a channel catalog marketplace property
 */
export class ChannelCatalogMarketplaceProperty extends SpeakeasyBase {
  /**
   * Indicate the description of the property
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "discriminatorType" })
  discriminatorType: ChannelCatalogMarketplacePropertyDiscriminatorTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "info" })
  @Type(() => BeezUPCommonInfoSummaries)
  info?: BeezUPCommonInfoSummaries;

  /**
   * Describe the way you have to follow to get access to the LOV
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lovLink" })
  @Type(() => BeezUPCommonLOVLink3)
  lovLink?: BeezUPCommonLOVLink3;

  /**
   * Indicates if the property value must be in the list of value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lovRequired" })
  lovRequired?: boolean;

  /**
   * Indicates the maximum item count of the property value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxItems" })
  maxItems?: number;

  /**
   * Indicates the maximum size of the property value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxLength" })
  maxLength?: number;

  /**
   * Indicates the minimum item count of the property value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minItems" })
  minItems?: number;

  /**
   * Indicates the minimum size of the property value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minLength" })
  minLength?: number;

  /**
   * Channel catalog marketplace property name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Indicates the offer identifier required to configure this property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offerIdRequired" })
  offerIdRequired?: number;

  /**
   * Channel catalog marketplace setting value format validation regular expression
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pattern" })
  pattern?: string;

  /**
   * Indicate the position of the property in the display group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position: number;

  /**
   * Indicate if the value cannot be changed. This is used for example for ebay token that should not be changed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readOnly" })
  readOnly: boolean;

  /**
   * Indicate if the property is required or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required: boolean;

  /**
   * The Data Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TypeEnum;

  /**
   * Indicates if this property should be displayed in the configuration page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible: boolean;
}
