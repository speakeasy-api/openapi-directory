"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class CalendarEvents:
    r"""Calendar Events"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_v2_calendar_events(self, request: operations.GetV2CalendarEventsRequest) -> operations.GetV2CalendarEventsResponse:
        r"""List calendar events
        Returns all calendar events, paginated and filtered by the date.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v2/calendar/events'
        
        query_params = utils.get_query_params(operations.GetV2CalendarEventsRequest, request)
        
        client = self._client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetV2CalendarEventsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, '*/*'):
                res.body = http_res.content

        return res

    def post_v2_calendar_events_upsert(self, request: operations.PostV2CalendarEventsUpsertRequestBody) -> operations.PostV2CalendarEventsUpsertResponse:
        r"""Upsert a calendar event
        Upserts a calendar event object.
          Upsert key is a combination of `id` and `i_cal_uid` scoped to the given `calendar_id`.
          Bulk operations:
          This endpoint is used for bulk operations, see https://developers.salesloft.com/bulk.html for integration instructions.
          Use `calendar/events/upsert` as an event type, and this spec as a data spec.
          This endpoint should be used directly for the time sensitive calendar event updates.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/v2/calendar/events/upsert'
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "request", 'form')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        if data is None and form is None:
            raise Exception('request body is required')
        
        client = self._client
        
        http_res = client.request('POST', url, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PostV2CalendarEventsUpsertResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 201:
            if utils.match_content_type(content_type, '*/*'):
                res.body = http_res.content

        return res

    