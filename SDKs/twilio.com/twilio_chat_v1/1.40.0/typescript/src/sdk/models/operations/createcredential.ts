/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateCredentialServerList = ["https://chat.twilio.com"] as const;

export class CreateCredentialSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateCredentialCreateCredentialRequest extends SpeakeasyBase {
  /**
   * [GCM only] The API key for the project that was obtained from the Google Developer console for your GCM Service application credential.
   */
  @SpeakeasyMetadata({ data: "form, name=ApiKey" })
  apiKey?: string;

  /**
   * [APN only] The URL encoded representation of the certificate. For example,
   *
   * @remarks
   * `-----BEGIN CERTIFICATE-----
   * MIIFnTCCBIWgAwIBAgIIAjy9H849+E8wDQYJKoZIhvcNAQEFBQAwgZYxCzAJBgNV.....A==
   * -----END CERTIFICATE-----`
   */
  @SpeakeasyMetadata({ data: "form, name=Certificate" })
  certificate?: string;

  /**
   * A descriptive string that you create to describe the new resource. It can be up to 64 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * [APN only] The URL encoded representation of the private key. For example,
   *
   * @remarks
   * `-----BEGIN RSA PRIVATE KEY-----
   * MIIEpQIBAAKCAQEAuyf/lNrH9ck8DmNyo3fGgvCI1l9s+cmBY3WIz+cUDqmxiieR.
   * -----END RSA PRIVATE KEY-----`
   */
  @SpeakeasyMetadata({ data: "form, name=PrivateKey" })
  privateKey?: string;

  /**
   * [APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.
   */
  @SpeakeasyMetadata({ data: "form, name=Sandbox" })
  sandbox?: boolean;

  /**
   * [FCM only] The **Server key** of your project from the Firebase console, found under Settings / Cloud messaging.
   */
  @SpeakeasyMetadata({ data: "form, name=Secret" })
  secret?: string;

  @SpeakeasyMetadata({ data: "form, name=Type" })
  type: shared.CredentialEnumPushServiceEnum;
}

export class CreateCredentialResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  chatV1Credential?: shared.ChatV1Credential;
}
