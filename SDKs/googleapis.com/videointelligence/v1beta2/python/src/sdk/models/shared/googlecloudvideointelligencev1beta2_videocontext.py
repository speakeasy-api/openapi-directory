"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudvideointelligencev1beta2_explicitcontentdetectionconfig as shared_googlecloudvideointelligencev1beta2_explicitcontentdetectionconfig
from ..shared import googlecloudvideointelligencev1beta2_facedetectionconfig as shared_googlecloudvideointelligencev1beta2_facedetectionconfig
from ..shared import googlecloudvideointelligencev1beta2_labeldetectionconfig as shared_googlecloudvideointelligencev1beta2_labeldetectionconfig
from ..shared import googlecloudvideointelligencev1beta2_objecttrackingconfig as shared_googlecloudvideointelligencev1beta2_objecttrackingconfig
from ..shared import googlecloudvideointelligencev1beta2_persondetectionconfig as shared_googlecloudvideointelligencev1beta2_persondetectionconfig
from ..shared import googlecloudvideointelligencev1beta2_shotchangedetectionconfig as shared_googlecloudvideointelligencev1beta2_shotchangedetectionconfig
from ..shared import googlecloudvideointelligencev1beta2_speechtranscriptionconfig as shared_googlecloudvideointelligencev1beta2_speechtranscriptionconfig
from ..shared import googlecloudvideointelligencev1beta2_textdetectionconfig as shared_googlecloudvideointelligencev1beta2_textdetectionconfig
from ..shared import googlecloudvideointelligencev1beta2_videosegment as shared_googlecloudvideointelligencev1beta2_videosegment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVideointelligenceV1beta2VideoContext:
    r"""Video context and/or feature-specific parameters."""
    
    explicit_content_detection_config: Optional[shared_googlecloudvideointelligencev1beta2_explicitcontentdetectionconfig.GoogleCloudVideointelligenceV1beta2ExplicitContentDetectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explicitContentDetectionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for EXPLICIT_CONTENT_DETECTION."""  
    face_detection_config: Optional[shared_googlecloudvideointelligencev1beta2_facedetectionconfig.GoogleCloudVideointelligenceV1beta2FaceDetectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('faceDetectionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for FACE_DETECTION."""  
    label_detection_config: Optional[shared_googlecloudvideointelligencev1beta2_labeldetectionconfig.GoogleCloudVideointelligenceV1beta2LabelDetectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelDetectionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for LABEL_DETECTION."""  
    object_tracking_config: Optional[shared_googlecloudvideointelligencev1beta2_objecttrackingconfig.GoogleCloudVideointelligenceV1beta2ObjectTrackingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectTrackingConfig'), 'exclude': lambda f: f is None }})
    r"""Config for OBJECT_TRACKING."""  
    person_detection_config: Optional[shared_googlecloudvideointelligencev1beta2_persondetectionconfig.GoogleCloudVideointelligenceV1beta2PersonDetectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personDetectionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for PERSON_DETECTION."""  
    segments: Optional[list[shared_googlecloudvideointelligencev1beta2_videosegment.GoogleCloudVideointelligenceV1beta2VideoSegment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segments'), 'exclude': lambda f: f is None }})
    r"""Video segments to annotate. The segments may overlap and are not required to be contiguous or span the whole video. If unspecified, each video is treated as a single segment."""  
    shot_change_detection_config: Optional[shared_googlecloudvideointelligencev1beta2_shotchangedetectionconfig.GoogleCloudVideointelligenceV1beta2ShotChangeDetectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shotChangeDetectionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for SHOT_CHANGE_DETECTION."""  
    speech_transcription_config: Optional[shared_googlecloudvideointelligencev1beta2_speechtranscriptionconfig.GoogleCloudVideointelligenceV1beta2SpeechTranscriptionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('speechTranscriptionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for SPEECH_TRANSCRIPTION."""  
    text_detection_config: Optional[shared_googlecloudvideointelligencev1beta2_textdetectionconfig.GoogleCloudVideointelligenceV1beta2TextDetectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textDetectionConfig'), 'exclude': lambda f: f is None }})
    r"""Config for TEXT_DETECTION."""  
    