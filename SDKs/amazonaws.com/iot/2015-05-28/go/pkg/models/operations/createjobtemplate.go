// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateJobTemplatePathParams struct {
	// A unique identifier for the job template. We recommend using a UUID. Alpha-numeric characters, "-", and "_" are valid for use here.
	JobTemplateID string `pathParam:"style=simple,explode=false,name=jobTemplateId"`
}

type CreateJobTemplateHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateJobTemplateRequestBodyAbortConfig - The criteria that determine when and how a job abort takes place.
type CreateJobTemplateRequestBodyAbortConfig struct {
	CriteriaList []shared.AbortCriteria `json:"criteriaList,omitempty"`
}

// CreateJobTemplateRequestBodyJobExecutionsRetryConfig - The configuration that determines how many retries are allowed for each failure type for a job.
type CreateJobTemplateRequestBodyJobExecutionsRetryConfig struct {
	CriteriaList []shared.RetryCriteria `json:"criteriaList,omitempty"`
}

// CreateJobTemplateRequestBodyJobExecutionsRolloutConfig - Allows you to create a staged rollout of a job.
type CreateJobTemplateRequestBodyJobExecutionsRolloutConfig struct {
	ExponentialRate  *shared.ExponentialRolloutRate `json:"exponentialRate,omitempty"`
	MaximumPerMinute *int64                         `json:"maximumPerMinute,omitempty"`
}

// CreateJobTemplateRequestBodyPresignedURLConfig - Configuration for pre-signed S3 URLs.
type CreateJobTemplateRequestBodyPresignedURLConfig struct {
	ExpiresInSec *int64  `json:"expiresInSec,omitempty"`
	RoleArn      *string `json:"roleArn,omitempty"`
}

// CreateJobTemplateRequestBodyTimeoutConfig - Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.
type CreateJobTemplateRequestBodyTimeoutConfig struct {
	InProgressTimeoutInMinutes *int64 `json:"inProgressTimeoutInMinutes,omitempty"`
}

type CreateJobTemplateRequestBody struct {
	// The criteria that determine when and how a job abort takes place.
	AbortConfig *CreateJobTemplateRequestBodyAbortConfig `json:"abortConfig,omitempty"`
	// A description of the job document.
	Description string `json:"description"`
	// The job document. Required if you don't specify a value for <code>documentSource</code>.
	Document *string `json:"document,omitempty"`
	// <p>An S3 link to the job document to use in the template. Required if you don't specify a value for <code>document</code>.</p> <note> <p>If the job document resides in an S3 bucket, you must use a placeholder link when specifying the document.</p> <p>The placeholder link is of the following form:</p> <p> <code>${aws:iot:s3-presigned-url:https://s3.amazonaws.com/<i>bucket</i>/<i>key</i>}</code> </p> <p>where <i>bucket</i> is your bucket name and <i>key</i> is the object in the bucket to which you are linking.</p> </note>
	DocumentSource *string `json:"documentSource,omitempty"`
	// The ARN of the job to use as the basis for the job template.
	JobArn *string `json:"jobArn,omitempty"`
	// The configuration that determines how many retries are allowed for each failure type for a job.
	JobExecutionsRetryConfig *CreateJobTemplateRequestBodyJobExecutionsRetryConfig `json:"jobExecutionsRetryConfig,omitempty"`
	// Allows you to create a staged rollout of a job.
	JobExecutionsRolloutConfig *CreateJobTemplateRequestBodyJobExecutionsRolloutConfig `json:"jobExecutionsRolloutConfig,omitempty"`
	// Configuration for pre-signed S3 URLs.
	PresignedURLConfig *CreateJobTemplateRequestBodyPresignedURLConfig `json:"presignedUrlConfig,omitempty"`
	// Metadata that can be used to manage the job template.
	Tags []shared.Tag `json:"tags,omitempty"`
	// Specifies the amount of time each device has to finish its execution of the job. A timer is started when the job execution status is set to <code>IN_PROGRESS</code>. If the job execution status is not set to another terminal state before the timer expires, it will be automatically set to <code>TIMED_OUT</code>.
	TimeoutConfig *CreateJobTemplateRequestBodyTimeoutConfig `json:"timeoutConfig,omitempty"`
}

type CreateJobTemplateRequest struct {
	PathParams CreateJobTemplatePathParams
	Headers    CreateJobTemplateHeaders
	Request    CreateJobTemplateRequestBody `request:"mediaType=application/json"`
}

type CreateJobTemplateResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateJobTemplateResponse *shared.CreateJobTemplateResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
