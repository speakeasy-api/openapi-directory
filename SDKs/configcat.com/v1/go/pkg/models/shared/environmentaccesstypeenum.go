// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EnvironmentAccessTypeEnum string

const (
	EnvironmentAccessTypeEnumFull     EnvironmentAccessTypeEnum = "full"
	EnvironmentAccessTypeEnumReadOnly EnvironmentAccessTypeEnum = "readOnly"
	EnvironmentAccessTypeEnumNone     EnvironmentAccessTypeEnum = "none"
)

func (e EnvironmentAccessTypeEnum) ToPointer() *EnvironmentAccessTypeEnum {
	return &e
}

func (e *EnvironmentAccessTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "full":
		fallthrough
	case "readOnly":
		fallthrough
	case "none":
		*e = EnvironmentAccessTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnvironmentAccessTypeEnum: %v", v)
	}
}
