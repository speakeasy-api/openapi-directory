/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BooleanFilter } from "./booleanfilter";
import { DateFilter } from "./datefilter";
import { IpFilter } from "./ipfilter";
import { KeywordFilter } from "./keywordfilter";
import { MapFilter } from "./mapfilter";
import { NumberFilter } from "./numberfilter";
import { StringFilter } from "./stringfilter";
import { Expose, Type } from "class-transformer";

/**
 * <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>
 */
export class AwsSecurityFindingFilters extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "AwsAccountId" })
  @Type(() => StringFilter)
  awsAccountId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "CompanyName" })
  @Type(() => StringFilter)
  companyName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ComplianceAssociatedStandardsId" })
  @Type(() => StringFilter)
  complianceAssociatedStandardsId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ComplianceSecurityControlId" })
  @Type(() => StringFilter)
  complianceSecurityControlId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ComplianceStatus" })
  @Type(() => StringFilter)
  complianceStatus?: StringFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "Confidence" })
  @Type(() => NumberFilter)
  confidence?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "CreatedAt" })
  @Type(() => DateFilter)
  createdAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "Criticality" })
  @Type(() => NumberFilter)
  criticality?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "Description" })
  @Type(() => StringFilter)
  description?: StringFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "FindingProviderFieldsConfidence" })
  @Type(() => NumberFilter)
  findingProviderFieldsConfidence?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "FindingProviderFieldsCriticality" })
  @Type(() => NumberFilter)
  findingProviderFieldsCriticality?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "FindingProviderFieldsRelatedFindingsId" })
  @Type(() => StringFilter)
  findingProviderFieldsRelatedFindingsId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "FindingProviderFieldsRelatedFindingsProductArn" })
  @Type(() => StringFilter)
  findingProviderFieldsRelatedFindingsProductArn?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "FindingProviderFieldsSeverityLabel" })
  @Type(() => StringFilter)
  findingProviderFieldsSeverityLabel?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "FindingProviderFieldsSeverityOriginal" })
  @Type(() => StringFilter)
  findingProviderFieldsSeverityOriginal?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "FindingProviderFieldsTypes" })
  @Type(() => StringFilter)
  findingProviderFieldsTypes?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "FirstObservedAt" })
  @Type(() => DateFilter)
  firstObservedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "GeneratorId" })
  @Type(() => StringFilter)
  generatorId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "Id" })
  @Type(() => StringFilter)
  id?: StringFilter[];

  @SpeakeasyMetadata({ elemType: KeywordFilter })
  @Expose({ name: "Keyword" })
  @Type(() => KeywordFilter)
  keyword?: KeywordFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "LastObservedAt" })
  @Type(() => DateFilter)
  lastObservedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "MalwareName" })
  @Type(() => StringFilter)
  malwareName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "MalwarePath" })
  @Type(() => StringFilter)
  malwarePath?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "MalwareState" })
  @Type(() => StringFilter)
  malwareState?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "MalwareType" })
  @Type(() => StringFilter)
  malwareType?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NetworkDestinationDomain" })
  @Type(() => StringFilter)
  networkDestinationDomain?: StringFilter[];

  @SpeakeasyMetadata({ elemType: IpFilter })
  @Expose({ name: "NetworkDestinationIpV4" })
  @Type(() => IpFilter)
  networkDestinationIpV4?: IpFilter[];

  @SpeakeasyMetadata({ elemType: IpFilter })
  @Expose({ name: "NetworkDestinationIpV6" })
  @Type(() => IpFilter)
  networkDestinationIpV6?: IpFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "NetworkDestinationPort" })
  @Type(() => NumberFilter)
  networkDestinationPort?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NetworkDirection" })
  @Type(() => StringFilter)
  networkDirection?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NetworkProtocol" })
  @Type(() => StringFilter)
  networkProtocol?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NetworkSourceDomain" })
  @Type(() => StringFilter)
  networkSourceDomain?: StringFilter[];

  @SpeakeasyMetadata({ elemType: IpFilter })
  @Expose({ name: "NetworkSourceIpV4" })
  @Type(() => IpFilter)
  networkSourceIpV4?: IpFilter[];

  @SpeakeasyMetadata({ elemType: IpFilter })
  @Expose({ name: "NetworkSourceIpV6" })
  @Type(() => IpFilter)
  networkSourceIpV6?: IpFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NetworkSourceMac" })
  @Type(() => StringFilter)
  networkSourceMac?: StringFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "NetworkSourcePort" })
  @Type(() => NumberFilter)
  networkSourcePort?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NoteText" })
  @Type(() => StringFilter)
  noteText?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "NoteUpdatedAt" })
  @Type(() => DateFilter)
  noteUpdatedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "NoteUpdatedBy" })
  @Type(() => StringFilter)
  noteUpdatedBy?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "ProcessLaunchedAt" })
  @Type(() => DateFilter)
  processLaunchedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ProcessName" })
  @Type(() => StringFilter)
  processName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "ProcessParentPid" })
  @Type(() => NumberFilter)
  processParentPid?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ProcessPath" })
  @Type(() => StringFilter)
  processPath?: StringFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "ProcessPid" })
  @Type(() => NumberFilter)
  processPid?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "ProcessTerminatedAt" })
  @Type(() => DateFilter)
  processTerminatedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ProductArn" })
  @Type(() => StringFilter)
  productArn?: StringFilter[];

  @SpeakeasyMetadata({ elemType: MapFilter })
  @Expose({ name: "ProductFields" })
  @Type(() => MapFilter)
  productFields?: MapFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ProductName" })
  @Type(() => StringFilter)
  productName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "RecommendationText" })
  @Type(() => StringFilter)
  recommendationText?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "RecordState" })
  @Type(() => StringFilter)
  recordState?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "Region" })
  @Type(() => StringFilter)
  region?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "RelatedFindingsId" })
  @Type(() => StringFilter)
  relatedFindingsId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "RelatedFindingsProductArn" })
  @Type(() => StringFilter)
  relatedFindingsProductArn?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsEc2InstanceIamInstanceProfileArn" })
  @Type(() => StringFilter)
  resourceAwsEc2InstanceIamInstanceProfileArn?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsEc2InstanceImageId" })
  @Type(() => StringFilter)
  resourceAwsEc2InstanceImageId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: IpFilter })
  @Expose({ name: "ResourceAwsEc2InstanceIpV4Addresses" })
  @Type(() => IpFilter)
  resourceAwsEc2InstanceIpV4Addresses?: IpFilter[];

  @SpeakeasyMetadata({ elemType: IpFilter })
  @Expose({ name: "ResourceAwsEc2InstanceIpV6Addresses" })
  @Type(() => IpFilter)
  resourceAwsEc2InstanceIpV6Addresses?: IpFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsEc2InstanceKeyName" })
  @Type(() => StringFilter)
  resourceAwsEc2InstanceKeyName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "ResourceAwsEc2InstanceLaunchedAt" })
  @Type(() => DateFilter)
  resourceAwsEc2InstanceLaunchedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsEc2InstanceSubnetId" })
  @Type(() => StringFilter)
  resourceAwsEc2InstanceSubnetId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsEc2InstanceType" })
  @Type(() => StringFilter)
  resourceAwsEc2InstanceType?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsEc2InstanceVpcId" })
  @Type(() => StringFilter)
  resourceAwsEc2InstanceVpcId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "ResourceAwsIamAccessKeyCreatedAt" })
  @Type(() => DateFilter)
  resourceAwsIamAccessKeyCreatedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsIamAccessKeyPrincipalName" })
  @Type(() => StringFilter)
  resourceAwsIamAccessKeyPrincipalName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsIamAccessKeyStatus" })
  @Type(() => StringFilter)
  resourceAwsIamAccessKeyStatus?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsIamAccessKeyUserName" })
  @Type(() => StringFilter)
  resourceAwsIamAccessKeyUserName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsIamUserUserName" })
  @Type(() => StringFilter)
  resourceAwsIamUserUserName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsS3BucketOwnerId" })
  @Type(() => StringFilter)
  resourceAwsS3BucketOwnerId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceAwsS3BucketOwnerName" })
  @Type(() => StringFilter)
  resourceAwsS3BucketOwnerName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceContainerImageId" })
  @Type(() => StringFilter)
  resourceContainerImageId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceContainerImageName" })
  @Type(() => StringFilter)
  resourceContainerImageName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "ResourceContainerLaunchedAt" })
  @Type(() => DateFilter)
  resourceContainerLaunchedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceContainerName" })
  @Type(() => StringFilter)
  resourceContainerName?: StringFilter[];

  @SpeakeasyMetadata({ elemType: MapFilter })
  @Expose({ name: "ResourceDetailsOther" })
  @Type(() => MapFilter)
  resourceDetailsOther?: MapFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceId" })
  @Type(() => StringFilter)
  resourceId?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourcePartition" })
  @Type(() => StringFilter)
  resourcePartition?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceRegion" })
  @Type(() => StringFilter)
  resourceRegion?: StringFilter[];

  @SpeakeasyMetadata({ elemType: MapFilter })
  @Expose({ name: "ResourceTags" })
  @Type(() => MapFilter)
  resourceTags?: MapFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ResourceType" })
  @Type(() => StringFilter)
  resourceType?: StringFilter[];

  @SpeakeasyMetadata({ elemType: BooleanFilter })
  @Expose({ name: "Sample" })
  @Type(() => BooleanFilter)
  sample?: BooleanFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "SeverityLabel" })
  @Type(() => StringFilter)
  severityLabel?: StringFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "SeverityNormalized" })
  @Type(() => NumberFilter)
  severityNormalized?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: NumberFilter })
  @Expose({ name: "SeverityProduct" })
  @Type(() => NumberFilter)
  severityProduct?: NumberFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "SourceUrl" })
  @Type(() => StringFilter)
  sourceUrl?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ThreatIntelIndicatorCategory" })
  @Type(() => StringFilter)
  threatIntelIndicatorCategory?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "ThreatIntelIndicatorLastObservedAt" })
  @Type(() => DateFilter)
  threatIntelIndicatorLastObservedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ThreatIntelIndicatorSource" })
  @Type(() => StringFilter)
  threatIntelIndicatorSource?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ThreatIntelIndicatorSourceUrl" })
  @Type(() => StringFilter)
  threatIntelIndicatorSourceUrl?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ThreatIntelIndicatorType" })
  @Type(() => StringFilter)
  threatIntelIndicatorType?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "ThreatIntelIndicatorValue" })
  @Type(() => StringFilter)
  threatIntelIndicatorValue?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "Title" })
  @Type(() => StringFilter)
  title?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "Type" })
  @Type(() => StringFilter)
  type?: StringFilter[];

  @SpeakeasyMetadata({ elemType: DateFilter })
  @Expose({ name: "UpdatedAt" })
  @Type(() => DateFilter)
  updatedAt?: DateFilter[];

  @SpeakeasyMetadata({ elemType: MapFilter })
  @Expose({ name: "UserDefinedFields" })
  @Type(() => MapFilter)
  userDefinedFields?: MapFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "VerificationState" })
  @Type(() => StringFilter)
  verificationState?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "WorkflowState" })
  @Type(() => StringFilter)
  workflowState?: StringFilter[];

  @SpeakeasyMetadata({ elemType: StringFilter })
  @Expose({ name: "WorkflowStatus" })
  @Type(() => StringFilter)
  workflowStatus?: StringFilter[];
}
