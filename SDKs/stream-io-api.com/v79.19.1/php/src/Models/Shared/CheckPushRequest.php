<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CheckPushRequest
{
    /**
     * Push message template for APN
     * 
     * @var ?string $apnTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('apn_template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apnTemplate = null;
    
    /**
     * Push message data template for Firebase
     * 
     * @var ?string $firebaseDataTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('firebase_data_template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firebaseDataTemplate = null;
    
    /**
     * Push message template for Firebase
     * 
     * @var ?string $firebaseTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('firebase_template')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firebaseTemplate = null;
    
    /**
     * Message ID to send push notification for
     * 
     * @var ?string $messageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $messageId = null;
    
    /**
     * Name of push provider
     * 
     * @var ?string $pushProviderName
     */
	#[\JMS\Serializer\Annotation\SerializedName('push_provider_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pushProviderName = null;
    
    /**
     * Push provider type
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CheckPushRequestTypeOfPushProviderEnum $pushProviderType
     */
	#[\JMS\Serializer\Annotation\SerializedName('push_provider_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CheckPushRequestTypeOfPushProviderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CheckPushRequestTypeOfPushProviderEnum $pushProviderType = null;
    
    /**
     * Don't require existing devices to render templates
     * 
     * @var ?bool $skipDevices
     */
	#[\JMS\Serializer\Annotation\SerializedName('skip_devices')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $skipDevices = null;
    
    /**
     * Represents chat user
     * 
     * @var ?array<string, mixed> $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $user = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->apnTemplate = null;
		$this->firebaseDataTemplate = null;
		$this->firebaseTemplate = null;
		$this->messageId = null;
		$this->pushProviderName = null;
		$this->pushProviderType = null;
		$this->skipDevices = null;
		$this->user = null;
		$this->userId = null;
	}
}
