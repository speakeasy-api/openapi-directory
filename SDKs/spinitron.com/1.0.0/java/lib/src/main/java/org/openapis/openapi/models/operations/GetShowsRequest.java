/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetShowsRequest {
    /**
     * Amount of items to return
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=count")
    public Long count;
    public GetShowsRequest withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * The ending datetime. Maximum 1 hour in past.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=end")
    public OffsetDateTime end;
    public GetShowsRequest withEnd(OffsetDateTime end) {
        this.end = end;
        return this;
    }
    
    /**
     * Allows to select extra fields
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=expand")
    public String[] expand;
    public GetShowsRequest withExpand(String[] expand) {
        this.expand = expand;
        return this;
    }
    
    /**
     * Allows to select only needed fields
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String[] fields;
    public GetShowsRequest withFields(String[] fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Offset, used together with count
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GetShowsRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The datetime starting from items must be returned. Maximum 1 hour in past.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=start")
    public OffsetDateTime start;
    public GetShowsRequest withStart(OffsetDateTime start) {
        this.start = start;
        return this;
    }
    
}
