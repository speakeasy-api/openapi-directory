// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListMeetingTemplatesPathParams struct {
	// Unique identifier of the user. Retrieve the value of this field by calling the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/users/users) API.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type ListMeetingTemplatesRequest struct {
	PathParams ListMeetingTemplatesPathParams
}

type ListMeetingTemplates200ApplicationXMLTemplates struct {
	// Unique identifier of the template.
	ID *string
	// Name of the template.
	Name *string
	// Type of the template. The value of this field can be one of the following:<br>
	// `1`: meeting template <br>
	// `2`: admin meeting template
	Type *int64
}

// ListMeetingTemplates200ApplicationXML - **HTTP Status Code:** `200` **OK** <br>
type ListMeetingTemplates200ApplicationXML struct {
	Templates []ListMeetingTemplates200ApplicationXMLTemplates
	// Total records found for this request.
	TotalRecords *int64
}

type ListMeetingTemplates200ApplicationJSONTemplates struct {
	// Unique identifier of the template.
	ID *string `json:"id,omitempty"`
	// Name of the template.
	Name *string `json:"name,omitempty"`
	// Type of the template. The value of this field can be one of the following:<br>
	// `1`: meeting template <br>
	// `2`: admin meeting template
	Type *int64 `json:"type,omitempty"`
}

// ListMeetingTemplates200ApplicationJSON - **HTTP Status Code:** `200` **OK** <br>
type ListMeetingTemplates200ApplicationJSON struct {
	Templates []ListMeetingTemplates200ApplicationJSONTemplates `json:"templates,omitempty"`
	// Total records found for this request.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListMeetingTemplatesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK** <br>
	ListMeetingTemplates200ApplicationJSONObject *ListMeetingTemplates200ApplicationJSON
}
