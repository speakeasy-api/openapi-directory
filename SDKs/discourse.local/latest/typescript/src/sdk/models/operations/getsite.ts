/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetSite200ApplicationJSONArchetypes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: any[];
}

export class GetSite200ApplicationJSONCategoriesRequiredTagGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "min_count" })
  minCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class GetSite200ApplicationJSONCategories extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allow_global_tags" })
  allowGlobalTags: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "allowed_tag_groups" })
  allowedTagGroups: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "allowed_tags" })
  allowedTags: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit" })
  canEdit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "color" })
  color: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "default_list_filter" })
  defaultListFilter: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_top_period" })
  defaultTopPeriod: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_view" })
  defaultView: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description_excerpt" })
  descriptionExcerpt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description_text" })
  descriptionText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "form_template_ids" })
  formTemplateIds?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "has_children" })
  hasChildren: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "minimum_required_tags" })
  minimumRequiredTags: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "navigate_to_first_post_after_read" })
  navigateToFirstPostAfterRead: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notification_level" })
  notificationLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "num_featured_topics" })
  numFeaturedTopics: number;

  @SpeakeasyMetadata()
  @Expose({ name: "parent_category_id" })
  parentCategoryId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission: number;

  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_count" })
  postCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "read_only_banner" })
  readOnlyBanner: string;

  @SpeakeasyMetadata()
  @Expose({ name: "read_restricted" })
  readRestricted: boolean;

  @SpeakeasyMetadata({
    elemType: GetSite200ApplicationJSONCategoriesRequiredTagGroups,
  })
  @Expose({ name: "required_tag_groups" })
  @Type(() => GetSite200ApplicationJSONCategoriesRequiredTagGroups)
  requiredTagGroups: GetSite200ApplicationJSONCategoriesRequiredTagGroups[];

  @SpeakeasyMetadata()
  @Expose({ name: "show_subcategory_list" })
  showSubcategoryList: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sort_ascending" })
  sortAscending: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sort_order" })
  sortOrder: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subcategory_list_style" })
  subcategoryListStyle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "text_color" })
  textColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_count" })
  topicCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_template" })
  topicTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_url" })
  topicUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_background" })
  uploadedBackground: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_logo" })
  uploadedLogo: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_logo_dark" })
  uploadedLogoDark: string;
}

export class GetSite200ApplicationJSONGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class GetSite200ApplicationJSONNotificationTypes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assigned" })
  assigned?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmark_reminder" })
  bookmarkReminder: number;

  @SpeakeasyMetadata()
  @Expose({ name: "chat_group_mention" })
  chatGroupMention: number;

  @SpeakeasyMetadata()
  @Expose({ name: "chat_invitation" })
  chatInvitation: number;

  @SpeakeasyMetadata()
  @Expose({ name: "chat_mention" })
  chatMention: number;

  @SpeakeasyMetadata()
  @Expose({ name: "chat_message" })
  chatMessage: number;

  @SpeakeasyMetadata()
  @Expose({ name: "chat_quoted" })
  chatQuoted?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "circles_activity" })
  circlesActivity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "code_review_commit_approved" })
  codeReviewCommitApproved: number;

  @SpeakeasyMetadata()
  @Expose({ name: "custom" })
  custom: number;

  @SpeakeasyMetadata()
  @Expose({ name: "edited" })
  edited: number;

  @SpeakeasyMetadata()
  @Expose({ name: "event_invitation" })
  eventInvitation: number;

  @SpeakeasyMetadata()
  @Expose({ name: "event_reminder" })
  eventReminder: number;

  @SpeakeasyMetadata()
  @Expose({ name: "following" })
  following?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "following_created_topic" })
  followingCreatedTopic?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "following_replied" })
  followingReplied?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "granted_badge" })
  grantedBadge: number;

  @SpeakeasyMetadata()
  @Expose({ name: "group_mentioned" })
  groupMentioned: number;

  @SpeakeasyMetadata()
  @Expose({ name: "group_message_summary" })
  groupMessageSummary: number;

  @SpeakeasyMetadata()
  @Expose({ name: "invited_to_private_message" })
  invitedToPrivateMessage: number;

  @SpeakeasyMetadata()
  @Expose({ name: "invited_to_topic" })
  invitedToTopic: number;

  @SpeakeasyMetadata()
  @Expose({ name: "invitee_accepted" })
  inviteeAccepted: number;

  @SpeakeasyMetadata()
  @Expose({ name: "liked" })
  liked: number;

  @SpeakeasyMetadata()
  @Expose({ name: "liked_consolidated" })
  likedConsolidated: number;

  @SpeakeasyMetadata()
  @Expose({ name: "linked" })
  linked: number;

  @SpeakeasyMetadata()
  @Expose({ name: "membership_request_accepted" })
  membershipRequestAccepted: number;

  @SpeakeasyMetadata()
  @Expose({ name: "membership_request_consolidated" })
  membershipRequestConsolidated: number;

  @SpeakeasyMetadata()
  @Expose({ name: "mentioned" })
  mentioned: number;

  @SpeakeasyMetadata()
  @Expose({ name: "moved_post" })
  movedPost: number;

  @SpeakeasyMetadata()
  @Expose({ name: "new_features" })
  newFeatures?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_approved" })
  postApproved: number;

  @SpeakeasyMetadata()
  @Expose({ name: "posted" })
  posted: number;

  @SpeakeasyMetadata()
  @Expose({ name: "private_message" })
  privateMessage: number;

  @SpeakeasyMetadata()
  @Expose({ name: "question_answer_user_commented" })
  questionAnswerUserCommented?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "quoted" })
  quoted: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reaction" })
  reaction: number;

  @SpeakeasyMetadata()
  @Expose({ name: "replied" })
  replied: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_reminder" })
  topicReminder: number;

  @SpeakeasyMetadata()
  @Expose({ name: "votes_released" })
  votesReleased: number;

  @SpeakeasyMetadata()
  @Expose({ name: "watching_category_or_tag" })
  watchingCategoryOrTag: number;

  @SpeakeasyMetadata()
  @Expose({ name: "watching_first_post" })
  watchingFirstPost: number;
}

export class GetSite200ApplicationJSONPostActionTypes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_custom_flag" })
  isCustomFlag: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_flag" })
  isFlag: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name_key" })
  nameKey: string;

  @SpeakeasyMetadata()
  @Expose({ name: "short_description" })
  shortDescription: string;
}

export class GetSite200ApplicationJSONPostTypes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "moderator_action" })
  moderatorAction: number;

  @SpeakeasyMetadata()
  @Expose({ name: "regular" })
  regular: number;

  @SpeakeasyMetadata()
  @Expose({ name: "small_action" })
  smallAction: number;

  @SpeakeasyMetadata()
  @Expose({ name: "whisper" })
  whisper: number;
}

export class GetSite200ApplicationJSONTopicFlagTypes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_custom_flag" })
  isCustomFlag: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_flag" })
  isFlag: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name_key" })
  nameKey: string;

  @SpeakeasyMetadata()
  @Expose({ name: "short_description" })
  shortDescription: string;
}

export class GetSite200ApplicationJSONTrustLevels extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "basic" })
  basic: number;

  @SpeakeasyMetadata()
  @Expose({ name: "leader" })
  leader: number;

  @SpeakeasyMetadata()
  @Expose({ name: "member" })
  member: number;

  @SpeakeasyMetadata()
  @Expose({ name: "newuser" })
  newuser: number;

  @SpeakeasyMetadata()
  @Expose({ name: "regular" })
  regular: number;
}

export class GetSite200ApplicationJSONUserColorSchemes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_dark" })
  isDark: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class GetSite200ApplicationJSONUserThemes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "color_scheme_id" })
  colorSchemeId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "default" })
  default: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "theme_id" })
  themeId: number;
}

/**
 * success response
 */
export class GetSite200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "anonymous_top_menu_items" })
  anonymousTopMenuItems: any[];

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONArchetypes })
  @Expose({ name: "archetypes" })
  @Type(() => GetSite200ApplicationJSONArchetypes)
  archetypes: GetSite200ApplicationJSONArchetypes[];

  @SpeakeasyMetadata()
  @Expose({ name: "auth_providers" })
  authProviders: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "can_associate_groups" })
  canAssociateGroups?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_create_tag" })
  canCreateTag: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_tag_pms" })
  canTagPms: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_tag_topics" })
  canTagTopics: boolean;

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONCategories })
  @Expose({ name: "categories" })
  @Type(() => GetSite200ApplicationJSONCategories)
  categories: GetSite200ApplicationJSONCategories[];

  @SpeakeasyMetadata()
  @Expose({ name: "censored_regexp" })
  censoredRegexp: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "custom_emoji_translation" })
  customEmojiTranslation: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "default_archetype" })
  defaultArchetype: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_dark_color_scheme" })
  defaultDarkColorScheme: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "displayed_about_plugin_stat_groups" })
  displayedAboutPluginStatGroups?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "filters" })
  filters: any[];

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONGroups })
  @Expose({ name: "groups" })
  @Type(() => GetSite200ApplicationJSONGroups)
  groups: GetSite200ApplicationJSONGroups[];

  @SpeakeasyMetadata()
  @Expose({ name: "hashtag_configurations" })
  hashtagConfigurations?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "hashtag_icons" })
  hashtagIcons?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "markdown_additional_options" })
  markdownAdditionalOptions?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "notification_types" })
  @Type(() => GetSite200ApplicationJSONNotificationTypes)
  notificationTypes: GetSite200ApplicationJSONNotificationTypes;

  @SpeakeasyMetadata()
  @Expose({ name: "periods" })
  periods: any[];

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONPostActionTypes })
  @Expose({ name: "post_action_types" })
  @Type(() => GetSite200ApplicationJSONPostActionTypes)
  postActionTypes: GetSite200ApplicationJSONPostActionTypes[];

  @SpeakeasyMetadata()
  @Expose({ name: "post_types" })
  @Type(() => GetSite200ApplicationJSONPostTypes)
  postTypes: GetSite200ApplicationJSONPostTypes;

  @SpeakeasyMetadata()
  @Expose({ name: "show_welcome_topic_banner" })
  showWelcomeTopicBanner?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "tags_filter_regexp" })
  tagsFilterRegexp: string;

  @SpeakeasyMetadata()
  @Expose({ name: "top_menu_items" })
  topMenuItems: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "top_tags" })
  topTags: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "topic_featured_link_allowed_category_ids" })
  topicFeaturedLinkAllowedCategoryIds: any[];

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONTopicFlagTypes })
  @Expose({ name: "topic_flag_types" })
  @Type(() => GetSite200ApplicationJSONTopicFlagTypes)
  topicFlagTypes: GetSite200ApplicationJSONTopicFlagTypes[];

  @SpeakeasyMetadata()
  @Expose({ name: "trust_levels" })
  @Type(() => GetSite200ApplicationJSONTrustLevels)
  trustLevels: GetSite200ApplicationJSONTrustLevels;

  @SpeakeasyMetadata()
  @Expose({ name: "uncategorized_category_id" })
  uncategorizedCategoryId: number;

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONUserColorSchemes })
  @Expose({ name: "user_color_schemes" })
  @Type(() => GetSite200ApplicationJSONUserColorSchemes)
  userColorSchemes: GetSite200ApplicationJSONUserColorSchemes[];

  @SpeakeasyMetadata()
  @Expose({ name: "user_field_max_length" })
  userFieldMaxLength: number;

  @SpeakeasyMetadata()
  @Expose({ name: "user_fields" })
  userFields: any[];

  @SpeakeasyMetadata({ elemType: GetSite200ApplicationJSONUserThemes })
  @Expose({ name: "user_themes" })
  @Type(() => GetSite200ApplicationJSONUserThemes)
  userThemes: GetSite200ApplicationJSONUserThemes[];

  @SpeakeasyMetadata()
  @Expose({ name: "watched_words_link" })
  watchedWordsLink: string;

  @SpeakeasyMetadata()
  @Expose({ name: "watched_words_replace" })
  watchedWordsReplace: string;

  @SpeakeasyMetadata()
  @Expose({ name: "whispers_allowed_groups_names" })
  whispersAllowedGroupsNames?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "wizard_required" })
  wizardRequired?: boolean;
}

export class GetSiteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success response
   */
  @SpeakeasyMetadata()
  getSite200ApplicationJSONObject?: GetSite200ApplicationJSON;
}
