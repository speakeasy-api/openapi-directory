<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * PreprintsCreatePreprintRelationshipsInput - URLs to other entities or entity collections that have a relationship to the preprint entity.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class PreprintsCreatePreprintRelationshipsInput
{
    /**
     * A relationship to the bibliographic contributors that are listed as contributing to this preprint.
     * 
     * @var ?string $bibliographicContributors
     */
	#[\JMS\Serializer\Annotation\SerializedName('bibliographic_contributors')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bibliographicContributors = null;
    
    /**
     * A relationship to the license that has been applied to the preprint.
     * 
     * @var ?string $license
     */
	#[\JMS\Serializer\Annotation\SerializedName('license')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $license = null;
    
    /**
     * A relationship to the node that was created for the preprint, or from which the preprint was created.
     * 
     * @var string $node
     */
	#[\JMS\Serializer\Annotation\SerializedName('node')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $node;
    
    /**
     * A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
     * 
     * @var string $primaryFile
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary_file')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $primaryFile;
    
    /**
     * A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
     * 
     * @var string $provider
     */
	#[\JMS\Serializer\Annotation\SerializedName('provider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $provider;
    
	public function __construct()
	{
		$this->bibliographicContributors = null;
		$this->license = null;
		$this->node = "";
		$this->primaryFile = "";
		$this->provider = "";
	}
}
