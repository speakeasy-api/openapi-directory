"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mounteddatadisk as shared_mounteddatadisk
from ..shared import streamingcomputationranges as shared_streamingcomputationranges
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StreamingComputationTaskTaskTypeEnum(str, Enum):
    r"""A type of streaming computation task."""
    STREAMING_COMPUTATION_TASK_UNKNOWN = 'STREAMING_COMPUTATION_TASK_UNKNOWN'
    STREAMING_COMPUTATION_TASK_STOP = 'STREAMING_COMPUTATION_TASK_STOP'
    STREAMING_COMPUTATION_TASK_START = 'STREAMING_COMPUTATION_TASK_START'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StreamingComputationTask:
    r"""A task which describes what action should be performed for the specified streaming computation ranges."""
    
    computation_ranges: Optional[list[shared_streamingcomputationranges.StreamingComputationRanges]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computationRanges'), 'exclude': lambda f: f is None }})
    r"""Contains ranges of a streaming computation this task should apply to."""  
    data_disks: Optional[list[shared_mounteddatadisk.MountedDataDisk]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataDisks'), 'exclude': lambda f: f is None }})
    r"""Describes the set of data disks this task should apply to."""  
    task_type: Optional[StreamingComputationTaskTaskTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskType'), 'exclude': lambda f: f is None }})
    r"""A type of streaming computation task."""  
    