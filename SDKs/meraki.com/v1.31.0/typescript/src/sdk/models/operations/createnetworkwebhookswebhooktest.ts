/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateNetworkWebhooksWebhookTestRequestBody extends SpeakeasyBase {
  /**
   * The type of alert which the test webhook will send. Optional. Defaults to power_supply_down.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alertTypeId" })
  alertTypeId?: string;

  /**
   * The ID of the payload template of the test webhook. Defaults to the HTTP server's template ID if one exists for the given URL, or Generic template ID otherwise
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payloadTemplateId" })
  payloadTemplateId?: string;

  /**
   * The name of the payload template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payloadTemplateName" })
  payloadTemplateName?: string;

  /**
   * The shared secret the test webhook will send. Optional. Defaults to an empty string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sharedSecret" })
  sharedSecret?: string;

  /**
   * The URL where the test webhook will be sent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

export class CreateNetworkWebhooksWebhookTestRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateNetworkWebhooksWebhookTestRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

/**
 * Current status of the webhook delivery
 */
export enum CreateNetworkWebhooksWebhookTest201ApplicationJSONStatusEnum {
  Abandoned = "abandoned",
  Delivered = "delivered",
  Enqueued = "enqueued",
  Processing = "processing",
  Retrying = "retrying",
}

/**
 * Successful operation
 */
export class CreateNetworkWebhooksWebhookTest201ApplicationJSON extends SpeakeasyBase {
  /**
   * Webhook delivery identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Current status of the webhook delivery
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CreateNetworkWebhooksWebhookTest201ApplicationJSONStatusEnum;

  /**
   * URL where the webhook was delivered
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class CreateNetworkWebhooksWebhookTestResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createNetworkWebhooksWebhookTest201ApplicationJSONObject?: CreateNetworkWebhooksWebhookTest201ApplicationJSON;
}
