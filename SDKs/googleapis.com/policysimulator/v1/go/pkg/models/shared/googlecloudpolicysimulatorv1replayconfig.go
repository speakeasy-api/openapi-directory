// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum - The logs to use as input for the Replay.
type GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum string

const (
	GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnumLogSourceUnspecified GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum = "LOG_SOURCE_UNSPECIFIED"
	GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnumRecentAccesses       GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum = "RECENT_ACCESSES"
)

func (e *GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOG_SOURCE_UNSPECIFIED":
		fallthrough
	case "RECENT_ACCESSES":
		*e = GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum: %s", s)
	}
}

// GoogleCloudPolicysimulatorV1ReplayConfig - The configuration used for a Replay.
type GoogleCloudPolicysimulatorV1ReplayConfig struct {
	// The logs to use as input for the Replay.
	LogSource *GoogleCloudPolicysimulatorV1ReplayConfigLogSourceEnum `json:"logSource,omitempty"`
	// A mapping of the resources that you want to simulate policies for and the policies that you want to simulate. Keys are the full resource names for the resources. For example, `//cloudresourcemanager.googleapis.com/projects/my-project`. For examples of full resource names for Google Cloud services, see https://cloud.google.com/iam/help/troubleshooter/full-resource-names. Values are Policy objects representing the policies that you want to simulate. Replays automatically take into account any IAM policies inherited through the resource hierarchy, and any policies set on descendant resources. You do not need to include these policies in the policy overlay.
	PolicyOverlay map[string]GoogleIamV1Policy `json:"policyOverlay,omitempty"`
}
