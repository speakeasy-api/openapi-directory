/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MediaV1PlayerStreamer - Created
 */
public class MediaV1PlayerStreamer {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the PlayerStreamer resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public MediaV1PlayerStreamer withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public MediaV1PlayerStreamer withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public MediaV1PlayerStreamer withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ended_reason")
    public PlayerStreamerEnumEndedReasonEnum endedReason;

    public MediaV1PlayerStreamer withEndedReason(PlayerStreamerEnumEndedReasonEnum endedReason) {
        this.endedReason = endedReason;
        return this;
    }
    
    /**
     * The URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public MediaV1PlayerStreamer withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The maximum time, in seconds, that the PlayerStreamer is active (`created` or `started`) before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the PlayerStreamer, regardless of whether media is still streaming.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_duration")
    public Long maxDuration;

    public MediaV1PlayerStreamer withMaxDuration(Long maxDuration) {
        this.maxDuration = maxDuration;
        return this;
    }
    
    /**
     * The unique string generated to identify the PlayerStreamer resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public MediaV1PlayerStreamer withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public PlayerStreamerEnumStatusEnum status;

    public MediaV1PlayerStreamer withStatus(PlayerStreamerEnumStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The URL to which Twilio will send asynchronous webhook requests for every PlayerStreamer event. See [Status Callbacks](/docs/live/status-callbacks) for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_callback")
    public String statusCallback;

    public MediaV1PlayerStreamer withStatusCallback(String statusCallback) {
        this.statusCallback = statusCallback;
        return this;
    }
    
    /**
     * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status_callback_method")
    public MediaV1PlayerStreamerStatusCallbackMethodEnum statusCallbackMethod;

    public MediaV1PlayerStreamer withStatusCallbackMethod(MediaV1PlayerStreamerStatusCallbackMethodEnum statusCallbackMethod) {
        this.statusCallbackMethod = statusCallbackMethod;
        return this;
    }
    
    /**
     * The absolute URL of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public MediaV1PlayerStreamer withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Specifies whether the PlayerStreamer is configured to stream video. Defaults to `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("video")
    public Boolean video;

    public MediaV1PlayerStreamer withVideo(Boolean video) {
        this.video = video;
        return this;
    }
    
    public MediaV1PlayerStreamer(){}
}
