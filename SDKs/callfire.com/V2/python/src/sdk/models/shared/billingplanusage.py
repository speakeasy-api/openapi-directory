"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillingPlanUsage:
    r"""Contains statistics of billing plan usage"""
    
    interval_end: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intervalEnd'), 'exclude': lambda f: f is None }})
    r"""End of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    interval_start: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intervalStart'), 'exclude': lambda f: f is None }})
    r"""Start of usage period formatted in unix time milliseconds. Example: 1473781817000 for Sat, 05 Jan 1985 14:03:37 GMT"""  
    remaining_pay_as_you_go_credits: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remainingPayAsYouGoCredits'), 'exclude': lambda f: f is None }})
    r"""Remaining pay as you go credits are rounded to nearest whole value"""  
    remaining_plan_credits: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remainingPlanCredits'), 'exclude': lambda f: f is None }})
    r"""Remaining credits are rounded to nearest whole value associated with a plan"""  
    total_remaining_credits: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalRemainingCredits'), 'exclude': lambda f: f is None }})
    r"""Total number of remaining credits (remainingPlanCredits + remainingPayAsYouGoCredits)"""  
    