"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AssignmentSubtypeEnum(str, Enum):
    r"""The sub-type of this event."""
    SUBTYPE_UNSPECIFIED = 'SUBTYPE_UNSPECIFIED'
    ADDED = 'ADDED'
    DELETED = 'DELETED'
    REPLY_ADDED = 'REPLY_ADDED'
    REPLY_DELETED = 'REPLY_DELETED'
    RESOLVED = 'RESOLVED'
    REOPENED = 'REOPENED'
    REASSIGNED = 'REASSIGNED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Assignment:
    r"""A comment with an assignment."""
    
    assigned_user: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignedUser'), 'exclude': lambda f: f is None }})
    r"""Information about an end user."""  
    subtype: Optional[AssignmentSubtypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subtype'), 'exclude': lambda f: f is None }})
    r"""The sub-type of this event."""  
    