// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SearchCatalogSecurity struct {
	CustomerAccessCode string `security:"scheme,type=oauth2,name=Authorization"`
}

type SearchCatalogAssetTypeEnum string

const (
	SearchCatalogAssetTypeEnumImage          SearchCatalogAssetTypeEnum = "image"
	SearchCatalogAssetTypeEnumVideo          SearchCatalogAssetTypeEnum = "video"
	SearchCatalogAssetTypeEnumAudio          SearchCatalogAssetTypeEnum = "audio"
	SearchCatalogAssetTypeEnumElements       SearchCatalogAssetTypeEnum = "elements"
	SearchCatalogAssetTypeEnumEditorialImage SearchCatalogAssetTypeEnum = "editorial-image"
	SearchCatalogAssetTypeEnumEditorialVideo SearchCatalogAssetTypeEnum = "editorial-video"
)

func (e SearchCatalogAssetTypeEnum) ToPointer() *SearchCatalogAssetTypeEnum {
	return &e
}

func (e *SearchCatalogAssetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "image":
		fallthrough
	case "video":
		fallthrough
	case "audio":
		fallthrough
	case "elements":
		fallthrough
	case "editorial-image":
		fallthrough
	case "editorial-video":
		*e = SearchCatalogAssetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchCatalogAssetTypeEnum: %v", v)
	}
}

// SearchCatalogSortEnum - Sort by
type SearchCatalogSortEnum string

const (
	SearchCatalogSortEnumNewest SearchCatalogSortEnum = "newest"
	SearchCatalogSortEnumOldest SearchCatalogSortEnum = "oldest"
)

func (e SearchCatalogSortEnum) ToPointer() *SearchCatalogSortEnum {
	return &e
}

func (e *SearchCatalogSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "newest":
		fallthrough
	case "oldest":
		*e = SearchCatalogSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchCatalogSortEnum: %v", v)
	}
}

type SearchCatalogRequest struct {
	// Filter by asset type
	AssetType []SearchCatalogAssetTypeEnum `queryParam:"style=form,explode=true,name=asset_type"`
	// Filter by collection id
	CollectionID []string `queryParam:"style=form,explode=true,name=collection_id"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// One or more search terms separated by spaces
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Sort by
	Sort *SearchCatalogSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type SearchCatalogResponse struct {
	// OK
	CatalogCollectionItemDataList *shared.CatalogCollectionItemDataList
	ContentType                   string
	StatusCode                    int
	RawResponse                   *http.Response
}
