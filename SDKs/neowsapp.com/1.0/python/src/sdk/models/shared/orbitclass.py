"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OrbitClassOrbitClassTypeEnum(str, Enum):
    IEO = 'IEO'
    ATE = 'ATE'
    APO = 'APO'
    AMO = 'AMO'
    MCA = 'MCA'
    IMB = 'IMB'
    MBA = 'MBA'
    OMB = 'OMB'
    TJN = 'TJN'
    CEN = 'CEN'
    TNO = 'TNO'
    PAA = 'PAA'
    HYA = 'HYA'
    HYP = 'HYP'
    PAR = 'PAR'
    COM = 'COM'
    JFC = 'JFC'
    HTC = 'HTC'
    ETC = 'ETC'
    CTC = 'CTC'
    J_FC = 'JFc'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrbitClass:
    
    orbit_class_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orbit_class_description'), 'exclude': lambda f: f is None }})  
    orbit_class_range: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orbit_class_range'), 'exclude': lambda f: f is None }})  
    orbit_class_type: Optional[OrbitClassOrbitClassTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orbit_class_type'), 'exclude': lambda f: f is None }})  
    