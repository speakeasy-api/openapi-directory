"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestStopTestRunResponse = exports.TestStopTestRunTestRun = exports.TestStopTestRunTestRunTestRunStatistics = exports.TestStopTestRunRequest = exports.TestStopTestRunSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var TestStopTestRunSecurity = /** @class */ (function (_super) {
    __extends(TestStopTestRunSecurity, _super);
    function TestStopTestRunSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], TestStopTestRunSecurity.prototype, "apiToken", void 0);
    return TestStopTestRunSecurity;
}(utils_1.SpeakeasyBase));
exports.TestStopTestRunSecurity = TestStopTestRunSecurity;
var TestStopTestRunRequest = /** @class */ (function (_super) {
    __extends(TestStopTestRunRequest, _super);
    function TestStopTestRunRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], TestStopTestRunRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], TestStopTestRunRequest.prototype, "ownerName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=test_run_id",
        }),
        __metadata("design:type", String)
    ], TestStopTestRunRequest.prototype, "testRunId", void 0);
    return TestStopTestRunRequest;
}(utils_1.SpeakeasyBase));
exports.TestStopTestRunRequest = TestStopTestRunRequest;
/**
 * Summary single test run on Xamarin Test Cloud
 */
var TestStopTestRunTestRunTestRunStatistics = /** @class */ (function (_super) {
    __extends(TestStopTestRunTestRunTestRunStatistics, _super);
    function TestStopTestRunTestRunTestRunStatistics() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devices" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "devices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicesFailed" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "devicesFailed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "devicesFinished" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "devicesFinished", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "failed" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "failed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "passed" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "passed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peakMemory" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "peakMemory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "skipped" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "skipped", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "total", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "totalDeviceMinutes" }),
        __metadata("design:type", Number)
    ], TestStopTestRunTestRunTestRunStatistics.prototype, "totalDeviceMinutes", void 0);
    return TestStopTestRunTestRunTestRunStatistics;
}(utils_1.SpeakeasyBase));
exports.TestStopTestRunTestRunTestRunStatistics = TestStopTestRunTestRunTestRunStatistics;
/**
 * Summary single test run on Xamarin Test Cloud
 */
var TestStopTestRunTestRun = /** @class */ (function (_super) {
    __extends(TestStopTestRunTestRun, _super);
    function TestStopTestRunTestRun() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "appVersion" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "appVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "date" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "date", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "platform" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "platform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "resultStatus" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "resultStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runStatus" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "runStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stats" }),
        (0, class_transformer_1.Type)(function () { return TestStopTestRunTestRunTestRunStatistics; }),
        __metadata("design:type", TestStopTestRunTestRunTestRunStatistics)
    ], TestStopTestRunTestRun.prototype, "stats", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "testSeries" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "testSeries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "testType" }),
        __metadata("design:type", String)
    ], TestStopTestRunTestRun.prototype, "testType", void 0);
    return TestStopTestRunTestRun;
}(utils_1.SpeakeasyBase));
exports.TestStopTestRunTestRun = TestStopTestRunTestRun;
var TestStopTestRunResponse = /** @class */ (function (_super) {
    __extends(TestStopTestRunResponse, _super);
    function TestStopTestRunResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], TestStopTestRunResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], TestStopTestRunResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], TestStopTestRunResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", TestStopTestRunTestRun)
    ], TestStopTestRunResponse.prototype, "testRun", void 0);
    return TestStopTestRunResponse;
}(utils_1.SpeakeasyBase));
exports.TestStopTestRunResponse = TestStopTestRunResponse;
