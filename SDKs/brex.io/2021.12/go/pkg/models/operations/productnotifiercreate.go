// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type ProductNotifierCreateSecurity struct {
	UserKey shared.SchemeUserKey `security:"scheme,type=apiKey,subtype=header"`
}

type ProductNotifierCreatePathParams struct {
	// ID of the ProductOrder as returned from a /product/buy call - 32 character hex value
	OrderID string `pathParam:"style=simple,explode=false,name=orderId"`
	// Type of the notifier - indicates the action the notifier will perform. Currently GET and POST are supported which performs an http(s) GET/POST to the supplied uri with appended notifierId= and orderId= parameters when the order processing is completed. Upon the POST request the order object is sent as a JSON body
	Type string `pathParam:"style=simple,explode=false,name=type"`
	// URI of the notifier for the 'complete' action. Currently only a GET method HTTP(s) URL is supported. 1 to 250 characters long. Every slash in the URI must be replaced by a ~
	URI string `pathParam:"style=simple,explode=false,name=uri"`
}

type ProductNotifierCreateRequest struct {
	PathParams ProductNotifierCreatePathParams
	Security   ProductNotifierCreateSecurity
}

// ProductNotifierCreateDefaultApplicationJSON - Detailed information about the error
type ProductNotifierCreateDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

// ProductNotifierCreate200ApplicationJSON - Details of configured product order notification
type ProductNotifierCreate200ApplicationJSON struct {
	Callback             string     `json:"callback"`
	Identity             *string    `json:"identity,omitempty"`
	LastCallTime         types.Date `json:"lastCallTime"`
	LastResponseCode     int64      `json:"lastResponseCode"`
	NotifierType         string     `json:"notifierType"`
	ProductOrderIdentity string     `json:"productOrderIdentity"`
}

type ProductNotifierCreateResponse struct {
	ContentType string
	// Details of configured product order notification
	ProductNotifierCreate200ApplicationJSONObject *ProductNotifierCreate200ApplicationJSON
	// Detailed information about the error
	ProductNotifierCreateDefaultApplicationJSONObject *ProductNotifierCreateDefaultApplicationJSON
	StatusCode                                        int
	RawResponse                                       *http.Response
}
