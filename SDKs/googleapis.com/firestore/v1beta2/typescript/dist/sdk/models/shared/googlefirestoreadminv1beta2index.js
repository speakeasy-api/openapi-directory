"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GoogleFirestoreAdminV1beta2Index = exports.GoogleFirestoreAdminV1beta2IndexStateEnum = exports.GoogleFirestoreAdminV1beta2IndexQueryScopeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var googlefirestoreadminv1beta2indexfield_1 = require("./googlefirestoreadminv1beta2indexfield");
var class_transformer_1 = require("class-transformer");
/**
 * Indexes with a collection query scope specified allow queries against a collection that is the child of a specific document, specified at query time, and that has the same collection id. Indexes with a collection group query scope specified allow queries against all collections descended from a specific document, specified at query time, and that have the same collection id as this index.
 */
var GoogleFirestoreAdminV1beta2IndexQueryScopeEnum;
(function (GoogleFirestoreAdminV1beta2IndexQueryScopeEnum) {
    GoogleFirestoreAdminV1beta2IndexQueryScopeEnum["QueryScopeUnspecified"] = "QUERY_SCOPE_UNSPECIFIED";
    GoogleFirestoreAdminV1beta2IndexQueryScopeEnum["Collection"] = "COLLECTION";
    GoogleFirestoreAdminV1beta2IndexQueryScopeEnum["CollectionGroup"] = "COLLECTION_GROUP";
})(GoogleFirestoreAdminV1beta2IndexQueryScopeEnum = exports.GoogleFirestoreAdminV1beta2IndexQueryScopeEnum || (exports.GoogleFirestoreAdminV1beta2IndexQueryScopeEnum = {}));
/**
 * Output only. The serving state of the index.
 */
var GoogleFirestoreAdminV1beta2IndexStateEnum;
(function (GoogleFirestoreAdminV1beta2IndexStateEnum) {
    GoogleFirestoreAdminV1beta2IndexStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    GoogleFirestoreAdminV1beta2IndexStateEnum["Creating"] = "CREATING";
    GoogleFirestoreAdminV1beta2IndexStateEnum["Ready"] = "READY";
    GoogleFirestoreAdminV1beta2IndexStateEnum["NeedsRepair"] = "NEEDS_REPAIR";
})(GoogleFirestoreAdminV1beta2IndexStateEnum = exports.GoogleFirestoreAdminV1beta2IndexStateEnum || (exports.GoogleFirestoreAdminV1beta2IndexStateEnum = {}));
/**
 * Cloud Firestore indexes enable simple and complex queries against documents in a database.
 */
var GoogleFirestoreAdminV1beta2Index = /** @class */ (function (_super) {
    __extends(GoogleFirestoreAdminV1beta2Index, _super);
    function GoogleFirestoreAdminV1beta2Index() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: googlefirestoreadminv1beta2indexfield_1.GoogleFirestoreAdminV1beta2IndexField }),
        (0, class_transformer_1.Expose)({ name: "fields" }),
        (0, class_transformer_1.Type)(function () { return googlefirestoreadminv1beta2indexfield_1.GoogleFirestoreAdminV1beta2IndexField; }),
        __metadata("design:type", Array)
    ], GoogleFirestoreAdminV1beta2Index.prototype, "fields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GoogleFirestoreAdminV1beta2Index.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "queryScope" }),
        __metadata("design:type", String)
    ], GoogleFirestoreAdminV1beta2Index.prototype, "queryScope", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], GoogleFirestoreAdminV1beta2Index.prototype, "state", void 0);
    return GoogleFirestoreAdminV1beta2Index;
}(utils_1.SpeakeasyBase));
exports.GoogleFirestoreAdminV1beta2Index = GoogleFirestoreAdminV1beta2Index;
