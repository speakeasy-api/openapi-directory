/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MapRunExecutionCounts } from "./maprunexecutioncounts";
import { MapRunItemCounts } from "./maprunitemcounts";
import { MapRunStatusEnum } from "./maprunstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeMapRunOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "executionArn" })
  executionArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executionCounts" })
  @Type(() => MapRunExecutionCounts)
  executionCounts: MapRunExecutionCounts;

  @SpeakeasyMetadata()
  @Expose({ name: "itemCounts" })
  @Type(() => MapRunItemCounts)
  itemCounts: MapRunItemCounts;

  @SpeakeasyMetadata()
  @Expose({ name: "mapRunArn" })
  mapRunArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "maxConcurrency" })
  maxConcurrency: number;

  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: MapRunStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stopDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "toleratedFailureCount" })
  toleratedFailureCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "toleratedFailurePercentage" })
  toleratedFailurePercentage: number;
}
