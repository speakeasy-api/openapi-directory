/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LifecyclePolicyRuleAction } from "./lifecyclepolicyruleaction";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The result of the lifecycle policy preview.
 */
export class LifecyclePolicyPreviewResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  @Type(() => LifecyclePolicyRuleAction)
  action?: LifecyclePolicyRuleAction;

  @SpeakeasyMetadata()
  @Expose({ name: "appliedRulePriority" })
  appliedRulePriority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "imageDigest" })
  imageDigest?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "imagePushedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  imagePushedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "imageTags" })
  imageTags?: string[];
}
