"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricmetadata as shared_metricmetadata
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MetricCompatibilityCompatibilityEnum(str, Enum):
    r"""The compatibility of this metric. If the compatibility is COMPATIBLE, this metric can be successfully added to the report."""
    COMPATIBILITY_UNSPECIFIED = 'COMPATIBILITY_UNSPECIFIED'
    COMPATIBLE = 'COMPATIBLE'
    INCOMPATIBLE = 'INCOMPATIBLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetricCompatibility:
    r"""The compatibility for a single metric."""
    
    compatibility: Optional[MetricCompatibilityCompatibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compatibility'), 'exclude': lambda f: f is None }})
    r"""The compatibility of this metric. If the compatibility is COMPATIBLE, this metric can be successfully added to the report."""  
    metric_metadata: Optional[shared_metricmetadata.MetricMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricMetadata'), 'exclude': lambda f: f is None }})
    r"""Explains a metric."""  
    