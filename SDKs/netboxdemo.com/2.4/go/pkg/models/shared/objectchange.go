// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ObjectChangeActionEnum string

const (
	ObjectChangeActionEnumOne   ObjectChangeActionEnum = "1"
	ObjectChangeActionEnumTwo   ObjectChangeActionEnum = "2"
	ObjectChangeActionEnumThree ObjectChangeActionEnum = "3"
)

func (e *ObjectChangeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		*e = ObjectChangeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ObjectChangeActionEnum: %s", s)
	}
}

type ObjectChange struct {
	Action        ObjectChangeActionEnum `json:"action"`
	ChangedObject *string                `json:"changed_object,omitempty"`
	ContentType   *string                `json:"content_type,omitempty"`
	ID            *int64                 `json:"id,omitempty"`
	ObjectData    *string                `json:"object_data,omitempty"`
	RequestID     *string                `json:"request_id,omitempty"`
	Time          *time.Time             `json:"time,omitempty"`
	User          *NestedUser            `json:"user,omitempty"`
	UserName      *string                `json:"user_name,omitempty"`
}
