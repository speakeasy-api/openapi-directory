"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlehomeenterprisesdmv1parentrelation as shared_googlehomeenterprisesdmv1parentrelation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleHomeEnterpriseSdmV1Device:
    r"""Device resource represents an instance of enterprise managed device in the property."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The resource name of the device. For example: \\"enterprises/XYZ/devices/123\\"."""  
    parent_relations: Optional[list[shared_googlehomeenterprisesdmv1parentrelation.GoogleHomeEnterpriseSdmV1ParentRelation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentRelations'), 'exclude': lambda f: f is None }})
    r"""Assignee details of the device."""  
    traits: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('traits'), 'exclude': lambda f: f is None }})
    r"""Output only. Device traits."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Output only. Type of the device for general display purposes. For example: \\"THERMOSTAT\\". The device type should not be used to deduce or infer functionality of the actual device it is assigned to. Instead, use the returned traits for the device."""  
    