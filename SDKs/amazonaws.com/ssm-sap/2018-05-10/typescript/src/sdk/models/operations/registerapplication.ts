/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The type of the application.
 */
export enum RegisterApplicationRequestBodyApplicationTypeEnum {
  Hana = "HANA",
}

export class RegisterApplicationRequestBody extends SpeakeasyBase {
  /**
   * The ID of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationId" })
  applicationId: string;

  /**
   * The type of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationType" })
  applicationType: RegisterApplicationRequestBodyApplicationTypeEnum;

  /**
   * The credentials of the SAP application.
   */
  @SpeakeasyMetadata({ elemType: shared.ApplicationCredential })
  @Expose({ name: "Credentials" })
  @Type(() => shared.ApplicationCredential)
  credentials: shared.ApplicationCredential[];

  /**
   * The Amazon EC2 instances on which your SAP application is running.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Instances" })
  instances: string[];

  /**
   * The SAP instance number of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SapInstanceNumber" })
  sapInstanceNumber?: string;

  /**
   * The System ID of the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Sid" })
  sid?: string;

  /**
   * The tags to be attached to the SAP application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}

export class RegisterApplicationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: RegisterApplicationRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class RegisterApplicationResponse extends SpeakeasyBase {
  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  registerApplicationOutput?: shared.RegisterApplicationOutput;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
