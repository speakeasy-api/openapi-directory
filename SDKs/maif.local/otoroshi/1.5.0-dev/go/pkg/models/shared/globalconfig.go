// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// GlobalConfig - The global config object of Otoroshi, used to customize settings of the current Otoroshi instance
type GlobalConfig struct {
	// Email addresses that will receive all Otoroshi alert events
	AlertsEmails []string `json:"alertsEmails"`
	// Webhook that will receive all Otoroshi alert events
	AlertsWebhooks []Webhook `json:"alertsWebhooks"`
	// Webhook that will receive all internal Otoroshi events
	AnalyticsWebhooks []Webhook `json:"analyticsWebhooks"`
	// If enabled, Admin API won't be able to write/update/delete entities
	APIReadOnly bool `json:"apiReadOnly"`
	// If not defined, every new service descriptor will be added to the default group
	AutoLinkToDefaultGroup bool `json:"autoLinkToDefaultGroup"`
	// Configuration for Auth0 domain
	BackofficeAuth0Config *Auth0Config `json:"backofficeAuth0Config,omitempty"`
	// Configuration for CleverCloud client
	CleverSettings *CleverSettings `json:"cleverSettings,omitempty"`
	// The configuration for elastic access
	ElasticReadsConfig *ElasticConfig `json:"elasticReadsConfig,omitempty"`
	// Configs. for Elastic writes
	ElasticWritesConfigs []ElasticConfig `json:"elasticWritesConfigs,omitempty"`
	// IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros
	EndlessIPAddresses []string `json:"endlessIpAddresses"`
	// The filtering configuration block for a service of globally.
	IPFiltering IPFiltering `json:"ipFiltering"`
	// If enabled, Otoroshi will reject new request if too much at the same time
	LimitConcurrentRequests bool `json:"limitConcurrentRequests"`
	// Possibles lines for Otoroshi
	Lines []string `json:"lines,omitempty"`
	// Configuration for mailgun api client
	MailerSettings *MailerSettings `json:"mailerSettings,omitempty"`
	// The number of authorized request processed at the same time
	MaxConcurrentRequests int64 `json:"maxConcurrentRequests"`
	// The max size in bytes of an HTTP 1.0 response
	MaxHttp10ResponseSize *int64 `json:"maxHttp10ResponseSize,omitempty"`
	// Number of events kept locally
	MaxLogsSize *int `json:"maxLogsSize,omitempty"`
	// Use middle finger emoji as a response character for endless HTTP responses
	MiddleFingers *bool `json:"middleFingers,omitempty"`
	// Authorized number of calls per second globally per IP address, measured on 10 seconds
	PerIPThrottlingQuota int64 `json:"perIpThrottlingQuota"`
	// Configuration for Auth0 domain
	PrivateAppsAuth0Config *Auth0Config `json:"privateAppsAuth0Config,omitempty"`
	// HTTP will be streamed only. Doesn't work with old browsers
	StreamEntityOnly bool `json:"streamEntityOnly"`
	// Authorized number of calls per second globally, measured on 10 seconds
	ThrottlingQuota int64 `json:"throttlingQuota"`
	// If enabled, login to backoffice through Auth0 will be disabled
	U2fLoginOnly bool `json:"u2fLoginOnly"`
	// If enabled, services will be authorized to use circuit breakers
	UseCircuitBreakers bool `json:"useCircuitBreakers"`
}
