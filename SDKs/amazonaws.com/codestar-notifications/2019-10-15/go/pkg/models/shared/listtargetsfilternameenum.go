// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ListTargetsFilterNameEnum string

const (
	ListTargetsFilterNameEnumTargetType    ListTargetsFilterNameEnum = "TARGET_TYPE"
	ListTargetsFilterNameEnumTargetAddress ListTargetsFilterNameEnum = "TARGET_ADDRESS"
	ListTargetsFilterNameEnumTargetStatus  ListTargetsFilterNameEnum = "TARGET_STATUS"
)

func (e ListTargetsFilterNameEnum) ToPointer() *ListTargetsFilterNameEnum {
	return &e
}

func (e *ListTargetsFilterNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TARGET_TYPE":
		fallthrough
	case "TARGET_ADDRESS":
		fallthrough
	case "TARGET_STATUS":
		*e = ListTargetsFilterNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTargetsFilterNameEnum: %v", v)
	}
}
