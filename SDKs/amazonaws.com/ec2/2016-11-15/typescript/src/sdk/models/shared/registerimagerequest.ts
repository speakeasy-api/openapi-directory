/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BootModeValuesEnum } from "./bootmodevaluesenum";
import { ImdsSupportValuesEnum } from "./imdssupportvaluesenum";
import { TpmSupportValuesEnum } from "./tpmsupportvaluesenum";

/**
 * <p>The architecture of the AMI.</p> <p>Default: For Amazon EBS-backed AMIs, <code>i386</code>. For instance store-backed AMIs, the architecture specified in the manifest file.</p>
 */
export enum RegisterImageRequestArchitectureEnum {
  I386 = "i386",
  X8664 = "x86_64",
  Arm64 = "arm64",
  X8664Mac = "x86_64_mac",
  Arm64Mac = "arm64_mac",
}

/**
 * The volume type. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">Amazon EBS volume types</a> in the <i>Amazon EC2 User Guide</i>. If the volume type is <code>io1</code> or <code>io2</code>, you must specify the IOPS that the volume supports.
 */
export enum RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum {
  Standard = "standard",
  Io1 = "io1",
  Io2 = "io2",
  Gp2 = "gp2",
  Sc1 = "sc1",
  St1 = "st1",
  Gp3 = "gp3",
}

/**
 * Parameters used to automatically set up EBS volumes when the instance is launched.
 */
export class RegisterImageRequestBlockDeviceMappingsEbs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  deleteOnTermination?: boolean;

  @SpeakeasyMetadata()
  encrypted?: boolean;

  @SpeakeasyMetadata()
  iops?: number;

  @SpeakeasyMetadata()
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  outpostArn?: string;

  @SpeakeasyMetadata()
  snapshotId?: string;

  @SpeakeasyMetadata()
  throughput?: number;

  @SpeakeasyMetadata()
  volumeSize?: number;

  @SpeakeasyMetadata()
  volumeType?: RegisterImageRequestBlockDeviceMappingsEbsVolumeTypeEnum;
}

/**
 * Describes a block device mapping, which defines the EBS volumes and instance store volumes to attach to an instance at launch.
 */
export class RegisterImageRequestBlockDeviceMappings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  deviceName?: string;

  @SpeakeasyMetadata()
  ebs?: RegisterImageRequestBlockDeviceMappingsEbs;

  @SpeakeasyMetadata()
  noDevice?: string;

  @SpeakeasyMetadata()
  virtualName?: string;
}

/**
 * Contains the parameters for RegisterImage.
 */
export class RegisterImageRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  architecture?: RegisterImageRequestArchitectureEnum;

  @SpeakeasyMetadata()
  billingProducts?: string[];

  @SpeakeasyMetadata({ elemType: RegisterImageRequestBlockDeviceMappings })
  blockDeviceMappings?: RegisterImageRequestBlockDeviceMappings[];

  @SpeakeasyMetadata()
  bootMode?: BootModeValuesEnum;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  dryRun?: boolean;

  @SpeakeasyMetadata()
  enaSupport?: boolean;

  @SpeakeasyMetadata()
  imageLocation?: string;

  @SpeakeasyMetadata()
  imdsSupport?: ImdsSupportValuesEnum;

  @SpeakeasyMetadata()
  kernelId?: string;

  @SpeakeasyMetadata()
  name: string;

  @SpeakeasyMetadata()
  ramdiskId?: string;

  @SpeakeasyMetadata()
  rootDeviceName?: string;

  @SpeakeasyMetadata()
  sriovNetSupport?: string;

  @SpeakeasyMetadata()
  tpmSupport?: TpmSupportValuesEnum;

  @SpeakeasyMetadata()
  uefiData?: string;

  @SpeakeasyMetadata()
  virtualizationType?: string;
}
