/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComponentSource } from "./componentsource";
import { ComponentTransform } from "./componenttransform";
import { StageSource } from "./stagesource";
import { Expose, Type } from "class-transformer";

/**
 * Type of transform this stage is executing.
 */
export enum ExecutionStageSummaryKindEnum {
  UnknownKind = "UNKNOWN_KIND",
  ParDoKind = "PAR_DO_KIND",
  GroupByKeyKind = "GROUP_BY_KEY_KIND",
  FlattenKind = "FLATTEN_KIND",
  ReadKind = "READ_KIND",
  WriteKind = "WRITE_KIND",
  ConstantKind = "CONSTANT_KIND",
  SingletonKind = "SINGLETON_KIND",
  ShuffleKind = "SHUFFLE_KIND",
}

/**
 * Description of the composing transforms, names/ids, and input/outputs of a stage of execution. Some composing transforms and sources may have been generated by the Dataflow service during execution planning.
 */
export class ExecutionStageSummary extends SpeakeasyBase {
  /**
   * Collections produced and consumed by component transforms of this stage.
   */
  @SpeakeasyMetadata({ elemType: ComponentSource })
  @Expose({ name: "componentSource" })
  @Type(() => ComponentSource)
  componentSource?: ComponentSource[];

  /**
   * Transforms that comprise this execution stage.
   */
  @SpeakeasyMetadata({ elemType: ComponentTransform })
  @Expose({ name: "componentTransform" })
  @Type(() => ComponentTransform)
  componentTransform?: ComponentTransform[];

  /**
   * Dataflow service generated id for this stage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Input sources for this stage.
   */
  @SpeakeasyMetadata({ elemType: StageSource })
  @Expose({ name: "inputSource" })
  @Type(() => StageSource)
  inputSource?: StageSource[];

  /**
   * Type of transform this stage is executing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: ExecutionStageSummaryKindEnum;

  /**
   * Dataflow service generated name for this stage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output sources for this stage.
   */
  @SpeakeasyMetadata({ elemType: StageSource })
  @Expose({ name: "outputSource" })
  @Type(() => StageSource)
  outputSource?: StageSource[];

  /**
   * Other stages that must complete before this stage can run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prerequisiteStage" })
  prerequisiteStage?: string[];
}
