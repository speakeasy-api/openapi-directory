// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BalanceLookupTypeEnum - A constant representing the object's type. For this resource it will always be `balance_lookup`.
type BalanceLookupTypeEnum string

const (
	BalanceLookupTypeEnumBalanceLookup BalanceLookupTypeEnum = "balance_lookup"
)

func (e BalanceLookupTypeEnum) ToPointer() *BalanceLookupTypeEnum {
	return &e
}

func (e *BalanceLookupTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "balance_lookup":
		*e = BalanceLookupTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BalanceLookupTypeEnum: %v", v)
	}
}

// BalanceLookup - Represents a request to lookup the balance of an Account at a given point in time.
type BalanceLookup struct {
	// The identifier for the account for which the balance was queried.
	AccountID string `json:"account_id"`
	// The Account's available balance, representing the current balance less any open Pending Transactions on the Account.
	AvailableBalance int64 `json:"available_balance"`
	// The Account's current balance, representing the sum of all posted Transactions on the Account.
	CurrentBalance int64 `json:"current_balance"`
	// A constant representing the object's type. For this resource it will always be `balance_lookup`.
	Type BalanceLookupTypeEnum `json:"type"`
}
