/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NHIndividualFossil - A JSON object describing the individual fossil.
 */
public class NHIndividualFossil {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colors")
    public NHIndividualFossilColorsEnum[] colors;
    public NHIndividualFossil withColors(NHIndividualFossilColorsEnum[] colors) {
        this.colors = colors;
        return this;
    }
    
    /**
     * The name of the group that the fossil belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fossil_group")
    public String fossilGroup;
    public NHIndividualFossil withFossilGroup(String fossilGroup) {
        this.fossilGroup = fossilGroup;
        return this;
    }
    
    /**
     * The base value that the item provides to a player's Happy Home Academy score when placed in their home.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hha_base")
    public Long hhaBase;
    public NHIndividualFossil withHhaBase(Long hhaBase) {
        this.hhaBase = hhaBase;
        return this;
    }
    
    /**
     * Image of the fossil's icon. dodo.ac is Nookipedia's CDN server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;
    public NHIndividualFossil withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * Whether or not the item can be interacted with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interactable")
    public Boolean interactable;
    public NHIndividualFossil withInteractable(Boolean interactable) {
        this.interactable = interactable;
        return this;
    }
    
    /**
     * The length of the fossil.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length")
    public Long length;
    public NHIndividualFossil withLength(Long length) {
        this.length = length;
        return this;
    }
    
    /**
     * The name of the fossil.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NHIndividualFossil withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of bells the item can be sold to Nook's store for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell")
    public Long sell;
    public NHIndividualFossil withSell(Long sell) {
        this.sell = sell;
        return this;
    }
    
    /**
     * Link to the respective Nookipedia article.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public NHIndividualFossil withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The width of the fossil.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Long width;
    public NHIndividualFossil withWidth(Long width) {
        this.width = width;
        return this;
    }
    
}
