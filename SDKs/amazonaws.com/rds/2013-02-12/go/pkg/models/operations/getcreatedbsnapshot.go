// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateDBSnapshotActionEnum
type GETCreateDBSnapshotActionEnum string

const (
	GETCreateDBSnapshotActionEnumCreateDbSnapshot GETCreateDBSnapshotActionEnum = "CreateDBSnapshot"
)

func (e GETCreateDBSnapshotActionEnum) ToPointer() *GETCreateDBSnapshotActionEnum {
	return &e
}

func (e *GETCreateDBSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateDBSnapshot":
		*e = GETCreateDBSnapshotActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBSnapshotActionEnum: %v", v)
	}
}

// GETCreateDBSnapshotVersionEnum
type GETCreateDBSnapshotVersionEnum string

const (
	GETCreateDBSnapshotVersionEnumTwoThousandAndThirteen0212 GETCreateDBSnapshotVersionEnum = "2013-02-12"
)

func (e GETCreateDBSnapshotVersionEnum) ToPointer() *GETCreateDBSnapshotVersionEnum {
	return &e
}

func (e *GETCreateDBSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-02-12":
		*e = GETCreateDBSnapshotVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateDBSnapshotVersionEnum: %v", v)
	}
}

type GETCreateDBSnapshotRequest struct {
	Action               GETCreateDBSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBInstanceIdentifier string                         `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	DBSnapshotIdentifier string                         `queryParam:"style=form,explode=true,name=DBSnapshotIdentifier"`
	Version              GETCreateDBSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm        *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateDBSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
