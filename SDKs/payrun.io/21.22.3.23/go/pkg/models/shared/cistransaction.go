// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CisTransactionCisTransactionCisMessageTypeEnum - The cis transactions' cis message type
type CisTransactionCisTransactionCisMessageTypeEnum string

const (
	CisTransactionCisTransactionCisMessageTypeEnumVerification CisTransactionCisTransactionCisMessageTypeEnum = "Verification"
	CisTransactionCisTransactionCisMessageTypeEnumReturn       CisTransactionCisTransactionCisMessageTypeEnum = "Return"
)

func (e *CisTransactionCisTransactionCisMessageTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Verification":
		fallthrough
	case "Return":
		*e = CisTransactionCisTransactionCisMessageTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CisTransactionCisTransactionCisMessageTypeEnum: %s", s)
	}
}

// CisTransactionCisTransactionEmployerCore - The cis transactions' employer core
type CisTransactionCisTransactionEmployerCore struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// CisTransactionCisTransactionTransactionStatusEnum - The cis transactions' transaction status
type CisTransactionCisTransactionTransactionStatusEnum string

const (
	CisTransactionCisTransactionTransactionStatusEnumNew                  CisTransactionCisTransactionTransactionStatusEnum = "New"
	CisTransactionCisTransactionTransactionStatusEnumRequestGenerated     CisTransactionCisTransactionTransactionStatusEnum = "RequestGenerated"
	CisTransactionCisTransactionTransactionStatusEnumCompletedWithError   CisTransactionCisTransactionTransactionStatusEnum = "CompletedWithError"
	CisTransactionCisTransactionTransactionStatusEnumCompletedWithSuccess CisTransactionCisTransactionTransactionStatusEnum = "CompletedWithSuccess"
	CisTransactionCisTransactionTransactionStatusEnumTimeOut              CisTransactionCisTransactionTransactionStatusEnum = "TimeOut"
)

func (e *CisTransactionCisTransactionTransactionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "New":
		fallthrough
	case "RequestGenerated":
		fallthrough
	case "CompletedWithError":
		fallthrough
	case "CompletedWithSuccess":
		fallthrough
	case "TimeOut":
		*e = CisTransactionCisTransactionTransactionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CisTransactionCisTransactionTransactionStatusEnum: %s", s)
	}
}

type CisTransactionCisTransaction struct {
	// The cis transactions' cis message type
	CisMessageType *CisTransactionCisTransactionCisMessageTypeEnum `json:"CisMessageType,omitempty"`
	// The cis transactions' employer core
	EmployerCore *CisTransactionCisTransactionEmployerCore `json:"EmployerCore,omitempty"`
	// The cis transactions' request data
	RequestData *string `json:"RequestData,omitempty"`
	// The cis transactions' response data
	ResponseData *string `json:"ResponseData,omitempty"`
	// The cis transactions' tax year
	TaxYear *int `json:"TaxYear,omitempty"`
	// The cis transactions' timestamp
	Timestamp *time.Time `json:"Timestamp,omitempty"`
	// The cis transactions' transaction status
	TransactionStatus *CisTransactionCisTransactionTransactionStatusEnum `json:"TransactionStatus,omitempty"`
	// The cis transactions' transmission date
	TransmissionDate *time.Time `json:"TransmissionDate,omitempty"`
}

// CisTransaction - The cis transaction object.
type CisTransaction struct {
	CisTransaction *CisTransactionCisTransaction `json:"CisTransaction,omitempty"`
}
