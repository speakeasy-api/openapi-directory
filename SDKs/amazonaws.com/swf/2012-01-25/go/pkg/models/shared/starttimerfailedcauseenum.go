// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StartTimerFailedCauseEnum string

const (
	StartTimerFailedCauseEnumTimerIDAlreadyInUse       StartTimerFailedCauseEnum = "TIMER_ID_ALREADY_IN_USE"
	StartTimerFailedCauseEnumOpenTimersLimitExceeded   StartTimerFailedCauseEnum = "OPEN_TIMERS_LIMIT_EXCEEDED"
	StartTimerFailedCauseEnumTimerCreationRateExceeded StartTimerFailedCauseEnum = "TIMER_CREATION_RATE_EXCEEDED"
	StartTimerFailedCauseEnumOperationNotPermitted     StartTimerFailedCauseEnum = "OPERATION_NOT_PERMITTED"
)

func (e *StartTimerFailedCauseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TIMER_ID_ALREADY_IN_USE":
		fallthrough
	case "OPEN_TIMERS_LIMIT_EXCEEDED":
		fallthrough
	case "TIMER_CREATION_RATE_EXCEEDED":
		fallthrough
	case "OPERATION_NOT_PERMITTED":
		*e = StartTimerFailedCauseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartTimerFailedCauseEnum: %s", s)
	}
}
