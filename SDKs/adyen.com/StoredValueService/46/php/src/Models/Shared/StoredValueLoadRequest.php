<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class StoredValueLoadRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
    /**
     * The type of load you are trying to do, when absent we default to 'Load'
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StoredValueLoadRequestLoadTypeEnum $loadType
     */
	#[\JMS\Serializer\Annotation\SerializedName('loadType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StoredValueLoadRequestLoadTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoredValueLoadRequestLoadTypeEnum $loadType = null;
    
    /**
     * The merchant account identifier, with which you want to process the transaction.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
    /**
     * The collection that contains the type of the payment method and its specific information if available
     * 
     * @var array<string, string> $paymentMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentMethod')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $paymentMethod;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurringDetailReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $recurringDetailReference = null;
    
    /**
     * The reference to uniquely identify a payment. This reference is used in all communication with you about the payment status. We recommend using a unique value per payment; however, it is not a requirement.
     * 
     * If you need to provide multiple references for a transaction, separate them with hyphens ("-").
     * Maximum length: 80 characters.
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * Specifies the sales channel, through which the shopper gives their card details, and whether the shopper is a returning customer.
     * 
     * For the web service API, Adyen assumes Ecommerce shopper interaction by default.
     * 
     * This field has the following possible values:
     * * `Ecommerce` - Online transactions where the cardholder is present (online). For better authorisation rates, we recommend sending the card security code (CSC) along with the request.
     * * `ContAuth` - Card on file and/or subscription transactions, where the cardholder is known to the merchant (returning customer). If the shopper is present (online), you can supply also the CSC to improve authorisation (one-click payment).
     * * `Moto` - Mail-order and telephone-order transactions where the shopper is in contact with the merchant via email or telephone.
     * * `POS` - Point-of-sale transactions where the shopper is physically present to make a payment using a secure payment terminal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StoredValueLoadRequestShopperInteractionEnum $shopperInteraction
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperInteraction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StoredValueLoadRequestShopperInteractionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoredValueLoadRequestShopperInteractionEnum $shopperInteraction = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('shopperReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperReference = null;
    
    /**
     * The physical store, for which this payment is processed.
     * 
     * @var ?string $store
     */
	#[\JMS\Serializer\Annotation\SerializedName('store')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $store = null;
    
	public function __construct()
	{
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->loadType = null;
		$this->merchantAccount = "";
		$this->paymentMethod = [];
		$this->recurringDetailReference = null;
		$this->reference = "";
		$this->shopperInteraction = null;
		$this->shopperReference = null;
		$this->store = null;
	}
}
