/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClassificationSummary } from "./classificationsummary";
import { Offer } from "./offer";
import { Theme } from "./theme";
import { Expose, Type } from "class-transformer";

/**
 * The type of item
 */
export enum ItemSummaryTypeEnum {
  Movie = "movie",
  Show = "show",
  Season = "season",
  Episode = "episode",
  Program = "program",
  Link = "link",
  Trailer = "trailer",
  Channel = "channel",
  CustomAsset = "customAsset",
}

export class ItemSummary extends SpeakeasyBase {
  /**
   * Advisory text about this item, related to the classification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "advisoryText" })
  advisoryText?: string;

  /**
   * The number of available episodes in the season, if the item is a season.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableEpisodeCount" })
  availableEpisodeCount?: number;

  /**
   * The number of available seasons in the show, if the item is a show.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableSeasonCount" })
  availableSeasonCount?: number;

  /**
   * The average user rating.
   *
   * @remarks
   * When based on user ratings from our system this will be out of 10.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "averageUserRating" })
  averageUserRating?: number;

  /**
   * The badge this item has.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "badge" })
  badge?: string;

  /**
   * The channel short code, if the item is a channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelShortCode" })
  channelShortCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  @Type(() => ClassificationSummary)
  classification?: ClassificationSummary;

  /**
   * A contextually relative title to display after a parent title.
   *
   * @remarks
   * Mostly applicable to Season, Episode and Trailer.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextualTitle" })
  contextualTitle?: string;

  /**
   * A map of custom fields defined by a curator for an item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customFields" })
  customFields?: Record<string, any>;

  /**
   * A custom identifier for this item.
   *
   * @remarks
   * For example the id for this item under a different content system.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customId" })
  customId?: string;

  /**
   * The duration of the media in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * The number of episodes in the season, if the item is a season.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "episodeCount" })
  episodeCount?: number;

  /**
   * The full name of an episode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "episodeName" })
  episodeName?: string;

  /**
   * The number of an episode, if the item is an episode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "episodeNumber" })
  episodeNumber?: number;

  /**
   * The array of genres this item belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "genres" })
  genres?: string[];

  /**
   * Whether closed captioning is available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasClosedCaptions" })
  hasClosedCaptions?: boolean;

  /**
   * Unique identifier for an Item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "images" })
  images?: Record<string, string>;

  /**
   * The array of available offers for this item.
   */
  @SpeakeasyMetadata({ elemType: Offer })
  @Expose({ name: "offers" })
  @Type(() => Offer)
  offers?: Offer[];

  /**
   * The path to the detail page of this item. Can be used to load the item detail page via the /page endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * The year this item was released
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseYear" })
  releaseYear?: number;

  /**
   * The scopes for this item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string[];

  /**
   * The identifier of the season this item belongs to, if the item is an episode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seasonId" })
  seasonId?: string;

  /**
   * The number of a season, if the item is a season.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "seasonNumber" })
  seasonNumber?: number;

  /**
   * A truncated description of the item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortDescription" })
  shortDescription?: string;

  /**
   * The identifier of the show this item belongs to, if the item is a season or episode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showId" })
  showId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "showTitle" })
  showTitle?: string;

  /**
   * Subtype of the item. Mainly used to identify different types when `type`
   *
   * @remarks
   * is `customAsset`
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subtype" })
  subtype?: string;

  /**
   * The tagline of the item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagline" })
  tagline?: string;

  /**
   * Gets themes associated with the item
   */
  @SpeakeasyMetadata({ elemType: Theme })
  @Expose({ name: "themes" })
  @Type(() => Theme)
  themes?: Theme[];

  /**
   * The display title of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  /**
   * The type of item
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ItemSummaryTypeEnum;

  /**
   * The path to watch this item, if the item is a watchable type, e.g. a `movie`, `program` and `episode`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "watchPath" })
  watchPath?: string;
}
