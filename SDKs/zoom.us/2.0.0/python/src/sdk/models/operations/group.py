"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GroupSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GroupRequest:
    
    group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'groupId', 'style': 'simple', 'explode': False }})
    r"""The group ID.<br>
    Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
    """  
    

@dataclasses.dataclass
class Group200ApplicationXML:
    r"""**HTTP Status Code:** `200`<br> Group returned.<br>
    **Error Code:** `200`<br>
    Only available for Paid account,{accountId}.
    """
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Group ID."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Group name."""  
    total_members: Optional[int] = dataclasses.field(default=None)
    r"""Total count of members in the group."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Group200ApplicationJSON:
    r"""**HTTP Status Code:** `200`<br> Group returned.<br>
    **Error Code:** `200`<br>
    Only available for Paid account,{accountId}.
    """
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Group ID."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Group name."""  
    total_members: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_members'), 'exclude': lambda f: f is None }})
    r"""Total count of members in the group."""  
    

@dataclasses.dataclass
class GroupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    group_200_application_json_object: Optional[Group200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br> Group returned.<br>
    **Error Code:** `200`<br>
    Only available for Paid account,{accountId}.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    