"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import v3_disruptionresponse as shared_v3_disruptionresponse
from ..shared import v3_errorresponse as shared_v3_errorresponse
from typing import Optional


@dataclasses.dataclass
class DisruptionsGetDisruptionByIDRequest:
    
    disruption_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'disruption_id', 'style': 'simple', 'explode': False }})
    r"""Identifier of disruption; values returned by Disruptions API - /v3/disruptions OR /v3/disruptions/route/{route_id}"""  
    devid: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'devid', 'style': 'form', 'explode': True }})
    r"""Your developer id"""  
    signature: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'signature', 'style': 'form', 'explode': True }})
    r"""Authentication signature for request"""  
    token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'token', 'style': 'form', 'explode': True }})
    r"""Please ignore"""  
    

@dataclasses.dataclass
class DisruptionsGetDisruptionByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    v3_disruption_response: Optional[shared_v3_disruptionresponse.V3DisruptionResponse] = dataclasses.field(default=None)
    r"""Disruption information for the specified disruption ID."""  
    v3_error_response: Optional[shared_v3_errorresponse.V3ErrorResponse] = dataclasses.field(default=None)
    r"""Invalid Request"""  
    