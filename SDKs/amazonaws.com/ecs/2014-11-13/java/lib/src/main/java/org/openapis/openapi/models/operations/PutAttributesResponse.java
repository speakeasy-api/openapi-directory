/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PutAttributesResponse {
    /**
     * AttributeLimitExceededException
     */
    
    public Object attributeLimitExceededException;

    public PutAttributesResponse withAttributeLimitExceededException(Object attributeLimitExceededException) {
        this.attributeLimitExceededException = attributeLimitExceededException;
        return this;
    }
    
    /**
     * ClusterNotFoundException
     */
    
    public Object clusterNotFoundException;

    public PutAttributesResponse withClusterNotFoundException(Object clusterNotFoundException) {
        this.clusterNotFoundException = clusterNotFoundException;
        return this;
    }
    
    
    public String contentType;

    public PutAttributesResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public PutAttributesResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.PutAttributesResponse putAttributesResponse;

    public PutAttributesResponse withPutAttributesResponse(org.openapis.openapi.models.shared.PutAttributesResponse putAttributesResponse) {
        this.putAttributesResponse = putAttributesResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public PutAttributesResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PutAttributesResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TargetNotFoundException
     */
    
    public Object targetNotFoundException;

    public PutAttributesResponse withTargetNotFoundException(Object targetNotFoundException) {
        this.targetNotFoundException = targetNotFoundException;
        return this;
    }
    
    public PutAttributesResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
