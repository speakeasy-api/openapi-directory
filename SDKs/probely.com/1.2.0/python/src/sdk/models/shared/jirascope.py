"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jira_priority_mapping as shared_jira_priority_mapping
from ..shared import jira_status_mapping as shared_jira_status_mapping
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JiraScope:
    r"""Jira Cloud Target configuration"""
    
    allow_jira: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allow_jira'), 'exclude': lambda f: f is None }})
    r"""Is this target allowed Jira integration."""  
    auto_sync: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auto_sync'), 'exclude': lambda f: f is None }})
    r"""Automatically synchronise all findings to Jira issues."""  
    issue_type_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issue_type_id'), 'exclude': lambda f: f is None }})
    r"""Id of the issue type to be created in Jira."""  
    priority_mapping: Optional[shared_jira_priority_mapping.JiraPriorityMapping] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority_mapping'), 'exclude': lambda f: f is None }})  
    project_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project_id'), 'exclude': lambda f: f is None }})
    r"""Id of the Jira project where issues for this target will be created."""  
    status_mapping: Optional[shared_jira_status_mapping.JiraStatusMapping] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_mapping'), 'exclude': lambda f: f is None }})  
    