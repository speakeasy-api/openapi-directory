"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CustomObjectRecordBatchActionTypeEnum(str, Enum):
    r"""The type of the batch action"""
    DELETE = 'delete'
    UPDATE = 'update'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomObjectRecordBatchAction:
    r"""The batch action on custom object records"""
    
    type: CustomObjectRecordBatchActionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the batch action"""  
    allow_partial_success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowPartialSuccess'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the records that pass the schema validation should be updated when not all records in the request pass the schema validation.
    
    This field is applicable only to the batch update actions.
    """  
    ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ids'), 'exclude': lambda f: f is None }})
    r"""Ids of the custom object records that you want to delete. Only applicable when `type` is `delete`."""  
    records: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('records'), 'exclude': lambda f: f is None }})
    r"""Object records that you want to update. Only applicable when `type` is `update`."""  
    