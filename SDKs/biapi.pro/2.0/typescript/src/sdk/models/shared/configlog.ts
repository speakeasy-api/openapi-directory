/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ConfigLog extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key: string;

  @SpeakeasyMetadata()
  @Expose({ name: "new_value" })
  newValue?: string;

  /**
   * The entity who made the config key modification
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_value" })
  previousValue?: string;

  /**
   * Timestamp of when the configuration key was changed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  /**
   * Action done on the config: add, update or delete
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
