"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetAppsBySafeNameSafeNameRequest:
    
    safe_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'safeName', 'style': 'simple', 'explode': False }})
    r"""The safeName of the App to be located"""  
    track_views: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'trackViews', 'style': 'form', 'explode': True }})
    r"""Whether this call should be tracked as a 'view' for this app. Default is false."""  
    user_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'userId', 'style': 'form', 'explode': True }})
    r"""The unique id of the user that is requesting this resource"""  
    

@dataclasses.dataclass
class GetAppsBySafeNameSafeNameResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    