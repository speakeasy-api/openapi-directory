"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labelingjobs3datasource as shared_labelingjobs3datasource
from ..shared import labelingjobsnsdatasource as shared_labelingjobsnsdatasource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LabelingJobDataSource:
    r"""<p>Provides information about the location of input data.</p> <p>You must specify at least one of the following: <code>S3DataSource</code> or <code>SnsDataSource</code>.</p> <p>Use <code>SnsDataSource</code> to specify an SNS input topic for a streaming labeling job. If you do not specify and SNS input topic ARN, Ground Truth will create a one-time labeling job.</p> <p>Use <code>S3DataSource</code> to specify an input manifest file for both streaming and one-time labeling jobs. Adding an <code>S3DataSource</code> is optional if you use <code>SnsDataSource</code> to create a streaming labeling job.</p>"""
    
    s3_data_source: Optional[shared_labelingjobs3datasource.LabelingJobS3DataSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3DataSource'), 'exclude': lambda f: f is None }})  
    sns_data_source: Optional[shared_labelingjobsnsdatasource.LabelingJobSnsDataSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SnsDataSource'), 'exclude': lambda f: f is None }})  
    