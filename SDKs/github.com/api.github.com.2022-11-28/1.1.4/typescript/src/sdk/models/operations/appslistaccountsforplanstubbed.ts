/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * To return the oldest accounts first, set to `asc`. Ignored without the `sort` parameter.
 */
export enum AppsListAccountsForPlanStubbedDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

export class AppsListAccountsForPlanStubbedRequest extends SpeakeasyBase {
  /**
   * To return the oldest accounts first, set to `asc`. Ignored without the `sort` parameter.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: AppsListAccountsForPlanStubbedDirectionEnum;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results per page (max 100).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The unique identifier of the plan.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=plan_id",
  })
  planId: number;

  /**
   * The property to sort the results by. `created` means when the repository was starred. `updated` means when the repository was last pushed to.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: shared.SortEnum;
}

export class AppsListAccountsForPlanStubbedResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata({ elemType: shared.MarketplacePurchase })
  marketplacePurchases?: shared.MarketplacePurchase[];
}
