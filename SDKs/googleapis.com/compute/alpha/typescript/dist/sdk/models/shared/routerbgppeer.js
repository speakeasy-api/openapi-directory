"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RouterBgpPeer = exports.RouterBgpPeerManagementTypeEnum = exports.RouterBgpPeerEnableEnum = exports.RouterBgpPeerAdvertisedGroupsEnum = exports.RouterBgpPeerAdvertiseModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var routeradvertisediprange_1 = require("./routeradvertisediprange");
var routerbgppeerbfd_1 = require("./routerbgppeerbfd");
var routerbgppeercustomlearnediprange_1 = require("./routerbgppeercustomlearnediprange");
var class_transformer_1 = require("class-transformer");
/**
 * User-specified flag to indicate which mode to use for advertisement.
 */
var RouterBgpPeerAdvertiseModeEnum;
(function (RouterBgpPeerAdvertiseModeEnum) {
    RouterBgpPeerAdvertiseModeEnum["Custom"] = "CUSTOM";
    RouterBgpPeerAdvertiseModeEnum["Default"] = "DEFAULT";
})(RouterBgpPeerAdvertiseModeEnum = exports.RouterBgpPeerAdvertiseModeEnum || (exports.RouterBgpPeerAdvertiseModeEnum = {}));
var RouterBgpPeerAdvertisedGroupsEnum;
(function (RouterBgpPeerAdvertisedGroupsEnum) {
    RouterBgpPeerAdvertisedGroupsEnum["AllPeerVpcSubnets"] = "ALL_PEER_VPC_SUBNETS";
    RouterBgpPeerAdvertisedGroupsEnum["AllSubnets"] = "ALL_SUBNETS";
    RouterBgpPeerAdvertisedGroupsEnum["AllVpcSubnets"] = "ALL_VPC_SUBNETS";
})(RouterBgpPeerAdvertisedGroupsEnum = exports.RouterBgpPeerAdvertisedGroupsEnum || (exports.RouterBgpPeerAdvertisedGroupsEnum = {}));
/**
 * The status of the BGP peer connection. If set to FALSE, any active session with the peer is terminated and all associated routing information is removed. If set to TRUE, the peer connection can be established with routing information. The default is TRUE.
 */
var RouterBgpPeerEnableEnum;
(function (RouterBgpPeerEnableEnum) {
    RouterBgpPeerEnableEnum["False"] = "FALSE";
    RouterBgpPeerEnableEnum["True"] = "TRUE";
})(RouterBgpPeerEnableEnum = exports.RouterBgpPeerEnableEnum || (exports.RouterBgpPeerEnableEnum = {}));
/**
 * [Output Only] The resource that configures and manages this BGP peer. - MANAGED_BY_USER is the default value and can be managed by you or other users - MANAGED_BY_ATTACHMENT is a BGP peer that is configured and managed by Cloud Interconnect, specifically by an InterconnectAttachment of type PARTNER. Google automatically creates, updates, and deletes this type of BGP peer when the PARTNER InterconnectAttachment is created, updated, or deleted.
 */
var RouterBgpPeerManagementTypeEnum;
(function (RouterBgpPeerManagementTypeEnum) {
    RouterBgpPeerManagementTypeEnum["ManagedByAttachment"] = "MANAGED_BY_ATTACHMENT";
    RouterBgpPeerManagementTypeEnum["ManagedByUser"] = "MANAGED_BY_USER";
})(RouterBgpPeerManagementTypeEnum = exports.RouterBgpPeerManagementTypeEnum || (exports.RouterBgpPeerManagementTypeEnum = {}));
var RouterBgpPeer = /** @class */ (function (_super) {
    __extends(RouterBgpPeer, _super);
    function RouterBgpPeer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "advertiseMode" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "advertiseMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "advertisedGroups" }),
        __metadata("design:type", Array)
    ], RouterBgpPeer.prototype, "advertisedGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: routeradvertisediprange_1.RouterAdvertisedIpRange }),
        (0, class_transformer_1.Expose)({ name: "advertisedIpRanges" }),
        (0, class_transformer_1.Type)(function () { return routeradvertisediprange_1.RouterAdvertisedIpRange; }),
        __metadata("design:type", Array)
    ], RouterBgpPeer.prototype, "advertisedIpRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "advertisedRoutePriority" }),
        __metadata("design:type", Number)
    ], RouterBgpPeer.prototype, "advertisedRoutePriority", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bfd" }),
        (0, class_transformer_1.Type)(function () { return routerbgppeerbfd_1.RouterBgpPeerBfd; }),
        __metadata("design:type", routerbgppeerbfd_1.RouterBgpPeerBfd)
    ], RouterBgpPeer.prototype, "bfd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: routerbgppeercustomlearnediprange_1.RouterBgpPeerCustomLearnedIpRange }),
        (0, class_transformer_1.Expose)({ name: "customLearnedIpRanges" }),
        (0, class_transformer_1.Type)(function () { return routerbgppeercustomlearnediprange_1.RouterBgpPeerCustomLearnedIpRange; }),
        __metadata("design:type", Array)
    ], RouterBgpPeer.prototype, "customLearnedIpRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customLearnedRoutePriority" }),
        __metadata("design:type", Number)
    ], RouterBgpPeer.prototype, "customLearnedRoutePriority", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enableIpv6" }),
        __metadata("design:type", Boolean)
    ], RouterBgpPeer.prototype, "enableIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "interfaceName" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "interfaceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipAddress" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "ipAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6NexthopAddress" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "ipv6NexthopAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "managementType" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "managementType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "md5AuthenticationKeyName" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "md5AuthenticationKeyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerAsn" }),
        __metadata("design:type", Number)
    ], RouterBgpPeer.prototype, "peerAsn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerIpAddress" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "peerIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "peerIpv6NexthopAddress" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "peerIpv6NexthopAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routerApplianceInstance" }),
        __metadata("design:type", String)
    ], RouterBgpPeer.prototype, "routerApplianceInstance", void 0);
    return RouterBgpPeer;
}(utils_1.SpeakeasyBase));
exports.RouterBgpPeer = RouterBgpPeer;
