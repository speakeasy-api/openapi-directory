/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Object with information about the last update of the campaign audience.
 */
export class SetcampaignconfigurationRequestBodyLastModified extends SpeakeasyBase {
  /**
   * Date of the last update in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateUtc" })
  dateUtc?: string;

  /**
   * Email of the user who made the last update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}

/**
 * Object with information of the affiliate.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsAffiliates extends SpeakeasyBase {
  /**
   * Affiliate ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Affiliate Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the brand.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsBrands extends SpeakeasyBase {
  /**
   * Brand ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Brand Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the category.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsCategories extends SpeakeasyBase {
  /**
   * Category ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Category Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the collection.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsCollections extends SpeakeasyBase {
  /**
   * Collection ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Collection Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class SetcampaignconfigurationRequestBodyTargetConfigurationsListCategory1BuyTogether extends SpeakeasyBase {
  /**
   * Category ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Category name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the Payment Method.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsPaymentsMethods extends SpeakeasyBase {
  /**
   * Payment Method ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Payment Method Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the product.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsProducts extends SpeakeasyBase {
  /**
   * Product ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Product Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the SKU.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsSkus extends SpeakeasyBase {
  /**
   * SKU ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * SKU Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Zip code that applies the campaign audience.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurationsZipCodeRanges extends SpeakeasyBase {
  /**
   * Defines if the zip code applies the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inclusive" })
  inclusive?: boolean;
}

/**
 * Object with information about the target audience.
 */
export class SetcampaignconfigurationRequestBodyTargetConfigurations extends SpeakeasyBase {
  /**
   * Marketplace order identifier. The discount will apply to selected affiliates.
   */
  @SpeakeasyMetadata({
    elemType: SetcampaignconfigurationRequestBodyTargetConfigurationsAffiliates,
  })
  @Expose({ name: "affiliates" })
  @Type(() => SetcampaignconfigurationRequestBodyTargetConfigurationsAffiliates)
  affiliates?: SetcampaignconfigurationRequestBodyTargetConfigurationsAffiliates[];

  /**
   * Shows if the trade policy IDs are exclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "areSalesChannelIdsExclusive" })
  areSalesChannelIdsExclusive?: boolean;

  /**
   * Object composed by the brands that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType: SetcampaignconfigurationRequestBodyTargetConfigurationsBrands,
  })
  @Expose({ name: "brands" })
  @Type(() => SetcampaignconfigurationRequestBodyTargetConfigurationsBrands)
  brands?: SetcampaignconfigurationRequestBodyTargetConfigurationsBrands[];

  /**
   * If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandsAreInclusive" })
  brandsAreInclusive?: boolean;

  /**
   * Campaign Audiences that activate this promotion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "campaigns" })
  campaigns?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "cardIssuers" })
  cardIssuers?: any[];

  /**
   * Object composed by the categories that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType: SetcampaignconfigurationRequestBodyTargetConfigurationsCategories,
  })
  @Expose({ name: "categories" })
  @Type(() => SetcampaignconfigurationRequestBodyTargetConfigurationsCategories)
  categories?: SetcampaignconfigurationRequestBodyTargetConfigurationsCategories[];

  /**
   * If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoriesAreInclusive" })
  categoriesAreInclusive?: boolean;

  /**
   * An expression to use with clusters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterExpressions" })
  clusterExpressions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "clusterOperator" })
  clusterOperator?: string;

  /**
   * Object composed by the collections that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      SetcampaignconfigurationRequestBodyTargetConfigurationsCollections,
  })
  @Expose({ name: "collections" })
  @Type(
    () => SetcampaignconfigurationRequestBodyTargetConfigurationsCollections
  )
  collections?: SetcampaignconfigurationRequestBodyTargetConfigurationsCollections[];

  /**
   * Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collections1BuyTogether" })
  collections1BuyTogether?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "collections2BuyTogether" })
  collections2BuyTogether?: any[];

  /**
   * If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collectionsIsInclusive" })
  collectionsIsInclusive?: boolean;

  /**
   * If the **List Price** and **Price** are the same.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "compareListPriceAndPrice" })
  compareListPriceAndPrice?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "coupon" })
  coupon?: any[];

  /**
   * Number of days that are considered to add the purchase history.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "daysAgoOfPurchases" })
  daysAgoOfPurchases?: number;

  /**
   * Enable **Buy Together** per SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableBuyTogetherPerSku" })
  enableBuyTogetherPerSku?: boolean;

  /**
   * Defines if the target audience is featured (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "featured" })
  featured?: boolean;

  /**
   * Applies the discount even if the user is not logged.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstBuyIsProfileOptimistic" })
  firstBuyIsProfileOptimistic?: boolean;

  /**
   * Gifts List Type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftListTypes" })
  giftListTypes?: string[];

  /**
   * Target audience ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Shows if at least one of the sellers must be valid to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idSellerIsInclusive" })
  idSellerIsInclusive?: boolean;

  /**
   * Shows the trade policies that active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idsSalesChannel" })
  idsSalesChannel?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "installment" })
  installment?: number;

  /**
   * Applies the campaign audience only if the list price and price is different.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDifferentListPriceAndPrice" })
  isDifferentListPriceAndPrice?: boolean;

  /**
   * Applies the discount only if it's a first buy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isFirstBuy" })
  isFirstBuy?: boolean;

  /**
   * Set if the campaign audience will be applied considering a minimum and maximum values for installments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isMinMaxInstallments" })
  isMinMaxInstallments?: boolean;

  /**
   * Applies selected discount only when one of the defined shipping method is selected by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSlaSelected" })
  isSlaSelected?: boolean;

  /**
   * Maximum price of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemMaxPrice" })
  itemMaxPrice?: number;

  /**
   * Minimum price of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemMinPrice" })
  itemMinPrice?: number;

  /**
   * Brand first list for the promotion **Buy Together.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listBrand1BuyTogether" })
  listBrand1BuyTogether?: any[];

  /**
   * Category first list for the promotion **Buy Together**.
   */
  @SpeakeasyMetadata({
    elemType:
      SetcampaignconfigurationRequestBodyTargetConfigurationsListCategory1BuyTogether,
  })
  @Expose({ name: "listCategory1BuyTogether" })
  @Type(
    () =>
      SetcampaignconfigurationRequestBodyTargetConfigurationsListCategory1BuyTogether
  )
  listCategory1BuyTogether?: SetcampaignconfigurationRequestBodyTargetConfigurationsListCategory1BuyTogether[];

  /**
   * SKU first list for the promotion **Buy Together**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listSku1BuyTogether" })
  listSku1BuyTogether?: any[];

  /**
   * SKU second list for the promotion **Buy Together**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listSku2BuyTogether" })
  listSku2BuyTogether?: any[];

  /**
   * Array with all campaign audience's marketing tags.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingTags" })
  marketingTags?: string[];

  /**
   * Shows if marketing tags are not inclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingTagsAreNotInclusive" })
  marketingTagsAreNotInclusive?: boolean;

  /**
   * Maximum value for installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxInstallment" })
  maxInstallment?: number;

  /**
   * Defines how many times the campaign audience can be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxUsage" })
  maxUsage?: number;

  /**
   * Defines if the campaign audience can be used multiple times per client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxUsagePerClient" })
  maxUsagePerClient?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "merchants" })
  merchants?: any[];

  /**
   * Minimum value for installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minInstallment" })
  minInstallment?: number;

  /**
   * Minimum quantity for **Buy Together** promotion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumQuantityBuyTogether" })
  minimumQuantityBuyTogether?: number;

  /**
   * Defines if the campaign audience can be used multiple times per client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multipleUsePerClient" })
  multipleUsePerClient?: boolean;

  /**
   * Target audience name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: string;

  /**
   * Array composed by all the Payments Methods.
   */
  @SpeakeasyMetadata({
    elemType:
      SetcampaignconfigurationRequestBodyTargetConfigurationsPaymentsMethods,
  })
  @Expose({ name: "paymentsMethods" })
  @Type(
    () => SetcampaignconfigurationRequestBodyTargetConfigurationsPaymentsMethods
  )
  paymentsMethods?: SetcampaignconfigurationRequestBodyTargetConfigurationsPaymentsMethods[];

  @SpeakeasyMetadata()
  @Expose({ name: "paymentsRules" })
  paymentsRules?: any[];

  /**
   * Percentual discount value list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "percentualDiscountValueList" })
  percentualDiscountValueList?: number[];

  /**
   * Object composed by the products that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType: SetcampaignconfigurationRequestBodyTargetConfigurationsProducts,
  })
  @Expose({ name: "products" })
  @Type(() => SetcampaignconfigurationRequestBodyTargetConfigurationsProducts)
  products?: SetcampaignconfigurationRequestBodyTargetConfigurationsProducts[];

  /**
   * If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productsAreInclusive" })
  productsAreInclusive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "productsSpecifications" })
  productsSpecifications?: any[];

  /**
   * Quantity to affect **Buy Together** promotion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantityToAffectBuyTogether" })
  quantityToAffectBuyTogether?: number;

  /**
   * The discount will be granted if the card's BIN is given.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictionsBins" })
  restrictionsBins?: string[];

  /**
   * Should distribute discount among matched items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shouldDistributeDiscountAmongMatchedItems" })
  shouldDistributeDiscountAmongMatchedItems?: boolean;

  /**
   * Object composed by the SKUs that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType: SetcampaignconfigurationRequestBodyTargetConfigurationsSkus,
  })
  @Expose({ name: "skus" })
  @Type(() => SetcampaignconfigurationRequestBodyTargetConfigurationsSkus)
  skus?: SetcampaignconfigurationRequestBodyTargetConfigurationsSkus[];

  /**
   * If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skusAreInclusive" })
  skusAreInclusive?: boolean;

  /**
   * The discount will be granted if the shipping method is the same as the one given.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slasIds" })
  slasIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "stores" })
  stores?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "storesAreInclusive" })
  storesAreInclusive?: boolean;

  /**
   * Maximum chart value to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValueCeling" })
  totalValueCeling?: number;

  /**
   * Minimum chart value to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValueFloor" })
  totalValueFloor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalValueIncludeAllItems" })
  totalValueIncludeAllItems?: boolean;

  /**
   * Total chart value to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValueMode" })
  totalValueMode?: string;

  /**
   * Total value a client must have in past orders to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValuePurchase" })
  totalValuePurchase?: number;

  /**
   * Use new progressive algorithm.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useNewProgressiveAlgorithm" })
  useNewProgressiveAlgorithm?: boolean;

  /**
   * Range of the zip code that applies the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      SetcampaignconfigurationRequestBodyTargetConfigurationsZipCodeRanges,
  })
  @Expose({ name: "zipCodeRanges" })
  @Type(
    () => SetcampaignconfigurationRequestBodyTargetConfigurationsZipCodeRanges
  )
  zipCodeRanges?: SetcampaignconfigurationRequestBodyTargetConfigurationsZipCodeRanges[];
}

export class SetcampaignconfigurationRequestBody extends SpeakeasyBase {
  /**
   * Start date of the campaign audience in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beginDateUtc" })
  beginDateUtc?: string;

  /**
   * End date of the campaign audience in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateUtc" })
  endDateUtc?: string;

  /**
   * Campaign audience ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Defines if the campaign audience is active (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isAndOperator" })
  isAndOperator?: boolean;

  /**
   * Defines if the campaign audience is archived (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isArchived" })
  isArchived?: boolean;

  /**
   * Object with information about the last update of the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModified" })
  @Type(() => SetcampaignconfigurationRequestBodyLastModified)
  lastModified?: SetcampaignconfigurationRequestBodyLastModified;

  /**
   * Campaign audience name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Array that contains all target audience that the campaign audience will be valid.
   */
  @SpeakeasyMetadata({
    elemType: SetcampaignconfigurationRequestBodyTargetConfigurations,
  })
  @Expose({ name: "targetConfigurations" })
  @Type(() => SetcampaignconfigurationRequestBodyTargetConfigurations)
  targetConfigurations?: SetcampaignconfigurationRequestBodyTargetConfigurations[];
}

export class SetcampaignconfigurationRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: SetcampaignconfigurationRequestBody;
}

/**
 * Object with information about the most recent update of the campaign audience.
 */
export class Setcampaignconfiguration200ApplicationJSONLastModified extends SpeakeasyBase {
  /**
   * Date of the most recent update in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateUtc" })
  dateUtc?: string;

  /**
   * Email of the user who updated the campaign audience for the latest time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}

/**
 * Object with information of the affiliate.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsAffiliates extends SpeakeasyBase {
  /**
   * Affiliate ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Affiliate Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the brand.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsBrands extends SpeakeasyBase {
  /**
   * Brand ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Brand Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the category.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCategories extends SpeakeasyBase {
  /**
   * Category ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Category Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the collection.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCollections extends SpeakeasyBase {
  /**
   * Collection ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Collection Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the Payment Method.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsPaymentsMethods extends SpeakeasyBase {
  /**
   * Payment Method ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Payment Method Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the product.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsProducts extends SpeakeasyBase {
  /**
   * Product ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Product Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Object with information of the SKU.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsSkus extends SpeakeasyBase {
  /**
   * SKU ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * SKU Name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Zip code that applies the campaign audience.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurationsZipCodeRanges extends SpeakeasyBase {
  /**
   * Defines if the zip code applies the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inclusive" })
  inclusive?: boolean;
}

/**
 * Object with information about the target audience.
 */
export class Setcampaignconfiguration200ApplicationJSONTargetConfigurations extends SpeakeasyBase {
  /**
   * Marketplace order identifier. The discount will apply to selected affiliates.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsAffiliates,
  })
  @Expose({ name: "affiliates" })
  @Type(
    () =>
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsAffiliates
  )
  affiliates?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsAffiliates[];

  /**
   * Defines if the trade policy IDs are exclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "areSalesChannelIdsExclusive" })
  areSalesChannelIdsExclusive?: boolean;

  /**
   * Object composed by the brands that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsBrands,
  })
  @Expose({ name: "brands" })
  @Type(
    () => Setcampaignconfiguration200ApplicationJSONTargetConfigurationsBrands
  )
  brands?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsBrands[];

  /**
   * If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandsAreInclusive" })
  brandsAreInclusive?: boolean;

  /**
   * Campaign Audiences that activate this promotion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "campaigns" })
  campaigns?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "cardIssuers" })
  cardIssuers?: any[];

  /**
   * Object composed by the categories that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCategories,
  })
  @Expose({ name: "categories" })
  @Type(
    () =>
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCategories
  )
  categories?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCategories[];

  /**
   * If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoriesAreInclusive" })
  categoriesAreInclusive?: boolean;

  /**
   * An expression to use with clusters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterExpressions" })
  clusterExpressions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "clusterOperator" })
  clusterOperator?: string;

  /**
   * Object composed by the collections that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCollections,
  })
  @Expose({ name: "collections" })
  @Type(
    () =>
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCollections
  )
  collections?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsCollections[];

  /**
   * Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collections1BuyTogether" })
  collections1BuyTogether?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "collections2BuyTogether" })
  collections2BuyTogether?: any[];

  /**
   * If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collectionsIsInclusive" })
  collectionsIsInclusive?: boolean;

  /**
   * If the **List Price** and **Price** are the same.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "compareListPriceAndPrice" })
  compareListPriceAndPrice?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "coupon" })
  coupon?: any[];

  /**
   * Number of days that are considered to add the purchase history.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "daysAgoOfPurchases" })
  daysAgoOfPurchases?: number;

  /**
   * Enable **Buy Together** per SKU.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableBuyTogetherPerSku" })
  enableBuyTogetherPerSku?: boolean;

  /**
   * Defines if the target audience is feature (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "featured" })
  featured?: boolean;

  /**
   * Applies the discount even if the user is not logged.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstBuyIsProfileOptimistic" })
  firstBuyIsProfileOptimistic?: boolean;

  /**
   * Gifts List Type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "giftListTypes" })
  giftListTypes?: string[];

  /**
   * Target audience ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Defines if at least one of the sellers must be valid to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idSellerIsInclusive" })
  idSellerIsInclusive?: boolean;

  /**
   * Array with all the trade policies that activate the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idsSalesChannel" })
  idsSalesChannel?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "installment" })
  installment?: number;

  /**
   * Applies the campaign audience only if the list price and price is different.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDifferentListPriceAndPrice" })
  isDifferentListPriceAndPrice?: boolean;

  /**
   * Applies the discount only if it's a first buy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isFirstBuy" })
  isFirstBuy?: boolean;

  /**
   * Set if the campaign audience will be applied considering a minimum and maximum values for installments.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isMinMaxInstallments" })
  isMinMaxInstallments?: boolean;

  /**
   * Applies selected discount only when one of the defined shipping method is selected by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isSlaSelected" })
  isSlaSelected?: boolean;

  /**
   * Maximum price of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemMaxPrice" })
  itemMaxPrice?: number;

  /**
   * Minimum price of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemMinPrice" })
  itemMinPrice?: number;

  /**
   * Brand first list for the promotion **Buy Together.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listBrand1BuyTogether" })
  listBrand1BuyTogether?: any[];

  /**
   * Category first list for the promotion **Buy Together**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listCategory1BuyTogether" })
  listCategory1BuyTogether?: any[];

  /**
   * SKU first list for the promotion **Buy Together**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listSku1BuyTogether" })
  listSku1BuyTogether?: any[];

  /**
   * SKU second list for the promotion **Buy Together**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listSku2BuyTogether" })
  listSku2BuyTogether?: any[];

  /**
   * Array with all the campaign audience's marketing tags.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingTags" })
  marketingTags?: string[];

  /**
   * Defines if marketing tags are not inclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "marketingTagsAreNotInclusive" })
  marketingTagsAreNotInclusive?: boolean;

  /**
   * Maximum value for installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxInstallment" })
  maxInstallment?: number;

  /**
   * Defines how many times the campaign audience can be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxUsage" })
  maxUsage?: number;

  /**
   * Defines if the campaign audience can be used multiple times per client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxUsagePerClient" })
  maxUsagePerClient?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "merchants" })
  merchants?: any[];

  /**
   * Minimum value for installment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minInstallment" })
  minInstallment?: number;

  /**
   * Minimum quantity for **Buy Together** promotion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumQuantityBuyTogether" })
  minimumQuantityBuyTogether?: number;

  /**
   * Defines if the campaign audience can be used multiple times per client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multipleUsePerClient" })
  multipleUsePerClient?: boolean;

  /**
   * Target audience name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: string;

  /**
   * Array composed by all the Payments Methods.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsPaymentsMethods,
  })
  @Expose({ name: "paymentsMethods" })
  @Type(
    () =>
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsPaymentsMethods
  )
  paymentsMethods?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsPaymentsMethods[];

  @SpeakeasyMetadata()
  @Expose({ name: "paymentsRules" })
  paymentsRules?: any[];

  /**
   * Percentual discount value list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "percentualDiscountValueList" })
  percentualDiscountValueList?: number[];

  /**
   * Object composed by the products that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsProducts,
  })
  @Expose({ name: "products" })
  @Type(
    () => Setcampaignconfiguration200ApplicationJSONTargetConfigurationsProducts
  )
  products?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsProducts[];

  /**
   * If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productsAreInclusive" })
  productsAreInclusive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "productsSpecifications" })
  productsSpecifications?: any[];

  /**
   * Quantity to affect **Buy Together** promotion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quantityToAffectBuyTogether" })
  quantityToAffectBuyTogether?: number;

  /**
   * The discount will be granted if the card's BIN is given.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "restrictionsBins" })
  restrictionsBins?: string[];

  /**
   * Should distribute discount among matched items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shouldDistributeDiscountAmongMatchedItems" })
  shouldDistributeDiscountAmongMatchedItems?: boolean;

  /**
   * Object composed by the SKUs that will activate or deactivate the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsSkus,
  })
  @Expose({ name: "skus" })
  @Type(
    () => Setcampaignconfiguration200ApplicationJSONTargetConfigurationsSkus
  )
  skus?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsSkus[];

  /**
   * If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skusAreInclusive" })
  skusAreInclusive?: boolean;

  /**
   * The discount will be granted if the shipping method is the same as the one given.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slasIds" })
  slasIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "stores" })
  stores?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "storesAreInclusive" })
  storesAreInclusive?: boolean;

  /**
   * Maximum chart value to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValueCeling" })
  totalValueCeling?: number;

  /**
   * Minimum chart value to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValueFloor" })
  totalValueFloor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalValueIncludeAllItems" })
  totalValueIncludeAllItems?: boolean;

  /**
   * Total chart value to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValueMode" })
  totalValueMode?: string;

  /**
   * Total value a client must have in past orders to active the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalValuePurchase" })
  totalValuePurchase?: number;

  /**
   * Use new progressive algorithm.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useNewProgressiveAlgorithm" })
  useNewProgressiveAlgorithm?: boolean;

  /**
   * Range of the zip code that applies the campaign audience.
   */
  @SpeakeasyMetadata({
    elemType:
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsZipCodeRanges,
  })
  @Expose({ name: "zipCodeRanges" })
  @Type(
    () =>
      Setcampaignconfiguration200ApplicationJSONTargetConfigurationsZipCodeRanges
  )
  zipCodeRanges?: Setcampaignconfiguration200ApplicationJSONTargetConfigurationsZipCodeRanges[];
}

/**
 * OK
 */
export class Setcampaignconfiguration200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date of the campaign audience in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beginDateUtc" })
  beginDateUtc?: string;

  /**
   * End date of the campaign audience in UTC format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateUtc" })
  endDateUtc?: string;

  /**
   * Campaign audience ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Defines if the campaign audience is active (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isAndOperator" })
  isAndOperator?: boolean;

  /**
   * Defines if the campaign audience is archived (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isArchived" })
  isArchived?: boolean;

  /**
   * Object with information about the most recent update of the campaign audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModified" })
  @Type(() => Setcampaignconfiguration200ApplicationJSONLastModified)
  lastModified?: Setcampaignconfiguration200ApplicationJSONLastModified;

  /**
   * Campaign audience name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Array that contains all target audience that the campaign audience will be valid.
   */
  @SpeakeasyMetadata({
    elemType: Setcampaignconfiguration200ApplicationJSONTargetConfigurations,
  })
  @Expose({ name: "targetConfigurations" })
  @Type(() => Setcampaignconfiguration200ApplicationJSONTargetConfigurations)
  targetConfigurations?: Setcampaignconfiguration200ApplicationJSONTargetConfigurations[];
}

export class SetcampaignconfigurationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  setcampaignconfiguration200ApplicationJSONObject?: Setcampaignconfiguration200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
