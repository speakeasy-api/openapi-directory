// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum - Filter by snapshot type. Valid types are OnDemand, PolicyBased, Retrieved.
type QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum string

const (
	QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnumOnDemand    QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum = "OnDemand"
	QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnumPolicyBased QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum = "PolicyBased"
	QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnumRetrieved   QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum = "Retrieved"
)

func (e QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum) ToPointer() *QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum {
	return &e
}

func (e *QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OnDemand":
		fallthrough
	case "PolicyBased":
		fallthrough
	case "Retrieved":
		*e = QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum: %v", v)
	}
}

// QueryUnmanagedObjectSnapshotsV1SortByEnum - Sort by given attribute.
type QueryUnmanagedObjectSnapshotsV1SortByEnum string

const (
	QueryUnmanagedObjectSnapshotsV1SortByEnumSnapshotDateAndTime QueryUnmanagedObjectSnapshotsV1SortByEnum = "SnapshotDateAndTime"
	QueryUnmanagedObjectSnapshotsV1SortByEnumLocalExpirationDate QueryUnmanagedObjectSnapshotsV1SortByEnum = "LocalExpirationDate"
	QueryUnmanagedObjectSnapshotsV1SortByEnumArchivalLocation    QueryUnmanagedObjectSnapshotsV1SortByEnum = "ArchivalLocation"
)

func (e QueryUnmanagedObjectSnapshotsV1SortByEnum) ToPointer() *QueryUnmanagedObjectSnapshotsV1SortByEnum {
	return &e
}

func (e *QueryUnmanagedObjectSnapshotsV1SortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SnapshotDateAndTime":
		fallthrough
	case "LocalExpirationDate":
		fallthrough
	case "ArchivalLocation":
		*e = QueryUnmanagedObjectSnapshotsV1SortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryUnmanagedObjectSnapshotsV1SortByEnum: %v", v)
	}
}

// QueryUnmanagedObjectSnapshotsV1SortOrderEnum - The sort order. The default sort order is ascending.
type QueryUnmanagedObjectSnapshotsV1SortOrderEnum string

const (
	QueryUnmanagedObjectSnapshotsV1SortOrderEnumAsc  QueryUnmanagedObjectSnapshotsV1SortOrderEnum = "asc"
	QueryUnmanagedObjectSnapshotsV1SortOrderEnumDesc QueryUnmanagedObjectSnapshotsV1SortOrderEnum = "desc"
)

func (e QueryUnmanagedObjectSnapshotsV1SortOrderEnum) ToPointer() *QueryUnmanagedObjectSnapshotsV1SortOrderEnum {
	return &e
}

func (e *QueryUnmanagedObjectSnapshotsV1SortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryUnmanagedObjectSnapshotsV1SortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryUnmanagedObjectSnapshotsV1SortOrderEnum: %v", v)
	}
}

type QueryUnmanagedObjectSnapshotsV1Request struct {
	// Filter all the snapshots after a date.
	AfterDate *time.Time `queryParam:"style=form,explode=true,name=after_date"`
	// Filter all the snapshots before a date.
	BeforeDate *time.Time `queryParam:"style=form,explode=true,name=before_date"`
	// ID of a object.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Ignore these many matches in the beginning.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Search snapshot by date and time.
	SearchValue *string `queryParam:"style=form,explode=true,name=search_value"`
	// Filter by snapshot type. Valid types are OnDemand, PolicyBased, Retrieved.
	SnapshotType *QueryUnmanagedObjectSnapshotsV1SnapshotTypeEnum `queryParam:"style=form,explode=true,name=snapshot_type"`
	// Sort by given attribute.
	SortBy *QueryUnmanagedObjectSnapshotsV1SortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// The sort order. The default sort order is ascending.
	SortOrder *QueryUnmanagedObjectSnapshotsV1SortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryUnmanagedObjectSnapshotsV1Response struct {
	ContentType string
	// Get page summary about snapshots for a given object.
	SnapshotSummaryListResponse *shared.SnapshotSummaryListResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
