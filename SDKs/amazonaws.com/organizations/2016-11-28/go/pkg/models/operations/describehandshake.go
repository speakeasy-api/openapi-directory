// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeHandshakeXAmzTargetEnum
type DescribeHandshakeXAmzTargetEnum string

const (
	DescribeHandshakeXAmzTargetEnumAwsOrganizationsV20161128DescribeHandshake DescribeHandshakeXAmzTargetEnum = "AWSOrganizationsV20161128.DescribeHandshake"
)

func (e DescribeHandshakeXAmzTargetEnum) ToPointer() *DescribeHandshakeXAmzTargetEnum {
	return &e
}

func (e *DescribeHandshakeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSOrganizationsV20161128.DescribeHandshake":
		*e = DescribeHandshakeXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeHandshakeXAmzTargetEnum: %v", v)
	}
}

type DescribeHandshakeRequest struct {
	DescribeHandshakeRequest shared.DescribeHandshakeRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               DescribeHandshakeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeHandshakeResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DescribeHandshakeResponse *shared.DescribeHandshakeResponse
	// HandshakeNotFoundException
	HandshakeNotFoundException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
