"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoscalingthresholds as shared_autoscalingthresholds
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoadBasedAutoScalingConfiguration:
    r"""Describes a layer's load-based auto scaling configuration."""
    
    down_scaling: Optional[shared_autoscalingthresholds.AutoScalingThresholds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DownScaling'), 'exclude': lambda f: f is None }})  
    enable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Enable'), 'exclude': lambda f: f is None }})  
    layer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LayerId'), 'exclude': lambda f: f is None }})  
    up_scaling: Optional[shared_autoscalingthresholds.AutoScalingThresholds] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpScaling'), 'exclude': lambda f: f is None }})  
    