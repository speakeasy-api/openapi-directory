/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CashDrawerShiftEvent {
    /**
     * The event time in ISO 8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;
    public CashDrawerShiftEvent withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * An optional description of the event, entered by the employee that
     * created the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CashDrawerShiftEvent withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The ID of the employee that created the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employee_id")
    public String employeeId;
    public CashDrawerShiftEvent withEmployeeId(String employeeId) {
        this.employeeId = employeeId;
        return this;
    }
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_money")
    public Money eventMoney;
    public CashDrawerShiftEvent withEventMoney(Money eventMoney) {
        this.eventMoney = eventMoney;
        return this;
    }
    
    /**
     * The type of cash drawer shift event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_type")
    public String eventType;
    public CashDrawerShiftEvent withEventType(String eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * The unique ID of the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public CashDrawerShiftEvent withId(String id) {
        this.id = id;
        return this;
    }
    
}
