/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListCallLogsMetricsRequest extends SpeakeasyBase {
  /**
   * Start date for the report in `yyyy-mm-dd` format. Specify a 30 day range using the `from` and `to` parameters as the response provides a maximum of a month worth of data per API request.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=from" })
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Filter call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality. <br><br>The value of this field can be one of the following:<br>
   *
   * @remarks
   * * `good`: Retrieve call logs of the call(s) with good quality of voice.<br>
   * * `bad`: Retrieve call logs of the call(s) with good quality of voice.<br>
   * * `all`: Retrieve all call logs without filtering by voice quality.
   *
   *
   *
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quality_type",
  })
  qualityType?: string;

  /**
   * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=site_id",
  })
  siteId?: string;

  /**
   * End date for the report in `yyyy-mm-dd` format.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
  to?: string;
}

/**
 * Callee object contains information of the calee.
 */
export class ListCallLogsMetrics200ApplicationXMLCallLogsCallee extends SpeakeasyBase {
  /**
   * Audio codec.
   */
  @SpeakeasyMetadata()
  codec?: string;

  /**
   * Device type.
   */
  @SpeakeasyMetadata()
  deviceType?: string;

  /**
   * Full extension number of the callee.
   */
  @SpeakeasyMetadata()
  extensionNumber?: string;

  /**
   * Headset used for the call by the callee.
   */
  @SpeakeasyMetadata()
  headset?: string;

  /**
   * ISP.
   */
  @SpeakeasyMetadata()
  isp?: string;

  /**
   * Microphone used for the call by the callee.
   */
  @SpeakeasyMetadata()
  microphone?: string;

  /**
   * Phone number of the callee in E164 format.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;

  /**
   * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
   */
  @SpeakeasyMetadata()
  siteId?: string;
}

/**
 * Caller object contains information of the caller.
 */
export class ListCallLogsMetrics200ApplicationXMLCallLogsCaller extends SpeakeasyBase {
  /**
   * Audio codec.
   */
  @SpeakeasyMetadata()
  codec?: string;

  /**
   * Device type.
   */
  @SpeakeasyMetadata()
  deviceType?: string;

  /**
   * Full extension number of the caller.
   */
  @SpeakeasyMetadata()
  extensionNumber?: string;

  /**
   * Headset used for the call by the caller.
   */
  @SpeakeasyMetadata()
  headset?: string;

  /**
   * ISP.
   */
  @SpeakeasyMetadata()
  isp?: string;

  /**
   * Microphone used for the call by the caller.
   */
  @SpeakeasyMetadata()
  microphone?: string;

  /**
   * Phone number of the caller in E164 format.
   */
  @SpeakeasyMetadata()
  phoneNumber?: string;

  /**
   * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
   */
  @SpeakeasyMetadata()
  siteId?: string;
}

export class ListCallLogsMetrics200ApplicationXMLCallLogs extends SpeakeasyBase {
  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  callId?: string;

  /**
   * Callee object contains information of the calee.
   */
  @SpeakeasyMetadata()
  callee?: ListCallLogsMetrics200ApplicationXMLCallLogsCallee;

  /**
   * Caller object contains information of the caller.
   */
  @SpeakeasyMetadata()
  caller?: ListCallLogsMetrics200ApplicationXMLCallLogsCaller;

  /**
   * Date and time at which the call started.
   */
  @SpeakeasyMetadata()
  dateTime?: string;

  /**
   * Direction of the call. The value of this field can be either `internal` or `outbound`.
   */
  @SpeakeasyMetadata()
  direction?: string;

  /**
   * Duration of the call in seconds.
   */
  @SpeakeasyMetadata()
  duration?: number;

  /**
   * Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.
   */
  @SpeakeasyMetadata()
  mos?: string;
}

export class ListCallLogsMetrics200ApplicationXML extends SpeakeasyBase {
  /**
   * Call logs.
   */
  @SpeakeasyMetadata({ elemType: ListCallLogsMetrics200ApplicationXMLCallLogs })
  callLogs?: ListCallLogsMetrics200ApplicationXMLCallLogs[];

  /**
   * Start date for the report in `yyyy-mm-dd` format.
   */
  @SpeakeasyMetadata()
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * End date for the report in `yyyy-mm-dd` format.
   */
  @SpeakeasyMetadata()
  to?: string;

  /**
   * The total number of records available across all pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Callee object contains information of the calee.
 */
export class ListCallLogsMetrics200ApplicationJSONCallLogsCallee extends SpeakeasyBase {
  /**
   * Audio codec.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codec" })
  codec?: string;

  /**
   * Device type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_type" })
  deviceType?: string;

  /**
   * Full extension number of the callee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  /**
   * Headset used for the call by the callee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headset" })
  headset?: string;

  /**
   * ISP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isp" })
  isp?: string;

  /**
   * Microphone used for the call by the callee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "microphone" })
  microphone?: string;

  /**
   * Phone number of the callee in E164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "site_id" })
  siteId?: string;
}

/**
 * Caller object contains information of the caller.
 */
export class ListCallLogsMetrics200ApplicationJSONCallLogsCaller extends SpeakeasyBase {
  /**
   * Audio codec.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codec" })
  codec?: string;

  /**
   * Device type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_type" })
  deviceType?: string;

  /**
   * Full extension number of the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  /**
   * Headset used for the call by the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "headset" })
  headset?: string;

  /**
   * ISP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isp" })
  isp?: string;

  /**
   * Microphone used for the call by the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "microphone" })
  microphone?: string;

  /**
   * Phone number of the caller in E164 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  /**
   * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "site_id" })
  siteId?: string;
}

export class ListCallLogsMetrics200ApplicationJSONCallLogs extends SpeakeasyBase {
  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_id" })
  callId?: string;

  /**
   * Callee object contains information of the calee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee" })
  @Type(() => ListCallLogsMetrics200ApplicationJSONCallLogsCallee)
  callee?: ListCallLogsMetrics200ApplicationJSONCallLogsCallee;

  /**
   * Caller object contains information of the caller.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller" })
  @Type(() => ListCallLogsMetrics200ApplicationJSONCallLogsCaller)
  caller?: ListCallLogsMetrics200ApplicationJSONCallLogsCaller;

  /**
   * Date and time at which the call started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  dateTime?: string;

  /**
   * Direction of the call. The value of this field can be either `internal` or `outbound`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  /**
   * Duration of the call in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * Zoom uses Mean Opinion Score (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of 1 to 5. A score of 1 indicates unacceptable voice quality for all users. A score of 5 is the best voice quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mos" })
  mos?: string;
}

export class ListCallLogsMetrics200ApplicationJSON extends SpeakeasyBase {
  /**
   * Call logs.
   */
  @SpeakeasyMetadata({
    elemType: ListCallLogsMetrics200ApplicationJSONCallLogs,
  })
  @Expose({ name: "call_logs" })
  @Type(() => ListCallLogsMetrics200ApplicationJSONCallLogs)
  callLogs?: ListCallLogsMetrics200ApplicationJSONCallLogs[];

  /**
   * Start date for the report in `yyyy-mm-dd` format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * End date for the report in `yyyy-mm-dd` format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * The total number of records available across all pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListCallLogsMetricsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  listCallLogsMetrics200ApplicationJSONObject?: ListCallLogsMetrics200ApplicationJSON;
}
