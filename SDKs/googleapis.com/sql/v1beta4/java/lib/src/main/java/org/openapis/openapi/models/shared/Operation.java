/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Operation - An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource.
 */
public class Operation {
    /**
     * Backup context.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupContext")
    public BackupContext backupContext;

    public Operation withBackupContext(BackupContext backupContext) {
        this.backupContext = backupContext;
        return this;
    }
    
    /**
     * The time this operation finished in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public Operation withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Database instance operation errors list wrapper.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public OperationErrors error;

    public Operation withError(OperationErrors error) {
        this.error = error;
        return this;
    }
    
    /**
     * Database instance export context.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exportContext")
    public ExportContext exportContext;

    public Operation withExportContext(ExportContext exportContext) {
        this.exportContext = exportContext;
        return this;
    }
    
    /**
     * Database instance import context.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("importContext")
    public ImportContext importContext;

    public Operation withImportContext(ImportContext importContext) {
        this.importContext = importContext;
        return this;
    }
    
    /**
     * The time this operation was enqueued in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insertTime")
    public String insertTime;

    public Operation withInsertTime(String insertTime) {
        this.insertTime = insertTime;
        return this;
    }
    
    /**
     * This is always `sql#operation`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Operation withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Operation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The type of the operation. Valid values are: * `CREATE` * `DELETE` * `UPDATE` * `RESTART` * `IMPORT` * `EXPORT` * `BACKUP_VOLUME` * `RESTORE_VOLUME` * `CREATE_USER` * `DELETE_USER` * `CREATE_DATABASE` * `DELETE_DATABASE`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationType")
    public OperationOperationTypeEnum operationType;

    public Operation withOperationType(OperationOperationTypeEnum operationType) {
        this.operationType = operationType;
        return this;
    }
    
    /**
     * The URI of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Operation withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * The time this operation actually started in UTC timezone in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public Operation withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The status of an operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public OperationStatusEnum status;

    public Operation withStatus(OperationStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Name of the database instance related to this operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetId")
    public String targetId;

    public Operation withTargetId(String targetId) {
        this.targetId = targetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetLink")
    public String targetLink;

    public Operation withTargetLink(String targetLink) {
        this.targetLink = targetLink;
        return this;
    }
    
    /**
     * The project ID of the target instance related to this operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetProject")
    public String targetProject;

    public Operation withTargetProject(String targetProject) {
        this.targetProject = targetProject;
        return this;
    }
    
    /**
     * The email address of the user who initiated this operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public String user;

    public Operation withUser(String user) {
        this.user = user;
        return this;
    }
    
    public Operation(){}
}
