// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteListenerActionEnum
type GETDeleteListenerActionEnum string

const (
	GETDeleteListenerActionEnumDeleteListener GETDeleteListenerActionEnum = "DeleteListener"
)

func (e *GETDeleteListenerActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteListener":
		*e = GETDeleteListenerActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteListenerActionEnum: %s", s)
	}
}

// GETDeleteListenerVersionEnum
type GETDeleteListenerVersionEnum string

const (
	GETDeleteListenerVersionEnumTwoThousandAndFifteen1201 GETDeleteListenerVersionEnum = "2015-12-01"
)

func (e *GETDeleteListenerVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2015-12-01":
		*e = GETDeleteListenerVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteListenerVersionEnum: %s", s)
	}
}

type GETDeleteListenerRequest struct {
	Action GETDeleteListenerActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Name (ARN) of the listener.
	ListenerArn       string                       `queryParam:"style=form,explode=true,name=ListenerArn"`
	Version           GETDeleteListenerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteListenerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
