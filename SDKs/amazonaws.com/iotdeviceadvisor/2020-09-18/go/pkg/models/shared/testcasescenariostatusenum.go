// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TestCaseScenarioStatusEnum string

const (
	TestCaseScenarioStatusEnumPass             TestCaseScenarioStatusEnum = "PASS"
	TestCaseScenarioStatusEnumFail             TestCaseScenarioStatusEnum = "FAIL"
	TestCaseScenarioStatusEnumCanceled         TestCaseScenarioStatusEnum = "CANCELED"
	TestCaseScenarioStatusEnumPending          TestCaseScenarioStatusEnum = "PENDING"
	TestCaseScenarioStatusEnumRunning          TestCaseScenarioStatusEnum = "RUNNING"
	TestCaseScenarioStatusEnumStopping         TestCaseScenarioStatusEnum = "STOPPING"
	TestCaseScenarioStatusEnumStopped          TestCaseScenarioStatusEnum = "STOPPED"
	TestCaseScenarioStatusEnumPassWithWarnings TestCaseScenarioStatusEnum = "PASS_WITH_WARNINGS"
	TestCaseScenarioStatusEnumError            TestCaseScenarioStatusEnum = "ERROR"
)

func (e *TestCaseScenarioStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PASS":
		fallthrough
	case "FAIL":
		fallthrough
	case "CANCELED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "PASS_WITH_WARNINGS":
		fallthrough
	case "ERROR":
		*e = TestCaseScenarioStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TestCaseScenarioStatusEnum: %s", s)
	}
}
