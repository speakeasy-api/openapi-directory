/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { QualificationTypeStatusEnum } from "./qualificationtypestatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  The QualificationType data structure represents a Qualification type, a description of a property of a Worker that must match the requirements of a HIT for the Worker to be able to accept the HIT. The type also describes how a Worker can obtain a Qualification of that type, such as through a Qualification test.
 */
export class QualificationType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnswerKey" })
  answerKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoGranted" })
  autoGranted?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoGrantedValue" })
  autoGrantedValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsRequestable" })
  isRequestable?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QualificationTypeId" })
  qualificationTypeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QualificationTypeStatus" })
  qualificationTypeStatus?: QualificationTypeStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RetryDelayInSeconds" })
  retryDelayInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Test" })
  test?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TestDurationInSeconds" })
  testDurationInSeconds?: number;
}
