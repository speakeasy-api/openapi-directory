"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Optional

class InvestmentProducts:
    r"""Investment products  (e.g. mutual funds, ETFs, stocks etc.) are bought and sold by the investor (or by the wealth manager on the investorâ€™s behalf).
    
    The Investment Products endpoint returns all the investment products that are offered by the wealth manager, as well as the current market price. The wealth manager must specify the universe of supported investment products via the WealthOS Admin UI.
    """
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_configured_investment_product_prices(self, request: operations.GetConfiguredInvestmentProductPricesRequest, security: operations.GetConfiguredInvestmentProductPricesSecurity) -> operations.GetConfiguredInvestmentProductPricesResponse:
        r"""Get Current Prices of all Investment Products
        Returns current prices of all the investment products configured for this tenancy
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/tenant/investment-products/v1/getCurrentPrices'
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetConfiguredInvestmentProductPricesRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetConfiguredInvestmentProductPricesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProductPrices200ApplicationJSON])
                res.get_configured_investment_product_prices_200_application_json_object = out
        elif http_res.status_code == 401:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProductPrices401ApplicationJSON])
                res.get_configured_investment_product_prices_401_application_json_object = out
        elif http_res.status_code == 403:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProductPrices403ApplicationJSON])
                res.get_configured_investment_product_prices_403_application_json_object = out
        elif http_res.status_code == 404:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProductPrices404ApplicationJSON])
                res.get_configured_investment_product_prices_404_application_json_object = out
        elif http_res.status_code == 429:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProductPrices429ApplicationJSON])
                res.get_configured_investment_product_prices_429_application_json_object = out
        elif http_res.status_code == 500:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProductPrices500ApplicationJSON])
                res.get_configured_investment_product_prices_500_application_json_object = out

        return res

    def get_configured_investment_products(self, request: operations.GetConfiguredInvestmentProductsRequest, security: operations.GetConfiguredInvestmentProductsSecurity) -> operations.GetConfiguredInvestmentProductsResponse:
        r"""Get Configured Investment Products
        Returns all the investment products configured for this tenancy. Request can be filtered by status to return all `active` or `inactive` investment products
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/tenant/investment-products/v1'
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetConfiguredInvestmentProductsRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetConfiguredInvestmentProductsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProducts200ApplicationJSON])
                res.get_configured_investment_products_200_application_json_object = out
        elif http_res.status_code == 401:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProducts401ApplicationJSON])
                res.get_configured_investment_products_401_application_json_object = out
        elif http_res.status_code == 403:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProducts403ApplicationJSON])
                res.get_configured_investment_products_403_application_json_object = out
        elif http_res.status_code == 404:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProducts404ApplicationJSON])
                res.get_configured_investment_products_404_application_json_object = out
        elif http_res.status_code == 429:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProducts429ApplicationJSON])
                res.get_configured_investment_products_429_application_json_object = out
        elif http_res.status_code == 500:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetConfiguredInvestmentProducts500ApplicationJSON])
                res.get_configured_investment_products_500_application_json_object = out

        return res

    def get_investment_product(self, request: operations.GetInvestmentProductRequest, security: operations.GetInvestmentProductSecurity) -> operations.GetInvestmentProductResponse:
        r"""Get details of a given Investment Product
        Returns the requested investment product
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetInvestmentProductRequest, base_url, '/tenant/investment-products/v1/{category_id}/{investment_product_id}', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetInvestmentProductResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProduct200ApplicationJSON])
                res.get_investment_product_200_application_json_object = out
        elif http_res.status_code == 401:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProduct401ApplicationJSON])
                res.get_investment_product_401_application_json_object = out
        elif http_res.status_code == 403:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProduct403ApplicationJSON])
                res.get_investment_product_403_application_json_object = out
        elif http_res.status_code == 404:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProduct404ApplicationJSON])
                res.get_investment_product_404_application_json_object = out
        elif http_res.status_code == 429:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProduct429ApplicationJSON])
                res.get_investment_product_429_application_json_object = out
        elif http_res.status_code == 500:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProduct500ApplicationJSON])
                res.get_investment_product_500_application_json_object = out

        return res

    def get_investment_product_price(self, request: operations.GetInvestmentProductPriceRequest, security: operations.GetInvestmentProductPriceSecurity) -> operations.GetInvestmentProductPriceResponse:
        r"""Get Current Price of an Investment Product
        Returns current price of the requested investment product
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetInvestmentProductPriceRequest, base_url, '/tenant/investment-products/v1/{category_id}/{investment_product_id}/getCurrentPrice', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetInvestmentProductPriceResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProductPrice200ApplicationJSON])
                res.get_investment_product_price_200_application_json_object = out
        elif http_res.status_code == 401:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProductPrice401ApplicationJSON])
                res.get_investment_product_price_401_application_json_object = out
        elif http_res.status_code == 403:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProductPrice403ApplicationJSON])
                res.get_investment_product_price_403_application_json_object = out
        elif http_res.status_code == 404:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProductPrice404ApplicationJSON])
                res.get_investment_product_price_404_application_json_object = out
        elif http_res.status_code == 429:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProductPrice429ApplicationJSON])
                res.get_investment_product_price_429_application_json_object = out
        elif http_res.status_code == 500:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[operations.GetInvestmentProductPrice500ApplicationJSON])
                res.get_investment_product_price_500_application_json_object = out

        return res

    