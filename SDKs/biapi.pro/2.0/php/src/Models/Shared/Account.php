<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Account - Successful DELETE on Account resource
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Account
{
    /**
     * Balance of the account
     * 
     * @var float $balance
     */
	#[\JMS\Serializer\Annotation\SerializedName('balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $balance;
    
    /**
     * This account has been bookmarked by user
     * 
     * @var int $bookmarked
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookmarked')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $bookmarked;
    
    /**
     * Amount of coming operations not yet debited
     * 
     * @var ?float $coming
     */
	#[\JMS\Serializer\Annotation\SerializedName('coming')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $coming = null;
    
    /**
     * Name of the company holding the employee savings of the account
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * Account currency
     * 
     * @var ?array<string, mixed> $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $currency = null;
    
    /**
     * This account is not found on the website anymore
     * 
     * @var ?\DateTime $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $deleted = null;
    
    /**
     * This account has been deleted by user and will not be synchronized anymore
     * 
     * @var ?\DateTime $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $disabled = null;
    
    /**
     * Display this account in accounts list
     * 
     * @var bool $display
     */
	#[\JMS\Serializer\Annotation\SerializedName('display')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $display;
    
    /**
     * If the last update has failed, the error code
     * 
     * @var ?string $error
     */
	#[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $error = null;
    
    /**
     * Account IBAN
     * 
     * @var ?string $iban
     */
	#[\JMS\Serializer\Annotation\SerializedName('iban')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iban = null;
    
    /**
     * ID of the account
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * ID of the related connection
     * 
     * @var ?int $idConnection
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_connection')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idConnection = null;
    
    /**
     * Id of the parent account
     * 
     * @var ?int $idParent
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_parent')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idParent = null;
    
    /**
     * ID of the related connection source
     * 
     * @var ?int $idSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_source')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idSource = null;
    
    /**
     * ID of the account type
     * 
     * @var ?int $idType
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_type')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idType = null;
    
    /**
     * ID of the related user
     * 
     * @var ?int $idUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_user')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $idUser = null;
    
    /**
     * Last successful update of the account
     * 
     * @var ?\DateTime $lastUpdate
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_update')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastUpdate = null;
    
    /**
     * Name of the account
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Account number
     * 
     * @var ?string $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
    /**
     * Opening date of the account
     * 
     * @var ?\DateTime $openingDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('opening_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $openingDate = null;
    
    /**
     * Original name of the account on the bank
     * 
     * @var string $originalName
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $originalName;
    
    /**
     * Relationship between the credentials owner and the account
     * 
     * @var ?string $ownership
     */
	#[\JMS\Serializer\Annotation\SerializedName('ownership')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownership = null;
    
    /**
     * Account usage (if not set by the user, displays the value of original_usage)
     * 
     * @var ?string $usage
     */
	#[\JMS\Serializer\Annotation\SerializedName('usage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $usage = null;
    
    /**
     * Account webid
     * 
     * @var ?string $webid
     */
	#[\JMS\Serializer\Annotation\SerializedName('webid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webid = null;
    
	public function __construct()
	{
		$this->balance = 0;
		$this->bookmarked = 0;
		$this->coming = null;
		$this->companyName = null;
		$this->currency = null;
		$this->deleted = null;
		$this->disabled = null;
		$this->display = false;
		$this->error = null;
		$this->iban = null;
		$this->id = 0;
		$this->idConnection = null;
		$this->idParent = null;
		$this->idSource = null;
		$this->idType = null;
		$this->idUser = null;
		$this->lastUpdate = null;
		$this->name = null;
		$this->number = null;
		$this->openingDate = null;
		$this->originalName = "";
		$this->ownership = null;
		$this->usage = null;
		$this->webid = null;
	}
}
