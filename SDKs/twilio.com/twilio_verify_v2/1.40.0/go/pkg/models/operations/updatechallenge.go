// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateChallengeServerList = []string{
	"https://verify.twilio.com",
}

type UpdateChallengeSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateChallengeUpdateChallengeRequest struct {
	// The optional payload needed to verify the Challenge. E.g., a TOTP would use the numeric code. For `TOTP` this value must be between 3 and 8 characters long. For `Push` this value can be up to 5456 characters in length
	AuthPayload *string `form:"name=AuthPayload"`
	// Custom metadata associated with the challenge. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{"os": "Android"}`. Can be up to 1024 characters in length.
	Metadata interface{} `form:"name=Metadata"`
}

type UpdateChallengeRequest struct {
	// Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.
	Identity    string                                 `pathParam:"style=simple,explode=false,name=Identity"`
	RequestBody *UpdateChallengeUpdateChallengeRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The unique SID identifier of the Service.
	ServiceSid string `pathParam:"style=simple,explode=false,name=ServiceSid"`
	// A 34 character string that uniquely identifies this Challenge.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

type UpdateChallengeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VerifyV2ServiceEntityChallenge *shared.VerifyV2ServiceEntityChallenge
}
