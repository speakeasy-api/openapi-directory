/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DomainVerificationSummary {
    /**
     * Timestamp indicating when the domain verification process was started
     */
    @JsonProperty("createdAt")
    public String createdAt;
    public DomainVerificationSummary withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * DCE verification type token (if DCE verification type).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dceToken")
    public String dceToken;
    public DomainVerificationSummary withDceToken(String dceToken) {
        this.dceToken = dceToken;
        return this;
    }
    
    /**
     * Domain name
     */
    @JsonProperty("domain")
    public String domain;
    public DomainVerificationSummary withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * A unique identifier that can be leveraged for retrieving domain verification related information. Primarily used when troubleshooting a request
     */
    @JsonProperty("domainEntityId")
    public Long domainEntityId;
    public DomainVerificationSummary withDomainEntityId(Long domainEntityId) {
        this.domainEntityId = domainEntityId;
        return this;
    }
    
    /**
     * Timestamp indicating when the domain verification process was last updated
     */
    @JsonProperty("modifiedAt")
    public String modifiedAt;
    public DomainVerificationSummary withModifiedAt(String modifiedAt) {
        this.modifiedAt = modifiedAt;
        return this;
    }
    
    /**
     * Domain verification status: 
     *   * `AWAITING` - Verification pending customer input
     *   * `INVALID` - SAN connected to a cancelled request
     *   * `COMPLETED` - Verification completed
     *   * `FAILED_VERIFICATION` - Verification failed
     *   * `PENDING_POSSIBLE_FRAUD` - Flagged for a system level fraud review
     *   * `VERIFIED_POSSIBLE_FRAUD` - Fraud detection reviewed but verified
     *   * `DROPPED` - SAN dropped from request
     *   * `REVOKED_CERT` - Certificate revoked
     *   * `DROPPED_GOOGLE_SAFE_BROWSING` - SAN dropped from request due to Google Safe Browsing check
     *   * `DROPPED_CERTIFICATE_AUTHORITY_AUTHORIZATION` - SAN dropped from request due to Certificate Authorization Authority DNS record check
     * 
     */
    @JsonProperty("status")
    public DomainVerificationSummaryStatusEnum status;
    public DomainVerificationSummary withStatus(DomainVerificationSummaryStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Domain verification type: 
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMIN` - Domain verified using domain control verification email sent to admin@&lt;your.domain.com&gt;
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_ADMINSTRATOR` - Domain verified using domain control verification email sent to administrator@&lt;your.domain.com&gt;
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_HOST_MASTER` - Domain verified using domain control verification email sent to hostmaster@&lt;your.domain.com&gt;
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_POST_MASTER` - Domain verified using domain control verification email sent to postmaster@&lt;your.domain.com&gt;
     *   * `AUTO_GENERATED_DOMAIN_ACCESS_EMAIL_WEB_MASTER` - Domain verified using domain control verification email sent to webmaster@&lt;your.domain.com&gt;
     *   * `DOMAIN_ACCESS_EMAIL` - Domain verified using a domain access email
     *   * `DOMAIN_ACCESS_LETTER` - Customer completed a domain access letter which was used for domain verification
     *   * `DOMAIN_CONTROL_EMAIL` - Domain verified using HTML file or DNS zone file text value
     *   * `DOMAIN_ZONE_CONTROL` - DNS zone file containing a pre-generated text value used for domain verification
     *   * `MANUAL_DOMAIN_ACCESS_EMAIL` - DAE sent to an email address manually entered by a rep
     *   * `PREVIOUS_DOMAIN_ACCESS_EMAIL` - Customers domain access email for a prior certificate request was used for domain verification
     *   * `REGISTRATION_AUTHORITY_DOMAIN_ACCESS_LETTER` - Representative reviewed a customer provided domain access letter and verified domain
     *   * `REGISTRATION_AUTHORITY_DOMAIN_ZONE_CONTROL` - Representative verified domain using a manual domain zone control check
     *   * `REGISTRATION_AUTHORITY_OVERRIDE` - Representative verified domain using alternative methods
     *   * `REGISTRATION_AUTHORITY_WEBSITE_CONTROL` - Representative verified domain using a manual website control check
     *   * `CUSTOMER_OWNED` - Validated customer account information used for domain control verification
     *   * `WEBSITE_CONTROL` - HTML file in root website directory containing pre-generated value used for domain control verification
     * 
     */
    @JsonProperty("type")
    public DomainVerificationSummaryTypeEnum type;
    public DomainVerificationSummary withType(DomainVerificationSummaryTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Type of domain name used for domain verification
     */
    @JsonProperty("usage")
    public DomainVerificationSummaryUsageEnum usage;
    public DomainVerificationSummary withUsage(DomainVerificationSummaryUsageEnum usage) {
        this.usage = usage;
        return this;
    }
    
}
