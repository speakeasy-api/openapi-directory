/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AutoText - A TextElement kind that represents auto text.
 */
public class AutoText {
    /**
     * The rendered content of this auto text, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public AutoText withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Represents the styling that can be applied to a TextRun. If this text is contained in a shape with a parent placeholder, then these text styles may be inherited from the parent. Which text styles are inherited depend on the nesting level of lists: * A text run in a paragraph that is not in a list will inherit its text style from the the newline character in the paragraph at the 0 nesting level of the list inside the parent placeholder. * A text run in a paragraph that is in a list will inherit its text style from the newline character in the paragraph at its corresponding nesting level of the list inside the parent placeholder. Inherited text styles are represented as unset fields in this message. If text is contained in a shape without a parent placeholder, unsetting these fields will revert the style to a value matching the defaults in the Slides editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("style")
    public TextStyle style;
    public AutoText withStyle(TextStyle style) {
        this.style = style;
        return this;
    }
    
    /**
     * The type of this auto text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AutoTextTypeEnum type;
    public AutoText withType(AutoTextTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
