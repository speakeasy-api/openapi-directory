/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IncludeConditions } from "./includeconditions";
import {
  LinkedForeignAccount,
  LinkedForeignAccountInput,
} from "./linkedforeignaccount";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The simple audience definition that will cause a user to be added to an audience.
 */
export class RemarketingAudienceAudienceDefinition extends SpeakeasyBase {
  /**
   * JSON template for an Analytics Remarketing Include Conditions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeConditions" })
  @Type(() => IncludeConditions)
  includeConditions?: IncludeConditions;
}

/**
 * Defines the conditions to exclude users from the audience.
 */
export class RemarketingAudienceStateBasedAudienceDefinitionExcludeConditions extends SpeakeasyBase {
  /**
   * Whether to make the exclusion TEMPORARY or PERMANENT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exclusionDuration" })
  exclusionDuration?: string;

  /**
   * The segment condition that will cause a user to be removed from an audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "segment" })
  segment?: string;
}

/**
 * A state based audience definition that will cause a user to be added or removed from an audience.
 */
export class RemarketingAudienceStateBasedAudienceDefinition extends SpeakeasyBase {
  /**
   * Defines the conditions to exclude users from the audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludeConditions" })
  @Type(() => RemarketingAudienceStateBasedAudienceDefinitionExcludeConditions)
  excludeConditions?: RemarketingAudienceStateBasedAudienceDefinitionExcludeConditions;

  /**
   * JSON template for an Analytics Remarketing Include Conditions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeConditions" })
  @Type(() => IncludeConditions)
  includeConditions?: IncludeConditions;
}

/**
 * JSON template for an Analytics remarketing audience.
 */
export class RemarketingAudienceInput extends SpeakeasyBase {
  /**
   * Account ID to which this remarketing audience belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The simple audience definition that will cause a user to be added to an audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audienceDefinition" })
  @Type(() => RemarketingAudienceAudienceDefinition)
  audienceDefinition?: RemarketingAudienceAudienceDefinition;

  /**
   * The type of audience, either SIMPLE or STATE_BASED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audienceType" })
  audienceType?: string;

  /**
   * Remarketing Audience ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Collection type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The linked ad accounts associated with this remarketing audience. A remarketing audience can have only one linkedAdAccount currently.
   */
  @SpeakeasyMetadata({ elemType: LinkedForeignAccountInput })
  @Expose({ name: "linkedAdAccounts" })
  @Type(() => LinkedForeignAccountInput)
  linkedAdAccounts?: LinkedForeignAccountInput[];

  /**
   * The views (profiles) that this remarketing audience is linked to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedViews" })
  linkedViews?: string[];

  /**
   * The name of this remarketing audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A state based audience definition that will cause a user to be added or removed from an audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateBasedAudienceDefinition" })
  @Type(() => RemarketingAudienceStateBasedAudienceDefinition)
  stateBasedAudienceDefinition?: RemarketingAudienceStateBasedAudienceDefinition;

  /**
   * Web property ID of the form UA-XXXXX-YY to which this remarketing audience belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyId" })
  webPropertyId?: string;
}

/**
 * JSON template for an Analytics remarketing audience.
 */
export class RemarketingAudience extends SpeakeasyBase {
  /**
   * Account ID to which this remarketing audience belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * The simple audience definition that will cause a user to be added to an audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audienceDefinition" })
  @Type(() => RemarketingAudienceAudienceDefinition)
  audienceDefinition?: RemarketingAudienceAudienceDefinition;

  /**
   * The type of audience, either SIMPLE or STATE_BASED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audienceType" })
  audienceType?: string;

  /**
   * Time this remarketing audience was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * The description of this remarketing audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Remarketing Audience ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Internal ID for the web property to which this remarketing audience belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "internalWebPropertyId" })
  internalWebPropertyId?: string;

  /**
   * Collection type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The linked ad accounts associated with this remarketing audience. A remarketing audience can have only one linkedAdAccount currently.
   */
  @SpeakeasyMetadata({ elemType: LinkedForeignAccount })
  @Expose({ name: "linkedAdAccounts" })
  @Type(() => LinkedForeignAccount)
  linkedAdAccounts?: LinkedForeignAccount[];

  /**
   * The views (profiles) that this remarketing audience is linked to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkedViews" })
  linkedViews?: string[];

  /**
   * The name of this remarketing audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A state based audience definition that will cause a user to be added or removed from an audience.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateBasedAudienceDefinition" })
  @Type(() => RemarketingAudienceStateBasedAudienceDefinition)
  stateBasedAudienceDefinition?: RemarketingAudienceStateBasedAudienceDefinition;

  /**
   * Time this remarketing audience was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;

  /**
   * Web property ID of the form UA-XXXXX-YY to which this remarketing audience belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyId" })
  webPropertyId?: string;
}
