// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateKeyPairActionEnum
type POSTCreateKeyPairActionEnum string

const (
	POSTCreateKeyPairActionEnumCreateKeyPair POSTCreateKeyPairActionEnum = "CreateKeyPair"
)

func (e POSTCreateKeyPairActionEnum) ToPointer() *POSTCreateKeyPairActionEnum {
	return &e
}

func (e *POSTCreateKeyPairActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateKeyPair":
		*e = POSTCreateKeyPairActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateKeyPairActionEnum: %v", v)
	}
}

// POSTCreateKeyPairVersionEnum
type POSTCreateKeyPairVersionEnum string

const (
	POSTCreateKeyPairVersionEnumTwoThousandAndSixteen1115 POSTCreateKeyPairVersionEnum = "2016-11-15"
)

func (e POSTCreateKeyPairVersionEnum) ToPointer() *POSTCreateKeyPairVersionEnum {
	return &e
}

func (e *POSTCreateKeyPairVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTCreateKeyPairVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateKeyPairVersionEnum: %v", v)
	}
}

type POSTCreateKeyPairRequest struct {
	Action            POSTCreateKeyPairActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                       `request:"mediaType=text/xml"`
	Version           POSTCreateKeyPairVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateKeyPairResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
