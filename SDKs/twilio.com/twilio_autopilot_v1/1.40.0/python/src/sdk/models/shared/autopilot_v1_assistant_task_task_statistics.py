"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutopilotV1AssistantTaskTaskStatistics:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the TaskStatistics resource."""  
    assistant_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assistant_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the Task associated with the resource."""  
    fields_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields_count'), 'exclude': lambda f: f is None }})
    r"""The total number of [Fields](https://www.twilio.com/docs/autopilot/api/task-field) associated with the Task."""  
    samples_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('samples_count'), 'exclude': lambda f: f is None }})
    r"""The total number of [Samples](https://www.twilio.com/docs/autopilot/api/task-sample) associated with the Task."""  
    task_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('task_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Task](https://www.twilio.com/docs/autopilot/api/task) for which the statistics were collected."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The absolute URL of the TaskStatistics resource."""  
    