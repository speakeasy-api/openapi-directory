/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FacetBucket } from "./facetbucket";
import { Expose, Type } from "class-transformer";

/**
 * Source specific facet response
 */
export class FacetResult extends SpeakeasyBase {
  /**
   * FacetBuckets for values in response containing at least a single result with the corresponding filter.
   */
  @SpeakeasyMetadata({ elemType: FacetBucket })
  @Expose({ name: "buckets" })
  @Type(() => FacetBucket)
  buckets?: FacetBucket[];

  /**
   * Object type for which facet results are returned. Can be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectType" })
  objectType?: string;

  /**
   * The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operatorName" })
  operatorName?: string;

  /**
   * Source name for which facet results are returned. Will not be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceName" })
  sourceName?: string;
}
