/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class NewProject1 {
    /**
     * Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.
     */
    @SpeakeasyMetadata("multipartForm:name=callback_url")
    public String callbackUrl;

    public NewProject1 withCallbackUrl(String callbackUrl) {
        this.callbackUrl = callbackUrl;
        return this;
    }
    
    /**
     * Coupon code to redeem
     */
    @SpeakeasyMetadata("multipartForm:name=coupon_code")
    public String couponCode;

    public NewProject1 withCouponCode(String couponCode) {
        this.couponCode = couponCode;
        return this;
    }
    
    /**
     * Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value.
     */
    @SpeakeasyMetadata("multipartForm:name=custom")
    public String[] custom;

    public NewProject1 withCustom(String[] custom) {
        this.custom = custom;
        return this;
    }
    
    /**
     * Optional. You can add as many files as you want in documents[] parameter. Or you add your documents later in separate calls.
     */
    @SpeakeasyMetadata("multipartForm:file")
    public NewProjectDocuments documents;

    public NewProject1 withDocuments(NewProjectDocuments documents) {
        this.documents = documents;
        return this;
    }
    
    /**
     * Optional. Only one glossary is supported at the moment.
     */
    @SpeakeasyMetadata("multipartForm:file")
    public NewProjectGlossaries glossaries;

    public NewProject1 withGlossaries(NewProjectGlossaries glossaries) {
        this.glossaries = glossaries;
        return this;
    }
    
    @SpeakeasyMetadata("multipartForm:name=source_language")
    public String sourceLanguage;

    public NewProject1 withSourceLanguage(String sourceLanguage) {
        this.sourceLanguage = sourceLanguage;
        return this;
    }
    
    /**
     * Optional. You can add as many files as you want in styleguides[] parameter. Or you add your style guides later in separate calls.
     */
    @SpeakeasyMetadata("multipartForm:file")
    public NewProjectStyleguides styleguides;

    public NewProject1 withStyleguides(NewProjectStyleguides styleguides) {
        this.styleguides = styleguides;
        return this;
    }
    
    @SpeakeasyMetadata("multipartForm:name=target_languages[]")
    public String[] targetLanguages;

    public NewProject1 withTargetLanguages(String[] targetLanguages) {
        this.targetLanguages = targetLanguages;
        return this;
    }
    
    public NewProject1(){}
}
