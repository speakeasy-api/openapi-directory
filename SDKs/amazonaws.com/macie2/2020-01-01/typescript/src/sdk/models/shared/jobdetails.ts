/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IsDefinedInJobEnum } from "./isdefinedinjobenum";
import { IsMonitoredByJobEnum } from "./ismonitoredbyjobenum";
import { Expose, Transform } from "class-transformer";

/**
 * Specifies whether any one-time or recurring classification jobs are configured to analyze data in an S3 bucket, and, if so, the details of the job that ran most recently.
 */
export class JobDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "isDefinedInJob" })
  isDefinedInJob?: IsDefinedInJobEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "isMonitoredByJob" })
  isMonitoredByJob?: IsMonitoredByJobEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastJobId" })
  lastJobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastJobRunTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastJobRunTime?: Date;
}
