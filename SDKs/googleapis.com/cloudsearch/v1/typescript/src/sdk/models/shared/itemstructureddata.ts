/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StructuredDataObject } from "./structureddataobject";
import { Expose, Type } from "class-transformer";

/**
 * Available structured data fields for the item.
 */
export class ItemStructuredData extends SpeakeasyBase {
  /**
   * Hashing value provided by the API caller. This can be used with the items.push method to calculate modified state. The maximum length is 2048 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hash" })
  hash?: string;

  /**
   * A structured data object consisting of named properties.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  @Type(() => StructuredDataObject)
  object?: StructuredDataObject;
}
