<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PlaceOrderRequestBodyItems
{
    /**
     * Array containing information on attachments.
     * 
     * @var ?array<string> $attachments
     */
	#[\JMS\Serializer\Annotation\SerializedName('attachments')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $attachments = null;
    
    /**
     * Information on services sold along with the SKU. Example: a gift package.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\PlaceOrderRequestBodyItemsBundleItems> $bundleItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('bundleItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\PlaceOrderRequestBodyItemsBundleItems>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bundleItems = null;
    
    /**
     * Comission.
     * 
     * @var ?int $commission
     */
	#[\JMS\Serializer\Annotation\SerializedName('commission')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $commission = null;
    
    /**
     * Freight comission
     * 
     * @var ?int $freightCommission
     */
	#[\JMS\Serializer\Annotation\SerializedName('freightCommission')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $freightCommission = null;
    
    /**
     * The SKU ID.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Indicates whether the order is a gift.
     * 
     * @var ?bool $isGift
     */
	#[\JMS\Serializer\Annotation\SerializedName('isGift')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isGift = null;
    
    /**
     * Item attachment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PlaceOrderRequestBodyItemsItemAttachment $itemAttachment
     */
	#[\JMS\Serializer\Annotation\SerializedName('itemAttachment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PlaceOrderRequestBodyItemsItemAttachment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PlaceOrderRequestBodyItemsItemAttachment $itemAttachment = null;
    
    /**
     * SKU measurement unit.
     * 
     * @var ?string $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurementUnit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measurementUnit = null;
    
    /**
     * Item price within the context of the order without separating cents. For example, $24.99 is represented `2499`.
     * 
     * @var ?int $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('price')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $price = null;
    
    /**
     * Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\PlaceOrderRequestBodyItemsPriceTags> $priceTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('priceTags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\PlaceOrderRequestBodyItemsPriceTags>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $priceTags = null;
    
    /**
     * The quantity of items of this specific SKU in the cart to be simulated.
     * 
     * @var int $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $quantity;
    
    /**
     * The ID of the seller responsible for this SKU. This ID can be found in your VTEX Admin.
     * 
     * @var string $seller
     */
	#[\JMS\Serializer\Annotation\SerializedName('seller')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $seller;
    
    /**
     * SKU unit multiplier.
     * 
     * @var ?int $unitMultiplier
     */
	#[\JMS\Serializer\Annotation\SerializedName('unitMultiplier')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $unitMultiplier = null;
    
	public function __construct()
	{
		$this->attachments = null;
		$this->bundleItems = null;
		$this->commission = null;
		$this->freightCommission = null;
		$this->id = "";
		$this->isGift = null;
		$this->itemAttachment = null;
		$this->measurementUnit = null;
		$this->price = null;
		$this->priceTags = null;
		$this->quantity = 0;
		$this->seller = "";
		$this->unitMultiplier = null;
	}
}
