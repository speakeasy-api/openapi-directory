// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DeviceAttributeEnum string

const (
	DeviceAttributeEnumArn                 DeviceAttributeEnum = "ARN"
	DeviceAttributeEnumPlatform            DeviceAttributeEnum = "PLATFORM"
	DeviceAttributeEnumFormFactor          DeviceAttributeEnum = "FORM_FACTOR"
	DeviceAttributeEnumManufacturer        DeviceAttributeEnum = "MANUFACTURER"
	DeviceAttributeEnumRemoteAccessEnabled DeviceAttributeEnum = "REMOTE_ACCESS_ENABLED"
	DeviceAttributeEnumRemoteDebugEnabled  DeviceAttributeEnum = "REMOTE_DEBUG_ENABLED"
	DeviceAttributeEnumAppiumVersion       DeviceAttributeEnum = "APPIUM_VERSION"
	DeviceAttributeEnumInstanceArn         DeviceAttributeEnum = "INSTANCE_ARN"
	DeviceAttributeEnumInstanceLabels      DeviceAttributeEnum = "INSTANCE_LABELS"
	DeviceAttributeEnumFleetType           DeviceAttributeEnum = "FLEET_TYPE"
	DeviceAttributeEnumOsVersion           DeviceAttributeEnum = "OS_VERSION"
	DeviceAttributeEnumModel               DeviceAttributeEnum = "MODEL"
	DeviceAttributeEnumAvailability        DeviceAttributeEnum = "AVAILABILITY"
)

func (e DeviceAttributeEnum) ToPointer() *DeviceAttributeEnum {
	return &e
}

func (e *DeviceAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ARN":
		fallthrough
	case "PLATFORM":
		fallthrough
	case "FORM_FACTOR":
		fallthrough
	case "MANUFACTURER":
		fallthrough
	case "REMOTE_ACCESS_ENABLED":
		fallthrough
	case "REMOTE_DEBUG_ENABLED":
		fallthrough
	case "APPIUM_VERSION":
		fallthrough
	case "INSTANCE_ARN":
		fallthrough
	case "INSTANCE_LABELS":
		fallthrough
	case "FLEET_TYPE":
		fallthrough
	case "OS_VERSION":
		fallthrough
	case "MODEL":
		fallthrough
	case "AVAILABILITY":
		*e = DeviceAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceAttributeEnum: %v", v)
	}
}
