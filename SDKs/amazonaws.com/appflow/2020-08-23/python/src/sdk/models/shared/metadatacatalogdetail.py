"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogtype_enum as shared_catalogtype_enum
from ..shared import registrationoutput as shared_registrationoutput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetadataCatalogDetail:
    r"""Describes the metadata catalog, metadata table, and data partitions that Amazon AppFlow used for the associated flow run."""
    
    catalog_type: Optional[shared_catalogtype_enum.CatalogTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalogType'), 'exclude': lambda f: f is None }})  
    partition_registration_output: Optional[shared_registrationoutput.RegistrationOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('partitionRegistrationOutput'), 'exclude': lambda f: f is None }})  
    table_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableName'), 'exclude': lambda f: f is None }})  
    table_registration_output: Optional[shared_registrationoutput.RegistrationOutput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableRegistrationOutput'), 'exclude': lambda f: f is None }})  
    