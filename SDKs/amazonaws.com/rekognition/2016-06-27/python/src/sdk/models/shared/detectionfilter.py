"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetectionFilter:
    r"""A set of parameters that allow you to filter out certain results from your returned results."""
    
    min_bounding_box_height: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinBoundingBoxHeight'), 'exclude': lambda f: f is None }})  
    min_bounding_box_width: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinBoundingBoxWidth'), 'exclude': lambda f: f is None }})  
    min_confidence: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinConfidence'), 'exclude': lambda f: f is None }})  
    