/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TestGetTestReport200ApplicationJSONStats {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("artifacts")
    public java.util.Map<String, String> artifacts;

    public TestGetTestReport200ApplicationJSONStats withArtifacts(java.util.Map<String, String> artifacts) {
        this.artifacts = artifacts;
        return this;
    }
    
    @JsonProperty("devices")
    public Double devices;

    public TestGetTestReport200ApplicationJSONStats withDevices(Double devices) {
        this.devices = devices;
        return this;
    }
    
    @JsonProperty("devices_failed")
    public Double devicesFailed;

    public TestGetTestReport200ApplicationJSONStats withDevicesFailed(Double devicesFailed) {
        this.devicesFailed = devicesFailed;
        return this;
    }
    
    @JsonProperty("devices_finished")
    public Double devicesFinished;

    public TestGetTestReport200ApplicationJSONStats withDevicesFinished(Double devicesFinished) {
        this.devicesFinished = devicesFinished;
        return this;
    }
    
    @JsonProperty("devices_not_runned")
    public Double devicesNotRunned;

    public TestGetTestReport200ApplicationJSONStats withDevicesNotRunned(Double devicesNotRunned) {
        this.devicesNotRunned = devicesNotRunned;
        return this;
    }
    
    @JsonProperty("devices_skipped")
    public Double devicesSkipped;

    public TestGetTestReport200ApplicationJSONStats withDevicesSkipped(Double devicesSkipped) {
        this.devicesSkipped = devicesSkipped;
        return this;
    }
    
    @JsonProperty("failed")
    public Double failed;

    public TestGetTestReport200ApplicationJSONStats withFailed(Double failed) {
        this.failed = failed;
        return this;
    }
    
    @JsonProperty("filesize")
    public Double filesize;

    public TestGetTestReport200ApplicationJSONStats withFilesize(Double filesize) {
        this.filesize = filesize;
        return this;
    }
    
    @JsonProperty("os")
    public Double os;

    public TestGetTestReport200ApplicationJSONStats withOs(Double os) {
        this.os = os;
        return this;
    }
    
    @JsonProperty("passed")
    public Double passed;

    public TestGetTestReport200ApplicationJSONStats withPassed(Double passed) {
        this.passed = passed;
        return this;
    }
    
    @JsonProperty("skipped")
    public Double skipped;

    public TestGetTestReport200ApplicationJSONStats withSkipped(Double skipped) {
        this.skipped = skipped;
        return this;
    }
    
    @JsonProperty("step_count")
    public Double stepCount;

    public TestGetTestReport200ApplicationJSONStats withStepCount(Double stepCount) {
        this.stepCount = stepCount;
        return this;
    }
    
    @JsonProperty("total")
    public Double total;

    public TestGetTestReport200ApplicationJSONStats withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    @JsonProperty("totalDeviceMinutes")
    public Double totalDeviceMinutes;

    public TestGetTestReport200ApplicationJSONStats withTotalDeviceMinutes(Double totalDeviceMinutes) {
        this.totalDeviceMinutes = totalDeviceMinutes;
        return this;
    }
    
    public TestGetTestReport200ApplicationJSONStats(@JsonProperty("devices") Double devices, @JsonProperty("devices_failed") Double devicesFailed, @JsonProperty("devices_finished") Double devicesFinished, @JsonProperty("devices_not_runned") Double devicesNotRunned, @JsonProperty("devices_skipped") Double devicesSkipped, @JsonProperty("failed") Double failed, @JsonProperty("filesize") Double filesize, @JsonProperty("os") Double os, @JsonProperty("passed") Double passed, @JsonProperty("skipped") Double skipped, @JsonProperty("step_count") Double stepCount, @JsonProperty("total") Double total, @JsonProperty("totalDeviceMinutes") Double totalDeviceMinutes) {
        this.devices = devices;
        this.devicesFailed = devicesFailed;
        this.devicesFinished = devicesFinished;
        this.devicesNotRunned = devicesNotRunned;
        this.devicesSkipped = devicesSkipped;
        this.failed = failed;
        this.filesize = filesize;
        this.os = os;
        this.passed = passed;
        this.skipped = skipped;
        this.stepCount = stepCount;
        this.total = total;
        this.totalDeviceMinutes = totalDeviceMinutes;
  }
}
