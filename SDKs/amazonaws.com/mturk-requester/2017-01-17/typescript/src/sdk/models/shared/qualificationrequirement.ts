/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComparatorEnum } from "./comparatorenum";
import { HITAccessActionsEnum } from "./hitaccessactionsenum";
import { Locale } from "./locale";
import { Expose, Type } from "class-transformer";

/**
 *  The QualificationRequirement data structure describes a Qualification that a Worker must have before the Worker is allowed to accept a HIT. A requirement may optionally state that a Worker must have the Qualification in order to preview the HIT, or see the HIT in search results.
 */
export class QualificationRequirement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ActionsGuarded" })
  actionsGuarded?: HITAccessActionsEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Comparator" })
  comparator: ComparatorEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IntegerValues" })
  integerValues?: number[];

  @SpeakeasyMetadata({ elemType: Locale })
  @Expose({ name: "LocaleValues" })
  @Type(() => Locale)
  localeValues?: Locale[];

  @SpeakeasyMetadata()
  @Expose({ name: "QualificationTypeId" })
  qualificationTypeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequiredToPreview" })
  requiredToPreview?: boolean;
}
