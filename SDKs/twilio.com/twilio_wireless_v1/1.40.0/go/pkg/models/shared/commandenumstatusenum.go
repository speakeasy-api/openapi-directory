// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CommandEnumStatusEnum - The status of the resources to read. Can be: `queued`, `sent`, `delivered`, `received`, or `failed`.
type CommandEnumStatusEnum string

const (
	CommandEnumStatusEnumQueued    CommandEnumStatusEnum = "queued"
	CommandEnumStatusEnumSent      CommandEnumStatusEnum = "sent"
	CommandEnumStatusEnumDelivered CommandEnumStatusEnum = "delivered"
	CommandEnumStatusEnumReceived  CommandEnumStatusEnum = "received"
	CommandEnumStatusEnumFailed    CommandEnumStatusEnum = "failed"
)

func (e *CommandEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "queued":
		fallthrough
	case "sent":
		fallthrough
	case "delivered":
		fallthrough
	case "received":
		fallthrough
	case "failed":
		*e = CommandEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandEnumStatusEnum: %s", s)
	}
}
