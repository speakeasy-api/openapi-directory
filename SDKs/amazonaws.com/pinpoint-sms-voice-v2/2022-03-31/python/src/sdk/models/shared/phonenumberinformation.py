"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import messagetype_enum as shared_messagetype_enum
from ..shared import numbercapability_enum as shared_numbercapability_enum
from ..shared import numberstatus_enum as shared_numberstatus_enum
from ..shared import numbertype_enum as shared_numbertype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PhoneNumberInformation:
    r"""The information for a phone number in an Amazon Web Services account."""
    
    created_timestamp: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedTimestamp'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    deletion_protection_enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeletionProtectionEnabled') }})  
    iso_country_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsoCountryCode') }})  
    message_type: shared_messagetype_enum.MessageTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MessageType') }})  
    monthly_leasing_price: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonthlyLeasingPrice') }})  
    number_capabilities: list[shared_numbercapability_enum.NumberCapabilityEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberCapabilities') }})  
    number_type: shared_numbertype_enum.NumberTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberType') }})  
    opt_out_list_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OptOutListName') }})  
    phone_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhoneNumber') }})  
    phone_number_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhoneNumberArn') }})  
    self_managed_opt_outs_enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SelfManagedOptOutsEnabled') }})  
    status: shared_numberstatus_enum.NumberStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})  
    two_way_enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TwoWayEnabled') }})  
    phone_number_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PhoneNumberId'), 'exclude': lambda f: f is None }})  
    pool_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PoolId'), 'exclude': lambda f: f is None }})  
    two_way_channel_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TwoWayChannelArn'), 'exclude': lambda f: f is None }})  
    