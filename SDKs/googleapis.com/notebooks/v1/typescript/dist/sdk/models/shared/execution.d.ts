import { SpeakeasyBase } from "../../../internal/utils";
import { ExecutionTemplate } from "./executiontemplate";
/**
 * Output only. State of the underlying AI Platform job.
 */
export declare enum ExecutionStateEnum {
    StateUnspecified = "STATE_UNSPECIFIED",
    Queued = "QUEUED",
    Preparing = "PREPARING",
    Running = "RUNNING",
    Succeeded = "SUCCEEDED",
    Failed = "FAILED",
    Cancelling = "CANCELLING",
    Cancelled = "CANCELLED",
    Expired = "EXPIRED",
    Initializing = "INITIALIZING"
}
/**
 * The definition of a single executed notebook.
 */
export declare class Execution extends SpeakeasyBase {
    /**
     * Output only. Time the Execution was instantiated.
     */
    createTime?: string;
    /**
     * A brief description of this execution.
     */
    description?: string;
    /**
     * Output only. Name used for UI purposes. Name can only contain alphanumeric characters and underscores '_'.
     */
    displayName?: string;
    /**
     * The description a notebook execution workload.
     */
    executionTemplate?: ExecutionTemplate;
    /**
     * Output only. The URI of the external job used to execute the notebook.
     */
    jobUri?: string;
    /**
     * Output only. The resource name of the execute. Format: `projects/{project_id}/locations/{location}/executions/{execution_id}`
     */
    name?: string;
    /**
     * Output notebook file generated by this execution
     */
    outputNotebookFile?: string;
    /**
     * Output only. State of the underlying AI Platform job.
     */
    state?: ExecutionStateEnum;
    /**
     * Output only. Time the Execution was last updated.
     */
    updateTime?: string;
}
/**
 * The definition of a single executed notebook.
 */
export declare class ExecutionInput extends SpeakeasyBase {
    /**
     * A brief description of this execution.
     */
    description?: string;
    /**
     * The description a notebook execution workload.
     */
    executionTemplate?: ExecutionTemplate;
    /**
     * Output notebook file generated by this execution
     */
    outputNotebookFile?: string;
}
