/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetTopicRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Api-Key",
  })
  apiKey: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Api-Username",
  })
  apiUsername: string;

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class GetTopic200ApplicationJSONActionsSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_act" })
  canAct: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

export class GetTopic200ApplicationJSONDetailsCreatedBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class GetTopic200ApplicationJSONDetailsLastPoster extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class GetTopic200ApplicationJSONDetailsParticipants extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_name" })
  flairName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "moderator" })
  moderator: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "post_count" })
  postCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group_name" })
  primaryGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trust_level" })
  trustLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class GetTopic200ApplicationJSONDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_archive_topic" })
  canArchiveTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_close_topic" })
  canCloseTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_convert_topic" })
  canConvertTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_create_post" })
  canCreatePost: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_delete" })
  canDelete: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit" })
  canEdit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit_staff_notes" })
  canEditStaffNotes: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_flag_topic" })
  canFlagTopic?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_invite_to" })
  canInviteTo?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_invite_via_email" })
  canInviteViaEmail?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_moderate_category" })
  canModerateCategory: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_move_posts" })
  canMovePosts: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_pin_unpin_topic" })
  canPinUnpinTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_remove_allowed_users" })
  canRemoveAllowedUsers: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_remove_self_id" })
  canRemoveSelfId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "can_reply_as_new_topic" })
  canReplyAsNewTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_review_topic" })
  canReviewTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_split_merge_topic" })
  canSplitMergeTopic: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_toggle_topic_visibility" })
  canToggleTopicVisibility: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  @Type(() => GetTopic200ApplicationJSONDetailsCreatedBy)
  createdBy: GetTopic200ApplicationJSONDetailsCreatedBy;

  @SpeakeasyMetadata()
  @Expose({ name: "last_poster" })
  @Type(() => GetTopic200ApplicationJSONDetailsLastPoster)
  lastPoster: GetTopic200ApplicationJSONDetailsLastPoster;

  @SpeakeasyMetadata()
  @Expose({ name: "notification_level" })
  notificationLevel: number;

  @SpeakeasyMetadata({
    elemType: GetTopic200ApplicationJSONDetailsParticipants,
  })
  @Expose({ name: "participants" })
  @Type(() => GetTopic200ApplicationJSONDetailsParticipants)
  participants?: GetTopic200ApplicationJSONDetailsParticipants[];
}

export class GetTopic200ApplicationJSONPostStreamPostsActionsSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_act" })
  canAct: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

export class GetTopic200ApplicationJSONPostStreamPostsLinkCounts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "clicks" })
  clicks: number;

  @SpeakeasyMetadata()
  @Expose({ name: "internal" })
  internal: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "reflection" })
  reflection: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

export class GetTopic200ApplicationJSONPostStreamPosts extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetTopic200ApplicationJSONPostStreamPostsActionsSummary,
  })
  @Expose({ name: "actions_summary" })
  @Type(() => GetTopic200ApplicationJSONPostStreamPostsActionsSummary)
  actionsSummary: GetTopic200ApplicationJSONPostStreamPostsActionsSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmarked" })
  bookmarked: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_delete" })
  canDelete: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit" })
  canEdit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_recover" })
  canRecover: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_view_edit_history" })
  canViewEditHistory: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_wiki" })
  canWiki: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "cooked" })
  cooked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_at" })
  deletedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "display_username" })
  displayUsername: string;

  @SpeakeasyMetadata()
  @Expose({ name: "edit_reason" })
  editReason: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_name" })
  flairName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "incoming_link_count" })
  incomingLinkCount: number;

  @SpeakeasyMetadata({
    elemType: GetTopic200ApplicationJSONPostStreamPostsLinkCounts,
  })
  @Expose({ name: "link_counts" })
  @Type(() => GetTopic200ApplicationJSONPostStreamPostsLinkCounts)
  linkCounts: GetTopic200ApplicationJSONPostStreamPostsLinkCounts[];

  @SpeakeasyMetadata()
  @Expose({ name: "moderator" })
  moderator: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "post_number" })
  postNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_type" })
  postType: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group_name" })
  primaryGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quote_count" })
  quoteCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "read" })
  read: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "readers_count" })
  readersCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reads" })
  reads: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_count" })
  replyCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_to_post_number" })
  replyToPostNumber: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_id" })
  reviewableId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_score_count" })
  reviewableScoreCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_score_pending_count" })
  reviewableScorePendingCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  @SpeakeasyMetadata()
  @Expose({ name: "staff" })
  staff: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_id" })
  topicId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_slug" })
  topicSlug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trust_level" })
  trustLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_deleted" })
  userDeleted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "user_title" })
  userTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;

  @SpeakeasyMetadata()
  @Expose({ name: "wiki" })
  wiki: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "yours" })
  yours: boolean;
}

export class GetTopic200ApplicationJSONPostStream extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetTopic200ApplicationJSONPostStreamPosts })
  @Expose({ name: "posts" })
  @Type(() => GetTopic200ApplicationJSONPostStreamPosts)
  posts: GetTopic200ApplicationJSONPostStreamPosts[];

  @SpeakeasyMetadata()
  @Expose({ name: "stream" })
  stream: any[];
}

export class GetTopic200ApplicationJSONSuggestedTopicsPostersUser extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;
}

export class GetTopic200ApplicationJSONSuggestedTopicsPosters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "extras" })
  extras: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => GetTopic200ApplicationJSONSuggestedTopicsPostersUser)
  user: GetTopic200ApplicationJSONSuggestedTopicsPostersUser;
}

export class GetTopic200ApplicationJSONSuggestedTopics extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "archetype" })
  archetype: string;

  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmarked" })
  bookmarked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bumped" })
  bumped: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "bumped_at" })
  bumpedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "category_id" })
  categoryId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "closed" })
  closed: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "excerpt" })
  excerpt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fancy_title" })
  fancyTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "featured_link" })
  featuredLink: string;

  @SpeakeasyMetadata()
  @Expose({ name: "highest_post_number" })
  highestPostNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_posted_at" })
  lastPostedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "like_count" })
  likeCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "liked" })
  liked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pinned" })
  pinned: boolean;

  @SpeakeasyMetadata({
    elemType: GetTopic200ApplicationJSONSuggestedTopicsPosters,
  })
  @Expose({ name: "posters" })
  @Type(() => GetTopic200ApplicationJSONSuggestedTopicsPosters)
  posters: GetTopic200ApplicationJSONSuggestedTopicsPosters[];

  @SpeakeasyMetadata()
  @Expose({ name: "posts_count" })
  postsCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_count" })
  replyCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags_descriptions" })
  tagsDescriptions: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unpinned" })
  unpinned: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unseen" })
  unseen: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "views" })
  views: number;

  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible: boolean;
}

/**
 * specific posts
 */
export class GetTopic200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: GetTopic200ApplicationJSONActionsSummary })
  @Expose({ name: "actions_summary" })
  @Type(() => GetTopic200ApplicationJSONActionsSummary)
  actionsSummary: GetTopic200ApplicationJSONActionsSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "archetype" })
  archetype: string;

  @SpeakeasyMetadata()
  @Expose({ name: "archived" })
  archived: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmarked" })
  bookmarked: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmarks" })
  bookmarks: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "category_id" })
  categoryId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "chunk_size" })
  chunkSize: number;

  @SpeakeasyMetadata()
  @Expose({ name: "closed" })
  closed: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "current_post_number" })
  currentPostNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_at" })
  deletedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_by" })
  deletedBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  @Type(() => GetTopic200ApplicationJSONDetails)
  details: GetTopic200ApplicationJSONDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "draft" })
  draft: string;

  @SpeakeasyMetadata()
  @Expose({ name: "draft_key" })
  draftKey: string;

  @SpeakeasyMetadata()
  @Expose({ name: "draft_sequence" })
  draftSequence: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fancy_title" })
  fancyTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "featured_link" })
  featuredLink: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_deleted" })
  hasDeleted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "has_summary" })
  hasSummary: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "highest_post_number" })
  highestPostNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "image_url" })
  imageUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_posted_at" })
  lastPostedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "like_count" })
  likeCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "message_bus_last_id" })
  messageBusLastId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "participant_count" })
  participantCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "pinned" })
  pinned: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "pinned_at" })
  pinnedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pinned_globally" })
  pinnedGlobally: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "pinned_until" })
  pinnedUntil: string;

  @SpeakeasyMetadata()
  @Expose({ name: "post_stream" })
  @Type(() => GetTopic200ApplicationJSONPostStream)
  postStream: GetTopic200ApplicationJSONPostStream;

  @SpeakeasyMetadata()
  @Expose({ name: "posts_count" })
  postsCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_count" })
  replyCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "show_read_indicator" })
  showReadIndicator: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "slow_mode_enabled_until" })
  slowModeEnabledUntil: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slow_mode_seconds" })
  slowModeSeconds: number;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata({ elemType: GetTopic200ApplicationJSONSuggestedTopics })
  @Expose({ name: "suggested_topics" })
  @Type(() => GetTopic200ApplicationJSONSuggestedTopics)
  suggestedTopics: GetTopic200ApplicationJSONSuggestedTopics[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags_descriptions" })
  tagsDescriptions: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "thumbnails" })
  thumbnails: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeline_lookup" })
  timelineLookup: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_timer" })
  topicTimer: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unpinned" })
  unpinned: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "views" })
  views: number;

  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "word_count" })
  wordCount: number;
}

export class GetTopicResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * specific posts
   */
  @SpeakeasyMetadata()
  getTopic200ApplicationJSONObject?: GetTopic200ApplicationJSON;
}
