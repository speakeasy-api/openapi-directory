<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostCertificatesCreateCertificateRequest
{
    /**
     * Certificate and chain in PEM format, in order so that each record directly certifies the one preceding. Required for type `uploaded` Certificates.
     * 
     * @var ?string $certificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $certificate = null;
    
    /**
     * Domains and subdomains that should be contained in the Certificate issued by *Let's Encrypt*. Required for type `managed` Certificates.
     * 
     * @var ?array<string> $domainNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain_names')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $domainNames = null;
    
    /**
     * User-defined labels (key-value pairs)
     * 
     * @var ?array<string, mixed> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Name of the Certificate
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Certificate key in PEM format. Required for type `uploaded` Certificates.
     * 
     * @var ?string $privateKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('private_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privateKey = null;
    
    /**
     * Choose between uploading a Certificate in PEM format or requesting a managed *Let's Encrypt* Certificate. If omitted defaults to `uploaded`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PostCertificatesCreateCertificateRequestTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostCertificatesCreateCertificateRequestTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PostCertificatesCreateCertificateRequestTypeEnum $type = null;
    
	public function __construct()
	{
		$this->certificate = null;
		$this->domainNames = null;
		$this->labels = null;
		$this->name = "";
		$this->privateKey = null;
		$this->type = null;
	}
}
