/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccessLocations - Home office and physical location of the principal.
 */
public class AccessLocations {
    /**
     * The "home office" location of the principal. A two-letter country code (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principalOfficeCountry")
    public String principalOfficeCountry;

    public AccessLocations withPrincipalOfficeCountry(String principalOfficeCountry) {
        this.principalOfficeCountry = principalOfficeCountry;
        return this;
    }
    
    /**
     * Physical location of the principal at the time of the access. A two-letter country code (ISO 3166-1 alpha-2), such as "US", "DE" or "GB" or a region code. In some limited situations Google systems may refer refer to a region code instead of a country code. Possible Region Codes: * ASI: Asia * EUR: Europe * OCE: Oceania * AFR: Africa * NAM: North America * SAM: South America * ANT: Antarctica * ANY: Any location
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principalPhysicalLocationCountry")
    public String principalPhysicalLocationCountry;

    public AccessLocations withPrincipalPhysicalLocationCountry(String principalPhysicalLocationCountry) {
        this.principalPhysicalLocationCountry = principalPhysicalLocationCountry;
        return this;
    }
    
    public AccessLocations(){}
}
