/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

export class CreateRelationalDatabaseFromSnapshotRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "availabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publiclyAccessible" })
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseBundleId" })
  relationalDatabaseBundleId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseName" })
  relationalDatabaseName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationalDatabaseSnapshotName" })
  relationalDatabaseSnapshotName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "restoreTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  restoreTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceRelationalDatabaseName" })
  sourceRelationalDatabaseName?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "useLatestRestorableTime" })
  useLatestRestorableTime?: boolean;
}
