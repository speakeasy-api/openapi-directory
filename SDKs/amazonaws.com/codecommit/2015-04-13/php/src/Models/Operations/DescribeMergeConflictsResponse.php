<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class DescribeMergeConflictsResponse
{
    /**
     * CommitDoesNotExistException
     * 
     * @var mixed $commitDoesNotExistException
     */
	
    public mixed $commitDoesNotExistException = null;
    
    /**
     * CommitRequiredException
     * 
     * @var mixed $commitRequiredException
     */
	
    public mixed $commitRequiredException = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DescribeMergeConflictsOutput $describeMergeConflictsOutput
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\DescribeMergeConflictsOutput $describeMergeConflictsOutput = null;
    
    /**
     * EncryptionIntegrityChecksFailedException
     * 
     * @var mixed $encryptionIntegrityChecksFailedException
     */
	
    public mixed $encryptionIntegrityChecksFailedException = null;
    
    /**
     * EncryptionKeyAccessDeniedException
     * 
     * @var mixed $encryptionKeyAccessDeniedException
     */
	
    public mixed $encryptionKeyAccessDeniedException = null;
    
    /**
     * EncryptionKeyDisabledException
     * 
     * @var mixed $encryptionKeyDisabledException
     */
	
    public mixed $encryptionKeyDisabledException = null;
    
    /**
     * EncryptionKeyNotFoundException
     * 
     * @var mixed $encryptionKeyNotFoundException
     */
	
    public mixed $encryptionKeyNotFoundException = null;
    
    /**
     * EncryptionKeyUnavailableException
     * 
     * @var mixed $encryptionKeyUnavailableException
     */
	
    public mixed $encryptionKeyUnavailableException = null;
    
    /**
     * FileDoesNotExistException
     * 
     * @var mixed $fileDoesNotExistException
     */
	
    public mixed $fileDoesNotExistException = null;
    
    /**
     * InvalidCommitException
     * 
     * @var mixed $invalidCommitException
     */
	
    public mixed $invalidCommitException = null;
    
    /**
     * InvalidConflictDetailLevelException
     * 
     * @var mixed $invalidConflictDetailLevelException
     */
	
    public mixed $invalidConflictDetailLevelException = null;
    
    /**
     * InvalidConflictResolutionStrategyException
     * 
     * @var mixed $invalidConflictResolutionStrategyException
     */
	
    public mixed $invalidConflictResolutionStrategyException = null;
    
    /**
     * InvalidContinuationTokenException
     * 
     * @var mixed $invalidContinuationTokenException
     */
	
    public mixed $invalidContinuationTokenException = null;
    
    /**
     * InvalidMaxMergeHunksException
     * 
     * @var mixed $invalidMaxMergeHunksException
     */
	
    public mixed $invalidMaxMergeHunksException = null;
    
    /**
     * InvalidMergeOptionException
     * 
     * @var mixed $invalidMergeOptionException
     */
	
    public mixed $invalidMergeOptionException = null;
    
    /**
     * InvalidPathException
     * 
     * @var mixed $invalidPathException
     */
	
    public mixed $invalidPathException = null;
    
    /**
     * InvalidRepositoryNameException
     * 
     * @var mixed $invalidRepositoryNameException
     */
	
    public mixed $invalidRepositoryNameException = null;
    
    /**
     * MaximumFileContentToLoadExceededException
     * 
     * @var mixed $maximumFileContentToLoadExceededException
     */
	
    public mixed $maximumFileContentToLoadExceededException = null;
    
    /**
     * MaximumItemsToCompareExceededException
     * 
     * @var mixed $maximumItemsToCompareExceededException
     */
	
    public mixed $maximumItemsToCompareExceededException = null;
    
    /**
     * MergeOptionRequiredException
     * 
     * @var mixed $mergeOptionRequiredException
     */
	
    public mixed $mergeOptionRequiredException = null;
    
    /**
     * PathRequiredException
     * 
     * @var mixed $pathRequiredException
     */
	
    public mixed $pathRequiredException = null;
    
    /**
     * RepositoryDoesNotExistException
     * 
     * @var mixed $repositoryDoesNotExistException
     */
	
    public mixed $repositoryDoesNotExistException = null;
    
    /**
     * RepositoryNameRequiredException
     * 
     * @var mixed $repositoryNameRequiredException
     */
	
    public mixed $repositoryNameRequiredException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * TipsDivergenceExceededException
     * 
     * @var mixed $tipsDivergenceExceededException
     */
	
    public mixed $tipsDivergenceExceededException = null;
    
	public function __construct()
	{
		$this->commitDoesNotExistException = null;
		$this->commitRequiredException = null;
		$this->contentType = "";
		$this->describeMergeConflictsOutput = null;
		$this->encryptionIntegrityChecksFailedException = null;
		$this->encryptionKeyAccessDeniedException = null;
		$this->encryptionKeyDisabledException = null;
		$this->encryptionKeyNotFoundException = null;
		$this->encryptionKeyUnavailableException = null;
		$this->fileDoesNotExistException = null;
		$this->invalidCommitException = null;
		$this->invalidConflictDetailLevelException = null;
		$this->invalidConflictResolutionStrategyException = null;
		$this->invalidContinuationTokenException = null;
		$this->invalidMaxMergeHunksException = null;
		$this->invalidMergeOptionException = null;
		$this->invalidPathException = null;
		$this->invalidRepositoryNameException = null;
		$this->maximumFileContentToLoadExceededException = null;
		$this->maximumItemsToCompareExceededException = null;
		$this->mergeOptionRequiredException = null;
		$this->pathRequiredException = null;
		$this->repositoryDoesNotExistException = null;
		$this->repositoryNameRequiredException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->tipsDivergenceExceededException = null;
	}
}
