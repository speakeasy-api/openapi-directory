// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectorStateEnum string

const (
	ConnectorStateEnumRunning  ConnectorStateEnum = "RUNNING"
	ConnectorStateEnumCreating ConnectorStateEnum = "CREATING"
	ConnectorStateEnumUpdating ConnectorStateEnum = "UPDATING"
	ConnectorStateEnumDeleting ConnectorStateEnum = "DELETING"
	ConnectorStateEnumFailed   ConnectorStateEnum = "FAILED"
)

func (e ConnectorStateEnum) ToPointer() *ConnectorStateEnum {
	return &e
}

func (e *ConnectorStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RUNNING":
		fallthrough
	case "CREATING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		*e = ConnectorStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectorStateEnum: %v", v)
	}
}
