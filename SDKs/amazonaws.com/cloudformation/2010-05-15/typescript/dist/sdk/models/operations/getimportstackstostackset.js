"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETImportStacksToStackSetResponse = exports.GETImportStacksToStackSetRequest = exports.GETImportStacksToStackSetVersionEnum = exports.GETImportStacksToStackSetOperationPreferences = exports.GETImportStacksToStackSetCallAsEnum = exports.GETImportStacksToStackSetActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var shared = __importStar(require("../shared"));
var GETImportStacksToStackSetActionEnum;
(function (GETImportStacksToStackSetActionEnum) {
    GETImportStacksToStackSetActionEnum["ImportStacksToStackSet"] = "ImportStacksToStackSet";
})(GETImportStacksToStackSetActionEnum = exports.GETImportStacksToStackSetActionEnum || (exports.GETImportStacksToStackSetActionEnum = {}));
/**
 * <p>By default, <code>SELF</code> is specified. Use <code>SELF</code> for stack sets with self-managed permissions.</p> <ul> <li> <p>If you are signed in to the management account, specify <code>SELF</code>.</p> </li> <li> <p>For service managed stack sets, specify <code>DELEGATED_ADMIN</code>.</p> </li> </ul>
 */
var GETImportStacksToStackSetCallAsEnum;
(function (GETImportStacksToStackSetCallAsEnum) {
    GETImportStacksToStackSetCallAsEnum["Self"] = "SELF";
    GETImportStacksToStackSetCallAsEnum["DelegatedAdmin"] = "DELEGATED_ADMIN";
})(GETImportStacksToStackSetCallAsEnum = exports.GETImportStacksToStackSetCallAsEnum || (exports.GETImportStacksToStackSetCallAsEnum = {}));
/**
 * <p>The user-specified preferences for how CloudFormation performs a stack set operation.</p> <p>For more information about maximum concurrent accounts and failure tolerance, see <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options">Stack set operation options</a>.</p>
 */
var GETImportStacksToStackSetOperationPreferences = /** @class */ (function (_super) {
    __extends(GETImportStacksToStackSetOperationPreferences, _super);
    function GETImportStacksToStackSetOperationPreferences() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=FailureToleranceCount" }),
        __metadata("design:type", Number)
    ], GETImportStacksToStackSetOperationPreferences.prototype, "failureToleranceCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=FailureTolerancePercentage" }),
        __metadata("design:type", Number)
    ], GETImportStacksToStackSetOperationPreferences.prototype, "failureTolerancePercentage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=MaxConcurrentCount" }),
        __metadata("design:type", Number)
    ], GETImportStacksToStackSetOperationPreferences.prototype, "maxConcurrentCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=MaxConcurrentPercentage" }),
        __metadata("design:type", Number)
    ], GETImportStacksToStackSetOperationPreferences.prototype, "maxConcurrentPercentage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=RegionConcurrencyType" }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetOperationPreferences.prototype, "regionConcurrencyType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=RegionOrder" }),
        __metadata("design:type", Array)
    ], GETImportStacksToStackSetOperationPreferences.prototype, "regionOrder", void 0);
    return GETImportStacksToStackSetOperationPreferences;
}(utils_1.SpeakeasyBase));
exports.GETImportStacksToStackSetOperationPreferences = GETImportStacksToStackSetOperationPreferences;
var GETImportStacksToStackSetVersionEnum;
(function (GETImportStacksToStackSetVersionEnum) {
    GETImportStacksToStackSetVersionEnum["TwoThousandAndTen0515"] = "2010-05-15";
})(GETImportStacksToStackSetVersionEnum = exports.GETImportStacksToStackSetVersionEnum || (exports.GETImportStacksToStackSetVersionEnum = {}));
var GETImportStacksToStackSetRequest = /** @class */ (function (_super) {
    __extends(GETImportStacksToStackSetRequest, _super);
    function GETImportStacksToStackSetRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=CallAs",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "callAs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=OperationId",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "operationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=OperationPreferences",
        }),
        __metadata("design:type", GETImportStacksToStackSetOperationPreferences)
    ], GETImportStacksToStackSetRequest.prototype, "operationPreferences", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=OrganizationalUnitIds",
        }),
        __metadata("design:type", Array)
    ], GETImportStacksToStackSetRequest.prototype, "organizationalUnitIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=StackIds",
        }),
        __metadata("design:type", Array)
    ], GETImportStacksToStackSetRequest.prototype, "stackIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=StackIdsUrl",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "stackIdsUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=StackSetName",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "stackSetName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETImportStacksToStackSetRequest;
}(utils_1.SpeakeasyBase));
exports.GETImportStacksToStackSetRequest = GETImportStacksToStackSetRequest;
var GETImportStacksToStackSetResponse = /** @class */ (function (_super) {
    __extends(GETImportStacksToStackSetResponse, _super);
    function GETImportStacksToStackSetResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETImportStacksToStackSetResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETImportStacksToStackSetResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETImportStacksToStackSetResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETImportStacksToStackSetResponse.prototype, "rawResponse", void 0);
    return GETImportStacksToStackSetResponse;
}(utils_1.SpeakeasyBase));
exports.GETImportStacksToStackSetResponse = GETImportStacksToStackSetResponse;
