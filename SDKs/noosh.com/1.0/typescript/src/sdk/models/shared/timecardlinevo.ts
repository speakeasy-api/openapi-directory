/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProjectTimeCardVO } from "./projecttimecardvo";
import { TaskTimeCardVO } from "./tasktimecardvo";
import { Expose, Type } from "class-transformer";

/**
 * Java type: com.noosh.nooshapi.vo.TimeCardLineVO
 */
export class TimeCardLineVO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "activity_name" })
  activityName?: string;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day1_hours_spent" })
  day1HoursSpent?: any;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day2_hours_spent" })
  day2HoursSpent?: any;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day3_hours_spent" })
  day3HoursSpent?: any;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day4_hours_spent" })
  day4HoursSpent?: any;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day5_hours_spent" })
  day5HoursSpent?: any;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day6_hours_spent" })
  day6HoursSpent?: any;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "day7_hours_spent" })
  day7HoursSpent?: any;

  /**
   * Java type: com.noosh.nooshapi.vo.ProjectTimeCardVO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  @Type(() => ProjectTimeCardVO)
  project?: ProjectTimeCardVO;

  /**
   * Java type: com.noosh.nooshapi.vo.TaskTimeCardVO
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task" })
  @Type(() => TaskTimeCardVO)
  task?: TaskTimeCardVO;

  @SpeakeasyMetadata()
  @Expose({ name: "time_card_line_id" })
  timeCardLineId?: number;

  /**
   * Java type: java.math.BigDecimal
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_hours_spent" })
  totalHoursSpent?: any;
}
