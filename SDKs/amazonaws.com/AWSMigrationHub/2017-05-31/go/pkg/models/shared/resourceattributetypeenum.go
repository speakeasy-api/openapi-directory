// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceAttributeTypeEnum string

const (
	ResourceAttributeTypeEnumIpv4Address              ResourceAttributeTypeEnum = "IPV4_ADDRESS"
	ResourceAttributeTypeEnumIpv6Address              ResourceAttributeTypeEnum = "IPV6_ADDRESS"
	ResourceAttributeTypeEnumMacAddress               ResourceAttributeTypeEnum = "MAC_ADDRESS"
	ResourceAttributeTypeEnumFqdn                     ResourceAttributeTypeEnum = "FQDN"
	ResourceAttributeTypeEnumVMManagerID              ResourceAttributeTypeEnum = "VM_MANAGER_ID"
	ResourceAttributeTypeEnumVMManagedObjectReference ResourceAttributeTypeEnum = "VM_MANAGED_OBJECT_REFERENCE"
	ResourceAttributeTypeEnumVMName                   ResourceAttributeTypeEnum = "VM_NAME"
	ResourceAttributeTypeEnumVMPath                   ResourceAttributeTypeEnum = "VM_PATH"
	ResourceAttributeTypeEnumBiosID                   ResourceAttributeTypeEnum = "BIOS_ID"
	ResourceAttributeTypeEnumMotherboardSerialNumber  ResourceAttributeTypeEnum = "MOTHERBOARD_SERIAL_NUMBER"
)

func (e *ResourceAttributeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IPV4_ADDRESS":
		fallthrough
	case "IPV6_ADDRESS":
		fallthrough
	case "MAC_ADDRESS":
		fallthrough
	case "FQDN":
		fallthrough
	case "VM_MANAGER_ID":
		fallthrough
	case "VM_MANAGED_OBJECT_REFERENCE":
		fallthrough
	case "VM_NAME":
		fallthrough
	case "VM_PATH":
		fallthrough
	case "BIOS_ID":
		fallthrough
	case "MOTHERBOARD_SERIAL_NUMBER":
		*e = ResourceAttributeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceAttributeTypeEnum: %s", s)
	}
}
