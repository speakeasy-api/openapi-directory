/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDescribeUpdateActionsQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDescribeUpdateActionsActionEnum action;
    public GETDescribeUpdateActionsQueryParams withAction(GETDescribeUpdateActionsActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The cache cluster IDs
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheClusterIds")
    public String[] cacheClusterIds;
    public GETDescribeUpdateActionsQueryParams withCacheClusterIds(String[] cacheClusterIds) {
        this.cacheClusterIds = cacheClusterIds;
        return this;
    }
    
    /**
     * The Elasticache engine to which the update applies. Either Redis or Memcached 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Engine")
    public String engine;
    public GETDescribeUpdateActionsQueryParams withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    /**
     * An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by &lt;code&gt;MaxRecords&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Marker")
    public String marker;
    public GETDescribeUpdateActionsQueryParams withMarker(String marker) {
        this.marker = marker;
        return this;
    }
    
    /**
     * The maximum number of records to include in the response
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxRecords")
    public Long maxRecords;
    public GETDescribeUpdateActionsQueryParams withMaxRecords(Long maxRecords) {
        this.maxRecords = maxRecords;
        return this;
    }
    
    /**
     * The replication group IDs
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ReplicationGroupIds")
    public String[] replicationGroupIds;
    public GETDescribeUpdateActionsQueryParams withReplicationGroupIds(String[] replicationGroupIds) {
        this.replicationGroupIds = replicationGroupIds;
        return this;
    }
    
    /**
     * The unique ID of the service update
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ServiceUpdateName")
    public String serviceUpdateName;
    public GETDescribeUpdateActionsQueryParams withServiceUpdateName(String serviceUpdateName) {
        this.serviceUpdateName = serviceUpdateName;
        return this;
    }
    
    /**
     * The status of the service update
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ServiceUpdateStatus")
    public org.openapis.openapi.models.shared.ServiceUpdateStatusEnum[] serviceUpdateStatus;
    public GETDescribeUpdateActionsQueryParams withServiceUpdateStatus(org.openapis.openapi.models.shared.ServiceUpdateStatusEnum[] serviceUpdateStatus) {
        this.serviceUpdateStatus = serviceUpdateStatus;
        return this;
    }
    
    /**
     * The range of time specified to search for service updates that are in available status
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ServiceUpdateTimeRange")
    public GETDescribeUpdateActionsServiceUpdateTimeRange serviceUpdateTimeRange;
    public GETDescribeUpdateActionsQueryParams withServiceUpdateTimeRange(GETDescribeUpdateActionsServiceUpdateTimeRange serviceUpdateTimeRange) {
        this.serviceUpdateTimeRange = serviceUpdateTimeRange;
        return this;
    }
    
    /**
     * Dictates whether to include node level update status in the response 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ShowNodeLevelUpdateStatus")
    public Boolean showNodeLevelUpdateStatus;
    public GETDescribeUpdateActionsQueryParams withShowNodeLevelUpdateStatus(Boolean showNodeLevelUpdateStatus) {
        this.showNodeLevelUpdateStatus = showNodeLevelUpdateStatus;
        return this;
    }
    
    /**
     * The status of the update action.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=UpdateActionStatus")
    public org.openapis.openapi.models.shared.UpdateActionStatusEnum[] updateActionStatus;
    public GETDescribeUpdateActionsQueryParams withUpdateActionStatus(org.openapis.openapi.models.shared.UpdateActionStatusEnum[] updateActionStatus) {
        this.updateActionStatus = updateActionStatus;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDescribeUpdateActionsVersionEnum version;
    public GETDescribeUpdateActionsQueryParams withVersion(GETDescribeUpdateActionsVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
