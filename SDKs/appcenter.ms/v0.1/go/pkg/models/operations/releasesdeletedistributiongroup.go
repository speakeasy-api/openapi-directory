// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReleasesDeleteDistributionGroupSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type ReleasesDeleteDistributionGroupPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The id of the distribution group
	GroupID string `pathParam:"style=simple,explode=false,name=group_id"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the release
	ReleaseID int64 `pathParam:"style=simple,explode=false,name=release_id"`
}

type ReleasesDeleteDistributionGroupRequest struct {
	PathParams ReleasesDeleteDistributionGroupPathParams
	Security   ReleasesDeleteDistributionGroupSecurity
}

type ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum string

const (
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumBadRequest          ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "BadRequest"
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumConflict            ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "Conflict"
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumNotAcceptable       ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumNotFound            ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "NotFound"
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumInternalServerError ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumUnauthorized        ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnumTooManyRequests     ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum: %s", s)
	}
}

// ReleasesDeleteDistributionGroup404ApplicationJSON - Distribution group destination can't be found.
type ReleasesDeleteDistributionGroup404ApplicationJSON struct {
	Code    ReleasesDeleteDistributionGroup404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                    `json:"message"`
}

type ReleasesDeleteDistributionGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Distribution group destination can't be found.
	//
	ReleasesDeleteDistributionGroup404ApplicationJSONObject *ReleasesDeleteDistributionGroup404ApplicationJSON
}
