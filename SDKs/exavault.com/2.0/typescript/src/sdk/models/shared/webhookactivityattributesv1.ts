/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class WebhookActivityAttributesV1WebhookV1Details extends SpeakeasyBase {
  /**
   * Account master username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountName" })
  accountName?: string;

  /**
   * Number of times the system has attempted to send
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attempt" })
  attempt?: number;

  /**
   * Entry - retry identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attemptId" })
  attemptId?: string;

  /**
   * Type of related activity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event?: string;

  /**
   * Type of connection used for related activity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: string;

  /**
   * Username logged for related activity. May refer to someone who is not a user of the account, such as a share recipient or "publ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}

/**
 * Event type
 */
export enum WebhookActivityAttributesV1EventEnum {
  ResourcesUpload = "resources.upload",
  ResourcesDownload = "resources.download",
  ResourcesDelete = "resources.delete",
  ResourcesRename = "resources.rename",
  ResourcesCopy = "resources.copy",
  ResourcesMove = "resources.move",
  ResourcesCompress = "resources.compress",
  ResourcesExtract = "resources.extract",
  ResourcesCreateFolder = "resources.createFolder",
  SharesFormSubmit = "shares.formSubmit",
}

export class WebhookActivityAttributesV1 extends SpeakeasyBase {
  /**
   * Unique ID of account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Event - retry identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attemptId" })
  attemptId?: string;

  /**
   * Date and time of webhook message being generated by system
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  created?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  @Type(() => WebhookActivityAttributesV1WebhookV1Details)
  details?: WebhookActivityAttributesV1WebhookV1Details;

  /**
   * The URL the message was sent to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endpointUrl" })
  endpointUrl?: string;

  /**
   * Event type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event?: WebhookActivityAttributesV1EventEnum;

  /**
   * IP Address of related activity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  /**
   * Whether this attempt was a re-send of a previous attempt
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resend" })
  resend?: boolean;

  /**
   * Path of resource that matched webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourcePath" })
  resourcePath?: string;

  /**
   * Body of web response returned by webhook listener
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: string;

  /**
   * HTTP Status Code returned by webhook listener
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  /**
   * Username of related activity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;

  /**
   * What version of webhook message is being sent `v1`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhookFormat" })
  webhookFormat?: string;

  /**
   * Unique ID of webhook configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhookId" })
  webhookId?: number;

  /**
   * Path that webhook is watching
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhookPath" })
  webhookPath?: string;
}
