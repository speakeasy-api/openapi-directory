"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import lineitemassetinformation as shared_lineitemassetinformation
from ..shared import lineitemstatus_enum as shared_lineitemstatus_enum
from ..shared import shipmentinformation as shared_shipmentinformation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LineItem:
    r"""Information about a line item."""
    
    asset_information_list: Optional[list[shared_lineitemassetinformation.LineItemAssetInformation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AssetInformationList'), 'exclude': lambda f: f is None }})  
    catalog_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CatalogItemId'), 'exclude': lambda f: f is None }})  
    line_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LineItemId'), 'exclude': lambda f: f is None }})  
    previous_line_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PreviousLineItemId'), 'exclude': lambda f: f is None }})  
    previous_order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PreviousOrderId'), 'exclude': lambda f: f is None }})  
    quantity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Quantity'), 'exclude': lambda f: f is None }})  
    shipment_information: Optional[shared_shipmentinformation.ShipmentInformation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShipmentInformation'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_lineitemstatus_enum.LineItemStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    