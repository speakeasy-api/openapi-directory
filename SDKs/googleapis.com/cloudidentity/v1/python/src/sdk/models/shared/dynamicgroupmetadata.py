"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dynamicgroupquery as shared_dynamicgroupquery
from ..shared import dynamicgroupstatus as shared_dynamicgroupstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DynamicGroupMetadata:
    r"""Dynamic group metadata like queries and status."""
    
    queries: Optional[list[shared_dynamicgroupquery.DynamicGroupQuery]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queries'), 'exclude': lambda f: f is None }})
    r"""Memberships will be the union of all queries. Only one entry with USER resource is currently supported. Customers can create up to 100 dynamic groups."""  
    status: Optional[shared_dynamicgroupstatus.DynamicGroupStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The current status of a dynamic group along with timestamp."""  
    