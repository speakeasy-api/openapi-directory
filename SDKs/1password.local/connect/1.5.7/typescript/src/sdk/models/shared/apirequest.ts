/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export enum APIRequestActionEnum {
  Read = "READ",
  Create = "CREATE",
  Update = "UPDATE",
  Delete = "DELETE",
}

export class APIRequestActor extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  account?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "jti" })
  jti?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestIp" })
  requestIp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userAgent" })
  userAgent?: string;
}

export class APIRequestResourceItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export enum APIRequestResourceTypeEnum {
  Item = "ITEM",
  Vault = "VAULT",
}

export class APIRequestResourceVault extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class APIRequestResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => APIRequestResourceItem)
  item?: APIRequestResourceItem;

  @SpeakeasyMetadata()
  @Expose({ name: "itemVersion" })
  itemVersion?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: APIRequestResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "vault" })
  @Type(() => APIRequestResourceVault)
  vault?: APIRequestResourceVault;
}

export enum APIRequestResultEnum {
  Success = "SUCCESS",
  Deny = "DENY",
}

/**
 * Represents a request that was made to the API. Including what Token was used and what resource was accessed.
 */
export class APIRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: APIRequestActionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "actor" })
  @Type(() => APIRequestActor)
  actor?: APIRequestActor;

  /**
   * The unique id used to identify a single request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  @Type(() => APIRequestResource)
  resource?: APIRequestResource;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: APIRequestResultEnum;

  /**
   * The time at which the request was processed by the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;
}
