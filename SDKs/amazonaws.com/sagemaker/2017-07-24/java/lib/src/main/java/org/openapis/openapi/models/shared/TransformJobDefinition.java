/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransformJobDefinition - Defines the input needed to run a transform job using the inference specification specified in the algorithm.
 */
public class TransformJobDefinition {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BatchStrategy")
    public BatchStrategyEnum batchStrategy;
    public TransformJobDefinition withBatchStrategy(BatchStrategyEnum batchStrategy) {
        this.batchStrategy = batchStrategy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public java.util.Map<String, String> environment;
    public TransformJobDefinition withEnvironment(java.util.Map<String, String> environment) {
        this.environment = environment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxConcurrentTransforms")
    public Long maxConcurrentTransforms;
    public TransformJobDefinition withMaxConcurrentTransforms(Long maxConcurrentTransforms) {
        this.maxConcurrentTransforms = maxConcurrentTransforms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxPayloadInMB")
    public Long maxPayloadInMB;
    public TransformJobDefinition withMaxPayloadInMB(Long maxPayloadInMB) {
        this.maxPayloadInMB = maxPayloadInMB;
        return this;
    }
    
    @JsonProperty("TransformInput")
    public TransformInput transformInput;
    public TransformJobDefinition withTransformInput(TransformInput transformInput) {
        this.transformInput = transformInput;
        return this;
    }
    
    @JsonProperty("TransformOutput")
    public TransformOutput transformOutput;
    public TransformJobDefinition withTransformOutput(TransformOutput transformOutput) {
        this.transformOutput = transformOutput;
        return this;
    }
    
    @JsonProperty("TransformResources")
    public TransformResources transformResources;
    public TransformJobDefinition withTransformResources(TransformResources transformResources) {
        this.transformResources = transformResources;
        return this;
    }
    
}
