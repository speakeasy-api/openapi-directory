/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IncidentRecordSource } from "./incidentrecordsource";
import { IncidentRecordStatusEnum } from "./incidentrecordstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Details describing an incident record.
 */
export class IncidentRecordSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "impact" })
  impact: number;

  @SpeakeasyMetadata()
  @Expose({ name: "incidentRecordSource" })
  @Type(() => IncidentRecordSource)
  incidentRecordSource: IncidentRecordSource;

  @SpeakeasyMetadata()
  @Expose({ name: "resolvedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  resolvedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: IncidentRecordStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}
