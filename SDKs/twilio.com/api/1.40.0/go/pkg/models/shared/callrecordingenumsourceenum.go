// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CallRecordingEnumSourceEnum string

const (
	CallRecordingEnumSourceEnumDialVerb                    CallRecordingEnumSourceEnum = "DialVerb"
	CallRecordingEnumSourceEnumConference                  CallRecordingEnumSourceEnum = "Conference"
	CallRecordingEnumSourceEnumOutboundAPI                 CallRecordingEnumSourceEnum = "OutboundAPI"
	CallRecordingEnumSourceEnumTrunking                    CallRecordingEnumSourceEnum = "Trunking"
	CallRecordingEnumSourceEnumRecordVerb                  CallRecordingEnumSourceEnum = "RecordVerb"
	CallRecordingEnumSourceEnumStartCallRecordingAPI       CallRecordingEnumSourceEnum = "StartCallRecordingAPI"
	CallRecordingEnumSourceEnumStartConferenceRecordingAPI CallRecordingEnumSourceEnum = "StartConferenceRecordingAPI"
)

func (e *CallRecordingEnumSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DialVerb":
		fallthrough
	case "Conference":
		fallthrough
	case "OutboundAPI":
		fallthrough
	case "Trunking":
		fallthrough
	case "RecordVerb":
		fallthrough
	case "StartCallRecordingAPI":
		fallthrough
	case "StartConferenceRecordingAPI":
		*e = CallRecordingEnumSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CallRecordingEnumSourceEnum: %s", s)
	}
}
