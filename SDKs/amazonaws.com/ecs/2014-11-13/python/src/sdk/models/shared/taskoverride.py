"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import containeroverride as shared_containeroverride
from ..shared import ephemeralstorage as shared_ephemeralstorage
from ..shared import inferenceacceleratoroverride as shared_inferenceacceleratoroverride
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskOverride:
    r"""The overrides that are associated with a task."""
    
    container_overrides: Optional[list[shared_containeroverride.ContainerOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerOverrides'), 'exclude': lambda f: f is None }})  
    cpu: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpu'), 'exclude': lambda f: f is None }})  
    ephemeral_storage: Optional[shared_ephemeralstorage.EphemeralStorage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ephemeralStorage'), 'exclude': lambda f: f is None }})  
    execution_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionRoleArn'), 'exclude': lambda f: f is None }})  
    inference_accelerator_overrides: Optional[list[shared_inferenceacceleratoroverride.InferenceAcceleratorOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inferenceAcceleratorOverrides'), 'exclude': lambda f: f is None }})  
    memory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memory'), 'exclude': lambda f: f is None }})  
    task_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskRoleArn'), 'exclude': lambda f: f is None }})  
    