/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETPurchaseReservedInstancesOfferingActionEnum {
  PurchaseReservedInstancesOffering = "PurchaseReservedInstancesOffering",
}

/**
 * The currency in which the <code>limitPrice</code> amount is specified. At this time, the only supported currency is <code>USD</code>.
 */
export enum GETPurchaseReservedInstancesOfferingLimitPriceCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * Describes the limit price of a Reserved Instance offering.
 */
export class GETPurchaseReservedInstancesOfferingLimitPrice extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "queryParam, name=Amount" })
  amount?: number;

  @SpeakeasyMetadata({ data: "queryParam, name=CurrencyCode" })
  currencyCode?: GETPurchaseReservedInstancesOfferingLimitPriceCurrencyCodeEnum;
}

export enum GETPurchaseReservedInstancesOfferingVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETPurchaseReservedInstancesOfferingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETPurchaseReservedInstancesOfferingActionEnum;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The number of Reserved Instances to purchase.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=InstanceCount",
  })
  instanceCount: number;

  /**
   * Specified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=LimitPrice",
  })
  limitPrice?: GETPurchaseReservedInstancesOfferingLimitPrice;

  /**
   * The time at which to purchase the Reserved Instance, in UTC format (for example, <i>YYYY</i>-<i>MM</i>-<i>DD</i>T<i>HH</i>:<i>MM</i>:<i>SS</i>Z).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PurchaseTime;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  purchaseTime?: Date;

  /**
   * The ID of the Reserved Instance offering to purchase.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ReservedInstancesOfferingId",
  })
  reservedInstancesOfferingId: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETPurchaseReservedInstancesOfferingVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETPurchaseReservedInstancesOfferingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
