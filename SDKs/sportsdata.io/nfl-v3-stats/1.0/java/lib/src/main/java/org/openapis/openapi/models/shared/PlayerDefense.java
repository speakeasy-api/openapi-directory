/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerDefense {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistedTackles")
    public Long assistedTackles;
    public PlayerDefense withAssistedTackles(Long assistedTackles) {
        this.assistedTackles = assistedTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;
    public PlayerDefense withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPosition")
    public String fantasyPosition;
    public PlayerDefense withFantasyPosition(String fantasyPosition) {
        this.fantasyPosition = fantasyPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumbleReturnTouchdowns")
    public Long fumbleReturnTouchdowns;
    public PlayerDefense withFumbleReturnTouchdowns(Long fumbleReturnTouchdowns) {
        this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesForced")
    public Long fumblesForced;
    public PlayerDefense withFumblesForced(Long fumblesForced) {
        this.fumblesForced = fumblesForced;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesRecovered")
    public Long fumblesRecovered;
    public PlayerDefense withFumblesRecovered(Long fumblesRecovered) {
        this.fumblesRecovered = fumblesRecovered;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnTouchdowns")
    public Long interceptionReturnTouchdowns;
    public PlayerDefense withInterceptionReturnTouchdowns(Long interceptionReturnTouchdowns) {
        this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnYards")
    public Long interceptionReturnYards;
    public PlayerDefense withInterceptionReturnYards(Long interceptionReturnYards) {
        this.interceptionReturnYards = interceptionReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Interceptions")
    public Long interceptions;
    public PlayerDefense withInterceptions(Long interceptions) {
        this.interceptions = interceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public PlayerDefense withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Number")
    public Long number;
    public PlayerDefense withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassesDefended")
    public Long passesDefended;
    public PlayerDefense withPassesDefended(Long passesDefended) {
        this.passesDefended = passesDefended;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerGameID")
    public Long playerGameID;
    public PlayerDefense withPlayerGameID(Long playerGameID) {
        this.playerGameID = playerGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;
    public PlayerDefense withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Position")
    public String position;
    public PlayerDefense withPosition(String position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PositionCategory")
    public String positionCategory;
    public PlayerDefense withPositionCategory(String positionCategory) {
        this.positionCategory = positionCategory;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterbackHits")
    public Long quarterbackHits;
    public PlayerDefense withQuarterbackHits(Long quarterbackHits) {
        this.quarterbackHits = quarterbackHits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SackYards")
    public Long sackYards;
    public PlayerDefense withSackYards(Long sackYards) {
        this.sackYards = sackYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sacks")
    public Double sacks;
    public PlayerDefense withSacks(Double sacks) {
        this.sacks = sacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Safeties")
    public Long safeties;
    public PlayerDefense withSafeties(Long safeties) {
        this.safeties = safeties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShortName")
    public String shortName;
    public PlayerDefense withShortName(String shortName) {
        this.shortName = shortName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SoloTackles")
    public Long soloTackles;
    public PlayerDefense withSoloTackles(Long soloTackles) {
        this.soloTackles = soloTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tackles")
    public Long tackles;
    public PlayerDefense withTackles(Long tackles) {
        this.tackles = tackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TacklesForLoss")
    public Long tacklesForLoss;
    public PlayerDefense withTacklesForLoss(Long tacklesForLoss) {
        this.tacklesForLoss = tacklesForLoss;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;
    public PlayerDefense withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;
    public PlayerDefense withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
}
