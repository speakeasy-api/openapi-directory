"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import managementsettings as shared_managementsettings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigureManagementSettingsRequestInput:
    r"""Request for the `ConfigureManagementSettings` method."""
    
    management_settings: Optional[shared_managementsettings.ManagementSettingsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('managementSettings'), 'exclude': lambda f: f is None }})
    r"""Defines renewal, billing, and transfer settings for a `Registration`."""  
    update_mask: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateMask'), 'exclude': lambda f: f is None }})
    r"""Required. The field mask describing which fields to update as a comma-separated list. For example, if only the transfer lock is being updated, the `update_mask` is `\\"transfer_lock_state\\"`."""  
    