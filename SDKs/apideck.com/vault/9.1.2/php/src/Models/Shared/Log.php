<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Log
{
    /**
     * Indicates if the request was made via REST or Graphql endpoint.
     * 
     * @var string $apiStyle
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_style')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $apiStyle;
    
    /**
     * The Apideck base URL the request was made to.
     * 
     * @var string $baseUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('base_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $baseUrl;
    
    /**
     * Indicates whether or not this is a child or parent request.
     * 
     * @var bool $childRequest
     */
	#[\JMS\Serializer\Annotation\SerializedName('child_request')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $childRequest;
    
    /**
     * The consumer Id associated with the request.
     * 
     * @var string $consumerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('consumer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $consumerId;
    
    /**
     * The entire execution time in milliseconds it took to call the Apideck service provider.
     * 
     * @var float $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $duration;
    
    /**
     * If error occurred, this is brief explanation
     * 
     * @var ?string $errorMessage
     */
	#[\JMS\Serializer\Annotation\SerializedName('error_message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorMessage = null;
    
    /**
     * The entire execution time in milliseconds it took to make the request.
     * 
     * @var int $execution
     */
	#[\JMS\Serializer\Annotation\SerializedName('execution')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $execution;
    
    /**
     * When request is a parent request, this indicates if there are child requests associated.
     * 
     * @var bool $hasChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('has_children')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hasChildren;
    
    /**
     * HTTP Method of request.
     * 
     * @var string $httpMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('http_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $httpMethod;
    
    /**
     * UUID acting as Request Identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Latency added by making this request via Unified Api.
     * 
     * @var float $latency
     */
	#[\JMS\Serializer\Annotation\SerializedName('latency')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $latency;
    
    /**
     * The request as defined in OpenApi Spec.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\LogOperation $operation
     */
	#[\JMS\Serializer\Annotation\SerializedName('operation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LogOperation')]
    public LogOperation $operation;
    
    /**
     * When request is a child request, this UUID indicates it's parent request.
     * 
     * @var string $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $parentId;
    
    /**
     * The path component of the URI the request was made to.
     * 
     * @var string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $path;
    
    /**
     * Indicates whether the request was made using Apidecks sandbox credentials or not.
     * 
     * @var bool $sandbox
     */
	#[\JMS\Serializer\Annotation\SerializedName('sandbox')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $sandbox;
    
    /**
     * Apideck service provider associated with request.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\LogService $service
     */
	#[\JMS\Serializer\Annotation\SerializedName('service')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LogService')]
    public LogService $service;
    
    /**
     * The IP address of the source of the request.
     * 
     * @var ?string $sourceIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceIp = null;
    
    /**
     * HTTP Status code that was returned.
     * 
     * @var int $statusCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('status_code')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $statusCode;
    
    /**
     * Whether or not the request was successful.
     * 
     * @var bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $success;
    
    /**
     * ISO Date and time when the request was made.
     * 
     * @var string $timestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $timestamp;
    
    /**
     * Which Unified Api request was made to.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\LogUnifiedApiEnum $unifiedApi
     */
	#[\JMS\Serializer\Annotation\SerializedName('unified_api')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LogUnifiedApiEnum>')]
    public LogUnifiedApiEnum $unifiedApi;
    
	public function __construct()
	{
		$this->apiStyle = "";
		$this->baseUrl = "";
		$this->childRequest = false;
		$this->consumerId = "";
		$this->duration = 0;
		$this->errorMessage = null;
		$this->execution = 0;
		$this->hasChildren = false;
		$this->httpMethod = "";
		$this->id = "";
		$this->latency = 0;
		$this->operation = new \OpenAPI\OpenAPI\Models\Shared\LogOperation();
		$this->parentId = "";
		$this->path = "";
		$this->sandbox = false;
		$this->service = new \OpenAPI\OpenAPI\Models\Shared\LogService();
		$this->sourceIp = null;
		$this->statusCode = 0;
		$this->success = false;
		$this->timestamp = "";
		$this->unifiedApi = \OpenAPI\OpenAPI\Models\Shared\LogUnifiedApiEnum::CRM;
	}
}
