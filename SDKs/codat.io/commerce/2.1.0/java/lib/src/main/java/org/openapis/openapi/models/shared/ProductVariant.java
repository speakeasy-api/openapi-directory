/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProductVariant - Represents a variation of a product available for sale, for example an item of clothing that may be available for sale in multiple sizes and colors.
 * 
 */
public class ProductVariant {
    /**
     * Unique product number of the variant. This might be a barcode, UPC, ISBN, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("barcode")
    public String barcode;

    public ProductVariant withBarcode(String barcode) {
        this.barcode = barcode;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdDate")
    public String createdDate;

    public ProductVariant withCreatedDate(String createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * A unique, persistent identifier for this record
     */
    @JsonProperty("id")
    public String id;

    public ProductVariant withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Information about the total inventory as well as the locations inventory is in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inventory")
    public ProductInventory[] inventory;

    public ProductVariant withInventory(ProductInventory[] inventory) {
        this.inventory = inventory;
        return this;
    }
    
    /**
     * Whether sales taxes are enabled for this product variant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isTaxEnabled")
    public Boolean isTaxEnabled;

    public ProductVariant withIsTaxEnabled(Boolean isTaxEnabled) {
        this.isTaxEnabled = isTaxEnabled;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiedDate")
    public String modifiedDate;

    public ProductVariant withModifiedDate(String modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    /**
     * Name of the product recorded in the commerce or point of sale platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ProductVariant withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Prices for the product variants in different currencies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prices")
    public ProductPrice[] prices;

    public ProductVariant withPrices(ProductPrice[] prices) {
        this.prices = prices;
        return this;
    }
    
    /**
     * Indicates whether or not the product requires physical delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingRequired")
    public Boolean shippingRequired;

    public ProductVariant withShippingRequired(Boolean shippingRequired) {
        this.shippingRequired = shippingRequired;
        return this;
    }
    
    /**
     * SKU (stock keeping unit) of the variant, as defined by the merchant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;

    public ProductVariant withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceModifiedDate")
    public String sourceModifiedDate;

    public ProductVariant withSourceModifiedDate(String sourceModifiedDate) {
        this.sourceModifiedDate = sourceModifiedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ProductVariantStatusEnum status;

    public ProductVariant withStatus(ProductVariantStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Unit of measure for the variant, such as `kg` or `meters`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;

    public ProductVariant withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
    /**
     * VAT rate for the product variant if sales taxes are enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatPercentage")
    public Double vatPercentage;

    public ProductVariant withVatPercentage(Double vatPercentage) {
        this.vatPercentage = vatPercentage;
        return this;
    }
    
    public ProductVariant(@JsonProperty("id") String id) {
        this.id = id;
  }
}
