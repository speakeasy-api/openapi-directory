/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateAuthorIfNotExistsForUsingGETResponse {
    
    public String contentType;

    public CreateAuthorIfNotExistsForUsingGETResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateAuthorIfNotExistsForUsingGETResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateAuthorIfNotExistsForUsingGETResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ok (code 0)
     */
    
    public CreateAuthorIfNotExistsForUsingGET200ApplicationJSON createAuthorIfNotExistsForUsingGET200ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingGETResponse withCreateAuthorIfNotExistsForUsingGET200ApplicationJSONObject(CreateAuthorIfNotExistsForUsingGET200ApplicationJSON createAuthorIfNotExistsForUsingGET200ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingGET200ApplicationJSONObject = createAuthorIfNotExistsForUsingGET200ApplicationJSONObject;
        return this;
    }
    
    /**
     * generic api error (code 1)
     */
    
    public CreateAuthorIfNotExistsForUsingGET400ApplicationJSON createAuthorIfNotExistsForUsingGET400ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingGETResponse withCreateAuthorIfNotExistsForUsingGET400ApplicationJSONObject(CreateAuthorIfNotExistsForUsingGET400ApplicationJSON createAuthorIfNotExistsForUsingGET400ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingGET400ApplicationJSONObject = createAuthorIfNotExistsForUsingGET400ApplicationJSONObject;
        return this;
    }
    
    /**
     * no or wrong API key (code 4)
     */
    
    public CreateAuthorIfNotExistsForUsingGET401ApplicationJSON createAuthorIfNotExistsForUsingGET401ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingGETResponse withCreateAuthorIfNotExistsForUsingGET401ApplicationJSONObject(CreateAuthorIfNotExistsForUsingGET401ApplicationJSON createAuthorIfNotExistsForUsingGET401ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingGET401ApplicationJSONObject = createAuthorIfNotExistsForUsingGET401ApplicationJSONObject;
        return this;
    }
    
    /**
     * internal api error (code 2)
     */
    
    public CreateAuthorIfNotExistsForUsingGET500ApplicationJSON createAuthorIfNotExistsForUsingGET500ApplicationJSONObject;

    public CreateAuthorIfNotExistsForUsingGETResponse withCreateAuthorIfNotExistsForUsingGET500ApplicationJSONObject(CreateAuthorIfNotExistsForUsingGET500ApplicationJSON createAuthorIfNotExistsForUsingGET500ApplicationJSONObject) {
        this.createAuthorIfNotExistsForUsingGET500ApplicationJSONObject = createAuthorIfNotExistsForUsingGET500ApplicationJSONObject;
        return this;
    }
    
    public CreateAuthorIfNotExistsForUsingGETResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
