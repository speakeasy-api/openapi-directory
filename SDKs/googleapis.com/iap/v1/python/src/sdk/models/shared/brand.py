"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Brand:
    r"""OAuth brand data. NOTE: Only contains a portion of the data that describes a brand."""
    
    application_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationTitle'), 'exclude': lambda f: f is None }})
    r"""Application name displayed on OAuth consent screen."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Identifier of the brand. NOTE: GCP project number achieves the same brand identification purpose as only one brand per project can be created."""  
    org_internal_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orgInternalOnly'), 'exclude': lambda f: f is None }})
    r"""Output only. Whether the brand is only intended for usage inside the G Suite organization only."""  
    support_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportEmail'), 'exclude': lambda f: f is None }})
    r"""Support email displayed on the OAuth consent screen."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BrandInput:
    r"""OAuth brand data. NOTE: Only contains a portion of the data that describes a brand."""
    
    application_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationTitle'), 'exclude': lambda f: f is None }})
    r"""Application name displayed on OAuth consent screen."""  
    support_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportEmail'), 'exclude': lambda f: f is None }})
    r"""Support email displayed on the OAuth consent screen."""  
    