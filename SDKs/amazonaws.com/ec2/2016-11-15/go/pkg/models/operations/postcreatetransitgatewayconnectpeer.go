// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateTransitGatewayConnectPeerActionEnum
type POSTCreateTransitGatewayConnectPeerActionEnum string

const (
	POSTCreateTransitGatewayConnectPeerActionEnumCreateTransitGatewayConnectPeer POSTCreateTransitGatewayConnectPeerActionEnum = "CreateTransitGatewayConnectPeer"
)

func (e *POSTCreateTransitGatewayConnectPeerActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateTransitGatewayConnectPeer":
		*e = POSTCreateTransitGatewayConnectPeerActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateTransitGatewayConnectPeerActionEnum: %s", s)
	}
}

// POSTCreateTransitGatewayConnectPeerVersionEnum
type POSTCreateTransitGatewayConnectPeerVersionEnum string

const (
	POSTCreateTransitGatewayConnectPeerVersionEnumTwoThousandAndSixteen1115 POSTCreateTransitGatewayConnectPeerVersionEnum = "2016-11-15"
)

func (e *POSTCreateTransitGatewayConnectPeerVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTCreateTransitGatewayConnectPeerVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateTransitGatewayConnectPeerVersionEnum: %s", s)
	}
}

type POSTCreateTransitGatewayConnectPeerRequest struct {
	Action            POSTCreateTransitGatewayConnectPeerActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                         `request:"mediaType=text/xml"`
	Version           POSTCreateTransitGatewayConnectPeerVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateTransitGatewayConnectPeerResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
