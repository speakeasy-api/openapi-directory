/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MobileDevice - Google Workspace Mobile Management includes Android, [Google Sync](https://support.google.com/a/answer/135937), and iOS devices. For more information about common group mobile device API tasks, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices.html).
 */
public class MobileDevice {
    /**
     * Adb (USB debugging) enabled or disabled on device (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adbStatus")
    public Boolean adbStatus;
    public MobileDevice withAdbStatus(Boolean adbStatus) {
        this.adbStatus = adbStatus;
        return this;
    }
    
    /**
     * The list of applications installed on an Android mobile device. It is not applicable to Google Sync and iOS devices. The list includes any Android applications that access Google Workspace data. When updating an applications list, it is important to note that updates replace the existing list. If the Android device has two existing applications and the API updates the list with five applications, the is now the updated list of five applications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applications")
    public MobileDeviceApplications[] applications;
    public MobileDevice withApplications(MobileDeviceApplications[] applications) {
        this.applications = applications;
        return this;
    }
    
    /**
     * The device's baseband version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basebandVersion")
    public String basebandVersion;
    public MobileDevice withBasebandVersion(String basebandVersion) {
        this.basebandVersion = basebandVersion;
        return this;
    }
    
    /**
     * Mobile Device Bootloader version (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootloaderVersion")
    public String bootloaderVersion;
    public MobileDevice withBootloaderVersion(String bootloaderVersion) {
        this.bootloaderVersion = bootloaderVersion;
        return this;
    }
    
    /**
     * Mobile Device Brand (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brand")
    public String brand;
    public MobileDevice withBrand(String brand) {
        this.brand = brand;
        return this;
    }
    
    /**
     * The device's operating system build number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildNumber")
    public String buildNumber;
    public MobileDevice withBuildNumber(String buildNumber) {
        this.buildNumber = buildNumber;
        return this;
    }
    
    /**
     * The default locale used on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultLanguage")
    public String defaultLanguage;
    public MobileDevice withDefaultLanguage(String defaultLanguage) {
        this.defaultLanguage = defaultLanguage;
        return this;
    }
    
    /**
     * Developer options enabled or disabled on device (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("developerOptionsStatus")
    public Boolean developerOptionsStatus;
    public MobileDevice withDeveloperOptionsStatus(Boolean developerOptionsStatus) {
        this.developerOptionsStatus = developerOptionsStatus;
        return this;
    }
    
    /**
     * The compromised device status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceCompromisedStatus")
    public String deviceCompromisedStatus;
    public MobileDevice withDeviceCompromisedStatus(String deviceCompromisedStatus) {
        this.deviceCompromisedStatus = deviceCompromisedStatus;
        return this;
    }
    
    /**
     * The serial number for a Google Sync mobile device. For Android and iOS devices, this is a software generated unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceId")
    public String deviceId;
    public MobileDevice withDeviceId(String deviceId) {
        this.deviceId = deviceId;
        return this;
    }
    
    /**
     * DevicePasswordStatus (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("devicePasswordStatus")
    public String devicePasswordStatus;
    public MobileDevice withDevicePasswordStatus(String devicePasswordStatus) {
        this.devicePasswordStatus = devicePasswordStatus;
        return this;
    }
    
    /**
     * The list of the owner's email addresses. If your application needs the current list of user emails, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For additional information, see the [retrieve a user](/admin-sdk/directory/v1/guides/manage-users#get_user) method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String[] email;
    public MobileDevice withEmail(String[] email) {
        this.email = email;
        return this;
    }
    
    /**
     * Mobile Device Encryption Status (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionStatus")
    public String encryptionStatus;
    public MobileDevice withEncryptionStatus(String encryptionStatus) {
        this.encryptionStatus = encryptionStatus;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public MobileDevice withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("firstSync")
    public OffsetDateTime firstSync;
    public MobileDevice withFirstSync(OffsetDateTime firstSync) {
        this.firstSync = firstSync;
        return this;
    }
    
    /**
     * Mobile Device Hardware (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hardware")
    public String hardware;
    public MobileDevice withHardware(String hardware) {
        this.hardware = hardware;
        return this;
    }
    
    /**
     * The IMEI/MEID unique identifier for Android hardware. It is not applicable to Google Sync devices. When adding an Android mobile device, this is an optional property. When updating one of these devices, this is a read-only property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hardwareId")
    public String hardwareId;
    public MobileDevice withHardwareId(String hardwareId) {
        this.hardwareId = hardwareId;
        return this;
    }
    
    /**
     * The device's IMEI number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imei")
    public String imei;
    public MobileDevice withImei(String imei) {
        this.imei = imei;
        return this;
    }
    
    /**
     * The device's kernel version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kernelVersion")
    public String kernelVersion;
    public MobileDevice withKernelVersion(String kernelVersion) {
        this.kernelVersion = kernelVersion;
        return this;
    }
    
    /**
     * The type of the API resource. For Mobiledevices resources, the value is `admin#directory#mobiledevice`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public MobileDevice withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastSync")
    public OffsetDateTime lastSync;
    public MobileDevice withLastSync(OffsetDateTime lastSync) {
        this.lastSync = lastSync;
        return this;
    }
    
    /**
     * Boolean indicating if this account is on owner/primary profile or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("managedAccountIsOnOwnerProfile")
    public Boolean managedAccountIsOnOwnerProfile;
    public MobileDevice withManagedAccountIsOnOwnerProfile(Boolean managedAccountIsOnOwnerProfile) {
        this.managedAccountIsOnOwnerProfile = managedAccountIsOnOwnerProfile;
        return this;
    }
    
    /**
     * Mobile Device manufacturer (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manufacturer")
    public String manufacturer;
    public MobileDevice withManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
        return this;
    }
    
    /**
     * The device's MEID number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meid")
    public String meid;
    public MobileDevice withMeid(String meid) {
        this.meid = meid;
        return this;
    }
    
    /**
     * The mobile device's model name, for example Nexus S. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile=devices#update_mobile_device).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;
    public MobileDevice withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * The list of the owner's user names. If your application needs the current list of device owner names, use the [get](/admin-sdk/directory/v1/reference/mobiledevices/get.html) method. For more information about retrieving mobile device user information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-users#get_user).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String[] name;
    public MobileDevice withName(String[] name) {
        this.name = name;
        return this;
    }
    
    /**
     * Mobile Device mobile or network operator (if available) (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkOperator")
    public String networkOperator;
    public MobileDevice withNetworkOperator(String networkOperator) {
        this.networkOperator = networkOperator;
        return this;
    }
    
    /**
     * The mobile device's operating system, for example IOS 4.3 or Android 2.3.5. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("os")
    public String os;
    public MobileDevice withOs(String os) {
        this.os = os;
        return this;
    }
    
    /**
     * The list of accounts added on device (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherAccountsInfo")
    public String[] otherAccountsInfo;
    public MobileDevice withOtherAccountsInfo(String[] otherAccountsInfo) {
        this.otherAccountsInfo = otherAccountsInfo;
        return this;
    }
    
    /**
     * DMAgentPermission (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privilege")
    public String privilege;
    public MobileDevice withPrivilege(String privilege) {
        this.privilege = privilege;
        return this;
    }
    
    /**
     * Mobile Device release version version (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releaseVersion")
    public String releaseVersion;
    public MobileDevice withReleaseVersion(String releaseVersion) {
        this.releaseVersion = releaseVersion;
        return this;
    }
    
    /**
     * The unique ID the API service uses to identify the mobile device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceId")
    public String resourceId;
    public MobileDevice withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    /**
     * Mobile Device Security patch level (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityPatchLevel")
    public String securityPatchLevel;
    public MobileDevice withSecurityPatchLevel(String securityPatchLevel) {
        this.securityPatchLevel = securityPatchLevel;
        return this;
    }
    
    /**
     * The device's serial number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serialNumber")
    public String serialNumber;
    public MobileDevice withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    /**
     * The device's status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public MobileDevice withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Work profile supported on device (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportsWorkProfile")
    public Boolean supportsWorkProfile;
    public MobileDevice withSupportsWorkProfile(Boolean supportsWorkProfile) {
        this.supportsWorkProfile = supportsWorkProfile;
        return this;
    }
    
    /**
     * The type of mobile device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public MobileDevice withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Unknown sources enabled or disabled on device (Read-only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unknownSourcesStatus")
    public Boolean unknownSourcesStatus;
    public MobileDevice withUnknownSourcesStatus(Boolean unknownSourcesStatus) {
        this.unknownSourcesStatus = unknownSourcesStatus;
        return this;
    }
    
    /**
     * Gives information about the device such as `os` version. This property can be [updated](/admin-sdk/directory/v1/reference/mobiledevices/update.html). For more information, see the [Developer's Guide](/admin-sdk/directory/v1/guides/manage-mobile-devices#update_mobile_device).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAgent")
    public String userAgent;
    public MobileDevice withUserAgent(String userAgent) {
        this.userAgent = userAgent;
        return this;
    }
    
    /**
     * The device's MAC address on Wi-Fi networks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wifiMacAddress")
    public String wifiMacAddress;
    public MobileDevice withWifiMacAddress(String wifiMacAddress) {
        this.wifiMacAddress = wifiMacAddress;
        return this;
    }
    
}
