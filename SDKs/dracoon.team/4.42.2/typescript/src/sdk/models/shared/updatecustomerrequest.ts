/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Customer type
 */
export enum UpdateCustomerRequestCustomerContractTypeEnum {
  Demo = "demo",
  Free = "free",
  Pay = "pay",
}

/**
 * Request model for updating a customer
 */
export class UpdateCustomerRequest extends SpeakeasyBase {
  /**
   * Company name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * Customer type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerContractType" })
  customerContractType: UpdateCustomerRequestCustomerContractTypeEnum;

  /**
   * Customer is locked:
   *
   * @remarks
   *
   * * `false` - unlocked
   *
   * * `true` - locked
   *
   *
   *
   * All users of this customer will be blocked and can not login anymore.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isLocked" })
  isLocked?: boolean;

  /**
   * &#128679; Deprecated since v4.7.0
   *
   * @remarks
   *
   * Customer lock status:
   *
   * * `false` - unlocked
   *
   * * `true` - locked
   *
   *
   *
   * Please use `isLocked` instead.
   *
   * All users of this customer will be blocked and can not login anymore.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lockStatus" })
  lockStatus?: boolean;

  /**
   * Provider customer ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "providerCustomerId" })
  providerCustomerId?: string;

  /**
   * Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
   */
  @SpeakeasyMetadata()
  @Expose({ name: "quotaMax" })
  quotaMax?: number;

  /**
   * Maximal number of users
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userMax" })
  userMax?: number;

  /**
   * &#128640; Since v4.19.0
   *
   * @remarks
   *
   * Maximal number of webhooks
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhooksMax" })
  webhooksMax?: number;
}
