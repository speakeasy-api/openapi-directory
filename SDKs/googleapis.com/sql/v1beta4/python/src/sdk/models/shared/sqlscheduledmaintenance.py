"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SQLScheduledMaintenance:
    r"""Any scheduled maintenance for this instance."""
    
    can_defer: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canDefer'), 'exclude': lambda f: f is None }})  
    can_reschedule: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canReschedule'), 'exclude': lambda f: f is None }})
    r"""If the scheduled maintenance can be rescheduled."""  
    schedule_deadline_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduleDeadlineTime'), 'exclude': lambda f: f is None }})
    r"""Maintenance cannot be rescheduled to start beyond this deadline."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The start time of any upcoming scheduled maintenance for this instance."""  
    