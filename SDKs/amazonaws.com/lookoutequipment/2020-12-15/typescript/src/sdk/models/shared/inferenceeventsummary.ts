/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about the specific inference event, including start and end time, diagnostics information, event duration and so on.
 */
export class InferenceEventSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Diagnostics" })
  diagnostics?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventDurationInSeconds" })
  eventDurationInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EventEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EventStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSchedulerArn" })
  inferenceSchedulerArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceSchedulerName" })
  inferenceSchedulerName?: string;
}
