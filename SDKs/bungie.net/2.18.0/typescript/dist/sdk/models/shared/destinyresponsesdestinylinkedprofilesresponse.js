"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DestinyResponsesDestinyLinkedProfilesResponse = exports.DestinyResponsesDestinyLinkedProfilesResponseBnetMembership = void 0;
var utils_1 = require("../../../internal/utils");
var destinyresponsesdestinyerrorprofile_1 = require("./destinyresponsesdestinyerrorprofile");
var destinyresponsesdestinyprofileuserinfocard_1 = require("./destinyresponsesdestinyprofileuserinfocard");
/**
 * This contract supplies basic information commonly used to display a minimal amount of information about a user. Take care to not add more properties here unless the property applies in all (or at least the majority) of the situations where UserInfoCard is used. Avoid adding game specific or platform specific details here. In cases where UserInfoCard is a subset of the data needed in a contract, use UserInfoCard as a property of other contracts.
 */
var DestinyResponsesDestinyLinkedProfilesResponseBnetMembership = /** @class */ (function (_super) {
    __extends(DestinyResponsesDestinyLinkedProfilesResponseBnetMembership, _super);
    function DestinyResponsesDestinyLinkedProfilesResponseBnetMembership() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "applicableMembershipTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "bungieGlobalDisplayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "bungieGlobalDisplayNameCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "crossSaveOverride", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "iconPath", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "isPublic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "membershipId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "membershipType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DestinyResponsesDestinyLinkedProfilesResponseBnetMembership.prototype, "supplementalDisplayName", void 0);
    return DestinyResponsesDestinyLinkedProfilesResponseBnetMembership;
}(utils_1.SpeakeasyBase));
exports.DestinyResponsesDestinyLinkedProfilesResponseBnetMembership = DestinyResponsesDestinyLinkedProfilesResponseBnetMembership;
/**
 * I know what you seek. You seek linked accounts. Found them, you have.
 *
 * @remarks
 * This contract returns a minimal amount of data about Destiny Accounts that are linked through your Bungie.Net account. We will not return accounts in this response whose
 */
var DestinyResponsesDestinyLinkedProfilesResponse = /** @class */ (function (_super) {
    __extends(DestinyResponsesDestinyLinkedProfilesResponse, _super);
    function DestinyResponsesDestinyLinkedProfilesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DestinyResponsesDestinyLinkedProfilesResponseBnetMembership)
    ], DestinyResponsesDestinyLinkedProfilesResponse.prototype, "bnetMembership", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: destinyresponsesdestinyprofileuserinfocard_1.DestinyResponsesDestinyProfileUserInfoCard }),
        __metadata("design:type", Array)
    ], DestinyResponsesDestinyLinkedProfilesResponse.prototype, "profiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: destinyresponsesdestinyerrorprofile_1.DestinyResponsesDestinyErrorProfile }),
        __metadata("design:type", Array)
    ], DestinyResponsesDestinyLinkedProfilesResponse.prototype, "profilesWithErrors", void 0);
    return DestinyResponsesDestinyLinkedProfilesResponse;
}(utils_1.SpeakeasyBase));
exports.DestinyResponsesDestinyLinkedProfilesResponse = DestinyResponsesDestinyLinkedProfilesResponse;
