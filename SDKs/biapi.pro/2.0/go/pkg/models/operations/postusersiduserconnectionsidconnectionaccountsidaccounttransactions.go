// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
	"time"
)

type PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsPathParams struct {
	IDAccount    int64 `pathParam:"style=simple,explode=false,name=id_account"`
	IDConnection int64 `pathParam:"style=simple,explode=false,name=id_connection"`
	// Hint: you can use 'me' or 'all'
	IDUser string `pathParam:"style=simple,explode=false,name=id_user"`
}

type PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsQueryParams struct {
	Expand *string `queryParam:"style=form,explode=true,name=expand"`
}

type PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequestBody struct {
	// 1 if the transaction should be taken into account by pfm services (default: 1)
	Active *bool `multipartForm:"name=active"`
	// 1 if the transaction has already been debited (default: 0)
	Coming *bool `multipartForm:"name=coming"`
	// date of the transaction
	Date types.Date `multipartForm:"name=date"`
	// date on which the transaction has been found for the first time. YYYY-MM-DD HH:MM:SS(default: now)
	DateScraped *time.Time `multipartForm:"name=date_scraped"`
	// account of the transaction. If not supplied, it has to be given in the route
	IDAccount *int64 `multipartForm:"name=id_account"`
	// label of the transaction
	OriginalWording string `multipartForm:"name=original_wording"`
	// realisation date of the transaction (default: value of date)
	Rdate *types.Date `multipartForm:"name=rdate"`
	// nature of the transaction (default: new)
	State *string `multipartForm:"name=state"`
	// type of the transaction (default: unknown)
	Type *string `multipartForm:"name=type"`
	// vallue of the transaction
	Value int64 `multipartForm:"name=value"`
}

type PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequest struct {
	PathParams  PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsPathParams
	QueryParams PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsQueryParams
	Request     PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsRequestBody `request:"mediaType=multipart/form-data"`
}

type PostUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful POST on Transaction resource
	Transaction *shared.Transaction
}
