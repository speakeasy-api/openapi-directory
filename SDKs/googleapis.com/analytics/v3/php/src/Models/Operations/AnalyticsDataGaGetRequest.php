<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class AnalyticsDataGaGetRequest
{
    /**
     * Data format for the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=alt')]
    public ?\OpenAPI\OpenAPI\Models\Shared\AltEnum $alt = null;
    
    /**
     * A comma-separated list of Analytics dimensions. E.g., 'ga:browser,ga:city'.
     * 
     * @var ?string $dimensions
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=dimensions')]
    public ?string $dimensions = null;
    
    /**
     * End date for fetching Analytics data. Request can should specify an end date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is yesterday.
     * 
     * @var string $endDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=end-date')]
    public string $endDate;
    
    /**
     * Selector specifying which fields to include in a partial response.
     * 
     * @var ?string $fields
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fields')]
    public ?string $fields = null;
    
    /**
     * A comma-separated list of dimension or metric filters to be applied to Analytics data.
     * 
     * @var ?string $filters
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filters')]
    public ?string $filters = null;
    
    /**
     * Unique table ID for retrieving Analytics data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.
     * 
     * @var string $ids
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ids')]
    public string $ids;
    
    /**
     * The response will include empty rows if this parameter is set to true, the default is true
     * 
     * @var ?bool $includeEmptyRows
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=include-empty-rows')]
    public ?bool $includeEmptyRows = null;
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     * 
     * @var ?string $key
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=key')]
    public ?string $key = null;
    
    /**
     * The maximum number of entries to include in this feed.
     * 
     * @var ?int $maxResults
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max-results')]
    public ?int $maxResults = null;
    
    /**
     * A comma-separated list of Analytics metrics. E.g., 'ga:sessions,ga:pageviews'. At least one metric must be specified.
     * 
     * @var string $metrics
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=metrics')]
    public string $metrics;
    
    /**
     * OAuth 2.0 token for the current user.
     * 
     * @var ?string $oauthToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=oauth_token')]
    public ?string $oauthToken = null;
    
    /**
     * The selected format for the response. Default format is JSON.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AnalyticsDataGaGetOutputEnum $output
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=output')]
    public ?AnalyticsDataGaGetOutputEnum $output = null;
    
    /**
     * Returns response with indentations and line breaks.
     * 
     * @var ?bool $prettyPrint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=prettyPrint')]
    public ?bool $prettyPrint = null;
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     * 
     * @var ?string $quotaUser
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=quotaUser')]
    public ?string $quotaUser = null;
    
    /**
     * The desired sampling level.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AnalyticsDataGaGetSamplingLevelEnum $samplingLevel
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=samplingLevel')]
    public ?AnalyticsDataGaGetSamplingLevelEnum $samplingLevel = null;
    
    /**
     * An Analytics segment to be applied to data.
     * 
     * @var ?string $segment
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=segment')]
    public ?string $segment = null;
    
    /**
     * A comma-separated list of dimensions or metrics that determine the sort order for Analytics data.
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Start date for fetching Analytics data. Requests can specify a start date formatted as YYYY-MM-DD, or as a relative date (e.g., today, yesterday, or 7daysAgo). The default value is 7daysAgo.
     * 
     * @var string $startDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=start-date')]
    public string $startDate;
    
    /**
     * An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.
     * 
     * @var ?int $startIndex
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=start-index')]
    public ?int $startIndex = null;
    
    /**
     * Deprecated. Please use quotaUser instead.
     * 
     * @var ?string $userIp
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=userIp')]
    public ?string $userIp = null;
    
	public function __construct()
	{
		$this->alt = null;
		$this->dimensions = null;
		$this->endDate = "";
		$this->fields = null;
		$this->filters = null;
		$this->ids = "";
		$this->includeEmptyRows = null;
		$this->key = null;
		$this->maxResults = null;
		$this->metrics = "";
		$this->oauthToken = null;
		$this->output = null;
		$this->prettyPrint = null;
		$this->quotaUser = null;
		$this->samplingLevel = null;
		$this->segment = null;
		$this->sort = null;
		$this->startDate = "";
		$this->startIndex = null;
		$this->userIp = null;
	}
}
