// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteInstanceProfileXAmzTargetEnum
type DeleteInstanceProfileXAmzTargetEnum string

const (
	DeleteInstanceProfileXAmzTargetEnumDeviceFarm20150623DeleteInstanceProfile DeleteInstanceProfileXAmzTargetEnum = "DeviceFarm_20150623.DeleteInstanceProfile"
)

func (e DeleteInstanceProfileXAmzTargetEnum) ToPointer() *DeleteInstanceProfileXAmzTargetEnum {
	return &e
}

func (e *DeleteInstanceProfileXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.DeleteInstanceProfile":
		*e = DeleteInstanceProfileXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteInstanceProfileXAmzTargetEnum: %v", v)
	}
}

type DeleteInstanceProfileRequest struct {
	DeleteInstanceProfileRequest shared.DeleteInstanceProfileRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteInstanceProfileXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteInstanceProfileResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// Success
	DeleteInstanceProfileResult map[string]interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceAccountException
	ServiceAccountException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
