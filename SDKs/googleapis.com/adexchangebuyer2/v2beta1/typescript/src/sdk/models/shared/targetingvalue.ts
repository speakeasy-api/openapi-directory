/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CreativeSize } from "./creativesize";
import { DayPartTargeting } from "./dayparttargeting";
import { Expose, Type } from "class-transformer";

/**
 * A polymorphic targeting value used as part of Shared Targeting.
 */
export class TargetingValue extends SpeakeasyBase {
  /**
   * Specifies the size of the creative.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creativeSizeValue" })
  @Type(() => CreativeSize)
  creativeSizeValue?: CreativeSize;

  /**
   * Specifies the day part targeting criteria.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dayPartTargetingValue" })
  @Type(() => DayPartTargeting)
  dayPartTargetingValue?: DayPartTargeting;

  /**
   * The long value to include/exclude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longValue" })
  longValue?: string;

  /**
   * The string value to include/exclude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;
}
