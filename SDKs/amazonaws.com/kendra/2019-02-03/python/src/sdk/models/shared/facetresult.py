"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentattributevaluecountpair as shared_documentattributevaluecountpair
from ..shared import documentattributevaluetype_enum as shared_documentattributevaluetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FacetResult:
    r"""The facet values for the documents in the response."""
    
    document_attribute_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentAttributeKey'), 'exclude': lambda f: f is None }})  
    document_attribute_value_count_pairs: Optional[list[shared_documentattributevaluecountpair.DocumentAttributeValueCountPair]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentAttributeValueCountPairs'), 'exclude': lambda f: f is None }})  
    document_attribute_value_type: Optional[shared_documentattributevaluetype_enum.DocumentAttributeValueTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentAttributeValueType'), 'exclude': lambda f: f is None }})  
    