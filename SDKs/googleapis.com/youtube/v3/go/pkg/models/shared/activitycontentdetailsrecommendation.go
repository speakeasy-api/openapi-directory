// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ActivityContentDetailsRecommendationReasonEnum - The reason that the resource is recommended to the user.
type ActivityContentDetailsRecommendationReasonEnum string

const (
	ActivityContentDetailsRecommendationReasonEnumReasonUnspecified ActivityContentDetailsRecommendationReasonEnum = "reasonUnspecified"
	ActivityContentDetailsRecommendationReasonEnumVideoFavorited    ActivityContentDetailsRecommendationReasonEnum = "videoFavorited"
	ActivityContentDetailsRecommendationReasonEnumVideoLiked        ActivityContentDetailsRecommendationReasonEnum = "videoLiked"
	ActivityContentDetailsRecommendationReasonEnumVideoWatched      ActivityContentDetailsRecommendationReasonEnum = "videoWatched"
)

func (e ActivityContentDetailsRecommendationReasonEnum) ToPointer() *ActivityContentDetailsRecommendationReasonEnum {
	return &e
}

func (e *ActivityContentDetailsRecommendationReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "reasonUnspecified":
		fallthrough
	case "videoFavorited":
		fallthrough
	case "videoLiked":
		fallthrough
	case "videoWatched":
		*e = ActivityContentDetailsRecommendationReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActivityContentDetailsRecommendationReasonEnum: %v", v)
	}
}

// ActivityContentDetailsRecommendation - Information that identifies the recommended resource.
type ActivityContentDetailsRecommendation struct {
	// The reason that the resource is recommended to the user.
	Reason *ActivityContentDetailsRecommendationReasonEnum `json:"reason,omitempty"`
	// A resource id is a generic reference that points to another YouTube resource.
	ResourceID *ResourceID `json:"resourceId,omitempty"`
	// A resource id is a generic reference that points to another YouTube resource.
	SeedResourceID *ResourceID `json:"seedResourceId,omitempty"`
}
