// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetVirtualMachineXAmzTargetEnum
type GetVirtualMachineXAmzTargetEnum string

const (
	GetVirtualMachineXAmzTargetEnumBackupOnPremisesV20210101GetVirtualMachine GetVirtualMachineXAmzTargetEnum = "BackupOnPremises_v20210101.GetVirtualMachine"
)

func (e GetVirtualMachineXAmzTargetEnum) ToPointer() *GetVirtualMachineXAmzTargetEnum {
	return &e
}

func (e *GetVirtualMachineXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BackupOnPremises_v20210101.GetVirtualMachine":
		*e = GetVirtualMachineXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVirtualMachineXAmzTargetEnum: %v", v)
	}
}

type GetVirtualMachineRequest struct {
	GetVirtualMachineInput shared.GetVirtualMachineInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             GetVirtualMachineXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetVirtualMachineResponse struct {
	ContentType string
	// Success
	GetVirtualMachineOutput *shared.GetVirtualMachineOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
