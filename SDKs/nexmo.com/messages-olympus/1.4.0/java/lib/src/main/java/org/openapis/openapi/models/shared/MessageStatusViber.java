/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MessageStatusViber - Viber
 */
public class MessageStatusViber {
    /**
     * The channel sending to.
     */
    @JsonProperty("channel")
    public MessageStatusViberChannelEnum channel;

    public MessageStatusViber withChannel(MessageStatusViberChannelEnum channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Client reference of up to 100 characters. The reference will be present in every message status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_ref")
    public String clientRef;

    public MessageStatusViber withClientRef(String clientRef) {
        this.clientRef = clientRef;
        return this;
    }
    
    /**
     * If the message encountered a problem a descriptive error will be supplied in this object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public MessageStatusViberError error;

    public MessageStatusViber withError(MessageStatusViberError error) {
        this.error = error;
        return this;
    }
    
    /**
     * The phone number of the message **sender** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's will work as well, see [Global Messaging](https://developer.nexmo.com/messaging/sms/guides/country-specific-features#country-specific-features) for more details
     * 
     */
    @JsonProperty("from")
    public String from;

    public MessageStatusViber withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * The UUID of the message
     */
    @JsonProperty("message_uuid")
    public String messageUuid;

    public MessageStatusViber withMessageUuid(String messageUuid) {
        this.messageUuid = messageUuid;
        return this;
    }
    
    @JsonProperty("status")
    public MessageStatusViberStatusEnum status;

    public MessageStatusViber withStatus(MessageStatusViberStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The datetime of when the event occurred, in `ISO 8601` format.
     */
    @JsonProperty("timestamp")
    public String timestamp;

    public MessageStatusViber withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * The phone number of the message **recipient** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.
     * 
     */
    @JsonProperty("to")
    public String to;

    public MessageStatusViber withTo(String to) {
        this.to = to;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage")
    public MessageStatusViberUsage usage;

    public MessageStatusViber withUsage(MessageStatusViberUsage usage) {
        this.usage = usage;
        return this;
    }
    
    public MessageStatusViber(@JsonProperty("channel") MessageStatusViberChannelEnum channel, @JsonProperty("from") String from, @JsonProperty("message_uuid") String messageUuid, @JsonProperty("status") MessageStatusViberStatusEnum status, @JsonProperty("timestamp") String timestamp, @JsonProperty("to") String to) {
        this.channel = channel;
        this.from = from;
        this.messageUuid = messageUuid;
        this.status = status;
        this.timestamp = timestamp;
        this.to = to;
  }
}
