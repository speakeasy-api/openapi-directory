// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserBindingEnumBindingTypeEnum string

const (
	UserBindingEnumBindingTypeEnumGcm UserBindingEnumBindingTypeEnum = "gcm"
	UserBindingEnumBindingTypeEnumApn UserBindingEnumBindingTypeEnum = "apn"
	UserBindingEnumBindingTypeEnumFcm UserBindingEnumBindingTypeEnum = "fcm"
)

func (e UserBindingEnumBindingTypeEnum) ToPointer() *UserBindingEnumBindingTypeEnum {
	return &e
}

func (e *UserBindingEnumBindingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "gcm":
		fallthrough
	case "apn":
		fallthrough
	case "fcm":
		*e = UserBindingEnumBindingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserBindingEnumBindingTypeEnum: %v", v)
	}
}
