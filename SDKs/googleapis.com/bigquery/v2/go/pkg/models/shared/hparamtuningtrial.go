// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HparamTuningTrialStatusEnum - The status of the trial.
type HparamTuningTrialStatusEnum string

const (
	HparamTuningTrialStatusEnumTrialStatusUnspecified HparamTuningTrialStatusEnum = "TRIAL_STATUS_UNSPECIFIED"
	HparamTuningTrialStatusEnumNotStarted             HparamTuningTrialStatusEnum = "NOT_STARTED"
	HparamTuningTrialStatusEnumRunning                HparamTuningTrialStatusEnum = "RUNNING"
	HparamTuningTrialStatusEnumSucceeded              HparamTuningTrialStatusEnum = "SUCCEEDED"
	HparamTuningTrialStatusEnumFailed                 HparamTuningTrialStatusEnum = "FAILED"
	HparamTuningTrialStatusEnumInfeasible             HparamTuningTrialStatusEnum = "INFEASIBLE"
	HparamTuningTrialStatusEnumStoppedEarly           HparamTuningTrialStatusEnum = "STOPPED_EARLY"
)

func (e *HparamTuningTrialStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TRIAL_STATUS_UNSPECIFIED":
		fallthrough
	case "NOT_STARTED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "INFEASIBLE":
		fallthrough
	case "STOPPED_EARLY":
		*e = HparamTuningTrialStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HparamTuningTrialStatusEnum: %s", s)
	}
}

// HparamTuningTrial - Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
type HparamTuningTrial struct {
	// Ending time of the trial.
	EndTimeMs *string `json:"endTimeMs,omitempty"`
	// Error message for FAILED and INFEASIBLE trial.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// Loss computed on the eval data at the end of trial.
	EvalLoss *float64 `json:"evalLoss,omitempty"`
	// Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
	EvaluationMetrics *EvaluationMetrics `json:"evaluationMetrics,omitempty"`
	// Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
	HparamTuningEvaluationMetrics *EvaluationMetrics `json:"hparamTuningEvaluationMetrics,omitempty"`
	// Options used in model training.
	Hparams *TrainingOptions `json:"hparams,omitempty"`
	// Starting time of the trial.
	StartTimeMs *string `json:"startTimeMs,omitempty"`
	// The status of the trial.
	Status *HparamTuningTrialStatusEnum `json:"status,omitempty"`
	// Loss computed on the training data at the end of trial.
	TrainingLoss *float64 `json:"trainingLoss,omitempty"`
	// 1-based index of the trial.
	TrialID *string `json:"trialId,omitempty"`
}
