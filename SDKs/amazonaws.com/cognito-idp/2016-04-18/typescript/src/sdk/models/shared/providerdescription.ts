/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IdentityProviderTypeTypeEnum } from "./identityprovidertypetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A container for IdP details.
 */
export class ProviderDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderName" })
  providerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: IdentityProviderTypeTypeEnum;
}
