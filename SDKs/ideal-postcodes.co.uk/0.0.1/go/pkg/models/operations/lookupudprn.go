// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type LookupUDPRNSecurity struct {
	APIKey    shared.SchemeAPIKey    `security:"scheme,type=apiKey,subtype=query"`
	UserToken shared.SchemeUserToken `security:"scheme,type=apiKey,subtype=query"`
}

type LookupUDPRNPathParams struct {
	Udprn string `pathParam:"style=simple,explode=false,name=udprn"`
}

type LookupUDPRNQueryParams struct {
	// Comma separated whitelist of address elements to return. E.g. `filter=line_1,line_2,line_3` returns only `line_1`, `line_2` and `line_3` address elements in your response
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// Only required if you are using a sublicensed key. This parameter will associate the request with your licensee
	Licensee *string `queryParam:"style=form,explode=true,name=licensee"`
}

type LookupUDPRNRequest struct {
	PathParams  LookupUDPRNPathParams
	QueryParams LookupUDPRNQueryParams
	Security    LookupUDPRNSecurity
}

type LookupUDPRNResponse struct {
	// Success
	AddressLookupResponseSchema *shared.AddressLookupResponseSchema
	ContentType                 string
	// Bad request
	ErrorResponseSchema *shared.ErrorResponseSchema
	StatusCode          int
	RawResponse         *http.Response
}
