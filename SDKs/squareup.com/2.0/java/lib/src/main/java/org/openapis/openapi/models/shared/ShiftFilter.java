/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ShiftFilter - Defines a filter used in a search for `Shift` records. `AND` logic is
 * used by Square's servers to apply each filter property specified.
 */
public class ShiftFilter {
    /**
     * Fetch shifts for the specified employees. DEPRECATED at version 2020-08-26. Use `team_member_ids` instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employee_ids")
    public String[] employeeIds;
    public ShiftFilter withEmployeeIds(String[] employeeIds) {
        this.employeeIds = employeeIds;
        return this;
    }
    
    /**
     * Represents a generic time range. The start and end values are
     * represented in RFC 3339 format. Time ranges are customized to be
     * inclusive or exclusive based on the needs of a particular endpoint.
     * Refer to the relevant endpoint-specific documentation to determine
     * how time ranges are handled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end")
    public TimeRange end;
    public ShiftFilter withEnd(TimeRange end) {
        this.end = end;
        return this;
    }
    
    /**
     * Fetch shifts for the specified location.
     */
    @JsonProperty("location_ids")
    public String[] locationIds;
    public ShiftFilter withLocationIds(String[] locationIds) {
        this.locationIds = locationIds;
        return this;
    }
    
    /**
     * Represents a generic time range. The start and end values are
     * represented in RFC 3339 format. Time ranges are customized to be
     * inclusive or exclusive based on the needs of a particular endpoint.
     * Refer to the relevant endpoint-specific documentation to determine
     * how time ranges are handled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start")
    public TimeRange start;
    public ShiftFilter withStart(TimeRange start) {
        this.start = start;
        return this;
    }
    
    /**
     * Fetch a `Shift` instance by `Shift.status`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public ShiftFilter withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Fetch shifts for the specified team members. Replaced `employee_ids` at version "2020-08-26".
     */
    @JsonProperty("team_member_ids")
    public String[] teamMemberIds;
    public ShiftFilter withTeamMemberIds(String[] teamMemberIds) {
        this.teamMemberIds = teamMemberIds;
        return this;
    }
    
    /**
     * A `Shift` search query filter parameter that sets a range of days that
     * a `Shift` must start or end in before passing the filter condition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workday")
    public ShiftWorkday workday;
    public ShiftFilter withWorkday(ShiftWorkday workday) {
        this.workday = workday;
        return this;
    }
    
}
