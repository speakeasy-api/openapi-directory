/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TaskrouterV1WorkspaceWorkflow - Created
 */
public class TaskrouterV1WorkspaceWorkflow {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Workflow resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public TaskrouterV1WorkspaceWorkflow withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The URL that we call when a task managed by the Workflow is assigned to a Worker. See Assignment Callback URL for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignment_callback_url")
    public String assignmentCallbackUrl;

    public TaskrouterV1WorkspaceWorkflow withAssignmentCallbackUrl(String assignmentCallbackUrl) {
        this.assignmentCallbackUrl = assignmentCallbackUrl;
        return this;
    }
    
    /**
     * A JSON string that contains the Workflow's configuration. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public String configuration;

    public TaskrouterV1WorkspaceWorkflow withConfiguration(String configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public TaskrouterV1WorkspaceWorkflow withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public TaskrouterV1WorkspaceWorkflow withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The MIME type of the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document_content_type")
    public String documentContentType;

    public TaskrouterV1WorkspaceWorkflow withDocumentContentType(String documentContentType) {
        this.documentContentType = documentContentType;
        return this;
    }
    
    /**
     * The URL that we call when a call to the `assignment_callback_url` fails.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fallback_assignment_callback_url")
    public String fallbackAssignmentCallbackUrl;

    public TaskrouterV1WorkspaceWorkflow withFallbackAssignmentCallbackUrl(String fallbackAssignmentCallbackUrl) {
        this.fallbackAssignmentCallbackUrl = fallbackAssignmentCallbackUrl;
        return this;
    }
    
    /**
     * The string that you assigned to describe the Workflow resource. For example, `Customer Support` or `2014 Election Campaign`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendly_name")
    public String friendlyName;

    public TaskrouterV1WorkspaceWorkflow withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public TaskrouterV1WorkspaceWorkflow withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Workflow resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public TaskrouterV1WorkspaceWorkflow withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_reservation_timeout")
    public Long taskReservationTimeout;

    public TaskrouterV1WorkspaceWorkflow withTaskReservationTimeout(Long taskReservationTimeout) {
        this.taskReservationTimeout = taskReservationTimeout;
        return this;
    }
    
    /**
     * The absolute URL of the Workflow resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public TaskrouterV1WorkspaceWorkflow withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The SID of the Workspace that contains the Workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace_sid")
    public String workspaceSid;

    public TaskrouterV1WorkspaceWorkflow withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
    public TaskrouterV1WorkspaceWorkflow(){}
}
