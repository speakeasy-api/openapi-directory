/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Requisition - RequisitionSerializer.
 */
public class Requisition {
    /**
     * option to enable account selection view for the end user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_selection")
    public Boolean accountSelection;

    public Requisition withAccountSelection(Boolean accountSelection) {
        this.accountSelection = accountSelection;
        return this;
    }
    
    /**
     * array of account IDs retrieved within a scope of this requisition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accounts")
    public String[] accounts;

    public Requisition withAccounts(String[] accounts) {
        this.accounts = accounts;
        return this;
    }
    
    /**
     * EUA associated with this requisition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("agreement")
    public String agreement;

    public Requisition withAgreement(String agreement) {
        this.agreement = agreement;
        return this;
    }
    
    /**
     * The date &amp; time at which the requisition was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created")
    public OffsetDateTime created;

    public Requisition withCreated(OffsetDateTime created) {
        this.created = created;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Requisition withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * an Institution ID for this Requisition
     */
    @JsonProperty("institution_id")
    public String institutionId;

    public Requisition withInstitutionId(String institutionId) {
        this.institutionId = institutionId;
        return this;
    }
    
    /**
     * link to initiate authorization with Institution
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link")
    public String link;

    public Requisition withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * redirect URL to your application after end-user authorization with ASPSP
     */
    @JsonProperty("redirect")
    public String redirect;

    public Requisition withRedirect(String redirect) {
        this.redirect = redirect;
        return this;
    }
    
    /**
     * enable redirect back to the client after account list received
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirect_immediate")
    public Boolean redirectImmediate;

    public Requisition withRedirectImmediate(Boolean redirectImmediate) {
        this.redirectImmediate = redirectImmediate;
        return this;
    }
    
    /**
     * additional ID to identify the end user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public Requisition withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * optional SSN field to verify ownership of the account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssn")
    public String ssn;

    public Requisition withSsn(String ssn) {
        this.ssn = ssn;
        return this;
    }
    
    /**
     * status of this requisition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public RequisitionRequisitionStatusEnum status;

    public Requisition withStatus(RequisitionRequisitionStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * A two-letter country code (ISO 639-1)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_language")
    public String userLanguage;

    public Requisition withUserLanguage(String userLanguage) {
        this.userLanguage = userLanguage;
        return this;
    }
    
    public Requisition(@JsonProperty("institution_id") String institutionId, @JsonProperty("redirect") String redirect) {
        this.institutionId = institutionId;
        this.redirect = redirect;
  }
}
