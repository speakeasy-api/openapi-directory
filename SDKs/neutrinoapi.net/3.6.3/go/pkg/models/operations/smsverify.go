// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SMSVerifyRequestBody struct {
	// The number of digits to use in the security code (must be between 4 and 12)
	CodeLength *int `form:"name=code-length"`
	// ISO 2-letter country code, assume numbers are based in this country. <br>If not set numbers are assumed to be in international format (with or without the leading + sign)
	CountryCode *string `form:"name=country-code"`
	// The language to send the verification code in, available languages are: <ul> <li>de - German</li> <li>en - English</li> <li>es - Spanish</li> <li>fr - French</li> <li>it - Italian</li> <li>pt - Portuguese</li> <li>ru - Russian</li> </ul>
	LanguageCode *string `form:"name=language-code"`
	// Limit the total number of SMS allowed to the supplied phone number, if the limit is reached within the TTL then error code 14 will be returned
	Limit *int `form:"name=limit"`
	// Set the TTL in number of days that the 'limit' option will remember a phone number (the default is 1 day and the maximum is 365 days)
	LimitTTL *int `form:"name=limit-ttl"`
	// The phone number to send a verification code to
	Number string `form:"name=number"`
	// Pass in your own security code. This is useful if you have implemented TOTP or similar 2FA methods. If not set then we will generate a secure random code
	SecurityCode *int `form:"name=security-code"`
}

type SMSVerifyResponse struct {
	// Your API request has been rejected. Check error code for details
	APIError          *shared.APIError
	ContentType       string
	SMSVerifyResponse *shared.SMSVerifyResponse
	StatusCode        int
	RawResponse       *http.Response
}
