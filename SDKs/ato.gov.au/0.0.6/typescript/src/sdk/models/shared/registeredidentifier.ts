/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The registered identifier type.
 */
export enum RegisteredIdentifierIdentifierTypeEnum {
  Acn = "ACN",
  Abn = "ABN",
}

/**
 * The Registered Identifier resource.
 */
export class RegisteredIdentifierInput extends SpeakeasyBase {
  /**
   * The registered identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * The registered identifier type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifierType" })
  identifierType?: RegisteredIdentifierIdentifierTypeEnum;
}

/**
 * The Registered Identifier resource.
 */
export class RegisteredIdentifier extends SpeakeasyBase {
  /**
   * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fromDate?: Date;

  /**
   * The resource's unique identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The registered identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * The registered identifier type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifierType" })
  identifierType?: RegisteredIdentifierIdentifierTypeEnum;

  /**
   * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  toDate?: Date;
}
