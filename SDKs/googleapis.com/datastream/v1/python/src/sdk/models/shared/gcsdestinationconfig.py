"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import jsonfileformat as shared_jsonfileformat
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GcsDestinationConfig:
    r"""Google Cloud Storage destination configuration"""
    
    avro_file_format: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avroFileFormat'), 'exclude': lambda f: f is None }})
    r"""AVRO file format configuration."""  
    file_rotation_interval: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileRotationInterval'), 'exclude': lambda f: f is None }})
    r"""The maximum duration for which new events are added before a file is closed and a new file is created."""  
    file_rotation_mb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileRotationMb'), 'exclude': lambda f: f is None }})
    r"""The maximum file size to be saved in the bucket."""  
    json_file_format: Optional[shared_jsonfileformat.JSONFileFormat] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jsonFileFormat'), 'exclude': lambda f: f is None }})
    r"""JSON file format configuration."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""Path inside the Cloud Storage bucket to write data to."""  
    