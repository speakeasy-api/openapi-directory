/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MigrateRepoOptions - MigrateRepoOptions options for migrating repository's
 * this is used to interact with api v1
 */
public class MigrateRepoOptions {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_password")
    public String authPassword;

    public MigrateRepoOptions withAuthPassword(String authPassword) {
        this.authPassword = authPassword;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_token")
    public String authToken;

    public MigrateRepoOptions withAuthToken(String authToken) {
        this.authToken = authToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auth_username")
    public String authUsername;

    public MigrateRepoOptions withAuthUsername(String authUsername) {
        this.authUsername = authUsername;
        return this;
    }
    
    @JsonProperty("clone_addr")
    public String cloneAddr;

    public MigrateRepoOptions withCloneAddr(String cloneAddr) {
        this.cloneAddr = cloneAddr;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public MigrateRepoOptions withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issues")
    public Boolean issues;

    public MigrateRepoOptions withIssues(Boolean issues) {
        this.issues = issues;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public Boolean labels;

    public MigrateRepoOptions withLabels(Boolean labels) {
        this.labels = labels;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lfs")
    public Boolean lfs;

    public MigrateRepoOptions withLfs(Boolean lfs) {
        this.lfs = lfs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lfs_endpoint")
    public String lfsEndpoint;

    public MigrateRepoOptions withLfsEndpoint(String lfsEndpoint) {
        this.lfsEndpoint = lfsEndpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("milestones")
    public Boolean milestones;

    public MigrateRepoOptions withMilestones(Boolean milestones) {
        this.milestones = milestones;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mirror")
    public Boolean mirror;

    public MigrateRepoOptions withMirror(Boolean mirror) {
        this.mirror = mirror;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mirror_interval")
    public String mirrorInterval;

    public MigrateRepoOptions withMirrorInterval(String mirrorInterval) {
        this.mirrorInterval = mirrorInterval;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private")
    public Boolean private_;

    public MigrateRepoOptions withPrivate(Boolean private_) {
        this.private_ = private_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pull_requests")
    public Boolean pullRequests;

    public MigrateRepoOptions withPullRequests(Boolean pullRequests) {
        this.pullRequests = pullRequests;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releases")
    public Boolean releases;

    public MigrateRepoOptions withReleases(Boolean releases) {
        this.releases = releases;
        return this;
    }
    
    @JsonProperty("repo_name")
    public String repoName;

    public MigrateRepoOptions withRepoName(String repoName) {
        this.repoName = repoName;
        return this;
    }
    
    /**
     * Name of User or Organisation who will own Repo after migration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repo_owner")
    public String repoOwner;

    public MigrateRepoOptions withRepoOwner(String repoOwner) {
        this.repoOwner = repoOwner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public MigrateRepoOptionsServiceEnum service;

    public MigrateRepoOptions withService(MigrateRepoOptionsServiceEnum service) {
        this.service = service;
        return this;
    }
    
    /**
     * deprecated (only for backwards compatibility)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public Long uid;

    public MigrateRepoOptions withUid(Long uid) {
        this.uid = uid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wiki")
    public Boolean wiki;

    public MigrateRepoOptions withWiki(Boolean wiki) {
        this.wiki = wiki;
        return this;
    }
    
    public MigrateRepoOptions(@JsonProperty("clone_addr") String cloneAddr, @JsonProperty("repo_name") String repoName) {
        this.cloneAddr = cloneAddr;
        this.repoName = repoName;
  }
}
