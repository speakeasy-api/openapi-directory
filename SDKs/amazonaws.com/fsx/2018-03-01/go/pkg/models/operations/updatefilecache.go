// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateFileCacheXAmzTargetEnum
type UpdateFileCacheXAmzTargetEnum string

const (
	UpdateFileCacheXAmzTargetEnumAwsSimbaAPIServiceV20180301UpdateFileCache UpdateFileCacheXAmzTargetEnum = "AWSSimbaAPIService_v20180301.UpdateFileCache"
)

func (e UpdateFileCacheXAmzTargetEnum) ToPointer() *UpdateFileCacheXAmzTargetEnum {
	return &e
}

func (e *UpdateFileCacheXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSSimbaAPIService_v20180301.UpdateFileCache":
		*e = UpdateFileCacheXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFileCacheXAmzTargetEnum: %v", v)
	}
}

type UpdateFileCacheRequest struct {
	UpdateFileCacheRequest shared.UpdateFileCacheRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             UpdateFileCacheXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateFileCacheResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// FileCacheNotFound
	FileCacheNotFound interface{}
	// IncompatibleParameterError
	IncompatibleParameterError interface{}
	// InternalServerError
	InternalServerError interface{}
	// MissingFileCacheConfiguration
	MissingFileCacheConfiguration interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ServiceLimitExceeded
	ServiceLimitExceeded interface{}
	// UnsupportedOperation
	UnsupportedOperation interface{}
	// Success
	UpdateFileCacheResponse *shared.UpdateFileCacheResponse
}
