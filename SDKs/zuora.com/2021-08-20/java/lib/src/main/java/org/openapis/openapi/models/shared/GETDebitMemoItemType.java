/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GETDebitMemoItemType - Container for custom fields of a Debit Memo Item object.
 * 
 */
public class GETDebitMemoItemType {
    /**
     * The amount of the debit memo item. For tax-inclusive debit memo items, the amount indicates the debit memo item amount including tax. For tax-exclusive debit memo items, the amount indicates the debit memo item amount excluding tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public GETDebitMemoItemType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The debit memo item amount excluding tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountWithoutTax")
    public Double amountWithoutTax;
    public GETDebitMemoItemType withAmountWithoutTax(Double amountWithoutTax) {
        this.amountWithoutTax = amountWithoutTax;
        return this;
    }
    
    /**
     * The balance of the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balance")
    public Double balance;
    public GETDebitMemoItemType withBalance(Double balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * The applied amount of the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("beAppliedAmount")
    public Double beAppliedAmount;
    public GETDebitMemoItemType withBeAppliedAmount(Double beAppliedAmount) {
        this.beAppliedAmount = beAppliedAmount;
        return this;
    }
    
    /**
     * Comments about the debit memo item.
     * 
     * **Note**: This field is not available if you set the `zuora-version` request header to `257.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public GETDebitMemoItemType withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdById")
    public String createdById;
    public GETDebitMemoItemType withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date and time when the debit memo item was created, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-01 15:31:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public GETDebitMemoItemType withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Description about the debit memo item.
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `257.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GETDebitMemoItemType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Container for the finance information related to the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("financeInformation")
    public GETDebitMemoItemTypeFinanceInformation financeInformation;
    public GETDebitMemoItemType withFinanceInformation(GETDebitMemoItemTypeFinanceInformation financeInformation) {
        this.financeInformation = financeInformation;
        return this;
    }
    
    /**
     * The ID of the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GETDebitMemoItemType withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The number of units for the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;
    public GETDebitMemoItemType withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The end date of the service period associated with this debit memo item. Service ends one second before the date specified in this field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceEndDate")
    public LocalDate serviceEndDate;
    public GETDebitMemoItemType withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * The start date of the service period associated with this debit memo item. If the associated charge is a one-time fee, this date is the date of that charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceStartDate")
    public LocalDate serviceStartDate;
    public GETDebitMemoItemType withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * The SKU for the product associated with the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;
    public GETDebitMemoItemType withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The name of the SKU.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skuName")
    public String skuName;
    public GETDebitMemoItemType withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }
    
    /**
     * The ID of the source item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceItemId")
    public String sourceItemId;
    public GETDebitMemoItemType withSourceItemId(String sourceItemId) {
        this.sourceItemId = sourceItemId;
        return this;
    }
    
    /**
     * The type of the source item. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceItemType")
    public GETDebitMemoItemTypeSourceItemTypeEnum sourceItemType;
    public GETDebitMemoItemType withSourceItemType(GETDebitMemoItemTypeSourceItemTypeEnum sourceItemType) {
        this.sourceItemType = sourceItemType;
        return this;
    }
    
    /**
     * The ID of the subscription associated with the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public GETDebitMemoItemType withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETDebitMemoItemType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Container for the taxation items of the debit memo item.. 
     * 
     * **Note**: This field is not available if you set the `zuora-version` request header to `239.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxItems")
    public GETDMTaxItemType[] taxItems;
    public GETDebitMemoItemType withTaxItems(GETDMTaxItemType[] taxItems) {
        this.taxItems = taxItems;
        return this;
    }
    
    /**
     * The tax mode of the debit memo item, indicating whether the amount of the debit memo item includes tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxMode")
    public GETDebitMemoItemTypeTaxModeEnum taxMode;
    public GETDebitMemoItemType withTaxMode(GETDebitMemoItemTypeTaxModeEnum taxMode) {
        this.taxMode = taxMode;
        return this;
    }
    
    /**
     * Container for the taxation items of the debit memo item.
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `239.0` or later.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxationItems")
    public GETDebitMemoItemTypeTaxationItems taxationItems;
    public GETDebitMemoItemType withTaxationItems(GETDebitMemoItemTypeTaxationItems taxationItems) {
        this.taxationItems = taxationItems;
        return this;
    }
    
    /**
     * The units to measure usage.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public GETDebitMemoItemType withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
    /**
     * The per-unit price of the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPrice")
    public Double unitPrice;
    public GETDebitMemoItemType withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    /**
     * The ID of the Zuora user who last updated the debit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedById")
    public String updatedById;
    public GETDebitMemoItemType withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * The date and time when the debit memo item was last updated, in `yyyy-mm-dd hh:mm:ss` format. For example, 2017-03-02 15:36:10.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedDate")
    public OffsetDateTime updatedDate;
    public GETDebitMemoItemType withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
