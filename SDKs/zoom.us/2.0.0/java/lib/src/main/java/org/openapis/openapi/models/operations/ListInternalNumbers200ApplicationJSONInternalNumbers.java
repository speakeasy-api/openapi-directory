/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListInternalNumbers200ApplicationJSONInternalNumbers {
    /**
     * Control whether the number can be used to attend 3rd party meetings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_for_external_meetings")
    public Boolean allowForExternalMeetings;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withAllowForExternalMeetings(Boolean allowForExternalMeetings) {
        this.allowForExternalMeetings = allowForExternalMeetings;
        return this;
    }
    
    /**
     * Specify whether this number can be used by users to join a meeting or not. &lt;br&gt;
     * * `true` : This number can be used to join a meeting. &lt;br&gt;
     * *  `false`: This number can not be used to join a meeting. 
     * 
     * Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_join")
    public Boolean allowJoin;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withAllowJoin(Boolean allowJoin) {
        this.allowJoin = allowJoin;
        return this;
    }
    
    /**
     * Two letter country code of the country.
     */
    @JsonProperty("country")
    public String country;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`. 
     */
    @JsonProperty("display_number")
    public String displayNumber;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withDisplayNumber(String displayNumber) {
        this.displayNumber = displayNumber;
        return this;
    }
    
    /**
     * A short description for the phone number.
     */
    @JsonProperty("labels")
    public String labels;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withLabels(String labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
     */
    @JsonProperty("languages")
    public ListInternalNumbers200ApplicationJSONInternalNumbersLanguagesEnum languages;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withLanguages(ListInternalNumbers200ApplicationJSONInternalNumbersLanguagesEnum languages) {
        this.languages = languages;
        return this;
    }
    
    /**
     * Phone number in E164 format.
     */
    @JsonProperty("number")
    public String number;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Type of phone number. &lt;br&gt;
     * The value can be one of the following:&lt;br&gt;
     * * `0` : toll &lt;br&gt;
     * * `1` : tollfree 
     */
    @JsonProperty("type")
    public ListInternalNumbers200ApplicationJSONInternalNumbersTypeEnum type;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withType(ListInternalNumbers200ApplicationJSONInternalNumbersTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:&lt;br&gt;
     * * `true`: Make the number visible. &lt;br&gt;
     * * `false`: Hide the number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visible")
    public Boolean visible;
    public ListInternalNumbers200ApplicationJSONInternalNumbers withVisible(Boolean visible) {
        this.visible = visible;
        return this;
    }
    
}
