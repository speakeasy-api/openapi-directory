// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServiceConversationMessageReceiptEnumDeliveryStatusEnum string

const (
	ServiceConversationMessageReceiptEnumDeliveryStatusEnumRead        ServiceConversationMessageReceiptEnumDeliveryStatusEnum = "read"
	ServiceConversationMessageReceiptEnumDeliveryStatusEnumFailed      ServiceConversationMessageReceiptEnumDeliveryStatusEnum = "failed"
	ServiceConversationMessageReceiptEnumDeliveryStatusEnumDelivered   ServiceConversationMessageReceiptEnumDeliveryStatusEnum = "delivered"
	ServiceConversationMessageReceiptEnumDeliveryStatusEnumUndelivered ServiceConversationMessageReceiptEnumDeliveryStatusEnum = "undelivered"
	ServiceConversationMessageReceiptEnumDeliveryStatusEnumSent        ServiceConversationMessageReceiptEnumDeliveryStatusEnum = "sent"
)

func (e *ServiceConversationMessageReceiptEnumDeliveryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "failed":
		fallthrough
	case "delivered":
		fallthrough
	case "undelivered":
		fallthrough
	case "sent":
		*e = ServiceConversationMessageReceiptEnumDeliveryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceConversationMessageReceiptEnumDeliveryStatusEnum: %s", s)
	}
}
