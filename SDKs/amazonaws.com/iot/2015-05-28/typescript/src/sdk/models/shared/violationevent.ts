/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Behavior } from "./behavior";
import { MetricValue } from "./metricvalue";
import { VerificationStateEnum } from "./verificationstateenum";
import { ViolationEventAdditionalInfo } from "./violationeventadditionalinfo";
import { ViolationEventTypeEnum } from "./violationeventtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a Device Defender security profile behavior violation.
 */
export class ViolationEvent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "behavior" })
  @Type(() => Behavior)
  behavior?: Behavior;

  @SpeakeasyMetadata()
  @Expose({ name: "metricValue" })
  @Type(() => MetricValue)
  metricValue?: MetricValue;

  @SpeakeasyMetadata()
  @Expose({ name: "securityProfileName" })
  securityProfileName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "thingName" })
  thingName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "verificationState" })
  verificationState?: VerificationStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "verificationStateDescription" })
  verificationStateDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "violationEventAdditionalInfo" })
  @Type(() => ViolationEventAdditionalInfo)
  violationEventAdditionalInfo?: ViolationEventAdditionalInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "violationEventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  violationEventTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "violationEventType" })
  violationEventType?: ViolationEventTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "violationId" })
  violationId?: string;
}
