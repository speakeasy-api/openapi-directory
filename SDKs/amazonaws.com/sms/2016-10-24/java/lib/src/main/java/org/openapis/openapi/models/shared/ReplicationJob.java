/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ReplicationJob - Represents a replication job.
 */
public class ReplicationJob {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ReplicationJob withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encrypted")
    public Boolean encrypted;
    public ReplicationJob withEncrypted(Boolean encrypted) {
        this.encrypted = encrypted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frequency")
    public Long frequency;
    public ReplicationJob withFrequency(Long frequency) {
        this.frequency = frequency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyId")
    public String kmsKeyId;
    public ReplicationJob withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latestAmiId")
    public String latestAmiId;
    public ReplicationJob withLatestAmiId(String latestAmiId) {
        this.latestAmiId = latestAmiId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenseType")
    public LicenseTypeEnum licenseType;
    public ReplicationJob withLicenseType(LicenseTypeEnum licenseType) {
        this.licenseType = licenseType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("nextReplicationRunStartTime")
    public OffsetDateTime nextReplicationRunStartTime;
    public ReplicationJob withNextReplicationRunStartTime(OffsetDateTime nextReplicationRunStartTime) {
        this.nextReplicationRunStartTime = nextReplicationRunStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfRecentAmisToKeep")
    public Long numberOfRecentAmisToKeep;
    public ReplicationJob withNumberOfRecentAmisToKeep(Long numberOfRecentAmisToKeep) {
        this.numberOfRecentAmisToKeep = numberOfRecentAmisToKeep;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationJobId")
    public String replicationJobId;
    public ReplicationJob withReplicationJobId(String replicationJobId) {
        this.replicationJobId = replicationJobId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationRunList")
    public ReplicationRun[] replicationRunList;
    public ReplicationJob withReplicationRunList(ReplicationRun[] replicationRunList) {
        this.replicationRunList = replicationRunList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roleName")
    public String roleName;
    public ReplicationJob withRoleName(String roleName) {
        this.roleName = roleName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runOnce")
    public Boolean runOnce;
    public ReplicationJob withRunOnce(Boolean runOnce) {
        this.runOnce = runOnce;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("seedReplicationTime")
    public OffsetDateTime seedReplicationTime;
    public ReplicationJob withSeedReplicationTime(OffsetDateTime seedReplicationTime) {
        this.seedReplicationTime = seedReplicationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverId")
    public String serverId;
    public ReplicationJob withServerId(String serverId) {
        this.serverId = serverId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverType")
    public ServerTypeEnum serverType;
    public ReplicationJob withServerType(ServerTypeEnum serverType) {
        this.serverType = serverType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ReplicationJobStateEnum state;
    public ReplicationJob withState(ReplicationJobStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusMessage")
    public String statusMessage;
    public ReplicationJob withStatusMessage(String statusMessage) {
        this.statusMessage = statusMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmServer")
    public VmServer vmServer;
    public ReplicationJob withVmServer(VmServer vmServer) {
        this.vmServer = vmServer;
        return this;
    }
    
}
