// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReleaseEventSeriesForAPIContractCategoryEnum string

const (
	ReleaseEventSeriesForAPIContractCategoryEnumUnspecified  ReleaseEventSeriesForAPIContractCategoryEnum = "Unspecified"
	ReleaseEventSeriesForAPIContractCategoryEnumAlbumRelease ReleaseEventSeriesForAPIContractCategoryEnum = "AlbumRelease"
	ReleaseEventSeriesForAPIContractCategoryEnumAnniversary  ReleaseEventSeriesForAPIContractCategoryEnum = "Anniversary"
	ReleaseEventSeriesForAPIContractCategoryEnumClub         ReleaseEventSeriesForAPIContractCategoryEnum = "Club"
	ReleaseEventSeriesForAPIContractCategoryEnumConcert      ReleaseEventSeriesForAPIContractCategoryEnum = "Concert"
	ReleaseEventSeriesForAPIContractCategoryEnumContest      ReleaseEventSeriesForAPIContractCategoryEnum = "Contest"
	ReleaseEventSeriesForAPIContractCategoryEnumConvention   ReleaseEventSeriesForAPIContractCategoryEnum = "Convention"
	ReleaseEventSeriesForAPIContractCategoryEnumOther        ReleaseEventSeriesForAPIContractCategoryEnum = "Other"
)

func (e *ReleaseEventSeriesForAPIContractCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unspecified":
		fallthrough
	case "AlbumRelease":
		fallthrough
	case "Anniversary":
		fallthrough
	case "Club":
		fallthrough
	case "Concert":
		fallthrough
	case "Contest":
		fallthrough
	case "Convention":
		fallthrough
	case "Other":
		*e = ReleaseEventSeriesForAPIContractCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesForAPIContractCategoryEnum: %s", s)
	}
}

type ReleaseEventSeriesForAPIContractStatusEnum string

const (
	ReleaseEventSeriesForAPIContractStatusEnumDraft    ReleaseEventSeriesForAPIContractStatusEnum = "Draft"
	ReleaseEventSeriesForAPIContractStatusEnumFinished ReleaseEventSeriesForAPIContractStatusEnum = "Finished"
	ReleaseEventSeriesForAPIContractStatusEnumApproved ReleaseEventSeriesForAPIContractStatusEnum = "Approved"
	ReleaseEventSeriesForAPIContractStatusEnumLocked   ReleaseEventSeriesForAPIContractStatusEnum = "Locked"
)

func (e *ReleaseEventSeriesForAPIContractStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Finished":
		fallthrough
	case "Approved":
		fallthrough
	case "Locked":
		*e = ReleaseEventSeriesForAPIContractStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesForAPIContractStatusEnum: %s", s)
	}
}

// ReleaseEventSeriesForAPIContract - OK
type ReleaseEventSeriesForAPIContract struct {
	AdditionalNames *string                                       `json:"additionalNames,omitempty"`
	Category        *ReleaseEventSeriesForAPIContractCategoryEnum `json:"category,omitempty"`
	Description     *string                                       `json:"description,omitempty"`
	Events          []ReleaseEventForAPIContract                  `json:"events,omitempty"`
	ID              *int                                          `json:"id,omitempty"`
	MainPicture     *EntryThumbForAPIContract                     `json:"mainPicture,omitempty"`
	Name            *string                                       `json:"name,omitempty"`
	Names           []LocalizedStringContract                     `json:"names,omitempty"`
	Status          *ReleaseEventSeriesForAPIContractStatusEnum   `json:"status,omitempty"`
	URLSlug         *string                                       `json:"urlSlug,omitempty"`
	Version         *int                                          `json:"version,omitempty"`
	WebLinks        []WebLinkForAPIContract                       `json:"webLinks,omitempty"`
}
