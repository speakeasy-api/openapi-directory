"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from typing import Optional


@dataclasses.dataclass
class RevokeSecurityGroupEgressResultUnknownIPPermissionsIPRanges:
    r"""Describes an IPv4 range."""
    
    cidr_ip: Optional[str] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class RevokeSecurityGroupEgressResultUnknownIPPermissionsIpv6Ranges:
    r"""[EC2-VPC only] Describes an IPv6 range."""
    
    cidr_ipv6: Optional[str] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class RevokeSecurityGroupEgressResultUnknownIPPermissionsPrefixListIds:
    r"""Describes a prefix list ID."""
    
    description: Optional[str] = dataclasses.field(default=None)  
    prefix_list_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class RevokeSecurityGroupEgressResultUnknownIPPermissionsUserIDGroupPairs:
    r"""<p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href=\\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html\\">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>"""
    
    description: Optional[str] = dataclasses.field(default=None)  
    group_id: Optional[str] = dataclasses.field(default=None)  
    group_name: Optional[str] = dataclasses.field(default=None)  
    peering_status: Optional[str] = dataclasses.field(default=None)  
    user_id: Optional[str] = dataclasses.field(default=None)  
    vpc_id: Optional[str] = dataclasses.field(default=None)  
    vpc_peering_connection_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class RevokeSecurityGroupEgressResultUnknownIPPermissions:
    r"""Describes a set of permissions for a security group rule."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    ip_protocol: Optional[str] = dataclasses.field(default=None)  
    ip_ranges: Optional[list[RevokeSecurityGroupEgressResultUnknownIPPermissionsIPRanges]] = dataclasses.field(default=None)  
    ipv6_ranges: Optional[list[RevokeSecurityGroupEgressResultUnknownIPPermissionsIpv6Ranges]] = dataclasses.field(default=None)  
    prefix_list_ids: Optional[list[RevokeSecurityGroupEgressResultUnknownIPPermissionsPrefixListIds]] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    user_id_group_pairs: Optional[list[RevokeSecurityGroupEgressResultUnknownIPPermissionsUserIDGroupPairs]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class RevokeSecurityGroupEgressResult:
    r"""Success"""
    
    return_: Optional[bool] = dataclasses.field(default=None)  
    unknown_ip_permissions: Optional[list[RevokeSecurityGroupEgressResultUnknownIPPermissions]] = dataclasses.field(default=None)  
    