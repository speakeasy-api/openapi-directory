/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PublicUploadShare - Upload Share information
 */
public class PublicUploadShare {
    /**
     * Creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public PublicUploadShare withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Creator name
     */
    @JsonProperty("creatorName")
    public String creatorName;
    public PublicUploadShare withCreatorName(String creatorName) {
        this.creatorName = creatorName;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Creator username
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creatorUsername")
    public String creatorUsername;
    public PublicUploadShare withCreatorUsername(String creatorUsername) {
        this.creatorUsername = creatorUsername;
        return this;
    }
    
    /**
     * Expiration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expireAt")
    public OffsetDateTime expireAt;
    public PublicUploadShare withExpireAt(OffsetDateTime expireAt) {
        this.expireAt = expireAt;
        return this;
    }
    
    /**
     * Encryption state
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEncrypted")
    public Boolean isEncrypted;
    public PublicUploadShare withIsEncrypted(Boolean isEncrypted) {
        this.isEncrypted = isEncrypted;
        return this;
    }
    
    /**
     * Is share protected by password
     */
    @JsonProperty("isProtected")
    public Boolean isProtected;
    public PublicUploadShare withIsProtected(Boolean isProtected) {
        this.isProtected = isProtected;
        return this;
    }
    
    /**
     * Share display name (alias name)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PublicUploadShare withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public PublicUploadShare withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Remaining size
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remainingSize")
    public Long remainingSize;
    public PublicUploadShare withRemainingSize(Long remainingSize) {
        this.remainingSize = remainingSize;
        return this;
    }
    
    /**
     * Remaining slots
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remainingSlots")
    public Integer remainingSlots;
    public PublicUploadShare withRemainingSlots(Integer remainingSlots) {
        this.remainingSlots = remainingSlots;
        return this;
    }
    
    /**
     * Allow display of already uploaded files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showUploadedFiles")
    public Boolean showUploadedFiles;
    public PublicUploadShare withShowUploadedFiles(Boolean showUploadedFiles) {
        this.showUploadedFiles = showUploadedFiles;
        return this;
    }
    
    /**
     * List of (public) uploaded files
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploadedFiles")
    public PublicUploadedFileData[] uploadedFiles;
    public PublicUploadShare withUploadedFiles(PublicUploadedFileData[] uploadedFiles) {
        this.uploadedFiles = uploadedFiles;
        return this;
    }
    
    /**
     * List of user public keys
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userUserPublicKeyList")
    public UserUserPublicKeyList userUserPublicKeyList;
    public PublicUploadShare withUserUserPublicKeyList(UserUserPublicKeyList userUserPublicKeyList) {
        this.userUserPublicKeyList = userUserPublicKeyList;
        return this;
    }
    
}
