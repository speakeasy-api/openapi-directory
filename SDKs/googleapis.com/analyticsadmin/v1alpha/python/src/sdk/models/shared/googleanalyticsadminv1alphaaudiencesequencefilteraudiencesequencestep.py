"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleanalyticsadminv1alphaaudiencefilterexpression as shared_googleanalyticsadminv1alphaaudiencefilterexpression
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum(str, Enum):
    r"""Required. Immutable. Specifies the scope for this step."""
    AUDIENCE_FILTER_SCOPE_UNSPECIFIED = 'AUDIENCE_FILTER_SCOPE_UNSPECIFIED'
    AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT = 'AUDIENCE_FILTER_SCOPE_WITHIN_SAME_EVENT'
    AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION = 'AUDIENCE_FILTER_SCOPE_WITHIN_SAME_SESSION'
    AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS = 'AUDIENCE_FILTER_SCOPE_ACROSS_ALL_SESSIONS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStep:
    r"""A condition that must occur in the specified step order for this user to match the sequence."""
    
    constraint_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraintDuration'), 'exclude': lambda f: f is None }})
    r"""Optional. When set, this step must be satisfied within the constraint_duration of the previous step (i.e., t[i] - t[i-1] <= constraint_duration). If not set, there is no duration requirement (the duration is effectively unlimited). It is ignored for the first step."""  
    filter_expression: Optional[shared_googleanalyticsadminv1alphaaudiencefilterexpression.GoogleAnalyticsAdminV1alphaAudienceFilterExpression] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterExpression'), 'exclude': lambda f: f is None }})
    r"""A logical expression of Audience dimension, metric, or event filters."""  
    immediately_follows: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('immediatelyFollows'), 'exclude': lambda f: f is None }})
    r"""Optional. If true, the event satisfying this step must be the very next event after the event satisfying the last step. If unset or false, this step indirectly follows the prior step; for example, there may be events between the prior step and this step. It is ignored for the first step."""  
    scope: Optional[GoogleAnalyticsAdminV1alphaAudienceSequenceFilterAudienceSequenceStepScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. Specifies the scope for this step."""  
    