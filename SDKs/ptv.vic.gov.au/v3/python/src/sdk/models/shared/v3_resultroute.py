"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import v3_routeservicestatus as shared_v3_routeservicestatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3ResultRoute:
    
    route_gtfs_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_gtfs_id'), 'exclude': lambda f: f is None }})
    r"""GTFS Identifer of the route"""  
    route_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_id'), 'exclude': lambda f: f is None }})
    r"""Route identifier"""  
    route_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_name'), 'exclude': lambda f: f is None }})
    r"""Name of route"""  
    route_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_number'), 'exclude': lambda f: f is None }})
    r"""Route number presented to public (nb. not route_id)"""  
    route_service_status: Optional[shared_v3_routeservicestatus.V3RouteServiceStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_service_status'), 'exclude': lambda f: f is None }})  
    route_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_type'), 'exclude': lambda f: f is None }})
    r"""Transport mode identifier"""  
    