// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaymentMethodSetupInfoShopperInteractionEnum - The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.
//
// Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**.
type PaymentMethodSetupInfoShopperInteractionEnum string

const (
	PaymentMethodSetupInfoShopperInteractionEnumECommerce PaymentMethodSetupInfoShopperInteractionEnum = "eCommerce"
	PaymentMethodSetupInfoShopperInteractionEnumPos       PaymentMethodSetupInfoShopperInteractionEnum = "pos"
	PaymentMethodSetupInfoShopperInteractionEnumMoto      PaymentMethodSetupInfoShopperInteractionEnum = "moto"
	PaymentMethodSetupInfoShopperInteractionEnumContAuth  PaymentMethodSetupInfoShopperInteractionEnum = "contAuth"
)

func (e PaymentMethodSetupInfoShopperInteractionEnum) ToPointer() *PaymentMethodSetupInfoShopperInteractionEnum {
	return &e
}

func (e *PaymentMethodSetupInfoShopperInteractionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "eCommerce":
		fallthrough
	case "pos":
		fallthrough
	case "moto":
		fallthrough
	case "contAuth":
		*e = PaymentMethodSetupInfoShopperInteractionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentMethodSetupInfoShopperInteractionEnum: %v", v)
	}
}

// PaymentMethodSetupInfoTypeEnum - Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
type PaymentMethodSetupInfoTypeEnum string

const (
	PaymentMethodSetupInfoTypeEnumAfterpaytouch   PaymentMethodSetupInfoTypeEnum = "afterpaytouch"
	PaymentMethodSetupInfoTypeEnumAlipay          PaymentMethodSetupInfoTypeEnum = "alipay"
	PaymentMethodSetupInfoTypeEnumAlipayHk        PaymentMethodSetupInfoTypeEnum = "alipay_hk"
	PaymentMethodSetupInfoTypeEnumAmex            PaymentMethodSetupInfoTypeEnum = "amex"
	PaymentMethodSetupInfoTypeEnumApplepay        PaymentMethodSetupInfoTypeEnum = "applepay"
	PaymentMethodSetupInfoTypeEnumBcmc            PaymentMethodSetupInfoTypeEnum = "bcmc"
	PaymentMethodSetupInfoTypeEnumBlik            PaymentMethodSetupInfoTypeEnum = "blik"
	PaymentMethodSetupInfoTypeEnumCartebancaire   PaymentMethodSetupInfoTypeEnum = "cartebancaire"
	PaymentMethodSetupInfoTypeEnumClearpay        PaymentMethodSetupInfoTypeEnum = "clearpay"
	PaymentMethodSetupInfoTypeEnumCup             PaymentMethodSetupInfoTypeEnum = "cup"
	PaymentMethodSetupInfoTypeEnumDiners          PaymentMethodSetupInfoTypeEnum = "diners"
	PaymentMethodSetupInfoTypeEnumDirectEbanking  PaymentMethodSetupInfoTypeEnum = "directEbanking"
	PaymentMethodSetupInfoTypeEnumDirectdebitGb   PaymentMethodSetupInfoTypeEnum = "directdebit_GB"
	PaymentMethodSetupInfoTypeEnumDiscover        PaymentMethodSetupInfoTypeEnum = "discover"
	PaymentMethodSetupInfoTypeEnumEbankingFi      PaymentMethodSetupInfoTypeEnum = "ebanking_FI"
	PaymentMethodSetupInfoTypeEnumEftposAustralia PaymentMethodSetupInfoTypeEnum = "eftpos_australia"
	PaymentMethodSetupInfoTypeEnumElo             PaymentMethodSetupInfoTypeEnum = "elo"
	PaymentMethodSetupInfoTypeEnumElocredit       PaymentMethodSetupInfoTypeEnum = "elocredit"
	PaymentMethodSetupInfoTypeEnumElodebit        PaymentMethodSetupInfoTypeEnum = "elodebit"
	PaymentMethodSetupInfoTypeEnumGirocard        PaymentMethodSetupInfoTypeEnum = "girocard"
	PaymentMethodSetupInfoTypeEnumGiropay         PaymentMethodSetupInfoTypeEnum = "giropay"
	PaymentMethodSetupInfoTypeEnumGooglepay       PaymentMethodSetupInfoTypeEnum = "googlepay"
	PaymentMethodSetupInfoTypeEnumHiper           PaymentMethodSetupInfoTypeEnum = "hiper"
	PaymentMethodSetupInfoTypeEnumHipercard       PaymentMethodSetupInfoTypeEnum = "hipercard"
	PaymentMethodSetupInfoTypeEnumIdeal           PaymentMethodSetupInfoTypeEnum = "ideal"
	PaymentMethodSetupInfoTypeEnumInteracCard     PaymentMethodSetupInfoTypeEnum = "interac_card"
	PaymentMethodSetupInfoTypeEnumJcb             PaymentMethodSetupInfoTypeEnum = "jcb"
	PaymentMethodSetupInfoTypeEnumKlarna          PaymentMethodSetupInfoTypeEnum = "klarna"
	PaymentMethodSetupInfoTypeEnumKlarnaAccount   PaymentMethodSetupInfoTypeEnum = "klarna_account"
	PaymentMethodSetupInfoTypeEnumKlarnaPaynow    PaymentMethodSetupInfoTypeEnum = "klarna_paynow"
	PaymentMethodSetupInfoTypeEnumMaestro         PaymentMethodSetupInfoTypeEnum = "maestro"
	PaymentMethodSetupInfoTypeEnumMbway           PaymentMethodSetupInfoTypeEnum = "mbway"
	PaymentMethodSetupInfoTypeEnumMc              PaymentMethodSetupInfoTypeEnum = "mc"
	PaymentMethodSetupInfoTypeEnumMcdebit         PaymentMethodSetupInfoTypeEnum = "mcdebit"
	PaymentMethodSetupInfoTypeEnumMealVoucherFr   PaymentMethodSetupInfoTypeEnum = "mealVoucher_FR"
	PaymentMethodSetupInfoTypeEnumMobilepay       PaymentMethodSetupInfoTypeEnum = "mobilepay"
	PaymentMethodSetupInfoTypeEnumMultibanco      PaymentMethodSetupInfoTypeEnum = "multibanco"
	PaymentMethodSetupInfoTypeEnumOnlineBankingPl PaymentMethodSetupInfoTypeEnum = "onlineBanking_PL"
	PaymentMethodSetupInfoTypeEnumPaypal          PaymentMethodSetupInfoTypeEnum = "paypal"
	PaymentMethodSetupInfoTypeEnumPayshop         PaymentMethodSetupInfoTypeEnum = "payshop"
	PaymentMethodSetupInfoTypeEnumSwish           PaymentMethodSetupInfoTypeEnum = "swish"
	PaymentMethodSetupInfoTypeEnumTrustly         PaymentMethodSetupInfoTypeEnum = "trustly"
	PaymentMethodSetupInfoTypeEnumVipps           PaymentMethodSetupInfoTypeEnum = "vipps"
	PaymentMethodSetupInfoTypeEnumVisa            PaymentMethodSetupInfoTypeEnum = "visa"
	PaymentMethodSetupInfoTypeEnumVisadebit       PaymentMethodSetupInfoTypeEnum = "visadebit"
	PaymentMethodSetupInfoTypeEnumVpay            PaymentMethodSetupInfoTypeEnum = "vpay"
	PaymentMethodSetupInfoTypeEnumWechatpay       PaymentMethodSetupInfoTypeEnum = "wechatpay"
	PaymentMethodSetupInfoTypeEnumWechatpayPos    PaymentMethodSetupInfoTypeEnum = "wechatpay_pos"
)

func (e PaymentMethodSetupInfoTypeEnum) ToPointer() *PaymentMethodSetupInfoTypeEnum {
	return &e
}

func (e *PaymentMethodSetupInfoTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "afterpaytouch":
		fallthrough
	case "alipay":
		fallthrough
	case "alipay_hk":
		fallthrough
	case "amex":
		fallthrough
	case "applepay":
		fallthrough
	case "bcmc":
		fallthrough
	case "blik":
		fallthrough
	case "cartebancaire":
		fallthrough
	case "clearpay":
		fallthrough
	case "cup":
		fallthrough
	case "diners":
		fallthrough
	case "directEbanking":
		fallthrough
	case "directdebit_GB":
		fallthrough
	case "discover":
		fallthrough
	case "ebanking_FI":
		fallthrough
	case "eftpos_australia":
		fallthrough
	case "elo":
		fallthrough
	case "elocredit":
		fallthrough
	case "elodebit":
		fallthrough
	case "girocard":
		fallthrough
	case "giropay":
		fallthrough
	case "googlepay":
		fallthrough
	case "hiper":
		fallthrough
	case "hipercard":
		fallthrough
	case "ideal":
		fallthrough
	case "interac_card":
		fallthrough
	case "jcb":
		fallthrough
	case "klarna":
		fallthrough
	case "klarna_account":
		fallthrough
	case "klarna_paynow":
		fallthrough
	case "maestro":
		fallthrough
	case "mbway":
		fallthrough
	case "mc":
		fallthrough
	case "mcdebit":
		fallthrough
	case "mealVoucher_FR":
		fallthrough
	case "mobilepay":
		fallthrough
	case "multibanco":
		fallthrough
	case "onlineBanking_PL":
		fallthrough
	case "paypal":
		fallthrough
	case "payshop":
		fallthrough
	case "swish":
		fallthrough
	case "trustly":
		fallthrough
	case "vipps":
		fallthrough
	case "visa":
		fallthrough
	case "visadebit":
		fallthrough
	case "vpay":
		fallthrough
	case "wechatpay":
		fallthrough
	case "wechatpay_pos":
		*e = PaymentMethodSetupInfoTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentMethodSetupInfoTypeEnum: %v", v)
	}
}

type PaymentMethodSetupInfo struct {
	ApplePay *ApplePayInfo `json:"applePay,omitempty"`
	Bcmc     *BcmcInfo     `json:"bcmc,omitempty"`
	// The unique identifier of the business line.
	BusinessLineID  *string              `json:"businessLineId,omitempty"`
	CartesBancaires *CartesBancairesInfo `json:"cartesBancaires,omitempty"`
	// The list of countries where a payment method is available. By default, all countries supported by the payment method.
	Countries []string `json:"countries,omitempty"`
	// The list of currencies that a payment method supports. By default, all currencies supported by the payment method.
	Currencies []string `json:"currencies,omitempty"`
	// The list of custom routing flags to route payment to the intended acquirer.
	CustomRoutingFlags []string           `json:"customRoutingFlags,omitempty"`
	GiroPay            *GiroPayInfo       `json:"giroPay,omitempty"`
	GooglePay          *GooglePayInfo     `json:"googlePay,omitempty"`
	Klarna             *KlarnaInfo        `json:"klarna,omitempty"`
	MealVoucherFR      *MealVoucherFRInfo `json:"mealVoucher_FR,omitempty"`
	Paypal             *PayPalInfo        `json:"paypal,omitempty"`
	// Your reference for the payment method. Supported characters a-z, A-Z, 0-9.
	Reference *string `json:"reference,omitempty"`
	// The sales channel. Required if the merchant account does not have a sales channel. When you provide this field, it overrides the default sales channel set on the merchant account.
	//
	// Possible values: **eCommerce**, **pos**, **contAuth**, and **moto**.
	ShopperInteraction *PaymentMethodSetupInfoShopperInteractionEnum `json:"shopperInteraction,omitempty"`
	Sofort             *SofortInfo                                   `json:"sofort,omitempty"`
	// The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any.
	StoreID *string    `json:"storeId,omitempty"`
	Swish   *SwishInfo `json:"swish,omitempty"`
	// Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api).
	Type  *PaymentMethodSetupInfoTypeEnum `json:"type,omitempty"`
	Vipps *VippsInfo                      `json:"vipps,omitempty"`
}
