"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import image as shared_image
from ..shared import localizedstring as shared_localizedstring
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FlightCarrier:
    
    airline_alliance_logo: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('airlineAllianceLogo'), 'exclude': lambda f: f is None }})
    r"""Wrapping type for Google hosted images. Next ID: 7"""  
    airline_logo: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('airlineLogo'), 'exclude': lambda f: f is None }})
    r"""Wrapping type for Google hosted images. Next ID: 7"""  
    airline_name: Optional[shared_localizedstring.LocalizedString] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('airlineName'), 'exclude': lambda f: f is None }})  
    carrier_iata_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrierIataCode'), 'exclude': lambda f: f is None }})
    r"""Two character IATA airline code of the marketing carrier (as opposed to operating carrier). Exactly one of this or `carrierIcaoCode` needs to be provided for `carrier` and `operatingCarrier`. eg: \\"LX\\" for Swiss Air"""  
    carrier_icao_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrierIcaoCode'), 'exclude': lambda f: f is None }})
    r"""Three character ICAO airline code of the marketing carrier (as opposed to operating carrier). Exactly one of this or `carrierIataCode` needs to be provided for `carrier` and `operatingCarrier`. eg: \\"EZY\\" for Easy Jet"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Identifies what kind of resource this is. Value: the fixed string `\\"walletobjects#flightCarrier\\"`."""  
    