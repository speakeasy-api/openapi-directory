"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import nadate as shared_nadate
from ..shared import nauseradministrative as shared_nauseradministrative
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NAUser:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_id'), 'exclude': lambda f: f is None }})  
    administrative: Optional[shared_nauseradministrative.NAUserAdministrative] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('administrative'), 'exclude': lambda f: f is None }})  
    date_creation: Optional[shared_nadate.NADate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_creation'), 'exclude': lambda f: f is None }})  
    devices: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('devices'), 'exclude': lambda f: f is None }})
    r"""An array of string containing the ids of the devices owned by the user"""  
    friend_devices: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friend_devices'), 'exclude': lambda f: f is None }})
    r"""An array of string containing the ids of the devices on which the user has a \\"guest\\" access"""  
    mail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mail'), 'exclude': lambda f: f is None }})  
    timeline_not_read: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeline_not_read'), 'exclude': lambda f: f is None }})  
    timeline_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeline_size'), 'exclude': lambda f: f is None }})  
    