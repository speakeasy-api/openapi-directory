// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDirectoryRequestBody struct {
	// The name of the <a>Directory</a>. Should be unique per account, per region.
	Name string `json:"Name"`
}

type CreateDirectoryRequest struct {
	RequestBody       CreateDirectoryRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The Amazon Resource Name (ARN) of the published schema that will be copied into the data <a>Directory</a>. For more information, see <a>arns</a>.
	XAmzDataPartition string `header:"style=simple,explode=false,name=x-amz-data-partition"`
}

type CreateDirectoryResponse struct {
	// AccessDeniedException
	AccessDeniedException *shared.AccessDeniedException
	ContentType           string
	// Success
	CreateDirectoryResponse *shared.CreateDirectoryResponse
	// DirectoryAlreadyExistsException
	DirectoryAlreadyExistsException *shared.DirectoryAlreadyExistsException
	// InternalServiceException
	InternalServiceException *shared.InternalServiceException
	// InvalidArnException
	InvalidArnException *shared.InvalidArnException
	// LimitExceededException
	LimitExceededException *shared.LimitExceededException
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException *shared.ResourceNotFoundException
	// RetryableConflictException
	RetryableConflictException *shared.RetryableConflictException
	// ValidationException
	ValidationException *shared.ValidationException
}
