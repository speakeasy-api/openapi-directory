<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OAuth2Permission - Represents an OAuth 2.0 delegated permission scope. The specified OAuth 2.0 delegated permission scopes may be requested by client applications (through the requiredResourceAccess collection on the Application object) when calling a resource application. The oauth2Permissions property of the ServicePrincipal entity and of the Application entity is a collection of OAuth2Permission.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OAuth2Permission
{
    /**
     * Permission help text that appears in the admin consent and app assignment experiences.
     * 
     * @var ?string $adminConsentDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('adminConsentDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $adminConsentDescription = null;
    
    /**
     * Display name for the permission that appears in the admin consent and app assignment experiences.
     * 
     * @var ?string $adminConsentDisplayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('adminConsentDisplayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $adminConsentDisplayName = null;
    
    /**
     * Unique scope permission identifier inside the oauth2Permissions collection.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * When creating or updating a permission, this property must be set to true (which is the default). To delete a permission, this property must first be set to false. At that point, in a subsequent call, the permission may be removed. 
     * 
     * @var ?bool $isEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('isEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isEnabled = null;
    
    /**
     * Specifies whether this scope permission can be consented to by an end user, or whether it is a tenant-wide permission that must be consented to by a Company Administrator. Possible values are "User" or "Admin".
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Permission help text that appears in the end user consent experience.
     * 
     * @var ?string $userConsentDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('userConsentDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userConsentDescription = null;
    
    /**
     * Display name for the permission that appears in the end user consent experience.
     * 
     * @var ?string $userConsentDisplayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('userConsentDisplayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userConsentDisplayName = null;
    
    /**
     * The value of the scope claim that the resource application should expect in the OAuth 2.0 access token.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->adminConsentDescription = null;
		$this->adminConsentDisplayName = null;
		$this->id = null;
		$this->isEnabled = null;
		$this->type = null;
		$this->userConsentDescription = null;
		$this->userConsentDisplayName = null;
		$this->value = null;
	}
}
