// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GroupsGetStatisticsListGroupByEnum - The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
type GroupsGetStatisticsListGroupByEnum string

const (
	GroupsGetStatisticsListGroupByEnumWeek  GroupsGetStatisticsListGroupByEnum = "week"
	GroupsGetStatisticsListGroupByEnumMonth GroupsGetStatisticsListGroupByEnum = "month"
)

func (e *GroupsGetStatisticsListGroupByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "week":
		fallthrough
	case "month":
		*e = GroupsGetStatisticsListGroupByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsGetStatisticsListGroupByEnum: %s", s)
	}
}

// GroupsGetStatisticsListTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type GroupsGetStatisticsListTimeFrameEnum string

const (
	GroupsGetStatisticsListTimeFrameEnumToday         GroupsGetStatisticsListTimeFrameEnum = "today"
	GroupsGetStatisticsListTimeFrameEnumYesterday     GroupsGetStatisticsListTimeFrameEnum = "yesterday"
	GroupsGetStatisticsListTimeFrameEnumLast7         GroupsGetStatisticsListTimeFrameEnum = "last7"
	GroupsGetStatisticsListTimeFrameEnumLast30        GroupsGetStatisticsListTimeFrameEnum = "last30"
	GroupsGetStatisticsListTimeFrameEnumLastmonth     GroupsGetStatisticsListTimeFrameEnum = "lastmonth"
	GroupsGetStatisticsListTimeFrameEnumCurrentmonth  GroupsGetStatisticsListTimeFrameEnum = "currentmonth"
	GroupsGetStatisticsListTimeFrameEnumPreviousmonth GroupsGetStatisticsListTimeFrameEnum = "previousmonth"
	GroupsGetStatisticsListTimeFrameEnumLast90        GroupsGetStatisticsListTimeFrameEnum = "last90"
	GroupsGetStatisticsListTimeFrameEnumLast120       GroupsGetStatisticsListTimeFrameEnum = "last120"
	GroupsGetStatisticsListTimeFrameEnumLast180       GroupsGetStatisticsListTimeFrameEnum = "last180"
	GroupsGetStatisticsListTimeFrameEnumLast12months  GroupsGetStatisticsListTimeFrameEnum = "last12months"
	GroupsGetStatisticsListTimeFrameEnumLastyear      GroupsGetStatisticsListTimeFrameEnum = "lastyear"
	GroupsGetStatisticsListTimeFrameEnumCurrentyear   GroupsGetStatisticsListTimeFrameEnum = "currentyear"
	GroupsGetStatisticsListTimeFrameEnumBeginning     GroupsGetStatisticsListTimeFrameEnum = "beginning"
	GroupsGetStatisticsListTimeFrameEnumCustom        GroupsGetStatisticsListTimeFrameEnum = "custom"
)

func (e *GroupsGetStatisticsListTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = GroupsGetStatisticsListTimeFrameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupsGetStatisticsListTimeFrameEnum: %s", s)
	}
}

type GroupsGetStatisticsListRequest struct {
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
	GroupBy *GroupsGetStatisticsListGroupByEnum `queryParam:"style=form,explode=true,name=groupBy"`
	// Id of the group
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame GroupsGetStatisticsListTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type GroupsGetStatisticsListResponse struct {
	APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult *shared.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
