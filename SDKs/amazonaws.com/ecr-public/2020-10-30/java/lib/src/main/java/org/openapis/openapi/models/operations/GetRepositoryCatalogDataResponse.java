/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class GetRepositoryCatalogDataResponse {
    
    public String contentType;
    public GetRepositoryCatalogDataResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetRepositoryCatalogDataResponse getRepositoryCatalogDataResponse;
    public GetRepositoryCatalogDataResponse withGetRepositoryCatalogDataResponse(org.openapis.openapi.models.shared.GetRepositoryCatalogDataResponse getRepositoryCatalogDataResponse) {
        this.getRepositoryCatalogDataResponse = getRepositoryCatalogDataResponse;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;
    public GetRepositoryCatalogDataResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * RepositoryCatalogDataNotFoundException
     */
    
    public Object repositoryCatalogDataNotFoundException;
    public GetRepositoryCatalogDataResponse withRepositoryCatalogDataNotFoundException(Object repositoryCatalogDataNotFoundException) {
        this.repositoryCatalogDataNotFoundException = repositoryCatalogDataNotFoundException;
        return this;
    }
    
    /**
     * RepositoryNotFoundException
     */
    
    public Object repositoryNotFoundException;
    public GetRepositoryCatalogDataResponse withRepositoryNotFoundException(Object repositoryNotFoundException) {
        this.repositoryNotFoundException = repositoryNotFoundException;
        return this;
    }
    
    /**
     * ServerException
     */
    
    public Object serverException;
    public GetRepositoryCatalogDataResponse withServerException(Object serverException) {
        this.serverException = serverException;
        return this;
    }
    
    
    public Integer statusCode;
    public GetRepositoryCatalogDataResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public GetRepositoryCatalogDataResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedCommandException
     */
    
    public Object unsupportedCommandException;
    public GetRepositoryCatalogDataResponse withUnsupportedCommandException(Object unsupportedCommandException) {
        this.unsupportedCommandException = unsupportedCommandException;
        return this;
    }
    
}
