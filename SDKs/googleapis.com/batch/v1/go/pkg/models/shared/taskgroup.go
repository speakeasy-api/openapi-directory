// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// TaskGroup - A TaskGroup contains one or multiple Tasks that share the same Runnable but with different runtime parameters.
type TaskGroup struct {
	// Output only. TaskGroup name. The system generates this field based on parent Job name. For example: "projects/123456/locations/us-west1/jobs/job01/taskGroups/group01".
	Name *string `json:"name,omitempty"`
	// Max number of tasks that can run in parallel. Default to min(task_count, 1000).
	Parallelism *string `json:"parallelism,omitempty"`
	// When true, Batch will configure SSH to allow passwordless login between VMs running the Batch tasks in the same TaskGroup.
	PermissiveSSH *bool `json:"permissiveSsh,omitempty"`
	// When true, Batch will populate a file with a list of all VMs assigned to the TaskGroup and set the BATCH_HOSTS_FILE environment variable to the path of that file. Defaults to false.
	RequireHostsFile *bool `json:"requireHostsFile,omitempty"`
	// Number of Tasks in the TaskGroup. default is 1
	TaskCount *string `json:"taskCount,omitempty"`
	// Max number of tasks that can be run on a VM at the same time. If not specified, the system will decide a value based on available compute resources on a VM and task requirements.
	TaskCountPerNode *string `json:"taskCountPerNode,omitempty"`
	// An array of environment variable mappings, which are passed to Tasks with matching indices. If task_environments is used then task_count should not be specified in the request (and will be ignored). Task count will be the length of task_environments. Tasks get a BATCH_TASK_INDEX and BATCH_TASK_COUNT environment variable, in addition to any environment variables set in task_environments, specifying the number of Tasks in the Task's parent TaskGroup, and the specific Task's index in the TaskGroup (0 through BATCH_TASK_COUNT - 1). task_environments supports up to 200 entries.
	TaskEnvironments []Environment `json:"taskEnvironments,omitempty"`
	// Spec of a task
	TaskSpec *TaskSpec `json:"taskSpec,omitempty"`
}

// TaskGroupInput - A TaskGroup contains one or multiple Tasks that share the same Runnable but with different runtime parameters.
type TaskGroupInput struct {
	// Max number of tasks that can run in parallel. Default to min(task_count, 1000).
	Parallelism *string `json:"parallelism,omitempty"`
	// When true, Batch will configure SSH to allow passwordless login between VMs running the Batch tasks in the same TaskGroup.
	PermissiveSSH *bool `json:"permissiveSsh,omitempty"`
	// When true, Batch will populate a file with a list of all VMs assigned to the TaskGroup and set the BATCH_HOSTS_FILE environment variable to the path of that file. Defaults to false.
	RequireHostsFile *bool `json:"requireHostsFile,omitempty"`
	// Number of Tasks in the TaskGroup. default is 1
	TaskCount *string `json:"taskCount,omitempty"`
	// Max number of tasks that can be run on a VM at the same time. If not specified, the system will decide a value based on available compute resources on a VM and task requirements.
	TaskCountPerNode *string `json:"taskCountPerNode,omitempty"`
	// An array of environment variable mappings, which are passed to Tasks with matching indices. If task_environments is used then task_count should not be specified in the request (and will be ignored). Task count will be the length of task_environments. Tasks get a BATCH_TASK_INDEX and BATCH_TASK_COUNT environment variable, in addition to any environment variables set in task_environments, specifying the number of Tasks in the Task's parent TaskGroup, and the specific Task's index in the TaskGroup (0 through BATCH_TASK_COUNT - 1). task_environments supports up to 200 entries.
	TaskEnvironments []Environment `json:"taskEnvironments,omitempty"`
	// Spec of a task
	TaskSpec *TaskSpec `json:"taskSpec,omitempty"`
}
