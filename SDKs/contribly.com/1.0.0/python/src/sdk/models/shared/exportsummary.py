"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExportSummary:
    r"""A summary of the number of contributions, media files and approximate total size of media files."""
    
    contributions: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contributions') }})
    r"""The number of contributions selected for export."""  
    media: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('media') }})
    r"""The number of media files included in this export."""  
    total_media_size: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalMediaSize') }})
    r"""The expected total size of the media files to be exported."""  
    estimated_size: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('estimatedSize'), 'exclude': lambda f: f is None }})
    r"""Human readable estimate of the export size. ie. '10MB'."""  
    