/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PathRule - A path-matching rule for a URL. If matched, will use the specified BackendService to handle the traffic arriving at this URL.
 */
public class PathRule {
    /**
     * Specifies the custom error response policy that must be applied when the backend service or backend bucket responds with an error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customErrorResponsePolicy")
    public CustomErrorResponsePolicy customErrorResponsePolicy;

    public PathRule withCustomErrorResponsePolicy(CustomErrorResponsePolicy customErrorResponsePolicy) {
        this.customErrorResponsePolicy = customErrorResponsePolicy;
        return this;
    }
    
    /**
     * The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paths")
    public String[] paths;

    public PathRule withPaths(String[] paths) {
        this.paths = paths;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routeAction")
    public HttpRouteAction routeAction;

    public PathRule withRouteAction(HttpRouteAction routeAction) {
        this.routeAction = routeAction;
        return this;
    }
    
    /**
     * The full or partial URL of the backend service resource to which traffic is directed if this rule is matched. If routeAction is also specified, advanced routing actions, such as URL rewrites, take effect before sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;

    public PathRule withService(String service) {
        this.service = service;
        return this;
    }
    
    /**
     * Specifies settings for an HTTP redirect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlRedirect")
    public HttpRedirectAction urlRedirect;

    public PathRule withUrlRedirect(HttpRedirectAction urlRedirect) {
        this.urlRedirect = urlRedirect;
        return this;
    }
    
    public PathRule(){}
}
