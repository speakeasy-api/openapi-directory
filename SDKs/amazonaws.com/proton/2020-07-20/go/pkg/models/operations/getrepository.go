// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetRepositoryXAmzTargetEnum
type GetRepositoryXAmzTargetEnum string

const (
	GetRepositoryXAmzTargetEnumAwsProton20200720GetRepository GetRepositoryXAmzTargetEnum = "AwsProton20200720.GetRepository"
)

func (e GetRepositoryXAmzTargetEnum) ToPointer() *GetRepositoryXAmzTargetEnum {
	return &e
}

func (e *GetRepositoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AwsProton20200720.GetRepository":
		*e = GetRepositoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRepositoryXAmzTargetEnum: %v", v)
	}
}

type GetRepositoryRequest struct {
	GetRepositoryInput shared.GetRepositoryInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         GetRepositoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetRepositoryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetRepositoryOutput *shared.GetRepositoryOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
