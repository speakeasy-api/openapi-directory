"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import sandboxcardinfo as shared_sandboxcardinfo
from ..shared import sandboxparty as shared_sandboxparty
from ..shared import sandboxstatement as shared_sandboxstatement
from ..shared import sandboxtransaction as shared_sandboxtransaction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SandboxCard:
    r"""Sandbox card"""
    
    info: Optional[shared_sandboxcardinfo.SandboxCardInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('info'), 'exclude': lambda f: f is None }})
    r"""Sandbox card information"""  
    party: Optional[shared_sandboxparty.SandboxParty] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('party'), 'exclude': lambda f: f is None }})
    r"""Connected party information"""  
    statements: Optional[list[shared_sandboxstatement.SandboxStatement]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statements'), 'exclude': lambda f: f is None }})
    r"""Card statements"""  
    transactions: Optional[list[shared_sandboxtransaction.SandboxTransaction]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactions'), 'exclude': lambda f: f is None }})
    r"""Card transactions"""  
    