// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum - Client tracking method of a network
type UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum string

const (
	UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnumIPAddress              UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum = "IP address"
	UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnumMacAddress             UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum = "MAC address"
	UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnumUniqueClientIdentifier UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum = "Unique client identifier"
)

func (e *UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IP address":
		fallthrough
	case "MAC address":
		fallthrough
	case "Unique client identifier":
		*e = UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum: %s", s)
	}
}

// UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum - Deployment mode of a network
type UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum string

const (
	UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnumPassthrough UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum = "passthrough"
	UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnumRouted      UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum = "routed"
)

func (e *UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "passthrough":
		fallthrough
	case "routed":
		*e = UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum: %s", s)
	}
}

// UpdateNetworkApplianceSettingsRequestBodyDynamicDNS - Dynamic DNS settings for a network
type UpdateNetworkApplianceSettingsRequestBodyDynamicDNS struct {
	// Dynamic DNS enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Dynamic DNS url prefix. DDNS must be enabled to update
	Prefix *string `json:"prefix,omitempty"`
}

type UpdateNetworkApplianceSettingsRequestBody struct {
	// Client tracking method of a network
	ClientTrackingMethod *UpdateNetworkApplianceSettingsRequestBodyClientTrackingMethodEnum `json:"clientTrackingMethod,omitempty"`
	// Deployment mode of a network
	DeploymentMode *UpdateNetworkApplianceSettingsRequestBodyDeploymentModeEnum `json:"deploymentMode,omitempty"`
	// Dynamic DNS settings for a network
	DynamicDNS *UpdateNetworkApplianceSettingsRequestBodyDynamicDNS `json:"dynamicDns,omitempty"`
}

type UpdateNetworkApplianceSettingsRequest struct {
	RequestBody *UpdateNetworkApplianceSettingsRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                     `pathParam:"style=simple,explode=false,name=networkId"`
}

// UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum - Client tracking method of a network
type UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum string

const (
	UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnumIPAddress              UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum = "IP address"
	UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnumMacAddress             UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum = "MAC address"
	UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnumUniqueClientIdentifier UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum = "Unique client identifier"
)

func (e *UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IP address":
		fallthrough
	case "MAC address":
		fallthrough
	case "Unique client identifier":
		*e = UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum: %s", s)
	}
}

// UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum - Deployment mode of a network
type UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum string

const (
	UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnumPassthrough UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum = "passthrough"
	UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnumRouted      UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum = "routed"
)

func (e *UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "passthrough":
		fallthrough
	case "routed":
		*e = UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum: %s", s)
	}
}

// UpdateNetworkApplianceSettings200ApplicationJSONDynamicDNS - Dynamic DNS settings for a network
type UpdateNetworkApplianceSettings200ApplicationJSONDynamicDNS struct {
	// Dynamic DNS enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Dynamic DNS url prefix. DDNS must be enabled to update
	Prefix *string `json:"prefix,omitempty"`
	// Dynamic DNS url. DDNS must be enabled to update
	URL *string `json:"url,omitempty"`
}

// UpdateNetworkApplianceSettings200ApplicationJSON - Successful operation
type UpdateNetworkApplianceSettings200ApplicationJSON struct {
	// Client tracking method of a network
	ClientTrackingMethod *UpdateNetworkApplianceSettings200ApplicationJSONClientTrackingMethodEnum `json:"clientTrackingMethod,omitempty"`
	// Deployment mode of a network
	DeploymentMode *UpdateNetworkApplianceSettings200ApplicationJSONDeploymentModeEnum `json:"deploymentMode,omitempty"`
	// Dynamic DNS settings for a network
	DynamicDNS *UpdateNetworkApplianceSettings200ApplicationJSONDynamicDNS `json:"dynamicDns,omitempty"`
}

type UpdateNetworkApplianceSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkApplianceSettings200ApplicationJSONObject *UpdateNetworkApplianceSettings200ApplicationJSON
}
