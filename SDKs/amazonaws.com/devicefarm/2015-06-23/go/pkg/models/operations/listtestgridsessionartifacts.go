// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListTestGridSessionArtifactsXAmzTargetEnum
type ListTestGridSessionArtifactsXAmzTargetEnum string

const (
	ListTestGridSessionArtifactsXAmzTargetEnumDeviceFarm20150623ListTestGridSessionArtifacts ListTestGridSessionArtifactsXAmzTargetEnum = "DeviceFarm_20150623.ListTestGridSessionArtifacts"
)

func (e *ListTestGridSessionArtifactsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeviceFarm_20150623.ListTestGridSessionArtifacts":
		*e = ListTestGridSessionArtifactsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListTestGridSessionArtifactsXAmzTargetEnum: %s", s)
	}
}

type ListTestGridSessionArtifactsRequest struct {
	ListTestGridSessionArtifactsRequest shared.ListTestGridSessionArtifactsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          ListTestGridSessionArtifactsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResult *string `queryParam:"style=form,explode=true,name=maxResult"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListTestGridSessionArtifactsResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// InternalServiceException
	InternalServiceException interface{}
	// Success
	ListTestGridSessionArtifactsResult *shared.ListTestGridSessionArtifactsResult
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
}
