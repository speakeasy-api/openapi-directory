"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class HistogramResultSearchTypeEnum(str, Enum):
    r"""The Histogram search filters."""
    SEARCH_TYPE_UNSPECIFIED = 'SEARCH_TYPE_UNSPECIFIED'
    COMPANY_ID = 'COMPANY_ID'
    EMPLOYMENT_TYPE = 'EMPLOYMENT_TYPE'
    COMPANY_SIZE = 'COMPANY_SIZE'
    DATE_PUBLISHED = 'DATE_PUBLISHED'
    EDUCATION_LEVEL = 'EDUCATION_LEVEL'
    EXPERIENCE_LEVEL = 'EXPERIENCE_LEVEL'
    ADMIN_1 = 'ADMIN_1'
    COUNTRY = 'COUNTRY'
    CITY = 'CITY'
    LOCALE = 'LOCALE'
    LANGUAGE = 'LANGUAGE'
    CATEGORY = 'CATEGORY'
    CITY_COORDINATE = 'CITY_COORDINATE'
    ADMIN_1_COUNTRY = 'ADMIN_1_COUNTRY'
    COMPANY_DISPLAY_NAME = 'COMPANY_DISPLAY_NAME'
    BASE_COMPENSATION_UNIT = 'BASE_COMPENSATION_UNIT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HistogramResult:
    r"""Output only. Result of a histogram call. The response contains the histogram map for the search type specified by HistogramResult.field. The response is a map of each filter value to the corresponding count of jobs for that filter."""
    
    search_type: Optional[HistogramResultSearchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchType'), 'exclude': lambda f: f is None }})
    r"""The Histogram search filters."""  
    values: Optional[dict[str, int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""A map from the values of field to the number of jobs with that value in this search result. Key: search type (filter names, such as the companyName). Values: the count of jobs that match the filter for this search."""  
    