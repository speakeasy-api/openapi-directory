/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BundleDataProp } from "./bundledataprop";
import { Expose, Type } from "class-transformer";

export class BundleData extends SpeakeasyBase {
  /**
   * Bundle category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  /**
   * Is bundle a fragment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fragment" })
  fragment?: boolean;

  /**
   * Bundle ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Bundle name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: BundleDataProp })
  @Expose({ name: "props" })
  @Type(() => BundleDataProp)
  props?: BundleDataProp[];

  /**
   * Bundle state value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Numeric raw bundle state value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateRaw" })
  stateRaw?: number;

  /**
   * Bundle symbolic name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "symbolicName" })
  symbolicName?: string;

  /**
   * Bundle version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}
