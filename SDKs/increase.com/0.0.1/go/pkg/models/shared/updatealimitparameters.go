// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateALimitParametersStatusEnum - The status to update the limit with.
type UpdateALimitParametersStatusEnum string

const (
	UpdateALimitParametersStatusEnumInactive UpdateALimitParametersStatusEnum = "inactive"
	UpdateALimitParametersStatusEnumActive   UpdateALimitParametersStatusEnum = "active"
)

func (e UpdateALimitParametersStatusEnum) ToPointer() *UpdateALimitParametersStatusEnum {
	return &e
}

func (e *UpdateALimitParametersStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inactive":
		fallthrough
	case "active":
		*e = UpdateALimitParametersStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateALimitParametersStatusEnum: %v", v)
	}
}

type UpdateALimitParameters struct {
	// The status to update the limit with.
	Status UpdateALimitParametersStatusEnum `json:"status"`
}
