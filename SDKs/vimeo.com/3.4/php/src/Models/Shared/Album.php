<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Album - The album was created.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Album
{
    /**
     * Whether an album should allow continuous play.
     * 
     * @var bool $allowContinuousPlay
     */
	#[\JMS\Serializer\Annotation\SerializedName('allow_continuous_play')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $allowContinuousPlay;
    
    /**
     * Whether an album should allow downloads.
     * 
     * @var bool $allowDownloads
     */
	#[\JMS\Serializer\Annotation\SerializedName('allow_downloads')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $allowDownloads;
    
    /**
     * Whether an album should allow sharing.
     * 
     * @var bool $allowShare
     */
	#[\JMS\Serializer\Annotation\SerializedName('allow_share')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $allowShare;
    
    /**
     * Hexadecimal color code for the decorative color. For example, album videos use this color for player buttons.
     * 
     * @var string $brandColor
     */
	#[\JMS\Serializer\Annotation\SerializedName('brand_color')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $brandColor;
    
    /**
     * The time in ISO 8601 format that the album was created.
     * 
     * @var string $createdTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $createdTime;
    
    /**
     * The custom logo for this album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumPicture $customLogo
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_logo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AlbumPicture')]
    public AlbumPicture $customLogo;
    
    /**
     * A brief description of the album's content.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The custom domain a user has selected for their album.
     * 
     * @var string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $domain;
    
    /**
     * The total duration in seconds of all the videos in the album.
     * 
     * @var float $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $duration;
    
    /**
     * Embed data for the album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumEmbed $embed
     */
	#[\JMS\Serializer\Annotation\SerializedName('embed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AlbumEmbed')]
    public AlbumEmbed $embed;
    
    /**
     * Whether to show the album's custom brand color in the player of the album's embedded playlist.
     * 
     * @var bool $embedBrandColor
     */
	#[\JMS\Serializer\Annotation\SerializedName('embed_brand_color')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $embedBrandColor;
    
    /**
     * Whether to show the album's custom logo in the player of the album's embedded playlist.
     * 
     * @var bool $embedCustomLogo
     */
	#[\JMS\Serializer\Annotation\SerializedName('embed_custom_logo')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $embedCustomLogo;
    
    /**
     * Whether to hide the Vimeo navigation when viewing the album.
     * 
     * @var bool $hideNav
     */
	#[\JMS\Serializer\Annotation\SerializedName('hide_nav')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hideNav;
    
    /**
     * Whether to hide the Vimeo logo in the player of the album's embedded playlist.
     * 
     * @var bool $hideVimeoLogo
     */
	#[\JMS\Serializer\Annotation\SerializedName('hide_vimeo_logo')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hideVimeoLogo;
    
    /**
     * The album's layout preference
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumLayoutEnum $layout
     */
	#[\JMS\Serializer\Annotation\SerializedName('layout')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AlbumLayoutEnum>')]
    public AlbumLayoutEnum $layout;
    
    /**
     * The URL to access the album.
     * 
     * @var string $link
     */
	#[\JMS\Serializer\Annotation\SerializedName('link')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $link;
    
    /**
     * Metadata about the album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AlbumMetadata')]
    public AlbumMetadata $metadata;
    
    /**
     * The time in ISO 8601 format when the album was last modified.
     * 
     * @var string $modifiedTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('modified_time')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $modifiedTime;
    
    /**
     * The album's display name.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The active image for the album; defaults to the thumbnail of the last video added to the album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Picture $pictures
     */
	#[\JMS\Serializer\Annotation\SerializedName('pictures')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Picture')]
    public Picture $pictures;
    
    /**
     * The privacy settings of the album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumPrivacy $privacy
     */
	#[\JMS\Serializer\Annotation\SerializedName('privacy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AlbumPrivacy')]
    public AlbumPrivacy $privacy;
    
    /**
     * The album resource key.
     * 
     * @var string $resourceKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resourceKey;
    
    /**
     * Whether album videos should use the review mode URL.
     * 
     * @var bool $reviewMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('review_mode')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $reviewMode;
    
    /**
     * Sort type of the album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumSortEnum $sort
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AlbumSortEnum>')]
    public AlbumSortEnum $sort;
    
    /**
     * The album's color theme preference
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AlbumThemeEnum $theme
     */
	#[\JMS\Serializer\Annotation\SerializedName('theme')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AlbumThemeEnum>')]
    public AlbumThemeEnum $theme;
    
    /**
     * The album's URI.
     * 
     * @var string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uri;
    
    /**
     * The custom Vimeo URL a user has selected for their album.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Whether the user has opted in to use a custom domain for their album.
     * 
     * @var bool $useCustomDomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('use_custom_domain')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $useCustomDomain;
    
    /**
     * The owner of the album.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\User $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\User')]
    public User $user;
    
    /**
     * Whether an album should show the brand color in the web layout.
     * 
     * @var bool $webBrandColor
     */
	#[\JMS\Serializer\Annotation\SerializedName('web_brand_color')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $webBrandColor;
    
    /**
     * Whether an album's custom logo should be shown in the web layout.
     * 
     * @var bool $webCustomLogo
     */
	#[\JMS\Serializer\Annotation\SerializedName('web_custom_logo')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $webCustomLogo;
    
	public function __construct()
	{
		$this->allowContinuousPlay = false;
		$this->allowDownloads = false;
		$this->allowShare = false;
		$this->brandColor = "";
		$this->createdTime = "";
		$this->customLogo = new \OpenAPI\OpenAPI\Models\Shared\AlbumPicture();
		$this->description = "";
		$this->domain = "";
		$this->duration = 0;
		$this->embed = new \OpenAPI\OpenAPI\Models\Shared\AlbumEmbed();
		$this->embedBrandColor = false;
		$this->embedCustomLogo = false;
		$this->hideNav = false;
		$this->hideVimeoLogo = false;
		$this->layout = \OpenAPI\OpenAPI\Models\Shared\AlbumLayoutEnum::GRID;
		$this->link = "";
		$this->metadata = new \OpenAPI\OpenAPI\Models\Shared\AlbumMetadata();
		$this->modifiedTime = "";
		$this->name = "";
		$this->pictures = new \OpenAPI\OpenAPI\Models\Shared\Picture();
		$this->privacy = new \OpenAPI\OpenAPI\Models\Shared\AlbumPrivacy();
		$this->resourceKey = "";
		$this->reviewMode = false;
		$this->sort = \OpenAPI\OpenAPI\Models\Shared\AlbumSortEnum::ADDED_FIRST;
		$this->theme = \OpenAPI\OpenAPI\Models\Shared\AlbumThemeEnum::DARK;
		$this->uri = "";
		$this->url = "";
		$this->useCustomDomain = false;
		$this->user = new \OpenAPI\OpenAPI\Models\Shared\User();
		$this->webBrandColor = false;
		$this->webCustomLogo = false;
	}
}
