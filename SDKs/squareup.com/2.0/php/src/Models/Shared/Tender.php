<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Tender - Represents a tender (i.e., a method of payment) used in a Square transaction.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Tender
{
    /**
     * Additional recipients (other than the merchant) receiving a portion of this tender.
     * 
     * For example, fees assessed on the purchase by a third party integration.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AdditionalRecipient> $additionalRecipients
     */
	#[\JMS\Serializer\Annotation\SerializedName('additional_recipients')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AdditionalRecipient>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalRecipients = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $amountMoney = null;
    
    /**
     * Represents additional details of a tender with `type` `CARD` or `SQUARE_GIFT_CARD`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TenderCardDetails $cardDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_details')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TenderCardDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TenderCardDetails $cardDetails = null;
    
    /**
     * Represents the details of a tender with `type` `CASH`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TenderCashDetails $cashDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('cash_details')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TenderCashDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TenderCashDetails $cashDetails = null;
    
    /**
     * The timestamp for when the tender was created, in RFC 3339 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * If the tender is associated with a customer or represents a customer's card on file,
     * 
     * this is the ID of the associated customer.
     * 
     * @var ?string $customerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customerId = null;
    
    /**
     * The tender's unique ID.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The ID of the transaction's associated location.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * An optional note associated with the tender at the time of payment.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * The ID of the [Payment](https://developer.squareup.com/reference/square_2021-08-18/objects/Payment) that corresponds to this tender.
     * 
     * This value is only present for payments created with the v2 Payments API.
     * 
     * @var ?string $paymentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentId = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $processingFeeMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('processing_fee_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $processingFeeMoney = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $tipMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('tip_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $tipMoney = null;
    
    /**
     * The ID of the tender's associated transaction.
     * 
     * @var ?string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionId = null;
    
    /**
     * The type of tender, such as `CARD` or `CASH`.
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->additionalRecipients = null;
		$this->amountMoney = null;
		$this->cardDetails = null;
		$this->cashDetails = null;
		$this->createdAt = null;
		$this->customerId = null;
		$this->id = null;
		$this->locationId = null;
		$this->note = null;
		$this->paymentId = null;
		$this->processingFeeMoney = null;
		$this->tipMoney = null;
		$this->transactionId = null;
		$this->type = "";
	}
}
