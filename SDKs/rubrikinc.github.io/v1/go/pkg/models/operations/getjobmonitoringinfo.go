// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// GetJobMonitoringInfoJobTypeEnum - Filters results by job type.
type GetJobMonitoringInfoJobTypeEnum string

const (
	GetJobMonitoringInfoJobTypeEnumArchival       GetJobMonitoringInfoJobTypeEnum = "Archival"
	GetJobMonitoringInfoJobTypeEnumBackup         GetJobMonitoringInfoJobTypeEnum = "Backup"
	GetJobMonitoringInfoJobTypeEnumConversion     GetJobMonitoringInfoJobTypeEnum = "Conversion"
	GetJobMonitoringInfoJobTypeEnumRecovery       GetJobMonitoringInfoJobTypeEnum = "Recovery"
	GetJobMonitoringInfoJobTypeEnumReplication    GetJobMonitoringInfoJobTypeEnum = "Replication"
	GetJobMonitoringInfoJobTypeEnumIndex          GetJobMonitoringInfoJobTypeEnum = "Index"
	GetJobMonitoringInfoJobTypeEnumLogBackup      GetJobMonitoringInfoJobTypeEnum = "LogBackup"
	GetJobMonitoringInfoJobTypeEnumLogArchival    GetJobMonitoringInfoJobTypeEnum = "LogArchival"
	GetJobMonitoringInfoJobTypeEnumLogReplication GetJobMonitoringInfoJobTypeEnum = "LogReplication"
	GetJobMonitoringInfoJobTypeEnumLogShipping    GetJobMonitoringInfoJobTypeEnum = "LogShipping"
)

func (e GetJobMonitoringInfoJobTypeEnum) ToPointer() *GetJobMonitoringInfoJobTypeEnum {
	return &e
}

func (e *GetJobMonitoringInfoJobTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Archival":
		fallthrough
	case "Backup":
		fallthrough
	case "Conversion":
		fallthrough
	case "Recovery":
		fallthrough
	case "Replication":
		fallthrough
	case "Index":
		fallthrough
	case "LogBackup":
		fallthrough
	case "LogArchival":
		fallthrough
	case "LogReplication":
		fallthrough
	case "LogShipping":
		*e = GetJobMonitoringInfoJobTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoJobTypeEnum: %v", v)
	}
}

// GetJobMonitoringInfoObjectTypeEnum - Filters results by a specified object type.
type GetJobMonitoringInfoObjectTypeEnum string

const (
	GetJobMonitoringInfoObjectTypeEnumAppBlueprint            GetJobMonitoringInfoObjectTypeEnum = "AppBlueprint"
	GetJobMonitoringInfoObjectTypeEnumEc2Instance             GetJobMonitoringInfoObjectTypeEnum = "Ec2Instance"
	GetJobMonitoringInfoObjectTypeEnumHdfs                    GetJobMonitoringInfoObjectTypeEnum = "Hdfs"
	GetJobMonitoringInfoObjectTypeEnumHypervVirtualMachine    GetJobMonitoringInfoObjectTypeEnum = "HypervVirtualMachine"
	GetJobMonitoringInfoObjectTypeEnumLinuxFileset            GetJobMonitoringInfoObjectTypeEnum = "LinuxFileset"
	GetJobMonitoringInfoObjectTypeEnumManagedVolume           GetJobMonitoringInfoObjectTypeEnum = "ManagedVolume"
	GetJobMonitoringInfoObjectTypeEnumMssql                   GetJobMonitoringInfoObjectTypeEnum = "Mssql"
	GetJobMonitoringInfoObjectTypeEnumNutanixVirtualMachine   GetJobMonitoringInfoObjectTypeEnum = "NutanixVirtualMachine"
	GetJobMonitoringInfoObjectTypeEnumOracleDatabase          GetJobMonitoringInfoObjectTypeEnum = "OracleDatabase"
	GetJobMonitoringInfoObjectTypeEnumSapHanaDatabase         GetJobMonitoringInfoObjectTypeEnum = "SapHanaDatabase"
	GetJobMonitoringInfoObjectTypeEnumShareFileset            GetJobMonitoringInfoObjectTypeEnum = "ShareFileset"
	GetJobMonitoringInfoObjectTypeEnumStorageArrayVolumeGroup GetJobMonitoringInfoObjectTypeEnum = "StorageArrayVolumeGroup"
	GetJobMonitoringInfoObjectTypeEnumVcdVapp                 GetJobMonitoringInfoObjectTypeEnum = "VcdVapp"
	GetJobMonitoringInfoObjectTypeEnumVmwareVirtualMachine    GetJobMonitoringInfoObjectTypeEnum = "VmwareVirtualMachine"
	GetJobMonitoringInfoObjectTypeEnumWindowsFileset          GetJobMonitoringInfoObjectTypeEnum = "WindowsFileset"
	GetJobMonitoringInfoObjectTypeEnumWindowsVolumeGroup      GetJobMonitoringInfoObjectTypeEnum = "WindowsVolumeGroup"
)

func (e GetJobMonitoringInfoObjectTypeEnum) ToPointer() *GetJobMonitoringInfoObjectTypeEnum {
	return &e
}

func (e *GetJobMonitoringInfoObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AppBlueprint":
		fallthrough
	case "Ec2Instance":
		fallthrough
	case "Hdfs":
		fallthrough
	case "HypervVirtualMachine":
		fallthrough
	case "LinuxFileset":
		fallthrough
	case "ManagedVolume":
		fallthrough
	case "Mssql":
		fallthrough
	case "NutanixVirtualMachine":
		fallthrough
	case "OracleDatabase":
		fallthrough
	case "SapHanaDatabase":
		fallthrough
	case "ShareFileset":
		fallthrough
	case "StorageArrayVolumeGroup":
		fallthrough
	case "VcdVapp":
		fallthrough
	case "VmwareVirtualMachine":
		fallthrough
	case "WindowsFileset":
		fallthrough
	case "WindowsVolumeGroup":
		*e = GetJobMonitoringInfoObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoObjectTypeEnum: %v", v)
	}
}

// GetJobMonitoringInfoSortByEnum - The column by which to sort the entries.
type GetJobMonitoringInfoSortByEnum string

const (
	GetJobMonitoringInfoSortByEnumStartTime         GetJobMonitoringInfoSortByEnum = "StartTime"
	GetJobMonitoringInfoSortByEnumJobStatus         GetJobMonitoringInfoSortByEnum = "JobStatus"
	GetJobMonitoringInfoSortByEnumJobType           GetJobMonitoringInfoSortByEnum = "JobType"
	GetJobMonitoringInfoSortByEnumObjectType        GetJobMonitoringInfoSortByEnum = "ObjectType"
	GetJobMonitoringInfoSortByEnumSLADomainName     GetJobMonitoringInfoSortByEnum = "SlaDomainName"
	GetJobMonitoringInfoSortByEnumEndTime           GetJobMonitoringInfoSortByEnum = "EndTime"
	GetJobMonitoringInfoSortByEnumObjectLogicalSize GetJobMonitoringInfoSortByEnum = "ObjectLogicalSize"
	GetJobMonitoringInfoSortByEnumDataTransferred   GetJobMonitoringInfoSortByEnum = "DataTransferred"
	GetJobMonitoringInfoSortByEnumDuration          GetJobMonitoringInfoSortByEnum = "Duration"
	GetJobMonitoringInfoSortByEnumObjectName        GetJobMonitoringInfoSortByEnum = "ObjectName"
)

func (e GetJobMonitoringInfoSortByEnum) ToPointer() *GetJobMonitoringInfoSortByEnum {
	return &e
}

func (e *GetJobMonitoringInfoSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StartTime":
		fallthrough
	case "JobStatus":
		fallthrough
	case "JobType":
		fallthrough
	case "ObjectType":
		fallthrough
	case "SlaDomainName":
		fallthrough
	case "EndTime":
		fallthrough
	case "ObjectLogicalSize":
		fallthrough
	case "DataTransferred":
		fallthrough
	case "Duration":
		fallthrough
	case "ObjectName":
		*e = GetJobMonitoringInfoSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoSortByEnum: %v", v)
	}
}

// GetJobMonitoringInfoSortOrderEnum - The sorting order.
type GetJobMonitoringInfoSortOrderEnum string

const (
	GetJobMonitoringInfoSortOrderEnumAsc  GetJobMonitoringInfoSortOrderEnum = "asc"
	GetJobMonitoringInfoSortOrderEnumDesc GetJobMonitoringInfoSortOrderEnum = "desc"
)

func (e GetJobMonitoringInfoSortOrderEnum) ToPointer() *GetJobMonitoringInfoSortOrderEnum {
	return &e
}

func (e *GetJobMonitoringInfoSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = GetJobMonitoringInfoSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetJobMonitoringInfoSortOrderEnum: %v", v)
	}
}

type GetJobMonitoringInfoRequest struct {
	// Fetches all rows after given row cursor.
	AfterID *string `queryParam:"style=form,explode=true,name=after_id"`
	// Filters results by the provided sla doimain id.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Filter results by first full status.
	IsFirstFull *bool `queryParam:"style=form,explode=true,name=is_first_full"`
	// Filters results according to their on-demand status.
	IsOnDemand *bool `queryParam:"style=form,explode=true,name=is_on_demand"`
	// Filters results by the current event status of the job. The filters should be separated by ','.
	JobEventStatus []string `queryParam:"style=form,explode=false,name=job_event_status"`
	// Filters results by job type.
	JobType *GetJobMonitoringInfoJobTypeEnum `queryParam:"style=form,explode=true,name=job_type"`
	// All rows updated at or after this time will be returned.
	LastUpdateTime *time.Time `queryParam:"style=form,explode=true,name=last_update_time"`
	// Maximum number of entries to retrieve. The default value is 25. Value needs to be a positive number.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter results by node name.
	NodeName *string `queryParam:"style=form,explode=true,name=node_name"`
	// Filters results by the provided value for object_name, using infix search.
	ObjectName *string `queryParam:"style=form,explode=true,name=object_name"`
	// Filters results by a specified object type.
	ObjectType *GetJobMonitoringInfoObjectTypeEnum `queryParam:"style=form,explode=true,name=object_type"`
	// A Boolean that specifies whether or not to include log- related jobs. Default value is 'false'.
	ShouldIncludeLogRelatedJob *bool `queryParam:"style=form,explode=true,name=should_include_log_related_job"`
	// The column by which to sort the entries.
	SortBy *GetJobMonitoringInfoSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// The sorting order.
	SortOrder *GetJobMonitoringInfoSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type GetJobMonitoringInfoResponse struct {
	ContentType string
	// Returns job information.
	JobMonitoringResponse *shared.JobMonitoringResponse
	StatusCode            int
	RawResponse           *http.Response
}
