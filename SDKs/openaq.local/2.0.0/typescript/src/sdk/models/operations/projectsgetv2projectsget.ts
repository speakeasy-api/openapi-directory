/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum ProjectsGetV2ProjectsGetOrderByProjectsOrderEnum {
  Id = "id",
  Name = "name",
  Subtitle = "subtitle",
  FirstUpdated = "firstUpdated",
  LastUpdated = "lastUpdated",
}

/**
 * An enumeration.
 */
export enum ProjectsGetV2ProjectsGetSortSortEnum {
  Asc = "asc",
  Desc = "desc",
}

export class ProjectsGetV2ProjectsGetRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. ?country=US or ?country=US&country=MX)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string[];

  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. /US)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country_id",
  })
  countryId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=entity",
  })
  entity?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isAnalysis",
  })
  isAnalysis?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isMobile",
  })
  isMobile?: boolean;

  /**
   * Change the number of results returned.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: ProjectsGetV2ProjectsGetOrderByProjectsOrderEnum;

  /**
   * Paginate through results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameter",
  })
  parameter?: any[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parameter_id",
  })
  parameterId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=project",
  })
  project?: any[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=project_id",
  })
  projectId?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sensorType",
  })
  sensorType?: string;

  /**
   * Define sort order.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: ProjectsGetV2ProjectsGetSortSortEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceName",
  })
  sourceName?: string[];

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=unit" })
  unit?: string[];
}

export class ProjectsGetV2ProjectsGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  openAQProjectsResult?: shared.OpenAQProjectsResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
