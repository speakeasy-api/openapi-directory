/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETWorkflowsQueryParams {
    /**
     * If set to true, the operation retrieves workflows that have the callout trigger enabled. If set to false, the operation retrieves workflows that have the callout trigger disabled. If not specified, the operation will not use this filter.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=callout_trigger")
    public Boolean calloutTrigger;
    public GETWorkflowsQueryParams withCalloutTrigger(Boolean calloutTrigger) {
        this.calloutTrigger = calloutTrigger;
        return this;
    }
    
    /**
     * A CRON expession that specifies a schedule (for example, `0 0 * * *`). If specified, the operation retrieves the workflow that is run based on the specified schedule.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=interval")
    public String interval;
    public GETWorkflowsQueryParams withInterval(String interval) {
        this.interval = interval;
        return this;
    }
    
    /**
     * If specified, the operation retrieves the workflow that is in the specified name.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;
    public GETWorkflowsQueryParams withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * If set to true, the operation retrieves workflows that have the ondemand trigger enabled. If set to false, the operation retrieves workflows that have the ondemand trigger disabled. If not specified, the operation will not use this filter.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ondemand_trigger")
    public Boolean ondemandTrigger;
    public GETWorkflowsQueryParams withOndemandTrigger(Boolean ondemandTrigger) {
        this.ondemandTrigger = ondemandTrigger;
        return this;
    }
    
    /**
     * If you want to retrieve only the workflows on a specific page, you can specify the `page` number in the query.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GETWorkflowsQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of workflows shown in a single call. If the `page` parameter is not specified, the operation will return only the first page of results. If there are multiple pages of results, use it with the `page` parameter to get the results on subsequent pages.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_length")
    public Long pageLength;
    public GETWorkflowsQueryParams withPageLength(Long pageLength) {
        this.pageLength = pageLength;
        return this;
    }
    
    /**
     * If set to true, the operation retrieves workflows that have the scheduled trigger enabled. If set to false, the operation retrieves workflows that have the scheduled trigger disabled. If not specfied, the operation will not use this filter.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=scheduled_trigger")
    public Boolean scheduledTrigger;
    public GETWorkflowsQueryParams withScheduledTrigger(Boolean scheduledTrigger) {
        this.scheduledTrigger = scheduledTrigger;
        return this;
    }
    
}
