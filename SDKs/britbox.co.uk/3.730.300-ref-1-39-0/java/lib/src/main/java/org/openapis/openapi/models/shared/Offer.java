/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Offer - The base type for both Offer and Entitlement.
 */
public class Offer {
    @JsonProperty("availability")
    public OfferAvailabilityEnum availability;

    public Offer withAvailability(OfferAvailabilityEnum availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * A map of custom fields defined by a curator for an offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;

    public Offer withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonProperty("deliveryType")
    public OfferDeliveryTypeEnum deliveryType;

    public Offer withDeliveryType(OfferDeliveryTypeEnum deliveryType) {
        this.deliveryType = deliveryType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endDate")
    public OffsetDateTime endDate;

    public Offer withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * Any specific playback exclusion rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exclusionRules")
    public ExclusionRule[] exclusionRules;

    public Offer withExclusionRules(ExclusionRule[] exclusionRules) {
        this.exclusionRules = exclusionRules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Offer withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The maximum number of allowed downloads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDownloads")
    public Integer maxDownloads;

    public Offer withMaxDownloads(Integer maxDownloads) {
        this.maxDownloads = maxDownloads;
        return this;
    }
    
    /**
     * The maximum number of allowed plays.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxPlays")
    public Integer maxPlays;

    public Offer withMaxPlays(Integer maxPlays) {
        this.maxPlays = maxPlays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Offer withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("ownership")
    public OfferOwnershipEnum ownership;

    public Offer withOwnership(OfferOwnershipEnum ownership) {
        this.ownership = ownership;
        return this;
    }
    
    /**
     * The length of time in minutes which the rental will last once played for the first time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("playPeriod")
    public Integer playPeriod;

    public Offer withPlayPeriod(Integer playPeriod) {
        this.playPeriod = playPeriod;
        return this;
    }
    
    @JsonProperty("price")
    public Float price;

    public Offer withPrice(Float price) {
        this.price = price;
        return this;
    }
    
    /**
     * The length of time in minutes which the rental will last once purchased.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rentalPeriod")
    public Integer rentalPeriod;

    public Offer withRentalPeriod(Integer rentalPeriod) {
        this.rentalPeriod = rentalPeriod;
        return this;
    }
    
    @JsonProperty("resolution")
    public OfferResolutionEnum resolution;

    public Offer withResolution(OfferResolutionEnum resolution) {
        this.resolution = resolution;
        return this;
    }
    
    @JsonProperty("scopes")
    public String[] scopes;

    public Offer withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startDate")
    public OffsetDateTime startDate;

    public Offer withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
    /**
     * The code of the subscription this offer is offered under, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionCode")
    public String subscriptionCode;

    public Offer withSubscriptionCode(String subscriptionCode) {
        this.subscriptionCode = subscriptionCode;
        return this;
    }
    
    public Offer(@JsonProperty("availability") OfferAvailabilityEnum availability, @JsonProperty("deliveryType") OfferDeliveryTypeEnum deliveryType, @JsonProperty("ownership") OfferOwnershipEnum ownership, @JsonProperty("price") Float price, @JsonProperty("resolution") OfferResolutionEnum resolution, @JsonProperty("scopes") String[] scopes) {
        this.availability = availability;
        this.deliveryType = deliveryType;
        this.ownership = ownership;
        this.price = price;
        this.resolution = resolution;
        this.scopes = scopes;
  }
}
