// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AuthFlowTypeEnum string

const (
	AuthFlowTypeEnumUserSrpAuth           AuthFlowTypeEnum = "USER_SRP_AUTH"
	AuthFlowTypeEnumRefreshTokenAuth      AuthFlowTypeEnum = "REFRESH_TOKEN_AUTH"
	AuthFlowTypeEnumRefreshToken          AuthFlowTypeEnum = "REFRESH_TOKEN"
	AuthFlowTypeEnumCustomAuth            AuthFlowTypeEnum = "CUSTOM_AUTH"
	AuthFlowTypeEnumAdminNoSrpAuth        AuthFlowTypeEnum = "ADMIN_NO_SRP_AUTH"
	AuthFlowTypeEnumUserPasswordAuth      AuthFlowTypeEnum = "USER_PASSWORD_AUTH"
	AuthFlowTypeEnumAdminUserPasswordAuth AuthFlowTypeEnum = "ADMIN_USER_PASSWORD_AUTH"
)

func (e *AuthFlowTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USER_SRP_AUTH":
		fallthrough
	case "REFRESH_TOKEN_AUTH":
		fallthrough
	case "REFRESH_TOKEN":
		fallthrough
	case "CUSTOM_AUTH":
		fallthrough
	case "ADMIN_NO_SRP_AUTH":
		fallthrough
	case "USER_PASSWORD_AUTH":
		fallthrough
	case "ADMIN_USER_PASSWORD_AUTH":
		*e = AuthFlowTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthFlowTypeEnum: %s", s)
	}
}
