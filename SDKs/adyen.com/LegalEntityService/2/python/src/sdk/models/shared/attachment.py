"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Attachment:
    
    content: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content') }})
    r"""The document in Base64-encoded string format."""  
    content_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentType'), 'exclude': lambda f: f is None }})
    r"""The file format.
    
     Possible values: **application/pdf**, **image/jpg**, **image/jpeg**, **image/png**.
    """  
    filename: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename'), 'exclude': lambda f: f is None }})
    r"""The name of the file including the file extension."""  
    page_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageName'), 'exclude': lambda f: f is None }})
    r"""The name of the file including the file extension."""  
    page_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageType'), 'exclude': lambda f: f is None }})
    r"""Specifies which side of the ID card is uploaded.
    
    * When `type` is **driversLicense** or **identityCard**, set this to **front** or **back**.
    
    * When omitted, we infer the page number based on the order of attachments.
    """  
    