"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class DescribeInstanceStatusResultInstanceStatusesEventsCodeEnum(str, Enum):
    r"""The event code."""
    INSTANCE_REBOOT = 'instance-reboot'
    SYSTEM_REBOOT = 'system-reboot'
    SYSTEM_MAINTENANCE = 'system-maintenance'
    INSTANCE_RETIREMENT = 'instance-retirement'
    INSTANCE_STOP = 'instance-stop'


@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatusesEvents:
    r"""Describes a scheduled event for an instance."""
    
    code: Optional[DescribeInstanceStatusResultInstanceStatusesEventsCodeEnum] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    instance_event_id: Optional[str] = dataclasses.field(default=None)  
    not_after: Optional[datetime] = dataclasses.field(default=None)  
    not_before: Optional[datetime] = dataclasses.field(default=None)  
    not_before_deadline: Optional[datetime] = dataclasses.field(default=None)  
    
class DescribeInstanceStatusResultInstanceStatusesInstanceStateNameEnum(str, Enum):
    r"""The current state of the instance."""
    PENDING = 'pending'
    RUNNING = 'running'
    SHUTTING_DOWN = 'shutting-down'
    TERMINATED = 'terminated'
    STOPPING = 'stopping'
    STOPPED = 'stopped'


@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatusesInstanceState:
    r"""The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state."""
    
    code: Optional[int] = dataclasses.field(default=None)  
    name: Optional[DescribeInstanceStatusResultInstanceStatusesInstanceStateNameEnum] = dataclasses.field(default=None)  
    
class DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsNameEnum(str, Enum):
    r"""The type of instance status."""
    REACHABILITY = 'reachability'

class DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsStatusEnum(str, Enum):
    r"""The status."""
    PASSED = 'passed'
    FAILED = 'failed'
    INSUFFICIENT_DATA = 'insufficient-data'
    INITIALIZING = 'initializing'


@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetails:
    r"""Describes the instance status."""
    
    impaired_since: Optional[datetime] = dataclasses.field(default=None)  
    name: Optional[DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsNameEnum] = dataclasses.field(default=None)  
    status: Optional[DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsStatusEnum] = dataclasses.field(default=None)  
    
class DescribeInstanceStatusResultInstanceStatusesInstanceStatusStatusEnum(str, Enum):
    r"""The status."""
    OK = 'ok'
    IMPAIRED = 'impaired'
    INSUFFICIENT_DATA = 'insufficient-data'
    NOT_APPLICABLE = 'not-applicable'
    INITIALIZING = 'initializing'


@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatusesInstanceStatus:
    r"""Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability."""
    
    details: Optional[list[DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetails]] = dataclasses.field(default=None)  
    status: Optional[DescribeInstanceStatusResultInstanceStatusesInstanceStatusStatusEnum] = dataclasses.field(default=None)  
    
class DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsNameEnum(str, Enum):
    r"""The type of instance status."""
    REACHABILITY = 'reachability'

class DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsStatusEnum(str, Enum):
    r"""The status."""
    PASSED = 'passed'
    FAILED = 'failed'
    INSUFFICIENT_DATA = 'insufficient-data'
    INITIALIZING = 'initializing'


@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatusesSystemStatusDetails:
    r"""Describes the instance status."""
    
    impaired_since: Optional[datetime] = dataclasses.field(default=None)  
    name: Optional[DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsNameEnum] = dataclasses.field(default=None)  
    status: Optional[DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsStatusEnum] = dataclasses.field(default=None)  
    
class DescribeInstanceStatusResultInstanceStatusesSystemStatusStatusEnum(str, Enum):
    r"""The status."""
    OK = 'ok'
    IMPAIRED = 'impaired'
    INSUFFICIENT_DATA = 'insufficient-data'
    NOT_APPLICABLE = 'not-applicable'
    INITIALIZING = 'initializing'


@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatusesSystemStatus:
    r"""Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems."""
    
    details: Optional[list[DescribeInstanceStatusResultInstanceStatusesSystemStatusDetails]] = dataclasses.field(default=None)  
    status: Optional[DescribeInstanceStatusResultInstanceStatusesSystemStatusStatusEnum] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeInstanceStatusResultInstanceStatuses:
    r"""Describes the status of an instance."""
    
    availability_zone: Optional[str] = dataclasses.field(default=None)  
    events: Optional[list[DescribeInstanceStatusResultInstanceStatusesEvents]] = dataclasses.field(default=None)  
    instance_id: Optional[str] = dataclasses.field(default=None)  
    instance_state: Optional[DescribeInstanceStatusResultInstanceStatusesInstanceState] = dataclasses.field(default=None)  
    instance_status: Optional[DescribeInstanceStatusResultInstanceStatusesInstanceStatus] = dataclasses.field(default=None)  
    outpost_arn: Optional[str] = dataclasses.field(default=None)  
    system_status: Optional[DescribeInstanceStatusResultInstanceStatusesSystemStatus] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeInstanceStatusResult:
    r"""Success"""
    
    instance_statuses: Optional[list[DescribeInstanceStatusResultInstanceStatuses]] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    