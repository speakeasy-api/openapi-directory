// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RollbackApplicationXAmzTargetEnum
type RollbackApplicationXAmzTargetEnum string

const (
	RollbackApplicationXAmzTargetEnumKinesisAnalytics20180523RollbackApplication RollbackApplicationXAmzTargetEnum = "KinesisAnalytics_20180523.RollbackApplication"
)

func (e RollbackApplicationXAmzTargetEnum) ToPointer() *RollbackApplicationXAmzTargetEnum {
	return &e
}

func (e *RollbackApplicationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "KinesisAnalytics_20180523.RollbackApplication":
		*e = RollbackApplicationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RollbackApplicationXAmzTargetEnum: %v", v)
	}
}

type RollbackApplicationRequest struct {
	RollbackApplicationRequest shared.RollbackApplicationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 RollbackApplicationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RollbackApplicationResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	RollbackApplicationResponse *shared.RollbackApplicationResponse
	StatusCode                  int
	RawResponse                 *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
