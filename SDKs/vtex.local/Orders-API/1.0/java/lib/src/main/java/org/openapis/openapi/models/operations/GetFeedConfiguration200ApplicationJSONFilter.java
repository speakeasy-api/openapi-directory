/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetFeedConfiguration200ApplicationJSONFilter - Information on how orders are filtered to show on the feed.
 */
public class GetFeedConfiguration200ApplicationJSONFilter {
    /**
     * Sets a limit to how many times a specific order shows on the feed, after it first meets filtering conditions. Using the `FromOrders` type configuration with JSONata filtering expressions might cause orders to appear more than once on a feed, whenever changes are made to that order. If this field is `false` orders will appear in the feed only once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableSingleFire")
    public Boolean disableSingleFire;
    public GetFeedConfiguration200ApplicationJSONFilter withDisableSingleFire(Boolean disableSingleFire) {
        this.disableSingleFire = disableSingleFire;
        return this;
    }
    
    /**
     * JSONata query expression that defines what conditions must be met for an order to be included in the feed. This should only be used in case `type` is `FromOrders`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expression")
    public String expression;
    public GetFeedConfiguration200ApplicationJSONFilter withExpression(String expression) {
        this.expression = expression;
        return this;
    }
    
    /**
     * List of order statuses that should be included in the feed. This should only be used in case `type` is `FromWorkflow`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String[] status;
    public GetFeedConfiguration200ApplicationJSONFilter withStatus(String[] status) {
        this.status = status;
        return this;
    }
    
    /**
     * Determines what orders appear in the feed and how they are filtered. If a feed has the `FromWorkflow` type configuration, it will receive order updates only when order\u2019s statuses change and orders can be filtered by status, using the `status` field. A feed with the `FromOrders` type configuration gets updates whenever any change is made to an order. in this case, orders can be filtered by any property, according to JSONata expressions set in the `expression` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GetFeedConfiguration200ApplicationJSONFilter withType(String type) {
        this.type = type;
        return this;
    }
    
}
