"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instancemetadataserviceconfiguration as shared_instancemetadataserviceconfiguration
from ..shared import instancetype_enum as shared_instancetype_enum
from ..shared import notebookinstanceacceleratortype_enum as shared_notebookinstanceacceleratortype_enum
from ..shared import rootaccess_enum as shared_rootaccess_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNotebookInstanceInput:
    
    notebook_instance_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NotebookInstanceName') }})  
    accelerator_types: Optional[list[shared_notebookinstanceacceleratortype_enum.NotebookInstanceAcceleratorTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcceleratorTypes'), 'exclude': lambda f: f is None }})  
    additional_code_repositories: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalCodeRepositories'), 'exclude': lambda f: f is None }})  
    default_code_repository: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultCodeRepository'), 'exclude': lambda f: f is None }})  
    disassociate_accelerator_types: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisassociateAcceleratorTypes'), 'exclude': lambda f: f is None }})  
    disassociate_additional_code_repositories: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisassociateAdditionalCodeRepositories'), 'exclude': lambda f: f is None }})  
    disassociate_default_code_repository: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisassociateDefaultCodeRepository'), 'exclude': lambda f: f is None }})  
    disassociate_lifecycle_config: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisassociateLifecycleConfig'), 'exclude': lambda f: f is None }})  
    instance_metadata_service_configuration: Optional[shared_instancemetadataserviceconfiguration.InstanceMetadataServiceConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceMetadataServiceConfiguration'), 'exclude': lambda f: f is None }})  
    instance_type: Optional[shared_instancetype_enum.InstanceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InstanceType'), 'exclude': lambda f: f is None }})  
    lifecycle_config_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LifecycleConfigName'), 'exclude': lambda f: f is None }})  
    role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RoleArn'), 'exclude': lambda f: f is None }})  
    root_access: Optional[shared_rootaccess_enum.RootAccessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RootAccess'), 'exclude': lambda f: f is None }})  
    volume_size_in_gb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeSizeInGB'), 'exclude': lambda f: f is None }})  
    