// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// PostInvoiceItemTypeRevRecTriggerConditionEnum - The date when revenue recognition is triggered.
type PostInvoiceItemTypeRevRecTriggerConditionEnum string

const (
	PostInvoiceItemTypeRevRecTriggerConditionEnumContractEffectiveDate  PostInvoiceItemTypeRevRecTriggerConditionEnum = "ContractEffectiveDate"
	PostInvoiceItemTypeRevRecTriggerConditionEnumServiceActivationDate  PostInvoiceItemTypeRevRecTriggerConditionEnum = "ServiceActivationDate"
	PostInvoiceItemTypeRevRecTriggerConditionEnumCustomerAcceptanceDate PostInvoiceItemTypeRevRecTriggerConditionEnum = "CustomerAcceptanceDate"
)

func (e *PostInvoiceItemTypeRevRecTriggerConditionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ContractEffectiveDate":
		fallthrough
	case "ServiceActivationDate":
		fallthrough
	case "CustomerAcceptanceDate":
		*e = PostInvoiceItemTypeRevRecTriggerConditionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInvoiceItemTypeRevRecTriggerConditionEnum: %s", s)
	}
}

// PostInvoiceItemTypeTaxModeEnum - The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax.
//
// **Note** This field is only available only when Taxation enabled.
type PostInvoiceItemTypeTaxModeEnum string

const (
	PostInvoiceItemTypeTaxModeEnumTaxInclusive PostInvoiceItemTypeTaxModeEnum = "TaxInclusive"
	PostInvoiceItemTypeTaxModeEnumTaxExclusive PostInvoiceItemTypeTaxModeEnum = "TaxExclusive"
)

func (e *PostInvoiceItemTypeTaxModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TaxInclusive":
		fallthrough
	case "TaxExclusive":
		*e = PostInvoiceItemTypeTaxModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInvoiceItemTypeTaxModeEnum: %s", s)
	}
}

// PostInvoiceItemType - Container for custom fields of an Invoice Item object.
type PostInvoiceItemType struct {
	// ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationIDNS *string `json:"IntegrationId__NS,omitempty"`
	// Status of the invoice item's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationStatusNS *string `json:"IntegrationStatus__NS,omitempty"`
	// Date when the invoice item was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	SyncDateNS *string `json:"SyncDate__NS,omitempty"`
	// The accounting code associated with the invoice item.
	//
	AccountingCode *string `json:"accountingCode,omitempty"`
	// The amount of the invoice item.
	//
	// - For tax-inclusive invoice items, the amount indicates the invoice item amount including tax.
	// - For tax-exclusive invoice items, the amount indicates the invoice item amount excluding tax.
	//
	Amount string `json:"amount"`
	// The booking reference of the invoice item.
	//
	BookingReference *string `json:"bookingReference,omitempty"`
	// The date when the invoice item is charged.
	//
	ChargeDate *time.Time `json:"chargeDate,omitempty"`
	// The name of the charge associated with the invoice item.
	//
	// This field is required if the `productRatePlanChargeId` field is not specified in the request.
	//
	ChargeName *string `json:"chargeName,omitempty"`
	// The accounting code for the deferred revenue, such as Monthly Recurring Liability.
	//
	// **Note:** This field is only available if you have Zuora Finance enabled.
	//
	DeferredRevenueAccountingCode *string `json:"deferredRevenueAccountingCode,omitempty"`
	// The description of the invoice item.
	//
	Description *string `json:"description,omitempty"`
	// The type of the invoice item.
	//
	ItemType *string `json:"itemType,omitempty"`
	// The ID of the product rate plan charge that the invoice item is created from.
	//
	// If you specify a value for the `productRatePlanChargeId` field in the request, Zuora directly copies the values of the following fields from the corresponding product rate plan charge, regardless of the values specified in the request body:
	// - `chargeName`
	// - `sku`
	// - `uom`
	// - `taxCode`
	// - `taxMode`
	// - `accountingCode`
	// - `deferredRevenueAccountingCode`
	// - `recognizedRevenueAccountingCode`
	//
	ProductRatePlanChargeID *string `json:"productRatePlanChargeId,omitempty"`
	// The purchase order number associated with the invoice item.
	//
	PurchaseOrderNumber *string `json:"purchaseOrderNumber,omitempty"`
	// The number of units for the invoice item.
	//
	Quantity *string `json:"quantity,omitempty"`
	// The accounting code for the recognized revenue, such as Monthly Recurring Charges or Overage Charges.
	//
	// **Note:** This field is only available if you have Zuora Finance enabled.
	//
	RecognizedRevenueAccountingCode *string `json:"recognizedRevenueAccountingCode,omitempty"`
	// The revenue recognition code.
	//
	RevRecCode *string `json:"revRecCode,omitempty"`
	// The date when revenue recognition is triggered.
	//
	RevRecTriggerCondition *PostInvoiceItemTypeRevRecTriggerConditionEnum `json:"revRecTriggerCondition,omitempty"`
	// The name of the revenue recognition rule governing the revenue schedule.
	//
	// **Note:** This field is only available if you have Zuora Finance enabled.
	//
	RevenueRecognitionRuleName *string `json:"revenueRecognitionRuleName,omitempty"`
	// The service end date of the invoice item.
	//
	ServiceEndDate *types.Date `json:"serviceEndDate,omitempty"`
	// The service start date of the invoice item.
	//
	ServiceStartDate types.Date `json:"serviceStartDate"`
	// The SKU of the invoice item.
	//
	Sku *string `json:"sku,omitempty"`
	// The tax code identifies which tax rules and tax rates to apply to the invoice item.
	//
	// **Note** This field is only available only when Taxation enabled.
	//
	TaxCode *string `json:"taxCode,omitempty"`
	// Container for taxation items. The maximum number of taxation items is 5.
	//
	TaxItems []PostTaxationItemType `json:"taxItems,omitempty"`
	// The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax.
	//
	// **Note** This field is only available only when Taxation enabled.
	//
	TaxMode *PostInvoiceItemTypeTaxModeEnum `json:"taxMode,omitempty"`
	// The per-unit price of the invoice item.
	//
	UnitPrice *string `json:"unitPrice,omitempty"`
	// The unit of measure.
	//
	Uom *string `json:"uom,omitempty"`
}
