"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleappscardv1borderstyle as shared_googleappscardv1borderstyle
from ..shared import googleappscardv1griditem as shared_googleappscardv1griditem
from ..shared import googleappscardv1onclick as shared_googleappscardv1onclick
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAppsCardV1Grid:
    r"""Displays a grid with a collection of items. A grid supports any number of columns and items. The number of rows is determined by items divided by columns. A grid with 10 items and 2 columns has 5 rows. A grid with 11 items and 2 columns has 6 rows. For example, the following JSON creates a 2 column grid with a single item: ``` \\"grid\\": { \\"title\\": \\"A fine collection of items\\", \\"columnCount\\": 2, \\"borderStyle\\": { \\"type\\": \\"STROKE\\", \\"cornerRadius\\": 4 }, \\"items\\": [ { \\"image\\": { \\"imageUri\\": \\"https://www.example.com/image.png\\", \\"cropStyle\\": { \\"type\\": \\"SQUARE\\" }, \\"borderStyle\\": { \\"type\\": \\"STROKE\\" } }, \\"title\\": \\"An item\\", \\"textAlignment\\": \\"CENTER\\" } ], \\"onClick\\": { \\"openLink\\": { \\"url\\": \\"https://www.example.com\\" } } } ```"""
    
    border_style: Optional[shared_googleappscardv1borderstyle.GoogleAppsCardV1BorderStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('borderStyle'), 'exclude': lambda f: f is None }})
    r"""Represents the complete border style applied to items in a widget."""  
    column_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnCount'), 'exclude': lambda f: f is None }})
    r"""The number of columns to display in the grid. A default value is used if this field isn't specified, and that default value is different depending on where the grid is shown (dialog versus companion)."""  
    items: Optional[list[shared_googleappscardv1griditem.GoogleAppsCardV1GridItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    r"""The items to display in the grid."""  
    on_click: Optional[shared_googleappscardv1onclick.GoogleAppsCardV1OnClick] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onClick'), 'exclude': lambda f: f is None }})
    r"""Represents how to respond when users click an interactive element on a card, such as a button."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The text that displays in the grid header."""  
    