/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ScimListProvisionedIdentitiesRequest {
    /**
     * Used for pagination: the number of results to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=count")
    public Long count;
    public ScimListProvisionedIdentitiesRequest withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:
     * 
     * `?filter=userName%20eq%20\"Octocat\"`.
     * 
     * To filter results for the identity with the email `octocat@github.com`, you would use this query:
     * 
     * `?filter=emails%20eq%20\"octocat@github.com\"`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filter")
    public String filter;
    public ScimListProvisionedIdentitiesRequest withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * The organization name. The name is not case sensitive.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=org")
    public String org;
    public ScimListProvisionedIdentitiesRequest withOrg(String org) {
        this.org = org;
        return this;
    }
    
    /**
     * Used for pagination: the index of the first result to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startIndex")
    public Long startIndex;
    public ScimListProvisionedIdentitiesRequest withStartIndex(Long startIndex) {
        this.startIndex = startIndex;
        return this;
    }
    
}
