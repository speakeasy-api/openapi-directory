// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartReplicationTaskXAmzTargetEnum
type StartReplicationTaskXAmzTargetEnum string

const (
	StartReplicationTaskXAmzTargetEnumAmazonDmSv20160101StartReplicationTask StartReplicationTaskXAmzTargetEnum = "AmazonDMSv20160101.StartReplicationTask"
)

func (e *StartReplicationTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonDMSv20160101.StartReplicationTask":
		*e = StartReplicationTaskXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartReplicationTaskXAmzTargetEnum: %s", s)
	}
}

type StartReplicationTaskRequest struct {
	StartReplicationTaskMessage shared.StartReplicationTaskMessage `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  StartReplicationTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartReplicationTaskResponse struct {
	// AccessDeniedFault
	AccessDeniedFault interface{}
	ContentType       string
	// InvalidResourceStateFault
	InvalidResourceStateFault interface{}
	// ResourceNotFoundFault
	ResourceNotFoundFault interface{}
	// Success
	StartReplicationTaskResponse *shared.StartReplicationTaskResponse
	StatusCode                   int
	RawResponse                  *http.Response
}
