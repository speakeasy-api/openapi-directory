/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReplicationPendingModifiedValues } from "./replicationpendingmodifiedvalues";
import { ReplicationSubnetGroup } from "./replicationsubnetgroup";
import { VpcSecurityGroupMembership } from "./vpcsecuritygroupmembership";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides information that defines a replication instance.
 */
export class ReplicationInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllocatedStorage" })
  allocatedStorage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoMinorVersionUpgrade" })
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AvailabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsNameServers" })
  dnsNameServers?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EngineVersion" })
  engineVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FreeUntil" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  freeUntil?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceCreateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  instanceCreateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MultiAZ" })
  multiAZ?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkType" })
  networkType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PendingModifiedValues" })
  @Type(() => ReplicationPendingModifiedValues)
  pendingModifiedValues?: ReplicationPendingModifiedValues;

  @SpeakeasyMetadata()
  @Expose({ name: "PreferredMaintenanceWindow" })
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PubliclyAccessible" })
  publiclyAccessible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceArn" })
  replicationInstanceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceClass" })
  replicationInstanceClass?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceIdentifier" })
  replicationInstanceIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceIpv6Addresses" })
  replicationInstanceIpv6Addresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstancePrivateIpAddress" })
  replicationInstancePrivateIpAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstancePrivateIpAddresses" })
  replicationInstancePrivateIpAddresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstancePublicIpAddress" })
  replicationInstancePublicIpAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstancePublicIpAddresses" })
  replicationInstancePublicIpAddresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationInstanceStatus" })
  replicationInstanceStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplicationSubnetGroup" })
  @Type(() => ReplicationSubnetGroup)
  replicationSubnetGroup?: ReplicationSubnetGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "SecondaryAvailabilityZone" })
  secondaryAvailabilityZone?: string;

  @SpeakeasyMetadata({ elemType: VpcSecurityGroupMembership })
  @Expose({ name: "VpcSecurityGroups" })
  @Type(() => VpcSecurityGroupMembership)
  vpcSecurityGroups?: VpcSecurityGroupMembership[];
}
