<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Tokeninfo - Successful response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Tokeninfo
{
    /**
     * Who is the intended audience for this token. In general the same as issued_to.
     * 
     * @var ?string $audience
     */
	#[\JMS\Serializer\Annotation\SerializedName('audience')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $audience = null;
    
    /**
     * The email address of the user. Present only if the email scope is present in the request.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.
     * 
     * @var ?bool $emailVerified
     */
	#[\JMS\Serializer\Annotation\SerializedName('email_verified')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $emailVerified = null;
    
    /**
     * The expiry time of the token, as number of seconds left until expiry.
     * 
     * @var ?int $expiresIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires_in')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $expiresIn = null;
    
    /**
     * The issue time of the token, as number of seconds.
     * 
     * @var ?int $issuedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('issued_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $issuedAt = null;
    
    /**
     * To whom was the token issued to. In general the same as audience.
     * 
     * @var ?string $issuedTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('issued_to')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $issuedTo = null;
    
    /**
     * Who issued the token.
     * 
     * @var ?string $issuer
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $issuer = null;
    
    /**
     * Nonce of the id token.
     * 
     * @var ?string $nonce
     */
	#[\JMS\Serializer\Annotation\SerializedName('nonce')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonce = null;
    
    /**
     * The space separated list of scopes granted to this token.
     * 
     * @var ?string $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scope = null;
    
    /**
     * The obfuscated user id.
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
    /**
     * Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.
     * 
     * @var ?bool $verifiedEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('verified_email')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $verifiedEmail = null;
    
	public function __construct()
	{
		$this->audience = null;
		$this->email = null;
		$this->emailVerified = null;
		$this->expiresIn = null;
		$this->issuedAt = null;
		$this->issuedTo = null;
		$this->issuer = null;
		$this->nonce = null;
		$this->scope = null;
		$this->userId = null;
		$this->verifiedEmail = null;
	}
}
