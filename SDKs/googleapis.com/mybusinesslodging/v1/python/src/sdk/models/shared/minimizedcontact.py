"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MinimizedContactContactlessCheckinCheckoutExceptionEnum(str, Enum):
    r"""Contactless check-in check-out exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class MinimizedContactDigitalGuestRoomKeysExceptionEnum(str, Enum):
    r"""Digital guest room keys exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class MinimizedContactHousekeepingScheduledRequestOnlyExceptionEnum(str, Enum):
    r"""Housekeeping scheduled request only exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class MinimizedContactNoHighTouchItemsCommonAreasExceptionEnum(str, Enum):
    r"""No high touch items common areas exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class MinimizedContactNoHighTouchItemsGuestRoomsExceptionEnum(str, Enum):
    r"""No high touch items guest rooms exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class MinimizedContactPlasticKeycardsDisinfectedExceptionEnum(str, Enum):
    r"""Plastic keycards disinfected exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class MinimizedContactRoomBookingsBufferExceptionEnum(str, Enum):
    r"""Room bookings buffer exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MinimizedContact:
    r"""Minimized contact measures implemented by the hotel during COVID-19."""
    
    contactless_checkin_checkout: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactlessCheckinCheckout'), 'exclude': lambda f: f is None }})
    r"""No-contact check-in and check-out."""  
    contactless_checkin_checkout_exception: Optional[MinimizedContactContactlessCheckinCheckoutExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactlessCheckinCheckoutException'), 'exclude': lambda f: f is None }})
    r"""Contactless check-in check-out exception."""  
    digital_guest_room_keys: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digitalGuestRoomKeys'), 'exclude': lambda f: f is None }})
    r"""Keyless mobile entry to guest rooms."""  
    digital_guest_room_keys_exception: Optional[MinimizedContactDigitalGuestRoomKeysExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('digitalGuestRoomKeysException'), 'exclude': lambda f: f is None }})
    r"""Digital guest room keys exception."""  
    housekeeping_scheduled_request_only: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('housekeepingScheduledRequestOnly'), 'exclude': lambda f: f is None }})
    r"""Housekeeping scheduled by request only."""  
    housekeeping_scheduled_request_only_exception: Optional[MinimizedContactHousekeepingScheduledRequestOnlyExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('housekeepingScheduledRequestOnlyException'), 'exclude': lambda f: f is None }})
    r"""Housekeeping scheduled request only exception."""  
    no_high_touch_items_common_areas: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noHighTouchItemsCommonAreas'), 'exclude': lambda f: f is None }})
    r"""High-touch items, such as magazines, removed from common areas."""  
    no_high_touch_items_common_areas_exception: Optional[MinimizedContactNoHighTouchItemsCommonAreasExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noHighTouchItemsCommonAreasException'), 'exclude': lambda f: f is None }})
    r"""No high touch items common areas exception."""  
    no_high_touch_items_guest_rooms: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noHighTouchItemsGuestRooms'), 'exclude': lambda f: f is None }})
    r"""High-touch items, such as decorative pillows, removed from guest rooms."""  
    no_high_touch_items_guest_rooms_exception: Optional[MinimizedContactNoHighTouchItemsGuestRoomsExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noHighTouchItemsGuestRoomsException'), 'exclude': lambda f: f is None }})
    r"""No high touch items guest rooms exception."""  
    plastic_keycards_disinfected: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plasticKeycardsDisinfected'), 'exclude': lambda f: f is None }})
    r"""Plastic key cards are disinfected or discarded."""  
    plastic_keycards_disinfected_exception: Optional[MinimizedContactPlasticKeycardsDisinfectedExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plasticKeycardsDisinfectedException'), 'exclude': lambda f: f is None }})
    r"""Plastic keycards disinfected exception."""  
    room_bookings_buffer: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roomBookingsBuffer'), 'exclude': lambda f: f is None }})
    r"""Buffer maintained between room bookings."""  
    room_bookings_buffer_exception: Optional[MinimizedContactRoomBookingsBufferExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roomBookingsBufferException'), 'exclude': lambda f: f is None }})
    r"""Room bookings buffer exception."""  
    