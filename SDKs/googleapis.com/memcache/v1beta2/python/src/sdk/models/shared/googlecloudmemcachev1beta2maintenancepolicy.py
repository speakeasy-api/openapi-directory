"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import weeklymaintenancewindow as shared_weeklymaintenancewindow
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMemcacheV1beta2MaintenancePolicyInput:
    r"""Maintenance policy per instance."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512."""  
    weekly_maintenance_window: Optional[list[shared_weeklymaintenancewindow.WeeklyMaintenanceWindow]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weeklyMaintenanceWindow'), 'exclude': lambda f: f is None }})
    r"""Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMemcacheV1beta2MaintenancePolicy:
    r"""Maintenance policy per instance."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the policy was created."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the policy was updated."""  
    weekly_maintenance_window: Optional[list[shared_weeklymaintenancewindow.WeeklyMaintenanceWindow]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weeklyMaintenanceWindow'), 'exclude': lambda f: f is None }})
    r"""Required. Maintenance window that is applied to resources covered by this policy. Minimum 1. For the current version, the maximum number of weekly_maintenance_windows is expected to be one."""  
    