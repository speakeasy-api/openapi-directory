"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inventoryadjustmentgroup as shared_inventoryadjustmentgroup
from ..shared import money as shared_money
from ..shared import sourceapplication as shared_sourceapplication
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InventoryAdjustment:
    r"""Represents a change in state or quantity of product inventory at a
    particular time and location.
    """
    
    adjustment_group: Optional[shared_inventoryadjustmentgroup.InventoryAdjustmentGroup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustment_group'), 'exclude': lambda f: f is None }})  
    catalog_object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalog_object_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the
    [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked.
    """  
    catalog_object_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalog_object_type'), 'exclude': lambda f: f is None }})
    r"""The [type](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) of the
    [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) being tracked. Tracking is only
    supported for the `ITEM_VARIATION` type.
    """  
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'exclude': lambda f: f is None }})
    r"""An RFC 3339-formatted timestamp that indicates when the inventory adjustment is received."""  
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the [Employee](https://developer.squareup.com/reference/square_2021-08-18/objects/Employee) responsible for the
    inventory adjustment.
    """  
    from_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from_state'), 'exclude': lambda f: f is None }})
    r"""The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) of the related quantity
    of items before the adjustment.
    """  
    goods_receipt_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('goods_receipt_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the goods receipt that caused the
    adjustment. Only relevant for state transitions from the Square for Retail
    app.
    """  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""A unique ID generated by Square for the
    `InventoryAdjustment`.
    """  
    location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the [Location](https://developer.squareup.com/reference/square_2021-08-18/objects/Location) where the related
    quantity of items is being tracked.
    """  
    occurred_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('occurred_at'), 'exclude': lambda f: f is None }})
    r"""A client-generated RFC 3339-formatted timestamp that indicates when
    the inventory adjustment took place. For inventory adjustment updates, the `occurred_at`
    timestamp cannot be older than 24 hours or in the future relative to the
    time of the request.
    """  
    purchase_order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('purchase_order_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the purchase order that caused the
    adjustment. Only relevant for state transitions from the Square for Retail
    app.
    """  
    quantity: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})
    r"""The number of items affected by the adjustment as a decimal string.
    Can support up to 5 digits after the decimal point.
    """  
    reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference_id'), 'exclude': lambda f: f is None }})
    r"""An optional ID provided by the application to tie the
    `InventoryAdjustment` to an external
    system.
    """  
    refund_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refund_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the [Refund][#type-refund] that
    caused the adjustment. Only relevant for refund-related state
    transitions.
    """  
    source: Optional[shared_sourceapplication.SourceApplication] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Provides information about the application used to generate a change."""  
    to_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to_state'), 'exclude': lambda f: f is None }})
    r"""The [inventory state](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryState) of the related quantity
    of items after the adjustment.
    """  
    total_price_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_price_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    transaction_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transaction_id'), 'exclude': lambda f: f is None }})
    r"""The Square-generated ID of the [Transaction][#type-transaction] that
    caused the adjustment. Only relevant for payment-related state
    transitions.
    """  
    