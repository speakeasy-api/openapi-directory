/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PublicSubscriptionStatus - The status of a subscription for a contact.
 */
public class PublicSubscriptionStatus {
    /**
     * The ID of the brand that the subscription is associated with, if there is one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brandId")
    public Long brandId;
    public PublicSubscriptionStatus withBrandId(Long brandId) {
        this.brandId = brandId;
        return this;
    }
    
    /**
     * A description of the subscription.
     */
    @JsonProperty("description")
    public String description;
    public PublicSubscriptionStatus withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The ID for the subscription.
     */
    @JsonProperty("id")
    public String id;
    public PublicSubscriptionStatus withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The legal reason for the current status of the subscription.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legalBasis")
    public PublicSubscriptionStatusLegalBasisEnum legalBasis;
    public PublicSubscriptionStatus withLegalBasis(PublicSubscriptionStatusLegalBasisEnum legalBasis) {
        this.legalBasis = legalBasis;
        return this;
    }
    
    /**
     * A more detailed explanation to go with the legal basis.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legalBasisExplanation")
    public String legalBasisExplanation;
    public PublicSubscriptionStatus withLegalBasisExplanation(String legalBasisExplanation) {
        this.legalBasisExplanation = legalBasisExplanation;
        return this;
    }
    
    /**
     * The name of the subscription.
     */
    @JsonProperty("name")
    public String name;
    public PublicSubscriptionStatus withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The name of the preferences group that the subscription is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferenceGroupName")
    public String preferenceGroupName;
    public PublicSubscriptionStatus withPreferenceGroupName(String preferenceGroupName) {
        this.preferenceGroupName = preferenceGroupName;
        return this;
    }
    
    /**
     * Where the status is determined from e.g. PORTAL_WIDE_STATUS if the contact opted out from the portal.
     */
    @JsonProperty("sourceOfStatus")
    public PublicSubscriptionStatusSourceOfStatusEnum sourceOfStatus;
    public PublicSubscriptionStatus withSourceOfStatus(PublicSubscriptionStatusSourceOfStatusEnum sourceOfStatus) {
        this.sourceOfStatus = sourceOfStatus;
        return this;
    }
    
    /**
     * Whether the contact is subscribed.
     */
    @JsonProperty("status")
    public PublicSubscriptionStatusStatusEnum status;
    public PublicSubscriptionStatus withStatus(PublicSubscriptionStatusStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
