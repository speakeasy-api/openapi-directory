/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetAssetsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * Requests can be ordered by AssetType, AssetName, AssetNumber, PurchaseDate and PurchasePrice. If the asset status is DISPOSED it also allows DisposalDate and DisposalPrice.
 */
export enum GetAssetsOrderByEnum {
  AssetType = "AssetType",
  AssetName = "AssetName",
  AssetNumber = "AssetNumber",
  PurchaseDate = "PurchaseDate",
  PurchasePrice = "PurchasePrice",
  DisposalDate = "DisposalDate",
  DisposalPrice = "DisposalPrice",
}

/**
 * ASC or DESC
 */
export enum GetAssetsSortDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

export class GetAssetsRequest extends SpeakeasyBase {
  /**
   * A string that can be used to filter the list to only return assets containing the text. Checks it against the AssetName, AssetNumber, Description and AssetTypeName fields.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filterBy",
  })
  filterBy?: string;

  /**
   * Requests can be ordered by AssetType, AssetName, AssetNumber, PurchaseDate and PurchasePrice. If the asset status is DISPOSED it also allows DisposalDate and DisposalPrice.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderBy",
  })
  orderBy?: GetAssetsOrderByEnum;

  /**
   * Results are paged. This specifies which page of the results to return. The default page is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of records returned per page. By default the number of records returned is 10.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * ASC or DESC
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sortDirection",
  })
  sortDirection?: GetAssetsSortDirectionEnum;

  /**
   * Required when retrieving a collection of assets. See Asset Status Codes
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status: shared.AssetStatusQueryParamEnum;

  /**
   * Xero identifier for Tenant
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=xero-tenant-id",
  })
  xeroTenantId: string;
}

export class GetAssetsResponse extends SpeakeasyBase {
  /**
   * search results matching criteria
   */
  @SpeakeasyMetadata()
  assets?: shared.Assets;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
