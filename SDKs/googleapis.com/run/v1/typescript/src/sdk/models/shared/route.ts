/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ObjectMeta } from "./objectmeta";
import { RouteSpec } from "./routespec";
import { RouteStatus } from "./routestatus";
import { Expose, Type } from "class-transformer";

/**
 * Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for "latest ready" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/specs/blob/main/specs/serving/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the "latest ready" Revision from that Configuration.
 */
export class Route extends SpeakeasyBase {
  /**
   * The API version for this call such as "serving.knative.dev/v1".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiVersion" })
  apiVersion?: string;

  /**
   * The kind of this resource, in this case always "Route".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => ObjectMeta)
  metadata?: ObjectMeta;

  /**
   * RouteSpec holds the desired state of the Route (from the client).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spec" })
  @Type(() => RouteSpec)
  spec?: RouteSpec;

  /**
   * RouteStatus communicates the observed state of the Route (from the controller).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => RouteStatus)
  status?: RouteStatus;
}
