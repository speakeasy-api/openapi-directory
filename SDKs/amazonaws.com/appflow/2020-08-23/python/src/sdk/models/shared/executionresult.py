"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import errorinfo as shared_errorinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExecutionResult:
    r"""Specifies the end result of the flow run."""
    
    bytes_processed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bytesProcessed'), 'exclude': lambda f: f is None }})  
    bytes_written: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bytesWritten'), 'exclude': lambda f: f is None }})  
    error_info: Optional[shared_errorinfo.ErrorInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorInfo'), 'exclude': lambda f: f is None }})  
    records_processed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recordsProcessed'), 'exclude': lambda f: f is None }})  
    