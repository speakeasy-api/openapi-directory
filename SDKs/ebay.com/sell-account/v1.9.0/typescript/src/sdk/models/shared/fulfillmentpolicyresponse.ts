/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FulfillmentPolicy } from "./fulfillmentpolicy";
import { Expose, Type } from "class-transformer";

/**
 * The response payload for the <b>getFulfillmentPolicies</b> method.<br /><br /><span class="tablenote"><b>Note</b>: Pagination has not yet been enabled for <b>getFulfillmentPolicies</b>, so all of the pagination-related fields are for future use.</span>
 */
export class FulfillmentPolicyResponse extends SpeakeasyBase {
  /**
   * A list of all of the seller's fulfillment policies defined for the specified marketplace. This array will be returned as empty if no fulfillment policies are defined for the specified marketplace.
   */
  @SpeakeasyMetadata({ elemType: FulfillmentPolicy })
  @Expose({ name: "fulfillmentPolicies" })
  @Type(() => FulfillmentPolicy)
  fulfillmentPolicies?: FulfillmentPolicy[];

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "prev" })
  prev?: string;

  /**
   * The total number of fulfillment policies retrieved in the result set.  <br/><br/>If no fulfillment policies are defined for the specified marketplace, this field is returned with a value of <code>0</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}
