/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class SearchWordsRequest extends SpeakeasyBase {
  /**
   * Search term is a Regular Expression
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allowRegex",
  })
  allowRegex?: string;

  /**
   * Search case sensitive
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=caseSensitive",
  })
  caseSensitive?: string;

  /**
   * Exclude these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=excludePartOfSpeech",
  })
  excludePartOfSpeech?: string;

  /**
   * Only include these comma-delimited parts of speech (allowable values are noun, adjective, verb, adverb, interjection, pronoun, preposition, abbreviation, affix, article, auxiliary-verb, conjunction, definite-article, family-name, given-name, idiom, imperative, noun-plural, noun-posessive, past-participle, phrasal-prefix, proper-noun, proper-noun-plural, proper-noun-posessive, suffix, verb-intransitive, verb-transitive)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=includePartOfSpeech",
  })
  includePartOfSpeech?: string;

  /**
   * Maximum number of results to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Maximum corpus frequency for terms
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxCorpusCount",
  })
  maxCorpusCount?: number;

  /**
   * Maximum dictionary definition count
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxDictionaryCount",
  })
  maxDictionaryCount?: number;

  /**
   * Maximum word length
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxLength",
  })
  maxLength?: number;

  /**
   * Minimum corpus frequency for terms
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minCorpusCount",
  })
  minCorpusCount?: number;

  /**
   * Minimum number of dictionary entries for words returned
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minDictionaryCount",
  })
  minDictionaryCount?: number;

  /**
   * Minimum word length
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minLength",
  })
  minLength?: number;

  /**
   * Search query
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=query",
  })
  query: string;

  /**
   * Results to skip
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=skip" })
  skip?: number;
}

export class SearchWordsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
