"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyConfidenceIntervalTypeEnum(str, Enum):
    r"""The type of confidence interval to build"""
    TWO_SIDED = 'twoSided'
    LOWER_ONE_SIDED = 'lowerOneSided'
    UPPER_ONE_SIDED = 'upperOneSided'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyPortfolios:
    
    portfolio_values: list[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolioValues') }})
    r"""portfolioValues[t] is the value of the portfolio at the time t"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBody:
    
    portfolios: list[PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyPortfolios] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolios') }})  
    risk_free_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('riskFreeRate') }})
    r"""The risk free rate"""  
    confidence_interval_type: Optional[PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyConfidenceIntervalTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confidenceIntervalType'), 'exclude': lambda f: f is None }})
    r"""The type of confidence interval to build"""  
    confidence_level: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confidenceLevel'), 'exclude': lambda f: f is None }})
    r"""The confidence level of the confidence interval to build, in percentage"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONPortfolios:
    
    portfolio_sharpe_ratio_confidence_interval: list[float] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolioSharpeRatioConfidenceInterval') }})
    r"""portfolioSharpeRatioConfidenceInterval[0] (resp. portfolioSharpeRatioConfidenceInterval[1]) is the lower (resp. upper) bound of the built confidence interval, possibly equal to null in case of a negative infinite (resp. positive infinite) bound"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSON:
    r"""OK"""
    
    portfolios: list[PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONPortfolios] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portfolios') }})  
    

@dataclasses.dataclass
class PostPortfolioAnalysisSharpeRatioConfidenceIntervalResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_portfolio_analysis_sharpe_ratio_confidence_interval_200_application_json_object: Optional[PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    