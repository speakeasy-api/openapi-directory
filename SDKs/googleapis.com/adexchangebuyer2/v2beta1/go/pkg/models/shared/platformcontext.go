// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PlatformContextPlatformsEnum string

const (
	PlatformContextPlatformsEnumDesktop PlatformContextPlatformsEnum = "DESKTOP"
	PlatformContextPlatformsEnumAndroid PlatformContextPlatformsEnum = "ANDROID"
	PlatformContextPlatformsEnumIos     PlatformContextPlatformsEnum = "IOS"
)

func (e PlatformContextPlatformsEnum) ToPointer() *PlatformContextPlatformsEnum {
	return &e
}

func (e *PlatformContextPlatformsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DESKTOP":
		fallthrough
	case "ANDROID":
		fallthrough
	case "IOS":
		*e = PlatformContextPlatformsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlatformContextPlatformsEnum: %v", v)
	}
}

// PlatformContext - Output only. The type of platform the restriction applies to.
type PlatformContext struct {
	// The platforms this restriction applies to.
	Platforms []PlatformContextPlatformsEnum `json:"platforms,omitempty"`
}
