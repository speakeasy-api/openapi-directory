/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ObjectReference } from "./objectreference";
import { TypedLinkAttributeRange } from "./typedlinkattributerange";
import { TypedLinkSchemaAndFacetName } from "./typedlinkschemaandfacetname";
import { Expose, Type } from "class-transformer";

/**
 * Returns a paginated list of all the incoming <a>TypedLinkSpecifier</a> information for an object inside a <a>BatchRead</a> operation. For more information, see <a>ListIncomingTypedLinks</a> and <a>BatchReadRequest$Operations</a>.
 */
export class BatchListIncomingTypedLinks extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: TypedLinkAttributeRange })
  @Expose({ name: "FilterAttributeRanges" })
  @Type(() => TypedLinkAttributeRange)
  filterAttributeRanges?: TypedLinkAttributeRange[];

  @SpeakeasyMetadata()
  @Expose({ name: "FilterTypedLink" })
  @Type(() => TypedLinkSchemaAndFacetName)
  filterTypedLink?: TypedLinkSchemaAndFacetName;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ObjectReference" })
  @Type(() => ObjectReference)
  objectReference: ObjectReference;
}
