<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class BillingAccounts 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * This method creates [billing subaccounts](https://cloud.google.com/billing/docs/concepts#subaccounts). Google Cloud resellers should use the Channel Services APIs, [accounts.customers.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers/create) and [accounts.customers.entitlements.create](https://cloud.google.com/channel/docs/reference/rest/v1/accounts.customers.entitlements/create). When creating a subaccount, the current authenticated user must have the `billing.accounts.update` IAM permission on the parent account, which is typically given to billing account [administrators](https://cloud.google.com/billing/docs/how-to/billing-access). This method will return an error if the parent account has not been provisioned as a reseller account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateResponse
     */
	public function cloudbillingBillingAccountsCreate(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/billingAccounts');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "billingAccountInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->billingAccount = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BillingAccount', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets information about a billing account. The current authenticated user must be a [viewer of the billing account](https://cloud.google.com/billing/docs/how-to/billing-access).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetResponse
     */
	public function cloudbillingBillingAccountsGet(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->billingAccount = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BillingAccount', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets the access control policy for a billing account. The caller must have the `billing.accounts.getIamPolicy` permission on the account, which is often given to billing account [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicySecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyResponse
     */
	public function cloudbillingBillingAccountsGetIamPolicy(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicySecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resource}:getIamPolicy', \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsGetIamPolicyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->policy = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Policy', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists the billing accounts that the current authenticated user has permission to [view](https://cloud.google.com/billing/docs/how-to/billing-access).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListResponse
     */
	public function cloudbillingBillingAccountsList(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/billingAccounts');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listBillingAccountsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListBillingAccountsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates a billing account's fields. Currently the only field that can be edited is `display_name`. The current authenticated user must have the `billing.accounts.update` IAM permission, which is typically given to the [administrator](https://cloud.google.com/billing/docs/how-to/billing-access) of the billing account.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchResponse
     */
	public function cloudbillingBillingAccountsPatch(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "billingAccountInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->billingAccount = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BillingAccount', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists the projects associated with a billing account. The current authenticated user must have the `billing.resourceAssociations.list` IAM permission, which is often given to billing account [viewers](https://cloud.google.com/billing/docs/how-to/billing-access).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListResponse
     */
	public function cloudbillingBillingAccountsProjectsList(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}/projects', \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsProjectsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listProjectBillingInfoResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListProjectBillingInfoResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Sets the access control policy for a billing account. Replaces any existing policy. The caller must have the `billing.accounts.setIamPolicy` permission on the account, which is often given to billing account [administrators](https://cloud.google.com/billing/docs/how-to/billing-access).
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicySecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyResponse
     */
	public function cloudbillingBillingAccountsSetIamPolicy(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicySecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resource}:setIamPolicy', \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "setIamPolicyRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsSetIamPolicyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->policy = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Policy', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Tests the access control policy for a billing account. This method takes the resource and a set of permissions as input and returns the subset of the input permissions that the caller is allowed for that resource.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsResponse
     */
	public function cloudbillingBillingAccountsTestIamPermissions(
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resource}:testIamPermissions', \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "testIamPermissionsRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudbillingBillingAccountsTestIamPermissionsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->testIamPermissionsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\TestIamPermissionsResponse', 'json');
            }
        }

        return $response;
    }
}