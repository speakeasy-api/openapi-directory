/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
export class DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsUserIdGroupPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata()
  peeringStatus?: string;

  @SpeakeasyMetadata()
  userId?: string;

  @SpeakeasyMetadata()
  vpcId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * Describes a stale rule in a security group.
 */
export class DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  ipProtocol?: string;

  @SpeakeasyMetadata()
  ipRanges?: string[];

  @SpeakeasyMetadata()
  prefixListIds?: string[];

  @SpeakeasyMetadata()
  toPort?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsUserIdGroupPairs,
  })
  userIdGroupPairs?: DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsUserIdGroupPairs[];
}

/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
export class DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsEgressUserIdGroupPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata()
  peeringStatus?: string;

  @SpeakeasyMetadata()
  userId?: string;

  @SpeakeasyMetadata()
  vpcId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * Describes a stale rule in a security group.
 */
export class DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsEgress extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fromPort?: number;

  @SpeakeasyMetadata()
  ipProtocol?: string;

  @SpeakeasyMetadata()
  ipRanges?: string[];

  @SpeakeasyMetadata()
  prefixListIds?: string[];

  @SpeakeasyMetadata()
  toPort?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsEgressUserIdGroupPairs,
  })
  userIdGroupPairs?: DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsEgressUserIdGroupPairs[];
}

/**
 * Describes a stale security group (a security group that contains stale rules).
 */
export class DescribeStaleSecurityGroupsResultStaleSecurityGroupSet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissions,
  })
  staleIpPermissions?: DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissions[];

  @SpeakeasyMetadata({
    elemType:
      DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsEgress,
  })
  staleIpPermissionsEgress?: DescribeStaleSecurityGroupsResultStaleSecurityGroupSetStaleIpPermissionsEgress[];

  @SpeakeasyMetadata()
  vpcId?: string;
}

/**
 * Success
 */
export class DescribeStaleSecurityGroupsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType: DescribeStaleSecurityGroupsResultStaleSecurityGroupSet,
  })
  staleSecurityGroupSet?: DescribeStaleSecurityGroupsResultStaleSecurityGroupSet[];
}
