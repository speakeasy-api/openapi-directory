/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderProductTax } from "./orderproducttax";
import { Expose, Type } from "class-transformer";

export class OrderProduct extends SpeakeasyBase {
  /**
   * Discount of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "discount" })
  discount?: number;

  /**
   * Unique identifier of the original Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Image URL of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  image?: string;

  /**
   * Name of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Price of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: number;

  /**
   * Price of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "qty" })
  qty?: number;

  /**
   * Stock Keeping Unit of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  @SpeakeasyMetadata({ elemType: OrderProductTax })
  @Expose({ name: "taxes" })
  @Type(() => OrderProductTax)
  taxes?: OrderProductTax[];

  /**
   * Unique identifier of the original Product Variant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variant_id" })
  variantId?: number;

  /**
   * Weight of the Order Product
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: number;
}
