/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * List of related resources to include in the response
 */
export enum FetchHealthProfileAnswersIncludeEnum {
  Patient = "patient",
}

export class FetchHealthProfileAnswersRequest extends SpeakeasyBase {
  /**
   * Comma-separated list of group ids. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[groups]",
  })
  filterGroups?: string;

  /**
   * Fitbit Plus organization id. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[organization]",
  })
  filterOrganization?: string;

  /**
   * Patient id to fetch healt profile answers. Note that one of the following filters must be specified: `filter[patient]`, `filter[group]`, or `filter[organization]`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter[patient]",
  })
  filterPatient?: string;

  /**
   * List of related resources to include in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=include",
  })
  include?: FetchHealthProfileAnswersIncludeEnum;

  /**
   * Page cursor
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[cursor]",
  })
  pageCursor?: string;

  /**
   * Page limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[limit]",
  })
  pageLimit?: number;

  /**
   * Page number
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[number]",
  })
  pageNumber?: number;

  /**
   * Page size
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[size]",
  })
  pageSize?: number;
}

export class FetchHealthProfileAnswersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fetchErrorResponse?: shared.FetchErrorResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  fetchHealthProfileAnswersResponse?: shared.FetchHealthProfileAnswersResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
