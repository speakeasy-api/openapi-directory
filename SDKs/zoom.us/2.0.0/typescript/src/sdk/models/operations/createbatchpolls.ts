/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Question type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
 */
export enum CreateBatchPollsApplicationJSONQuestionsTypeEnum {
  Single = "single",
  Multiple = "multiple",
}

export class CreateBatchPollsApplicationJSONQuestions extends SpeakeasyBase {
  /**
   * Possible answers for the question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answers" })
  answers?: string[];

  /**
   * Name of the question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Question type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreateBatchPollsApplicationJSONQuestionsTypeEnum;
}

/**
 * Batch Meeting poll object
 */
export class CreateBatchPollsApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CreateBatchPollsApplicationJSONQuestions })
  @Expose({ name: "questions" })
  @Type(() => CreateBatchPollsApplicationJSONQuestions)
  questions?: CreateBatchPollsApplicationJSONQuestions[];

  /**
   * Meeting Poll Title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class CreateBatchPollsRequest extends SpeakeasyBase {
  /**
   * Batch Meeting poll object
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateBatchPollsApplicationJSON;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=meetingId",
  })
  meetingId: string;
}

/**
 * Poll question and answer type.
 */
export enum CreateBatchPolls201ApplicationXMLPollsQuestionsTypeEnum {
  Single = "single",
  Multiple = "multiple",
}

export class CreateBatchPolls201ApplicationXMLPollsQuestions extends SpeakeasyBase {
  /**
   * Answers to questons
   */
  @SpeakeasyMetadata()
  answers?: string[];

  /**
   * Name of question.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Poll question and answer type.
   */
  @SpeakeasyMetadata()
  type?: CreateBatchPolls201ApplicationXMLPollsQuestionsTypeEnum;
}

/**
 * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
 */
export enum CreateBatchPolls201ApplicationXMLPollsStatusEnum {
  Notstart = "notstart",
  Started = "started",
  Ended = "ended",
  Sharing = "sharing",
}

export class CreateBatchPolls201ApplicationXMLPolls extends SpeakeasyBase {
  /**
   * Meeting Poll ID
   */
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata({
    elemType: CreateBatchPolls201ApplicationXMLPollsQuestions,
  })
  questions?: CreateBatchPolls201ApplicationXMLPollsQuestions[];

  /**
   * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
   */
  @SpeakeasyMetadata()
  status?: CreateBatchPolls201ApplicationXMLPollsStatusEnum;

  /**
   * Title for the Poll
   */
  @SpeakeasyMetadata()
  title?: string;
}

/**
 * **HTTP Status Code:** `201` <br>
 *
 * @remarks
 * Meeting Poll Created
 */
export class CreateBatchPolls201ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CreateBatchPolls201ApplicationXMLPolls })
  polls?: CreateBatchPolls201ApplicationXMLPolls[];
}

/**
 * Poll question and answer type.
 */
export enum CreateBatchPolls201ApplicationJSONPollsQuestionsTypeEnum {
  Single = "single",
  Multiple = "multiple",
}

export class CreateBatchPolls201ApplicationJSONPollsQuestions extends SpeakeasyBase {
  /**
   * Answers to questons
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answers" })
  answers?: string[];

  /**
   * Name of question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Poll question and answer type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreateBatchPolls201ApplicationJSONPollsQuestionsTypeEnum;
}

/**
 * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
 */
export enum CreateBatchPolls201ApplicationJSONPollsStatusEnum {
  Notstart = "notstart",
  Started = "started",
  Ended = "ended",
  Sharing = "sharing",
}

export class CreateBatchPolls201ApplicationJSONPolls extends SpeakeasyBase {
  /**
   * Meeting Poll ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({
    elemType: CreateBatchPolls201ApplicationJSONPollsQuestions,
  })
  @Expose({ name: "questions" })
  @Type(() => CreateBatchPolls201ApplicationJSONPollsQuestions)
  questions?: CreateBatchPolls201ApplicationJSONPollsQuestions[];

  /**
   * Status of the Meeting Poll:<br>`notstart` - Poll not started<br>`started` - Poll started<br>`ended` - Poll ended<br>`sharing` - Sharing poll results
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CreateBatchPolls201ApplicationJSONPollsStatusEnum;

  /**
   * Title for the Poll
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

/**
 * **HTTP Status Code:** `201` <br>
 *
 * @remarks
 * Meeting Poll Created
 */
export class CreateBatchPolls201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CreateBatchPolls201ApplicationJSONPolls })
  @Expose({ name: "polls" })
  @Type(() => CreateBatchPolls201ApplicationJSONPolls)
  polls?: CreateBatchPolls201ApplicationJSONPolls[];
}

export class CreateBatchPollsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `201` <br>
   *
   * @remarks
   * Meeting Poll Created
   */
  @SpeakeasyMetadata()
  createBatchPolls201ApplicationJSONObject?: CreateBatchPolls201ApplicationJSON;
}
