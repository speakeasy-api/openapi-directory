/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateInsightsAssessmentsCreateInsightsAssessmentsRequest {
    /**
     * The id of the Agent
     */
    @SpeakeasyMetadata("form:name=AgentId")
    public String agentId;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withAgentId(String agentId) {
        this.agentId = agentId;
        return this;
    }
    
    /**
     * The id of the answer selected by user
     */
    @SpeakeasyMetadata("form:name=AnswerId")
    public String answerId;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withAnswerId(String answerId) {
        this.answerId = answerId;
        return this;
    }
    
    /**
     * The answer text selected by user
     */
    @SpeakeasyMetadata("form:name=AnswerText")
    public String answerText;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withAnswerText(String answerText) {
        this.answerText = answerText;
        return this;
    }
    
    /**
     * The id of the category 
     */
    @SpeakeasyMetadata("form:name=CategoryId")
    public String categoryId;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withCategoryId(String categoryId) {
        this.categoryId = categoryId;
        return this;
    }
    
    /**
     * The name of the category
     */
    @SpeakeasyMetadata("form:name=CategoryName")
    public String categoryName;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withCategoryName(String categoryName) {
        this.categoryName = categoryName;
        return this;
    }
    
    /**
     * The question Id selected for assessment
     */
    @SpeakeasyMetadata("form:name=MetricId")
    public String metricId;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withMetricId(String metricId) {
        this.metricId = metricId;
        return this;
    }
    
    /**
     * The question name of the assessment
     */
    @SpeakeasyMetadata("form:name=MetricName")
    public String metricName;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withMetricName(String metricName) {
        this.metricName = metricName;
        return this;
    }
    
    /**
     * The offset of the conversation.
     */
    @SpeakeasyMetadata("form:name=Offset")
    public Double offset;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Questionnaire Id of the associated question
     */
    @SpeakeasyMetadata("form:name=QuestionnaireId")
    public String questionnaireId;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withQuestionnaireId(String questionnaireId) {
        this.questionnaireId = questionnaireId;
        return this;
    }
    
    /**
     * Segment Id of the conversation
     */
    @SpeakeasyMetadata("form:name=SegmentId")
    public String segmentId;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withSegmentId(String segmentId) {
        this.segmentId = segmentId;
        return this;
    }
    
    /**
     * Email of the user assessing conversation
     */
    @SpeakeasyMetadata("form:name=UserEmail")
    public String userEmail;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
    /**
     * Name of the user assessing conversation
     */
    @SpeakeasyMetadata("form:name=UserName")
    public String userName;
    public CreateInsightsAssessmentsCreateInsightsAssessmentsRequest withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
}
