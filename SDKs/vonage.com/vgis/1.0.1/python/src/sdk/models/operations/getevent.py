"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import event as shared_event
from typing import Optional


@dataclasses.dataclass
class GetEventRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the event"""  
    

@dataclasses.dataclass
class GetEventResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request: The client should not repeat the request without modifications"""  
    events: Optional[list[shared_event.Event]] = dataclasses.field(default=None)
    r"""Successful"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    