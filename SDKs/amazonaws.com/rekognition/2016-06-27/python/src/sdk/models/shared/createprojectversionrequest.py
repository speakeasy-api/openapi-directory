"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import outputconfig as shared_outputconfig
from ..shared import testingdata as shared_testingdata
from ..shared import trainingdata as shared_trainingdata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateProjectVersionRequest:
    
    output_config: shared_outputconfig.OutputConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputConfig') }})  
    project_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectArn') }})  
    version_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VersionName') }})  
    kms_key_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KmsKeyId'), 'exclude': lambda f: f is None }})  
    tags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    testing_data: Optional[shared_testingdata.TestingData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TestingData'), 'exclude': lambda f: f is None }})  
    training_data: Optional[shared_trainingdata.TrainingData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrainingData'), 'exclude': lambda f: f is None }})  
    