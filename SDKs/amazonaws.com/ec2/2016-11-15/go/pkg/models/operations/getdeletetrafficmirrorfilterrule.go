// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteTrafficMirrorFilterRuleActionEnum
type GETDeleteTrafficMirrorFilterRuleActionEnum string

const (
	GETDeleteTrafficMirrorFilterRuleActionEnumDeleteTrafficMirrorFilterRule GETDeleteTrafficMirrorFilterRuleActionEnum = "DeleteTrafficMirrorFilterRule"
)

func (e *GETDeleteTrafficMirrorFilterRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteTrafficMirrorFilterRule":
		*e = GETDeleteTrafficMirrorFilterRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTrafficMirrorFilterRuleActionEnum: %s", s)
	}
}

// GETDeleteTrafficMirrorFilterRuleVersionEnum
type GETDeleteTrafficMirrorFilterRuleVersionEnum string

const (
	GETDeleteTrafficMirrorFilterRuleVersionEnumTwoThousandAndSixteen1115 GETDeleteTrafficMirrorFilterRuleVersionEnum = "2016-11-15"
)

func (e *GETDeleteTrafficMirrorFilterRuleVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteTrafficMirrorFilterRuleVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTrafficMirrorFilterRuleVersionEnum: %s", s)
	}
}

type GETDeleteTrafficMirrorFilterRuleRequest struct {
	Action GETDeleteTrafficMirrorFilterRuleActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Traffic Mirror rule.
	TrafficMirrorFilterRuleID string                                      `queryParam:"style=form,explode=true,name=TrafficMirrorFilterRuleId"`
	Version                   GETDeleteTrafficMirrorFilterRuleVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm             *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteTrafficMirrorFilterRuleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
