// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type HookConfig struct {
	// The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
	ContentType *string                   `json:"content_type,omitempty"`
	Digest      *string                   `json:"digest,omitempty"`
	Email       *string                   `json:"email,omitempty"`
	InsecureSsl *WebhookConfigInsecureSsl `json:"insecure_ssl,omitempty"`
	Password    *string                   `json:"password,omitempty"`
	Room        *string                   `json:"room,omitempty"`
	// If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value for [delivery signature headers](https://docs.github.com/github-ae@latest/webhooks/event-payloads/#delivery-headers).
	Secret    *string `json:"secret,omitempty"`
	Subdomain *string `json:"subdomain,omitempty"`
	Token     *string `json:"token,omitempty"`
	// The URL to which the payloads will be delivered.
	URL *string `json:"url,omitempty"`
}

// Hook - Webhooks for repositories.
type Hook struct {
	// Determines whether the hook is actually triggered on pushes.
	Active        bool       `json:"active"`
	Config        HookConfig `json:"config"`
	CreatedAt     time.Time  `json:"created_at"`
	DeliveriesURL *string    `json:"deliveries_url,omitempty"`
	// Determines what events the hook is triggered for. Default: ['push'].
	Events []string `json:"events"`
	// Unique identifier of the webhook.
	ID           int64        `json:"id"`
	LastResponse HookResponse `json:"last_response"`
	// The name of a valid service, use 'web' for a webhook.
	Name      string    `json:"name"`
	PingURL   string    `json:"ping_url"`
	TestURL   string    `json:"test_url"`
	Type      string    `json:"type"`
	UpdatedAt time.Time `json:"updated_at"`
	URL       string    `json:"url"`
}
