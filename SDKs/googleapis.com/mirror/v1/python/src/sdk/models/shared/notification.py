"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import useraction as shared_useraction
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Notification:
    r"""A notification delivered by the API."""
    
    collection: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collection'), 'exclude': lambda f: f is None }})
    r"""The collection that generated the notification."""  
    item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemId'), 'exclude': lambda f: f is None }})
    r"""The ID of the item that generated the notification."""  
    operation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operation'), 'exclude': lambda f: f is None }})
    r"""The type of operation that generated the notification."""  
    user_actions: Optional[list[shared_useraction.UserAction]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userActions'), 'exclude': lambda f: f is None }})
    r"""A list of actions taken by the user that triggered the notification."""  
    user_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userToken'), 'exclude': lambda f: f is None }})
    r"""The user token provided by the service when it subscribed for notifications."""  
    verify_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifyToken'), 'exclude': lambda f: f is None }})
    r"""The secret verify token provided by the service when it subscribed for notifications."""  
    