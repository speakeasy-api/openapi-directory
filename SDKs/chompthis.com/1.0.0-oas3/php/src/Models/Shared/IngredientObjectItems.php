<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * IngredientObjectItems - An object containing information for this specific item.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class IngredientObjectItems
{
    /**
     * An object containing the multiplication factors to be used when calculating energy from macronutrients for a specific food.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsCalorieConversionFactor $calorieConversionFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('calorie_conversion_factor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsCalorieConversionFactor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IngredientObjectItemsCalorieConversionFactor $calorieConversionFactor = null;
    
    /**
     * $categories
     * 
     * @var ?array<string> $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $categories = null;
    
    /**
     * Common name associated with this item. These generally clarify what the item is (e.g. when the brand name is "BRAND's Spicy Enchilada" the common name may be "Chicken enchilada")
     * 
     * @var ?string $commonName
     */
	#[\JMS\Serializer\Annotation\SerializedName('common_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commonName = null;
    
    /**
     * An array of objects containing the constituent parts of a food (e.g. bone is a component of meat)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsComponents> $components
     */
	#[\JMS\Serializer\Annotation\SerializedName('components')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsComponents>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $components = null;
    
    /**
     * Comments on any unusual aspects of this item. Examples might include unusual aspects of the food overall
     * 
     * @var ?string $footnote
     */
	#[\JMS\Serializer\Annotation\SerializedName('footnote')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $footnote = null;
    
    /**
     * Item name as provided by brand owner or as shown on packaging
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * An array containing nutrient informatio objects for this food item
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsNutrients> $nutrients
     */
	#[\JMS\Serializer\Annotation\SerializedName('nutrients')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsNutrients>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nutrients = null;
    
    /**
     * An array of objects containing information on discrete amounts of a food found in this item
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsPortions> $portions
     */
	#[\JMS\Serializer\Annotation\SerializedName('portions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\IngredientObjectItemsPortions>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $portions = null;
    
    /**
     * The multiplication factor used to calculate protein from nitrogen
     * 
     * @var ?float $proteinConversionFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('protein_conversion_factor')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $proteinConversionFactor = null;
    
    /**
     * A value that represents how similar the name of this food item is to the original search term. The lower the value the closer this item's name is to the original search term.
     * 
     * @var ?string $score
     */
	#[\JMS\Serializer\Annotation\SerializedName('score')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $score = null;
    
    /**
     * The original search term that found this food item
     * 
     * @var ?string $searchTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('search_term')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $searchTerm = null;
    
	public function __construct()
	{
		$this->calorieConversionFactor = null;
		$this->categories = null;
		$this->commonName = null;
		$this->components = null;
		$this->footnote = null;
		$this->name = null;
		$this->nutrients = null;
		$this->portions = null;
		$this->proteinConversionFactor = null;
		$this->score = null;
		$this->searchTerm = null;
	}
}
