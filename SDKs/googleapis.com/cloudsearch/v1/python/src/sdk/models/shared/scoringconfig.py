"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScoringConfig:
    r"""Scoring configurations for a source while processing a Search or Suggest request."""
    
    disable_freshness: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableFreshness'), 'exclude': lambda f: f is None }})
    r"""Whether to use freshness as a ranking signal. By default, freshness is used as a ranking signal. Note that this setting is not available in the Admin UI."""  
    disable_personalization: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disablePersonalization'), 'exclude': lambda f: f is None }})
    r"""Whether to personalize the results. By default, personal signals will be used to boost results."""  
    