// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateRecommenderXAmzTargetEnum
type UpdateRecommenderXAmzTargetEnum string

const (
	UpdateRecommenderXAmzTargetEnumAmazonPersonalizeUpdateRecommender UpdateRecommenderXAmzTargetEnum = "AmazonPersonalize.UpdateRecommender"
)

func (e UpdateRecommenderXAmzTargetEnum) ToPointer() *UpdateRecommenderXAmzTargetEnum {
	return &e
}

func (e *UpdateRecommenderXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonPersonalize.UpdateRecommender":
		*e = UpdateRecommenderXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateRecommenderXAmzTargetEnum: %v", v)
	}
}

type UpdateRecommenderRequest struct {
	UpdateRecommenderRequest shared.UpdateRecommenderRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               UpdateRecommenderXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateRecommenderResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateRecommenderResponse *shared.UpdateRecommenderResponse
}
