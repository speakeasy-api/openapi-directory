/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class FunctionsCreateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Key",
  })
  key: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-Appwrite-Project",
  })
  project: string;
}

export class FunctionsCreateRequestBody extends SpeakeasyBase {
  /**
   * Events list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: string[];

  /**
   * An array of strings with execution permissions. By default no user is granted with any execute permissions. [learn more about permissions](/docs/permissions) and get a full list of available permissions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "execute" })
  execute: string[];

  /**
   * Function name. Max length: 128 chars.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Execution runtime.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "runtime" })
  runtime: string;

  /**
   * Schedule CRON syntax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  schedule?: string;

  /**
   * Function maximum execution time in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout?: number;

  /**
   * Key-value JSON object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vars" })
  vars?: Record<string, any>;
}

export class FunctionsCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Function
   */
  @SpeakeasyMetadata()
  function?: shared.FunctionT;
}
