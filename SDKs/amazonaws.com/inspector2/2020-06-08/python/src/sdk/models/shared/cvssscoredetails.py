"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cvssscoreadjustment as shared_cvssscoreadjustment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CvssScoreDetails:
    r"""Information about the CVSS score."""
    
    score: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('score') }})  
    score_source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoreSource') }})  
    scoring_vector: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scoringVector') }})  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})  
    adjustments: Optional[list[shared_cvssscoreadjustment.CvssScoreAdjustment]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustments'), 'exclude': lambda f: f is None }})  
    cvss_source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cvssSource'), 'exclude': lambda f: f is None }})  
    