// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartDeliveryStreamEncryptionXAmzTargetEnum
type StartDeliveryStreamEncryptionXAmzTargetEnum string

const (
	StartDeliveryStreamEncryptionXAmzTargetEnumFirehose20150804StartDeliveryStreamEncryption StartDeliveryStreamEncryptionXAmzTargetEnum = "Firehose_20150804.StartDeliveryStreamEncryption"
)

func (e StartDeliveryStreamEncryptionXAmzTargetEnum) ToPointer() *StartDeliveryStreamEncryptionXAmzTargetEnum {
	return &e
}

func (e *StartDeliveryStreamEncryptionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Firehose_20150804.StartDeliveryStreamEncryption":
		*e = StartDeliveryStreamEncryptionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartDeliveryStreamEncryptionXAmzTargetEnum: %v", v)
	}
}

type StartDeliveryStreamEncryptionRequest struct {
	StartDeliveryStreamEncryptionInput shared.StartDeliveryStreamEncryptionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         StartDeliveryStreamEncryptionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartDeliveryStreamEncryptionResponse struct {
	ContentType string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidKMSResourceException
	InvalidKMSResourceException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartDeliveryStreamEncryptionOutput map[string]interface{}
	StatusCode                          int
	RawResponse                         *http.Response
}
