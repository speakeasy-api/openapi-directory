// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateConnectionAliasXAmzTargetEnum
type AssociateConnectionAliasXAmzTargetEnum string

const (
	AssociateConnectionAliasXAmzTargetEnumWorkspacesServiceAssociateConnectionAlias AssociateConnectionAliasXAmzTargetEnum = "WorkspacesService.AssociateConnectionAlias"
)

func (e AssociateConnectionAliasXAmzTargetEnum) ToPointer() *AssociateConnectionAliasXAmzTargetEnum {
	return &e
}

func (e *AssociateConnectionAliasXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.AssociateConnectionAlias":
		*e = AssociateConnectionAliasXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateConnectionAliasXAmzTargetEnum: %v", v)
	}
}

type AssociateConnectionAliasRequest struct {
	AssociateConnectionAliasRequest shared.AssociateConnectionAliasRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      AssociateConnectionAliasXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateConnectionAliasResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	AssociateConnectionAliasResult *shared.AssociateConnectionAliasResult
	ContentType                    string
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceAssociatedException
	ResourceAssociatedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
