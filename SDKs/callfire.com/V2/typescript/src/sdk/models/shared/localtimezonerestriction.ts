/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * ~
 */
export class LocalTimeZoneRestriction extends SpeakeasyBase {
  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stopTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopTime?: Date;
}
