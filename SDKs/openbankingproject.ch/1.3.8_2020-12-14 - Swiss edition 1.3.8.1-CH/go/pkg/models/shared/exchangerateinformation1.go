// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ExchangeRateInformation1RateTypeEnum string

const (
	ExchangeRateInformation1RateTypeEnumSpot ExchangeRateInformation1RateTypeEnum = "SPOT"
	ExchangeRateInformation1RateTypeEnumSale ExchangeRateInformation1RateTypeEnum = "SALE"
	ExchangeRateInformation1RateTypeEnumAgrd ExchangeRateInformation1RateTypeEnum = "AGRD"
)

func (e ExchangeRateInformation1RateTypeEnum) ToPointer() *ExchangeRateInformation1RateTypeEnum {
	return &e
}

func (e *ExchangeRateInformation1RateTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SPOT":
		fallthrough
	case "SALE":
		fallthrough
	case "AGRD":
		*e = ExchangeRateInformation1RateTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExchangeRateInformation1RateTypeEnum: %v", v)
	}
}

// ExchangeRateInformation1 - as in ISO pain.001.001.03.ch.02 ExchangeRateInformation1
type ExchangeRateInformation1 struct {
	ContractIdentification *string                               `json:"contractIdentification,omitempty"`
	ExchangeRate           *string                               `json:"exchangeRate,omitempty"`
	RateType               *ExchangeRateInformation1RateTypeEnum `json:"rateType,omitempty"`
}
