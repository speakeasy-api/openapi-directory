// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type InstallationGhes2Permissions struct {
	Checks                     *string `json:"checks,omitempty"`
	Contents                   *string `json:"contents,omitempty"`
	Deployments                *string `json:"deployments,omitempty"`
	Issues                     *string `json:"issues,omitempty"`
	Metadata                   *string `json:"metadata,omitempty"`
	OrganizationAdministration *string `json:"organization_administration,omitempty"`
	PullRequests               *string `json:"pull_requests,omitempty"`
	Statuses                   *string `json:"statuses,omitempty"`
}

// InstallationGhes2RepositorySelectionEnum - Describe whether all repositories have been selected or there's a selection involved
type InstallationGhes2RepositorySelectionEnum string

const (
	InstallationGhes2RepositorySelectionEnumAll      InstallationGhes2RepositorySelectionEnum = "all"
	InstallationGhes2RepositorySelectionEnumSelected InstallationGhes2RepositorySelectionEnum = "selected"
)

func (e *InstallationGhes2RepositorySelectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "selected":
		*e = InstallationGhes2RepositorySelectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstallationGhes2RepositorySelectionEnum: %s", s)
	}
}

// InstallationGhes2 - Installation
type InstallationGhes2 struct {
	AccessTokensURL string      `json:"access_tokens_url"`
	Account         interface{} `json:"account"`
	AppID           int64       `json:"app_id"`
	AppSlug         string      `json:"app_slug"`
	ContactEmail    *string     `json:"contact_email,omitempty"`
	CreatedAt       time.Time   `json:"created_at"`
	Events          []string    `json:"events"`
	HTMLURL         string      `json:"html_url"`
	// The ID of the installation.
	ID              int64                        `json:"id"`
	Permissions     InstallationGhes2Permissions `json:"permissions"`
	RepositoriesURL string                       `json:"repositories_url"`
	// Describe whether all repositories have been selected or there's a selection involved
	RepositorySelection InstallationGhes2RepositorySelectionEnum `json:"repository_selection"`
	SingleFileName      string                                   `json:"single_file_name"`
	SuspendedAt         *time.Time                               `json:"suspended_at,omitempty"`
	// Simple User
	SuspendedBy *NullableSimpleUser `json:"suspended_by,omitempty"`
	// The ID of the user or organization this token is being scoped to.
	TargetID   int64     `json:"target_id"`
	TargetType string    `json:"target_type"`
	UpdatedAt  time.Time `json:"updated_at"`
}
