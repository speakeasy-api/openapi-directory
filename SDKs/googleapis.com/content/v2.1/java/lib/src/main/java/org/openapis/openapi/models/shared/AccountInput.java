/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountInput - Account data. After the creation of a new account it may take a few minutes before it's fully operational. The methods delete, insert, and update require the admin role.
 */
public class AccountInput {
    /**
     * Linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the Ads interface or through the Google Ads API. To delete an active link, or to cancel a link request, remove it from the list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adsLinks")
    public AccountAdsLink[] adsLinks;

    public AccountInput withAdsLinks(AccountAdsLink[] adsLinks) {
        this.adsLinks = adsLinks;
        return this;
    }
    
    /**
     * Indicates whether the merchant sells adult content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adultContent")
    public Boolean adultContent;

    public AccountInput withAdultContent(Boolean adultContent) {
        this.adultContent = adultContent;
        return this;
    }
    
    /**
     * The automatic improvements of the account can be used to automatically update items, improve images and shipping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automaticImprovements")
    public AccountAutomaticImprovementsInput automaticImprovements;

    public AccountInput withAutomaticImprovements(AccountAutomaticImprovementsInput automaticImprovements) {
        this.automaticImprovements = automaticImprovements;
        return this;
    }
    
    /**
     * Automatically created label IDs that are assigned to the account by CSS Center.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automaticLabelIds")
    public String[] automaticLabelIds;

    public AccountInput withAutomaticLabelIds(String[] automaticLabelIds) {
        this.automaticLabelIds = automaticLabelIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessInformation")
    public AccountBusinessInformation businessInformation;

    public AccountInput withBusinessInformation(AccountBusinessInformation businessInformation) {
        this.businessInformation = businessInformation;
        return this;
    }
    
    /**
     * Settings for conversion tracking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversionSettings")
    public AccountConversionSettings conversionSettings;

    public AccountInput withConversionSettings(AccountConversionSettings conversionSettings) {
        this.conversionSettings = conversionSettings;
        return this;
    }
    
    /**
     * ID of CSS the account belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cssId")
    public String cssId;

    public AccountInput withCssId(String cssId) {
        this.cssId = cssId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googleMyBusinessLink")
    public AccountGoogleMyBusinessLink googleMyBusinessLink;

    public AccountInput withGoogleMyBusinessLink(AccountGoogleMyBusinessLink googleMyBusinessLink) {
        this.googleMyBusinessLink = googleMyBusinessLink;
        return this;
    }
    
    /**
     * Required. 64-bit Merchant Center account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public AccountInput withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "`content#account`".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public AccountInput withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Manually created label IDs that are assigned to the account by CSS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelIds")
    public String[] labelIds;

    public AccountInput withLabelIds(String[] labelIds) {
        this.labelIds = labelIds;
        return this;
    }
    
    /**
     * Required. Display name for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public AccountInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Client-specific, locally-unique, internal ID for the child account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerId")
    public String sellerId;

    public AccountInput withSellerId(String sellerId) {
        this.sellerId = sellerId;
        return this;
    }
    
    /**
     * Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("users")
    public AccountUser[] users;

    public AccountInput withUsers(AccountUser[] users) {
        this.users = users;
        return this;
    }
    
    /**
     * The merchant's website.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("websiteUrl")
    public String websiteUrl;

    public AccountInput withWebsiteUrl(String websiteUrl) {
        this.websiteUrl = websiteUrl;
        return this;
    }
    
    /**
     * Linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("youtubeChannelLinks")
    public AccountYouTubeChannelLink[] youtubeChannelLinks;

    public AccountInput withYoutubeChannelLinks(AccountYouTubeChannelLink[] youtubeChannelLinks) {
        this.youtubeChannelLinks = youtubeChannelLinks;
        return this;
    }
    
    public AccountInput(){}
}
