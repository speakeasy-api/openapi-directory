/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Aggregate status of Agent components.
 */
export class UpdateAgentStatusRequestBodyAggregateStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "signatureMap" })
  signatureMap?: Record<string, boolean>;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: shared.AgentStatusEnum;
}

export class UpdateAgentStatusRequestBody extends SpeakeasyBase {
  /**
   * Aggregate status of Agent components.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregateStatus" })
  @Type(() => UpdateAgentStatusRequestBodyAggregateStatus)
  aggregateStatus: UpdateAgentStatusRequestBodyAggregateStatus;

  /**
   * List of component statuses for agent.
   */
  @SpeakeasyMetadata({ elemType: shared.ComponentStatusData })
  @Expose({ name: "componentStatuses" })
  @Type(() => shared.ComponentStatusData)
  componentStatuses: shared.ComponentStatusData[];

  /**
   * GUID of agent task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskId" })
  taskId: string;
}

export class UpdateAgentStatusRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateAgentStatusRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * UUID of agent to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=agentId",
  })
  agentId: string;
}

export class UpdateAgentStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * DependencyException
   */
  @SpeakeasyMetadata()
  dependencyException?: any;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateAgentStatusResponse?: shared.UpdateAgentStatusResponse;
}
