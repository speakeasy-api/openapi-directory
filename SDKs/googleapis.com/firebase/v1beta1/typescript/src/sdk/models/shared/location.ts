/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum LocationFeaturesEnum {
  LocationFeatureUnspecified = "LOCATION_FEATURE_UNSPECIFIED",
  Firestore = "FIRESTORE",
  DefaultStorage = "DEFAULT_STORAGE",
  Functions = "FUNCTIONS",
}

/**
 * Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication.
 */
export enum LocationTypeEnum {
  LocationTypeUnspecified = "LOCATION_TYPE_UNSPECIFIED",
  Regional = "REGIONAL",
  MultiRegional = "MULTI_REGIONAL",
}

/**
 * A GCP resource location that can be selected for a FirebaseProject.
 */
export class Location extends SpeakeasyBase {
  /**
   * Products and services that are available in the GCP resource location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "features" })
  features?: LocationFeaturesEnum[];

  /**
   * The ID of the GCP resource location. It will be one of the available [GCP resource locations](https://firebase.google.com/docs/projects/locations#types).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;

  /**
   * Indicates whether the GCP resource location is a [regional or multi-regional location](https://firebase.google.com/docs/projects/locations#types) for data replication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: LocationTypeEnum;
}
