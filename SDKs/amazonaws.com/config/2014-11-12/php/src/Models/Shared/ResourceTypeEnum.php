<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


enum ResourceTypeEnum: string
{
    case AWS_EC2_CUSTOMER_GATEWAY = 'AWS::EC2::CustomerGateway';
    case AWS_EC2_EIP = 'AWS::EC2::EIP';
    case AWS_EC2_HOST = 'AWS::EC2::Host';
    case AWS_EC2_INSTANCE = 'AWS::EC2::Instance';
    case AWS_EC2_INTERNET_GATEWAY = 'AWS::EC2::InternetGateway';
    case AWS_EC2_NETWORK_ACL = 'AWS::EC2::NetworkAcl';
    case AWS_EC2_NETWORK_INTERFACE = 'AWS::EC2::NetworkInterface';
    case AWS_EC2_ROUTE_TABLE = 'AWS::EC2::RouteTable';
    case AWS_EC2_SECURITY_GROUP = 'AWS::EC2::SecurityGroup';
    case AWS_EC2_SUBNET = 'AWS::EC2::Subnet';
    case AWS_CLOUD_TRAIL_TRAIL = 'AWS::CloudTrail::Trail';
    case AWS_EC2_VOLUME = 'AWS::EC2::Volume';
    case AWS_EC2_VPC = 'AWS::EC2::VPC';
    case AWS_EC2_VPN_CONNECTION = 'AWS::EC2::VPNConnection';
    case AWS_EC2_VPN_GATEWAY = 'AWS::EC2::VPNGateway';
    case AWS_EC2_REGISTERED_HA_INSTANCE = 'AWS::EC2::RegisteredHAInstance';
    case AWS_EC2_NAT_GATEWAY = 'AWS::EC2::NatGateway';
    case AWS_EC2_EGRESS_ONLY_INTERNET_GATEWAY = 'AWS::EC2::EgressOnlyInternetGateway';
    case AWS_EC2_VPC_ENDPOINT = 'AWS::EC2::VPCEndpoint';
    case AWS_EC2_VPC_ENDPOINT_SERVICE = 'AWS::EC2::VPCEndpointService';
    case AWS_EC2_FLOW_LOG = 'AWS::EC2::FlowLog';
    case AWS_EC2_VPC_PEERING_CONNECTION = 'AWS::EC2::VPCPeeringConnection';
    case AWS_ELASTICSEARCH_DOMAIN = 'AWS::Elasticsearch::Domain';
    case AWSIAM_GROUP = 'AWS::IAM::Group';
    case AWSIAM_POLICY = 'AWS::IAM::Policy';
    case AWSIAM_ROLE = 'AWS::IAM::Role';
    case AWSIAM_USER = 'AWS::IAM::User';
    case AWS_ELASTIC_LOAD_BALANCING_V2_LOAD_BALANCER = 'AWS::ElasticLoadBalancingV2::LoadBalancer';
    case AWSACM_CERTIFICATE = 'AWS::ACM::Certificate';
    case AWSRDSDB_INSTANCE = 'AWS::RDS::DBInstance';
    case AWSRDSDB_SUBNET_GROUP = 'AWS::RDS::DBSubnetGroup';
    case AWSRDSDB_SECURITY_GROUP = 'AWS::RDS::DBSecurityGroup';
    case AWSRDSDB_SNAPSHOT = 'AWS::RDS::DBSnapshot';
    case AWSRDSDB_CLUSTER = 'AWS::RDS::DBCluster';
    case AWSRDSDB_CLUSTER_SNAPSHOT = 'AWS::RDS::DBClusterSnapshot';
    case AWSRDS_EVENT_SUBSCRIPTION = 'AWS::RDS::EventSubscription';
    case AWSS3_BUCKET = 'AWS::S3::Bucket';
    case AWSS3_ACCOUNT_PUBLIC_ACCESS_BLOCK = 'AWS::S3::AccountPublicAccessBlock';
    case AWS_REDSHIFT_CLUSTER = 'AWS::Redshift::Cluster';
    case AWS_REDSHIFT_CLUSTER_SNAPSHOT = 'AWS::Redshift::ClusterSnapshot';
    case AWS_REDSHIFT_CLUSTER_PARAMETER_GROUP = 'AWS::Redshift::ClusterParameterGroup';
    case AWS_REDSHIFT_CLUSTER_SECURITY_GROUP = 'AWS::Redshift::ClusterSecurityGroup';
    case AWS_REDSHIFT_CLUSTER_SUBNET_GROUP = 'AWS::Redshift::ClusterSubnetGroup';
    case AWS_REDSHIFT_EVENT_SUBSCRIPTION = 'AWS::Redshift::EventSubscription';
    case AWSSSM_MANAGED_INSTANCE_INVENTORY = 'AWS::SSM::ManagedInstanceInventory';
    case AWS_CLOUD_WATCH_ALARM = 'AWS::CloudWatch::Alarm';
    case AWS_CLOUD_FORMATION_STACK = 'AWS::CloudFormation::Stack';
    case AWS_ELASTIC_LOAD_BALANCING_LOAD_BALANCER = 'AWS::ElasticLoadBalancing::LoadBalancer';
    case AWS_AUTO_SCALING_AUTO_SCALING_GROUP = 'AWS::AutoScaling::AutoScalingGroup';
    case AWS_AUTO_SCALING_LAUNCH_CONFIGURATION = 'AWS::AutoScaling::LaunchConfiguration';
    case AWS_AUTO_SCALING_SCALING_POLICY = 'AWS::AutoScaling::ScalingPolicy';
    case AWS_AUTO_SCALING_SCHEDULED_ACTION = 'AWS::AutoScaling::ScheduledAction';
    case AWS_DYNAMO_DB_TABLE = 'AWS::DynamoDB::Table';
    case AWS_CODE_BUILD_PROJECT = 'AWS::CodeBuild::Project';
    case AWSWAF_RATE_BASED_RULE = 'AWS::WAF::RateBasedRule';
    case AWSWAF_RULE = 'AWS::WAF::Rule';
    case AWSWAF_RULE_GROUP = 'AWS::WAF::RuleGroup';
    case AWSWAF_WEB_ACL = 'AWS::WAF::WebACL';
    case AWSWAF_REGIONAL_RATE_BASED_RULE = 'AWS::WAFRegional::RateBasedRule';
    case AWSWAF_REGIONAL_RULE = 'AWS::WAFRegional::Rule';
    case AWSWAF_REGIONAL_RULE_GROUP = 'AWS::WAFRegional::RuleGroup';
    case AWSWAF_REGIONAL_WEB_ACL = 'AWS::WAFRegional::WebACL';
    case AWS_CLOUD_FRONT_DISTRIBUTION = 'AWS::CloudFront::Distribution';
    case AWS_CLOUD_FRONT_STREAMING_DISTRIBUTION = 'AWS::CloudFront::StreamingDistribution';
    case AWS_LAMBDA_FUNCTION = 'AWS::Lambda::Function';
    case AWS_NETWORK_FIREWALL_FIREWALL = 'AWS::NetworkFirewall::Firewall';
    case AWS_NETWORK_FIREWALL_FIREWALL_POLICY = 'AWS::NetworkFirewall::FirewallPolicy';
    case AWS_NETWORK_FIREWALL_RULE_GROUP = 'AWS::NetworkFirewall::RuleGroup';
    case AWS_ELASTIC_BEANSTALK_APPLICATION = 'AWS::ElasticBeanstalk::Application';
    case AWS_ELASTIC_BEANSTALK_APPLICATION_VERSION = 'AWS::ElasticBeanstalk::ApplicationVersion';
    case AWS_ELASTIC_BEANSTALK_ENVIRONMENT = 'AWS::ElasticBeanstalk::Environment';
    case AWSWA_FV2_WEB_ACL = 'AWS::WAFv2::WebACL';
    case AWSWA_FV2_RULE_GROUP = 'AWS::WAFv2::RuleGroup';
    case AWSWA_FV2_IP_SET = 'AWS::WAFv2::IPSet';
    case AWSWA_FV2_REGEX_PATTERN_SET = 'AWS::WAFv2::RegexPatternSet';
    case AWSWA_FV2_MANAGED_RULE_SET = 'AWS::WAFv2::ManagedRuleSet';
    case AWSX_RAY_ENCRYPTION_CONFIG = 'AWS::XRay::EncryptionConfig';
    case AWSSSM_ASSOCIATION_COMPLIANCE = 'AWS::SSM::AssociationCompliance';
    case AWSSSM_PATCH_COMPLIANCE = 'AWS::SSM::PatchCompliance';
    case AWS_SHIELD_PROTECTION = 'AWS::Shield::Protection';
    case AWS_SHIELD_REGIONAL_PROTECTION = 'AWS::ShieldRegional::Protection';
    case AWS_CONFIG_CONFORMANCE_PACK_COMPLIANCE = 'AWS::Config::ConformancePackCompliance';
    case AWS_CONFIG_RESOURCE_COMPLIANCE = 'AWS::Config::ResourceCompliance';
    case AWS_API_GATEWAY_STAGE = 'AWS::ApiGateway::Stage';
    case AWS_API_GATEWAY_REST_API = 'AWS::ApiGateway::RestApi';
    case AWS_API_GATEWAY_V2_STAGE = 'AWS::ApiGatewayV2::Stage';
    case AWS_API_GATEWAY_V2_API = 'AWS::ApiGatewayV2::Api';
    case AWS_CODE_PIPELINE_PIPELINE = 'AWS::CodePipeline::Pipeline';
    case AWS_SERVICE_CATALOG_CLOUD_FORMATION_PROVISIONED_PRODUCT = 'AWS::ServiceCatalog::CloudFormationProvisionedProduct';
    case AWS_SERVICE_CATALOG_CLOUD_FORMATION_PRODUCT = 'AWS::ServiceCatalog::CloudFormationProduct';
    case AWS_SERVICE_CATALOG_PORTFOLIO = 'AWS::ServiceCatalog::Portfolio';
    case AWSSQS_QUEUE = 'AWS::SQS::Queue';
    case AWSKMS_KEY = 'AWS::KMS::Key';
    case AWSQLDB_LEDGER = 'AWS::QLDB::Ledger';
    case AWS_SECRETS_MANAGER_SECRET = 'AWS::SecretsManager::Secret';
    case AWSSNS_TOPIC = 'AWS::SNS::Topic';
    case AWSSSM_FILE_DATA = 'AWS::SSM::FileData';
    case AWS_BACKUP_BACKUP_PLAN = 'AWS::Backup::BackupPlan';
    case AWS_BACKUP_BACKUP_SELECTION = 'AWS::Backup::BackupSelection';
    case AWS_BACKUP_BACKUP_VAULT = 'AWS::Backup::BackupVault';
    case AWS_BACKUP_RECOVERY_POINT = 'AWS::Backup::RecoveryPoint';
    case AWSECR_REPOSITORY = 'AWS::ECR::Repository';
    case AWSECS_CLUSTER = 'AWS::ECS::Cluster';
    case AWSECS_SERVICE = 'AWS::ECS::Service';
    case AWSECS_TASK_DEFINITION = 'AWS::ECS::TaskDefinition';
    case AWSEFS_ACCESS_POINT = 'AWS::EFS::AccessPoint';
    case AWSEFS_FILE_SYSTEM = 'AWS::EFS::FileSystem';
    case AWSEKS_CLUSTER = 'AWS::EKS::Cluster';
    case AWS_OPEN_SEARCH_DOMAIN = 'AWS::OpenSearch::Domain';
    case AWS_EC2_TRANSIT_GATEWAY = 'AWS::EC2::TransitGateway';
    case AWS_KINESIS_STREAM = 'AWS::Kinesis::Stream';
    case AWS_KINESIS_STREAM_CONSUMER = 'AWS::Kinesis::StreamConsumer';
    case AWS_CODE_DEPLOY_APPLICATION = 'AWS::CodeDeploy::Application';
    case AWS_CODE_DEPLOY_DEPLOYMENT_CONFIG = 'AWS::CodeDeploy::DeploymentConfig';
    case AWS_CODE_DEPLOY_DEPLOYMENT_GROUP = 'AWS::CodeDeploy::DeploymentGroup';
    case AWS_EC2_LAUNCH_TEMPLATE = 'AWS::EC2::LaunchTemplate';
    case AWSECR_PUBLIC_REPOSITORY = 'AWS::ECR::PublicRepository';
    case AWS_GUARD_DUTY_DETECTOR = 'AWS::GuardDuty::Detector';
    case AWSEMR_SECURITY_CONFIGURATION = 'AWS::EMR::SecurityConfiguration';
    case AWS_SAGE_MAKER_CODE_REPOSITORY = 'AWS::SageMaker::CodeRepository';
    case AWS_ROUTE53_RESOLVER_RESOLVER_ENDPOINT = 'AWS::Route53Resolver::ResolverEndpoint';
    case AWS_ROUTE53_RESOLVER_RESOLVER_RULE = 'AWS::Route53Resolver::ResolverRule';
    case AWS_ROUTE53_RESOLVER_RESOLVER_RULE_ASSOCIATION = 'AWS::Route53Resolver::ResolverRuleAssociation';
    case AWSDMS_REPLICATION_SUBNET_GROUP = 'AWS::DMS::ReplicationSubnetGroup';
    case AWSDMS_EVENT_SUBSCRIPTION = 'AWS::DMS::EventSubscription';
    case AWSMSK_CLUSTER = 'AWS::MSK::Cluster';
    case AWS_STEP_FUNCTIONS_ACTIVITY = 'AWS::StepFunctions::Activity';
    case AWS_WORK_SPACES_WORKSPACE = 'AWS::WorkSpaces::Workspace';
    case AWS_WORK_SPACES_CONNECTION_ALIAS = 'AWS::WorkSpaces::ConnectionAlias';
    case AWS_SAGE_MAKER_MODEL = 'AWS::SageMaker::Model';
    case AWS_ELASTIC_LOAD_BALANCING_V2_LISTENER = 'AWS::ElasticLoadBalancingV2::Listener';
    case AWS_STEP_FUNCTIONS_STATE_MACHINE = 'AWS::StepFunctions::StateMachine';
    case AWS_BATCH_JOB_QUEUE = 'AWS::Batch::JobQueue';
    case AWS_BATCH_COMPUTE_ENVIRONMENT = 'AWS::Batch::ComputeEnvironment';
    case AWS_ACCESS_ANALYZER_ANALYZER = 'AWS::AccessAnalyzer::Analyzer';
    case AWS_ATHENA_WORK_GROUP = 'AWS::Athena::WorkGroup';
    case AWS_ATHENA_DATA_CATALOG = 'AWS::Athena::DataCatalog';
    case AWS_DETECTIVE_GRAPH = 'AWS::Detective::Graph';
    case AWS_GLOBAL_ACCELERATOR_ACCELERATOR = 'AWS::GlobalAccelerator::Accelerator';
    case AWS_GLOBAL_ACCELERATOR_ENDPOINT_GROUP = 'AWS::GlobalAccelerator::EndpointGroup';
    case AWS_GLOBAL_ACCELERATOR_LISTENER = 'AWS::GlobalAccelerator::Listener';
    case AWS_EC2_TRANSIT_GATEWAY_ATTACHMENT = 'AWS::EC2::TransitGatewayAttachment';
    case AWS_EC2_TRANSIT_GATEWAY_ROUTE_TABLE = 'AWS::EC2::TransitGatewayRouteTable';
    case AWSDMS_CERTIFICATE = 'AWS::DMS::Certificate';
    case AWS_APP_CONFIG_APPLICATION = 'AWS::AppConfig::Application';
    case AWS_APP_SYNC_GRAPH_QL_API = 'AWS::AppSync::GraphQLApi';
    case AWS_DATA_SYNC_LOCATION_SMB = 'AWS::DataSync::LocationSMB';
    case AWS_DATA_SYNC_LOCATION_F_SX_LUSTRE = 'AWS::DataSync::LocationFSxLustre';
    case AWS_DATA_SYNC_LOCATION_S3 = 'AWS::DataSync::LocationS3';
    case AWS_DATA_SYNC_LOCATION_EFS = 'AWS::DataSync::LocationEFS';
    case AWS_DATA_SYNC_TASK = 'AWS::DataSync::Task';
    case AWS_DATA_SYNC_LOCATION_NFS = 'AWS::DataSync::LocationNFS';
    case AWS_EC2_NETWORK_INSIGHTS_ACCESS_SCOPE_ANALYSIS = 'AWS::EC2::NetworkInsightsAccessScopeAnalysis';
    case AWSEKS_FARGATE_PROFILE = 'AWS::EKS::FargateProfile';
    case AWS_GLUE_JOB = 'AWS::Glue::Job';
    case AWS_GUARD_DUTY_THREAT_INTEL_SET = 'AWS::GuardDuty::ThreatIntelSet';
    case AWS_GUARD_DUTY_IP_SET = 'AWS::GuardDuty::IPSet';
    case AWS_SAGE_MAKER_WORKTEAM = 'AWS::SageMaker::Workteam';
    case AWS_SAGE_MAKER_NOTEBOOK_INSTANCE_LIFECYCLE_CONFIG = 'AWS::SageMaker::NotebookInstanceLifecycleConfig';
    case AWS_SERVICE_DISCOVERY_SERVICE = 'AWS::ServiceDiscovery::Service';
    case AWS_SERVICE_DISCOVERY_PUBLIC_DNS_NAMESPACE = 'AWS::ServiceDiscovery::PublicDnsNamespace';
    case AWSSES_CONTACT_LIST = 'AWS::SES::ContactList';
    case AWSSES_CONFIGURATION_SET = 'AWS::SES::ConfigurationSet';
    case AWS_ROUTE53_HOSTED_ZONE = 'AWS::Route53::HostedZone';
    case AWS_IO_T_EVENTS_INPUT = 'AWS::IoTEvents::Input';
    case AWS_IO_T_EVENTS_DETECTOR_MODEL = 'AWS::IoTEvents::DetectorModel';
    case AWS_IO_T_EVENTS_ALARM_MODEL = 'AWS::IoTEvents::AlarmModel';
    case AWS_SERVICE_DISCOVERY_HTTP_NAMESPACE = 'AWS::ServiceDiscovery::HttpNamespace';
    case AWS_EVENTS_EVENT_BUS = 'AWS::Events::EventBus';
    case AWS_IMAGE_BUILDER_CONTAINER_RECIPE = 'AWS::ImageBuilder::ContainerRecipe';
    case AWS_IMAGE_BUILDER_DISTRIBUTION_CONFIGURATION = 'AWS::ImageBuilder::DistributionConfiguration';
    case AWS_IMAGE_BUILDER_INFRASTRUCTURE_CONFIGURATION = 'AWS::ImageBuilder::InfrastructureConfiguration';
    case AWS_DATA_SYNC_LOCATION_OBJECT_STORAGE = 'AWS::DataSync::LocationObjectStorage';
    case AWS_DATA_SYNC_LOCATION_HDFS = 'AWS::DataSync::LocationHDFS';
    case AWS_GLUE_CLASSIFIER = 'AWS::Glue::Classifier';
    case AWS_ROUTE53_RECOVERY_READINESS_CELL = 'AWS::Route53RecoveryReadiness::Cell';
    case AWS_ROUTE53_RECOVERY_READINESS_READINESS_CHECK = 'AWS::Route53RecoveryReadiness::ReadinessCheck';
    case AWSECR_REGISTRY_POLICY = 'AWS::ECR::RegistryPolicy';
    case AWS_BACKUP_REPORT_PLAN = 'AWS::Backup::ReportPlan';
    case AWS_LIGHTSAIL_CERTIFICATE = 'AWS::Lightsail::Certificate';
    case AWSRUM_APP_MONITOR = 'AWS::RUM::AppMonitor';
    case AWS_EVENTS_ENDPOINT = 'AWS::Events::Endpoint';
    case AWSSES_RECEIPT_RULE_SET = 'AWS::SES::ReceiptRuleSet';
    case AWS_EVENTS_ARCHIVE = 'AWS::Events::Archive';
    case AWS_EVENTS_API_DESTINATION = 'AWS::Events::ApiDestination';
    case AWS_LIGHTSAIL_DISK = 'AWS::Lightsail::Disk';
    case AWSFIS_EXPERIMENT_TEMPLATE = 'AWS::FIS::ExperimentTemplate';
    case AWS_DATA_SYNC_LOCATION_F_SX_WINDOWS = 'AWS::DataSync::LocationFSxWindows';
    case AWSSES_RECEIPT_FILTER = 'AWS::SES::ReceiptFilter';
    case AWS_GUARD_DUTY_FILTER = 'AWS::GuardDuty::Filter';
    case AWSSES_TEMPLATE = 'AWS::SES::Template';
    case AWS_AMAZON_MQ_BROKER = 'AWS::AmazonMQ::Broker';
    case AWS_APP_CONFIG_ENVIRONMENT = 'AWS::AppConfig::Environment';
    case AWS_APP_CONFIG_CONFIGURATION_PROFILE = 'AWS::AppConfig::ConfigurationProfile';
    case AWS_CLOUD9_ENVIRONMENT_EC2 = 'AWS::Cloud9::EnvironmentEC2';
    case AWS_EVENT_SCHEMAS_REGISTRY = 'AWS::EventSchemas::Registry';
    case AWS_EVENT_SCHEMAS_REGISTRY_POLICY = 'AWS::EventSchemas::RegistryPolicy';
    case AWS_EVENT_SCHEMAS_DISCOVERER = 'AWS::EventSchemas::Discoverer';
    case AWS_FRAUD_DETECTOR_LABEL = 'AWS::FraudDetector::Label';
    case AWS_FRAUD_DETECTOR_ENTITY_TYPE = 'AWS::FraudDetector::EntityType';
    case AWS_FRAUD_DETECTOR_VARIABLE = 'AWS::FraudDetector::Variable';
    case AWS_FRAUD_DETECTOR_OUTCOME = 'AWS::FraudDetector::Outcome';
    case AWS_IO_T_AUTHORIZER = 'AWS::IoT::Authorizer';
    case AWS_IO_T_SECURITY_PROFILE = 'AWS::IoT::SecurityProfile';
    case AWS_IO_T_ROLE_ALIAS = 'AWS::IoT::RoleAlias';
    case AWS_IO_T_DIMENSION = 'AWS::IoT::Dimension';
    case AWS_IO_T_ANALYTICS_DATASTORE = 'AWS::IoTAnalytics::Datastore';
    case AWS_LIGHTSAIL_BUCKET = 'AWS::Lightsail::Bucket';
    case AWS_LIGHTSAIL_STATIC_IP = 'AWS::Lightsail::StaticIp';
    case AWS_MEDIA_PACKAGE_PACKAGING_GROUP = 'AWS::MediaPackage::PackagingGroup';
    case AWS_ROUTE53_RECOVERY_READINESS_RECOVERY_GROUP = 'AWS::Route53RecoveryReadiness::RecoveryGroup';
    case AWS_RESILIENCE_HUB_RESILIENCY_POLICY = 'AWS::ResilienceHub::ResiliencyPolicy';
    case AWS_TRANSFER_WORKFLOW = 'AWS::Transfer::Workflow';
    case AWSEKS_IDENTITY_PROVIDER_CONFIG = 'AWS::EKS::IdentityProviderConfig';
    case AWSEKS_ADDON = 'AWS::EKS::Addon';
    case AWS_GLUE_ML_TRANSFORM = 'AWS::Glue::MLTransform';
    case AWS_IO_T_POLICY = 'AWS::IoT::Policy';
    case AWS_IO_T_MITIGATION_ACTION = 'AWS::IoT::MitigationAction';
    case AWS_IO_T_TWIN_MAKER_WORKSPACE = 'AWS::IoTTwinMaker::Workspace';
    case AWS_IO_T_TWIN_MAKER_ENTITY = 'AWS::IoTTwinMaker::Entity';
    case AWS_IO_T_ANALYTICS_DATASET = 'AWS::IoTAnalytics::Dataset';
    case AWS_IO_T_ANALYTICS_PIPELINE = 'AWS::IoTAnalytics::Pipeline';
    case AWS_IO_T_ANALYTICS_CHANNEL = 'AWS::IoTAnalytics::Channel';
    case AWS_IO_T_SITE_WISE_DASHBOARD = 'AWS::IoTSiteWise::Dashboard';
    case AWS_IO_T_SITE_WISE_PROJECT = 'AWS::IoTSiteWise::Project';
    case AWS_IO_T_SITE_WISE_PORTAL = 'AWS::IoTSiteWise::Portal';
    case AWS_IO_T_SITE_WISE_ASSET_MODEL = 'AWS::IoTSiteWise::AssetModel';
    case AWSIVS_CHANNEL = 'AWS::IVS::Channel';
    case AWSIVS_RECORDING_CONFIGURATION = 'AWS::IVS::RecordingConfiguration';
    case AWSIVS_PLAYBACK_KEY_PAIR = 'AWS::IVS::PlaybackKeyPair';
    case AWS_KINESIS_ANALYTICS_V2_APPLICATION = 'AWS::KinesisAnalyticsV2::Application';
    case AWSRDS_GLOBAL_CLUSTER = 'AWS::RDS::GlobalCluster';
    case AWSS3_MULTI_REGION_ACCESS_POINT = 'AWS::S3::MultiRegionAccessPoint';
    case AWS_DEVICE_FARM_TEST_GRID_PROJECT = 'AWS::DeviceFarm::TestGridProject';
    case AWS_BUDGETS_BUDGETS_ACTION = 'AWS::Budgets::BudgetsAction';
    case AWS_LEX_BOT = 'AWS::Lex::Bot';
    case AWS_CODE_GURU_REVIEWER_REPOSITORY_ASSOCIATION = 'AWS::CodeGuruReviewer::RepositoryAssociation';
    case AWS_IO_T_CUSTOM_METRIC = 'AWS::IoT::CustomMetric';
    case AWS_ROUTE53_RESOLVER_FIREWALL_DOMAIN_LIST = 'AWS::Route53Resolver::FirewallDomainList';
    case AWS_ROBO_MAKER_ROBOT_APPLICATION_VERSION = 'AWS::RoboMaker::RobotApplicationVersion';
    case AWS_EC2_TRAFFIC_MIRROR_SESSION = 'AWS::EC2::TrafficMirrorSession';
    case AWS_IO_T_SITE_WISE_GATEWAY = 'AWS::IoTSiteWise::Gateway';
    case AWS_LEX_BOT_ALIAS = 'AWS::Lex::BotAlias';
    case AWS_LOOKOUT_METRICS_ALERT = 'AWS::LookoutMetrics::Alert';
    case AWS_IO_T_ACCOUNT_AUDIT_CONFIGURATION = 'AWS::IoT::AccountAuditConfiguration';
    case AWS_EC2_TRAFFIC_MIRROR_TARGET = 'AWS::EC2::TrafficMirrorTarget';
    case AWSS3_STORAGE_LENS = 'AWS::S3::StorageLens';
    case AWS_IO_T_SCHEDULED_AUDIT = 'AWS::IoT::ScheduledAudit';
    case AWS_EVENTS_CONNECTION = 'AWS::Events::Connection';
    case AWS_EVENT_SCHEMAS_SCHEMA = 'AWS::EventSchemas::Schema';
    case AWS_MEDIA_PACKAGE_PACKAGING_CONFIGURATION = 'AWS::MediaPackage::PackagingConfiguration';
}
