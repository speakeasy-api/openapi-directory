/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllowsUnencryptedObjectUploadsEnum } from "./allowsunencryptedobjectuploadsenum";
import { BucketPublicAccess } from "./bucketpublicaccess";
import { KeyValuePair } from "./keyvaluepair";
import { S3BucketOwner } from "./s3bucketowner";
import { ServerSideEncryption } from "./serversideencryption";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides information about the S3 bucket that a finding applies to.
 */
export class S3Bucket extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowsUnencryptedObjectUploads" })
  allowsUnencryptedObjectUploads?: AllowsUnencryptedObjectUploadsEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultServerSideEncryption" })
  @Type(() => ServerSideEncryption)
  defaultServerSideEncryption?: ServerSideEncryption;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => S3BucketOwner)
  owner?: S3BucketOwner;

  @SpeakeasyMetadata()
  @Expose({ name: "publicAccess" })
  @Type(() => BucketPublicAccess)
  publicAccess?: BucketPublicAccess;

  @SpeakeasyMetadata({ elemType: KeyValuePair })
  @Expose({ name: "tags" })
  @Type(() => KeyValuePair)
  tags?: KeyValuePair[];
}
