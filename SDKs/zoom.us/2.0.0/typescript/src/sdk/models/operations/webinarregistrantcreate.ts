/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class WebinarRegistrantCreateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Custom Question.
 */
export class WebinarRegistrantCreateApplicationJSONCustomQuestions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Registrant base object.
 */
export class WebinarRegistrantCreateApplicationJSON extends SpeakeasyBase {
  /**
   * Registrant's address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Registrant's city.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * A field that allows registrants to provide any questions or comments that they might have.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  /**
   * Registrant's country. The value of this field must be in two-letter abbreviated form and must match the ID field provided in the [Countries](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Custom questions.
   */
  @SpeakeasyMetadata({
    elemType: WebinarRegistrantCreateApplicationJSONCustomQuestions,
  })
  @Expose({ name: "custom_questions" })
  @Type(() => WebinarRegistrantCreateApplicationJSONCustomQuestions)
  customQuestions?: WebinarRegistrantCreateApplicationJSONCustomQuestions[];

  /**
   * A valid email address of the registrant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * Registrant's first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName: string;

  /**
   * Registrant's Industry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "industry" })
  industry?: string;

  /**
   * Registrant's job title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title" })
  jobTitle?: string;

  /**
   * Registrant's last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * Number of Employees:<br>`1-20`<br>`21-50`<br>`51-100`<br>`101-500`<br>`500-1,000`<br>`1,001-5,000`<br>`5,001-10,000`<br>`More than 10,000`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "no_of_employees" })
  noOfEmployees?: string;

  /**
   * Registrant's Organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "org" })
  org?: string;

  /**
   * Registrant's Phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * This field can be included to gauge interest of webinar attendees towards buying your product or service.
   *
   * @remarks
   *
   * Purchasing Time Frame:<br>`Within a month`<br>`1-3 months`<br>`4-6 months`<br>`More than 6 months`<br>`No timeframe`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "purchasing_time_frame" })
  purchasingTimeFrame?: string;

  /**
   * Role in Purchase Process:<br>`Decision Maker`<br>`Evaluator/Recommender`<br>`Influencer`<br>`Not involved`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role_in_purchase_process" })
  roleInPurchaseProcess?: string;

  /**
   * Registrant's State/Province.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Registrant's Zip/Postal Code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zip" })
  zip?: string;
}

export class WebinarRegistrantCreateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: WebinarRegistrantCreateApplicationJSON;

  /**
   * Occurrence ID. Get this value from the webinar get API. Multiple values separated by a comma.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=occurrence_ids",
  })
  occurrenceIds?: string;

  /**
   * The webinar ID in "**long**" format(represented as int64 data type in JSON).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=webinarId",
  })
  webinarId: number;
}

/**
 * **HTTP Status Code:** `201`<br>
 *
 * @remarks
 * Registration created.
 */
export class WebinarRegistrantCreate201ApplicationXML extends SpeakeasyBase {
  /**
   * Webinar ID
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made.
   */
  @SpeakeasyMetadata()
  joinUrl?: string;

  /**
   * Registrant ID
   */
  @SpeakeasyMetadata()
  registrantId?: string;

  /**
   * Start time
   */
  @SpeakeasyMetadata()
  startTime?: Date;

  /**
   * Topic
   */
  @SpeakeasyMetadata()
  topic?: string;
}

/**
 * **HTTP Status Code:** `201`<br>
 *
 * @remarks
 * Registration created.
 */
export class WebinarRegistrantCreate201ApplicationJSON extends SpeakeasyBase {
  /**
   * Webinar ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Unique URL for this registrant to join the Webinar. This URL should only be shared with the registrant for whom the API request was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "join_url" })
  joinUrl?: string;

  /**
   * Registrant ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registrant_id" })
  registrantId?: string;

  /**
   * Start time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * Topic
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}

export class WebinarRegistrantCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `201`<br>
   *
   * @remarks
   * Registration created.
   */
  @SpeakeasyMetadata()
  webinarRegistrantCreate201ApplicationJSONObject?: WebinarRegistrantCreate201ApplicationJSON;
}
