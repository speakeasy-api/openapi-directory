// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntryPointParameterTypeEnum - The type of the parameter, indicating its location in the HTTP request.
type EntryPointParameterTypeEnum string

const (
	EntryPointParameterTypeEnumQuery  EntryPointParameterTypeEnum = "query"
	EntryPointParameterTypeEnumHeader EntryPointParameterTypeEnum = "header"
	EntryPointParameterTypeEnumURI    EntryPointParameterTypeEnum = "uri"
	EntryPointParameterTypeEnumPath   EntryPointParameterTypeEnum = "path"
	EntryPointParameterTypeEnumBody   EntryPointParameterTypeEnum = "body"
)

func (e *EntryPointParameterTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "query":
		fallthrough
	case "header":
		fallthrough
	case "uri":
		fallthrough
	case "path":
		fallthrough
	case "body":
		*e = EntryPointParameterTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryPointParameterTypeEnum: %s", s)
	}
}

type EntryPointParameter struct {
	// A short description of the parameter for use in the OSDB Action Console. Optional - may be null.
	Description string `json:"description"`
	// The parameter's display name in the OSDB Action Console. Optional - may be null.
	DisplayName string `json:"display_name"`
	// The parameter name as present in the HTTP request. e.g. the key name in a query string key-value pair.
	ParameterName string `json:"parameter_name"`
	// If the parameter accepts only a limited set of values, the allowed set of values. Null if not applicable.
	PermittedValues []string `json:"permitted_values"`
	// A flag indicating if the parameter is optional.
	Required int `json:"required"`
	// The type of the parameter, indicating its location in the HTTP request.
	Type EntryPointParameterTypeEnum `json:"type"`
}
