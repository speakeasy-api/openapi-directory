"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RestoreTableFromSnapshotRequest:
    
    namespace_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namespaceName') }})  
    new_table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newTableName') }})  
    snapshot_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snapshotName') }})  
    source_database_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceDatabaseName') }})  
    source_table_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceTableName') }})  
    workgroup_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workgroupName') }})  
    activate_case_sensitive_identifier: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activateCaseSensitiveIdentifier'), 'exclude': lambda f: f is None }})  
    source_schema_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceSchemaName'), 'exclude': lambda f: f is None }})  
    target_database_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetDatabaseName'), 'exclude': lambda f: f is None }})  
    target_schema_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetSchemaName'), 'exclude': lambda f: f is None }})  
    