/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * The role initiating this status change. Can be either 'developer' or 'administrator' (default)
 */
export enum PostAppsAppIdVersionsVersionStatusModifiedByEnum {
  Developer = "developer",
  Administrator = "administrator",
}

/**
 * The new status for this app. Can be either 'inReview', 'approved', 'suspended' or 'rejected'
 */
export enum PostAppsAppIdVersionsVersionStatusStatusEnum {
  InReview = "inReview",
  Approved = "approved",
  Suspended = "suspended",
  Rejected = "rejected",
}

export class PostAppsAppIdVersionsVersionStatusRequest extends SpeakeasyBase {
  /**
   * The id of the App to be updated
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appId",
  })
  appId: string;

  /**
   * The unique id of the developer that is modifying this app
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=developerId",
  })
  developerId?: string;

  /**
   * The role initiating this status change. Can be either 'developer' or 'administrator' (default)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=modifiedBy",
  })
  modifiedBy?: PostAppsAppIdVersionsVersionStatusModifiedByEnum;

  /**
   * The reason for this status change
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=reason",
  })
  reason?: string;

  /**
   * The new status for this app. Can be either 'inReview', 'approved', 'suspended' or 'rejected'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: PostAppsAppIdVersionsVersionStatusStatusEnum;

  /**
   * The version of the App to be updated
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=version",
  })
  version: number;
}

export class PostAppsAppIdVersionsVersionStatusResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
