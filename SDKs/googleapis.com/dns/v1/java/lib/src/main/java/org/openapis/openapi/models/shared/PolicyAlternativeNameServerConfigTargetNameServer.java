/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PolicyAlternativeNameServerConfigTargetNameServer {
    /**
     * Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forwardingPath")
    public PolicyAlternativeNameServerConfigTargetNameServerForwardingPathEnum forwardingPath;
    public PolicyAlternativeNameServerConfigTargetNameServer withForwardingPath(PolicyAlternativeNameServerConfigTargetNameServerForwardingPathEnum forwardingPath) {
        this.forwardingPath = forwardingPath;
        return this;
    }
    
    /**
     * IPv4 address to forward queries to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv4Address")
    public String ipv4Address;
    public PolicyAlternativeNameServerConfigTargetNameServer withIpv4Address(String ipv4Address) {
        this.ipv4Address = ipv4Address;
        return this;
    }
    
    /**
     * IPv6 address to forward to. Does not accept both fields (ipv4 &amp; ipv6) being populated. Public preview as of November 2022.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6Address")
    public String ipv6Address;
    public PolicyAlternativeNameServerConfigTargetNameServer withIpv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public PolicyAlternativeNameServerConfigTargetNameServer withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
}
