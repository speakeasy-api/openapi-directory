/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Print historical API usage.
 */
export class APIUsageAggregatedOut extends SpeakeasyBase {
  /**
   * apiServices as column headers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colHeaders" })
  colHeaders?: string[];

  /**
   * Data points : usage per DAY, WEEK or MONTH and per apiService
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: number[][];

  /**
   * If the history was truncaded due to data limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "historyTruncated" })
  historyTruncated?: boolean;

  /**
   * End datetime of the reporting period
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodEnd" })
  periodEnd?: number;

  /**
   * Start datetime of the reporting period
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodStart" })
  periodStart?: number;

  /**
   * dates as row headers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rowHeaders" })
  rowHeaders?: string[];

  /**
   * Time unit is DAY, WEEK or MONTH depending on prior usage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeUnit" })
  timeUnit?: string;

  /**
   * Total usage in the current period
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalUsage" })
  totalUsage?: number;
}
