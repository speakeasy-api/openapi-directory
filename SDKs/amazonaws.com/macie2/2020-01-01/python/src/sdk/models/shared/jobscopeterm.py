"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import simplescopeterm as shared_simplescopeterm
from ..shared import tagscopeterm as shared_tagscopeterm
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class JobScopeTerm:
    r"""Specifies a property- or tag-based condition that defines criteria for including or excluding S3 objects from a classification job. A JobScopeTerm object can contain only one simpleScopeTerm object or one tagScopeTerm object."""
    
    simple_scope_term: Optional[shared_simplescopeterm.SimpleScopeTerm] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('simpleScopeTerm'), 'exclude': lambda f: f is None }})  
    tag_scope_term: Optional[shared_tagscopeterm.TagScopeTerm] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagScopeTerm'), 'exclude': lambda f: f is None }})  
    