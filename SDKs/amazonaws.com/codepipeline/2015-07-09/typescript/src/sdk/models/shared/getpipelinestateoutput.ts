/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StageState } from "./stagestate";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents the output of a <code>GetPipelineState</code> action.
 */
export class GetPipelineStateOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineName" })
  pipelineName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pipelineVersion" })
  pipelineVersion?: number;

  @SpeakeasyMetadata({ elemType: StageState })
  @Expose({ name: "stageStates" })
  @Type(() => StageState)
  stageStates?: StageState[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;
}
