// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type BatchAssociateClientDeviceWithCoreDeviceRequestBody struct {
	// The list of client devices to associate.
	Entries []shared.AssociateClientDeviceWithCoreDeviceEntry `json:"entries,omitempty"`
}

type BatchAssociateClientDeviceWithCoreDeviceRequest struct {
	RequestBody       BatchAssociateClientDeviceWithCoreDeviceRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The name of the core device. This is also the name of the IoT thing.
	CoreDeviceThingName string `pathParam:"style=simple,explode=false,name=coreDeviceThingName"`
}

type BatchAssociateClientDeviceWithCoreDeviceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	BatchAssociateClientDeviceWithCoreDeviceResponse *shared.BatchAssociateClientDeviceWithCoreDeviceResponse
	ContentType                                      string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
