"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import datasource as shared_datasource
from ..shared import datasourcerefreshschedule as shared_datasourcerefreshschedule
from ..shared import developermetadata as shared_developermetadata
from ..shared import namedrange as shared_namedrange
from ..shared import sheet as shared_sheet
from ..shared import spreadsheetproperties as shared_spreadsheetproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Spreadsheet:
    r"""Resource that represents a spreadsheet."""
    
    data_sources: Optional[list[shared_datasource.DataSource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSources'), 'exclude': lambda f: f is None }})
    r"""A list of external data sources connected with the spreadsheet."""  
    data_source_schedules: Optional[list[shared_datasourcerefreshschedule.DataSourceRefreshSchedule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSourceSchedules'), 'exclude': lambda f: f is None }})
    r"""Output only. A list of data source refresh schedules."""  
    developer_metadata: Optional[list[shared_developermetadata.DeveloperMetadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('developerMetadata'), 'exclude': lambda f: f is None }})
    r"""The developer metadata associated with a spreadsheet."""  
    named_ranges: Optional[list[shared_namedrange.NamedRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namedRanges'), 'exclude': lambda f: f is None }})
    r"""The named ranges defined in a spreadsheet."""  
    properties: Optional[shared_spreadsheetproperties.SpreadsheetProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""Properties of a spreadsheet."""  
    sheets: Optional[list[shared_sheet.Sheet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sheets'), 'exclude': lambda f: f is None }})
    r"""The sheets that are part of a spreadsheet."""  
    spreadsheet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spreadsheetId'), 'exclude': lambda f: f is None }})
    r"""The ID of the spreadsheet. This field is read-only."""  
    spreadsheet_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spreadsheetUrl'), 'exclude': lambda f: f is None }})
    r"""The url of the spreadsheet. This field is read-only."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpreadsheetInput:
    r"""Resource that represents a spreadsheet."""
    
    data_sources: Optional[list[shared_datasource.DataSource]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSources'), 'exclude': lambda f: f is None }})
    r"""A list of external data sources connected with the spreadsheet."""  
    developer_metadata: Optional[list[shared_developermetadata.DeveloperMetadata]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('developerMetadata'), 'exclude': lambda f: f is None }})
    r"""The developer metadata associated with a spreadsheet."""  
    named_ranges: Optional[list[shared_namedrange.NamedRange]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namedRanges'), 'exclude': lambda f: f is None }})
    r"""The named ranges defined in a spreadsheet."""  
    properties: Optional[shared_spreadsheetproperties.SpreadsheetProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""Properties of a spreadsheet."""  
    sheets: Optional[list[shared_sheet.Sheet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sheets'), 'exclude': lambda f: f is None }})
    r"""The sheets that are part of a spreadsheet."""  
    spreadsheet_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spreadsheetId'), 'exclude': lambda f: f is None }})
    r"""The ID of the spreadsheet. This field is read-only."""  
    spreadsheet_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spreadsheetUrl'), 'exclude': lambda f: f is None }})
    r"""The url of the spreadsheet. This field is read-only."""  
    