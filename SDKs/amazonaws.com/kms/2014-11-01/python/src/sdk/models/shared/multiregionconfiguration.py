"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import multiregionkey as shared_multiregionkey
from ..shared import multiregionkeytype_enum as shared_multiregionkeytype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MultiRegionConfiguration:
    r"""<p>Describes the configuration of this multi-Region key. This field appears only when the KMS key is a primary or replica of a multi-Region key.</p> <p>For more information about any listed KMS key, use the <a>DescribeKey</a> operation.</p>"""
    
    multi_region_key_type: Optional[shared_multiregionkeytype_enum.MultiRegionKeyTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MultiRegionKeyType'), 'exclude': lambda f: f is None }})  
    primary_key: Optional[shared_multiregionkey.MultiRegionKey] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrimaryKey'), 'exclude': lambda f: f is None }})  
    replica_keys: Optional[list[shared_multiregionkey.MultiRegionKey]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReplicaKeys'), 'exclude': lambda f: f is None }})  
    