"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConcatenateExpression:
    r"""Used to combine dimension values to a single dimension."""
    
    delimiter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delimiter'), 'exclude': lambda f: f is None }})
    r"""The delimiter placed between dimension names. Delimiters are often single characters such as \\"|\\" or \\",\\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \\"US,FR\\", dimension 2 value = \\"JP\\", and delimiter = \\",\\", then the response will contain \\"US,FR,JP\\"."""  
    dimension_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensionNames'), 'exclude': lambda f: f is None }})
    r"""Names of dimensions. The names must refer back to names in the dimensions field of the request."""  
    