"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import article as shared_article
from ..shared import section_enum as shared_section_enum
from ..shared import timeperiod_enum as shared_timeperiod_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GETMostsharedSectionTimePeriodJSONSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'query', 'field_name': 'api-key' }})  
    

@dataclasses.dataclass
class GETMostsharedSectionTimePeriodJSONRequest:
    
    section: shared_section_enum.SectionEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'section', 'style': 'simple', 'explode': False }})
    r"""Limits the results by one or more sections. You can use
    `all-sections` or one or more section names seperated by semicolons. See `viewed/sections.json` call to get a list of sections.
    """  
    time_period: shared_timeperiod_enum.TimePeriodEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'time-period', 'style': 'simple', 'explode': False }})
    r"""Number of days `1 | 7 | 30 ` corresponds to a day, a week, or a month of content."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETMostsharedSectionTimePeriodJSON400ApplicationJSON:
    
    copyright: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('copyright'), 'exclude': lambda f: f is None }})  
    errors: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    results: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETMostsharedSectionTimePeriodJSON200ApplicationJSON:
    r"""An array of Articles"""
    
    copyright: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('copyright'), 'exclude': lambda f: f is None }})  
    num_results: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num_results'), 'exclude': lambda f: f is None }})  
    results: Optional[list[shared_article.Article]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results'), 'exclude': lambda f: f is None }})  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GETMostsharedSectionTimePeriodJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_mostshared_section_time_period_json_200_application_json_object: Optional[GETMostsharedSectionTimePeriodJSON200ApplicationJSON] = dataclasses.field(default=None)
    r"""An array of Articles"""  
    get_mostshared_section_time_period_json_400_application_json_object: Optional[GETMostsharedSectionTimePeriodJSON400ApplicationJSON] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    