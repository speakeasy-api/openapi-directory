// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CachePolicyCookieBehaviorEnum string

const (
	CachePolicyCookieBehaviorEnumNone      CachePolicyCookieBehaviorEnum = "none"
	CachePolicyCookieBehaviorEnumWhitelist CachePolicyCookieBehaviorEnum = "whitelist"
	CachePolicyCookieBehaviorEnumAllExcept CachePolicyCookieBehaviorEnum = "allExcept"
	CachePolicyCookieBehaviorEnumAll       CachePolicyCookieBehaviorEnum = "all"
)

func (e CachePolicyCookieBehaviorEnum) ToPointer() *CachePolicyCookieBehaviorEnum {
	return &e
}

func (e *CachePolicyCookieBehaviorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "whitelist":
		fallthrough
	case "allExcept":
		fallthrough
	case "all":
		*e = CachePolicyCookieBehaviorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CachePolicyCookieBehaviorEnum: %v", v)
	}
}
