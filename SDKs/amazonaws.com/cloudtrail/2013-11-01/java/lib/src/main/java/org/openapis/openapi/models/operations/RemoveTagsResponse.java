/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class RemoveTagsResponse {
    /**
     * ChannelNotFoundException
     */
    
    public Object channelNotFoundException;
    public RemoveTagsResponse withChannelNotFoundException(Object channelNotFoundException) {
        this.channelNotFoundException = channelNotFoundException;
        return this;
    }
    
    /**
     * CloudTrailARNInvalidException
     */
    
    public Object cloudTrailARNInvalidException;
    public RemoveTagsResponse withCloudTrailARNInvalidException(Object cloudTrailARNInvalidException) {
        this.cloudTrailARNInvalidException = cloudTrailARNInvalidException;
        return this;
    }
    
    
    public String contentType;
    public RemoveTagsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * EventDataStoreNotFoundException
     */
    
    public Object eventDataStoreNotFoundException;
    public RemoveTagsResponse withEventDataStoreNotFoundException(Object eventDataStoreNotFoundException) {
        this.eventDataStoreNotFoundException = eventDataStoreNotFoundException;
        return this;
    }
    
    /**
     * InactiveEventDataStoreException
     */
    
    public Object inactiveEventDataStoreException;
    public RemoveTagsResponse withInactiveEventDataStoreException(Object inactiveEventDataStoreException) {
        this.inactiveEventDataStoreException = inactiveEventDataStoreException;
        return this;
    }
    
    /**
     * InvalidTagParameterException
     */
    
    public Object invalidTagParameterException;
    public RemoveTagsResponse withInvalidTagParameterException(Object invalidTagParameterException) {
        this.invalidTagParameterException = invalidTagParameterException;
        return this;
    }
    
    /**
     * InvalidTrailNameException
     */
    
    public Object invalidTrailNameException;
    public RemoveTagsResponse withInvalidTrailNameException(Object invalidTrailNameException) {
        this.invalidTrailNameException = invalidTrailNameException;
        return this;
    }
    
    /**
     * NoManagementAccountSLRExistsException
     */
    
    public Object noManagementAccountSLRExistsException;
    public RemoveTagsResponse withNoManagementAccountSLRExistsException(Object noManagementAccountSLRExistsException) {
        this.noManagementAccountSLRExistsException = noManagementAccountSLRExistsException;
        return this;
    }
    
    /**
     * NotOrganizationMasterAccountException
     */
    
    public Object notOrganizationMasterAccountException;
    public RemoveTagsResponse withNotOrganizationMasterAccountException(Object notOrganizationMasterAccountException) {
        this.notOrganizationMasterAccountException = notOrganizationMasterAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;
    public RemoveTagsResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> removeTagsResponse;
    public RemoveTagsResponse withRemoveTagsResponse(java.util.Map<String, Object> removeTagsResponse) {
        this.removeTagsResponse = removeTagsResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;
    public RemoveTagsResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    
    public Integer statusCode;
    public RemoveTagsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public RemoveTagsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceTypeNotSupportedException
     */
    
    public Object resourceTypeNotSupportedException;
    public RemoveTagsResponse withResourceTypeNotSupportedException(Object resourceTypeNotSupportedException) {
        this.resourceTypeNotSupportedException = resourceTypeNotSupportedException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;
    public RemoveTagsResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
}
