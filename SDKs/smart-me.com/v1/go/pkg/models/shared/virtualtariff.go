// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VirtualTariffTypeEnum string

const (
	VirtualTariffTypeEnumBattery VirtualTariffTypeEnum = "Battery"
	VirtualTariffTypeEnumSolar   VirtualTariffTypeEnum = "Solar"
	VirtualTariffTypeEnumNormal  VirtualTariffTypeEnum = "Normal"
)

func (e *VirtualTariffTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Battery":
		fallthrough
	case "Solar":
		fallthrough
	case "Normal":
		*e = VirtualTariffTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VirtualTariffTypeEnum: %s", s)
	}
}

type VirtualTariff struct {
	// Says how many of the active power is used in this tariff. This is calculated from the last meter values.
	Factor *float64               `json:"Factor,omitempty"`
	ID     *string                `json:"Id,omitempty"`
	Name   *string                `json:"Name,omitempty"`
	Type   *VirtualTariffTypeEnum `json:"Type,omitempty"`
	Unit   *string                `json:"Unit,omitempty"`
	// The Counter Value of this tariff
	Value *float64 `json:"Value,omitempty"`
}
