// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ClientAuthRequestBodyGrantTypeEnum - The grant type. Must be set to `client_credentials`.
type ClientAuthRequestBodyGrantTypeEnum string

const (
	ClientAuthRequestBodyGrantTypeEnumClientCredentials ClientAuthRequestBodyGrantTypeEnum = "client_credentials"
)

func (e *ClientAuthRequestBodyGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "client_credentials":
		*e = ClientAuthRequestBodyGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClientAuthRequestBodyGrantTypeEnum: %s", s)
	}
}

type ClientAuthRequestBody struct {
	// The grant type. Must be set to `client_credentials`.
	GrantType ClientAuthRequestBodyGrantTypeEnum `json:"grant_type"`
	// A space-separated list of the authentication [scopes](https://developer.vimeo.com/api/authentication#supported-scopes) that you want to access. The default is `public`.
	Scope string `json:"scope"`
}

type ClientAuthResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The authorization was successful.
	Auth *shared.Auth
	// Error code 8001: No such client secret exists.
	Error *shared.Error
}
