/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum MessagesCapabilityWebhooksInboundUrlHttpMethodEnum {
  Post = "POST",
}

/**
 * Vonage will forward inbound messages to this URL
 */
export class MessagesCapabilityWebhooksInboundUrl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod?: MessagesCapabilityWebhooksInboundUrlHttpMethodEnum;
}

export enum MessagesCapabilityWebhooksStatusUrlHttpMethodEnum {
  Post = "POST",
}

/**
 * Vonage will send message status updates (e.g. `delivered`, `seen`) to this URL
 */
export class MessagesCapabilityWebhooksStatusUrl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod?: MessagesCapabilityWebhooksStatusUrlHttpMethodEnum;
}

export class MessagesCapabilityWebhooks extends SpeakeasyBase {
  /**
   * Vonage will forward inbound messages to this URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inbound_url" })
  @Type(() => MessagesCapabilityWebhooksInboundUrl)
  inboundUrl?: MessagesCapabilityWebhooksInboundUrl;

  /**
   * Vonage will send message status updates (e.g. `delivered`, `seen`) to this URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_url" })
  @Type(() => MessagesCapabilityWebhooksStatusUrl)
  statusUrl?: MessagesCapabilityWebhooksStatusUrl;
}

/**
 * Messages / Dispatch related configuration
 */
export class MessagesCapability extends SpeakeasyBase {
  /**
   * If not populated will be set to v1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webhooks" })
  @Type(() => MessagesCapabilityWebhooks)
  webhooks?: MessagesCapabilityWebhooks;
}
