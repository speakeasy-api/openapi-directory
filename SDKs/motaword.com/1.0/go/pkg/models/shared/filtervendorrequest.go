// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type FilterVendorRequest struct {
	Clients                        []int64   `json:"clients,omitempty"`
	CommunicationChannel           []string  `json:"communication_channel,omitempty"`
	CorporateIdsForAuth            []int64   `json:"corporate_ids_for_auth,omitempty"`
	Corporates                     []int64   `json:"corporates,omitempty"`
	Country                        []string  `json:"country,omitempty"`
	CreatedAt                      *string   `json:"created_at,omitempty"`
	CurrentServices                []string  `json:"current_services,omitempty"`
	DailyProofreadingCapacity      *int64    `json:"daily_proofreading_capacity,omitempty"`
	DailyTranslationCapacity       *int64    `json:"daily_translation_capacity,omitempty"`
	DestinationLanguages           []int64   `json:"destination_languages,omitempty"`
	DtpSoftware                    []string  `json:"dtp_software,omitempty"`
	EmailAddress                   *string   `json:"email_address,omitempty"`
	Experience                     []string  `json:"experience,omitempty"`
	FirstName                      *string   `json:"first_name,omitempty"`
	ID                             []int64   `json:"id,omitempty"`
	IsCertifiedTranslator          *bool     `json:"is_certified_translator,omitempty"`
	IsSwornTranslator              *bool     `json:"is_sworn_translator,omitempty"`
	LanguagePairs                  [][]int64 `json:"language_pairs,omitempty"`
	LastName                       *string   `json:"last_name,omitempty"`
	LastOnline                     *string   `json:"last_online,omitempty"`
	LastWorked                     *string   `json:"last_worked,omitempty"`
	Memoq                          *int64    `json:"memoq,omitempty"`
	Memsource                      *int64    `json:"memsource,omitempty"`
	MinTqs                         *float64  `json:"min_tqs,omitempty"`
	Omegat                         *int64    `json:"omegat,omitempty"`
	ProjectCount                   *int64    `json:"project_count,omitempty"`
	ProofreaderExperience          *int64    `json:"proofreader_experience,omitempty"`
	ProvidesCreativeWritingService *bool     `json:"provides_creative_writing_service,omitempty"`
	ProvidesPosteditService        *bool     `json:"provides_postedit_service,omitempty"`
	QuoteFileSubjects              []string  `json:"quote_file_subjects,omitempty"`
	Reference                      *string   `json:"reference,omitempty"`
	SdlTrados                      *int64    `json:"sdl_trados,omitempty"`
	Search                         *string   `json:"search,omitempty"`
	SkypeID                        *string   `json:"skype_id,omitempty"`
	Smartcat                       *int64    `json:"smartcat,omitempty"`
	Smartling                      *int64    `json:"smartling,omitempty"`
	SourceLanguages                []int64   `json:"source_languages,omitempty"`
	Specialization                 []string  `json:"specialization,omitempty"`
	Status                         []string  `json:"status,omitempty"`
	SubtitleEdit                   *int64    `json:"subtitle_edit,omitempty"`
	SubtitleWorkshop               *int64    `json:"subtitle_workshop,omitempty"`
	TranslatorAssociation          *string   `json:"translator_association,omitempty"`
	Transsuite2000                 *int64    `json:"transsuite_2000,omitempty"`
	UserWorkingTimezone            []string  `json:"user_working_timezone,omitempty"`
	VendorProfileLsp               *string   `json:"vendor_profile_lsp,omitempty"`
	VendorTags                     []string  `json:"vendor_tags,omitempty"`
	VendorType                     []string  `json:"vendor_type,omitempty"`
	VendorWorkingTimezone          []string  `json:"vendor_working_timezone,omitempty"`
	WordCount                      *int64    `json:"word_count,omitempty"`
	Wordbee                        *int64    `json:"wordbee,omitempty"`
	Wordfast                       *int64    `json:"wordfast,omitempty"`
	WorkType                       *string   `json:"work_type,omitempty"`
	WorkWith                       *string   `json:"work_with,omitempty"`
	WorkingAs                      []string  `json:"working_as,omitempty"`
	Xbench                         *int64    `json:"xbench,omitempty"`
	Xtm                            *int64    `json:"xtm,omitempty"`
}
