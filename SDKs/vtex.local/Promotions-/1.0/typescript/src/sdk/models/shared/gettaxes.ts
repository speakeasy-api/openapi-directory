/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Scope of the tax.
 */
export class GetTaxesScope extends SpeakeasyBase {
  /**
   * Determines if the tax applies to all products in the Catalog (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allCatalog" })
  allCatalog?: boolean;

  /**
   * Quantity of brands which activate or deactivate the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brands" })
  brands?: number;

  /**
   * If set to `true`, this tax will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandsAreInclusive" })
  brandsAreInclusive?: boolean;

  /**
   * Quantity of categories which activate or deactivate the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categories" })
  categories?: number;

  /**
   * If set to `true`, this tax will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categoriesAreInclusive" })
  categoriesAreInclusive?: boolean;

  /**
   * Quantity of collections which activate or deactivate the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collections" })
  collections?: number;

  /**
   * If set to `true`, this tax will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collectionsAreInclusive" })
  collectionsAreInclusive?: boolean;

  /**
   * Quantity of products which activate or deactivate the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  products?: number;

  /**
   * If set to `true`, this tax will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productsAreInclusive" })
  productsAreInclusive?: boolean;

  /**
   * Quantity of sellers which activate or deactivate the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellers" })
  sellers?: number;

  /**
   * If set to `true`, this tax will be applied to any seller present on the `sellers` field. If set to `false`, sellers present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sellersAreInclusive" })
  sellersAreInclusive?: boolean;

  /**
   * Quantity of SKUs which activate or deactivate the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skus" })
  skus?: number;

  /**
   * If set to `true`, this tax will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skusAreInclusive" })
  skusAreInclusive?: boolean;
}

/**
 * Object with information about a tax.
 */
export class GetTaxes extends SpeakeasyBase {
  /**
   * Array with campaign audiences that activate this tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Campaigns" })
  campaigns?: string[];

  /**
   * If set as `true`, it activates gifts Multiplier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activateGiftsMultiplier" })
  activateGiftsMultiplier?: boolean;

  /**
   * If set to `false`, this tax will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this tax not to be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "areSalesChannelIdsExclusive" })
  areSalesChannelIdsExclusive?: boolean;

  /**
   * Tax start date (UTC).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beginDate" })
  beginDate?: string;

  /**
   * Tax internal description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Tax end date (UTC).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  endDate?: string;

  /**
   * Defines if there is a maximum price per item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasMaxPricePerItem" })
  hasMaxPricePerItem?: boolean;

  /**
   * Tax ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idCalculatorConfiguration" })
  idCalculatorConfiguration?: string;

  /**
   * List of Trade Policies that activate this tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idsSalesChannel" })
  idsSalesChannel?: string[];

  /**
   * If set as `true` the tax is activated. If set as `false` the tax is deactivated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * If set as `true` the tax is archived. If set as `false` the tax is not archived.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isArchived" })
  isArchived?: boolean;

  /**
   * Defines if it is a tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isTax" })
  isTax?: boolean;

  /**
   * Date and time when the tax was last modified (UTC).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedUtc" })
  lastModifiedUtc?: string;

  /**
   * Defines how many times the tax can be used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxUsage" })
  maxUsage?: number;

  /**
   * Tax name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Percentual tax applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "percentualTax" })
  percentualTax?: number;

  /**
   * Scope of the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  @Type(() => GetTaxesScope)
  scope?: GetTaxesScope;

  /**
   * Status of the tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Defines the type of tax.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * utmCampaign code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmCampain" })
  utmCampain?: string;

  /**
   * utmSource code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmSource" })
  utmSource?: string;

  /**
   * utmiCampaign code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "utmiCampaign" })
  utmiCampaign?: string;
}
