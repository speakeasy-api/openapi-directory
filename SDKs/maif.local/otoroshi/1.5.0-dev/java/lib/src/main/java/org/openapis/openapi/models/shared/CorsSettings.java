/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CorsSettings - The configuration for cors support
 */
public class CorsSettings {
    /**
     * Allow to pass credentials
     */
    @JsonProperty("allowCredentials")
    public Boolean allowCredentials;

    public CorsSettings withAllowCredentials(Boolean allowCredentials) {
        this.allowCredentials = allowCredentials;
        return this;
    }
    
    /**
     * The cors allowed headers
     */
    @JsonProperty("allowHeaders")
    public String[] allowHeaders;

    public CorsSettings withAllowHeaders(String[] allowHeaders) {
        this.allowHeaders = allowHeaders;
        return this;
    }
    
    /**
     * The cors allowed methods
     */
    @JsonProperty("allowMethods")
    public String[] allowMethods;

    public CorsSettings withAllowMethods(String[] allowMethods) {
        this.allowMethods = allowMethods;
        return this;
    }
    
    /**
     * The cors allowed origin
     */
    @JsonProperty("allowOrigin")
    public String allowOrigin;

    public CorsSettings withAllowOrigin(String allowOrigin) {
        this.allowOrigin = allowOrigin;
        return this;
    }
    
    /**
     * Whether or not cors is enabled
     */
    @JsonProperty("enabled")
    public Boolean enabled;

    public CorsSettings withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The cors excluded patterns
     */
    @JsonProperty("excludedPatterns")
    public String[] excludedPatterns;

    public CorsSettings withExcludedPatterns(String[] excludedPatterns) {
        this.excludedPatterns = excludedPatterns;
        return this;
    }
    
    /**
     * The cors exposed header
     */
    @JsonProperty("exposeHeaders")
    public String[] exposeHeaders;

    public CorsSettings withExposeHeaders(String[] exposeHeaders) {
        this.exposeHeaders = exposeHeaders;
        return this;
    }
    
    /**
     * Cors max age
     */
    @JsonProperty("maxAge")
    public Integer maxAge;

    public CorsSettings withMaxAge(Integer maxAge) {
        this.maxAge = maxAge;
        return this;
    }
    
    public CorsSettings(@JsonProperty("allowCredentials") Boolean allowCredentials, @JsonProperty("allowHeaders") String[] allowHeaders, @JsonProperty("allowMethods") String[] allowMethods, @JsonProperty("allowOrigin") String allowOrigin, @JsonProperty("enabled") Boolean enabled, @JsonProperty("excludedPatterns") String[] excludedPatterns, @JsonProperty("exposeHeaders") String[] exposeHeaders, @JsonProperty("maxAge") Integer maxAge) {
        this.allowCredentials = allowCredentials;
        this.allowHeaders = allowHeaders;
        this.allowMethods = allowMethods;
        this.allowOrigin = allowOrigin;
        this.enabled = enabled;
        this.excludedPatterns = excludedPatterns;
        this.exposeHeaders = exposeHeaders;
        this.maxAge = maxAge;
  }
}
