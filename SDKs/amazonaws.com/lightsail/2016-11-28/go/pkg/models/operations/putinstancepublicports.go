// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutInstancePublicPortsXAmzTargetEnum
type PutInstancePublicPortsXAmzTargetEnum string

const (
	PutInstancePublicPortsXAmzTargetEnumLightsail20161128PutInstancePublicPorts PutInstancePublicPortsXAmzTargetEnum = "Lightsail_20161128.PutInstancePublicPorts"
)

func (e *PutInstancePublicPortsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Lightsail_20161128.PutInstancePublicPorts":
		*e = PutInstancePublicPortsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutInstancePublicPortsXAmzTargetEnum: %s", s)
	}
}

type PutInstancePublicPortsRequest struct {
	PutInstancePublicPortsRequest shared.PutInstancePublicPortsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    PutInstancePublicPortsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutInstancePublicPortsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AccountSetupInProgressException
	AccountSetupInProgressException interface{}
	ContentType                     string
	// InvalidInputException
	InvalidInputException interface{}
	// NotFoundException
	NotFoundException interface{}
	// OperationFailureException
	OperationFailureException interface{}
	// Success
	PutInstancePublicPortsResult *shared.PutInstancePublicPortsResult
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// UnauthenticatedException
	UnauthenticatedException interface{}
}
