// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type ActivityMarkRepoNotificationsAsReadRequestBody struct {
	// Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.
	LastReadAt *time.Time `json:"last_read_at,omitempty"`
}

type ActivityMarkRepoNotificationsAsReadRequest struct {
	RequestBody *ActivityMarkRepoNotificationsAsReadRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

// ActivityMarkRepoNotificationsAsRead202ApplicationJSON - Response
type ActivityMarkRepoNotificationsAsRead202ApplicationJSON struct {
	Message *string `json:"message,omitempty"`
	URL     *string `json:"url,omitempty"`
}

type ActivityMarkRepoNotificationsAsReadResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	ActivityMarkRepoNotificationsAsRead202ApplicationJSONObject *ActivityMarkRepoNotificationsAsRead202ApplicationJSON
}
