// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeSubscribersForNotificationQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// DescribeSubscribersForNotificationXAmzTargetEnum
type DescribeSubscribersForNotificationXAmzTargetEnum string

const (
	DescribeSubscribersForNotificationXAmzTargetEnumAwsBudgetServiceGatewayDescribeSubscribersForNotification DescribeSubscribersForNotificationXAmzTargetEnum = "AWSBudgetServiceGateway.DescribeSubscribersForNotification"
)

func (e *DescribeSubscribersForNotificationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSBudgetServiceGateway.DescribeSubscribersForNotification":
		*e = DescribeSubscribersForNotificationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeSubscribersForNotificationXAmzTargetEnum: %s", s)
	}
}

type DescribeSubscribersForNotificationHeaders struct {
	XAmzAlgorithm     *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeSubscribersForNotificationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeSubscribersForNotificationRequest struct {
	QueryParams DescribeSubscribersForNotificationQueryParams
	Headers     DescribeSubscribersForNotificationHeaders
	Request     shared.DescribeSubscribersForNotificationRequest `request:"mediaType=application/json"`
}

type DescribeSubscribersForNotificationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DescribeSubscribersForNotificationResponse *shared.DescribeSubscribersForNotificationResponse
	// ExpiredNextTokenException
	ExpiredNextTokenException interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
