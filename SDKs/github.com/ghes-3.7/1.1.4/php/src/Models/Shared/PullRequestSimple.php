<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PullRequestSimple - Pull Request Simple
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PullRequestSimple
{
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleLinks')]
    public PullRequestSimpleLinks $links;
    
	#[\JMS\Serializer\Annotation\SerializedName('active_lock_reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $activeLockReason = null;
    
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $assignee
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $assignee;
    
    /**
     * $assignees
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SimpleUser> $assignees
     */
	#[\JMS\Serializer\Annotation\SerializedName('assignees')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SimpleUser>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assignees = null;
    
    /**
     * How the author is associated with the repository.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AuthorAssociationEnum $authorAssociation
     */
	#[\JMS\Serializer\Annotation\SerializedName('author_association')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuthorAssociationEnum>')]
    public AuthorAssociationEnum $authorAssociation;
    
    /**
     * The status of auto merging a pull request.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AutoMerge $autoMerge
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_merge')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AutoMerge')]
    public AutoMerge $autoMerge;
    
	#[\JMS\Serializer\Annotation\SerializedName('base')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleBase')]
    public PullRequestSimpleBase $base;
    
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $body;
    
	#[\JMS\Serializer\Annotation\SerializedName('closed_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $closedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('comments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('commits_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $commitsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('diff_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $diffUrl;
    
    /**
     * Indicates whether or not the pull request is a draft.
     * 
     * @var ?bool $draft
     */
	#[\JMS\Serializer\Annotation\SerializedName('draft')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $draft = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('head')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleHead')]
    public PullRequestSimpleHead $head;
    
	#[\JMS\Serializer\Annotation\SerializedName('html_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $htmlUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('issue_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issueUrl;
    
    /**
     * $labels
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleLabels> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleLabels>')]
    public array $labels;
    
	#[\JMS\Serializer\Annotation\SerializedName('locked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $locked;
    
	#[\JMS\Serializer\Annotation\SerializedName('merge_commit_sha')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $mergeCommitSha;
    
	#[\JMS\Serializer\Annotation\SerializedName('merged_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $mergedAt;
    
    /**
     * A collection of related issues and pull requests.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableMilestone $milestone
     */
	#[\JMS\Serializer\Annotation\SerializedName('milestone')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableMilestone')]
    public NullableMilestone $milestone;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $number;
    
	#[\JMS\Serializer\Annotation\SerializedName('patch_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $patchUrl;
    
    /**
     * $requestedReviewers
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SimpleUser> $requestedReviewers
     */
	#[\JMS\Serializer\Annotation\SerializedName('requested_reviewers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SimpleUser>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $requestedReviewers = null;
    
    /**
     * $requestedTeams
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Team> $requestedTeams
     */
	#[\JMS\Serializer\Annotation\SerializedName('requested_teams')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Team>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $requestedTeams = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('review_comment_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reviewCommentUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('review_comments_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reviewCommentsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $state;
    
	#[\JMS\Serializer\Annotation\SerializedName('statuses_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $statusesUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $title;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $user;
    
	public function __construct()
	{
		$this->links = new \OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleLinks();
		$this->activeLockReason = null;
		$this->assignee = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->assignees = null;
		$this->authorAssociation = \OpenAPI\OpenAPI\Models\Shared\AuthorAssociationEnum::COLLABORATOR;
		$this->autoMerge = new \OpenAPI\OpenAPI\Models\Shared\AutoMerge();
		$this->base = new \OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleBase();
		$this->body = "";
		$this->closedAt = new \DateTime();
		$this->commentsUrl = "";
		$this->commitsUrl = "";
		$this->createdAt = new \DateTime();
		$this->diffUrl = "";
		$this->draft = null;
		$this->head = new \OpenAPI\OpenAPI\Models\Shared\PullRequestSimpleHead();
		$this->htmlUrl = "";
		$this->id = 0;
		$this->issueUrl = "";
		$this->labels = [];
		$this->locked = false;
		$this->mergeCommitSha = "";
		$this->mergedAt = new \DateTime();
		$this->milestone = new \OpenAPI\OpenAPI\Models\Shared\NullableMilestone();
		$this->nodeId = "";
		$this->number = 0;
		$this->patchUrl = "";
		$this->requestedReviewers = null;
		$this->requestedTeams = null;
		$this->reviewCommentUrl = "";
		$this->reviewCommentsUrl = "";
		$this->state = "";
		$this->statusesUrl = "";
		$this->title = "";
		$this->updatedAt = new \DateTime();
		$this->url = "";
		$this->user = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
	}
}
