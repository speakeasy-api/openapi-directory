// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostSpacesIDAccountingYearSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesIDAccountingYearRequestBodyLevelEnum string

const (
	PostSpacesIDAccountingYearRequestBodyLevelEnumConfidential PostSpacesIDAccountingYearRequestBodyLevelEnum = "confidential"
	PostSpacesIDAccountingYearRequestBodyLevelEnumRegular      PostSpacesIDAccountingYearRequestBodyLevelEnum = "regular"
	PostSpacesIDAccountingYearRequestBodyLevelEnumPublic       PostSpacesIDAccountingYearRequestBodyLevelEnum = "public"
)

func (e *PostSpacesIDAccountingYearRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesIDAccountingYearRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesIDAccountingYearRequestBodyLevelEnum: %s", s)
	}
}

// PostSpacesIDAccountingYearRequestBody - AccountingYear to add
type PostSpacesIDAccountingYearRequestBody struct {
	About         *string                                         `json:"About,omitempty"`
	Comment       *string                                         `json:"Comment,omitempty"`
	End           string                                          `json:"End"`
	Home          *bool                                           `json:"Home,omitempty"`
	Keywords      []string                                        `json:"Keywords,omitempty"`
	Level         *PostSpacesIDAccountingYearRequestBodyLevelEnum `json:"Level,omitempty"`
	NetIncome     *float64                                        `json:"NetIncome,omitempty"`
	NetPosition   *float64                                        `json:"NetPosition,omitempty"`
	Start         *string                                         `json:"Start,omitempty"`
	Tax           *float64                                        `json:"Tax,omitempty"`
	TaxableIncome *float64                                        `json:"TaxableIncome,omitempty"`
	Turnover      *float64                                        `json:"Turnover,omitempty"`
}

type PostSpacesIDAccountingYearRequest struct {
	// AccountingYear to add
	RequestBody PostSpacesIDAccountingYearRequestBody `request:"mediaType=application/json"`
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// PostSpacesIDAccountingYear201ApplicationJSON - Id of the accounting year created
type PostSpacesIDAccountingYear201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesIDAccountingYearResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of the accounting year created
	PostSpacesIDAccountingYear201ApplicationJSONObject *PostSpacesIDAccountingYear201ApplicationJSON
}
