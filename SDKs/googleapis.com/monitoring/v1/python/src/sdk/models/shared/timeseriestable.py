"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import columnsettings as shared_columnsettings
from ..shared import tabledataset as shared_tabledataset
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TimeSeriesTableMetricVisualizationEnum(str, Enum):
    r"""Optional. Store rendering strategy"""
    METRIC_VISUALIZATION_UNSPECIFIED = 'METRIC_VISUALIZATION_UNSPECIFIED'
    NUMBER = 'NUMBER'
    BAR = 'BAR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimeSeriesTable:
    r"""A table that displays time series data."""
    
    column_settings: Optional[list[shared_columnsettings.ColumnSettings]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnSettings'), 'exclude': lambda f: f is None }})
    r"""Optional. The list of the persistent column settings for the table."""  
    data_sets: Optional[list[shared_tabledataset.TableDataSet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSets'), 'exclude': lambda f: f is None }})
    r"""Required. The data displayed in this table."""  
    metric_visualization: Optional[TimeSeriesTableMetricVisualizationEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricVisualization'), 'exclude': lambda f: f is None }})
    r"""Optional. Store rendering strategy"""  
    