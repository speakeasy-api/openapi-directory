"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class DataQueryJobCancelledQueryStatusEnum(str, Enum):
    r"""Status of the query job."""
    CANCELLED = 'cancelled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataQueryJobCancelled:
    r"""A cancelled data query job."""
    
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createdBy'), 'exclude': lambda f: f is None }})
    r"""The query job creator's Id."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Internal identifier of the query job."""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""The query that was submitted."""  
    query_status: Optional[DataQueryJobCancelledQueryStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the query job."""  
    remaining_retries: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remainingRetries'), 'exclude': lambda f: f is None }})
    r"""The number of times that Zuora will retry the query if Zuora is unable to perform the query."""  
    updated_on: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updatedOn'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Date and time when the query job was last updated, in ISO 8601 format."""  
    