// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetLoginFormatEnum
type GetLoginFormatEnum string

const (
	GetLoginFormatEnumJSON GetLoginFormatEnum = "json"
	GetLoginFormatEnumXML  GetLoginFormatEnum = "xml"
	GetLoginFormatEnumHTML GetLoginFormatEnum = "html"
	GetLoginFormatEnumDump GetLoginFormatEnum = "dump"
	GetLoginFormatEnumJpg  GetLoginFormatEnum = "jpg"
	GetLoginFormatEnumPdf  GetLoginFormatEnum = "pdf"
)

func (e *GetLoginFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetLoginFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLoginFormatEnum: %s", s)
	}
}

type GetLoginQueryParams struct {
	Format *GetLoginFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The usernameset_include_path(get_include_path().PATH_SEPARATOR.realpath('../includes').PATH_SEPARATOR.realpath('../').PATH_SEPARATOR);
	Name string `queryParam:"style=form,explode=true,name=name"`
	// The password
	Pass string `queryParam:"style=form,explode=true,name=pass"`
}

type GetLoginRequest struct {
	QueryParams GetLoginQueryParams
}

type GetLoginResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
