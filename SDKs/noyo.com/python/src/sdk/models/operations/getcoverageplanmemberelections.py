"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import paginatedmemberelectionresult as shared_paginatedmemberelectionresult
from typing import Optional


@dataclasses.dataclass
class GetCoveragePlanMemberElectionsRequest:
    
    plan_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'plan_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the coverage plan in Noyo"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""The integer offset at which to start the page. Possible values are 0 to total_records - 1"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The max size of each page of results"""  
    

@dataclasses.dataclass
class GetCoveragePlanMemberElectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    paginated_member_election_result: Optional[shared_paginatedmemberelectionresult.PaginatedMemberElectionResult] = dataclasses.field(default=None)
    r"""Successful Response - Returns all matching Member Elections"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    