<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TextAutoReply - CallFire allows you to set up auto reply messages for your numbers CallFire allows you to set up auto reply messages for your numbers and keywords. You can set a general auto reply for anyone who texts your number (keyword). Also you can include a text to match, so that the auto reply would be sent only to those recipients whose texts the matched text
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TextAutoReply
{
    /**
     * An id of a text auto reply
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Setup autoreply for a given keyword
     * 
     * @var ?string $keyword
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyword')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyword = null;
    
    /**
     * Text to match. If it is set then autoreply will be sent to a person who texted message with matched text. Case insensitive, if parameter is not specified then all texts will be matched
     * 
     * @var ?string $match
     */
	#[\JMS\Serializer\Annotation\SerializedName('match')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $match = null;
    
    /**
     * A text message to return as an auto reply
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Setup autoreply for a given phone number, E.164 format (11-digit). Example: 12132000384
     * 
     * @var ?string $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
	public function __construct()
	{
		$this->id = null;
		$this->keyword = null;
		$this->match = null;
		$this->message = null;
		$this->number = null;
	}
}
