// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// SensitiveDataDisabilityDisabilityClassifications - The disabilty classifications model
type SensitiveDataDisabilityDisabilityClassifications struct {
	// Indicates the type of disability. This field is only allowed if hasDisability is set to 1=Yes. Values include:<br  /><br  />Auditory<br  />Cognitive, learning, and neurological<br  />Physical<br  />Speech<br  />Vision<br  />Prefer not to say<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = disabilityClassification
	Classification *string `json:"classification,omitempty"`
}

// SensitiveDataDisability - Add or update disability data.
type SensitiveDataDisability struct {
	// Description of employee's disability or accommodation.<br  />Max length: 50
	Disability *string `json:"disability,omitempty"`
	// Add or update employee's disability classifications
	DisabilityClassifications []SensitiveDataDisabilityDisabilityClassifications `json:"disabilityClassifications,omitempty"`
	// Indicates if the employee has a disability. Values include:<br  /><br  />0 = No<br  />1 = Yes<br  />2 = Prefer not to say
	HasDisability *string `json:"hasDisability,omitempty"`
}

// SensitiveDataEthnicityEthnicRacialIdentities - The ethnic racial identity model
type SensitiveDataEthnicityEthnicRacialIdentities struct {
	// Employee's preferred or chosen ethnicity or race.<br  />Max length: 40.
	Description *string `json:"description,omitempty"`
}

// SensitiveDataEthnicity - Add or update ethnicity data.
type SensitiveDataEthnicity struct {
	// Add or update Ethnic Racial Identity
	EthnicRacialIdentities []SensitiveDataEthnicityEthnicRacialIdentities `json:"ethnicRacialIdentities,omitempty"`
	// Employee's legal ethnicity or race.<br  />A = Asian<br  />B = Black<br  />H = Hispanic<br  />I = American Indian<br  />N = Native Hawaiian or Pacific Islander<br  />T = Two or More Races<br  />W = White<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = ethnicity
	Ethnicity *string `json:"ethnicity,omitempty"`
}

// SensitiveDataGender - Add or update gender data.
type SensitiveDataGender struct {
	// Specifies whether employee's preferred pronouns will be displayed to co-workers in Community, Directory, etc. Values include:<br  /><br  />0 = No<br  />1 = Yes
	DisplayPronouns *bool `json:"displayPronouns,omitempty"`
	// Employee's preferred or chosen gender identification.<br  />Max length: 40
	GenderIdentityDescription *string `json:"genderIdentityDescription,omitempty"`
	// Employee's self-identification of legal gender. Numerical values include:<br  /><br  />0 = No<br  />1 = Yes<br  />2 = Prefer not to say
	IdentifyAsLegalGender *string `json:"identifyAsLegalGender,omitempty"`
	// Employee's legal gender. Values include:<br  /><br  />M = Male<br  />F = Female<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = legalGender
	LegalGender *string `json:"legalGender,omitempty"`
	// Employee's preferred or chosen pronouns. Values include:<br  /><br  />He / Him / His<br  />She / Her / Hers<br  />They / Them / Theirs<br  />Prefer not to say<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = preferredPronouns
	Pronouns *string `json:"pronouns,omitempty"`
	// Employee's self-identification of sexual orientation. Values may include values below. Additionally, any custom value may be provided.<br  /><br  />Asexual<br  />Gay / Lesbian<br  />Heterosexual / Straight<br  />Pansexual<br  />Queer<br  />Bisexual<br  />Prefer not to say
	SexualOrientation *string `json:"sexualOrientation,omitempty"`
}

// SensitiveDataVeteran - Add or update veteran data.
type SensitiveDataVeteran struct {
	// Indicates if the employee is a veteran.  Values include:<br  /><br  />0 = No<br  />1 = Yes<br  />2 = Prefer not to say
	IsVeteran *string `json:"isVeteran,omitempty"`
	// Employee's Veteran Notes<br  />Max length: 50
	Veteran *string `json:"veteran,omitempty"`
}

// SensitiveData - The sensitive data model
type SensitiveData struct {
	// Add or update disability data.
	Disability *SensitiveDataDisability `json:"disability,omitempty"`
	// Add or update ethnicity data.
	Ethnicity *SensitiveDataEthnicity `json:"ethnicity,omitempty"`
	// Add or update gender data.
	Gender *SensitiveDataGender `json:"gender,omitempty"`
	// Add or update veteran data.
	Veteran *SensitiveDataVeteran `json:"veteran,omitempty"`
}
