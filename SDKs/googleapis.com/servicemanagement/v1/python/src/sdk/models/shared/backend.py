"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import backendrule as shared_backendrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Backend:
    r"""`Backend` defines the backend configuration for a service."""
    
    rules: Optional[list[shared_backendrule.BackendRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rules'), 'exclude': lambda f: f is None }})
    r"""A list of API backend rules that apply to individual API methods. **NOTE:** All service configuration rules follow \\"last one wins\\" order."""  
    