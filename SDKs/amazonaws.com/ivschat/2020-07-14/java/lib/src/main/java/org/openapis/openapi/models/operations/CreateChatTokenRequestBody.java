/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateChatTokenRequestBody {
    /**
     * Application-provided attributes to encode into the token and attach to a chat session. Map keys and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, String> attributes;

    public CreateChatTokenRequestBody withAttributes(java.util.Map<String, String> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * Set of capabilities that the user is allowed to perform in the room. Default: None (the capability to view messages is implicitly included in all requests).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capabilities")
    public org.openapis.openapi.models.shared.ChatTokenCapabilityEnum[] capabilities;

    public CreateChatTokenRequestBody withCapabilities(org.openapis.openapi.models.shared.ChatTokenCapabilityEnum[] capabilities) {
        this.capabilities = capabilities;
        return this;
    }
    
    /**
     * Identifier of the room that the client is trying to access. Currently this must be an ARN. 
     */
    @JsonProperty("roomIdentifier")
    public String roomIdentifier;

    public CreateChatTokenRequestBody withRoomIdentifier(String roomIdentifier) {
        this.roomIdentifier = roomIdentifier;
        return this;
    }
    
    /**
     * Session duration (in minutes), after which the session expires. Default: 60 (1 hour).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sessionDurationInMinutes")
    public Long sessionDurationInMinutes;

    public CreateChatTokenRequestBody withSessionDurationInMinutes(Long sessionDurationInMinutes) {
        this.sessionDurationInMinutes = sessionDurationInMinutes;
        return this;
    }
    
    /**
     * Application-provided ID that uniquely identifies the user associated with this token. This can be any UTF-8 encoded text.
     */
    @JsonProperty("userId")
    public String userId;

    public CreateChatTokenRequestBody withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public CreateChatTokenRequestBody(@JsonProperty("roomIdentifier") String roomIdentifier, @JsonProperty("userId") String userId) {
        this.roomIdentifier = roomIdentifier;
        this.userId = userId;
  }
}
