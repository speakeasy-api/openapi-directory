<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AudioRenderTimelineSpanRegionEndType - A high-level description of how a region ends
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AudioRenderTimelineSpanRegionEndType
{
    /**
     * The beat, relative to the start of the active region, at which the end_type begins; in other words, the ending starts on this beat of the region
     * 
     * @var float $beat
     */
	#[\JMS\Serializer\Annotation\SerializedName('beat')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $beat;
    
    /**
     * The type of event
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AudioRenderTimelineSpanRegionEndTypeEventEnum $event
     */
	#[\JMS\Serializer\Annotation\SerializedName('event')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AudioRenderTimelineSpanRegionEndTypeEventEnum>')]
    public AudioRenderTimelineSpanRegionEndTypeEventEnum $event;
    
    /**
     * The specific action to perform; if the event type is "ending" then this must be "ringout" and if event type is "transition" this must be "cut"
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AudioRenderTimelineSpanRegionEndTypeTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AudioRenderTimelineSpanRegionEndTypeTypeEnum>')]
    public AudioRenderTimelineSpanRegionEndTypeTypeEnum $type;
    
	public function __construct()
	{
		$this->beat = 0;
		$this->event = \OpenAPI\OpenAPI\Models\Shared\AudioRenderTimelineSpanRegionEndTypeEventEnum::ENDING;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\AudioRenderTimelineSpanRegionEndTypeTypeEnum::RINGOUT;
	}
}
