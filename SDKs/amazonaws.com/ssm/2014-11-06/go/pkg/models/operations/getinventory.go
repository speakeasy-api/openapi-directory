// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetInventoryXAmzTargetEnum
type GetInventoryXAmzTargetEnum string

const (
	GetInventoryXAmzTargetEnumAmazonSsmGetInventory GetInventoryXAmzTargetEnum = "AmazonSSM.GetInventory"
)

func (e GetInventoryXAmzTargetEnum) ToPointer() *GetInventoryXAmzTargetEnum {
	return &e
}

func (e *GetInventoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.GetInventory":
		*e = GetInventoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInventoryXAmzTargetEnum: %v", v)
	}
}

type GetInventoryRequest struct {
	GetInventoryRequest shared.GetInventoryRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                    `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetInventoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetInventoryResponse struct {
	ContentType string
	// Success
	GetInventoryResult *shared.GetInventoryResult
	// InternalServerError
	InternalServerError interface{}
	// InvalidAggregatorException
	InvalidAggregatorException interface{}
	// InvalidFilter
	InvalidFilter interface{}
	// InvalidInventoryGroupException
	InvalidInventoryGroupException interface{}
	// InvalidNextToken
	InvalidNextToken interface{}
	// InvalidResultAttributeException
	InvalidResultAttributeException interface{}
	// InvalidTypeNameException
	InvalidTypeNameException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
