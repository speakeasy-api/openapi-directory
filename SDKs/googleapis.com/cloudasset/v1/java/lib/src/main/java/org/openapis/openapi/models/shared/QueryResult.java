/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryResult - Execution results of the query. The result is formatted as rows represented by BigQuery compatible [schema]. When pagination is necessary, it will contains the page token to retrieve the results of following pages.
 */
public class QueryResult {
    /**
     * Token to retrieve the next page of the results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextPageToken")
    public String nextPageToken;

    public QueryResult withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * Each row hold a query result in the format of `Struct`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public java.util.Map<String, Object>[] rows;

    public QueryResult withRows(java.util.Map<String, Object>[] rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * BigQuery Compatible table schema.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schema")
    public TableSchema schema;

    public QueryResult withSchema(TableSchema schema) {
        this.schema = schema;
        return this;
    }
    
    /**
     * Total rows of the whole query results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalRows")
    public String totalRows;

    public QueryResult withTotalRows(String totalRows) {
        this.totalRows = totalRows;
        return this;
    }
    
    public QueryResult(){}
}
