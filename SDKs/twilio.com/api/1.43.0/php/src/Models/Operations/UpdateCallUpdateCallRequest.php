<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class UpdateCallUpdateCallRequest
{
    /**
     * The HTTP method that we should use to request the `fallback_url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateCallUpdateCallRequestFallbackMethodEnum $fallbackMethod
     */
	#[SpeakeasyMetadata('form:name=FallbackMethod')]
    public ?UpdateCallUpdateCallRequestFallbackMethodEnum $fallbackMethod = null;
    
    /**
     * The URL that we call using the `fallback_method` if an error occurs when requesting or executing the TwiML at `url`. If an `application_sid` parameter is present, this parameter is ignored.
     * 
     * @var ?string $fallbackUrl
     */
	#[SpeakeasyMetadata('form:name=FallbackUrl')]
    public ?string $fallbackUrl = null;
    
    /**
     * The HTTP method we should use when calling the `url`. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateCallUpdateCallRequestMethodEnum $method
     */
	#[SpeakeasyMetadata('form:name=Method')]
    public ?UpdateCallUpdateCallRequestMethodEnum $method = null;
    
	#[SpeakeasyMetadata('form:name=Status')]
    public ?\OpenAPI\OpenAPI\Models\Shared\CallEnumUpdateStatusEnum $status = null;
    
    /**
     * The URL we should call using the `status_callback_method` to send status information to your application. If no `status_callback_event` is specified, we will send the `completed` status. If an `application_sid` parameter is present, this parameter is ignored. URLs must contain a valid hostname (underscores are not permitted).
     * 
     * @var ?string $statusCallback
     */
	#[SpeakeasyMetadata('form:name=StatusCallback')]
    public ?string $statusCallback = null;
    
    /**
     * The HTTP method we should use when requesting the `status_callback` URL. Can be: `GET` or `POST` and the default is `POST`. If an `application_sid` parameter is present, this parameter is ignored.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateCallUpdateCallRequestStatusCallbackMethodEnum $statusCallbackMethod
     */
	#[SpeakeasyMetadata('form:name=StatusCallbackMethod')]
    public ?UpdateCallUpdateCallRequestStatusCallbackMethodEnum $statusCallbackMethod = null;
    
    /**
     * The maximum duration of the call in seconds. Constraints depend on account and configuration.
     * 
     * @var ?int $timeLimit
     */
	#[SpeakeasyMetadata('form:name=TimeLimit')]
    public ?int $timeLimit = null;
    
    /**
     * TwiML instructions for the call Twilio will use without fetching Twiml from url. Twiml and url parameters are mutually exclusive
     * 
     * @var ?string $twiml
     */
	#[SpeakeasyMetadata('form:name=Twiml')]
    public ?string $twiml = null;
    
    /**
     * The absolute URL that returns the TwiML instructions for the call. We will call this URL using the `method` when the call connects. For more information, see the [Url Parameter](https://www.twilio.com/docs/voice/make-calls#specify-a-url-parameter) section in [Making Calls](https://www.twilio.com/docs/voice/make-calls).
     * 
     * @var ?string $url
     */
	#[SpeakeasyMetadata('form:name=Url')]
    public ?string $url = null;
    
	public function __construct()
	{
		$this->fallbackMethod = null;
		$this->fallbackUrl = null;
		$this->method = null;
		$this->status = null;
		$this->statusCallback = null;
		$this->statusCallbackMethod = null;
		$this->timeLimit = null;
		$this->twiml = null;
		$this->url = null;
	}
}
