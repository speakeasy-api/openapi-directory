/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ThumbnailDetails } from "./thumbnaildetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
 */
export enum SearchResultSnippetLiveBroadcastContentEnum {
  None = "none",
  Upcoming = "upcoming",
  Live = "live",
  Completed = "completed",
}

/**
 * Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.
 */
export class SearchResultSnippet extends SpeakeasyBase {
  /**
   * The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelId" })
  channelId?: string;

  /**
   * The title of the channel that published the resource that the search result identifies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelTitle" })
  channelTitle?: string;

  /**
   * A description of the search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's "none" if there is not any upcoming/active live broadcasts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "liveBroadcastContent" })
  liveBroadcastContent?: SearchResultSnippetLiveBroadcastContentEnum;

  /**
   * The creation date and time of the resource that the search result identifies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publishedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishedAt?: Date;

  /**
   * Internal representation of thumbnails for a YouTube resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnails" })
  @Type(() => ThumbnailDetails)
  thumbnails?: ThumbnailDetails;

  /**
   * The title of the search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
