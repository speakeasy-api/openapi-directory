// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// WorkstationConfig - A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
type WorkstationConfig struct {
	// Client-specified annotations.
	Annotations map[string]string `json:"annotations,omitempty"`
	// Output only. Status conditions describing the current resource state.
	Conditions []Status `json:"conditions,omitempty"`
	// A Docker container.
	Container *Container `json:"container,omitempty"`
	// Output only. Time when this resource was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Whether this resource is in degraded mode, in which case it may require user action to restore full functionality. Details can be found in the `conditions` field.
	Degraded *bool `json:"degraded,omitempty"`
	// Output only. Time when this resource was soft-deleted.
	DeleteTime *string `json:"deleteTime,omitempty"`
	// Human-readable name for this resource.
	DisplayName *string `json:"displayName,omitempty"`
	// Whether to enable linux auditd logging on the workstation. When enabled, a service account must also be specified that has logging.buckets.write permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging).
	EnableAuditAgent *bool `json:"enableAuditAgent,omitempty"`
	// A customer-managed encryption key for the Compute Engine resources of this workstation configuration.
	EncryptionKey *CustomerEncryptionKey `json:"encryptionKey,omitempty"`
	// Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// Runtime host for a workstation.
	Host *Host `json:"host,omitempty"`
	// How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
	IdleTimeout *string `json:"idleTimeout,omitempty"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
	Labels map[string]string `json:"labels,omitempty"`
	// Full name of this resource.
	Name *string `json:"name,omitempty"`
	// Directories to persist across workstation sessions.
	PersistentDirectories []PersistentDirectory `json:"persistentDirectories,omitempty"`
	// Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.
	ReadinessChecks []ReadinessCheck `json:"readinessChecks,omitempty"`
	// Output only. Indicates whether this resource is currently being updated to match its intended state.
	Reconciling *bool `json:"reconciling,omitempty"`
	// How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this configuration should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
	RunningTimeout *string `json:"runningTimeout,omitempty"`
	// Output only. A system-assigned unique identified for this resource.
	UID *string `json:"uid,omitempty"`
	// Output only. Time when this resource was most recently updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// WorkstationConfigInput - A set of configuration options describing how a workstation will be run. Workstation configurations are intended to be shared across multiple workstations.
type WorkstationConfigInput struct {
	// Client-specified annotations.
	Annotations map[string]string `json:"annotations,omitempty"`
	// A Docker container.
	Container *Container `json:"container,omitempty"`
	// Human-readable name for this resource.
	DisplayName *string `json:"displayName,omitempty"`
	// Whether to enable linux auditd logging on the workstation. When enabled, a service account must also be specified that has logging.buckets.write permission on the project. Operating system audit logging is distinct from [Cloud Audit Logs](https://cloud.google.com/workstations/docs/audit-logging).
	EnableAuditAgent *bool `json:"enableAuditAgent,omitempty"`
	// A customer-managed encryption key for the Compute Engine resources of this workstation configuration.
	EncryptionKey *CustomerEncryptionKey `json:"encryptionKey,omitempty"`
	// Checksum computed by the server. May be sent on update and delete requests to make sure that the client has an up-to-date value before proceeding.
	Etag *string `json:"etag,omitempty"`
	// Runtime host for a workstation.
	Host *HostInput `json:"host,omitempty"`
	// How long to wait before automatically stopping an instance that hasn't received any user traffic. A value of 0 indicates that this instance should never time out due to idleness. Defaults to 20 minutes.
	IdleTimeout *string `json:"idleTimeout,omitempty"`
	// Client-specified labels that are applied to the resource and that are also propagated to the underlying Compute Engine resources.
	Labels map[string]string `json:"labels,omitempty"`
	// Full name of this resource.
	Name *string `json:"name,omitempty"`
	// Directories to persist across workstation sessions.
	PersistentDirectories []PersistentDirectory `json:"persistentDirectories,omitempty"`
	// Readiness checks to perform when starting a workstation using this workstation configuration. Mark a workstation as running only after all specified readiness checks return 200 status codes.
	ReadinessChecks []ReadinessCheck `json:"readinessChecks,omitempty"`
	// How long to wait before automatically stopping a workstation after it started. A value of 0 indicates that workstations using this configuration should never time out. Must be greater than 0 and less than 24 hours if encryption_key is set. Defaults to 12 hours.
	RunningTimeout *string `json:"runningTimeout,omitempty"`
}
