/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { RequestReference } from "./requestreference";
import { Expose, Transform, Type } from "class-transformer";

export class HIUSubscriptionRequestReceiptSubscriptionRequest extends SpeakeasyBase {
  /**
   * id of the consent-request created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class HIUSubscriptionRequestReceipt extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  /**
   * a nonce, unique for each HTTP request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resp" })
  @Type(() => RequestReference)
  resp: RequestReference;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionRequest" })
  @Type(() => HIUSubscriptionRequestReceiptSubscriptionRequest)
  subscriptionRequest?: HIUSubscriptionRequestReceiptSubscriptionRequest;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
