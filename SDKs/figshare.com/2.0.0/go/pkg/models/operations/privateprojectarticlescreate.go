// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PrivateProjectArticlesCreateSecurity struct {
	OAuth2 shared.SchemeOAuth2 `security:"scheme,type=oauth2"`
}

type PrivateProjectArticlesCreatePathParams struct {
	// Project unique identifier
	ProjectID int64 `pathParam:"style=simple,explode=false,name=project_id"`
}

type PrivateProjectArticlesCreateQueryParams struct {
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Page number. Used for pagination with page_size
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
}

type PrivateProjectArticlesCreateRequest struct {
	PathParams  PrivateProjectArticlesCreatePathParams
	QueryParams PrivateProjectArticlesCreateQueryParams
	// Article description
	Request  shared.ArticleProjectCreate `request:"mediaType=application/json"`
	Security PrivateProjectArticlesCreateSecurity
}

type PrivateProjectArticlesCreateResponse struct {
	ContentType string
	// Forbidden
	ErrorMessage *shared.ErrorMessage
	Headers      map[string][]string
	// Created
	LocationWarnings *shared.LocationWarnings
	StatusCode       int
	RawResponse      *http.Response
}
