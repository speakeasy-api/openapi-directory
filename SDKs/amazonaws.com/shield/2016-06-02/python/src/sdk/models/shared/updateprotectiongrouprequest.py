"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import protectedresourcetype_enum as shared_protectedresourcetype_enum
from ..shared import protectiongroupaggregation_enum as shared_protectiongroupaggregation_enum
from ..shared import protectiongrouppattern_enum as shared_protectiongrouppattern_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateProtectionGroupRequest:
    
    aggregation: shared_protectiongroupaggregation_enum.ProtectionGroupAggregationEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Aggregation') }})  
    pattern: shared_protectiongrouppattern_enum.ProtectionGroupPatternEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Pattern') }})  
    protection_group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProtectionGroupId') }})  
    members: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Members'), 'exclude': lambda f: f is None }})  
    resource_type: Optional[shared_protectedresourcetype_enum.ProtectedResourceTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceType'), 'exclude': lambda f: f is None }})  
    