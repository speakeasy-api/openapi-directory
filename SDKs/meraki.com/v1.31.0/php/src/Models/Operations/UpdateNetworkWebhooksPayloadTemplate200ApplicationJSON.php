<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkWebhooksPayloadTemplate200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkWebhooksPayloadTemplate200ApplicationJSON
{
    /**
     * The body of the payload template, in liquid template
     * 
     * @var ?string $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;
    
    /**
     * The payload template headers, will be rendered as a key-value pair in the webhook.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWebhooksPayloadTemplate200ApplicationJSONHeaders> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\UpdateNetworkWebhooksPayloadTemplate200ApplicationJSONHeaders>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * The name of the payload template
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Webhook payload template Id
     * 
     * @var ?string $payloadTemplateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payloadTemplateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payloadTemplateId = null;
    
    /**
     * The type of the payload template
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->body = null;
		$this->headers = null;
		$this->name = null;
		$this->payloadTemplateId = null;
		$this->type = null;
	}
}
