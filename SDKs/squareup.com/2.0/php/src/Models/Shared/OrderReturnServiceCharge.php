<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OrderReturnServiceCharge - Represents the service charge applied to the original order.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OrderReturnServiceCharge
{
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $amountMoney = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $appliedMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $appliedMoney = null;
    
    /**
     * The list of references to `OrderReturnTax` entities applied to the
     * 
     * `OrderReturnServiceCharge`. Each `OrderLineItemAppliedTax` has a `tax_uid`
     * that references the `uid` of a top-level `OrderReturnTax` that is being
     * applied to the `OrderReturnServiceCharge`. On reads, the applied amount is
     * populated.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItemAppliedTax> $appliedTaxes
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_taxes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItemAppliedTax>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $appliedTaxes = null;
    
    /**
     * The calculation phase after which to apply the service charge.
     * 
     * @var ?string $calculationPhase
     */
	#[\JMS\Serializer\Annotation\SerializedName('calculation_phase')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $calculationPhase = null;
    
    /**
     * The catalog object ID of the associated [OrderServiceCharge](https://developer.squareup.com/reference/square_2021-08-18/objects/OrderServiceCharge).
     * 
     * @var ?string $catalogObjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_object_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $catalogObjectId = null;
    
    /**
     * The version of the catalog object that this service charge references.
     * 
     * @var ?int $catalogVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $catalogVersion = null;
    
    /**
     * The name of the service charge.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The percentage of the service charge, as a string representation of
     * 
     * a decimal number. For example, a value of `"7.25"` corresponds to a
     * percentage of 7.25%.
     * 
     * Either `percentage` or `amount_money` should be set, but not both.
     * 
     * @var ?string $percentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('percentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $percentage = null;
    
    /**
     * The service charge `uid` from the order containing the original
     * 
     * service charge. `source_service_charge_uid` is `null` for
     * unlinked returns.
     * 
     * @var ?string $sourceServiceChargeUid
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_service_charge_uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceServiceChargeUid = null;
    
    /**
     * Indicates whether the surcharge can be taxed. Service charges
     * 
     * calculated in the `TOTAL_PHASE` cannot be marked as taxable.
     * 
     * @var ?bool $taxable
     */
	#[\JMS\Serializer\Annotation\SerializedName('taxable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $taxable = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $totalMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $totalMoney = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $totalTaxMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_tax_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $totalTaxMoney = null;
    
    /**
     * A unique ID that identifies the return service charge only within this order.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->amountMoney = null;
		$this->appliedMoney = null;
		$this->appliedTaxes = null;
		$this->calculationPhase = null;
		$this->catalogObjectId = null;
		$this->catalogVersion = null;
		$this->name = null;
		$this->percentage = null;
		$this->sourceServiceChargeUid = null;
		$this->taxable = null;
		$this->totalMoney = null;
		$this->totalTaxMoney = null;
		$this->uid = null;
	}
}
