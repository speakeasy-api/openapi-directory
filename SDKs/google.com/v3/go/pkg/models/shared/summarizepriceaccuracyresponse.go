// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum - The current Book on Google price accuracy score.
type SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum string

const (
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumExcellent                     SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumGood                          SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "GOOD"
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumPoor                          SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "POOR"
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumAtRisk                        SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnumFailed                        SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum) ToPointer() *SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponseCurrentOverallScoreEnum - The current price accuracy score combining both website and Book on Google scores.
type SummarizePriceAccuracyResponseCurrentOverallScoreEnum string

const (
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumExcellent                     SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumGood                          SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "GOOD"
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumPoor                          SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "POOR"
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumAtRisk                        SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponseCurrentOverallScoreEnumFailed                        SummarizePriceAccuracyResponseCurrentOverallScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponseCurrentOverallScoreEnum) ToPointer() *SummarizePriceAccuracyResponseCurrentOverallScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponseCurrentOverallScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponseCurrentOverallScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponseCurrentOverallScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponseCurrentScoreEnum - The current price accuracy score. Contains the same value as `current_website_score`. For clarity, use either `current_website_score` or 'current_overall_score` depending upon which is needed.
type SummarizePriceAccuracyResponseCurrentScoreEnum string

const (
	SummarizePriceAccuracyResponseCurrentScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponseCurrentScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponseCurrentScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponseCurrentScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponseCurrentScoreEnumExcellent                     SummarizePriceAccuracyResponseCurrentScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponseCurrentScoreEnumGood                          SummarizePriceAccuracyResponseCurrentScoreEnum = "GOOD"
	SummarizePriceAccuracyResponseCurrentScoreEnumPoor                          SummarizePriceAccuracyResponseCurrentScoreEnum = "POOR"
	SummarizePriceAccuracyResponseCurrentScoreEnumAtRisk                        SummarizePriceAccuracyResponseCurrentScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponseCurrentScoreEnumFailed                        SummarizePriceAccuracyResponseCurrentScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponseCurrentScoreEnum) ToPointer() *SummarizePriceAccuracyResponseCurrentScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponseCurrentScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponseCurrentScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponseCurrentScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum - The current website price accuracy score.
type SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum string

const (
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumExcellent                     SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumGood                          SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "GOOD"
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumPoor                          SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "POOR"
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumAtRisk                        SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponseCurrentWebsiteScoreEnumFailed                        SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum) ToPointer() *SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum - The predicted Book on Google price accuracy score.
type SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum string

const (
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumExcellent                     SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumGood                          SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "GOOD"
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumPoor                          SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "POOR"
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumAtRisk                        SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnumFailed                        SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum) ToPointer() *SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponsePredictedOverallScoreEnum - The predicted price accuracy score combining both website and Book on Google scores.
type SummarizePriceAccuracyResponsePredictedOverallScoreEnum string

const (
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumExcellent                     SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumGood                          SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "GOOD"
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumPoor                          SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "POOR"
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumAtRisk                        SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponsePredictedOverallScoreEnumFailed                        SummarizePriceAccuracyResponsePredictedOverallScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponsePredictedOverallScoreEnum) ToPointer() *SummarizePriceAccuracyResponsePredictedOverallScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponsePredictedOverallScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponsePredictedOverallScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponsePredictedOverallScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponsePredictedScoreEnum - The predicted price accuracy score. Contains the same value as `predicted_website_score`. For clarity, use either `predicted_website_score` or 'predicted_overall_score` depending upon which is needed.
type SummarizePriceAccuracyResponsePredictedScoreEnum string

const (
	SummarizePriceAccuracyResponsePredictedScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponsePredictedScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponsePredictedScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponsePredictedScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponsePredictedScoreEnumExcellent                     SummarizePriceAccuracyResponsePredictedScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponsePredictedScoreEnumGood                          SummarizePriceAccuracyResponsePredictedScoreEnum = "GOOD"
	SummarizePriceAccuracyResponsePredictedScoreEnumPoor                          SummarizePriceAccuracyResponsePredictedScoreEnum = "POOR"
	SummarizePriceAccuracyResponsePredictedScoreEnumAtRisk                        SummarizePriceAccuracyResponsePredictedScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponsePredictedScoreEnumFailed                        SummarizePriceAccuracyResponsePredictedScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponsePredictedScoreEnum) ToPointer() *SummarizePriceAccuracyResponsePredictedScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponsePredictedScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponsePredictedScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponsePredictedScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum - The predicted website price accuracy score.
type SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum string

const (
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumPriceAccuracyStateUnspecified SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "PRICE_ACCURACY_STATE_UNSPECIFIED"
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumPriceAccuracyStateUnknown     SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "PRICE_ACCURACY_STATE_UNKNOWN"
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumExcellent                     SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "EXCELLENT"
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumGood                          SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "GOOD"
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumPoor                          SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "POOR"
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumAtRisk                        SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "AT_RISK"
	SummarizePriceAccuracyResponsePredictedWebsiteScoreEnumFailed                        SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum = "FAILED"
)

func (e SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum) ToPointer() *SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum {
	return &e
}

func (e *SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRICE_ACCURACY_STATE_UNSPECIFIED":
		fallthrough
	case "PRICE_ACCURACY_STATE_UNKNOWN":
		fallthrough
	case "EXCELLENT":
		fallthrough
	case "GOOD":
		fallthrough
	case "POOR":
		fallthrough
	case "AT_RISK":
		fallthrough
	case "FAILED":
		*e = SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum: %v", v)
	}
}

// SummarizePriceAccuracyResponse - Response message for PriceAccuracyViewService.SummarizePriceAccuracy.
type SummarizePriceAccuracyResponse struct {
	// The current Book on Google price accuracy score.
	CurrentBookOnGoogleScore *SummarizePriceAccuracyResponseCurrentBookOnGoogleScoreEnum `json:"currentBookOnGoogleScore,omitempty"`
	// The current price accuracy score combining both website and Book on Google scores.
	CurrentOverallScore *SummarizePriceAccuracyResponseCurrentOverallScoreEnum `json:"currentOverallScore,omitempty"`
	// The current price accuracy score. Contains the same value as `current_website_score`. For clarity, use either `current_website_score` or 'current_overall_score` depending upon which is needed.
	CurrentScore *SummarizePriceAccuracyResponseCurrentScoreEnum `json:"currentScore,omitempty"`
	// The current website price accuracy score.
	CurrentWebsiteScore *SummarizePriceAccuracyResponseCurrentWebsiteScoreEnum `json:"currentWebsiteScore,omitempty"`
	// The predicted Book on Google price accuracy score.
	PredictedBookOnGoogleScore *SummarizePriceAccuracyResponsePredictedBookOnGoogleScoreEnum `json:"predictedBookOnGoogleScore,omitempty"`
	// The predicted price accuracy score combining both website and Book on Google scores.
	PredictedOverallScore *SummarizePriceAccuracyResponsePredictedOverallScoreEnum `json:"predictedOverallScore,omitempty"`
	// The predicted price accuracy score. Contains the same value as `predicted_website_score`. For clarity, use either `predicted_website_score` or 'predicted_overall_score` depending upon which is needed.
	PredictedScore *SummarizePriceAccuracyResponsePredictedScoreEnum `json:"predictedScore,omitempty"`
	// The predicted website price accuracy score.
	PredictedWebsiteScore *SummarizePriceAccuracyResponsePredictedWebsiteScoreEnum `json:"predictedWebsiteScore,omitempty"`
	// The update timestamp for the current score.
	UpdateTime *string `json:"updateTime,omitempty"`
}
