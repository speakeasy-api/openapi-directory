/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomFieldRequestInput - Custom Fields store the metadata that is used in order to add user-specified information to tasks in Asana. Be sure to reference the [Custom Fields](/docs/asana-custom-fields) developer documentation for more information about how custom fields relate to various resources in Asana.
 * 
 * Users in Asana can [lock custom fields](https://asana.com/guide/help/premium/custom-fields#gl-lock-fields), which will make them read-only when accessed by other users. Attempting to edit a locked custom field will return HTTP error code `403 Forbidden`.
 */
public class CustomFieldRequestInput {
    /**
     * ISO 4217 currency code to format this custom field. This will be null if the `format` is not `currency`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency_code")
    public String currencyCode;

    public CustomFieldRequestInput withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * This is the string that appears next to the custom field value. This will be null if the `format` is not `custom`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_label")
    public String customLabel;

    public CustomFieldRequestInput withCustomLabel(String customLabel) {
        this.customLabel = customLabel;
        return this;
    }
    
    /**
     * Only relevant for custom fields with `custom` format. This depicts where to place the custom label. This will be null if the `format` is not `custom`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_label_position")
    public CustomFieldRequestCustomLabelPositionEnum customLabelPosition;

    public CustomFieldRequestInput withCustomLabelPosition(CustomFieldRequestCustomLabelPositionEnum customLabelPosition) {
        this.customLabelPosition = customLabelPosition;
        return this;
    }
    
    /**
     * *Conditional*. Only relevant for custom fields of type `date`. This object reflects the chosen date (and optionally, time) value of a `date` custom field. If no date is selected, the value of `date_value` will be `null`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_value")
    public CustomFieldRequestDateValue dateValue;

    public CustomFieldRequestInput withDateValue(CustomFieldRequestDateValue dateValue) {
        this.dateValue = dateValue;
        return this;
    }
    
    /**
     * [Opt In](/docs/input-output-options). The description of the custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CustomFieldRequestInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * *Conditional*. Determines if the custom field is enabled or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public CustomFieldRequestInput withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * *Conditional*. Only relevant for custom fields of type `enum`. This array specifies the possible values which an `enum` custom field can adopt. To modify the enum options, refer to [working with enum options](/docs/create-an-enum-option).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enum_options")
    public EnumOptionInput[] enumOptions;

    public CustomFieldRequestInput withEnumOptions(EnumOptionInput[] enumOptions) {
        this.enumOptions = enumOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enum_value")
    public CustomFieldRequestEnumValueInput enumValue;

    public CustomFieldRequestInput withEnumValue(CustomFieldRequestEnumValueInput enumValue) {
        this.enumValue = enumValue;
        return this;
    }
    
    /**
     * The format of this custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("format")
    public CustomFieldRequestFormatEnum format;

    public CustomFieldRequestInput withFormat(CustomFieldRequestFormatEnum format) {
        this.format = format;
        return this;
    }
    
    /**
     * *Conditional*. This flag describes whether a follower of a task with this field should receive inbox notifications from changes to this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("has_notifications_enabled")
    public Boolean hasNotificationsEnabled;

    public CustomFieldRequestInput withHasNotificationsEnabled(Boolean hasNotificationsEnabled) {
        this.hasNotificationsEnabled = hasNotificationsEnabled;
        return this;
    }
    
    /**
     * *Conditional*. Only relevant for custom fields of type `multi_enum`. This object is the chosen values of a `multi_enum` custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("multi_enum_values")
    public EnumOptionInput[] multiEnumValues;

    public CustomFieldRequestInput withMultiEnumValues(EnumOptionInput[] multiEnumValues) {
        this.multiEnumValues = multiEnumValues;
        return this;
    }
    
    /**
     * The name of the custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CustomFieldRequestInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * *Conditional*. This number is the value of a `number` custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number_value")
    public Double numberValue;

    public CustomFieldRequestInput withNumberValue(Double numberValue) {
        this.numberValue = numberValue;
        return this;
    }
    
    /**
     * *Conditional*. Only relevant for custom fields of type `people`. This array of user GIDs reflects the users to be written to a `people` custom field. Note that *write* operations will replace existing users (if any) in the custom field with the users specified in this array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("people_value")
    public String[] peopleValue;

    public CustomFieldRequestInput withPeopleValue(String[] peopleValue) {
        this.peopleValue = peopleValue;
        return this;
    }
    
    /**
     * Only relevant for custom fields of type \u2018Number\u2019. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
     * For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
     * The identifier format will always have a precision of 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("precision")
    public Long precision;

    public CustomFieldRequestInput withPrecision(Long precision) {
        this.precision = precision;
        return this;
    }
    
    /**
     * The type of the custom field. Must be one of the given values.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_subtype")
    public CustomFieldRequestResourceSubtypeEnum resourceSubtype;

    public CustomFieldRequestInput withResourceSubtype(CustomFieldRequestResourceSubtypeEnum resourceSubtype) {
        this.resourceSubtype = resourceSubtype;
        return this;
    }
    
    /**
     * *Conditional*. This string is the value of a `text` custom field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text_value")
    public String textValue;

    public CustomFieldRequestInput withTextValue(String textValue) {
        this.textValue = textValue;
        return this;
    }
    
    /**
     * *Create-Only* The workspace to create a custom field in.
     */
    @JsonProperty("workspace")
    public String workspace;

    public CustomFieldRequestInput withWorkspace(String workspace) {
        this.workspace = workspace;
        return this;
    }
    
    public CustomFieldRequestInput(@JsonProperty("workspace") String workspace) {
        this.workspace = workspace;
  }
}
