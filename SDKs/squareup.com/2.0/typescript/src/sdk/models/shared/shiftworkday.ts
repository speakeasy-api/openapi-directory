/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DateRange } from "./daterange";
import { Expose, Type } from "class-transformer";

/**
 * A `Shift` search query filter parameter that sets a range of days that
 *
 * @remarks
 * a `Shift` must start or end in before passing the filter condition.
 */
export class ShiftWorkday extends SpeakeasyBase {
  /**
   * A range defined by two dates. Used for filtering a query for Connect v2
   *
   * @remarks
   * objects that have date properties.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_range" })
  @Type(() => DateRange)
  dateRange?: DateRange;

  /**
   * Location-specific timezones convert workdays to datetime filters.
   *
   * @remarks
   * Every location included in the query must have a timezone or this field
   * must be provided as a fallback. Format: the IANA timezone database
   * identifier for the relevant timezone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "default_timezone" })
  defaultTimezone?: string;

  /**
   * The strategy on which the dates are applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "match_shifts_by" })
  matchShiftsBy?: string;
}
