<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateGroupSettingsApplicationJSON1Recording
{
    /**
     * Make cloud recordings accessible to account members only.
     * 
     * @var ?bool $accountUserAccessRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_user_access_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $accountUserAccessRecording = null;
    
    /**
     * [Archiving solution](https://support.zoom.us/hc/en-us/articles/360050431572-Archiving-Meeting-and-Webinar-data) settings. This setting can only be used if you have been granted archiving solution access by the Zoom Support team.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGroupSettingsApplicationJSON1RecordingArchive $archive
     */
	#[\JMS\Serializer\Annotation\SerializedName('archive')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateGroupSettingsApplicationJSON1RecordingArchive')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGroupSettingsApplicationJSON1RecordingArchive $archive = null;
    
    /**
     * Record meetings automatically as they start.
     * 
     * @var ?string $autoRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_recording')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $autoRecording = null;
    
    /**
     * Allow hosts to record and save the meeting / webinar in the cloud.
     * 
     * @var ?bool $cloudRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecording = null;
    
    /**
     * Allow anyone with a link to the cloud recording to download.
     * 
     * @var ?bool $cloudRecordingDownload
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording_download')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecordingDownload = null;
    
    /**
     * Allow only the host with a link to the cloud recording to download.
     * 
     * @var ?bool $cloudRecordingDownloadHost
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloud_recording_download_host')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cloudRecordingDownloadHost = null;
    
    /**
     * Allow the host to delete the recordings. If this option is disabled, the recordings cannot be deleted by the host and only admin can delete them.
     * 
     * @var ?bool $hostDeleteCloudRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('host_delete_cloud_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hostDeleteCloudRecording = null;
    
    /**
     * Setting to allow cloud recording access only from specific IP address ranges.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateGroupSettingsApplicationJSON1RecordingIpAddressAccessControl $ipAddressAccessControl
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip_address_access_control')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\UpdateGroupSettingsApplicationJSON1RecordingIpAddressAccessControl')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateGroupSettingsApplicationJSON1RecordingIpAddressAccessControl $ipAddressAccessControl = null;
    
    /**
     * Allow hosts and participants to record the meeting to a local file.
     * 
     * @var ?bool $localRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('local_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $localRecording = null;
    
    /**
     * If set to `true`, meeting hosts cannot view their meeting cloud recordings. Only the admins who have recording management privilege can access them.
     * 
     * 
     * 
     * 
     * @var ?bool $preventHostAccessRecording
     */
	#[\JMS\Serializer\Annotation\SerializedName('prevent_host_access_recording')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $preventHostAccessRecording = null;
    
    /**
     * Record an audio only file.
     * 
     * @var ?bool $recordAudioFile
     */
	#[\JMS\Serializer\Annotation\SerializedName('record_audio_file')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordAudioFile = null;
    
    /**
     * When someone is sharing their screen, active speaker will show on the top right corner of the shared screen.
     * 
     * @var ?bool $recordGalleryView
     */
	#[\JMS\Serializer\Annotation\SerializedName('record_gallery_view')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordGalleryView = null;
    
    /**
     * Record active speaker with shared screen.
     * 
     * @var ?bool $recordSpeakerView
     */
	#[\JMS\Serializer\Annotation\SerializedName('record_speaker_view')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordSpeakerView = null;
    
    /**
     * Automatically transcribe the audio of a meeting or webinar for cloud recordings.
     * 
     * @var ?bool $recordingAudioTranscript
     */
	#[\JMS\Serializer\Annotation\SerializedName('recording_audio_transcript')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $recordingAudioTranscript = null;
    
    /**
     * Save chat messages from the meeting / webinar.
     * 
     * @var ?bool $saveChatText
     */
	#[\JMS\Serializer\Annotation\SerializedName('save_chat_text')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $saveChatText = null;
    
    /**
     * Add a timestamp to the recording.
     * 
     * @var ?bool $showTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('show_timestamp')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $showTimestamp = null;
    
	public function __construct()
	{
		$this->accountUserAccessRecording = null;
		$this->archive = null;
		$this->autoRecording = null;
		$this->cloudRecording = null;
		$this->cloudRecordingDownload = null;
		$this->cloudRecordingDownloadHost = null;
		$this->hostDeleteCloudRecording = null;
		$this->ipAddressAccessControl = null;
		$this->localRecording = null;
		$this->preventHostAccessRecording = null;
		$this->recordAudioFile = null;
		$this->recordGalleryView = null;
		$this->recordSpeakerView = null;
		$this->recordingAudioTranscript = null;
		$this->saveChatText = null;
		$this->showTimestamp = null;
	}
}
