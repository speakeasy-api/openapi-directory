/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorFieldType } from "./errorfieldtype";
import { Expose, Type } from "class-transformer";

/**
 * OK - the request has succeeded.
 */
export class RefundFundsTransferResponse extends SpeakeasyBase {
  /**
   * Contains field validation errors that would prevent requests from being processed.
   */
  @SpeakeasyMetadata({ elemType: ErrorFieldType })
  @Expose({ name: "invalidFields" })
  @Type(() => ErrorFieldType)
  invalidFields?: ErrorFieldType[];

  /**
   * The value supplied by the executing user when initiating the transfer refund; may be used to link multiple transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantReference" })
  merchantReference?: string;

  /**
   * The message of the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  /**
   * A PSP reference of the original fund transfer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalReference" })
  originalReference?: string;

  /**
   * The reference of a request. Can be used to uniquely identify the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * The result code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: string;
}
