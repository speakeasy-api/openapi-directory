"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrafficPercentStrategy:
    r"""Strategy that specifies how clients of Google Service Controller want to send traffic to use different config versions. This is generally used by API proxy to split traffic based on your configured percentage for each config version. One example of how to gradually rollout a new service configuration using this strategy: Day 1 Rollout { id: \\"example.googleapis.com/rollout_20160206\\" traffic_percent_strategy { percentages: { \\"example.googleapis.com/20160201\\": 70.00 \\"example.googleapis.com/20160206\\": 30.00 } } } Day 2 Rollout { id: \\"example.googleapis.com/rollout_20160207\\" traffic_percent_strategy: { percentages: { \\"example.googleapis.com/20160206\\": 100.00 } } }"""
    
    percentages: Optional[dict[str, float]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentages'), 'exclude': lambda f: f is None }})
    r"""Maps service configuration IDs to their corresponding traffic percentage. Key is the service configuration ID, Value is the traffic percentage which must be greater than 0.0 and the sum must equal to 100.0."""  
    