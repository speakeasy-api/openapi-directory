/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecommendationengineV1beta1CatalogItem - CatalogItem captures all metadata information of items to be recommended.
 */
public class GoogleCloudRecommendationengineV1beta1CatalogItem {
    /**
     * Required. Catalog item categories. This field is repeated for supporting one catalog item belonging to several parallel category hierarchies. For example, if a shoes product belongs to both ["Shoes &amp; Accessories" -&gt; "Shoes"] and ["Sports &amp; Fitness" -&gt; "Athletic Clothing" -&gt; "Shoes"], it could be represented as: "categoryHierarchies": [ { "categories": ["Shoes &amp; Accessories", "Shoes"]}, { "categories": ["Sports &amp; Fitness", "Athletic Clothing", "Shoes"] } ]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryHierarchies")
    public GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy[] categoryHierarchies;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withCategoryHierarchies(GoogleCloudRecommendationengineV1beta1CatalogItemCategoryHierarchy[] categoryHierarchies) {
        this.categoryHierarchies = categoryHierarchies;
        return this;
    }
    
    /**
     * Optional. Catalog item description. UTF-8 encoded string with a length limit of 5 KiB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Required. Catalog item identifier. UTF-8 encoded string with a length limit of 128 bytes. This id must be unique among all catalog items within the same catalog. It should also be used when logging user events in order for the user events to be joined with the Catalog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemAttributes")
    public GoogleCloudRecommendationengineV1beta1FeatureMap itemAttributes;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withItemAttributes(GoogleCloudRecommendationengineV1beta1FeatureMap itemAttributes) {
        this.itemAttributes = itemAttributes;
        return this;
    }
    
    /**
     * Optional. Variant group identifier for prediction results. UTF-8 encoded string with a length limit of 128 bytes. This field must be enabled before it can be used. [Learn more](/recommendations-ai/docs/catalog#item-group-id).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemGroupId")
    public String itemGroupId;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withItemGroupId(String itemGroupId) {
        this.itemGroupId = itemGroupId;
        return this;
    }
    
    /**
     * Optional. Deprecated. The model automatically detects the text language. Your catalog can include text in different languages, but duplicating catalog items to provide text in multiple languages can result in degraded model performance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * ProductCatalogItem captures item metadata specific to retail products.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productMetadata")
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItem productMetadata;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withProductMetadata(GoogleCloudRecommendationengineV1beta1ProductCatalogItem productMetadata) {
        this.productMetadata = productMetadata;
        return this;
    }
    
    /**
     * Optional. Filtering tags associated with the catalog item. Each tag should be a UTF-8 encoded string with a length limit of 1 KiB. This tag can be used for filtering recommendation results by passing the tag as part of the predict request filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Required. Catalog item title. UTF-8 encoded string with a length limit of 1 KiB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public GoogleCloudRecommendationengineV1beta1CatalogItem withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
