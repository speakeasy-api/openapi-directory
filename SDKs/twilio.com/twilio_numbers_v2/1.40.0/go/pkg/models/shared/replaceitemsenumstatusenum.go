// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplaceItemsEnumStatusEnum string

const (
	ReplaceItemsEnumStatusEnumDraft                 ReplaceItemsEnumStatusEnum = "draft"
	ReplaceItemsEnumStatusEnumPendingReview         ReplaceItemsEnumStatusEnum = "pending-review"
	ReplaceItemsEnumStatusEnumInReview              ReplaceItemsEnumStatusEnum = "in-review"
	ReplaceItemsEnumStatusEnumTwilioRejected        ReplaceItemsEnumStatusEnum = "twilio-rejected"
	ReplaceItemsEnumStatusEnumTwilioApproved        ReplaceItemsEnumStatusEnum = "twilio-approved"
	ReplaceItemsEnumStatusEnumProvisionallyApproved ReplaceItemsEnumStatusEnum = "provisionally-approved"
)

func (e *ReplaceItemsEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "draft":
		fallthrough
	case "pending-review":
		fallthrough
	case "in-review":
		fallthrough
	case "twilio-rejected":
		fallthrough
	case "twilio-approved":
		fallthrough
	case "provisionally-approved":
		*e = ReplaceItemsEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplaceItemsEnumStatusEnum: %s", s)
	}
}
