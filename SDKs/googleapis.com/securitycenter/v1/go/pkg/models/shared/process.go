// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Process - Represents an operating system process.
type Process struct {
	// Process arguments as JSON encoded strings.
	Args []string `json:"args,omitempty"`
	// True if `args` is incomplete.
	ArgumentsTruncated *bool `json:"argumentsTruncated,omitempty"`
	// File information about the related binary/library used by an executable, or the script used by a script interpreter
	Binary *File `json:"binary,omitempty"`
	// Process environment variables.
	EnvVariables []EnvironmentVariable `json:"envVariables,omitempty"`
	// True if `env_variables` is incomplete.
	EnvVariablesTruncated *bool `json:"envVariablesTruncated,omitempty"`
	// File information for libraries loaded by the process.
	Libraries []File `json:"libraries,omitempty"`
	// The process name, as displayed in utilities like `top` and `ps`. This name can be accessed through `/proc/[pid]/comm` and changed with `prctl(PR_SET_NAME)`.
	Name *string `json:"name,omitempty"`
	// The parent process ID.
	ParentPid *string `json:"parentPid,omitempty"`
	// The process ID.
	Pid *string `json:"pid,omitempty"`
	// File information about the related binary/library used by an executable, or the script used by a script interpreter
	Script *File `json:"script,omitempty"`
}
