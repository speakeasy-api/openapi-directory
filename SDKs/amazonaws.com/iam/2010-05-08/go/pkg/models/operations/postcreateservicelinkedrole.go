// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCreateServiceLinkedRoleActionEnum
type POSTCreateServiceLinkedRoleActionEnum string

const (
	POSTCreateServiceLinkedRoleActionEnumCreateServiceLinkedRole POSTCreateServiceLinkedRoleActionEnum = "CreateServiceLinkedRole"
)

func (e *POSTCreateServiceLinkedRoleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateServiceLinkedRole":
		*e = POSTCreateServiceLinkedRoleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateServiceLinkedRoleActionEnum: %s", s)
	}
}

// POSTCreateServiceLinkedRoleVersionEnum
type POSTCreateServiceLinkedRoleVersionEnum string

const (
	POSTCreateServiceLinkedRoleVersionEnumTwoThousandAndTen0508 POSTCreateServiceLinkedRoleVersionEnum = "2010-05-08"
)

func (e *POSTCreateServiceLinkedRoleVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = POSTCreateServiceLinkedRoleVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCreateServiceLinkedRoleVersionEnum: %s", s)
	}
}

type POSTCreateServiceLinkedRoleQueryParams struct {
	Action  POSTCreateServiceLinkedRoleActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTCreateServiceLinkedRoleVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTCreateServiceLinkedRoleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCreateServiceLinkedRoleRequest struct {
	QueryParams POSTCreateServiceLinkedRoleQueryParams
	Headers     POSTCreateServiceLinkedRoleHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTCreateServiceLinkedRoleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
