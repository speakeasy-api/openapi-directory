<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WatchInput - A watch for events for a form. When the designated event happens, a notification will be published to the specified target. The notification's attributes will include a `formId` key that has the ID of the watched form and an `eventType` key that has the string of the type. Messages are sent with at-least-once delivery and are only dropped in extraordinary circumstances. Typically all notifications should be reliably delivered within a few seconds; however, in some situations notifications may be delayed. A watch expires seven days after it is created unless it is renewed with watches.renew
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WatchInput
{
    /**
     * Required. Which event type to watch for.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WatchEventTypeEnum $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WatchEventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WatchEventTypeEnum $eventType = null;
    
    /**
     * The target for notification delivery.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WatchTarget $target
     */
	#[\JMS\Serializer\Annotation\SerializedName('target')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WatchTarget')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WatchTarget $target = null;
    
	public function __construct()
	{
		$this->eventType = null;
		$this->target = null;
	}
}
