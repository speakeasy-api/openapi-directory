<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetVcdHierarchyDescendantsV1Request
{
    /**
     * Filter by ID of effective SLA domain.
     * 
     * @var ?string $effectiveSlaDomainId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=effective_sla_domain_id')]
    public ?string $effectiveSlaDomainId = null;
    
    /**
     * ID of the parent vCD hierarchy object. To get top-level nodes, use **root** as the ID.
     * 
     * @var string $id
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id')]
    public string $id;
    
    /**
     * Filter by isRelic field of vCD vApp hierarchy object. Return both relic and non-relic descendants if this query is not set.
     * 
     * @var ?bool $isRelic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_relic')]
    public ?bool $isRelic = null;
    
    /**
     * Limit the number of matches returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Search object by object name.
     * 
     * @var ?string $name
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=name')]
    public ?string $name = null;
    
    /**
     * Filter by node object type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVcdHierarchyDescendantsV1ObjectTypeEnum $objectType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=object_type')]
    public ?GetVcdHierarchyDescendantsV1ObjectTypeEnum $objectType = null;
    
    /**
     * Ignore these many matches in the beginning.
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * Filter by primary cluster ID, or **local**.
     * 
     * @var ?string $primaryClusterId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=primary_cluster_id')]
    public ?string $primaryClusterId = null;
    
    /**
     * Filter by SLA assignment type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVcdHierarchyDescendantsV1SLAAssignmentEnum $slaAssignment
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sla_assignment')]
    public ?GetVcdHierarchyDescendantsV1SLAAssignmentEnum $slaAssignment = null;
    
    /**
     * Filters vCD hierarchy objects based on the specified query value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVcdHierarchyDescendantsV1SnappableStatusEnum $snappableStatus
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=snappable_status')]
    public ?GetVcdHierarchyDescendantsV1SnappableStatusEnum $snappableStatus = null;
    
    /**
     * Attribute to sort the results on.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVcdHierarchyDescendantsV1SortByEnum $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?GetVcdHierarchyDescendantsV1SortByEnum $sortBy = null;
    
    /**
     * Order for sorting the results, either ascending or descending.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetVcdHierarchyDescendantsV1SortOrderEnum $sortOrder
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_order')]
    public ?GetVcdHierarchyDescendantsV1SortOrderEnum $sortOrder = null;
    
	public function __construct()
	{
		$this->effectiveSlaDomainId = null;
		$this->id = "";
		$this->isRelic = null;
		$this->limit = null;
		$this->name = null;
		$this->objectType = null;
		$this->offset = null;
		$this->primaryClusterId = null;
		$this->slaAssignment = null;
		$this->snappableStatus = null;
		$this->sortBy = null;
		$this->sortOrder = null;
	}
}
