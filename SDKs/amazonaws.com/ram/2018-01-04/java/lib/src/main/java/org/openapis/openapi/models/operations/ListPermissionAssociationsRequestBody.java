/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ListPermissionAssociationsRequestBody {
    /**
     * Specifies that you want to list only those associations with resource shares that match this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associationStatus")
    public ListPermissionAssociationsRequestBodyAssociationStatusEnum associationStatus;

    public ListPermissionAssociationsRequestBody withAssociationStatus(ListPermissionAssociationsRequestBodyAssociationStatusEnum associationStatus) {
        this.associationStatus = associationStatus;
        return this;
    }
    
    /**
     * &lt;p&gt;When &lt;code&gt;true&lt;/code&gt;, specifies that you want to list only those associations with resource shares that use the default version of the specified managed permission.&lt;/p&gt; &lt;p&gt;When &lt;code&gt;false&lt;/code&gt; (the default value), lists associations with resource shares that use any version of the specified managed permission.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultVersion")
    public Boolean defaultVersion;

    public ListPermissionAssociationsRequestBody withDefaultVersion(Boolean defaultVersion) {
        this.defaultVersion = defaultVersion;
        return this;
    }
    
    /**
     * Specifies that you want to list only those associations with resource shares that have a &lt;code&gt;featureSet&lt;/code&gt; with this value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featureSet")
    public ListPermissionAssociationsRequestBodyFeatureSetEnum featureSet;

    public ListPermissionAssociationsRequestBody withFeatureSet(ListPermissionAssociationsRequestBodyFeatureSetEnum featureSet) {
        this.featureSet = featureSet;
        return this;
    }
    
    /**
     * Specifies the total number of results that you want included on each page of the response. If you do not include this parameter, it defaults to a value that is specific to the operation. If additional items exist beyond the number you specify, the &lt;code&gt;NextToken&lt;/code&gt; response element is returned with a value (not null). Include the specified value as the &lt;code&gt;NextToken&lt;/code&gt; request parameter in the next call to the operation to get the next part of the results. Note that the service might return fewer results than the maximum even when there are more results available. You should check &lt;code&gt;NextToken&lt;/code&gt; after every operation to ensure that you receive all of the results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;

    public ListPermissionAssociationsRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * Specifies that you want to receive the next page of results. Valid only if you received a &lt;code&gt;NextToken&lt;/code&gt; response in the previous request. If you did, it indicates that more output is available. Set this parameter to the value provided by the previous call's &lt;code&gt;NextToken&lt;/code&gt; response to request the next page of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;

    public ListPermissionAssociationsRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * Specifies the &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"&gt;Amazon Resource Name (ARN)&lt;/a&gt; of the managed permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissionArn")
    public String permissionArn;

    public ListPermissionAssociationsRequestBody withPermissionArn(String permissionArn) {
        this.permissionArn = permissionArn;
        return this;
    }
    
    /**
     * Specifies that you want to list only those associations with resource shares that use this version of the managed permission. If you don't provide a value for this parameter, then the operation returns information about associations with resource shares that use any version of the managed permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissionVersion")
    public Long permissionVersion;

    public ListPermissionAssociationsRequestBody withPermissionVersion(Long permissionVersion) {
        this.permissionVersion = permissionVersion;
        return this;
    }
    
    /**
     * Specifies that you want to list only those associations with resource shares that include at least one resource of this resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceType")
    public String resourceType;

    public ListPermissionAssociationsRequestBody withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    public ListPermissionAssociationsRequestBody(){}
}
