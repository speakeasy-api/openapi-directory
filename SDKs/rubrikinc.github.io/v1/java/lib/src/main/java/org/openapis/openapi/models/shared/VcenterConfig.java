/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VcenterConfig - IP address and account credentials of the vCenter Server server, and ID of the managing Rubrik cluster.
 */
public class VcenterConfig {
    /**
     * Concatenated X.509 certificates in Base64 encoded DER format. Each certificate must start with -----BEGIN CERTIFICATE----- and end with -----END CERTIFICATE-----.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caCerts")
    public String caCerts;

    public VcenterConfig withCaCerts(String caCerts) {
        this.caCerts = caCerts;
        return this;
    }
    
    /**
     * Select compute clusters that must be visible to this Rubrik cluster. All other compute resources are hidden. If 'computeVisibilityFilter' is not specified, all resources are visible. If 'hostGroupFilter' is not specified for a compute cluster, all compute resources in the compute cluster are visible. If 'hostGroupFilter' is specified for a compute cluster, only virtual machinesthat currently reside on these hosts are visible. For the stretched cluster configuration (vMSC), specify the appropriate host groups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeVisibilityFilter")
    public ClusterVisibilityConfig[] computeVisibilityFilter;

    public VcenterConfig withComputeVisibilityFilter(ClusterVisibilityConfig[] computeVisibilityFilter) {
        this.computeVisibilityFilter = computeVisibilityFilter;
        return this;
    }
    
    /**
     * Set to 'AllowAutoConflictResolution' to link the relic virtual machine objects of a virtual machine to the current object for the virtual machine or to 'NoConflictResolution' to prevent linking. The Rubrik cluster generates a unique ID for each virtual machine when a vCenter Server is added. When a virtual machine changes to another vCenter Server or unregisters and registers with the same vCenter Server, a new unique ID is generated for that virtual machine. When this happens, the virtual machine object associated with the original ID becomes a relic. This option links relic virtual machine objects with the current virtual machine object of a specific virtual machine, and makes the collective snapshot history available through the current object. Default value is 'NoConflictResolution'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conflictResolutionAuthz")
    public VcenterConfigConflictResolutionAuthzEnum conflictResolutionAuthz;

    public VcenterConfig withConflictResolutionAuthz(VcenterConfigConflictResolutionAuthzEnum conflictResolutionAuthz) {
        this.conflictResolutionAuthz = conflictResolutionAuthz;
        return this;
    }
    
    @JsonProperty("hostname")
    public String hostname;

    public VcenterConfig withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    @JsonProperty("password")
    public String password;

    public VcenterConfig withPassword(String password) {
        this.password = password;
        return this;
    }
    
    @JsonProperty("username")
    public String username;

    public VcenterConfig withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public VcenterConfig(@JsonProperty("username") String username, @JsonProperty("password") String password, @JsonProperty("hostname") String hostname) {
        this.username = username;
        this.password = password;
        this.hostname = hostname;
  }
}
