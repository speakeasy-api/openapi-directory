/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Describes an potential intermediate component of a feasible path.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesAlternatePathHints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  componentArn?: string;

  @SpeakeasyMetadata()
  componentId?: string;
}

/**
 * The network ACL.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsPortRanges,
  })
  portRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroups,
  })
  securityGroups?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanationsVpnGateway;
}

/**
 * The range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsLoadBalancers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * Describes the rule options for a stateful rule group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions,
  })
  ruleOptions?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions[];
}

/**
 * Describes the type of a stateful rule group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupTypePairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata()
  ruleGroupType?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * The VPC endpoint service.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsVpcEndpointService extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an additional detail for a path analysis. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html">Reachability Analyzer additional detail codes</a>.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalDetailType?: string;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsComponent;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsLoadBalancers,
  })
  loadBalancers?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsLoadBalancers[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs,
  })
  ruleGroupRuleOptionsPairs?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupTypePairs,
  })
  ruleGroupTypePairs?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleGroupTypePairs[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleOptions,
  })
  ruleOptions?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsRuleOptions[];

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  vpcEndpointService?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetailsVpcEndpointService;
}

/**
 * The resource to which the path component is attached.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network ACL.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsPortRanges,
  })
  portRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroups,
  })
  securityGroups?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanationsVpnGateway;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The inbound header.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeaderSourcePortRanges[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The outbound header.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeaderSourcePortRanges[];
}

/**
 * The route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The port range.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * The source VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route in a transit gateway route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  aclRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAclRule;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetails,
  })
  additionalDetails?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAdditionalDetails[];

  @SpeakeasyMetadata()
  attachedTo?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsAttachedTo;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsComponent;

  @SpeakeasyMetadata()
  destinationVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsDestinationVpc;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsElasticLoadBalancerListener;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanations,
  })
  explanations?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsExplanations[];

  @SpeakeasyMetadata()
  firewallStatefulRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsFirewallStatelessRule;

  @SpeakeasyMetadata()
  inboundHeader?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsInboundHeader;

  @SpeakeasyMetadata()
  outboundHeader?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsOutboundHeader;

  @SpeakeasyMetadata()
  routeTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroupRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSecurityGroupRule;

  @SpeakeasyMetadata()
  sequenceNumber?: number;

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  sourceVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSourceVpc;

  @SpeakeasyMetadata()
  subnet?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsSubnet;

  @SpeakeasyMetadata()
  transitGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponentsVpc;
}

/**
 * The range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsLoadBalancers extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * Describes the rule options for a stateful rule group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions,
  })
  ruleOptions?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairsRuleOptions[];
}

/**
 * Describes the type of a stateful rule group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupTypePairs extends SpeakeasyBase {
  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata()
  ruleGroupType?: string;
}

/**
 * Describes additional settings for a stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  keyword?: string;

  @SpeakeasyMetadata()
  settings?: string[];
}

/**
 * The VPC endpoint service.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsVpcEndpointService extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an additional detail for a path analysis. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/additional-detail-codes.html">Reachability Analyzer additional detail codes</a>.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalDetailType?: string;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsComponent;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsLoadBalancers,
  })
  loadBalancers?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsLoadBalancers[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs,
  })
  ruleGroupRuleOptionsPairs?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupRuleOptionsPairs[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupTypePairs,
  })
  ruleGroupTypePairs?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleGroupTypePairs[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleOptions,
  })
  ruleOptions?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsRuleOptions[];

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  vpcEndpointService?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetailsVpcEndpointService;
}

/**
 * The resource to which the path component is attached.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network ACL.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAcl extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAclRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The network ACL rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAclRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  egress?: boolean;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAclRulePortRange;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleNumber?: number;
}

/**
 * The resource to which the component is attached.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAttachedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The listener for a Classic Load Balancer.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsClassicLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instancePort?: number;

  @SpeakeasyMetadata()
  loadBalancerPort?: number;
}

/**
 * The component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsComponent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The customer gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsCustomerGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The destination VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsDestinationVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The load balancer listener.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsElasticLoadBalancerListener extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * The route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsIngressRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The internet gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsInternetGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Information about the instance.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetInstance extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The target.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTarget extends SpeakeasyBase {
  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata()
  instance?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetInstance;

  @SpeakeasyMetadata()
  port?: number;
}

/**
 * The target group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The NAT gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsNatGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The network interface.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsNetworkInterface extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The prefix list.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsPrefixList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The security group.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The port range.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The source VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route table for the subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSubnetRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway attachment.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGatewayAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGatewayRouteTable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC endpoint.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpcEndpoint extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPC peering connection.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN connection.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpnConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The VPN gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpnGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes an explanation code for an unreachable path. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/reachability/explanation-codes.html">Reachability Analyzer explanation codes</a>.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  acl?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAcl;

  @SpeakeasyMetadata()
  aclRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAclRule;

  @SpeakeasyMetadata()
  address?: string;

  @SpeakeasyMetadata()
  addresses?: string[];

  @SpeakeasyMetadata()
  attachedTo?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsAttachedTo;

  @SpeakeasyMetadata()
  availabilityZones?: string[];

  @SpeakeasyMetadata()
  cidrs?: string[];

  @SpeakeasyMetadata()
  classicLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsClassicLoadBalancerListener;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsComponent;

  @SpeakeasyMetadata()
  componentAccount?: string;

  @SpeakeasyMetadata()
  componentRegion?: string;

  @SpeakeasyMetadata()
  customerGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsCustomerGateway;

  @SpeakeasyMetadata()
  destination?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsDestination;

  @SpeakeasyMetadata()
  destinationVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsDestinationVpc;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsElasticLoadBalancerListener;

  @SpeakeasyMetadata()
  explanationCode?: string;

  @SpeakeasyMetadata()
  firewallStatefulRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsFirewallStatelessRule;

  @SpeakeasyMetadata()
  ingressRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsIngressRouteTable;

  @SpeakeasyMetadata()
  internetGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsInternetGateway;

  @SpeakeasyMetadata()
  loadBalancerArn?: string;

  @SpeakeasyMetadata()
  loadBalancerListenerPort?: number;

  @SpeakeasyMetadata()
  loadBalancerTarget?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTarget;

  @SpeakeasyMetadata()
  loadBalancerTargetGroup?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetGroup;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetGroups,
  })
  loadBalancerTargetGroups?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsLoadBalancerTargetGroups[];

  @SpeakeasyMetadata()
  loadBalancerTargetPort?: number;

  @SpeakeasyMetadata()
  missingComponent?: string;

  @SpeakeasyMetadata()
  natGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsNatGateway;

  @SpeakeasyMetadata()
  networkInterface?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsNetworkInterface;

  @SpeakeasyMetadata()
  packetField?: string;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsPortRanges,
  })
  portRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsPortRanges[];

  @SpeakeasyMetadata()
  prefixList?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsPrefixList;

  @SpeakeasyMetadata()
  protocols?: string[];

  @SpeakeasyMetadata()
  routeTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsRouteTable;

  @SpeakeasyMetadata()
  routeTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroup?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroup;

  @SpeakeasyMetadata()
  securityGroupRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroupRule;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroups,
  })
  securityGroups?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSecurityGroups[];

  @SpeakeasyMetadata()
  sourceVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSourceVpc;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  subnet?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSubnet;

  @SpeakeasyMetadata()
  subnetRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsSubnetRouteTable;

  @SpeakeasyMetadata()
  transitGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayAttachment?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGatewayAttachment;

  @SpeakeasyMetadata()
  transitGatewayRouteTable?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGatewayRouteTable;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpc;

  @SpeakeasyMetadata()
  vpcEndpoint?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpcEndpoint;

  @SpeakeasyMetadata()
  vpcPeeringConnection?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpcPeeringConnection;

  @SpeakeasyMetadata()
  vpnConnection?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpnConnection;

  @SpeakeasyMetadata()
  vpnGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanationsVpnGateway;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateful rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRuleDestinationPorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRuleSourcePorts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The Network Firewall stateless rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRule extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRuleDestinationPorts,
  })
  destinationPorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRuleDestinationPorts[];

  @SpeakeasyMetadata()
  destinations?: string[];

  @SpeakeasyMetadata()
  priority?: number;

  @SpeakeasyMetadata()
  protocols?: number[];

  @SpeakeasyMetadata()
  ruleAction?: string;

  @SpeakeasyMetadata()
  ruleGroupArn?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRuleSourcePorts,
  })
  sourcePorts?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRuleSourcePorts[];

  @SpeakeasyMetadata()
  sources?: string[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The inbound header.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeaderSourcePortRanges[];
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeaderDestinationPortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * Describes a range of ports.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeaderSourcePortRanges extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The outbound header.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeader extends SpeakeasyBase {
  @SpeakeasyMetadata()
  destinationAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeaderDestinationPortRanges,
  })
  destinationPortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeaderDestinationPortRanges[];

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  sourceAddresses?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeaderSourcePortRanges,
  })
  sourcePortRanges?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeaderSourcePortRanges[];
}

/**
 * The route table route.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  carrierGatewayId?: string;

  @SpeakeasyMetadata()
  coreNetworkArn?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  destinationPrefixListId?: string;

  @SpeakeasyMetadata()
  egressOnlyInternetGatewayId?: string;

  @SpeakeasyMetadata()
  gatewayId?: string;

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  localGatewayId?: string;

  @SpeakeasyMetadata()
  natGatewayId?: string;

  @SpeakeasyMetadata()
  networkInterfaceId?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  state?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  vpcPeeringConnectionId?: string;
}

/**
 * The port range.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSecurityGroupRulePortRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  from?: number;

  @SpeakeasyMetadata()
  to?: number;
}

/**
 * The security group rule.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSecurityGroupRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  cidr?: string;

  @SpeakeasyMetadata()
  direction?: string;

  @SpeakeasyMetadata()
  portRange?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSecurityGroupRulePortRange;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  protocol?: string;

  @SpeakeasyMetadata()
  securityGroupId?: string;
}

/**
 * The source VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSourceVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The subnet.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSubnet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The transit gateway.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsTransitGateway extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * The route in a transit gateway route table.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsTransitGatewayRouteTableRoute extends SpeakeasyBase {
  @SpeakeasyMetadata()
  attachmentId?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  prefixListId?: string;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceType?: string;

  @SpeakeasyMetadata()
  routeOrigin?: string;

  @SpeakeasyMetadata()
  state?: string;
}

/**
 * The component VPC.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsVpc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  arn?: string;

  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  name?: string;
}

/**
 * Describes a path component.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  aclRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAclRule;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetails,
  })
  additionalDetails?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAdditionalDetails[];

  @SpeakeasyMetadata()
  attachedTo?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsAttachedTo;

  @SpeakeasyMetadata()
  component?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsComponent;

  @SpeakeasyMetadata()
  destinationVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsDestinationVpc;

  @SpeakeasyMetadata()
  elasticLoadBalancerListener?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsElasticLoadBalancerListener;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanations,
  })
  explanations?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsExplanations[];

  @SpeakeasyMetadata()
  firewallStatefulRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatefulRule;

  @SpeakeasyMetadata()
  firewallStatelessRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsFirewallStatelessRule;

  @SpeakeasyMetadata()
  inboundHeader?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsInboundHeader;

  @SpeakeasyMetadata()
  outboundHeader?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsOutboundHeader;

  @SpeakeasyMetadata()
  routeTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsRouteTableRoute;

  @SpeakeasyMetadata()
  securityGroupRule?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSecurityGroupRule;

  @SpeakeasyMetadata()
  sequenceNumber?: number;

  @SpeakeasyMetadata()
  serviceName?: string;

  @SpeakeasyMetadata()
  sourceVpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSourceVpc;

  @SpeakeasyMetadata()
  subnet?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsSubnet;

  @SpeakeasyMetadata()
  transitGateway?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsTransitGateway;

  @SpeakeasyMetadata()
  transitGatewayRouteTableRoute?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsTransitGatewayRouteTableRoute;

  @SpeakeasyMetadata()
  vpc?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponentsVpc;
}

/**
 * The status of the network insights analysis.
 */
export enum DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesStatusEnum {
  Running = "running",
  Succeeded = "succeeded",
  Failed = "failed",
}

/**
 * Describes a tag.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a network insights analysis.
 */
export class DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalyses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  additionalAccounts?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesAlternatePathHints,
  })
  alternatePathHints?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesAlternatePathHints[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanations,
  })
  explanations?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesExplanations[];

  @SpeakeasyMetadata()
  filterInArns?: string[];

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponents,
  })
  forwardPathComponents?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesForwardPathComponents[];

  @SpeakeasyMetadata()
  networkInsightsAnalysisArn?: string;

  @SpeakeasyMetadata()
  networkInsightsAnalysisId?: string;

  @SpeakeasyMetadata()
  networkInsightsPathId?: string;

  @SpeakeasyMetadata()
  networkPathFound?: boolean;

  @SpeakeasyMetadata({
    elemType:
      DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponents,
  })
  returnPathComponents?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesReturnPathComponents[];

  @SpeakeasyMetadata()
  startDate?: Date;

  @SpeakeasyMetadata()
  status?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesStatusEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata()
  suggestedAccounts?: string[];

  @SpeakeasyMetadata({
    elemType: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesTags,
  })
  tags?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalysesTags[];

  @SpeakeasyMetadata()
  warningMessage?: string;
}

/**
 * Success
 */
export class DescribeNetworkInsightsAnalysesResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalyses,
  })
  networkInsightsAnalyses?: DescribeNetworkInsightsAnalysesResultNetworkInsightsAnalyses[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
