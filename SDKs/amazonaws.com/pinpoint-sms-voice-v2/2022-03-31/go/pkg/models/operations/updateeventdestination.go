// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateEventDestinationXAmzTargetEnum
type UpdateEventDestinationXAmzTargetEnum string

const (
	UpdateEventDestinationXAmzTargetEnumPinpointSmsVoiceV2UpdateEventDestination UpdateEventDestinationXAmzTargetEnum = "PinpointSMSVoiceV2.UpdateEventDestination"
)

func (e UpdateEventDestinationXAmzTargetEnum) ToPointer() *UpdateEventDestinationXAmzTargetEnum {
	return &e
}

func (e *UpdateEventDestinationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PinpointSMSVoiceV2.UpdateEventDestination":
		*e = UpdateEventDestinationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateEventDestinationXAmzTargetEnum: %v", v)
	}
}

type UpdateEventDestinationRequest struct {
	UpdateEventDestinationRequest shared.UpdateEventDestinationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    UpdateEventDestinationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateEventDestinationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateEventDestinationResult *shared.UpdateEventDestinationResult
	// ValidationException
	ValidationException interface{}
}
