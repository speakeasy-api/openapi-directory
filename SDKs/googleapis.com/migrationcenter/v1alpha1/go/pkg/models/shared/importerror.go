// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ImportErrorSeverityEnum - The severity of the error.
type ImportErrorSeverityEnum string

const (
	ImportErrorSeverityEnumSeverityUnspecified ImportErrorSeverityEnum = "SEVERITY_UNSPECIFIED"
	ImportErrorSeverityEnumError               ImportErrorSeverityEnum = "ERROR"
	ImportErrorSeverityEnumWarning             ImportErrorSeverityEnum = "WARNING"
	ImportErrorSeverityEnumInfo                ImportErrorSeverityEnum = "INFO"
)

func (e ImportErrorSeverityEnum) ToPointer() *ImportErrorSeverityEnum {
	return &e
}

func (e *ImportErrorSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SEVERITY_UNSPECIFIED":
		fallthrough
	case "ERROR":
		fallthrough
	case "WARNING":
		fallthrough
	case "INFO":
		*e = ImportErrorSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportErrorSeverityEnum: %v", v)
	}
}

// ImportError - A resource that reports the errors encountered while processing an import job.
type ImportError struct {
	// The error information.
	ErrorDetails *string `json:"errorDetails,omitempty"`
	// The severity of the error.
	Severity *ImportErrorSeverityEnum `json:"severity,omitempty"`
}
