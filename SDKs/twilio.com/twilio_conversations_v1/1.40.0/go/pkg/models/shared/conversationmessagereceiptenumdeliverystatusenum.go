// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConversationMessageReceiptEnumDeliveryStatusEnum string

const (
	ConversationMessageReceiptEnumDeliveryStatusEnumRead        ConversationMessageReceiptEnumDeliveryStatusEnum = "read"
	ConversationMessageReceiptEnumDeliveryStatusEnumFailed      ConversationMessageReceiptEnumDeliveryStatusEnum = "failed"
	ConversationMessageReceiptEnumDeliveryStatusEnumDelivered   ConversationMessageReceiptEnumDeliveryStatusEnum = "delivered"
	ConversationMessageReceiptEnumDeliveryStatusEnumUndelivered ConversationMessageReceiptEnumDeliveryStatusEnum = "undelivered"
	ConversationMessageReceiptEnumDeliveryStatusEnumSent        ConversationMessageReceiptEnumDeliveryStatusEnum = "sent"
)

func (e *ConversationMessageReceiptEnumDeliveryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "read":
		fallthrough
	case "failed":
		fallthrough
	case "delivered":
		fallthrough
	case "undelivered":
		fallthrough
	case "sent":
		*e = ConversationMessageReceiptEnumDeliveryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversationMessageReceiptEnumDeliveryStatusEnum: %s", s)
	}
}
