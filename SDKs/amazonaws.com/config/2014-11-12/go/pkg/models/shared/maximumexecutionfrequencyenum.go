// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MaximumExecutionFrequencyEnum string

const (
	MaximumExecutionFrequencyEnumOneHour         MaximumExecutionFrequencyEnum = "One_Hour"
	MaximumExecutionFrequencyEnumThreeHours      MaximumExecutionFrequencyEnum = "Three_Hours"
	MaximumExecutionFrequencyEnumSixHours        MaximumExecutionFrequencyEnum = "Six_Hours"
	MaximumExecutionFrequencyEnumTwelveHours     MaximumExecutionFrequencyEnum = "Twelve_Hours"
	MaximumExecutionFrequencyEnumTwentyFourHours MaximumExecutionFrequencyEnum = "TwentyFour_Hours"
)

func (e MaximumExecutionFrequencyEnum) ToPointer() *MaximumExecutionFrequencyEnum {
	return &e
}

func (e *MaximumExecutionFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "One_Hour":
		fallthrough
	case "Three_Hours":
		fallthrough
	case "Six_Hours":
		fallthrough
	case "Twelve_Hours":
		fallthrough
	case "TwentyFour_Hours":
		*e = MaximumExecutionFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MaximumExecutionFrequencyEnum: %v", v)
	}
}
