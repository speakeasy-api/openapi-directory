<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DbLogReportProperties - Returns the current properties of logDelayThresholdInMin and logDelayNotificationFrequencyInMin.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DbLogReportProperties
{
    /**
     * Indicates whether the database log backup delay notification is enabled. Set to 'true' to send an email notification when the log backup delay is more than the configured threshold, and 'false' to disable the behavior.
     * 
     * @var bool $enableDelayNotification
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableDelayNotification')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enableDelayNotification;
    
    /**
     * The frequency for sending an email notification to the customer when the log backup delay is more than the threshold.
     * 
     * @var int $logDelayNotificationFrequencyInMin
     */
	#[\JMS\Serializer\Annotation\SerializedName('logDelayNotificationFrequencyInMin')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $logDelayNotificationFrequencyInMin;
    
    /**
     * The threshold for the delay in log backup before an email notification should be created.
     * 
     * @var int $logDelayThresholdInMin
     */
	#[\JMS\Serializer\Annotation\SerializedName('logDelayThresholdInMin')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $logDelayThresholdInMin;
    
	public function __construct()
	{
		$this->enableDelayNotification = false;
		$this->logDelayNotificationFrequencyInMin = 0;
		$this->logDelayThresholdInMin = 0;
	}
}
