/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InputConfigurationContainer - Configuration for the input of a meter (digital inputs)
 */
public class InputConfigurationContainer {
    /**
     * The Name of the Input
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public InputConfigurationContainer withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The number of the Input. (1 for Input 1)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Number")
    public Integer number;

    public InputConfigurationContainer withNumber(Integer number) {
        this.number = number;
        return this;
    }
    
    /**
     * The visualization text for an OFF action
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffText")
    public String offText;

    public InputConfigurationContainer withOffText(String offText) {
        this.offText = offText;
        return this;
    }
    
    /**
     * The visualization text for an ON action
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnText")
    public String onText;

    public InputConfigurationContainer withOnText(String onText) {
        this.onText = onText;
        return this;
    }
    
    /**
     * The Type of the output
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public InputConfigurationContainerTypeEnum type;

    public InputConfigurationContainer withType(InputConfigurationContainerTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public InputConfigurationContainer(){}
}
