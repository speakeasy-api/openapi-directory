"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NodeRemoveParameterNodeDeallocationOptionEnum(str, Enum):
    r"""When compute nodes may be removed from the pool."""
    REQUEUE = 'requeue'
    TERMINATE = 'terminate'
    TASKCOMPLETION = 'taskcompletion'
    RETAINEDDATA = 'retaineddata'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NodeRemoveParameter:
    r"""Parameters for a ComputeNodeOperations.Remove request."""
    
    node_list: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeList') }})
    r"""A list containing the id of the compute nodes to be removed from the specified pool."""  
    node_deallocation_option: Optional[NodeRemoveParameterNodeDeallocationOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeDeallocationOption'), 'exclude': lambda f: f is None }})
    r"""When compute nodes may be removed from the pool."""  
    resize_timeout: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resizeTimeout'), 'exclude': lambda f: f is None }})
    r"""The timeout for removal of compute nodes to the pool. The default value is 10 minutes."""  
    