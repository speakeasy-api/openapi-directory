<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AnalyzeIamPolicyLongrunningRequest - A request message for AssetService.AnalyzeIamPolicyLongrunning.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AnalyzeIamPolicyLongrunningRequest
{
    /**
     * IAM policy analysis query message.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IamPolicyAnalysisQuery $analysisQuery
     */
	#[\JMS\Serializer\Annotation\SerializedName('analysisQuery')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IamPolicyAnalysisQuery')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IamPolicyAnalysisQuery $analysisQuery = null;
    
    /**
     * Output configuration for export IAM policy analysis destination.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IamPolicyAnalysisOutputConfig $outputConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IamPolicyAnalysisOutputConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IamPolicyAnalysisOutputConfig $outputConfig = null;
    
    /**
     * Optional. The name of a saved query, which must be in the format of: * projects/project_number/savedQueries/saved_query_id * folders/folder_number/savedQueries/saved_query_id * organizations/organization_number/savedQueries/saved_query_id If both `analysis_query` and `saved_analysis_query` are provided, they will be merged together with the `saved_analysis_query` as base and the `analysis_query` as overrides. For more details of the merge behavior, please refer to the [MergeFrom](https://developers.google.com/protocol-buffers/docs/reference/cpp/google.protobuf.message#Message.MergeFrom.details) doc. Note that you cannot override primitive fields with default value, such as 0 or empty string, etc., because we use proto3, which doesn't support field presence yet.
     * 
     * @var ?string $savedAnalysisQuery
     */
	#[\JMS\Serializer\Annotation\SerializedName('savedAnalysisQuery')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $savedAnalysisQuery = null;
    
	public function __construct()
	{
		$this->analysisQuery = null;
		$this->outputConfig = null;
		$this->savedAnalysisQuery = null;
	}
}
