/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specific item type filter.
 */
export enum PaginationOptionsItemTypeEnum {
  Movie = "movie",
  Show = "show",
  Season = "season",
  Episode = "episode",
  Program = "program",
  Link = "link",
  Trailer = "trailer",
  Channel = "channel",
  CustomAsset = "customAsset",
}

/**
 * The applied sort order if any.
 */
export enum PaginationOptionsOrderEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * The applied sort ordering property if any.
 */
export enum PaginationOptionsOrderByEnum {
  AZ = "a-z",
  ReleaseYear = "release-year",
  DateAdded = "date-added",
}

export class PaginationOptions extends SpeakeasyBase {
  /**
   * Items filtered by whether they've been fully watched or not.
   *
   * @remarks
   *
   * Only available on the `/account/profile/watched/list` endpoint currently.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completed" })
  completed?: boolean;

  /**
   * Specific item type filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemType" })
  itemType?: PaginationOptionsItemTypeEnum;

  /**
   * The maximum rating (inclusive) of items returned, e.g. 'AUOFLC-PG'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxRating" })
  maxRating?: string;

  /**
   * The applied sort order if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: PaginationOptionsOrderEnum;

  /**
   * The applied sort ordering property if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderBy" })
  orderBy?: PaginationOptionsOrderByEnum;

  /**
   * The number of items to return in a list page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize?: number;
}
