// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReportFilterPeriodTypeEnum - Indicates the period type we want use for the report filter
type ReportFilterPeriodTypeEnum string

const (
	ReportFilterPeriodTypeEnumCustom      ReportFilterPeriodTypeEnum = "Custom"
	ReportFilterPeriodTypeEnumYesterday   ReportFilterPeriodTypeEnum = "Yesterday"
	ReportFilterPeriodTypeEnumLast7Days   ReportFilterPeriodTypeEnum = "Last7Days"
	ReportFilterPeriodTypeEnumLastWeek    ReportFilterPeriodTypeEnum = "LastWeek"
	ReportFilterPeriodTypeEnumThisMonth   ReportFilterPeriodTypeEnum = "ThisMonth"
	ReportFilterPeriodTypeEnumLast30Days  ReportFilterPeriodTypeEnum = "Last30Days"
	ReportFilterPeriodTypeEnumLastMonth   ReportFilterPeriodTypeEnum = "LastMonth"
	ReportFilterPeriodTypeEnumLast60Days  ReportFilterPeriodTypeEnum = "Last60Days"
	ReportFilterPeriodTypeEnumLast90Days  ReportFilterPeriodTypeEnum = "Last90Days"
	ReportFilterPeriodTypeEnumLast3Months ReportFilterPeriodTypeEnum = "Last3Months"
)

func (e ReportFilterPeriodTypeEnum) ToPointer() *ReportFilterPeriodTypeEnum {
	return &e
}

func (e *ReportFilterPeriodTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Custom":
		fallthrough
	case "Yesterday":
		fallthrough
	case "Last7Days":
		fallthrough
	case "LastWeek":
		fallthrough
	case "ThisMonth":
		fallthrough
	case "Last30Days":
		fallthrough
	case "LastMonth":
		fallthrough
	case "Last60Days":
		fallthrough
	case "Last90Days":
		fallthrough
	case "Last3Months":
		*e = ReportFilterPeriodTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReportFilterPeriodTypeEnum: %v", v)
	}
}
