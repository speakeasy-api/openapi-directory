// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ActionTypeEnum string

const (
	ActionTypeEnumInvite                            ActionTypeEnum = "INVITE"
	ActionTypeEnumEnableAllFeatures                 ActionTypeEnum = "ENABLE_ALL_FEATURES"
	ActionTypeEnumApproveAllFeatures                ActionTypeEnum = "APPROVE_ALL_FEATURES"
	ActionTypeEnumAddOrganizationsServiceLinkedRole ActionTypeEnum = "ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE"
)

func (e ActionTypeEnum) ToPointer() *ActionTypeEnum {
	return &e
}

func (e *ActionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVITE":
		fallthrough
	case "ENABLE_ALL_FEATURES":
		fallthrough
	case "APPROVE_ALL_FEATURES":
		fallthrough
	case "ADD_ORGANIZATIONS_SERVICE_LINKED_ROLE":
		*e = ActionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionTypeEnum: %v", v)
	}
}
