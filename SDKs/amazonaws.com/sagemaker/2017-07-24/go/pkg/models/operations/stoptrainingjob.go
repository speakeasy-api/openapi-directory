// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopTrainingJobXAmzTargetEnum
type StopTrainingJobXAmzTargetEnum string

const (
	StopTrainingJobXAmzTargetEnumSageMakerStopTrainingJob StopTrainingJobXAmzTargetEnum = "SageMaker.StopTrainingJob"
)

func (e StopTrainingJobXAmzTargetEnum) ToPointer() *StopTrainingJobXAmzTargetEnum {
	return &e
}

func (e *StopTrainingJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.StopTrainingJob":
		*e = StopTrainingJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StopTrainingJobXAmzTargetEnum: %v", v)
	}
}

type StopTrainingJobRequest struct {
	StopTrainingJobRequest shared.StopTrainingJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             StopTrainingJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopTrainingJobResponse struct {
	ContentType string
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
