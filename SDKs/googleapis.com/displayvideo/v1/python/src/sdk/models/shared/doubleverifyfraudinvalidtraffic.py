"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DoubleVerifyFraudInvalidTrafficAvoidedFraudOptionEnum(str, Enum):
    r"""Avoid Sites and Apps with historical Fraud & IVT."""
    FRAUD_UNSPECIFIED = 'FRAUD_UNSPECIFIED'
    AD_IMPRESSION_FRAUD_100 = 'AD_IMPRESSION_FRAUD_100'
    AD_IMPRESSION_FRAUD_50 = 'AD_IMPRESSION_FRAUD_50'
    AD_IMPRESSION_FRAUD_25 = 'AD_IMPRESSION_FRAUD_25'
    AD_IMPRESSION_FRAUD_10 = 'AD_IMPRESSION_FRAUD_10'
    AD_IMPRESSION_FRAUD_8 = 'AD_IMPRESSION_FRAUD_8'
    AD_IMPRESSION_FRAUD_6 = 'AD_IMPRESSION_FRAUD_6'
    AD_IMPRESSION_FRAUD_4 = 'AD_IMPRESSION_FRAUD_4'
    AD_IMPRESSION_FRAUD_2 = 'AD_IMPRESSION_FRAUD_2'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DoubleVerifyFraudInvalidTraffic:
    r"""DoubleVerify Fraud & Invalid Traffic settings."""
    
    avoided_fraud_option: Optional[DoubleVerifyFraudInvalidTrafficAvoidedFraudOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avoidedFraudOption'), 'exclude': lambda f: f is None }})
    r"""Avoid Sites and Apps with historical Fraud & IVT."""  
    avoid_insufficient_option: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('avoidInsufficientOption'), 'exclude': lambda f: f is None }})
    r"""Insufficient Historical Fraud & IVT Stats."""  
    