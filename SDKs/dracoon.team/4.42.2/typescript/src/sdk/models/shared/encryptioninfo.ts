/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * DRACOON key state
 */
export enum EncryptionInfoDataSpaceKeyStateEnum {
  None = "none",
  Available = "available",
  Pending = "pending",
}

/**
 * Room key state
 */
export enum EncryptionInfoRoomKeyStateEnum {
  None = "none",
  Available = "available",
  Pending = "pending",
}

/**
 * User key state
 */
export enum EncryptionInfoUserKeyStateEnum {
  None = "none",
  Available = "available",
  Pending = "pending",
}

/**
 * Encryption states
 */
export class EncryptionInfo extends SpeakeasyBase {
  /**
   * DRACOON key state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataSpaceKeyState" })
  dataSpaceKeyState: EncryptionInfoDataSpaceKeyStateEnum;

  /**
   * Room key state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roomKeyState" })
  roomKeyState: EncryptionInfoRoomKeyStateEnum;

  /**
   * User key state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userKeyState" })
  userKeyState: EncryptionInfoUserKeyStateEnum;
}
