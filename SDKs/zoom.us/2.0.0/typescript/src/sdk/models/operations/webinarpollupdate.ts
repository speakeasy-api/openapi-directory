/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class WebinarPollUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
 */
export enum WebinarPollUpdatePollQuestionsTypeEnum {
  Single = "single",
  Multiple = "multiple",
}

export class WebinarPollUpdatePollQuestions extends SpeakeasyBase {
  /**
   * Answers to the questions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answers" })
  answers?: string[];

  /**
   * Question to be asked to the attendees.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Poll Question & Answer type:<br>`single` - Single choice<br>`mutliple` - Multiple choice
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: WebinarPollUpdatePollQuestionsTypeEnum;
}

/**
 * Poll
 */
export class WebinarPollUpdatePoll extends SpeakeasyBase {
  /**
   * Array of Polls
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=questions;json=true",
    elemType: WebinarPollUpdatePollQuestions,
  })
  @Expose({ name: "questions" })
  @Type(() => WebinarPollUpdatePollQuestions)
  questions?: WebinarPollUpdatePollQuestions[];

  /**
   * Title for the poll.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=title" })
  @Expose({ name: "title" })
  title?: string;
}

export class WebinarPollUpdateRequest extends SpeakeasyBase {
  /**
   * Webinar Poll
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: WebinarPollUpdatePoll;

  /**
   * The poll ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pollId",
  })
  pollId: string;

  /**
   * The webinar ID in "**long**" format(represented as int64 data type in JSON).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=webinarId",
  })
  webinarId: number;
}

export class WebinarPollUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
