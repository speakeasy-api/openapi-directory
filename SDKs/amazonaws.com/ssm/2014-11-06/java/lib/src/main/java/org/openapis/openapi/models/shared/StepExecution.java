/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * StepExecution - Detailed information about an the execution state of an Automation step.
 */
public class StepExecution {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Action")
    public String action;

    public StepExecution withAction(String action) {
        this.action = action;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExecutionEndTime")
    public OffsetDateTime executionEndTime;

    public StepExecution withExecutionEndTime(OffsetDateTime executionEndTime) {
        this.executionEndTime = executionEndTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ExecutionStartTime")
    public OffsetDateTime executionStartTime;

    public StepExecution withExecutionStartTime(OffsetDateTime executionStartTime) {
        this.executionStartTime = executionStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureDetails")
    public FailureDetails failureDetails;

    public StepExecution withFailureDetails(FailureDetails failureDetails) {
        this.failureDetails = failureDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureMessage")
    public String failureMessage;

    public StepExecution withFailureMessage(String failureMessage) {
        this.failureMessage = failureMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Inputs")
    public java.util.Map<String, String> inputs;

    public StepExecution withInputs(java.util.Map<String, String> inputs) {
        this.inputs = inputs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsCritical")
    public Boolean isCritical;

    public StepExecution withIsCritical(Boolean isCritical) {
        this.isCritical = isCritical;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsEnd")
    public Boolean isEnd;

    public StepExecution withIsEnd(Boolean isEnd) {
        this.isEnd = isEnd;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxAttempts")
    public Long maxAttempts;

    public StepExecution withMaxAttempts(Long maxAttempts) {
        this.maxAttempts = maxAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NextStep")
    public String nextStep;

    public StepExecution withNextStep(String nextStep) {
        this.nextStep = nextStep;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnFailure")
    public String onFailure;

    public StepExecution withOnFailure(String onFailure) {
        this.onFailure = onFailure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Outputs")
    public java.util.Map<String, String[]> outputs;

    public StepExecution withOutputs(java.util.Map<String, String[]> outputs) {
        this.outputs = outputs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OverriddenParameters")
    public java.util.Map<String, String[]> overriddenParameters;

    public StepExecution withOverriddenParameters(java.util.Map<String, String[]> overriddenParameters) {
        this.overriddenParameters = overriddenParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Response")
    public String response;

    public StepExecution withResponse(String response) {
        this.response = response;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResponseCode")
    public String responseCode;

    public StepExecution withResponseCode(String responseCode) {
        this.responseCode = responseCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepExecutionId")
    public String stepExecutionId;

    public StepExecution withStepExecutionId(String stepExecutionId) {
        this.stepExecutionId = stepExecutionId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepName")
    public String stepName;

    public StepExecution withStepName(String stepName) {
        this.stepName = stepName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepStatus")
    public AutomationExecutionStatusEnum stepStatus;

    public StepExecution withStepStatus(AutomationExecutionStatusEnum stepStatus) {
        this.stepStatus = stepStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetLocation")
    public TargetLocation targetLocation;

    public StepExecution withTargetLocation(TargetLocation targetLocation) {
        this.targetLocation = targetLocation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Targets")
    public Target[] targets;

    public StepExecution withTargets(Target[] targets) {
        this.targets = targets;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeoutSeconds")
    public Long timeoutSeconds;

    public StepExecution withTimeoutSeconds(Long timeoutSeconds) {
        this.timeoutSeconds = timeoutSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TriggeredAlarms")
    public AlarmStateInformation[] triggeredAlarms;

    public StepExecution withTriggeredAlarms(AlarmStateInformation[] triggeredAlarms) {
        this.triggeredAlarms = triggeredAlarms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ValidNextSteps")
    public String[] validNextSteps;

    public StepExecution withValidNextSteps(String[] validNextSteps) {
        this.validNextSteps = validNextSteps;
        return this;
    }
    
    public StepExecution(){}
}
