"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettingsRequestBodyLocalStatusPageAuthentication:
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables the authentication on Local Status page(s)."""  
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""The password used for Local Status Page(s). Set this to null to clear the password."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettingsRequestBodyLocalStatusPage:
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""
    
    authentication: Optional[UpdateNetworkSettingsRequestBodyLocalStatusPageAuthentication] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authentication'), 'exclude': lambda f: f is None }})
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettingsRequestBodySecurePort:
    r"""A hash of SecureConnect options applied to the Network."""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables SecureConnect on the network. Optional."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettingsRequestBody:
    
    local_status_page: Optional[UpdateNetworkSettingsRequestBodyLocalStatusPage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localStatusPage'), 'exclude': lambda f: f is None }})
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""  
    local_status_page_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localStatusPageEnabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"""  
    remote_status_page_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remoteStatusPageEnabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true"""  
    secure_port: Optional[UpdateNetworkSettingsRequestBodySecurePort] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securePort'), 'exclude': lambda f: f is None }})
    r"""A hash of SecureConnect options applied to the Network."""  
    

@dataclasses.dataclass
class UpdateNetworkSettingsRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkSettingsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSONClientPrivacy:
    r"""Privacy settings"""
    
    expire_data_before: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireDataBefore'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date to expire the data before"""  
    expire_data_older_than: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireDataOlderThan'), 'exclude': lambda f: f is None }})
    r"""The number of days, weeks, or months in Epoch time to expire the data before"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSONFips:
    r"""A hash of FIPS options applied to the Network"""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables FIPS on the network."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSONLocalStatusPageAuthentication:
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables the authentication on Local Status page(s)."""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""The username used for Local Status Page(s)."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSONLocalStatusPage:
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""
    
    authentication: Optional[UpdateNetworkSettings200ApplicationJSONLocalStatusPageAuthentication] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authentication'), 'exclude': lambda f: f is None }})
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSONNamedVlans:
    r"""A hash of Named VLANs options applied to the Network."""
    
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Enables / disables Named VLANs on the Network."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSONSecurePort:
    r"""A hash of SecureConnect options applied to the Network."""
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables SecureConnect on the network. Optional."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkSettings200ApplicationJSON:
    r"""Successful operation"""
    
    client_privacy: Optional[UpdateNetworkSettings200ApplicationJSONClientPrivacy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientPrivacy'), 'exclude': lambda f: f is None }})
    r"""Privacy settings"""  
    fips: Optional[UpdateNetworkSettings200ApplicationJSONFips] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fips'), 'exclude': lambda f: f is None }})
    r"""A hash of FIPS options applied to the Network"""  
    local_status_page: Optional[UpdateNetworkSettings200ApplicationJSONLocalStatusPage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localStatusPage'), 'exclude': lambda f: f is None }})
    r"""A hash of Local Status page(s)' authentication options applied to the Network."""  
    local_status_page_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localStatusPageEnabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables the local device status pages (<a target='_blank' href='http://my.meraki.com/'>my.meraki.com, </a><a target='_blank' href='http://ap.meraki.com/'>ap.meraki.com, </a><a target='_blank' href='http://switch.meraki.com/'>switch.meraki.com, </a><a target='_blank' href='http://wired.meraki.com/'>wired.meraki.com</a>). Optional (defaults to false)"""  
    named_vlans: Optional[UpdateNetworkSettings200ApplicationJSONNamedVlans] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('namedVlans'), 'exclude': lambda f: f is None }})
    r"""A hash of Named VLANs options applied to the Network."""  
    remote_status_page_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('remoteStatusPageEnabled'), 'exclude': lambda f: f is None }})
    r"""Enables / disables access to the device status page (<a target='_blank'>http://[device's LAN IP])</a>. Optional. Can only be set if localStatusPageEnabled is set to true"""  
    secure_port: Optional[UpdateNetworkSettings200ApplicationJSONSecurePort] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securePort'), 'exclude': lambda f: f is None }})
    r"""A hash of SecureConnect options applied to the Network."""  
    

@dataclasses.dataclass
class UpdateNetworkSettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_settings_200_application_json_object: Optional[UpdateNetworkSettings200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful operation"""  
    