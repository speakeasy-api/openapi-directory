/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ConversationsV1ConversationConversationScopedWebhook - Created
 */
public class ConversationsV1ConversationConversationScopedWebhook {
    /**
     * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public ConversationsV1ConversationConversationScopedWebhook withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The configuration of this webhook. Is defined based on target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configuration")
    public Object configuration;

    public ConversationsV1ConversationConversationScopedWebhook withConfiguration(Object configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversation_sid")
    public String conversationSid;

    public ConversationsV1ConversationConversationScopedWebhook withConversationSid(String conversationSid) {
        this.conversationSid = conversationSid;
        return this;
    }
    
    /**
     * The date that this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public ConversationsV1ConversationConversationScopedWebhook withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date that this resource was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public ConversationsV1ConversationConversationScopedWebhook withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * A 34 character string that uniquely identifies this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public ConversationsV1ConversationConversationScopedWebhook withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * The target of this webhook: `webhook`, `studio`, `trigger`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public String target;

    public ConversationsV1ConversationConversationScopedWebhook withTarget(String target) {
        this.target = target;
        return this;
    }
    
    /**
     * An absolute API resource URL for this webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public ConversationsV1ConversationConversationScopedWebhook withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public ConversationsV1ConversationConversationScopedWebhook(){}
}
