// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteDirectoryConfigXAmzTargetEnum
type DeleteDirectoryConfigXAmzTargetEnum string

const (
	DeleteDirectoryConfigXAmzTargetEnumPhotonAdminProxyServiceDeleteDirectoryConfig DeleteDirectoryConfigXAmzTargetEnum = "PhotonAdminProxyService.DeleteDirectoryConfig"
)

func (e *DeleteDirectoryConfigXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PhotonAdminProxyService.DeleteDirectoryConfig":
		*e = DeleteDirectoryConfigXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteDirectoryConfigXAmzTargetEnum: %s", s)
	}
}

type DeleteDirectoryConfigRequest struct {
	DeleteDirectoryConfigRequest shared.DeleteDirectoryConfigRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteDirectoryConfigXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteDirectoryConfigResponse struct {
	ContentType string
	// Success
	DeleteDirectoryConfigResult map[string]interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
