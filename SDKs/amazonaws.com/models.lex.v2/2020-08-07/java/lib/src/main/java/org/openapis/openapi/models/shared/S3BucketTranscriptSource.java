/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * S3BucketTranscriptSource - The object representing the Amazon S3 bucket containing the transcript, as well as the associated metadata.
 */
public class S3BucketTranscriptSource {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyArn")
    public String kmsKeyArn;

    public S3BucketTranscriptSource withKmsKeyArn(String kmsKeyArn) {
        this.kmsKeyArn = kmsKeyArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pathFormat")
    public PathFormat pathFormat;

    public S3BucketTranscriptSource withPathFormat(PathFormat pathFormat) {
        this.pathFormat = pathFormat;
        return this;
    }
    
    @JsonProperty("s3BucketName")
    public String s3BucketName;

    public S3BucketTranscriptSource withS3BucketName(String s3BucketName) {
        this.s3BucketName = s3BucketName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transcriptFilter")
    public TranscriptFilter transcriptFilter;

    public S3BucketTranscriptSource withTranscriptFilter(TranscriptFilter transcriptFilter) {
        this.transcriptFilter = transcriptFilter;
        return this;
    }
    
    @JsonProperty("transcriptFormat")
    public TranscriptFormatEnum transcriptFormat;

    public S3BucketTranscriptSource withTranscriptFormat(TranscriptFormatEnum transcriptFormat) {
        this.transcriptFormat = transcriptFormat;
        return this;
    }
    
    public S3BucketTranscriptSource(@JsonProperty("s3BucketName") String s3BucketName, @JsonProperty("transcriptFormat") TranscriptFormatEnum transcriptFormat) {
        this.s3BucketName = s3BucketName;
        this.transcriptFormat = transcriptFormat;
  }
}
