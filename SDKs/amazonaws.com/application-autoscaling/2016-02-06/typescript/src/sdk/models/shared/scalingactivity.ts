/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NotScaledReason } from "./notscaledreason";
import { ScalableDimensionEnum } from "./scalabledimensionenum";
import { ScalingActivityStatusCodeEnum } from "./scalingactivitystatuscodeenum";
import { ServiceNamespaceEnum } from "./servicenamespaceenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a scaling activity.
 */
export class ScalingActivity extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ActivityId" })
  activityId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Cause" })
  cause: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Details" })
  details?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata({ elemType: NotScaledReason })
  @Expose({ name: "NotScaledReasons" })
  @Type(() => NotScaledReason)
  notScaledReasons?: NotScaledReason[];

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceId" })
  resourceId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalableDimension" })
  scalableDimension: ScalableDimensionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceNamespace" })
  serviceNamespace: ServiceNamespaceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusCode" })
  statusCode: ScalingActivityStatusCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;
}
