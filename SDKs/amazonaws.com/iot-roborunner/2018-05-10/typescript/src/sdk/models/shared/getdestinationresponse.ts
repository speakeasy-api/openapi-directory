/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationStateEnum } from "./destinationstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class GetDestinationResponse extends SpeakeasyBase {
  /**
   * JSON document containing additional fixed properties regarding the destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalFixedProperties" })
  additionalFixedProperties?: string;

  /**
   * Destination ARN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  /**
   * Timestamp at which the resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Filters access by the destination's identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Human friendly name of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Site ARN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  site: string;

  /**
   * State of the destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: DestinationStateEnum;

  /**
   * Timestamp at which the resource was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
