/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum {
  FeedbackThreadStatusUnspecified = "FEEDBACK_THREAD_STATUS_UNSPECIFIED",
  New = "NEW",
  Replied = "REPLIED",
}

export class GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata extends SpeakeasyBase {
  /**
   * When the thread is created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * When the thread is last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTime" })
  lastUpdateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum;

  /**
   * An image thumbnail of this thread.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnail" })
  thumbnail?: string;
}
