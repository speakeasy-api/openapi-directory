/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
 */
export enum CreateOrganizationAdminRequestBodyAuthenticationMethodEnum {
  CiscoSecureXSignOn = "Cisco SecureX Sign-On",
  Email = "Email",
}

export class CreateOrganizationAdminRequestBodyNetworks extends SpeakeasyBase {
  /**
   * The privilege of the dashboard administrator on the network. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access" })
  access: string;

  /**
   * The network ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

/**
 * The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
 */
export enum CreateOrganizationAdminRequestBodyOrgAccessEnum {
  Enterprise = "enterprise",
  Full = "full",
  None = "none",
  ReadOnly = "read-only",
}

/**
 * The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
 */
export enum CreateOrganizationAdminRequestBodyTagsAccessEnum {
  Full = "full",
  GuestAmbassador = "guest-ambassador",
  MonitorOnly = "monitor-only",
  ReadOnly = "read-only",
}

export class CreateOrganizationAdminRequestBodyTags extends SpeakeasyBase {
  /**
   * The privilege of the dashboard administrator on the tag. Can be one of 'full', 'read-only', 'guest-ambassador' or 'monitor-only'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "access" })
  access: CreateOrganizationAdminRequestBodyTagsAccessEnum;

  /**
   * The name of the tag
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;
}

export class CreateOrganizationAdminRequestBody extends SpeakeasyBase {
  /**
   * The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authenticationMethod" })
  authenticationMethod?: CreateOrganizationAdminRequestBodyAuthenticationMethodEnum;

  /**
   * The email of the dashboard administrator. This attribute can not be updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The name of the dashboard administrator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The list of networks that the dashboard administrator has privileges on
   */
  @SpeakeasyMetadata({ elemType: CreateOrganizationAdminRequestBodyNetworks })
  @Expose({ name: "networks" })
  @Type(() => CreateOrganizationAdminRequestBodyNetworks)
  networks?: CreateOrganizationAdminRequestBodyNetworks[];

  /**
   * The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orgAccess" })
  orgAccess: CreateOrganizationAdminRequestBodyOrgAccessEnum;

  /**
   * The list of tags that the dashboard administrator has privileges on
   */
  @SpeakeasyMetadata({ elemType: CreateOrganizationAdminRequestBodyTags })
  @Expose({ name: "tags" })
  @Type(() => CreateOrganizationAdminRequestBodyTags)
  tags?: CreateOrganizationAdminRequestBodyTags[];
}

export class CreateOrganizationAdminRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateOrganizationAdminRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class CreateOrganizationAdminResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  createOrganizationAdmin201ApplicationJSONObject?: Record<string, any>;
}
