// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum - An enumeration.
type CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum string

const (
	CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnumCountry      CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum = "country"
	CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnumFirstUpdated CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum = "firstUpdated"
	CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnumLastUpdated  CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum = "lastUpdated"
	CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnumLocations    CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum = "locations"
	CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnumCount        CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum = "count"
)

func (e *CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "country":
		fallthrough
	case "firstUpdated":
		fallthrough
	case "lastUpdated":
		fallthrough
	case "locations":
		fallthrough
	case "count":
		*e = CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum: %s", s)
	}
}

// CountriesGetV1CountriesCountryIDGetSortSortEnum - An enumeration.
type CountriesGetV1CountriesCountryIDGetSortSortEnum string

const (
	CountriesGetV1CountriesCountryIDGetSortSortEnumAsc  CountriesGetV1CountriesCountryIDGetSortSortEnum = "asc"
	CountriesGetV1CountriesCountryIDGetSortSortEnumDesc CountriesGetV1CountriesCountryIDGetSortSortEnum = "desc"
)

func (e *CountriesGetV1CountriesCountryIDGetSortSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = CountriesGetV1CountriesCountryIDGetSortSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CountriesGetV1CountriesCountryIDGetSortSortEnum: %s", s)
	}
}

type CountriesGetV1CountriesCountryIDGetRequest struct {
	//         Limit results by a certain country using two letter country code.
	//         (ex. ?country=US or ?country=US&country=MX)
	//
	Country   []string `queryParam:"style=form,explode=true,name=country"`
	CountryID string   `pathParam:"style=simple,explode=false,name=country_id"`
	Limit     *int64   `queryParam:"style=form,explode=true,name=limit"`
	Offset    *int64   `queryParam:"style=form,explode=true,name=offset"`
	// An enumeration.
	OrderBy *CountriesGetV1CountriesCountryIDGetOrderByCountriesOrderEnum `queryParam:"style=form,explode=true,name=order_by"`
	// Paginate through results.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Define sort order.
	Sort *CountriesGetV1CountriesCountryIDGetSortSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type CountriesGetV1CountriesCountryIDGetResponse struct {
	ContentType string
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
	// Successful Response
	OpenAQCountriesResult *shared.OpenAQCountriesResult
	StatusCode            int
	RawResponse           *http.Response
}
