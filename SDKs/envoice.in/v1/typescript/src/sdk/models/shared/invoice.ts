/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Activity } from "./activity";
import { InvoiceAttachment } from "./invoiceattachment";
import { InvoiceItem } from "./invoiceitem";
import { Payment } from "./payment";
import { PaymentGatewayForInvoice } from "./paymentgatewayforinvoice";
import { Expose, Transform, Type } from "class-transformer";

export enum InvoiceStatusEnum {
  Draft = "Draft",
  Paid = "Paid",
  Unpaid = "Unpaid",
  Overdue = "Overdue",
  Void = "Void",
}

export class Invoice extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccessToken" })
  accessToken?: string;

  @SpeakeasyMetadata({ elemType: Activity })
  @Expose({ name: "Activities" })
  @Type(() => Activity)
  activities?: Activity[];

  @SpeakeasyMetadata({ elemType: InvoiceAttachment })
  @Expose({ name: "Attachments" })
  @Type(() => InvoiceAttachment)
  attachments?: InvoiceAttachment[];

  @SpeakeasyMetadata()
  @Expose({ name: "ClientId" })
  clientId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ClonedFromId" })
  clonedFromId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrencyId" })
  currencyId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DiscountAmount" })
  discountAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Duedate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  duedate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EnablePartialPayments" })
  enablePartialPayments?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EstimationId" })
  estimationId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceCategoryId" })
  invoiceCategoryId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "IsDigitallySigned" })
  isDigitallySigned?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IssuedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedOn?: Date;

  @SpeakeasyMetadata({ elemType: InvoiceItem })
  @Expose({ name: "Items" })
  @Type(() => InvoiceItem)
  items?: InvoiceItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "Notes" })
  notes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Number" })
  number?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OrderId" })
  orderId?: number;

  @SpeakeasyMetadata({ elemType: PaymentGatewayForInvoice })
  @Expose({ name: "PaymentGateways" })
  @Type(() => PaymentGatewayForInvoice)
  paymentGateways?: PaymentGatewayForInvoice[];

  @SpeakeasyMetadata()
  @Expose({ name: "PaymentLinkId" })
  paymentLinkId?: number;

  @SpeakeasyMetadata({ elemType: Payment })
  @Expose({ name: "Payments" })
  @Type(() => Payment)
  payments?: Payment[];

  @SpeakeasyMetadata()
  @Expose({ name: "PoNumber" })
  poNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RecurringProfileId" })
  recurringProfileId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ShouldSendReminders" })
  shouldSendReminders?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: InvoiceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SubTotalAmount" })
  subTotalAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TaxAmount" })
  taxAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Terms" })
  terms?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TotalAmount" })
  totalAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "UserId" })
  userId?: number;
}
