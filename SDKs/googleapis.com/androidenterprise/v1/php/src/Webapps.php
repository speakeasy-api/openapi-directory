<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Webapps 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Deletes an existing web app.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteResponse
     */
	public function androidenterpriseWebappsDelete(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/webApps/{webAppId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Gets an existing web app.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetResponse
     */
	public function androidenterpriseWebappsGet(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/webApps/{webAppId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->webApp = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\WebApp', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Creates a new web app for the enterprise.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertResponse
     */
	public function androidenterpriseWebappsInsert(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/webApps', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "webApp", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsInsertResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->webApp = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\WebApp', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieves the details of all web apps for a given enterprise.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListResponse
     */
	public function androidenterpriseWebappsList(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/webApps', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->webAppsListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\WebAppsListResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates an existing web app.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateResponse
     */
	public function androidenterpriseWebappsUpdate(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/webApps/{webAppId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "webApp", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseWebappsUpdateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->webApp = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\WebApp', 'json');
            }
        }

        return $response;
    }
}