/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NetworkInterface - A network interface resource attached to an instance.
 */
public class NetworkInterface {
    /**
     * An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessConfigs")
    public AccessConfig[] accessConfigs;
    public NetworkInterface withAccessConfigs(AccessConfig[] accessConfigs) {
        this.accessConfigs = accessConfigs;
        return this;
    }
    
    /**
     * An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aliasIpRanges")
    public AliasIpRange[] aliasIpRanges;
    public NetworkInterface withAliasIpRanges(AliasIpRange[] aliasIpRanges) {
        this.aliasIpRanges = aliasIpRanges;
        return this;
    }
    
    /**
     * Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public NetworkInterface withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * The prefix length of the primary internal IPv6 range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalIpv6PrefixLength")
    public Integer internalIpv6PrefixLength;
    public NetworkInterface withInternalIpv6PrefixLength(Integer internalIpv6PrefixLength) {
        this.internalIpv6PrefixLength = internalIpv6PrefixLength;
        return this;
    }
    
    /**
     * An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6AccessConfigs")
    public AccessConfig[] ipv6AccessConfigs;
    public NetworkInterface withIpv6AccessConfigs(AccessConfig[] ipv6AccessConfigs) {
        this.ipv6AccessConfigs = ipv6AccessConfigs;
        return this;
    }
    
    /**
     * [Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork. Valid only if stackType is IPV4_IPV6.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6AccessType")
    public NetworkInterfaceIpv6AccessTypeEnum ipv6AccessType;
    public NetworkInterface withIpv6AccessType(NetworkInterfaceIpv6AccessTypeEnum ipv6AccessType) {
        this.ipv6AccessType = ipv6AccessType;
        return this;
    }
    
    /**
     * An IPv6 internal network address for this network interface. To use a static internal IP address, it must be unused and in the same region as the instance's zone. If not specified, Google Cloud will automatically assign an internal IPv6 address from the instance's subnetwork.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6Address")
    public String ipv6Address;
    public NetworkInterface withIpv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public NetworkInterface withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * [Output Only] The name of the network interface, which is generated by the server. For a VM, the network interface uses the nicN naming format. Where N is a value between 0 and 7. The default interface value is nic0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NetworkInterface withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * URL of the VPC network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used. If the selected project doesn't have the default network, you must specify a network or subnet. If the network is not specified but the subnetwork is specified, the network is inferred. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/global/networks/ network - projects/project/global/networks/network - global/networks/default 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public NetworkInterface withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * The URL of the network attachment that this interface should connect to in the following format: projects/{project_number}/regions/{region_name}/networkAttachments/{network_attachment_name}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkAttachment")
    public String networkAttachment;
    public NetworkInterface withNetworkAttachment(String networkAttachment) {
        this.networkAttachment = networkAttachment;
        return this;
    }
    
    /**
     * An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkIP")
    public String networkIP;
    public NetworkInterface withNetworkIP(String networkIP) {
        this.networkIP = networkIP;
        return this;
    }
    
    /**
     * The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nicType")
    public NetworkInterfaceNicTypeEnum nicType;
    public NetworkInterface withNicType(NetworkInterfaceNicTypeEnum nicType) {
        this.nicType = nicType;
        return this;
    }
    
    /**
     * Name of the parent network interface of a VLAN based nic. If this field is specified, vlan must be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentNicName")
    public String parentNicName;
    public NetworkInterface withParentNicName(String parentNicName) {
        this.parentNicName = parentNicName;
        return this;
    }
    
    /**
     * The networking queue count that's specified by users for the network interface. Both Rx and Tx queues will be set to this number. It'll be empty if not specified by the users.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queueCount")
    public Integer queueCount;
    public NetworkInterface withQueueCount(Integer queueCount) {
        this.queueCount = queueCount;
        return this;
    }
    
    /**
     * The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used. This field can be both set at instance creation and update network interface operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stackType")
    public NetworkInterfaceStackTypeEnum stackType;
    public NetworkInterface withStackType(NetworkInterfaceStackTypeEnum stackType) {
        this.stackType = stackType;
        return this;
    }
    
    /**
     * SubInterfaces help enable L2 communication for the instance over subnetworks that support L2. Every network interface will get a default untagged (vlan not specified) subinterface. Users can specify additional tagged subinterfaces which are sub-fields to the Network Interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subinterfaces")
    public NetworkInterfaceSubInterface[] subinterfaces;
    public NetworkInterface withSubinterfaces(NetworkInterfaceSubInterface[] subinterfaces) {
        this.subinterfaces = subinterfaces;
        return this;
    }
    
    /**
     * The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: - https://www.googleapis.com/compute/v1/projects/project/regions/region /subnetworks/subnetwork - regions/region/subnetworks/subnetwork 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetwork")
    public String subnetwork;
    public NetworkInterface withSubnetwork(String subnetwork) {
        this.subnetwork = subnetwork;
        return this;
    }
    
    /**
     * VLAN tag of a VLAN based network interface, must be in range from 2 to 4094 inclusively. This field is mandatory if the parent network interface name is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Integer vlan;
    public NetworkInterface withVlan(Integer vlan) {
        this.vlan = vlan;
        return this;
    }
    
}
