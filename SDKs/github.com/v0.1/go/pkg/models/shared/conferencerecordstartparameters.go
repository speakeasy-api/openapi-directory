// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConferenceRecordStartParametersFileFormatEnum - File format (extension)
type ConferenceRecordStartParametersFileFormatEnum string

const (
	ConferenceRecordStartParametersFileFormatEnumWav ConferenceRecordStartParametersFileFormatEnum = "wav"
	ConferenceRecordStartParametersFileFormatEnumMp3 ConferenceRecordStartParametersFileFormatEnum = "mp3"
)

func (e *ConferenceRecordStartParametersFileFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "wav":
		fallthrough
	case "mp3":
		*e = ConferenceRecordStartParametersFileFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConferenceRecordStartParametersFileFormatEnum: %s", s)
	}
}

// ConferenceRecordStartParameters - POST parameters
type ConferenceRecordStartParameters struct {
	// Name of the conference in question
	ConferenceName string `form:"name=ConferenceName"`
	// File format (extension)
	FileFormat *ConferenceRecordStartParametersFileFormatEnum `form:"name=FileFormat"`
	// Recording file name (without extension); if empty, a timestamp based file name will be generated
	FileName *string `form:"name=FileName"`
	// Directory path/URI where the recording file will be saved
	FilePath *string `form:"name=FilePath"`
}
