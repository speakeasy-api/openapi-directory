/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BillLineItemInput {
    /**
     * User defined item code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;

    public BillLineItemInput withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * Department id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("department_id")
    public String departmentId;

    public BillLineItemInput withDepartmentId(String departmentId) {
        this.departmentId = departmentId;
        return this;
    }
    
    /**
     * User defined description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public BillLineItemInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Discount percentage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount_percentage")
    public Double discountPercentage;

    public BillLineItemInput withDiscountPercentage(Double discountPercentage) {
        this.discountPercentage = discountPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item")
    public LinkedInvoiceItemInput item;

    public BillLineItemInput withItem(LinkedInvoiceItemInput item) {
        this.item = item;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ledger_account")
    public LinkedLedgerAccountInput ledgerAccount;

    public BillLineItemInput withLedgerAccount(LinkedLedgerAccountInput ledgerAccount) {
        this.ledgerAccount = ledgerAccount;
        return this;
    }
    
    /**
     * Line number in the invoice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line_number")
    public Long lineNumber;

    public BillLineItemInput withLineNumber(Long lineNumber) {
        this.lineNumber = lineNumber;
        return this;
    }
    
    /**
     * Location id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;

    public BillLineItemInput withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;

    public BillLineItemInput withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Row ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_id")
    public String rowId;

    public BillLineItemInput withRowId(String rowId) {
        this.rowId = rowId;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;

    public BillLineItemInput withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    /**
     * Tax amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_amount")
    public Double taxAmount;

    public BillLineItemInput withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_rate")
    public LinkedTaxRateInput taxRate;

    public BillLineItemInput withTaxRate(LinkedTaxRateInput taxRate) {
        this.taxRate = taxRate;
        return this;
    }
    
    /**
     * Total amount of the line item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_amount")
    public Double totalAmount;

    public BillLineItemInput withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * Bill Line Item type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public BillLineItemTypeEnum type;

    public BillLineItemInput withType(BillLineItemTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Description of the unit type the item is sold as, ie: kg, hour.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_of_measure")
    public String unitOfMeasure;

    public BillLineItemInput withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_price")
    public Double unitPrice;

    public BillLineItemInput withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    public BillLineItemInput(){}
}
