"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class DeletedNodeSummaryTypeEnum(str, Enum):
    r"""Node type"""
    FOLDER = 'folder'
    FILE = 'file'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeletedNodeSummary:
    r"""Deleted node information (Deleted node can be a folder or file)"""
    
    cnt_versions: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cntVersions') }})
    r"""Number of deleted versions of this file"""  
    first_deleted_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstDeletedAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""First deleted version"""  
    last_deleted_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastDeletedAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""Last deleted version"""  
    last_deleted_node_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastDeletedNodeId') }})
    r"""Node ID of last deleted version"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Node name"""  
    parent_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentId') }})
    r"""Parent node ID (room or folder)"""  
    parent_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentPath') }})
    r"""Parent node path
    
    `/` if node is a root node (room)
    """  
    type: DeletedNodeSummaryTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Node type"""  
    reference_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referenceId'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.37.0
    
    Reference ID. Identical across all versions of a file
    """  
    timestamp_creation: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestampCreation'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.22.0
    
    Time the node was created on external file system
    """  
    timestamp_modification: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timestampModification'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""&#128640; Since v4.22.0
    
    Time the content of a node was last modified on external file system
    """  
    