/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetClassificationsIdSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey: string;
}

export class GetClassificationsIdRequest extends SpeakeasyBase {
  /**
   * The ID of the classification resource to load.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * Success
 */
export class GetClassificationsId200ApplicationVndApiPlusJson extends SpeakeasyBase {
  /**
   * A classification, in general, is something that can describe other resources, such as countries, genres or
   *
   * @remarks
   * languages. How they're described (included or excluded, and whether they're the primary classification
   * of this type) is handled using other resources. Different functions of ART19 rely on classifications differently,
   * and could have an effect only on directory information, or may have an effect on ad decisioning.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => shared.Classification)
  data?: shared.Classification;

  /**
   * Links related to the retrieved resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => shared.ResourceLink)
  links?: shared.ResourceLink;
}

export class GetClassificationsIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getClassificationsId200ApplicationVndApiPlusJsonObject?: GetClassificationsId200ApplicationVndApiPlusJson;
}
