/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Create New Event Request Payload Object
 */
export class CreateEventRequestBody extends SpeakeasyBase {
  /**
   * Event Body
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: Record<string, any>;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from: string;

  /**
   * Member ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * Event type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

export class CreateEventRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CreateEventRequestBody;

  /**
   * Conversation ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=conversation_id",
  })
  conversationId: string;
}

/**
 * Create New Event Response Payload Object
 */
export class CreateEvent201ApplicationJSON extends SpeakeasyBase {
  /**
   * A link towards a conversation event included in Conversation API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * Event id. This is a progressive integer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Time of event creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;
}

export class CreateEventResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Create New Event Response Payload Object
   */
  @SpeakeasyMetadata()
  createEvent201ApplicationJSONObject?: CreateEvent201ApplicationJSON;
}
