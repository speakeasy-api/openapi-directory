"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventperiodupdate as shared_eventperiodupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EventRecordRequest:
    r"""An event period update resource."""
    
    current_time_millis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentTimeMillis'), 'exclude': lambda f: f is None }})
    r"""The current time when this update was sent, in milliseconds, since 1970 UTC (Unix Epoch)."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordRequest`."""  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestId'), 'exclude': lambda f: f is None }})
    r"""The request ID used to identify this attempt to record events."""  
    time_periods: Optional[list[shared_eventperiodupdate.EventPeriodUpdate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timePeriods'), 'exclude': lambda f: f is None }})
    r"""A list of the time period updates being made in this request."""  
    