<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Kpi 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Daily Active Users by Date
     * 
     * This endpoint allows you to retrieve a daily series of the total number of unique active users on each date.
     * 
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *     "message": (required, string) the status of the export, returns 'success' when completed without errors,
     *     "data" : [
     *         {
     *             "time" : (string) date as ISO 8601 date,
     *             "dau" : (int)
     *         },
     *         ...
     *     ]
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DailyActiveUsersByDateRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\DailyActiveUsersByDateResponse
     */
	public function dailyActiveUsersByDate(
        \OpenAPI\OpenAPI\Models\Operations\DailyActiveUsersByDateRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\DailyActiveUsersByDateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/kpi/dau/data_series');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DailyActiveUsersByDateRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DailyActiveUsersByDateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Daily New Users by Date
     * 
     * This endpoint allows you to retrieve a daily series of the total number of new users on each date.
     * 
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *     "message": (required, string) the status of the export, returns 'success' when completed without errors,
     *     "data" : [
     *         {
     *             "time" : (string) date as ISO 8601 date,
     *             "new_users" : (int)
     *         },
     *         ...
     *     ]
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DailyNewUsersByDateRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\DailyNewUsersByDateResponse
     */
	public function dailyNewUsersByDate(
        \OpenAPI\OpenAPI\Models\Operations\DailyNewUsersByDateRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\DailyNewUsersByDateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/kpi/new_users/data_series');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\DailyNewUsersByDateRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DailyNewUsersByDateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * KPIs for Daily App Uninstalls by Date
     * 
     * This endpoint allows you to retrieve a daily series of the total number of uninstalls on each date.
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *     "message": (required, string) the status of the export, returns 'success' when completed without errors,
     *     "data" : [
     *         {
     *             "time" : (string) date as ISO 8601 date,
     *             "uninstalls" : (int)
     *         },
     *         ...
     *     ]
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\KpIsForDailyAppUninstallsByDateRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\KpIsForDailyAppUninstallsByDateResponse
     */
	public function kpIsForDailyAppUninstallsByDate(
        \OpenAPI\OpenAPI\Models\Operations\KpIsForDailyAppUninstallsByDateRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\KpIsForDailyAppUninstallsByDateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/kpi/uninstalls/data_series');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\KpIsForDailyAppUninstallsByDateRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\KpIsForDailyAppUninstallsByDateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Monthly Active Users for Last 30 Days
     * 
     * This endpoint allows you to retrieve a daily series of the total number of unique active users over a 30-day rolling window.
     * 
     * ## Response
     * 
     * ```json
     * Content-Type: application/json
     * Authorization: Bearer YOUR-REST-API-KEY
     * {
     *     "message": (required, string) the status of the export, returns 'success' when completed without errors,
     *     "data" : [
     *         {
     *             "time" : (string) date as ISO 8601 date,
     *             "mau" : (int)
     *         },
     *         ...
     *     ]
     * }
     * ```
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\MonthlyActiveUsersForLast30DaysRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\MonthlyActiveUsersForLast30DaysResponse
     */
	public function monthlyActiveUsersForLast30Days(
        \OpenAPI\OpenAPI\Models\Operations\MonthlyActiveUsersForLast30DaysRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\MonthlyActiveUsersForLast30DaysResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/kpi/mau/data_series');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\MonthlyActiveUsersForLast30DaysRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\MonthlyActiveUsersForLast30DaysResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
}