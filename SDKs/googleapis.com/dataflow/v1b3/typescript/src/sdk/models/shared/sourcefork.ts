/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DerivedSource } from "./derivedsource";
import { SourceSplitShard } from "./sourcesplitshard";
import { Expose, Type } from "class-transformer";

/**
 * DEPRECATED in favor of DynamicSourceSplit.
 */
export class SourceFork extends SpeakeasyBase {
  /**
   * DEPRECATED in favor of DerivedSource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  @Type(() => SourceSplitShard)
  primary?: SourceSplitShard;

  /**
   * Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primarySource" })
  @Type(() => DerivedSource)
  primarySource?: DerivedSource;

  /**
   * DEPRECATED in favor of DerivedSource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "residual" })
  @Type(() => SourceSplitShard)
  residual?: SourceSplitShard;

  /**
   * Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "residualSource" })
  @Type(() => DerivedSource)
  residualSource?: DerivedSource;
}
