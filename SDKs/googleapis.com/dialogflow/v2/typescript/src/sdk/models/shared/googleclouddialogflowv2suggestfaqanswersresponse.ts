/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowV2FaqAnswer } from "./googleclouddialogflowv2faqanswer";
import { Expose, Type } from "class-transformer";

/**
 * The request message for Participants.SuggestFaqAnswers.
 */
export class GoogleCloudDialogflowV2SuggestFaqAnswersResponse extends SpeakeasyBase {
  /**
   * Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextSize" })
  contextSize?: number;

  /**
   * Answers extracted from FAQ documents.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDialogflowV2FaqAnswer })
  @Expose({ name: "faqAnswers" })
  @Type(() => GoogleCloudDialogflowV2FaqAnswer)
  faqAnswers?: GoogleCloudDialogflowV2FaqAnswer[];

  /**
   * The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latestMessage" })
  latestMessage?: string;
}
