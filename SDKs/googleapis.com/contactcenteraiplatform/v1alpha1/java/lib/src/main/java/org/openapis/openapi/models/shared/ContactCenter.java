/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContactCenter - Message describing ContactCenter object Next ID: 14
 */
public class ContactCenter {
    /**
     * Message storing info about the first admin user. Next ID: 3
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminUser")
    public AdminUser adminUser;

    public ContactCenter withAdminUser(AdminUser adminUser) {
        this.adminUser = adminUser;
        return this;
    }
    
    /**
     * Optional. Whether to enable users to be created in the CCAIP-instance concurrently to having users in Cloud identity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ccaipManagedUsers")
    public Boolean ccaipManagedUsers;

    public ContactCenter withCcaipManagedUsers(Boolean ccaipManagedUsers) {
        this.ccaipManagedUsers = ccaipManagedUsers;
        return this;
    }
    
    /**
     * Output only. [Output only] Create time stamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public ContactCenter withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. Immutable. At least 2 and max 16 char long, must conform to [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerDomainPrefix")
    public String customerDomainPrefix;

    public ContactCenter withCustomerDomainPrefix(String customerDomainPrefix) {
        this.customerDomainPrefix = customerDomainPrefix;
        return this;
    }
    
    /**
     * Required. A user friendly name for the ContactCenter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ContactCenter withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Message storing the instance configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceConfig")
    public InstanceConfig instanceConfig;

    public ContactCenter withInstanceConfig(InstanceConfig instanceConfig) {
        this.instanceConfig = instanceConfig;
        return this;
    }
    
    /**
     * Labels as key value pairs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public ContactCenter withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * name of resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ContactCenter withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Message storing SAML params to enable Google as IDP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("samlParams")
    public SAMLParams samlParams;

    public ContactCenter withSamlParams(SAMLParams samlParams) {
        this.samlParams = samlParams;
        return this;
    }
    
    /**
     * Output only. The state of this contact center.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ContactCenterStateEnum state;

    public ContactCenter withState(ContactCenterStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. [Output only] Update time stamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public ContactCenter withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Message storing the URIs of the ContactCenter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uris")
    public URIs uris;

    public ContactCenter withUris(URIs uris) {
        this.uris = uris;
        return this;
    }
    
    /**
     * Optional. Email address of the first admin user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userEmail")
    public String userEmail;

    public ContactCenter withUserEmail(String userEmail) {
        this.userEmail = userEmail;
        return this;
    }
    
    public ContactCenter(){}
}
