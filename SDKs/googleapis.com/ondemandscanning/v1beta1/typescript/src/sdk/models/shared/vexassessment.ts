/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Justification } from "./justification";
import { RelatedUrl } from "./relatedurl";
import { Remediation } from "./remediation";
import { Expose, Type } from "class-transformer";

/**
 * Provides the state of this Vulnerability assessment.
 */
export enum VexAssessmentStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Affected = "AFFECTED",
  NotAffected = "NOT_AFFECTED",
  Fixed = "FIXED",
  UnderInvestigation = "UNDER_INVESTIGATION",
}

/**
 * VexAssessment provides all publisher provided Vex information that is related to this vulnerability.
 */
export class VexAssessment extends SpeakeasyBase {
  /**
   * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cve" })
  cve?: string;

  /**
   * Contains information about the impact of this vulnerability, this will change with time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "impacts" })
  impacts?: string[];

  /**
   * Justification provides the justification when the state of the assessment if NOT_AFFECTED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "justification" })
  @Type(() => Justification)
  justification?: Justification;

  /**
   * The VulnerabilityAssessment note from which this VexAssessment was generated. This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "noteName" })
  noteName?: string;

  /**
   * Holds a list of references associated with this vulnerability item and assessment.
   */
  @SpeakeasyMetadata({ elemType: RelatedUrl })
  @Expose({ name: "relatedUris" })
  @Type(() => RelatedUrl)
  relatedUris?: RelatedUrl[];

  /**
   * Specifies details on how to handle (and presumably, fix) a vulnerability.
   */
  @SpeakeasyMetadata({ elemType: Remediation })
  @Expose({ name: "remediations" })
  @Type(() => Remediation)
  remediations?: Remediation[];

  /**
   * Provides the state of this Vulnerability assessment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: VexAssessmentStateEnum;
}
