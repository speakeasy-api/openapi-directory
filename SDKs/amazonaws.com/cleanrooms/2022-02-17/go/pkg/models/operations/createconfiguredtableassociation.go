// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateConfiguredTableAssociationPathParams struct {
	// A unique identifier for one of your memberships for a collaboration. The configured table is associated to the collaboration that this membership belongs to. Currently accepts a membership ID.
	MembershipIdentifier string `pathParam:"style=simple,explode=false,name=membershipIdentifier"`
}

type CreateConfiguredTableAssociationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateConfiguredTableAssociationRequestBody struct {
	// A unique identifier for the configured table to be associated to. Currently accepts a configured table ID.
	ConfiguredTableIdentifier string `json:"configuredTableIdentifier"`
	// A description for the configured table association.
	Description *string `json:"description,omitempty"`
	// The name of the configured table association. This name is used to query the underlying configured table.
	Name string `json:"name"`
	// The service will assume this role to access catalog metadata and query the table.
	RoleArn string `json:"roleArn"`
	// Map of tags assigned to a resource
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateConfiguredTableAssociationRequest struct {
	PathParams CreateConfiguredTableAssociationPathParams
	Headers    CreateConfiguredTableAssociationHeaders
	Request    CreateConfiguredTableAssociationRequestBody `request:"mediaType=application/json"`
}

type CreateConfiguredTableAssociationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateConfiguredTableAssociationOutput *shared.CreateConfiguredTableAssociationOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
