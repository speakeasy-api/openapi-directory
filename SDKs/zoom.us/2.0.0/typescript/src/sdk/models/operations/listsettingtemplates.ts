/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListSettingTemplatesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListSettingTemplatesRequest extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * Number of records returns within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Unique identifier of the site. This field is required only if multiple sites have been enabled.  of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details. If this is not provided, the response lists the account level setting templates.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=site_id",
  })
  siteId?: string;
}

/**
 * Template type.<br>
 *
 * @remarks
 * The value of this field can be one of the following:<br>
 * * `user`<br>
 * * `group`<br>
 * * `autReceptionist`<br>
 * * `commonArea`<br>
 * * `zr`<br>
 * * `interop`<br>
 */
export enum ListSettingTemplates200ApplicationXMLTemplatesTypeEnum {
  User = "user",
  Group = "group",
  AutReceptionist = "autReceptionist",
  CommonArea = "commonArea",
  Zr = "zr",
  Interop = "interop",
}

export class ListSettingTemplates200ApplicationXMLTemplates extends SpeakeasyBase {
  /**
   * Template description.
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * Unique identifier of the template.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Template name.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Template type.<br>
   *
   * @remarks
   * The value of this field can be one of the following:<br>
   * * `user`<br>
   * * `group`<br>
   * * `autReceptionist`<br>
   * * `commonArea`<br>
   * * `zr`<br>
   * * `interop`<br>
   */
  @SpeakeasyMetadata()
  type?: ListSettingTemplates200ApplicationXMLTemplatesTypeEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * OK
 */
export class ListSettingTemplates200ApplicationXML extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call. The default is **30** and the maximum is **300**.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: ListSettingTemplates200ApplicationXMLTemplates,
  })
  templates?: ListSettingTemplates200ApplicationXMLTemplates[];

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Template type.<br>
 *
 * @remarks
 * The value of this field can be one of the following:<br>
 * * `user`<br>
 * * `group`<br>
 * * `autReceptionist`<br>
 * * `commonArea`<br>
 * * `zr`<br>
 * * `interop`<br>
 */
export enum ListSettingTemplates200ApplicationJSONTemplatesTypeEnum {
  User = "user",
  Group = "group",
  AutReceptionist = "autReceptionist",
  CommonArea = "commonArea",
  Zr = "zr",
  Interop = "interop",
}

export class ListSettingTemplates200ApplicationJSONTemplates extends SpeakeasyBase {
  /**
   * Template description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Unique identifier of the template.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Template name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Template type.<br>
   *
   * @remarks
   * The value of this field can be one of the following:<br>
   * * `user`<br>
   * * `group`<br>
   * * `autReceptionist`<br>
   * * `commonArea`<br>
   * * `zr`<br>
   * * `interop`<br>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ListSettingTemplates200ApplicationJSONTemplatesTypeEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * OK
 */
export class ListSettingTemplates200ApplicationJSON extends SpeakeasyBase {
  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call. The default is **30** and the maximum is **300**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata({
    elemType: ListSettingTemplates200ApplicationJSONTemplates,
  })
  @Expose({ name: "templates" })
  @Type(() => ListSettingTemplates200ApplicationJSONTemplates)
  templates?: ListSettingTemplates200ApplicationJSONTemplates[];

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListSettingTemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * OK
   */
  @SpeakeasyMetadata()
  listSettingTemplates200ApplicationJSONObject?: ListSettingTemplates200ApplicationJSON;
}
