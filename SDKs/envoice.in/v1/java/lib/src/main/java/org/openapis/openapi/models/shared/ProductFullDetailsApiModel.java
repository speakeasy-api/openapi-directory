/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProductFullDetailsApiModel - OK
 */
public class ProductFullDetailsApiModel {
    /**
     * Product short link
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessToken")
    public String accessToken;
    public ProductFullDetailsApiModel withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * After payment description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AfterPaymentDescription")
    public String afterPaymentDescription;
    public ProductFullDetailsApiModel withAfterPaymentDescription(String afterPaymentDescription) {
        this.afterPaymentDescription = afterPaymentDescription;
        return this;
    }
    
    /**
     * List of product attachments
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attachments")
    public ProductAttachmentApiModel[] attachments;
    public ProductFullDetailsApiModel withAttachments(ProductAttachmentApiModel[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    /**
     * Default button call to action
     * Ex: Buy now, subscribe, ...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ButtonCallToAction")
    public String buttonCallToAction;
    public ProductFullDetailsApiModel withButtonCallToAction(String buttonCallToAction) {
        this.buttonCallToAction = buttonCallToAction;
        return this;
    }
    
    /**
     * List of product coupons
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Coupons")
    public ProductCouponApiModel[] coupons;
    public ProductFullDetailsApiModel withCoupons(ProductCouponApiModel[] coupons) {
        this.coupons = coupons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Currency")
    public CurrencyDetailsApiModel currency;
    public ProductFullDetailsApiModel withCurrency(CurrencyDetailsApiModel currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Foreign key Currency
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CurrencyId")
    public Integer currencyId;
    public ProductFullDetailsApiModel withCurrencyId(Integer currencyId) {
        this.currencyId = currencyId;
        return this;
    }
    
    /**
     * Product description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public ProductFullDetailsApiModel withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * List of product discounts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Discounts")
    public ProductDiscountApiModel[] discounts;
    public ProductFullDetailsApiModel withDiscounts(ProductDiscountApiModel[] discounts) {
        this.discounts = discounts;
        return this;
    }
    
    /**
     * Product id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;
    public ProductFullDetailsApiModel withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicate that the product is set as featured
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsFeatured")
    public Boolean isFeatured;
    public ProductFullDetailsApiModel withIsFeatured(Boolean isFeatured) {
        this.isFeatured = isFeatured;
        return this;
    }
    
    /**
     * List of product items
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Items")
    public ProductItemApiModel[] items;
    public ProductFullDetailsApiModel withItems(ProductItemApiModel[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Product alias
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProductFullDetailsApiModel withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * List of enabled payment gateways for this product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentGateways")
    public ProductGatewayApiModel[] paymentGateways;
    public ProductFullDetailsApiModel withPaymentGateways(ProductGatewayApiModel[] paymentGateways) {
        this.paymentGateways = paymentGateways;
        return this;
    }
    
    /**
     * Cost for shipping the product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingAmount")
    public Double shippingAmount;
    public ProductFullDetailsApiModel withShippingAmount(Double shippingAmount) {
        this.shippingAmount = shippingAmount;
        return this;
    }
    
    /**
     * Client instructions for shipping
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShippingDescription")
    public String shippingDescription;
    public ProductFullDetailsApiModel withShippingDescription(String shippingDescription) {
        this.shippingDescription = shippingDescription;
        return this;
    }
    
    /**
     * Product availability status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public ProductFullDetailsApiModelStatusEnum status;
    public ProductFullDetailsApiModel withStatus(ProductFullDetailsApiModelStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Subtotal amount of product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubTotalAmount")
    public Double subTotalAmount;
    public ProductFullDetailsApiModel withSubTotalAmount(Double subTotalAmount) {
        this.subTotalAmount = subTotalAmount;
        return this;
    }
    
    /**
     * Total amount of product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalAmount")
    public Double totalAmount;
    public ProductFullDetailsApiModel withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    /**
     * Total amount of product with shipping
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalWithShipping")
    public Double totalWithShipping;
    public ProductFullDetailsApiModel withTotalWithShipping(Double totalWithShipping) {
        this.totalWithShipping = totalWithShipping;
        return this;
    }
    
    /**
     * What happens next description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WhatHappensNextDescription")
    public String whatHappensNextDescription;
    public ProductFullDetailsApiModel withWhatHappensNextDescription(String whatHappensNextDescription) {
        this.whatHappensNextDescription = whatHappensNextDescription;
        return this;
    }
    
}
