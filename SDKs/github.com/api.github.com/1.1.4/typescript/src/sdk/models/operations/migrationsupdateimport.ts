/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The type of version control system you are migrating from.
 */
export enum MigrationsUpdateImportRequestBodyVcsEnum {
  Subversion = "subversion",
  Tfvc = "tfvc",
  Git = "git",
  Mercurial = "mercurial",
}

export class MigrationsUpdateImportRequestBody extends SpeakeasyBase {
  /**
   * For a tfvc import, the name of the project that is being imported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tfvc_project" })
  tfvcProject?: string;

  /**
   * The type of version control system you are migrating from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcs" })
  vcs?: MigrationsUpdateImportRequestBodyVcsEnum;

  /**
   * The password to provide to the originating repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcs_password" })
  vcsPassword?: string;

  /**
   * The username to provide to the originating repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcs_username" })
  vcsUsername?: string;
}

export class MigrationsUpdateImportRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: MigrationsUpdateImportRequestBody;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class MigrationsUpdateImportResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Unavailable due to service under maintenance.
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  import?: shared.Import;
}
