/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoScalingConfigurationSummary } from "./autoscalingconfigurationsummary";
import { EncryptionConfiguration } from "./encryptionconfiguration";
import { HealthCheckConfiguration } from "./healthcheckconfiguration";
import { InstanceConfiguration } from "./instanceconfiguration";
import { NetworkConfiguration } from "./networkconfiguration";
import { ServiceObservabilityConfiguration } from "./serviceobservabilityconfiguration";
import { ServiceStatusEnum } from "./servicestatusenum";
import { SourceConfiguration } from "./sourceconfiguration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Describes an App Runner service. It can describe a service in any state, including deleted services.</p> <p>This type contains the full information about a service, including configuration details. It's returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_CreateService.html">CreateService</a>, <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DescribeService.html">DescribeService</a>, and <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_DeleteService.html">DeleteService</a> actions. A subset of this information is returned by the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ListServices.html">ListServices</a> action using the <a href="https://docs.aws.amazon.com/apprunner/latest/api/API_ServiceSummary.html">ServiceSummary</a> type.</p>
 */
export class Service extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AutoScalingConfigurationSummary" })
  @Type(() => AutoScalingConfigurationSummary)
  autoScalingConfigurationSummary: AutoScalingConfigurationSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeletedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionConfiguration" })
  @Type(() => EncryptionConfiguration)
  encryptionConfiguration?: EncryptionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "HealthCheckConfiguration" })
  @Type(() => HealthCheckConfiguration)
  healthCheckConfiguration?: HealthCheckConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceConfiguration" })
  @Type(() => InstanceConfiguration)
  instanceConfiguration: InstanceConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkConfiguration" })
  @Type(() => NetworkConfiguration)
  networkConfiguration: NetworkConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ObservabilityConfiguration" })
  @Type(() => ServiceObservabilityConfiguration)
  observabilityConfiguration?: ServiceObservabilityConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceArn" })
  serviceArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceId" })
  serviceId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceName" })
  serviceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceUrl" })
  serviceUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceConfiguration" })
  @Type(() => SourceConfiguration)
  sourceConfiguration: SourceConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: ServiceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
