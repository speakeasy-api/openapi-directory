"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import componentsh0 as shared_componentsh0
from typing import Optional


@dataclasses.dataclass
class TariffcomponentsRequest:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""Valid email address to assign request to (pre offer generation). Ensure GDPR (DSGVO) at any time"""  
    kwha: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'kwha', 'style': 'form', 'explode': True }})
    r"""Total amount of energy in kilo-watt-hours per year. (sample 2100)"""  
    milliseconds: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'milliseconds', 'style': 'form', 'explode': True }})
    r"""If provided all results will be scaled to this timeframe"""  
    wh: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'wh', 'style': 'form', 'explode': True }})
    r"""If provided together with milliseconds, a cost component stament for a particular event (like charging a car) will be created."""  
    zipcode: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'zipcode', 'style': 'form', 'explode': True }})
    r"""Zipcode (Postzleitzahl) of a city in Germany."""  
    

@dataclasses.dataclass
class TariffcomponentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    componentsh0: Optional[shared_componentsh0.Componentsh0] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    