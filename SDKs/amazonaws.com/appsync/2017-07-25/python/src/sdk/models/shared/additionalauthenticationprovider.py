"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import authenticationtype_enum as shared_authenticationtype_enum
from ..shared import cognitouserpoolconfig as shared_cognitouserpoolconfig
from ..shared import lambdaauthorizerconfig as shared_lambdaauthorizerconfig
from ..shared import openidconnectconfig as shared_openidconnectconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AdditionalAuthenticationProvider:
    r"""Describes an additional authentication provider."""
    
    authentication_type: Optional[shared_authenticationtype_enum.AuthenticationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authenticationType'), 'exclude': lambda f: f is None }})  
    lambda_authorizer_config: Optional[shared_lambdaauthorizerconfig.LambdaAuthorizerConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lambdaAuthorizerConfig'), 'exclude': lambda f: f is None }})  
    open_id_connect_config: Optional[shared_openidconnectconfig.OpenIDConnectConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openIDConnectConfig'), 'exclude': lambda f: f is None }})  
    user_pool_config: Optional[shared_cognitouserpoolconfig.CognitoUserPoolConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userPoolConfig'), 'exclude': lambda f: f is None }})  
    