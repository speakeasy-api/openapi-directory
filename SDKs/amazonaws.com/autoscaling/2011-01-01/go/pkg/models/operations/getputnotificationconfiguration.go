// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETPutNotificationConfigurationActionEnum
type GETPutNotificationConfigurationActionEnum string

const (
	GETPutNotificationConfigurationActionEnumPutNotificationConfiguration GETPutNotificationConfigurationActionEnum = "PutNotificationConfiguration"
)

func (e *GETPutNotificationConfigurationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PutNotificationConfiguration":
		*e = GETPutNotificationConfigurationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPutNotificationConfigurationActionEnum: %s", s)
	}
}

// GETPutNotificationConfigurationVersionEnum
type GETPutNotificationConfigurationVersionEnum string

const (
	GETPutNotificationConfigurationVersionEnumTwoThousandAndEleven0101 GETPutNotificationConfigurationVersionEnum = "2011-01-01"
)

func (e *GETPutNotificationConfigurationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETPutNotificationConfigurationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETPutNotificationConfigurationVersionEnum: %s", s)
	}
}

type GETPutNotificationConfigurationRequest struct {
	Action GETPutNotificationConfigurationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The type of event that causes the notification to be sent. To query the notification types supported by Amazon EC2 Auto Scaling, call the <a>DescribeAutoScalingNotificationTypes</a> API.
	NotificationTypes []string `queryParam:"style=form,explode=true,name=NotificationTypes"`
	// The Amazon Resource Name (ARN) of the Amazon SNS topic.
	TopicARN          string                                     `queryParam:"style=form,explode=true,name=TopicARN"`
	Version           GETPutNotificationConfigurationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETPutNotificationConfigurationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
