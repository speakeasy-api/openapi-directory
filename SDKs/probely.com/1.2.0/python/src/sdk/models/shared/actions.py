"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionsActionEnum(str, Enum):
    r"""Actions are:
    * edit - edit target
    * delete - delete target
    * trial - start a trial with this target
    * plan - select a subscipition plan with this target
    * subscribe - add target to subscribed plan
    * unsubscribe - remove target from subscription
    * archive - archive target
    * activate - unarchive target
    """
    EDIT = 'edit'
    DELETE = 'delete'
    TRIAL = 'trial'
    PLAN = 'plan'
    SUBSCRIBE = 'subscribe'
    UNSUBSCRIBE = 'unsubscribe'
    ARCHIVE = 'archive'
    ACTIVATE = 'activate'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Actions:
    
    action: Optional[ActionsActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""Actions are:
    * edit - edit target
    * delete - delete target
    * trial - start a trial with this target
    * plan - select a subscipition plan with this target
    * subscribe - add target to subscribed plan
    * unsubscribe - remove target from subscription
    * archive - archive target
    * activate - unarchive target
    """  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""Label or the action"""  
    