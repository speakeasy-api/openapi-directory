// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopBuildBatchXAmzTargetEnum
type StopBuildBatchXAmzTargetEnum string

const (
	StopBuildBatchXAmzTargetEnumCodeBuild20161006StopBuildBatch StopBuildBatchXAmzTargetEnum = "CodeBuild_20161006.StopBuildBatch"
)

func (e *StopBuildBatchXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeBuild_20161006.StopBuildBatch":
		*e = StopBuildBatchXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopBuildBatchXAmzTargetEnum: %s", s)
	}
}

type StopBuildBatchRequest struct {
	StopBuildBatchInput shared.StopBuildBatchInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          StopBuildBatchXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopBuildBatchResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	StopBuildBatchOutput *shared.StopBuildBatchOutput
}
