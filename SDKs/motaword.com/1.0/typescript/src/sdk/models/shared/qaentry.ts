/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SimpleModel } from "./simplemodel";
import { Expose, Type } from "class-transformer";

export class QaEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "docId" })
  docId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "editorLink" })
  editorLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "inSource" })
  inSource?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isCurrent" })
  isCurrent?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "module" })
  module?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  @Type(() => SimpleModel)
  projectId?: SimpleModel;

  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceLanguage" })
  @Type(() => SimpleModel)
  sourceLanguage?: SimpleModel;

  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "targetLanguage" })
  @Type(() => SimpleModel)
  targetLanguage?: SimpleModel;

  @SpeakeasyMetadata()
  @Expose({ name: "translation" })
  translation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uniqueKey" })
  uniqueKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vendor" })
  @Type(() => SimpleModel)
  vendor?: SimpleModel;
}
