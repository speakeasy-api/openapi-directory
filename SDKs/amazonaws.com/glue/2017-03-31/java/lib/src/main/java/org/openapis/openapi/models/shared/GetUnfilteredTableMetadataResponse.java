/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetUnfilteredTableMetadataResponse - Success
 */
public class GetUnfilteredTableMetadataResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthorizedColumns")
    public String[] authorizedColumns;

    public GetUnfilteredTableMetadataResponse withAuthorizedColumns(String[] authorizedColumns) {
        this.authorizedColumns = authorizedColumns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CellFilters")
    public ColumnRowFilter[] cellFilters;

    public GetUnfilteredTableMetadataResponse withCellFilters(ColumnRowFilter[] cellFilters) {
        this.cellFilters = cellFilters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsRegisteredWithLakeFormation")
    public Boolean isRegisteredWithLakeFormation;

    public GetUnfilteredTableMetadataResponse withIsRegisteredWithLakeFormation(Boolean isRegisteredWithLakeFormation) {
        this.isRegisteredWithLakeFormation = isRegisteredWithLakeFormation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Table")
    public Table table;

    public GetUnfilteredTableMetadataResponse withTable(Table table) {
        this.table = table;
        return this;
    }
    
    public GetUnfilteredTableMetadataResponse(){}
}
