<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetDiscoveryV2EventsRequest
{
    /**
     * Filter events by attraction id
     * 
     * @var ?string $attractionId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=attractionId')]
    public ?string $attractionId = null;
    
    /**
     * Filter events by city
     * 
     * @var ?string $city
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=city')]
    public ?string $city = null;
    
    /**
     * Filter events by classification id: id of any segment, genre, sub-genre, type, sub-type
     * 
     * @var ?array<mixed> $classificationId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=classificationId')]
    public ?array $classificationId = null;
    
    /**
     * Filter events by classification name: name of any segment, genre, sub-genre, type, sub-type
     * 
     * @var ?array<mixed> $classificationName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=classificationName')]
    public ?array $classificationName = null;
    
    /**
     * Filter events by clientName
     * 
     * @var ?string $clientVisibility
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=clientVisibility')]
    public ?string $clientVisibility = null;
    
    /**
     * Filter events by country code
     * 
     * @var ?string $countryCode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=countryCode')]
    public ?string $countryCode = null;
    
    /**
     * Filter events by dma id
     * 
     * @var ?string $dmaId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=dmaId')]
    public ?string $dmaId = null;
    
    /**
     * Filter events with a start date before this date
     * 
     * @var ?string $endDateTime
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=endDateTime')]
    public ?string $endDateTime = null;
    
    /**
     * filter events by geoHash
     * 
     * @var ?string $geoPoint
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=geoPoint')]
    public ?string $geoPoint = null;
    
    /**
     * Filter entities by its id
     * 
     * @var ?string $id
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=id')]
    public ?string $id = null;
    
    /**
     * Yes if you want to display licensed content
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsIncludeLicensedContentEnum $includeLicensedContent
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeLicensedContent')]
    public ?GetDiscoveryV2EventsIncludeLicensedContentEnum $includeLicensedContent = null;
    
    /**
     * yes, to include spell check suggestions in the response.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsIncludeSpellcheckEnum $includeSpellcheck
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeSpellcheck')]
    public ?GetDiscoveryV2EventsIncludeSpellcheckEnum $includeSpellcheck = null;
    
    /**
     * True, to include events with date to be announce (TBA)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsIncludeTbaEnum $includeTBA
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeTBA')]
    public ?GetDiscoveryV2EventsIncludeTbaEnum $includeTBA = null;
    
    /**
     * True, to include event with a date to be defined (TBD)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsIncludeTbdEnum $includeTBD
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeTBD')]
    public ?GetDiscoveryV2EventsIncludeTbdEnum $includeTBD = null;
    
    /**
     * True if you want to have entities flag as test in the response. Only, if you only wanted test entities
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsIncludeTestEnum $includeTest
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeTest')]
    public ?GetDiscoveryV2EventsIncludeTestEnum $includeTest = null;
    
    /**
     * Keyword to search on
     * 
     * @var ?string $keyword
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=keyword')]
    public ?string $keyword = null;
    
    /**
     * Filter events by latitude and longitude, this filter is deprecated and maybe removed in a future release, please use geoPoint instead
     * 
     * @var ?string $latlong
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=latlong')]
    public ?string $latlong = null;
    
    /**
     * The locale in ISO code format. Multiple comma-separated values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used. When using a '*' it matches all locales. '*' can only be used at the end (e.g. 'en-us,en,*') 
     * 
     * @var ?string $locale
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=locale')]
    public ?string $locale = null;
    
    /**
     * Filter events by market id
     * 
     * @var ?string $marketId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=marketId')]
    public ?string $marketId = null;
    
    /**
     * Filter events with onsale end date before this date
     * 
     * @var ?string $onsaleEndDateTime
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=onsaleEndDateTime')]
    public ?string $onsaleEndDateTime = null;
    
    /**
     * Filter events with onsale range within this date
     * 
     * @var ?string $onsaleOnAfterStartDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=onsaleOnAfterStartDate')]
    public ?string $onsaleOnAfterStartDate = null;
    
    /**
     * Filter events with onsale start date on this date
     * 
     * @var ?string $onsaleOnStartDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=onsaleOnStartDate')]
    public ?string $onsaleOnStartDate = null;
    
    /**
     * Filter events with onsale start date after this date
     * 
     * @var ?string $onsaleStartDateTime
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=onsaleStartDateTime')]
    public ?string $onsaleStartDateTime = null;
    
    /**
     * Page number
     * 
     * @var ?string $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?string $page = null;
    
    /**
     * Filter events by postal code / zipcode
     * 
     * @var ?string $postalCode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=postalCode')]
    public ?string $postalCode = null;
    
    /**
     * Filter events by promoter id
     * 
     * @var ?string $promoterId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=promoterId')]
    public ?string $promoterId = null;
    
    /**
     * Radius of the area in which we want to search for events.
     * 
     * @var ?string $radius
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=radius')]
    public ?string $radius = null;
    
    /**
     * Filter events by segment id
     * 
     * @var ?string $segmentId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=segmentId')]
    public ?string $segmentId = null;
    
    /**
     * Filter events by segment name
     * 
     * @var ?string $segmentName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=segmentName')]
    public ?string $segmentName = null;
    
    /**
     * Page size of the response
     * 
     * @var ?string $size
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=size')]
    public ?string $size = null;
    
    /**
     * Sorting order of the search result. Allowable values : 'name,asc', 'name,desc', 'date,asc', 'date,desc', 'relevance,asc', 'relevance,desc', 'distance,asc', 'name,date,asc', 'name,date,desc', 'date,name,asc', 'date,name,desc','onsaleStartDate,asc', 'id,asc'
     * 
     * @var ?string $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?string $sort = null;
    
    /**
     * Filter entities by its source name
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsSourceEnum $source
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=source')]
    public ?GetDiscoveryV2EventsSourceEnum $source = null;
    
    /**
     * Filter events with a start date after this date
     * 
     * @var ?string $startDateTime
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=startDateTime')]
    public ?string $startDateTime = null;
    
    /**
     * Filter events by state code
     * 
     * @var ?string $stateCode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=stateCode')]
    public ?string $stateCode = null;
    
    /**
     * Unit of the radius
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDiscoveryV2EventsUnitEnum $unit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=unit')]
    public ?GetDiscoveryV2EventsUnitEnum $unit = null;
    
    /**
     * Filter events by venue id
     * 
     * @var ?string $venueId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=venueId')]
    public ?string $venueId = null;
    
	public function __construct()
	{
		$this->attractionId = null;
		$this->city = null;
		$this->classificationId = null;
		$this->classificationName = null;
		$this->clientVisibility = null;
		$this->countryCode = null;
		$this->dmaId = null;
		$this->endDateTime = null;
		$this->geoPoint = null;
		$this->id = null;
		$this->includeLicensedContent = null;
		$this->includeSpellcheck = null;
		$this->includeTBA = null;
		$this->includeTBD = null;
		$this->includeTest = null;
		$this->keyword = null;
		$this->latlong = null;
		$this->locale = null;
		$this->marketId = null;
		$this->onsaleEndDateTime = null;
		$this->onsaleOnAfterStartDate = null;
		$this->onsaleOnStartDate = null;
		$this->onsaleStartDateTime = null;
		$this->page = null;
		$this->postalCode = null;
		$this->promoterId = null;
		$this->radius = null;
		$this->segmentId = null;
		$this->segmentName = null;
		$this->size = null;
		$this->sort = null;
		$this->source = null;
		$this->startDateTime = null;
		$this->stateCode = null;
		$this->unit = null;
		$this->venueId = null;
	}
}
