// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGlobalCompliance200ApplicationJSONActionEnum - The id of the action
type GetGlobalCompliance200ApplicationJSONActionEnum string

const (
	GetGlobalCompliance200ApplicationJSONActionEnumGetGlobalCompliance GetGlobalCompliance200ApplicationJSONActionEnum = "getGlobalCompliance"
)

func (e *GetGlobalCompliance200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getGlobalCompliance":
		*e = GetGlobalCompliance200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGlobalCompliance200ApplicationJSONActionEnum: %s", s)
	}
}

type GetGlobalCompliance200ApplicationJSONDataGlobalComplianceComplianceDetails struct {
	Error                      *float32 `json:"error,omitempty"`
	NoReport                   *float32 `json:"noReport,omitempty"`
	SuccessAlreadyOK           *float32 `json:"successAlreadyOK,omitempty"`
	SuccessNotApplicable       *float32 `json:"successNotApplicable,omitempty"`
	SuccessRepaired            *float32 `json:"successRepaired,omitempty"`
	UnexpectedMissingComponent *float32 `json:"unexpectedMissingComponent,omitempty"`
	UnexpectedUnknownComponent *float32 `json:"unexpectedUnknownComponent,omitempty"`
}

type GetGlobalCompliance200ApplicationJSONDataGlobalCompliance struct {
	// Global compliance level (`-1` when no policies are defined)
	Compliance        float64                                                                     `json:"compliance"`
	ComplianceDetails *GetGlobalCompliance200ApplicationJSONDataGlobalComplianceComplianceDetails `json:"complianceDetails,omitempty"`
}

type GetGlobalCompliance200ApplicationJSONData struct {
	GlobalCompliance GetGlobalCompliance200ApplicationJSONDataGlobalCompliance `json:"globalCompliance"`
}

// GetGlobalCompliance200ApplicationJSONResultEnum - Result of the request
type GetGlobalCompliance200ApplicationJSONResultEnum string

const (
	GetGlobalCompliance200ApplicationJSONResultEnumSuccess GetGlobalCompliance200ApplicationJSONResultEnum = "success"
	GetGlobalCompliance200ApplicationJSONResultEnumError   GetGlobalCompliance200ApplicationJSONResultEnum = "error"
)

func (e *GetGlobalCompliance200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetGlobalCompliance200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGlobalCompliance200ApplicationJSONResultEnum: %s", s)
	}
}

// GetGlobalCompliance200ApplicationJSON - Success
type GetGlobalCompliance200ApplicationJSON struct {
	// The id of the action
	Action GetGlobalCompliance200ApplicationJSONActionEnum `json:"action"`
	Data   GetGlobalCompliance200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result GetGlobalCompliance200ApplicationJSONResultEnum `json:"result"`
}

type GetGlobalComplianceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	GetGlobalCompliance200ApplicationJSONObject *GetGlobalCompliance200ApplicationJSON
}
