/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Componentsh0 - Success
 */
public class Componentsh0 {
    /**
     * Sub components of this price
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("components")
    public Componentsh0[] components;
    public Componentsh0 withComponents(Componentsh0[] components) {
        this.components = components;
        return this;
    }
    
    /**
     * What is this price component about
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("describtion")
    public String describtion;
    public Componentsh0 withDescribtion(String describtion) {
        this.describtion = describtion;
        return this;
    }
    
    /**
     * Frequency/dependency of component
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mutlityplier")
    public String mutlityplier;
    public Componentsh0 withMutlityplier(String mutlityplier) {
        this.mutlityplier = mutlityplier;
        return this;
    }
    
    /**
     * Single unit price multiyplier is based on
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("per")
    public Double per;
    public Componentsh0 withPer(Double per) {
        this.per = per;
        return this;
    }
    
    /**
     * Total sum in Euro for this price component.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sum")
    public Double sum;
    public Componentsh0 withSum(Double sum) {
        this.sum = sum;
        return this;
    }
    
}
