// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateDataSourceRequestBodyDynamodbConfig - Describes an Amazon DynamoDB data source configuration.
type UpdateDataSourceRequestBodyDynamodbConfig struct {
	AwsRegion            *string                 `json:"awsRegion,omitempty"`
	DeltaSyncConfig      *shared.DeltaSyncConfig `json:"deltaSyncConfig,omitempty"`
	TableName            *string                 `json:"tableName,omitempty"`
	UseCallerCredentials *bool                   `json:"useCallerCredentials,omitempty"`
	Versioned            *bool                   `json:"versioned,omitempty"`
}

// UpdateDataSourceRequestBodyElasticsearchConfig - <p>Describes an OpenSearch data source configuration.</p> <p>As of September 2021, Amazon Elasticsearch service is Amazon OpenSearch Service. This configuration is deprecated. For new data sources, use <a>OpenSearchServiceDataSourceConfig</a> to specify an OpenSearch data source.</p>
type UpdateDataSourceRequestBodyElasticsearchConfig struct {
	AwsRegion *string `json:"awsRegion,omitempty"`
	Endpoint  *string `json:"endpoint,omitempty"`
}

// UpdateDataSourceRequestBodyEventBridgeConfig - Describes an Amazon EventBridge bus data source configuration.
type UpdateDataSourceRequestBodyEventBridgeConfig struct {
	EventBusArn *string `json:"eventBusArn,omitempty"`
}

// UpdateDataSourceRequestBodyHTTPConfig - Describes an HTTP data source configuration.
type UpdateDataSourceRequestBodyHTTPConfig struct {
	AuthorizationConfig *shared.AuthorizationConfig `json:"authorizationConfig,omitempty"`
	Endpoint            *string                     `json:"endpoint,omitempty"`
}

// UpdateDataSourceRequestBodyLambdaConfig - Describes an Lambda data source configuration.
type UpdateDataSourceRequestBodyLambdaConfig struct {
	LambdaFunctionArn *string `json:"lambdaFunctionArn,omitempty"`
}

// UpdateDataSourceRequestBodyOpenSearchServiceConfig - Describes an OpenSearch data source configuration.
type UpdateDataSourceRequestBodyOpenSearchServiceConfig struct {
	AwsRegion *string `json:"awsRegion,omitempty"`
	Endpoint  *string `json:"endpoint,omitempty"`
}

// UpdateDataSourceRequestBodyRelationalDatabaseConfig - Describes a relational database data source configuration.
type UpdateDataSourceRequestBodyRelationalDatabaseConfig struct {
	RdsHTTPEndpointConfig        *shared.RdsHTTPEndpointConfig            `json:"rdsHttpEndpointConfig,omitempty"`
	RelationalDatabaseSourceType *shared.RelationalDatabaseSourceTypeEnum `json:"relationalDatabaseSourceType,omitempty"`
}

// UpdateDataSourceRequestBodyTypeEnum - The new data source type.
type UpdateDataSourceRequestBodyTypeEnum string

const (
	UpdateDataSourceRequestBodyTypeEnumAwsLambda               UpdateDataSourceRequestBodyTypeEnum = "AWS_LAMBDA"
	UpdateDataSourceRequestBodyTypeEnumAmazonDynamodb          UpdateDataSourceRequestBodyTypeEnum = "AMAZON_DYNAMODB"
	UpdateDataSourceRequestBodyTypeEnumAmazonElasticsearch     UpdateDataSourceRequestBodyTypeEnum = "AMAZON_ELASTICSEARCH"
	UpdateDataSourceRequestBodyTypeEnumNone                    UpdateDataSourceRequestBodyTypeEnum = "NONE"
	UpdateDataSourceRequestBodyTypeEnumHTTP                    UpdateDataSourceRequestBodyTypeEnum = "HTTP"
	UpdateDataSourceRequestBodyTypeEnumRelationalDatabase      UpdateDataSourceRequestBodyTypeEnum = "RELATIONAL_DATABASE"
	UpdateDataSourceRequestBodyTypeEnumAmazonOpensearchService UpdateDataSourceRequestBodyTypeEnum = "AMAZON_OPENSEARCH_SERVICE"
	UpdateDataSourceRequestBodyTypeEnumAmazonEventbridge       UpdateDataSourceRequestBodyTypeEnum = "AMAZON_EVENTBRIDGE"
)

func (e *UpdateDataSourceRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS_LAMBDA":
		fallthrough
	case "AMAZON_DYNAMODB":
		fallthrough
	case "AMAZON_ELASTICSEARCH":
		fallthrough
	case "NONE":
		fallthrough
	case "HTTP":
		fallthrough
	case "RELATIONAL_DATABASE":
		fallthrough
	case "AMAZON_OPENSEARCH_SERVICE":
		fallthrough
	case "AMAZON_EVENTBRIDGE":
		*e = UpdateDataSourceRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateDataSourceRequestBodyTypeEnum: %s", s)
	}
}

type UpdateDataSourceRequestBody struct {
	// The new description for the data source.
	Description *string `json:"description,omitempty"`
	// Describes an Amazon DynamoDB data source configuration.
	DynamodbConfig *UpdateDataSourceRequestBodyDynamodbConfig `json:"dynamodbConfig,omitempty"`
	// <p>Describes an OpenSearch data source configuration.</p> <p>As of September 2021, Amazon Elasticsearch service is Amazon OpenSearch Service. This configuration is deprecated. For new data sources, use <a>OpenSearchServiceDataSourceConfig</a> to specify an OpenSearch data source.</p>
	ElasticsearchConfig *UpdateDataSourceRequestBodyElasticsearchConfig `json:"elasticsearchConfig,omitempty"`
	// Describes an Amazon EventBridge bus data source configuration.
	EventBridgeConfig *UpdateDataSourceRequestBodyEventBridgeConfig `json:"eventBridgeConfig,omitempty"`
	// Describes an HTTP data source configuration.
	HTTPConfig *UpdateDataSourceRequestBodyHTTPConfig `json:"httpConfig,omitempty"`
	// Describes an Lambda data source configuration.
	LambdaConfig *UpdateDataSourceRequestBodyLambdaConfig `json:"lambdaConfig,omitempty"`
	// Describes an OpenSearch data source configuration.
	OpenSearchServiceConfig *UpdateDataSourceRequestBodyOpenSearchServiceConfig `json:"openSearchServiceConfig,omitempty"`
	// Describes a relational database data source configuration.
	RelationalDatabaseConfig *UpdateDataSourceRequestBodyRelationalDatabaseConfig `json:"relationalDatabaseConfig,omitempty"`
	// The new service role Amazon Resource Name (ARN) for the data source.
	ServiceRoleArn *string `json:"serviceRoleArn,omitempty"`
	// The new data source type.
	Type UpdateDataSourceRequestBodyTypeEnum `json:"type"`
}

type UpdateDataSourceRequest struct {
	RequestBody       UpdateDataSourceRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The API ID.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The new name for the data source.
	Name string `pathParam:"style=simple,explode=false,name=name"`
}

type UpdateDataSourceResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalFailureException
	InternalFailureException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
	// Success
	UpdateDataSourceResponse *shared.UpdateDataSourceResponse
}
