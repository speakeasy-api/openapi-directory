/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetLensVersionDifferenceOutput - Success
 */
public class GetLensVersionDifferenceOutput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BaseLensVersion")
    public String baseLensVersion;
    public GetLensVersionDifferenceOutput withBaseLensVersion(String baseLensVersion) {
        this.baseLensVersion = baseLensVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LatestLensVersion")
    public String latestLensVersion;
    public GetLensVersionDifferenceOutput withLatestLensVersion(String latestLensVersion) {
        this.latestLensVersion = latestLensVersion;
        return this;
    }
    
    /**
     * &lt;p&gt;The alias of the lens.&lt;/p&gt; &lt;p&gt;For Amazon Web Services official lenses, this is either the lens alias, such as &lt;code&gt;serverless&lt;/code&gt;, or the lens ARN, such as &lt;code&gt;arn:aws:wellarchitected:us-west-2::lens/serverless&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For custom lenses, this is the lens ARN, such as &lt;code&gt;arn:aws:wellarchitected:us-east-1:123456789012:lens/my-lens&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;Each lens is identified by its &lt;a&gt;LensSummary$LensAlias&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensAlias")
    public String lensAlias;
    public GetLensVersionDifferenceOutput withLensAlias(String lensAlias) {
        this.lensAlias = lensAlias;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensArn")
    public String lensArn;
    public GetLensVersionDifferenceOutput withLensArn(String lensArn) {
        this.lensArn = lensArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetLensVersion")
    public String targetLensVersion;
    public GetLensVersionDifferenceOutput withTargetLensVersion(String targetLensVersion) {
        this.targetLensVersion = targetLensVersion;
        return this;
    }
    
    /**
     * The differences between the base and latest versions of the lens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VersionDifferences")
    public VersionDifferences versionDifferences;
    public GetLensVersionDifferenceOutput withVersionDifferences(VersionDifferences versionDifferences) {
        this.versionDifferences = versionDifferences;
        return this;
    }
    
}
