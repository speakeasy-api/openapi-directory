// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETAcceptReservedNodeExchangeActionEnum
type GETAcceptReservedNodeExchangeActionEnum string

const (
	GETAcceptReservedNodeExchangeActionEnumAcceptReservedNodeExchange GETAcceptReservedNodeExchangeActionEnum = "AcceptReservedNodeExchange"
)

func (e *GETAcceptReservedNodeExchangeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AcceptReservedNodeExchange":
		*e = GETAcceptReservedNodeExchangeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAcceptReservedNodeExchangeActionEnum: %s", s)
	}
}

// GETAcceptReservedNodeExchangeVersionEnum
type GETAcceptReservedNodeExchangeVersionEnum string

const (
	GETAcceptReservedNodeExchangeVersionEnumTwoThousandAndTwelve1201 GETAcceptReservedNodeExchangeVersionEnum = "2012-12-01"
)

func (e *GETAcceptReservedNodeExchangeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETAcceptReservedNodeExchangeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETAcceptReservedNodeExchangeVersionEnum: %s", s)
	}
}

type GETAcceptReservedNodeExchangeRequest struct {
	Action GETAcceptReservedNodeExchangeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A string representing the node identifier of the DC1 Reserved Node to be exchanged.
	ReservedNodeID string `queryParam:"style=form,explode=true,name=ReservedNodeId"`
	// The unique identifier of the DC2 Reserved Node offering to be used for the exchange. You can obtain the value for the parameter by calling <a>GetReservedNodeExchangeOfferings</a>
	TargetReservedNodeOfferingID string                                   `queryParam:"style=form,explode=true,name=TargetReservedNodeOfferingId"`
	Version                      GETAcceptReservedNodeExchangeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm                *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETAcceptReservedNodeExchangeResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
