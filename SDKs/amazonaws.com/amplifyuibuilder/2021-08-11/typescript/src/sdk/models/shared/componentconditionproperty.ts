/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComponentProperty } from "./componentproperty";
import { Expose, Type } from "class-transformer";

/**
 * Represents a conditional expression to set a component property. Use <code>ComponentConditionProperty</code> to set a property to different values conditionally, based on the value of another property.
 */
export class ComponentConditionProperty extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "else" })
  @Type(() => ComponentProperty)
  else?: ComponentProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  field?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operand" })
  operand?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operandType" })
  operandType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operator" })
  operator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "property" })
  property?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "then" })
  @Type(() => ComponentProperty)
  then?: ComponentProperty;
}
