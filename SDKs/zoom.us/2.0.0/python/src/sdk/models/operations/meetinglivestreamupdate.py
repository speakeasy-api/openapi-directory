"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class MeetingLiveStreamUpdateSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingLiveStreamUpdateApplicationJSON:
    r"""Meeting live stream."""
    
    stream_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stream_key') }})
    r"""Stream name and key."""  
    stream_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stream_url') }})
    r"""Streaming URL."""  
    page_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_url'), 'exclude': lambda f: f is None }})
    r"""The livestream page URL."""  
    

@dataclasses.dataclass
class MeetingLiveStreamUpdateRequest:
    
    meeting_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'meetingId', 'style': 'simple', 'explode': False }})
    r"""The meeting ID in **long** format. The data type of this field is \\"long\\"(represented as int64 in JSON).
    
    While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
    """  
    request_body: MeetingLiveStreamUpdateApplicationJSON = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Meeting"""  
    

@dataclasses.dataclass
class MeetingLiveStreamUpdateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    