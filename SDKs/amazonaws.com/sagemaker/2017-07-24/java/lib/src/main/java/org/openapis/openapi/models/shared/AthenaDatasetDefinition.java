/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AthenaDatasetDefinition - Configuration for Athena Dataset Definition input.
 */
public class AthenaDatasetDefinition {
    /**
     * The name of the data catalog used in Athena query execution.
     */
    @JsonProperty("Catalog")
    public String catalog;

    public AthenaDatasetDefinition withCatalog(String catalog) {
        this.catalog = catalog;
        return this;
    }
    
    /**
     * The name of the database used in the Athena query execution.
     */
    @JsonProperty("Database")
    public String database;

    public AthenaDatasetDefinition withDatabase(String database) {
        this.database = database;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKeyId")
    public String kmsKeyId;

    public AthenaDatasetDefinition withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    /**
     * The compression used for Athena query results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputCompression")
    public AthenaResultCompressionTypeEnum outputCompression;

    public AthenaDatasetDefinition withOutputCompression(AthenaResultCompressionTypeEnum outputCompression) {
        this.outputCompression = outputCompression;
        return this;
    }
    
    /**
     * The data storage format for Athena query results.
     */
    @JsonProperty("OutputFormat")
    public AthenaResultFormatEnum outputFormat;

    public AthenaDatasetDefinition withOutputFormat(AthenaResultFormatEnum outputFormat) {
        this.outputFormat = outputFormat;
        return this;
    }
    
    @JsonProperty("OutputS3Uri")
    public String outputS3Uri;

    public AthenaDatasetDefinition withOutputS3Uri(String outputS3Uri) {
        this.outputS3Uri = outputS3Uri;
        return this;
    }
    
    /**
     * The SQL query statements, to be executed.
     */
    @JsonProperty("QueryString")
    public String queryString;

    public AthenaDatasetDefinition withQueryString(String queryString) {
        this.queryString = queryString;
        return this;
    }
    
    /**
     * The name of the workgroup in which the Athena query is being started.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkGroup")
    public String workGroup;

    public AthenaDatasetDefinition withWorkGroup(String workGroup) {
        this.workGroup = workGroup;
        return this;
    }
    
    public AthenaDatasetDefinition(@JsonProperty("Catalog") String catalog, @JsonProperty("Database") String database, @JsonProperty("OutputFormat") AthenaResultFormatEnum outputFormat, @JsonProperty("OutputS3Uri") String outputS3Uri, @JsonProperty("QueryString") String queryString) {
        this.catalog = catalog;
        this.database = database;
        this.outputFormat = outputFormat;
        this.outputS3Uri = outputS3Uri;
        this.queryString = queryString;
  }
}
