/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class StorageObjectAccessControlsPatchRequest {
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.ObjectAccessControl objectAccessControl;

    public StorageObjectAccessControlsPatchRequest withObjectAccessControl(org.openapis.openapi.models.shared.ObjectAccessControl objectAccessControl) {
        this.objectAccessControl = objectAccessControl;
        return this;
    }
    
    /**
     * Data format for the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public StorageObjectAccessControlsPatchRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * Name of a bucket.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=bucket")
    public String bucket;

    public StorageObjectAccessControlsPatchRequest withBucket(String bucket) {
        this.bucket = bucket;
        return this;
    }
    
    /**
     * The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=entity")
    public String entity;

    public StorageObjectAccessControlsPatchRequest withEntity(String entity) {
        this.entity = entity;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public StorageObjectAccessControlsPatchRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * If present, selects a specific revision of this object (as opposed to the latest version, the default).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=generation")
    public String generation;

    public StorageObjectAccessControlsPatchRequest withGeneration(String generation) {
        this.generation = generation;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public StorageObjectAccessControlsPatchRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public StorageObjectAccessControlsPatchRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=object")
    public String object;

    public StorageObjectAccessControlsPatchRequest withObject(String object) {
        this.object = object;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public StorageObjectAccessControlsPatchRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public StorageObjectAccessControlsPatchRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "media", "multipart", "resumable").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;

    public StorageObjectAccessControlsPatchRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Deprecated. Please use quotaUser instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userIp")
    public String userIp;

    public StorageObjectAccessControlsPatchRequest withUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }
    
    /**
     * The project to be billed for this request. Required for Requester Pays buckets.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userProject")
    public String userProject;

    public StorageObjectAccessControlsPatchRequest withUserProject(String userProject) {
        this.userProject = userProject;
        return this;
    }
    
    public StorageObjectAccessControlsPatchRequest(@JsonProperty("bucket") String bucket, @JsonProperty("entity") String entity, @JsonProperty("object") String object) {
        this.bucket = bucket;
        this.entity = entity;
        this.object = object;
  }
}
