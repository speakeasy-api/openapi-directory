// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BotRecommendationStatusEnum string

const (
	BotRecommendationStatusEnumProcessing  BotRecommendationStatusEnum = "Processing"
	BotRecommendationStatusEnumDeleting    BotRecommendationStatusEnum = "Deleting"
	BotRecommendationStatusEnumDeleted     BotRecommendationStatusEnum = "Deleted"
	BotRecommendationStatusEnumDownloading BotRecommendationStatusEnum = "Downloading"
	BotRecommendationStatusEnumUpdating    BotRecommendationStatusEnum = "Updating"
	BotRecommendationStatusEnumAvailable   BotRecommendationStatusEnum = "Available"
	BotRecommendationStatusEnumFailed      BotRecommendationStatusEnum = "Failed"
	BotRecommendationStatusEnumStopping    BotRecommendationStatusEnum = "Stopping"
	BotRecommendationStatusEnumStopped     BotRecommendationStatusEnum = "Stopped"
)

func (e *BotRecommendationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processing":
		fallthrough
	case "Deleting":
		fallthrough
	case "Deleted":
		fallthrough
	case "Downloading":
		fallthrough
	case "Updating":
		fallthrough
	case "Available":
		fallthrough
	case "Failed":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		*e = BotRecommendationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BotRecommendationStatusEnum: %s", s)
	}
}
