// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// GetStageResponseAccessLogSettings - Settings for logging access in this stage.
type GetStageResponseAccessLogSettings struct {
	DestinationArn *string `json:"DestinationArn,omitempty"`
	Format         *string `json:"Format,omitempty"`
}

// GetStageResponseDefaultRouteSettingsLoggingLevelEnum - Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.
type GetStageResponseDefaultRouteSettingsLoggingLevelEnum string

const (
	GetStageResponseDefaultRouteSettingsLoggingLevelEnumError GetStageResponseDefaultRouteSettingsLoggingLevelEnum = "ERROR"
	GetStageResponseDefaultRouteSettingsLoggingLevelEnumInfo  GetStageResponseDefaultRouteSettingsLoggingLevelEnum = "INFO"
	GetStageResponseDefaultRouteSettingsLoggingLevelEnumOff   GetStageResponseDefaultRouteSettingsLoggingLevelEnum = "OFF"
)

func (e GetStageResponseDefaultRouteSettingsLoggingLevelEnum) ToPointer() *GetStageResponseDefaultRouteSettingsLoggingLevelEnum {
	return &e
}

func (e *GetStageResponseDefaultRouteSettingsLoggingLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR":
		fallthrough
	case "INFO":
		fallthrough
	case "OFF":
		*e = GetStageResponseDefaultRouteSettingsLoggingLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetStageResponseDefaultRouteSettingsLoggingLevelEnum: %v", v)
	}
}

// GetStageResponseDefaultRouteSettings - Default route settings for the stage.
type GetStageResponseDefaultRouteSettings struct {
	DataTraceEnabled       *bool                                                 `json:"DataTraceEnabled,omitempty"`
	DetailedMetricsEnabled *bool                                                 `json:"DetailedMetricsEnabled,omitempty"`
	LoggingLevel           *GetStageResponseDefaultRouteSettingsLoggingLevelEnum `json:"LoggingLevel,omitempty"`
	ThrottlingBurstLimit   *int64                                                `json:"ThrottlingBurstLimit,omitempty"`
	ThrottlingRateLimit    *float64                                              `json:"ThrottlingRateLimit,omitempty"`
}

// GetStageResponse - Success
type GetStageResponse struct {
	AccessLogSettings           *GetStageResponseAccessLogSettings    `json:"AccessLogSettings,omitempty"`
	APIGatewayManaged           *bool                                 `json:"ApiGatewayManaged,omitempty"`
	AutoDeploy                  *bool                                 `json:"AutoDeploy,omitempty"`
	ClientCertificateID         *string                               `json:"ClientCertificateId,omitempty"`
	CreatedDate                 *time.Time                            `json:"CreatedDate,omitempty"`
	DefaultRouteSettings        *GetStageResponseDefaultRouteSettings `json:"DefaultRouteSettings,omitempty"`
	DeploymentID                *string                               `json:"DeploymentId,omitempty"`
	Description                 *string                               `json:"Description,omitempty"`
	LastDeploymentStatusMessage *string                               `json:"LastDeploymentStatusMessage,omitempty"`
	LastUpdatedDate             *time.Time                            `json:"LastUpdatedDate,omitempty"`
	RouteSettings               map[string]RouteSettings              `json:"RouteSettings,omitempty"`
	StageName                   *string                               `json:"StageName,omitempty"`
	StageVariables              map[string]string                     `json:"StageVariables,omitempty"`
	Tags                        map[string]string                     `json:"Tags,omitempty"`
}
