/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetNamespacesRepositoriesImagesSummaryRequest extends SpeakeasyBase {
  /**
   * Sets the time from which an image must have been pushed or pulled to
   *
   * @remarks
   * be counted as active.
   *
   * Defaults to 1 month before the current time.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=active_from",
  })
  activeFrom?: string;

  /**
   * Namespace of the repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=namespace",
  })
  namespace: string;

  /**
   * Name of the repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repository",
  })
  repository: string;
}

export class GetNamespacesRepositoriesImagesSummaryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized - user does not have read access to the namespace
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getNamespaceRepositoryImagesSummaryResponse?: shared.GetNamespaceRepositoryImagesSummaryResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
