/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { PersonResponse } from "./personresponse";
import { Expose, Transform } from "class-transformer";

/**
 * If not successful, returns BatchUpdateContactsErrorDetails, a list of errors corresponding to each contact. The response to a request to update a batch of contacts.
 */
export class BatchUpdateContactsResponse extends SpeakeasyBase {
  /**
   * A map of resource names to the contacts that were updated, unless the request `read_mask` is empty.
   */
  @SpeakeasyMetadata({ elemType: PersonResponse })
  @Expose({ name: "updateResult" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, PersonResponse> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], PersonResponse);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  updateResult?: Record<string, PersonResponse>;
}
