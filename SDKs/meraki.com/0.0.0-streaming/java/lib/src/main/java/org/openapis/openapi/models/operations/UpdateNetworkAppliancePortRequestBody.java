/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNetworkAppliancePortRequestBody {
    /**
     * The name of the policy. Only applicable to Access ports. Valid values are: 'open', '8021x-radius', 'mac-radius', 'hybris-radius' for MX64 or Z3 or any MX supporting the per port authentication feature. Otherwise, 'open' is the only valid value and 'open' is the default value if the field is missing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessPolicy")
    public String accessPolicy;
    public UpdateNetworkAppliancePortRequestBody withAccessPolicy(String accessPolicy) {
        this.accessPolicy = accessPolicy;
        return this;
    }
    
    /**
     * Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedVlans")
    public String allowedVlans;
    public UpdateNetworkAppliancePortRequestBody withAllowedVlans(String allowedVlans) {
        this.allowedVlans = allowedVlans;
        return this;
    }
    
    /**
     * Trunk port can Drop all Untagged traffic. When true, no VLAN is required. Access ports cannot have dropUntaggedTraffic set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dropUntaggedTraffic")
    public Boolean dropUntaggedTraffic;
    public UpdateNetworkAppliancePortRequestBody withDropUntaggedTraffic(Boolean dropUntaggedTraffic) {
        this.dropUntaggedTraffic = dropUntaggedTraffic;
        return this;
    }
    
    /**
     * The status of the port
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public UpdateNetworkAppliancePortRequestBody withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The type of the port: 'access' or 'trunk'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public UpdateNetworkAppliancePortRequestBody withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vlan")
    public Long vlan;
    public UpdateNetworkAppliancePortRequestBody withVlan(Long vlan) {
        this.vlan = vlan;
        return this;
    }
    
}
