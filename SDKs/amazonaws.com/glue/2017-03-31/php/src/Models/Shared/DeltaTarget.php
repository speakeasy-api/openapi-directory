<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DeltaTarget - Specifies a Delta data store to crawl one or more Delta tables.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DeltaTarget
{
	#[\JMS\Serializer\Annotation\SerializedName('ConnectionName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectionName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CreateNativeDeltaTable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $createNativeDeltaTable = null;
    
    /**
     * $deltaTables
     * 
     * @var ?array<string> $deltaTables
     */
	#[\JMS\Serializer\Annotation\SerializedName('DeltaTables')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $deltaTables = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('WriteManifest')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $writeManifest = null;
    
	public function __construct()
	{
		$this->connectionName = null;
		$this->createNativeDeltaTable = null;
		$this->deltaTables = null;
		$this->writeManifest = null;
	}
}
