<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GrpcRouteRetryPolicy - The specifications for retries.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GrpcRouteRetryPolicy
{
    /**
     * Specifies the allowed number of retries. This number must be > 0. If not specified, default to 1.
     * 
     * @var ?int $numRetries
     */
	#[\JMS\Serializer\Annotation\SerializedName('numRetries')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numRetries = null;
    
    /**
     * - connect-failure: Router will retry on failures connecting to Backend Services, for example due to connection timeouts. - refused-stream: Router will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry. - cancelled: Router will retry if the gRPC status code in the response header is set to cancelled - deadline-exceeded: Router will retry if the gRPC status code in the response header is set to deadline-exceeded - resource-exhausted: Router will retry if the gRPC status code in the response header is set to resource-exhausted - unavailable: Router will retry if the gRPC status code in the response header is set to unavailable
     * 
     * @var ?array<string> $retryConditions
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryConditions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $retryConditions = null;
    
	public function __construct()
	{
		$this->numRetries = null;
		$this->retryConditions = null;
	}
}
