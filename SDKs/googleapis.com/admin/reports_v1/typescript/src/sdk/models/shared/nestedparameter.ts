/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * JSON template for a parameter used in various reports.
 */
export class NestedParameter extends SpeakeasyBase {
  /**
   * Boolean value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  /**
   * Integer value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intValue" })
  intValue?: string;

  /**
   * Multiple boolean values of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multiBoolValue" })
  multiBoolValue?: boolean[];

  /**
   * Multiple integer values of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multiIntValue" })
  multiIntValue?: string[];

  /**
   * Multiple string values of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "multiValue" })
  multiValue?: string[];

  /**
   * The name of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * String value of the parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
