// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchProfileJSONSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PatchProfileApplicationJSONBirth struct {
	City    *string `json:"City,omitempty"`
	Country *string `json:"Country,omitempty"`
	Date    *string `json:"Date,omitempty"`
	ZipCode *string `json:"ZipCode,omitempty"`
}

type PatchProfileApplicationJSONIDFile struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
	Name             *string `json:"Name,omitempty"`
}

type PatchProfileApplicationJSONSexEnum string

const (
	PatchProfileApplicationJSONSexEnumMale   PatchProfileApplicationJSONSexEnum = "male"
	PatchProfileApplicationJSONSexEnumFemale PatchProfileApplicationJSONSexEnum = "female"
)

func (e PatchProfileApplicationJSONSexEnum) ToPointer() *PatchProfileApplicationJSONSexEnum {
	return &e
}

func (e *PatchProfileApplicationJSONSexEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "male":
		fallthrough
	case "female":
		*e = PatchProfileApplicationJSONSexEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchProfileApplicationJSONSexEnum: %v", v)
	}
}

// PatchProfileApplicationJSON - Profile to add
type PatchProfileApplicationJSON struct {
	Birth     *PatchProfileApplicationJSONBirth   `json:"Birth,omitempty"`
	BirthName *string                             `json:"BirthName,omitempty"`
	Email     *string                             `json:"Email,omitempty"`
	FirstName *string                             `json:"FirstName,omitempty"`
	IDFile    *PatchProfileApplicationJSONIDFile  `json:"IDFile,omitempty"`
	Name      *string                             `json:"Name,omitempty"`
	Sex       *PatchProfileApplicationJSONSexEnum `json:"Sex,omitempty"`
}

type PatchProfileJSONResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
