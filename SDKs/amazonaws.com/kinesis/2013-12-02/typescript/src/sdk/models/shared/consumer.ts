/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConsumerStatusEnum } from "./consumerstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * An object that represents the details of the consumer you registered. This type of object is returned by <a>RegisterStreamConsumer</a>.
 */
export class Consumer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConsumerARN" })
  consumerARN: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConsumerCreationTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  consumerCreationTimestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ConsumerName" })
  consumerName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConsumerStatus" })
  consumerStatus: ConsumerStatusEnum;
}
