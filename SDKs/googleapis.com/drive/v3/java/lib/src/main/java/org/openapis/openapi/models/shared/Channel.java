/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Channel - An notification channel used to watch for resource changes.
 */
public class Channel {
    /**
     * The address where notifications are delivered for this channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public Channel withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiration")
    public String expiration;

    public Channel withExpiration(String expiration) {
        this.expiration = expiration;
        return this;
    }
    
    /**
     * A UUID or similar unique string that identifies this channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Channel withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies this as a notification channel used to watch for changes to a resource, which is "api#channel".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Channel withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Additional parameters controlling delivery channel behavior. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("params")
    public java.util.Map<String, String> params;

    public Channel withParams(java.util.Map<String, String> params) {
        this.params = params;
        return this;
    }
    
    /**
     * A Boolean value to indicate whether payload is wanted. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payload")
    public Boolean payload;

    public Channel withPayload(Boolean payload) {
        this.payload = payload;
        return this;
    }
    
    /**
     * An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceId")
    public String resourceId;

    public Channel withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    /**
     * A version-specific identifier for the watched resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceUri")
    public String resourceUri;

    public Channel withResourceUri(String resourceUri) {
        this.resourceUri = resourceUri;
        return this;
    }
    
    /**
     * An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public String token;

    public Channel withToken(String token) {
        this.token = token;
        return this;
    }
    
    /**
     * The type of delivery mechanism used for this channel. Valid values are "web_hook" (or "webhook"). Both values refer to a channel where Http requests are used to deliver messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public Channel withType(String type) {
        this.type = type;
        return this;
    }
    
    public Channel(){}
}
