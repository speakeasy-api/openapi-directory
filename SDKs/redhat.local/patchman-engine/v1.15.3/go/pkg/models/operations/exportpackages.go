// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ExportPackagesSecurity struct {
	RhIdentity shared.SchemeRhIdentity `security:"scheme,type=apiKey,subtype=header"`
}

// ExportPackagesSortEnum - Sort field
type ExportPackagesSortEnum string

const (
	ExportPackagesSortEnumID               ExportPackagesSortEnum = "id"
	ExportPackagesSortEnumName             ExportPackagesSortEnum = "name"
	ExportPackagesSortEnumSystemsInstalled ExportPackagesSortEnum = "systems_installed"
	ExportPackagesSortEnumSystemsUpdatable ExportPackagesSortEnum = "systems_updatable"
)

func (e *ExportPackagesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "systems_installed":
		fallthrough
	case "systems_updatable":
		*e = ExportPackagesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportPackagesSortEnum: %s", s)
	}
}

type ExportPackagesQueryParams struct {
	// Filter
	FilterName *string `queryParam:"style=form,explode=true,name=filter[name]"`
	// Filter
	FilterSummary *string `queryParam:"style=form,explode=true,name=filter[summary]"`
	// Filter
	FilterSystemsInstalled *string `queryParam:"style=form,explode=true,name=filter[systems_installed]"`
	// Filter
	FilterSystemsUpdatable *string `queryParam:"style=form,explode=true,name=filter[systems_updatable]"`
	// Find matching text
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Sort field
	Sort *ExportPackagesSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type ExportPackagesRequest struct {
	QueryParams ExportPackagesQueryParams
	Security    ExportPackagesSecurity
}

type ExportPackagesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ControllersPackageItems []shared.ControllersPackageItem
}
