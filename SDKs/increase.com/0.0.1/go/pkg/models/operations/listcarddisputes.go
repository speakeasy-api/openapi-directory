// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListCardDisputesStatusInEnum string

const (
	ListCardDisputesStatusInEnumPendingReviewing ListCardDisputesStatusInEnum = "pending_reviewing"
	ListCardDisputesStatusInEnumAccepted         ListCardDisputesStatusInEnum = "accepted"
	ListCardDisputesStatusInEnumRejected         ListCardDisputesStatusInEnum = "rejected"
)

func (e *ListCardDisputesStatusInEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending_reviewing":
		fallthrough
	case "accepted":
		fallthrough
	case "rejected":
		*e = ListCardDisputesStatusInEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesStatusInEnum: %s", s)
	}
}

type ListCardDisputesRequest struct {
	CreatedAtAfter      *time.Time                     `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time                     `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time                     `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time                     `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string                        `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64                         `queryParam:"style=form,explode=true,name=limit"`
	StatusIn            []ListCardDisputesStatusInEnum `queryParam:"style=form,explode=true,name=status.in"`
}

type ListCardDisputesDefaultApplicationJSON13StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListCardDisputesDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListCardDisputesDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListCardDisputesDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON13TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON13TypeEnumRateLimitedError ListCardDisputesDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListCardDisputesDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListCardDisputesDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON13 struct {
	Detail     string                                             `json:"detail"`
	RetryAfter *int64                                             `json:"retry_after,omitempty"`
	Status     ListCardDisputesDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                             `json:"title"`
	Type       ListCardDisputesDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON12StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON12StatusEnumFourHundredAndThree ListCardDisputesDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListCardDisputesDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListCardDisputesDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON12TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON12TypeEnumPrivateFeatureError ListCardDisputesDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListCardDisputesDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListCardDisputesDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON12 struct {
	Detail string                                             `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON11StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON11StatusEnumFourHundredAndFour ListCardDisputesDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListCardDisputesDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListCardDisputesDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON11TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON11TypeEnumObjectNotFoundError ListCardDisputesDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListCardDisputesDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListCardDisputesDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON11 struct {
	Detail string                                             `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON10StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON10StatusEnumFourHundred ListCardDisputesDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListCardDisputesDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListCardDisputesDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON10TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON10TypeEnumMalformedRequestError ListCardDisputesDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListCardDisputesDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListCardDisputesDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON10 struct {
	Detail string                                             `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON9StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON9StatusEnumFourHundred ListCardDisputesDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListCardDisputesDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListCardDisputesDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON9TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON9TypeEnumInvalidParametersError ListCardDisputesDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListCardDisputesDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListCardDisputesDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                          `json:"errors,omitempty"`
	Status ListCardDisputesDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON8StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON8StatusEnumFourHundredAndNine ListCardDisputesDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListCardDisputesDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListCardDisputesDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON8TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON8TypeEnumInvalidOperationError ListCardDisputesDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListCardDisputesDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListCardDisputesDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON8 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON7StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON7StatusEnumFourHundredAndOne ListCardDisputesDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListCardDisputesDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListCardDisputesDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON7TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListCardDisputesDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListCardDisputesDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListCardDisputesDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON7 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON6StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON6StatusEnumFiveHundred ListCardDisputesDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListCardDisputesDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListCardDisputesDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON6TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON6TypeEnumInternalServerError ListCardDisputesDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListCardDisputesDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListCardDisputesDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON6 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON5StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON5StatusEnumFourHundredAndThree ListCardDisputesDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListCardDisputesDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListCardDisputesDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON5TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListCardDisputesDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListCardDisputesDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListCardDisputesDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON5 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON4StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListCardDisputesDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListCardDisputesDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListCardDisputesDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON4TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListCardDisputesDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListCardDisputesDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListCardDisputesDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON4 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON3StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON3StatusEnumFourHundredAndNine ListCardDisputesDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListCardDisputesDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListCardDisputesDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON3TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListCardDisputesDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListCardDisputesDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListCardDisputesDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON3 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON2StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON2StatusEnumFourHundredAndThree ListCardDisputesDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListCardDisputesDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListCardDisputesDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON2TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListCardDisputesDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListCardDisputesDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListCardDisputesDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON2 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListCardDisputesDefaultApplicationJSON1StatusEnum string

const (
	ListCardDisputesDefaultApplicationJSON1StatusEnumFourHundredAndFour ListCardDisputesDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListCardDisputesDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListCardDisputesDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON1TypeEnum string

const (
	ListCardDisputesDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListCardDisputesDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListCardDisputesDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListCardDisputesDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCardDisputesDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListCardDisputesDefaultApplicationJSON1 struct {
	Detail string                                            `json:"detail"`
	Status ListCardDisputesDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListCardDisputesDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListCardDisputesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card Dispute List
	CardDisputeList *shared.CardDisputeList
	// Error
	Error interface{}
}
