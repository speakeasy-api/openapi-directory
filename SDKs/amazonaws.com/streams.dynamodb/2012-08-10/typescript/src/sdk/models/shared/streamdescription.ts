/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { KeySchemaElement } from "./keyschemaelement";
import { Shard } from "./shard";
import { StreamStatusEnum } from "./streamstatusenum";
import { StreamViewTypeEnum } from "./streamviewtypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents all of the data describing a particular stream.
 */
export class StreamDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationRequestDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationRequestDateTime?: Date;

  @SpeakeasyMetadata({ elemType: KeySchemaElement })
  @Expose({ name: "KeySchema" })
  @Type(() => KeySchemaElement)
  keySchema?: KeySchemaElement[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastEvaluatedShardId" })
  lastEvaluatedShardId?: string;

  @SpeakeasyMetadata({ elemType: Shard })
  @Expose({ name: "Shards" })
  @Type(() => Shard)
  shards?: Shard[];

  @SpeakeasyMetadata()
  @Expose({ name: "StreamArn" })
  streamArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamLabel" })
  streamLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamStatus" })
  streamStatus?: StreamStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamViewType" })
  streamViewType?: StreamViewTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TableName" })
  tableName?: string;
}
