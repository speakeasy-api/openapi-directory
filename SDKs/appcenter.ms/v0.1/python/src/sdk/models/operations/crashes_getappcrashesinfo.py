"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class CrashesGetAppCrashesInfoSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class CrashesGetAppCrashesInfoRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrashesGetAppCrashesInfoDefaultApplicationJSON:
    r"""Error"""
    
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrashesGetAppCrashesInfo200ApplicationJSONFeatures:
    
    crash_download_raw: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crash_download_raw'), 'exclude': lambda f: f is None }})
    r"""App supports download of raw crashes"""  
    crashgroup_analytics_crashfreeusers: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crashgroup_analytics_crashfreeusers'), 'exclude': lambda f: f is None }})
    r"""App supports the 'crash free user' metric"""  
    crashgroup_analytics_impactedusers: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crashgroup_analytics_impactedusers'), 'exclude': lambda f: f is None }})
    r"""App supports the 'impacted users' metric"""  
    crashgroup_modify_annotation: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crashgroup_modify_annotation'), 'exclude': lambda f: f is None }})
    r"""App supports modification of crashgroup annotation"""  
    crashgroup_modify_status: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crashgroup_modify_status'), 'exclude': lambda f: f is None }})
    r"""App supports modification of crashgroup status"""  
    search: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search'), 'exclude': lambda f: f is None }})
    r"""App supports search API"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CrashesGetAppCrashesInfo200ApplicationJSON:
    r"""Success"""
    
    features: CrashesGetAppCrashesInfo200ApplicationJSONFeatures = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('features') }})  
    has_crashes: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_crashes') }})  
    

@dataclasses.dataclass
class CrashesGetAppCrashesInfoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    crashes_get_app_crashes_info_200_application_json_object: Optional[CrashesGetAppCrashesInfo200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    crashes_get_app_crashes_info_default_application_json_object: Optional[CrashesGetAppCrashesInfoDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    