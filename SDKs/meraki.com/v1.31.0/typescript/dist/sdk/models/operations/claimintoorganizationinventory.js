"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClaimIntoOrganizationInventoryResponse = exports.ClaimIntoOrganizationInventoryRequest = exports.ClaimIntoOrganizationInventoryRequestBody = exports.ClaimIntoOrganizationInventoryRequestBodyLicenses = exports.ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Co-term licensing only: either 'renew' or 'addDevices'. 'addDevices' will increase the license limit, while 'renew' will extend the amount of time until expiration. Defaults to 'addDevices'. All licenses must be claimed with the same mode, and at most one renewal can be claimed at a time. Does not apply to organizations using per-device licensing model.
 */
var ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum;
(function (ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum) {
    ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum["AddDevices"] = "addDevices";
    ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum["Renew"] = "renew";
})(ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum = exports.ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum || (exports.ClaimIntoOrganizationInventoryRequestBodyLicensesModeEnum = {}));
var ClaimIntoOrganizationInventoryRequestBodyLicenses = /** @class */ (function (_super) {
    __extends(ClaimIntoOrganizationInventoryRequestBodyLicenses, _super);
    function ClaimIntoOrganizationInventoryRequestBodyLicenses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], ClaimIntoOrganizationInventoryRequestBodyLicenses.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mode" }),
        __metadata("design:type", String)
    ], ClaimIntoOrganizationInventoryRequestBodyLicenses.prototype, "mode", void 0);
    return ClaimIntoOrganizationInventoryRequestBodyLicenses;
}(utils_1.SpeakeasyBase));
exports.ClaimIntoOrganizationInventoryRequestBodyLicenses = ClaimIntoOrganizationInventoryRequestBodyLicenses;
var ClaimIntoOrganizationInventoryRequestBody = /** @class */ (function (_super) {
    __extends(ClaimIntoOrganizationInventoryRequestBody, _super);
    function ClaimIntoOrganizationInventoryRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ClaimIntoOrganizationInventoryRequestBodyLicenses,
        }),
        (0, class_transformer_1.Expose)({ name: "licenses" }),
        (0, class_transformer_1.Type)(function () { return ClaimIntoOrganizationInventoryRequestBodyLicenses; }),
        __metadata("design:type", Array)
    ], ClaimIntoOrganizationInventoryRequestBody.prototype, "licenses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "orders" }),
        __metadata("design:type", Array)
    ], ClaimIntoOrganizationInventoryRequestBody.prototype, "orders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serials" }),
        __metadata("design:type", Array)
    ], ClaimIntoOrganizationInventoryRequestBody.prototype, "serials", void 0);
    return ClaimIntoOrganizationInventoryRequestBody;
}(utils_1.SpeakeasyBase));
exports.ClaimIntoOrganizationInventoryRequestBody = ClaimIntoOrganizationInventoryRequestBody;
var ClaimIntoOrganizationInventoryRequest = /** @class */ (function (_super) {
    __extends(ClaimIntoOrganizationInventoryRequest, _super);
    function ClaimIntoOrganizationInventoryRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", ClaimIntoOrganizationInventoryRequestBody)
    ], ClaimIntoOrganizationInventoryRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=organizationId",
        }),
        __metadata("design:type", String)
    ], ClaimIntoOrganizationInventoryRequest.prototype, "organizationId", void 0);
    return ClaimIntoOrganizationInventoryRequest;
}(utils_1.SpeakeasyBase));
exports.ClaimIntoOrganizationInventoryRequest = ClaimIntoOrganizationInventoryRequest;
var ClaimIntoOrganizationInventoryResponse = /** @class */ (function (_super) {
    __extends(ClaimIntoOrganizationInventoryResponse, _super);
    function ClaimIntoOrganizationInventoryResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ClaimIntoOrganizationInventoryResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ClaimIntoOrganizationInventoryResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ClaimIntoOrganizationInventoryResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ClaimIntoOrganizationInventoryResponse.prototype, "claimIntoOrganizationInventory200ApplicationJSONObject", void 0);
    return ClaimIntoOrganizationInventoryResponse;
}(utils_1.SpeakeasyBase));
exports.ClaimIntoOrganizationInventoryResponse = ClaimIntoOrganizationInventoryResponse;
