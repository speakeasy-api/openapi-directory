/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateVpcEndpointConnectionNotificationQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateVpcEndpointConnectionNotificationActionEnum action;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withAction(GETCreateVpcEndpointConnectionNotificationActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html"&gt;How to ensure idempotency&lt;/a&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ClientToken")
    public String clientToken;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The endpoint events for which to receive notifications. Valid values are &lt;code&gt;Accept&lt;/code&gt;, &lt;code&gt;Connect&lt;/code&gt;, &lt;code&gt;Delete&lt;/code&gt;, and &lt;code&gt;Reject&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ConnectionEvents")
    public String[] connectionEvents;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withConnectionEvents(String[] connectionEvents) {
        this.connectionEvents = connectionEvents;
        return this;
    }
    
    /**
     * The ARN of the SNS topic for the notifications.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ConnectionNotificationArn")
    public String connectionNotificationArn;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withConnectionNotificationArn(String connectionNotificationArn) {
        this.connectionNotificationArn = connectionNotificationArn;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The ID of the endpoint service.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ServiceId")
    public String serviceId;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withServiceId(String serviceId) {
        this.serviceId = serviceId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateVpcEndpointConnectionNotificationVersionEnum version;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withVersion(GETCreateVpcEndpointConnectionNotificationVersionEnum version) {
        this.version = version;
        return this;
    }
    
    /**
     * The ID of the endpoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=VpcEndpointId")
    public String vpcEndpointId;
    public GETCreateVpcEndpointConnectionNotificationQueryParams withVpcEndpointId(String vpcEndpointId) {
        this.vpcEndpointId = vpcEndpointId;
        return this;
    }
    
}
