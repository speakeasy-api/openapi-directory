// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUnfilteredPartitionMetadataXAmzTargetEnum
type GetUnfilteredPartitionMetadataXAmzTargetEnum string

const (
	GetUnfilteredPartitionMetadataXAmzTargetEnumAwsGlueGetUnfilteredPartitionMetadata GetUnfilteredPartitionMetadataXAmzTargetEnum = "AWSGlue.GetUnfilteredPartitionMetadata"
)

func (e GetUnfilteredPartitionMetadataXAmzTargetEnum) ToPointer() *GetUnfilteredPartitionMetadataXAmzTargetEnum {
	return &e
}

func (e *GetUnfilteredPartitionMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSGlue.GetUnfilteredPartitionMetadata":
		*e = GetUnfilteredPartitionMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUnfilteredPartitionMetadataXAmzTargetEnum: %v", v)
	}
}

type GetUnfilteredPartitionMetadataRequest struct {
	GetUnfilteredPartitionMetadataRequest shared.GetUnfilteredPartitionMetadataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            GetUnfilteredPartitionMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetUnfilteredPartitionMetadataResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// FederationSourceException
	FederationSourceException interface{}
	// FederationSourceRetryableException
	FederationSourceRetryableException interface{}
	// Success
	GetUnfilteredPartitionMetadataResponse *shared.GetUnfilteredPartitionMetadataResponse
	// GlueEncryptionException
	GlueEncryptionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// PermissionTypeMismatchException
	PermissionTypeMismatchException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
}
