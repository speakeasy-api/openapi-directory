// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceRequirementsRequestAcceleratorManufacturersEnum string

const (
	InstanceRequirementsRequestAcceleratorManufacturersEnumNvidia            InstanceRequirementsRequestAcceleratorManufacturersEnum = "nvidia"
	InstanceRequirementsRequestAcceleratorManufacturersEnumAmd               InstanceRequirementsRequestAcceleratorManufacturersEnum = "amd"
	InstanceRequirementsRequestAcceleratorManufacturersEnumAmazonWebServices InstanceRequirementsRequestAcceleratorManufacturersEnum = "amazon-web-services"
	InstanceRequirementsRequestAcceleratorManufacturersEnumXilinx            InstanceRequirementsRequestAcceleratorManufacturersEnum = "xilinx"
)

func (e *InstanceRequirementsRequestAcceleratorManufacturersEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "nvidia":
		fallthrough
	case "amd":
		fallthrough
	case "amazon-web-services":
		fallthrough
	case "xilinx":
		*e = InstanceRequirementsRequestAcceleratorManufacturersEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsRequestAcceleratorManufacturersEnum: %s", s)
	}
}

type InstanceRequirementsRequestAcceleratorNamesEnum string

const (
	InstanceRequirementsRequestAcceleratorNamesEnumA100          InstanceRequirementsRequestAcceleratorNamesEnum = "a100"
	InstanceRequirementsRequestAcceleratorNamesEnumV100          InstanceRequirementsRequestAcceleratorNamesEnum = "v100"
	InstanceRequirementsRequestAcceleratorNamesEnumK80           InstanceRequirementsRequestAcceleratorNamesEnum = "k80"
	InstanceRequirementsRequestAcceleratorNamesEnumT4            InstanceRequirementsRequestAcceleratorNamesEnum = "t4"
	InstanceRequirementsRequestAcceleratorNamesEnumM60           InstanceRequirementsRequestAcceleratorNamesEnum = "m60"
	InstanceRequirementsRequestAcceleratorNamesEnumRadeonProV520 InstanceRequirementsRequestAcceleratorNamesEnum = "radeon-pro-v520"
	InstanceRequirementsRequestAcceleratorNamesEnumVu9p          InstanceRequirementsRequestAcceleratorNamesEnum = "vu9p"
	InstanceRequirementsRequestAcceleratorNamesEnumInferentia    InstanceRequirementsRequestAcceleratorNamesEnum = "inferentia"
	InstanceRequirementsRequestAcceleratorNamesEnumK520          InstanceRequirementsRequestAcceleratorNamesEnum = "k520"
)

func (e *InstanceRequirementsRequestAcceleratorNamesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "a100":
		fallthrough
	case "v100":
		fallthrough
	case "k80":
		fallthrough
	case "t4":
		fallthrough
	case "m60":
		fallthrough
	case "radeon-pro-v520":
		fallthrough
	case "vu9p":
		fallthrough
	case "inferentia":
		fallthrough
	case "k520":
		*e = InstanceRequirementsRequestAcceleratorNamesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsRequestAcceleratorNamesEnum: %s", s)
	}
}

type InstanceRequirementsRequestAcceleratorTypesEnum string

const (
	InstanceRequirementsRequestAcceleratorTypesEnumGpu       InstanceRequirementsRequestAcceleratorTypesEnum = "gpu"
	InstanceRequirementsRequestAcceleratorTypesEnumFpga      InstanceRequirementsRequestAcceleratorTypesEnum = "fpga"
	InstanceRequirementsRequestAcceleratorTypesEnumInference InstanceRequirementsRequestAcceleratorTypesEnum = "inference"
)

func (e *InstanceRequirementsRequestAcceleratorTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "gpu":
		fallthrough
	case "fpga":
		fallthrough
	case "inference":
		*e = InstanceRequirementsRequestAcceleratorTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsRequestAcceleratorTypesEnum: %s", s)
	}
}

type InstanceRequirementsRequestCPUManufacturersEnum string

const (
	InstanceRequirementsRequestCPUManufacturersEnumIntel             InstanceRequirementsRequestCPUManufacturersEnum = "intel"
	InstanceRequirementsRequestCPUManufacturersEnumAmd               InstanceRequirementsRequestCPUManufacturersEnum = "amd"
	InstanceRequirementsRequestCPUManufacturersEnumAmazonWebServices InstanceRequirementsRequestCPUManufacturersEnum = "amazon-web-services"
)

func (e *InstanceRequirementsRequestCPUManufacturersEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "intel":
		fallthrough
	case "amd":
		fallthrough
	case "amazon-web-services":
		*e = InstanceRequirementsRequestCPUManufacturersEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsRequestCPUManufacturersEnum: %s", s)
	}
}

type InstanceRequirementsRequestInstanceGenerationsEnum string

const (
	InstanceRequirementsRequestInstanceGenerationsEnumCurrent  InstanceRequirementsRequestInstanceGenerationsEnum = "current"
	InstanceRequirementsRequestInstanceGenerationsEnumPrevious InstanceRequirementsRequestInstanceGenerationsEnum = "previous"
)

func (e *InstanceRequirementsRequestInstanceGenerationsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "current":
		fallthrough
	case "previous":
		*e = InstanceRequirementsRequestInstanceGenerationsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsRequestInstanceGenerationsEnum: %s", s)
	}
}

type InstanceRequirementsRequestLocalStorageTypesEnum string

const (
	InstanceRequirementsRequestLocalStorageTypesEnumHdd InstanceRequirementsRequestLocalStorageTypesEnum = "hdd"
	InstanceRequirementsRequestLocalStorageTypesEnumSsd InstanceRequirementsRequestLocalStorageTypesEnum = "ssd"
)

func (e *InstanceRequirementsRequestLocalStorageTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "hdd":
		fallthrough
	case "ssd":
		*e = InstanceRequirementsRequestLocalStorageTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsRequestLocalStorageTypesEnum: %s", s)
	}
}

// InstanceRequirementsRequest - <p>The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes.</p> <p>When you specify multiple attributes, you get instance types that satisfy all of the specified attributes. If you specify multiple values for an attribute, you get instance types that satisfy any of the specified values.</p> <p>To limit the list of instance types from which Amazon EC2 can identify matching instance types, you can use one of the following parameters, but not both in the same request:</p> <ul> <li> <p> <code>AllowedInstanceTypes</code> - The instance types to include in the list. All other instance types are ignored, even if they match your specified attributes.</p> </li> <li> <p> <code>ExcludedInstanceTypes</code> - The instance types to exclude from the list, even if they match your specified attributes.</p> </li> </ul> <note> <p>You must specify <code>VCpuCount</code> and <code>MemoryMiB</code>. All other attributes are optional. Any unspecified optional attribute is set to its default.</p> </note> <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for EC2 Fleet</a>, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-fleet-attribute-based-instance-type-selection.html">Attribute-based instance type selection for Spot Fleet</a>, and <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-placement-score.html">Spot placement score</a> in the <i>Amazon EC2 User Guide</i>.</p>
type InstanceRequirementsRequest struct {
	AcceleratorCount                          *AcceleratorCountRequest
	AcceleratorManufacturers                  []InstanceRequirementsRequestAcceleratorManufacturersEnum
	AcceleratorNames                          []InstanceRequirementsRequestAcceleratorNamesEnum
	AcceleratorTotalMemoryMiB                 *AcceleratorTotalMemoryMiBRequest
	AcceleratorTypes                          []InstanceRequirementsRequestAcceleratorTypesEnum
	AllowedInstanceTypes                      []string
	BareMetal                                 *BareMetalEnum
	BaselineEbsBandwidthMbps                  *BaselineEbsBandwidthMbpsRequest
	BurstablePerformance                      *BurstablePerformanceEnum
	CPUManufacturers                          []InstanceRequirementsRequestCPUManufacturersEnum
	ExcludedInstanceTypes                     []string
	InstanceGenerations                       []InstanceRequirementsRequestInstanceGenerationsEnum
	LocalStorage                              *LocalStorageEnum
	LocalStorageTypes                         []InstanceRequirementsRequestLocalStorageTypesEnum
	MemoryGiBPerVCPU                          *MemoryGiBPerVCPURequest
	MemoryMiB                                 MemoryMiBRequest
	NetworkBandwidthGbps                      *NetworkBandwidthGbpsRequest
	NetworkInterfaceCount                     *NetworkInterfaceCountRequest
	OnDemandMaxPricePercentageOverLowestPrice *int64
	RequireHibernateSupport                   *bool
	SpotMaxPricePercentageOverLowestPrice     *int64
	TotalLocalStorageGB                       *TotalLocalStorageGBRequest
	VCPUCount                                 VCPUCountRangeRequest
}
