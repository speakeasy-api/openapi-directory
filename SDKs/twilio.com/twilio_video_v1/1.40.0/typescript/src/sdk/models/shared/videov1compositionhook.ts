/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompositionHookEnumFormatEnum } from "./compositionhookenumformatenum";
import { Expose, Transform } from "class-transformer";

/**
 * The HTTP method we should use to call `status_callback`. Can be `POST` or `GET` and defaults to `POST`.
 */
export enum VideoV1CompositionHookStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * Created
 */
export class VideoV1CompositionHook extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the CompositionHook resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * The array of track names to include in the compositions created by the composition hook. A composition triggered by the composition hook includes all audio sources specified in `audio_sources` except those specified in `audio_sources_excluded`. The track names in this property can include an asterisk as a wild card character, which matches zero or more characters in a track name. For example, `student*` includes tracks named `student` as well as `studentTeam`. Please, be aware that either video_layout or audio_sources have to be provided to get a valid creation request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audio_sources" })
  audioSources?: string[];

  /**
   * The array of track names to exclude from the compositions created by the composition hook. A composition triggered by the composition hook includes all audio sources specified in `audio_sources` except for those specified in `audio_sources_excluded`. The track names in this property can include an asterisk as a wild card character, which matches zero or more characters in a track name. For example, `student*` excludes `student` as well as `studentTeam`. This parameter can also be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audio_sources_excluded" })
  audioSourcesExcluded?: string[];

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * Whether the CompositionHook is active. When `true`, the CompositionHook is triggered for every completed Group Room on the account. When `false`, the CompositionHook is never triggered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format?: CompositionHookEnumFormatEnum;

  /**
   * The string that you assigned to describe the resource. Can be up to 100 characters long and must be unique within the account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * The dimensions of the video image in pixels expressed as columns (width) and rows (height). The string's format is `{width}x{height}`, such as `640x480`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolution" })
  resolution?: string;

  /**
   * The unique string that we created to identify the CompositionHook resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The URL we call using the `status_callback_method` to send status information to your application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback" })
  statusCallback?: string;

  /**
   * The HTTP method we should use to call `status_callback`. Can be `POST` or `GET` and defaults to `POST`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_callback_method" })
  statusCallbackMethod?: VideoV1CompositionHookStatusCallbackMethodEnum;

  /**
   * Whether intervals with no media are clipped, as specified in the POST request that created the CompositionHook resource. Compositions with `trim` enabled are shorter when the Room is created and no Participant joins for a while as well as if all the Participants leave the room and join later, because those gaps will be removed. See [Specifying Video Layouts](https://www.twilio.com/docs/video/api/compositions-resource#specifying-video-layouts) for more info.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trim" })
  trim?: boolean;

  /**
   * The absolute URL of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * A JSON object that describes the video layout of the composition in terms of regions as specified in the HTTP POST request that created the CompositionHook resource. See [POST Parameters](https://www.twilio.com/docs/video/api/compositions-resource#http-post-parameters) for more information. Please, be aware that either video_layout or audio_sources have to be provided to get a valid creation request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "video_layout" })
  videoLayout?: any;
}
