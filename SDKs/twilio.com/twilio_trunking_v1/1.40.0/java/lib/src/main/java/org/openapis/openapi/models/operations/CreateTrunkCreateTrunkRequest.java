/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CreateTrunkCreateTrunkRequest {
    /**
     * Whether Caller ID Name (CNAM) lookup should be enabled for the trunk. If enabled, all inbound calls to the SIP Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.
     */
    @SpeakeasyMetadata("form:name=CnamLookupEnabled")
    public Boolean cnamLookupEnabled;
    public CreateTrunkCreateTrunkRequest withCnamLookupEnabled(Boolean cnamLookupEnabled) {
        this.cnamLookupEnabled = cnamLookupEnabled;
        return this;
    }
    
    /**
     * The HTTP method we should use to call the `disaster_recovery_url`. Can be: `GET` or `POST`.
     */
    @SpeakeasyMetadata("form:name=DisasterRecoveryMethod")
    public CreateTrunkCreateTrunkRequestDisasterRecoveryMethodEnum disasterRecoveryMethod;
    public CreateTrunkCreateTrunkRequest withDisasterRecoveryMethod(CreateTrunkCreateTrunkRequestDisasterRecoveryMethodEnum disasterRecoveryMethod) {
        this.disasterRecoveryMethod = disasterRecoveryMethod;
        return this;
    }
    
    /**
     * The URL we should call using the `disaster_recovery_method` if an error occurs while sending SIP traffic towards the configured Origination URL. We retrieve TwiML from the URL and execute the instructions like any other normal TwiML call. See [Disaster Recovery](https://www.twilio.com/docs/sip-trunking#disaster-recovery) for more information.
     */
    @SpeakeasyMetadata("form:name=DisasterRecoveryUrl")
    public String disasterRecoveryUrl;
    public CreateTrunkCreateTrunkRequest withDisasterRecoveryUrl(String disasterRecoveryUrl) {
        this.disasterRecoveryUrl = disasterRecoveryUrl;
        return this;
    }
    
    /**
     * The unique address you reserve on Twilio to which you route your SIP traffic. Domain names can contain letters, digits, and `-` and must end with `pstn.twilio.com`. See [Termination Settings](https://www.twilio.com/docs/sip-trunking#termination) for more information.
     */
    @SpeakeasyMetadata("form:name=DomainName")
    public String domainName;
    public CreateTrunkCreateTrunkRequest withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     */
    @SpeakeasyMetadata("form:name=FriendlyName")
    public String friendlyName;
    public CreateTrunkCreateTrunkRequest withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * Whether Secure Trunking is enabled for the trunk. If enabled, all calls going through the trunk will be secure using SRTP for media and TLS for signaling. If disabled, then RTP will be used for media. See [Secure Trunking](https://www.twilio.com/docs/sip-trunking#securetrunking) for more information.
     */
    @SpeakeasyMetadata("form:name=Secure")
    public Boolean secure;
    public CreateTrunkCreateTrunkRequest withSecure(Boolean secure) {
        this.secure = secure;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=TransferCallerId")
    public org.openapis.openapi.models.shared.TrunkEnumTransferCallerIdEnum transferCallerId;
    public CreateTrunkCreateTrunkRequest withTransferCallerId(org.openapis.openapi.models.shared.TrunkEnumTransferCallerIdEnum transferCallerId) {
        this.transferCallerId = transferCallerId;
        return this;
    }
    
    @SpeakeasyMetadata("form:name=TransferMode")
    public org.openapis.openapi.models.shared.TrunkEnumTransferSettingEnum transferMode;
    public CreateTrunkCreateTrunkRequest withTransferMode(org.openapis.openapi.models.shared.TrunkEnumTransferSettingEnum transferMode) {
        this.transferMode = transferMode;
        return this;
    }
    
}
