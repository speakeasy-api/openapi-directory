"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSwitchSettingsResponse = exports.GetNetworkSwitchSettings200ApplicationJSON = exports.GetNetworkSwitchSettings200ApplicationJSONPowerExceptions = exports.GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum = exports.GetNetworkSwitchSettingsRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSwitchSettingsRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchSettingsRequest, _super);
    function GetNetworkSwitchSettingsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSwitchSettingsRequest.prototype, "networkId", void 0);
    return GetNetworkSwitchSettingsRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchSettingsRequest = GetNetworkSwitchSettingsRequest;
/**
 * Per switch exception (combined, redundant, useNetworkSetting)
 */
var GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum;
(function (GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum) {
    GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum["Combined"] = "combined";
    GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum["Redundant"] = "redundant";
    GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum["UseNetworkSetting"] = "useNetworkSetting";
})(GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum = exports.GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum || (exports.GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum = {}));
var GetNetworkSwitchSettings200ApplicationJSONPowerExceptions = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchSettings200ApplicationJSONPowerExceptions, _super);
    function GetNetworkSwitchSettings200ApplicationJSONPowerExceptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "powerType" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchSettings200ApplicationJSONPowerExceptions.prototype, "powerType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial" }),
        __metadata("design:type", String)
    ], GetNetworkSwitchSettings200ApplicationJSONPowerExceptions.prototype, "serial", void 0);
    return GetNetworkSwitchSettings200ApplicationJSONPowerExceptions;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchSettings200ApplicationJSONPowerExceptions = GetNetworkSwitchSettings200ApplicationJSONPowerExceptions;
/**
 * Successful operation
 */
var GetNetworkSwitchSettings200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchSettings200ApplicationJSON, _super);
    function GetNetworkSwitchSettings200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSwitchSettings200ApplicationJSONPowerExceptions,
        }),
        (0, class_transformer_1.Expose)({ name: "powerExceptions" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSwitchSettings200ApplicationJSONPowerExceptions; }),
        __metadata("design:type", Array)
    ], GetNetworkSwitchSettings200ApplicationJSON.prototype, "powerExceptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useCombinedPower" }),
        __metadata("design:type", Boolean)
    ], GetNetworkSwitchSettings200ApplicationJSON.prototype, "useCombinedPower", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "vlan" }),
        __metadata("design:type", Number)
    ], GetNetworkSwitchSettings200ApplicationJSON.prototype, "vlan", void 0);
    return GetNetworkSwitchSettings200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchSettings200ApplicationJSON = GetNetworkSwitchSettings200ApplicationJSON;
var GetNetworkSwitchSettingsResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSwitchSettingsResponse, _super);
    function GetNetworkSwitchSettingsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSwitchSettingsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSwitchSettingsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSwitchSettingsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetNetworkSwitchSettings200ApplicationJSON)
    ], GetNetworkSwitchSettingsResponse.prototype, "getNetworkSwitchSettings200ApplicationJSONObject", void 0);
    return GetNetworkSwitchSettingsResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSwitchSettingsResponse = GetNetworkSwitchSettingsResponse;
