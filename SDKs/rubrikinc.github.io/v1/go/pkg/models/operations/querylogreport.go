// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryLogReportSortByEnum - Specifies the attribute to use while sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
type QueryLogReportSortByEnum string

const (
	QueryLogReportSortByEnumEffectiveSLADomainName QueryLogReportSortByEnum = "effectiveSlaDomainName"
	QueryLogReportSortByEnumName                   QueryLogReportSortByEnum = "name"
	QueryLogReportSortByEnumLocation               QueryLogReportSortByEnum = "location"
	QueryLogReportSortByEnumDatabaseType           QueryLogReportSortByEnum = "databaseType"
	QueryLogReportSortByEnumLogBackupFrequency     QueryLogReportSortByEnum = "logBackupFrequency"
	QueryLogReportSortByEnumLastSnapshotTime       QueryLogReportSortByEnum = "lastSnapshotTime"
	QueryLogReportSortByEnumLatestRecoveryTime     QueryLogReportSortByEnum = "latestRecoveryTime"
	QueryLogReportSortByEnumLogBackupDelay         QueryLogReportSortByEnum = "logBackupDelay"
)

func (e QueryLogReportSortByEnum) ToPointer() *QueryLogReportSortByEnum {
	return &e
}

func (e *QueryLogReportSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "effectiveSlaDomainName":
		fallthrough
	case "name":
		fallthrough
	case "location":
		fallthrough
	case "databaseType":
		fallthrough
	case "logBackupFrequency":
		fallthrough
	case "lastSnapshotTime":
		fallthrough
	case "latestRecoveryTime":
		fallthrough
	case "logBackupDelay":
		*e = QueryLogReportSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLogReportSortByEnum: %v", v)
	}
}

// QueryLogReportSortOrderEnum - Sort order, either ascending or descending.
type QueryLogReportSortOrderEnum string

const (
	QueryLogReportSortOrderEnumAsc  QueryLogReportSortOrderEnum = "asc"
	QueryLogReportSortOrderEnumDesc QueryLogReportSortOrderEnum = "desc"
)

func (e QueryLogReportSortOrderEnum) ToPointer() *QueryLogReportSortOrderEnum {
	return &e
}

func (e *QueryLogReportSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryLogReportSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLogReportSortOrderEnum: %v", v)
	}
}

type QueryLogReportRequest struct {
	// Filter by the database type.
	DatabaseType *string `queryParam:"style=form,explode=true,name=database_type"`
	// Filter by effective SLA domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter by the database location.
	Location *string `queryParam:"style=form,explode=true,name=location"`
	// Filter by the database log backup delay in seconds, greater than this value.
	LogBackupDelay *int `queryParam:"style=form,explode=true,name=log_backup_delay"`
	// Filter by the database name substring.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Integer specifying the number of initial matches to ignore.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Specifies the attribute to use while sorting the summary information. Performs an ASCII sort using the specified attribute, in the order specified by sort_order.
	SortBy *QueryLogReportSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryLogReportSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryLogReportResponse struct {
	ContentType string
	// If the query was successful, Returns the array of DbLogReportSummary objects.
	DbLogReportSummaryListResponse *shared.DbLogReportSummaryListResponse
	StatusCode                     int
	RawResponse                    *http.Response
}
