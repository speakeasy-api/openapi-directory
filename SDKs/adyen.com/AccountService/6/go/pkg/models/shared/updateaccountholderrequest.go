// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UpdateAccountHolderRequestLegalEntityEnum - The legal entity type of the account holder. This determines the information that should be provided in the request.
//
// Possible values: **Business**, **Individual**, or **NonProfit**.
//
// * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
//
// * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
type UpdateAccountHolderRequestLegalEntityEnum string

const (
	UpdateAccountHolderRequestLegalEntityEnumBusiness      UpdateAccountHolderRequestLegalEntityEnum = "Business"
	UpdateAccountHolderRequestLegalEntityEnumIndividual    UpdateAccountHolderRequestLegalEntityEnum = "Individual"
	UpdateAccountHolderRequestLegalEntityEnumNonProfit     UpdateAccountHolderRequestLegalEntityEnum = "NonProfit"
	UpdateAccountHolderRequestLegalEntityEnumPartnership   UpdateAccountHolderRequestLegalEntityEnum = "Partnership"
	UpdateAccountHolderRequestLegalEntityEnumPublicCompany UpdateAccountHolderRequestLegalEntityEnum = "PublicCompany"
)

func (e UpdateAccountHolderRequestLegalEntityEnum) ToPointer() *UpdateAccountHolderRequestLegalEntityEnum {
	return &e
}

func (e *UpdateAccountHolderRequestLegalEntityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Business":
		fallthrough
	case "Individual":
		fallthrough
	case "NonProfit":
		fallthrough
	case "Partnership":
		fallthrough
	case "PublicCompany":
		*e = UpdateAccountHolderRequestLegalEntityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateAccountHolderRequestLegalEntityEnum: %v", v)
	}
}

type UpdateAccountHolderRequest struct {
	// The code of the Account Holder to be updated.
	AccountHolderCode    string                `json:"accountHolderCode"`
	AccountHolderDetails *AccountHolderDetails `json:"accountHolderDetails,omitempty"`
	// A description of the account holder, maximum 256 characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores `_`.
	Description *string `json:"description,omitempty"`
	// The legal entity type of the account holder. This determines the information that should be provided in the request.
	//
	// Possible values: **Business**, **Individual**, or **NonProfit**.
	//
	// * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
	//
	// * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
	LegalEntity *UpdateAccountHolderRequestLegalEntityEnum `json:"legalEntity,omitempty"`
	// The primary three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), to which the account holder should be updated.
	PrimaryCurrency *string `json:"primaryCurrency,omitempty"`
	// The processing tier to which the Account Holder should be updated.
	// >The processing tier can not be lowered through this request.
	//
	// >Required if accountHolderDetails are not provided.
	ProcessingTier *int `json:"processingTier,omitempty"`
	// The identifier of the profile that applies to this entity.
	VerificationProfile *string `json:"verificationProfile,omitempty"`
}
