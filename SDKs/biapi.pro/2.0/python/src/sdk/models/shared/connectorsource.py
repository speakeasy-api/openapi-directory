"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConnectorSource:
    r"""Successful GET on ConnectorSource resource"""
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the connector source"""  
    id_connector: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id_connector') }})
    r"""ID of the connector"""  
    id_weboob: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id_weboob') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the source"""  
    auth_mechanism: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_mechanism'), 'exclude': lambda f: f is None }})
    r"""Authentication mechanism to use"""  
    disabled: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disabled'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""This source is not used to synchronize the connection"""  
    disabled_capabilities: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disabled_capabilities'), 'exclude': lambda f: f is None }})
    r"""Comma separated list of capabilities disabled on this connector source"""  
    fallback: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fallback'), 'exclude': lambda f: f is None }})
    r"""Name of the source this fallback is for"""  
    priority: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority'), 'exclude': lambda f: f is None }})
    r"""The source priority order for the synchronization"""  
    stability: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stability'), 'exclude': lambda f: f is None }})
    r"""last known stability"""  
    