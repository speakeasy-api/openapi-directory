// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetNameAuthoritiesOutputFormatEnum - The format of the output.
type GetNameAuthoritiesOutputFormatEnum string

const (
	GetNameAuthoritiesOutputFormatEnumJSON GetNameAuthoritiesOutputFormatEnum = "json"
	GetNameAuthoritiesOutputFormatEnumXML  GetNameAuthoritiesOutputFormatEnum = "xml"
)

func (e GetNameAuthoritiesOutputFormatEnum) ToPointer() *GetNameAuthoritiesOutputFormatEnum {
	return &e
}

func (e *GetNameAuthoritiesOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = GetNameAuthoritiesOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNameAuthoritiesOutputFormatEnum: %v", v)
	}
}

type GetNameAuthoritiesRequest struct {
	// The format of the output.
	OutputFormat GetNameAuthoritiesOutputFormatEnum `queryParam:"style=form,explode=true,name=outputFormat"`
}

type GetNameAuthoritiesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
