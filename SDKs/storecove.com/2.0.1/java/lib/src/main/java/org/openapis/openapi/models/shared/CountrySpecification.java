/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CountrySpecification {
    /**
     * An ISO 3166-1 alpha-2 country code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")public CountryEnum country;
    public CountrySpecification withCountry(CountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     * The receiver of the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiver")public CountrySpecificationReceiver receiver;
    public CountrySpecification withReceiver(CountrySpecificationReceiver receiver) {
        this.receiver = receiver;
        return this;
    }
    
    /**
     * The region this country belongs to. Within this region exchanging invoices is well defined. Between regions some care needs to be taken and Storecove may help in automatically converting some items. Contact us for details of inter-regional document exchange.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")public CountrySpecificationRegionEnum region;
    public CountrySpecification withRegion(CountrySpecificationRegionEnum region) {
        this.region = region;
        return this;
    }
    
    /**
     * The sender of the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sender")public CountrySpecificationSender sender;
    public CountrySpecification withSender(CountrySpecificationSender sender) {
        this.sender = sender;
        return this;
    }
    
}
