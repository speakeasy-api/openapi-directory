"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import namedobject as shared_namedobject
from ..shared import relation as shared_relation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnnotationExtension:
    
    filler: Optional[shared_namedobject.NamedObject] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filler'), 'exclude': lambda f: f is None }})
    r"""Extension interpreted as OWL expression (r1 some r2 some .. some filler)."""  
    relation_chain: Optional[list[shared_relation.Relation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relation_chain'), 'exclude': lambda f: f is None }})
    r"""Relationship type. If more than one value, interpreted as chain"""  
    