/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AccountResponse - Successful response for `/api/vlm/account`
 */
public class AccountResponse {
    /**
     * Account name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public AccountResponse withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * Address of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;
    public AccountResponse withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Deprecated. Check appKeys object for all appKeys
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appKey")
    public AccountResponseAppKey appKey;
    public AccountResponse withAppKey(AccountResponseAppKey appKey) {
        this.appKey = appKey;
        return this;
    }
    
    /**
     * Array of application keys
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appKeys")
    public AppKeyItems[] appKeys;
    public AccountResponse withAppKeys(AppKeyItems[] appKeys) {
        this.appKeys = appKeys;
        return this;
    }
    
    /**
     * City of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public AccountResponse withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * CNPJ (Tax ID) of account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cnpj")
    public String cnpj;
    public AccountResponse withCnpj(String cnpj) {
        this.cnpj = cnpj;
        return this;
    }
    
    /**
     * Company name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyName")
    public String companyName;
    public AccountResponse withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Additional address of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complement")
    public String complement;
    public AccountResponse withComplement(String complement) {
        this.complement = complement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact")
    public AccountResponseContact contact;
    public AccountResponse withContact(AccountResponseContact contact) {
        this.contact = contact;
        return this;
    }
    
    /**
     * Country of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public AccountResponse withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The date when the account was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDate")
    public OffsetDateTime creationDate;
    public AccountResponse withCreationDate(OffsetDateTime creationDate) {
        this.creationDate = creationDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultUrl")
    public String defaultUrl;
    public AccountResponse withDefaultUrl(String defaultUrl) {
        this.defaultUrl = defaultUrl;
        return this;
    }
    
    /**
     * Neighborhood of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("district")
    public String district;
    public AccountResponse withDistrict(String district) {
        this.district = district;
        return this;
    }
    
    /**
     * If logo has been setup
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasLogo")
    public Boolean hasLogo;
    public AccountResponse withHasLogo(Boolean hasLogo) {
        this.hasLogo = hasLogo;
        return this;
    }
    
    /**
     * If it has a parent account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("haveParentAccount")
    public Boolean haveParentAccount;
    public AccountResponse withHaveParentAccount(Boolean haveParentAccount) {
        this.haveParentAccount = haveParentAccount;
        return this;
    }
    
    /**
     * Hosts of all stores
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hosts")
    public String[] hosts;
    public AccountResponse withHosts(String[] hosts) {
        this.hosts = hosts;
        return this;
    }
    
    /**
     * ID of the account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public AccountResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The date when the account was deactivated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("inactivationDate")
    public OffsetDateTime inactivationDate;
    public AccountResponse withInactivationDate(OffsetDateTime inactivationDate) {
        this.inactivationDate = inactivationDate;
        return this;
    }
    
    /**
     * If account is active or not
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isActive")
    public Boolean isActive;
    public AccountResponse withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * If it is in production
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isOperating")
    public Boolean isOperating;
    public AccountResponse withIsOperating(Boolean isOperating) {
        this.isOperating = isOperating;
        return this;
    }
    
    /**
     * Licenses of the account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("licenses")
    public LicenseItems[] licenses;
    public AccountResponse withLicenses(LicenseItems[] licenses) {
        this.licenses = licenses;
        return this;
    }
    
    /**
     * Filename of account logo
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logo")
    public String logo;
    public AccountResponse withLogo(String logo) {
        this.logo = logo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lv")
    public String lv;
    public AccountResponse withLv(String lv) {
        this.lv = lv;
        return this;
    }
    
    /**
     * Trading name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public AccountResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Number of the address of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;
    public AccountResponse withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The date when the account went into production
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("operationDate")
    public OffsetDateTime operationDate;
    public AccountResponse withOperationDate(OffsetDateTime operationDate) {
        this.operationDate = operationDate;
        return this;
    }
    
    /**
     * The ID of the parent account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentAccountId")
    public String parentAccountId;
    public AccountResponse withParentAccountId(String parentAccountId) {
        this.parentAccountId = parentAccountId;
        return this;
    }
    
    /**
     * The name of the parent account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentAccountName")
    public String parentAccountName;
    public AccountResponse withParentAccountName(String parentAccountName) {
        this.parentAccountName = parentAccountName;
        return this;
    }
    
    /**
     * Zip Code of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;
    public AccountResponse withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Array of objects representing a store
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sites")
    public SiteItems[] sites;
    public AccountResponse withSites(SiteItems[] sites) {
        this.sites = sites;
        return this;
    }
    
    /**
     * Object representing the sponsor user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sponsor")
    public AccountResponseSponsor sponsor;
    public AccountResponse withSponsor(AccountResponseSponsor sponsor) {
        this.sponsor = sponsor;
        return this;
    }
    
    /**
     * State/Province of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public AccountResponse withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * Telephone of contact
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("telephone")
    public String telephone;
    public AccountResponse withTelephone(String telephone) {
        this.telephone = telephone;
        return this;
    }
    
    /**
     * Trading name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tradingName")
    public String tradingName;
    public AccountResponse withTradingName(String tradingName) {
        this.tradingName = tradingName;
        return this;
    }
    
}
