/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ActionsListSelectedReposForOrgSecretRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Results per page (max 100)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * secret_name parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=secret_name",
  })
  secretName: string;
}

/**
 * Response
 */
export class ActionsListSelectedReposForOrgSecret200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.MinimalRepository })
  @Expose({ name: "repositories" })
  @Type(() => shared.MinimalRepository)
  repositories: shared.MinimalRepository[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class ActionsListSelectedReposForOrgSecretResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  actionsListSelectedReposForOrgSecret200ApplicationJSONObject?: ActionsListSelectedReposForOrgSecret200ApplicationJSON;
}
