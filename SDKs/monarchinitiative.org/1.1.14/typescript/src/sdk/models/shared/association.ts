/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnnotationExtension } from "./annotationextension";
import { BioObjectCore } from "./bioobjectcore";
import { EntityReference } from "./entityreference";
import { Graph } from "./graph";
import { RelationRef } from "./relationref";
import { Expose, Type } from "class-transformer";

export class Association extends SpeakeasyBase {
  /**
   * An indirect association is a join between two or more direct assocations, e.g. gene to disease via ortholog. We record the full set of associations as a graph object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evidence_graph" })
  @Type(() => Graph)
  evidenceGraph?: Graph;

  /**
   * Evidence types (ECO classes)
   */
  @SpeakeasyMetadata({ elemType: EntityReference })
  @Expose({ name: "evidence_types" })
  @Type(() => EntityReference)
  evidenceTypes?: EntityReference[];

  /**
   * Association/annotation unique ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * True if association is negated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "negated" })
  negated?: boolean;

  /**
   * Object (sensu RDF), aka target, e.g. HP:0000448, MP:0002109, DOID:14330
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  @Type(() => BioObjectCore)
  object: BioObjectCore;

  /**
   * Equivalent identifiers to object node
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object_eq" })
  objectEq?: string[];

  @SpeakeasyMetadata({ elemType: AnnotationExtension })
  @Expose({ name: "object_extensions" })
  @Type(() => AnnotationExtension)
  objectExtensions?: AnnotationExtension[];

  /**
   * Provider of association, e.g. Orphanet, ClinVar
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provided_by" })
  providedBy?: string[];

  /**
   * Publications supporting association, extracted from evidence graph
   */
  @SpeakeasyMetadata({ elemType: EntityReference })
  @Expose({ name: "publications" })
  @Type(() => EntityReference)
  publications?: EntityReference[];

  /**
   * Qualifier on the association
   */
  @SpeakeasyMetadata()
  @Expose({ name: "qualifiers" })
  qualifiers?: string[];

  /**
   * Relationship type connecting subject and object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relation" })
  @Type(() => RelationRef)
  relation: RelationRef;

  /**
   * Objects mapped to a slim
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slim" })
  slim?: string[];

  /**
   * Subject of association (what it is about), e.g. ClinVar:nnn, MGI:1201606
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  @Type(() => BioObjectCore)
  subject: BioObjectCore;

  /**
   * Equivalent identifiers to subject node
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject_eq" })
  subjectEq?: string[];

  @SpeakeasyMetadata({ elemType: AnnotationExtension })
  @Expose({ name: "subject_extensions" })
  @Type(() => AnnotationExtension)
  subjectExtensions?: AnnotationExtension[];

  /**
   * Type of association, e.g. gene-phenotype
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
