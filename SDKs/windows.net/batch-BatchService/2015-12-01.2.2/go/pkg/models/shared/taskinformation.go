// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskInformationTaskStateEnum - Gets or sets the current state of the task.
type TaskInformationTaskStateEnum string

const (
	TaskInformationTaskStateEnumActive    TaskInformationTaskStateEnum = "active"
	TaskInformationTaskStateEnumPreparing TaskInformationTaskStateEnum = "preparing"
	TaskInformationTaskStateEnumRunning   TaskInformationTaskStateEnum = "running"
	TaskInformationTaskStateEnumCompleted TaskInformationTaskStateEnum = "completed"
)

func (e *TaskInformationTaskStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "preparing":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		*e = TaskInformationTaskStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskInformationTaskStateEnum: %s", s)
	}
}

// TaskInformation - Information about a task running on a compute node.
type TaskInformation struct {
	// Information about the execution of a task.
	ExecutionInfo *TaskExecutionInformation `json:"executionInfo,omitempty"`
	// Gets or sets the id of the job to which the task belongs.
	JobID *string `json:"jobId,omitempty"`
	// Gets or sets the id of the subtask if the task is a multi-instance task.
	SubtaskID *int `json:"subtaskId,omitempty"`
	// Gets or sets the id of the task.
	TaskID *string `json:"taskId,omitempty"`
	// Gets or sets the current state of the task.
	TaskState TaskInformationTaskStateEnum `json:"taskState"`
	// Gets or sets the URL of the task.
	TaskURL *string `json:"taskUrl,omitempty"`
}
