"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applicationhealthstatus_enum as shared_applicationhealthstatus_enum
from ..shared import applicationprogressstatus_enum as shared_applicationprogressstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApplicationAggregatedStatus:
    r"""Application aggregated status."""
    
    health_status: Optional[shared_applicationhealthstatus_enum.ApplicationHealthStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('healthStatus'), 'exclude': lambda f: f is None }})  
    last_update_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastUpdateDateTime'), 'exclude': lambda f: f is None }})  
    progress_status: Optional[shared_applicationprogressstatus_enum.ApplicationProgressStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('progressStatus'), 'exclude': lambda f: f is None }})  
    total_source_servers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalSourceServers'), 'exclude': lambda f: f is None }})  
    