// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListStackSetOperationsActionEnum
type POSTListStackSetOperationsActionEnum string

const (
	POSTListStackSetOperationsActionEnumListStackSetOperations POSTListStackSetOperationsActionEnum = "ListStackSetOperations"
)

func (e *POSTListStackSetOperationsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ListStackSetOperations":
		*e = POSTListStackSetOperationsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListStackSetOperationsActionEnum: %s", s)
	}
}

// POSTListStackSetOperationsVersionEnum
type POSTListStackSetOperationsVersionEnum string

const (
	POSTListStackSetOperationsVersionEnumTwoThousandAndTen0515 POSTListStackSetOperationsVersionEnum = "2010-05-15"
)

func (e *POSTListStackSetOperationsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = POSTListStackSetOperationsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListStackSetOperationsVersionEnum: %s", s)
	}
}

type POSTListStackSetOperationsRequest struct {
	Action POSTListStackSetOperationsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                               `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                                `request:"mediaType=text/xml"`
	Version           POSTListStackSetOperationsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListStackSetOperationsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
