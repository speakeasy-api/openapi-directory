// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateDevEnvironmentRequestBodyInstanceTypeEnum - The Amazon EC2 instace type to use for the Dev Environment.
type CreateDevEnvironmentRequestBodyInstanceTypeEnum string

const (
	CreateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Small  CreateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.small"
	CreateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Medium CreateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.medium"
	CreateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Large  CreateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.large"
	CreateDevEnvironmentRequestBodyInstanceTypeEnumDevStandard1Xlarge CreateDevEnvironmentRequestBodyInstanceTypeEnum = "dev.standard1.xlarge"
)

func (e *CreateDevEnvironmentRequestBodyInstanceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "dev.standard1.small":
		fallthrough
	case "dev.standard1.medium":
		fallthrough
	case "dev.standard1.large":
		fallthrough
	case "dev.standard1.xlarge":
		*e = CreateDevEnvironmentRequestBodyInstanceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDevEnvironmentRequestBodyInstanceTypeEnum: %s", s)
	}
}

// CreateDevEnvironmentRequestBodyPersistentStorage - Information about the configuration of persistent storage for a Dev Environment.
type CreateDevEnvironmentRequestBodyPersistentStorage struct {
	SizeInGiB *int64 `json:"sizeInGiB,omitempty"`
}

type CreateDevEnvironmentRequestBody struct {
	// The user-defined alias for a Dev Environment.
	Alias *string `json:"alias,omitempty"`
	// A user-specified idempotency token. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, the subsequent retries return the result from the original successful request and have no additional effect.
	ClientToken *string `json:"clientToken,omitempty"`
	// <p>Information about the integrated development environment (IDE) configured for a Dev Environment.</p> <note> <p>An IDE is required to create a Dev Environment. For Dev Environment creation, this field contains configuration information and must be provided.</p> </note>
	Ides []shared.IdeConfiguration `json:"ides,omitempty"`
	// The amount of time the Dev Environment will run without any activity detected before stopping, in minutes. Only whole integers are allowed. Dev Environments consume compute minutes when running.
	InactivityTimeoutMinutes *int64 `json:"inactivityTimeoutMinutes,omitempty"`
	// The Amazon EC2 instace type to use for the Dev Environment.
	InstanceType CreateDevEnvironmentRequestBodyInstanceTypeEnum `json:"instanceType"`
	// Information about the configuration of persistent storage for a Dev Environment.
	PersistentStorage CreateDevEnvironmentRequestBodyPersistentStorage `json:"persistentStorage"`
	// The source repository that contains the branch to clone into the Dev Environment.
	Repositories []shared.RepositoryInput `json:"repositories,omitempty"`
}

type CreateDevEnvironmentRequest struct {
	RequestBody CreateDevEnvironmentRequestBody `request:"mediaType=application/json"`
	// The name of the project in the space.
	ProjectName string `pathParam:"style=simple,explode=false,name=projectName"`
	// The name of the space.
	SpaceName string `pathParam:"style=simple,explode=false,name=spaceName"`
}

type CreateDevEnvironmentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateDevEnvironmentResponse *shared.CreateDevEnvironmentResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
