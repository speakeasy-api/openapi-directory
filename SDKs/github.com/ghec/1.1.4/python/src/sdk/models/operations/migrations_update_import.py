"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import basic_error as shared_basic_error
from ..shared import import_ as shared_import_
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MigrationsUpdateImportRequestBodyVcsEnum(str, Enum):
    r"""The type of version control system you are migrating from."""
    SUBVERSION = 'subversion'
    TFVC = 'tfvc'
    GIT = 'git'
    MERCURIAL = 'mercurial'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MigrationsUpdateImportRequestBody:
    
    tfvc_project: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tfvc_project'), 'exclude': lambda f: f is None }})
    r"""For a tfvc import, the name of the project that is being imported."""  
    vcs: Optional[MigrationsUpdateImportRequestBodyVcsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vcs'), 'exclude': lambda f: f is None }})
    r"""The type of version control system you are migrating from."""  
    vcs_password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vcs_password'), 'exclude': lambda f: f is None }})
    r"""The password to provide to the originating repository."""  
    vcs_username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vcs_username'), 'exclude': lambda f: f is None }})
    r"""The username to provide to the originating repository."""  
    

@dataclasses.dataclass
class MigrationsUpdateImportRequest:
    
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    request_body: Optional[MigrationsUpdateImportRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class MigrationsUpdateImportResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    basic_error: Optional[shared_basic_error.BasicError] = dataclasses.field(default=None)
    r"""Unavailable due to service under maintenance."""  
    import_: Optional[shared_import_.Import] = dataclasses.field(default=None)
    r"""Response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    