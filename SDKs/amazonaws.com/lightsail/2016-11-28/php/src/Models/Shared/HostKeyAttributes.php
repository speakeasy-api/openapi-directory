<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HostKeyAttributes - Describes the public SSH host keys or the RDP certificate.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HostKeyAttributes
{
	#[\JMS\Serializer\Annotation\SerializedName('algorithm')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $algorithm = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('fingerprintSHA1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprintSha1 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('fingerprintSHA256')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprintSha256 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('notValidAfter')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $notValidAfter = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('notValidBefore')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $notValidBefore = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('publicKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicKey = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('witnessedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $witnessedAt = null;
    
	public function __construct()
	{
		$this->algorithm = null;
		$this->fingerprintSha1 = null;
		$this->fingerprintSha256 = null;
		$this->notValidAfter = null;
		$this->notValidBefore = null;
		$this->publicKey = null;
		$this->witnessedAt = null;
	}
}
