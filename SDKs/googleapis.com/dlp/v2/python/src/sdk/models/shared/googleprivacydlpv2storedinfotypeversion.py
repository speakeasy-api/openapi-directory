"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleprivacydlpv2error as shared_googleprivacydlpv2error
from ..shared import googleprivacydlpv2storedinfotypeconfig as shared_googleprivacydlpv2storedinfotypeconfig
from ..shared import googleprivacydlpv2storedinfotypestats as shared_googleprivacydlpv2storedinfotypestats
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum(str, Enum):
    r"""Stored info type version state. Read-only, updated by the system during dictionary creation."""
    STORED_INFO_TYPE_STATE_UNSPECIFIED = 'STORED_INFO_TYPE_STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    READY = 'READY'
    FAILED = 'FAILED'
    INVALID = 'INVALID'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2StoredInfoTypeVersion:
    r"""Version of a StoredInfoType, including the configuration used to build it, create timestamp, and current state."""
    
    config: Optional[shared_googleprivacydlpv2storedinfotypeconfig.GooglePrivacyDlpV2StoredInfoTypeConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('config'), 'exclude': lambda f: f is None }})
    r"""Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Create timestamp of the version. Read-only, determined by the system when the version is created."""  
    errors: Optional[list[shared_googleprivacydlpv2error.GooglePrivacyDlpV2Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Errors that occurred when creating this storedInfoType version, or anomalies detected in the storedInfoType data that render it unusable. Only the five most recent errors will be displayed, with the most recent error appearing first. For example, some of the data for stored custom dictionaries is put in the user's Cloud Storage bucket, and if this data is modified or deleted by the user or another system, the dictionary becomes invalid. If any errors occur, fix the problem indicated by the error message and use the UpdateStoredInfoType API method to create another version of the storedInfoType to continue using it, reusing the same `config` if it was not the source of the error."""  
    state: Optional[GooglePrivacyDlpV2StoredInfoTypeVersionStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Stored info type version state. Read-only, updated by the system during dictionary creation."""  
    stats: Optional[shared_googleprivacydlpv2storedinfotypestats.GooglePrivacyDlpV2StoredInfoTypeStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats'), 'exclude': lambda f: f is None }})
    r"""Statistics for a StoredInfoType."""  
    