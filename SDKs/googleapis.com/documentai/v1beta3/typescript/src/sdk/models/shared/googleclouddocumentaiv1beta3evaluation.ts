/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudDocumentaiV1beta3EvaluationCounters } from "./googleclouddocumentaiv1beta3evaluationcounters";
import { GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics } from "./googleclouddocumentaiv1beta3evaluationmulticonfidencemetrics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * An evaluation of a ProcessorVersion's performance.
 */
export class GoogleCloudDocumentaiV1beta3Evaluation extends SpeakeasyBase {
  /**
   * Metrics across multiple confidence levels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allEntitiesMetrics" })
  @Type(() => GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics)
  allEntitiesMetrics?: GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics;

  /**
   * The time that the evaluation was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Evaluation counters for the documents that were used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentCounters" })
  @Type(() => GoogleCloudDocumentaiV1beta3EvaluationCounters)
  documentCounters?: GoogleCloudDocumentaiV1beta3EvaluationCounters;

  /**
   * Metrics across confidence levels, for different entities.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics,
  })
  @Expose({ name: "entityMetrics" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  entityMetrics?: Record<
    string,
    GoogleCloudDocumentaiV1beta3EvaluationMultiConfidenceMetrics
  >;

  /**
   * The KMS key name used for encryption.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyName" })
  kmsKeyName?: string;

  /**
   * The KMS key version with which data is encrypted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyVersionName" })
  kmsKeyVersionName?: string;

  /**
   * The resource name of the evaluation. Format: `projects/{project}/locations/{location}/processors/{processor}/processorVersions/{processor_version}/evaluations/{evaluation}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
