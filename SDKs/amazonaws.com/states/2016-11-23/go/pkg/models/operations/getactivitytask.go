// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetActivityTaskXAmzTargetEnum
type GetActivityTaskXAmzTargetEnum string

const (
	GetActivityTaskXAmzTargetEnumAwsStepFunctionsGetActivityTask GetActivityTaskXAmzTargetEnum = "AWSStepFunctions.GetActivityTask"
)

func (e GetActivityTaskXAmzTargetEnum) ToPointer() *GetActivityTaskXAmzTargetEnum {
	return &e
}

func (e *GetActivityTaskXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSStepFunctions.GetActivityTask":
		*e = GetActivityTaskXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetActivityTaskXAmzTargetEnum: %v", v)
	}
}

type GetActivityTaskRequest struct {
	GetActivityTaskInput shared.GetActivityTaskInput   `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           GetActivityTaskXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetActivityTaskResponse struct {
	// ActivityDoesNotExist
	ActivityDoesNotExist interface{}
	// ActivityWorkerLimitExceeded
	ActivityWorkerLimitExceeded interface{}
	ContentType                 string
	// Success
	GetActivityTaskOutput *shared.GetActivityTaskOutput
	// InvalidArn
	InvalidArn  interface{}
	StatusCode  int
	RawResponse *http.Response
}
