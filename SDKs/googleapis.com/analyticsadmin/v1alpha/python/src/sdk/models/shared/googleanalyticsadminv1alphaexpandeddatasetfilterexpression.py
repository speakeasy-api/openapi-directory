"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleanalyticsadminv1alphaexpandeddatasetfilter as shared_googleanalyticsadminv1alphaexpandeddatasetfilter
from ..shared import googleanalyticsadminv1alphaexpandeddatasetfilterexpressionlist as shared_googleanalyticsadminv1alphaexpandeddatasetfilterexpressionlist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression:
    r"""A logical expression of EnhancedDataSet dimension filters."""
    
    and_group: Optional[shared_googleanalyticsadminv1alphaexpandeddatasetfilterexpressionlist.GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpressionList] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('andGroup'), 'exclude': lambda f: f is None }})
    r"""A list of ExpandedDataSet filter expressions."""  
    filter: Optional[shared_googleanalyticsadminv1alphaexpandeddatasetfilter.GoogleAnalyticsAdminV1alphaExpandedDataSetFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})
    r"""A specific filter for a single dimension"""  
    not_expression: Optional[GoogleAnalyticsAdminV1alphaExpandedDataSetFilterExpression] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notExpression'), 'exclude': lambda f: f is None }})
    r"""A logical expression of EnhancedDataSet dimension filters."""  
    