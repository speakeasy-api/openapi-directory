// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetAssociationFilterQueryParams struct {
	// Data source to consider.
	Datasource *string `queryParam:"style=form,explode=true,name=datasource"`
	// Type of data structure to return. Can be 'full', 'simple', 'ids', or 'count'.
	Datastructure *string `queryParam:"style=form,explode=true,name=datastructure"`
	// Data type to consider.
	Datatype *string `queryParam:"style=form,explode=true,name=datatype"`
	// If `true`, it returns associations that have at least one direct evidence connecting the target and the disease. If `false` it only returns associations for which there is no direct evidence connecting the target and the disease, but only evidence connecting the target to a children of the disease in the EFO ontology.
	Direct *bool `queryParam:"style=form,explode=true,name=direct"`
	// An EFO code listed as disease.id.
	Disease *string `queryParam:"style=form,explode=true,name=disease"`
	// Returns facets
	Facets *bool `queryParam:"style=form,explode=true,name=facets"`
	// Fields you want to retrieve. This will get priority over the data structure requested.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Format to get the data back. Can be 'json', 'xml', 'tab' or 'csv'. **Note** that this option can only be used when calling the API directly and will not work in this page. The response here will always be JSON.
	Format *string `queryParam:"style=form,explode=true,name=format"`
	// How many initial results should be skipped. Defaults to 0.
	From *float64 `queryParam:"style=form,explode=true,name=from"`
	// A Reactome pathway identifier (returning only those targets linked to the specified pathway).
	Pathway *string `queryParam:"style=form,explode=true,name=pathway"`
	// Filter by maximum score value.
	ScorevalueMax *float32 `queryParam:"style=form,explode=true,name=scorevalue_max"`
	// Filter by minimum score value. The default is 0, but using 0.2 is a good trade-off to filter lower quality data points.
	ScorevalueMin *float32 `queryParam:"style=form,explode=true,name=scorevalue_min"`
	// Score types to apply the score value min and max filters. The default is `overall`.
	ScorevalueTypes *string `queryParam:"style=form,explode=true,name=scorevalue_types"`
	// Restrict the filtered results to those matching the passed string. The matching is done with a
	// phrase match prefix.
	//
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Maximum amount of results to return. Defaults to 10, max is 10000.
	Size *float64 `queryParam:"style=form,explode=true,name=size"`
	// Sort by the given score type. Defaults to 'overall' and descending order. Use '~' prefix to do ascending
	// order e.g. '~overall'. You will call a data type score like: 'datatypes.literature', and a data source as
	// 'datasources.gwas'. Supports multiple entries.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// A target identifier listed as target.id.
	Target *string `queryParam:"style=form,explode=true,name=target"`
	// A ChEMBL target class identifier (returning only those targets belonging to the specified class).
	TargetClass *string `queryParam:"style=form,explode=true,name=target_class"`
	// An EFO code of a therapeutic area.
	TherapeuticArea *string `queryParam:"style=form,explode=true,name=therapeutic_area"`
	// A UniProt keyword (meaning all the targets linked to that keyword).
	Uniprotkw *string `queryParam:"style=form,explode=true,name=uniprotkw"`
}

type GetAssociationFilterRequest struct {
	QueryParams GetAssociationFilterQueryParams
}

type GetAssociationFilterResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
