// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var UpdateServiceUserConversationServerList = []string{
	"https://conversations.twilio.com",
}

type UpdateServiceUserConversationSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateServiceUserConversationUpdateServiceUserConversationRequest struct {
	// The index of the last Message in the Conversation that the Participant has read.
	LastReadMessageIndex *int64 `form:"name=LastReadMessageIndex"`
	// The date of the last message read in conversation by the user, given in ISO 8601 format.
	LastReadTimestamp *time.Time                                               `form:"name=LastReadTimestamp"`
	NotificationLevel *shared.ServiceUserConversationEnumNotificationLevelEnum `form:"name=NotificationLevel"`
}

type UpdateServiceUserConversationRequest struct {
	// The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Conversation resource is associated with.
	ChatServiceSid string `pathParam:"style=simple,explode=false,name=ChatServiceSid"`
	// The unique SID identifier of the Conversation. This value can be either the `sid` or the `unique_name` of the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource).
	ConversationSid string                                                             `pathParam:"style=simple,explode=false,name=ConversationSid"`
	RequestBody     *UpdateServiceUserConversationUpdateServiceUserConversationRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The unique SID identifier of the [User resource](https://www.twilio.com/docs/conversations/api/user-resource). This value can be either the `sid` or the `identity` of the User resource.
	UserSid string `pathParam:"style=simple,explode=false,name=UserSid"`
}

type UpdateServiceUserConversationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ConversationsV1ServiceServiceUserServiceUserConversation *shared.ConversationsV1ServiceServiceUserServiceUserConversation
}
