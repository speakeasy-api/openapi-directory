"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import status as shared_status
from typing import Optional


@dataclasses.dataclass
class GetAPIV1TimelinesTagHashtagRequest:
    
    hashtag: str = dataclasses.field(metadata={'path_param': { 'field_name': 'hashtag', 'style': 'simple', 'explode': False }})
    r"""Content of a `#hashtag``, not including `#` symbol.."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Max number of results to return. Defaults to 20."""  
    local: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'local', 'style': 'form', 'explode': True }})
    r"""Show only local statuses? Defaults to false."""  
    max_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max_id', 'style': 'form', 'explode': True }})
    r"""Return results older than ID"""  
    min_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'min_id', 'style': 'form', 'explode': True }})
    r"""Return results immediately newer than ID"""  
    only_media: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'only_media', 'style': 'form', 'explode': True }})
    r"""Show only statuses with media attached? Defaults to false.."""  
    remote: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'remote', 'style': 'form', 'explode': True }})
    r"""Show only local statuses? Defaults to false."""  
    since_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'since_id', 'style': 'form', 'explode': True }})
    r"""Return results newer than ID"""  
    

@dataclasses.dataclass
class GetAPIV1TimelinesTagHashtagResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    statuses: Optional[list[shared_status.Status]] = dataclasses.field(default=None)
    r"""Get statuses."""  
    