/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class KeyUsageResultDailyCount extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;
}

export class KeyUsageResult extends SpeakeasyBase {
  /**
   * An array of objects representing number of paid lookups made on specific days, ordered by date. Each object contains a `date` attribute, which represents the day and a `count` attribute, which represents the number of paid lookups made on that day.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: KeyUsageResultDailyCount })
  @Expose({ name: "dailyCount" })
  @Type(() => KeyUsageResultDailyCount)
  dailyCount: KeyUsageResultDailyCount[];

  /**
   * End date in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end: string;

  /**
   * Start date in ISO 8601 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start: string;

  /**
   * Total of paid lookups performed in specified period.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}
