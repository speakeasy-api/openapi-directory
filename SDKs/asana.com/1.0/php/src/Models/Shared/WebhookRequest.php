<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class WebhookRequest
{
    /**
     * An array of WebhookFilter objects to specify a whitelist of filters to apply to events from this webhook. If a webhook event passes any of the filters the event will be delivered; otherwise no event will be sent to the receiving server.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\WebhookRequestFilters> $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\WebhookRequestFilters>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filters = null;
    
    /**
     * A resource ID to subscribe to. Many Asana resources are valid to create webhooks on, but higher-level resources require filters.
     * 
     * @var string $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resource;
    
    /**
     * The URL to receive the HTTP POST. The full URL will be used to deliver events from this webhook (including parameters) which allows encoding of application-specific state when the webhook is created.
     * 
     * @var string $target
     */
	#[\JMS\Serializer\Annotation\SerializedName('target')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $target;
    
	public function __construct()
	{
		$this->filters = null;
		$this->resource = "";
		$this->target = "";
	}
}
