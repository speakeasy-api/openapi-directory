/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Comma separated values of the fields to query for the Product
 */
export enum GetProductsSearchJsonFieldsEnum {
  Sku = "sku",
  Barcode = "barcode",
  Brand = "brand",
  Name = "name",
  Description = "description",
  Variants = "variants",
  OptionName = "option_name",
  CustomFields = "custom_fields",
  CustomFieldsSelects = "custom_fields_selects",
}

export class GetProductsSearchJsonRequest extends SpeakeasyBase {
  /**
   * API OAuth token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=authtoken",
  })
  authtoken: string;

  /**
   * Comma separated values of the fields to query for the Product
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: GetProductsSearchJsonFieldsEnum;

  /**
   * Locale code of the translation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locale",
  })
  locale?: string;

  /**
   * API OAuth login.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=login" })
  login: string;

  /**
   * Text to query for the Product
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query: string;
}

export class GetProductsSearchJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid query.
   */
  @SpeakeasyMetadata()
  notFound?: shared.NotFound;

  /**
   * An array of products
   */
  @SpeakeasyMetadata({ elemType: shared.Product })
  products?: shared.Product[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
