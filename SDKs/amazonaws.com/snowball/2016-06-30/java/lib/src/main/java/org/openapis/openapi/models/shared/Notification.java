/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Notification - &lt;p&gt;The Amazon Simple Notification Service (Amazon SNS) notification settings associated with a specific job. The &lt;code&gt;Notification&lt;/code&gt; object is returned as a part of the response syntax of the &lt;code&gt;DescribeJob&lt;/code&gt; action in the &lt;code&gt;JobMetadata&lt;/code&gt; data type.&lt;/p&gt; &lt;p&gt;When the notification settings are defined during job creation, you can choose to notify based on a specific set of job states using the &lt;code&gt;JobStatesToNotify&lt;/code&gt; array of strings, or you can specify that you want to have Amazon SNS notifications sent out for all job states with &lt;code&gt;NotifyAll&lt;/code&gt; set to true.&lt;/p&gt;
 */
public class Notification {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobStatesToNotify")
    public JobStateEnum[] jobStatesToNotify;
    public Notification withJobStatesToNotify(JobStateEnum[] jobStatesToNotify) {
        this.jobStatesToNotify = jobStatesToNotify;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotifyAll")
    public Boolean notifyAll;
    public Notification withNotifyAll(Boolean notifyAll) {
        this.notifyAll = notifyAll;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnsTopicARN")
    public String snsTopicARN;
    public Notification withSnsTopicARN(String snsTopicARN) {
        this.snsTopicARN = snsTopicARN;
        return this;
    }
    
}
