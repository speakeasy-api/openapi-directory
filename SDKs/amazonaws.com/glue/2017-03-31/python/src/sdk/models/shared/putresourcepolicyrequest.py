"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enablehybridvalues_enum as shared_enablehybridvalues_enum
from ..shared import existcondition_enum as shared_existcondition_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PutResourcePolicyRequest:
    
    policy_in_json: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyInJson') }})  
    enable_hybrid: Optional[shared_enablehybridvalues_enum.EnableHybridValuesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnableHybrid'), 'exclude': lambda f: f is None }})  
    policy_exists_condition: Optional[shared_existcondition_enum.ExistConditionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyExistsCondition'), 'exclude': lambda f: f is None }})  
    policy_hash_condition: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PolicyHashCondition'), 'exclude': lambda f: f is None }})  
    resource_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceArn'), 'exclude': lambda f: f is None }})  
    