"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import image as shared_image
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ImageCreateResultStatusEnum(str, Enum):
    OK = 'OK'
    OK_DUPLICATE = 'OKDuplicate'
    ERROR_SOURCE = 'ErrorSource'
    ERROR_IMAGE_FORMAT = 'ErrorImageFormat'
    ERROR_IMAGE_SIZE = 'ErrorImageSize'
    ERROR_STORAGE = 'ErrorStorage'
    ERROR_LIMIT_EXCEED = 'ErrorLimitExceed'
    ERROR_TAG_LIMIT_EXCEED = 'ErrorTagLimitExceed'
    ERROR_REGION_LIMIT_EXCEED = 'ErrorRegionLimitExceed'
    ERROR_UNKNOWN = 'ErrorUnknown'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImageCreateResult:
    
    image: Optional[shared_image.Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Image model to be sent as JSON"""  
    source_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceUrl'), 'exclude': lambda f: f is None }})  
    status: Optional[ImageCreateResultStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    