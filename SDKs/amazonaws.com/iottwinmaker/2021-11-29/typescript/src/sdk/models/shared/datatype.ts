/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataValue } from "./datavalue";
import { Relationship } from "./relationship";
import { TypeEnum } from "./typeenum";
import { Expose, Type } from "class-transformer";

/**
 * An object that specifies the data type of a property.
 */
export class DataType extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DataValue })
  @Expose({ name: "allowedValues" })
  @Type(() => DataValue)
  allowedValues?: DataValue[];

  @SpeakeasyMetadata()
  @Expose({ name: "nestedType" })
  @Type(() => DataType)
  nestedType?: DataType;

  @SpeakeasyMetadata()
  @Expose({ name: "relationship" })
  @Type(() => Relationship)
  relationship?: Relationship;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "unitOfMeasure" })
  unitOfMeasure?: string;
}
