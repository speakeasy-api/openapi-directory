// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetOpenIDTokenXAmzTargetEnum
type GetOpenIDTokenXAmzTargetEnum string

const (
	GetOpenIDTokenXAmzTargetEnumAwsCognitoIdentityServiceGetOpenIDToken GetOpenIDTokenXAmzTargetEnum = "AWSCognitoIdentityService.GetOpenIdToken"
)

func (e *GetOpenIDTokenXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityService.GetOpenIdToken":
		*e = GetOpenIDTokenXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOpenIDTokenXAmzTargetEnum: %s", s)
	}
}

type GetOpenIDTokenRequest struct {
	GetOpenIDTokenInput shared.GetOpenIDTokenInput   `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          GetOpenIDTokenXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetOpenIDTokenResponse struct {
	ContentType string
	// ExternalServiceException
	ExternalServiceException interface{}
	// Success
	GetOpenIDTokenResponse *shared.GetOpenIDTokenResponse
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceConflictException
	ResourceConflictException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
