// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisableLoggingActionEnum
type GETDisableLoggingActionEnum string

const (
	GETDisableLoggingActionEnumDisableLogging GETDisableLoggingActionEnum = "DisableLogging"
)

func (e GETDisableLoggingActionEnum) ToPointer() *GETDisableLoggingActionEnum {
	return &e
}

func (e *GETDisableLoggingActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DisableLogging":
		*e = GETDisableLoggingActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableLoggingActionEnum: %v", v)
	}
}

// GETDisableLoggingVersionEnum
type GETDisableLoggingVersionEnum string

const (
	GETDisableLoggingVersionEnumTwoThousandAndTwelve1201 GETDisableLoggingVersionEnum = "2012-12-01"
)

func (e GETDisableLoggingVersionEnum) ToPointer() *GETDisableLoggingVersionEnum {
	return &e
}

func (e *GETDisableLoggingVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETDisableLoggingVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisableLoggingVersionEnum: %v", v)
	}
}

type GETDisableLoggingRequest struct {
	Action GETDisableLoggingActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The identifier of the cluster on which logging is to be stopped.</p> <p>Example: <code>examplecluster</code> </p>
	ClusterIdentifier string                       `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	Version           GETDisableLoggingVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisableLoggingResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
