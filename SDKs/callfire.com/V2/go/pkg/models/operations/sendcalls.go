// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SendCallsSecurity struct {
	BasicAuth shared.SchemeBasicAuth `security:"scheme,type=http,subtype=basic"`
}

// SendCallsDefaultVoiceEnum - The voice set by default for all text-to-speech messages defined in CallRecipient objects or as default *Message properties
type SendCallsDefaultVoiceEnum string

const (
	SendCallsDefaultVoiceEnumMale1           SendCallsDefaultVoiceEnum = "MALE1"
	SendCallsDefaultVoiceEnumFemale1         SendCallsDefaultVoiceEnum = "FEMALE1"
	SendCallsDefaultVoiceEnumFemale2         SendCallsDefaultVoiceEnum = "FEMALE2"
	SendCallsDefaultVoiceEnumSpanish1        SendCallsDefaultVoiceEnum = "SPANISH1"
	SendCallsDefaultVoiceEnumFrenchcanadian1 SendCallsDefaultVoiceEnum = "FRENCHCANADIAN1"
)

func (e *SendCallsDefaultVoiceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MALE1":
		fallthrough
	case "FEMALE1":
		fallthrough
	case "FEMALE2":
		fallthrough
	case "SPANISH1":
		fallthrough
	case "FRENCHCANADIAN1":
		*e = SendCallsDefaultVoiceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SendCallsDefaultVoiceEnum: %s", s)
	}
}

type SendCallsQueryParams struct {
	// Specifies a campaignId to send calls quickly on a previously created campaign
	CampaignID *int64 `queryParam:"style=form,explode=true,name=campaignId"`
	// Text to be turned into a sound, this text will be played when the phone is answered. Parameter can be overridden for any particular CallRecipient
	DefaultLiveMessage *string `queryParam:"style=form,explode=true,name=defaultLiveMessage"`
	// Id of sound file to play if phone is answered. Parameter can be overridden for any particular CallRecipient
	DefaultLiveMessageSoundID *int64 `queryParam:"style=form,explode=true,name=defaultLiveMessageSoundId"`
	// Text to be turned into a sound, this text will be played when answering machine is detected. Parameter can be overridden for any particular CallRecipient
	DefaultMachineMessage *string `queryParam:"style=form,explode=true,name=defaultMachineMessage"`
	// An id of a sound file to play if answering machine is detected. Parameter can be overridden for any particular CallRecipient
	DefaultMachineMessageSoundID *int64 `queryParam:"style=form,explode=true,name=defaultMachineMessageSoundId"`
	// The voice set by default for all text-to-speech messages defined in CallRecipient objects or as default *Message properties
	DefaultVoice *SendCallsDefaultVoiceEnum `queryParam:"style=form,explode=true,name=defaultVoice"`
	// Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Turns on strict validation for recipients. System will reply with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't pass validation
	StrictValidation *bool `queryParam:"style=form,explode=true,name=strictValidation"`
}

type SendCallsRequest struct {
	QueryParams SendCallsQueryParams
	// An array of CallRecipient objects.
	// Limitations:
	// 1. Max number of CallRecipient objects is 10
	//
	Request  []shared.CallRecipient `request:"mediaType=application/json"`
	Security SendCallsSecurity
}

type SendCallsResponse struct {
	// successful operation
	CallList    *shared.CallList
	ContentType string
	// Bad request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
}
