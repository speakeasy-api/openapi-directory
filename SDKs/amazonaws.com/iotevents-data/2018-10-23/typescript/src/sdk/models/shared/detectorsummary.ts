/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DetectorStateSummary } from "./detectorstatesummary";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about the detector (instance).
 */
export class DetectorSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "detectorModelName" })
  detectorModelName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "detectorModelVersion" })
  detectorModelVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keyValue" })
  keyValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => DetectorStateSummary)
  state?: DetectorStateSummary;
}
