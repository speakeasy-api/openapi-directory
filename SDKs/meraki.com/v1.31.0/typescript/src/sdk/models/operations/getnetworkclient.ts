/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetNetworkClientRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=clientId",
  })
  clientId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class GetNetworkClient200ApplicationJSONClientVpnConnections extends SpeakeasyBase {
  /**
   * The time the client last connected to the VPN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectedAt" })
  connectedAt?: number;

  /**
   * The time the client last disconnectd from the VPN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disconnectedAt" })
  disconnectedAt?: number;

  /**
   * The IP address of the VPN the client last connected to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteIp" })
  remoteIp?: string;
}

/**
 * The connection status of the client
 */
export enum GetNetworkClient200ApplicationJSONStatusEnum {
  Offline = "Offline",
  Online = "Online",
}

/**
 * Successful operation
 */
export class GetNetworkClient200ApplicationJSON extends SpeakeasyBase {
  /**
   * The Cisco discover protocol settings for the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cdp" })
  cdp?: string[][];

  /**
   * VPN connections associated with the client
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkClient200ApplicationJSONClientVpnConnections,
  })
  @Expose({ name: "clientVpnConnections" })
  @Type(() => GetNetworkClient200ApplicationJSONClientVpnConnections)
  clientVpnConnections?: GetNetworkClient200ApplicationJSONClientVpnConnections[];

  /**
   * Short description of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Timestamp client was first seen in the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstSeen" })
  firstSeen?: number;

  /**
   * The ID of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The IP address of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip" })
  ip?: string;

  /**
   * The IPv6 address of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip6" })
  ip6?: string;

  /**
   * Timestamp client was last seen in the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSeen" })
  lastSeen?: number;

  /**
   * The link layer discover protocol settings for the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lldp" })
  lldp?: string[][];

  /**
   * The MAC address of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mac" })
  mac?: string;

  /**
   * Manufacturer of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturer" })
  manufacturer?: string;

  /**
   * The operating system of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "os" })
  os?: string;

  /**
   * The MAC address of the node that the device was last connected to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recentDeviceMac" })
  recentDeviceMac?: string;

  /**
   * Status of SM for the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smInstalled" })
  smInstalled?: boolean;

  /**
   * The name of the SSID that the client is connected to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ssid" })
  ssid?: string;

  /**
   * The connection status of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GetNetworkClient200ApplicationJSONStatusEnum;

  /**
   * The switch port that the client is connected to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switchport" })
  switchport?: string;

  /**
   * The username of the user of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;

  /**
   * The name of the VLAN that the client is connected to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  vlan?: string;

  /**
   * Wireless capabilities of the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wirelessCapabilities" })
  wirelessCapabilities?: string;
}

export class GetNetworkClientResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getNetworkClient200ApplicationJSONObject?: GetNetworkClient200ApplicationJSON;
}
