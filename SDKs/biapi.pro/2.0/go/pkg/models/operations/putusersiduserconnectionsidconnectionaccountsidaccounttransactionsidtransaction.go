// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type PutUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsIDTransactionRequestBody struct {
	// if false, transaction isn't considered in analyzisis endpoints (like /balances)
	Active *bool `multipartForm:"name=active"`
	// change application date of the transaction
	ApplicationDate *types.Date `multipartForm:"name=application_date"`
	// change comment
	Comment *string `multipartForm:"name=comment"`
	// ID of the associated category
	IDCategory *int64 `multipartForm:"name=id_category"`
	// user rewording of the transaction
	Wording *string `multipartForm:"name=wording"`
}

type PutUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsIDTransactionRequest struct {
	RequestBody   *PutUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsIDTransactionRequestBody `request:"mediaType=multipart/form-data"`
	Expand        *string                                                                                     `queryParam:"style=form,explode=true,name=expand"`
	IDAccount     int64                                                                                       `pathParam:"style=simple,explode=false,name=id_account"`
	IDConnection  int64                                                                                       `pathParam:"style=simple,explode=false,name=id_connection"`
	IDTransaction int64                                                                                       `pathParam:"style=simple,explode=false,name=id_transaction"`
	// Hint: you can use 'me' or 'all'
	IDUser string `pathParam:"style=simple,explode=false,name=id_user"`
}

type PutUsersIDUserConnectionsIDConnectionAccountsIDAccountTransactionsIDTransactionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful PUT on Transaction resource
	Transaction *shared.Transaction
}
