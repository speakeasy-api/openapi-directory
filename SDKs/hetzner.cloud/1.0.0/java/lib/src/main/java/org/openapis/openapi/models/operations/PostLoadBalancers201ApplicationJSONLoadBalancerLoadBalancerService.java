/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService {
    /**
     * Port the Load Balancer will balance to
     */
    @JsonProperty("destination_port")
    public Long destinationPort;

    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService withDestinationPort(Long destinationPort) {
        this.destinationPort = destinationPort;
        return this;
    }
    
    /**
     * Service health check
     */
    @JsonProperty("health_check")
    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceLoadBalancerServiceHealthCheck healthCheck;

    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService withHealthCheck(PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceLoadBalancerServiceHealthCheck healthCheck) {
        this.healthCheck = healthCheck;
        return this;
    }
    
    /**
     * Configuration option for protocols http and https
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("http")
    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceLoadBalancerServiceHTTP http;

    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService withHttp(PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceLoadBalancerServiceHTTP http) {
        this.http = http;
        return this;
    }
    
    /**
     * Port the Load Balancer listens on
     */
    @JsonProperty("listen_port")
    public Long listenPort;

    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService withListenPort(Long listenPort) {
        this.listenPort = listenPort;
        return this;
    }
    
    /**
     * Protocol of the Load Balancer
     */
    @JsonProperty("protocol")
    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceProtocolEnum protocol;

    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService withProtocol(PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceProtocolEnum protocol) {
        this.protocol = protocol;
        return this;
    }
    
    /**
     * Is Proxyprotocol enabled or not
     */
    @JsonProperty("proxyprotocol")
    public Boolean proxyprotocol;

    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService withProxyprotocol(Boolean proxyprotocol) {
        this.proxyprotocol = proxyprotocol;
        return this;
    }
    
    public PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerService(@JsonProperty("destination_port") Long destinationPort, @JsonProperty("health_check") PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceLoadBalancerServiceHealthCheck healthCheck, @JsonProperty("listen_port") Long listenPort, @JsonProperty("protocol") PostLoadBalancers201ApplicationJSONLoadBalancerLoadBalancerServiceProtocolEnum protocol, @JsonProperty("proxyprotocol") Boolean proxyprotocol) {
        this.destinationPort = destinationPort;
        this.healthCheck = healthCheck;
        this.listenPort = listenPort;
        this.protocol = protocol;
        this.proxyprotocol = proxyprotocol;
  }
}
