/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonitoringAlertActions } from "./monitoringalertactions";
import { MonitoringAlertStatusEnum } from "./monitoringalertstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides summary information about a monitor alert.
 */
export class MonitoringAlertSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Actions" })
  @Type(() => MonitoringAlertActions)
  actions: MonitoringAlertActions;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertStatus" })
  alertStatus: MonitoringAlertStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DatapointsToAlert" })
  datapointsToAlert: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationPeriod" })
  evaluationPeriod: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitoringAlertName" })
  monitoringAlertName: string;
}
