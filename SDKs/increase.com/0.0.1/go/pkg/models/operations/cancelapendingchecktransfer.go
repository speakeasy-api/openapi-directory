// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CancelAPendingCheckTransferPathParams struct {
	CheckTransferID string `pathParam:"style=simple,explode=false,name=check_transfer_id"`
}

type CancelAPendingCheckTransferRequest struct {
	PathParams CancelAPendingCheckTransferPathParams
}

type CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnumRateLimitedError CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON13 struct {
	Detail     string                                                        `json:"detail"`
	RetryAfter *int64                                                        `json:"retry_after,omitempty"`
	Status     CancelAPendingCheckTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                        `json:"title"`
	Type       CancelAPendingCheckTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON12 struct {
	Detail string                                                        `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON11 struct {
	Detail string                                                        `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnumFourHundred CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnumMalformedRequestError CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON10 struct {
	Detail string                                                        `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnumFourHundred CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnumInvalidParametersError CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                     `json:"errors,omitempty"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnumInvalidOperationError CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON8 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON7 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnumFiveHundred CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnumInternalServerError CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON6 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON5 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON4 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON3 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON2 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnum string

const (
	CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type CancelAPendingCheckTransferDefaultApplicationJSON1 struct {
	Detail string                                                       `json:"detail"`
	Status CancelAPendingCheckTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   CancelAPendingCheckTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CancelAPendingCheckTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Check Transfer
	CheckTransfer *shared.CheckTransfer
	// Error
	Error interface{}
}
