/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataIssueDetail } from "./dataissuedetail";
import { Image } from "./image";
import { LatLng } from "./latlng";
import { LocalizedText } from "./localizedtext";
import { Review } from "./review";
import { Expose, Type } from "class-transformer";

/**
 * A parsed listing
 */
export class ParsedListing extends SpeakeasyBase {
  /**
   * If not empty, it indicates that this listing belongs to a brand of the feed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: string;

  /**
   * The partner provided category (accommodation type) of the property.
   */
  @SpeakeasyMetadata({ elemType: LocalizedText })
  @Expose({ name: "category" })
  @Type(() => LocalizedText)
  category?: LocalizedText[];

  /**
   * Data issues about this listing
   */
  @SpeakeasyMetadata({ elemType: DataIssueDetail })
  @Expose({ name: "dataIssueDetail" })
  @Type(() => DataIssueDetail)
  dataIssueDetail?: DataIssueDetail[];

  /**
   * Description of the property.
   */
  @SpeakeasyMetadata({ elemType: LocalizedText })
  @Expose({ name: "description" })
  @Type(() => LocalizedText)
  description?: LocalizedText[];

  /**
   * Images associated with this listing, localized.
   */
  @SpeakeasyMetadata({ elemType: Image })
  @Expose({ name: "image" })
  @Type(() => Image)
  image?: Image[];

  /**
   * Represents the accuracy of the location. The listing can be anywhere within the defined circular area.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imprecisionRadiusMeters" })
  imprecisionRadiusMeters?: number;

  /**
   * Whether the listing can be served based on non image data alone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isServed" })
  isServed?: boolean;

  /**
   * List of localized names.
   */
  @SpeakeasyMetadata({ elemType: LocalizedText })
  @Expose({ name: "listingName" })
  @Type(() => LocalizedText)
  listingName?: LocalizedText[];

  /**
   * An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => LatLng)
  location?: LatLng;

  /**
   * The list id on partner lec feed, provided by partner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "partnerListId" })
  partnerListId?: string;

  /**
   * The country code where the listing is located.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "regionCode" })
  regionCode?: string;

  /**
   * Reviews associated with this listing. Each review proto has a single language attached to it.
   */
  @SpeakeasyMetadata({ elemType: Review })
  @Expose({ name: "review" })
  @Type(() => Review)
  review?: Review[];

  /**
   * VR List attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitAttributes" })
  unitAttributes?: Record<string, string>;
}
