"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import expirationmodeltype_enum as shared_expirationmodeltype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportKeyMaterialRequest:
    
    encrypted_key_material: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EncryptedKeyMaterial') }})  
    import_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImportToken') }})  
    key_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeyId') }})  
    expiration_model: Optional[shared_expirationmodeltype_enum.ExpirationModelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExpirationModel'), 'exclude': lambda f: f is None }})  
    valid_to: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidTo'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    