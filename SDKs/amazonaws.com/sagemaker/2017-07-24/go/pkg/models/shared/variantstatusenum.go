// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VariantStatusEnum string

const (
	VariantStatusEnumCreating          VariantStatusEnum = "Creating"
	VariantStatusEnumUpdating          VariantStatusEnum = "Updating"
	VariantStatusEnumDeleting          VariantStatusEnum = "Deleting"
	VariantStatusEnumActivatingTraffic VariantStatusEnum = "ActivatingTraffic"
	VariantStatusEnumBaking            VariantStatusEnum = "Baking"
)

func (e VariantStatusEnum) ToPointer() *VariantStatusEnum {
	return &e
}

func (e *VariantStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Creating":
		fallthrough
	case "Updating":
		fallthrough
	case "Deleting":
		fallthrough
	case "ActivatingTraffic":
		fallthrough
	case "Baking":
		*e = VariantStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VariantStatusEnum: %v", v)
	}
}
