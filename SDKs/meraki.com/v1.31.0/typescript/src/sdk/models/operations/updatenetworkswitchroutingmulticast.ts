/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default.
 */
export class UpdateNetworkSwitchRoutingMulticastRequestBodyDefaultSettings extends SpeakeasyBase {
  /**
   * Flood unknown multicast traffic setting for entire network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floodUnknownMulticastTrafficEnabled" })
  floodUnknownMulticastTrafficEnabled?: boolean;

  /**
   * IGMP snooping setting for entire network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "igmpSnoopingEnabled" })
  igmpSnoopingEnabled?: boolean;
}

export class UpdateNetworkSwitchRoutingMulticastRequestBodyOverrides extends SpeakeasyBase {
  /**
   * Flood unknown multicast traffic setting for switches, switch stacks or switch profiles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "floodUnknownMulticastTrafficEnabled" })
  floodUnknownMulticastTrafficEnabled: boolean;

  /**
   * IGMP snooping setting for switches, switch stacks or switch profiles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "igmpSnoopingEnabled" })
  igmpSnoopingEnabled: boolean;

  /**
   * List of switch stack ids for non-template network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stacks" })
  stacks?: string[];

  /**
   * List of switch profiles ids for template network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switchProfiles" })
  switchProfiles?: string[];

  /**
   * List of switch serials for non-template network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switches" })
  switches?: string[];
}

export class UpdateNetworkSwitchRoutingMulticastRequestBody extends SpeakeasyBase {
  /**
   * Default multicast setting for entire network. IGMP snooping and Flood unknown multicast traffic settings are enabled by default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "defaultSettings" })
  @Type(() => UpdateNetworkSwitchRoutingMulticastRequestBodyDefaultSettings)
  defaultSettings?: UpdateNetworkSwitchRoutingMulticastRequestBodyDefaultSettings;

  /**
   * Array of paired switches/stacks/profiles and corresponding multicast settings. An empty array will clear the multicast settings.
   */
  @SpeakeasyMetadata({
    elemType: UpdateNetworkSwitchRoutingMulticastRequestBodyOverrides,
  })
  @Expose({ name: "overrides" })
  @Type(() => UpdateNetworkSwitchRoutingMulticastRequestBodyOverrides)
  overrides?: UpdateNetworkSwitchRoutingMulticastRequestBodyOverrides[];
}

export class UpdateNetworkSwitchRoutingMulticastRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkSwitchRoutingMulticastRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkSwitchRoutingMulticastResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkSwitchRoutingMulticast200ApplicationJSONObject?: Record<
    string,
    any
  >;
}
