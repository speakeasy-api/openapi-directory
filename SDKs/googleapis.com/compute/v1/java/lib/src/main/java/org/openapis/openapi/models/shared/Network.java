/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Network - Represents a VPC Network resource. Networks connect resources to each other and to the internet. For more information, read Virtual Private Cloud (VPC) Network.
 */
public class Network {
    /**
     * Deprecated in favor of subnet mode networks. The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IPv4Range")
    public String iPv4Range;

    public Network withIPv4Range(String iPv4Range) {
        this.iPv4Range = iPv4Range;
        return this;
    }
    
    /**
     * Must be set to create a VPC network. If not set, a legacy network is created. When set to true, the VPC network is created in auto mode. When set to false, the VPC network is created in custom mode. An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. For custom mode VPC networks, you can add subnets using the subnetworks insert method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoCreateSubnetworks")
    public Boolean autoCreateSubnetworks;

    public Network withAutoCreateSubnetworks(Boolean autoCreateSubnetworks) {
        this.autoCreateSubnetworks = autoCreateSubnetworks;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public Network withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this field when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Network withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Enable ULA internal ipv6 on this network. Enabling this feature will assign a /48 from google defined ULA prefix fd20::/20. .
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableUlaInternalIpv6")
    public Boolean enableUlaInternalIpv6;

    public Network withEnableUlaInternalIpv6(Boolean enableUlaInternalIpv6) {
        this.enableUlaInternalIpv6 = enableUlaInternalIpv6;
        return this;
    }
    
    /**
     * [Output Only] URL of the firewall policy the network is associated with.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("firewallPolicy")
    public String firewallPolicy;

    public Network withFirewallPolicy(String firewallPolicy) {
        this.firewallPolicy = firewallPolicy;
        return this;
    }
    
    /**
     * [Output Only] The gateway address for default routing out of the network, selected by Google Cloud.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatewayIPv4")
    public String gatewayIPv4;

    public Network withGatewayIPv4(String gatewayIPv4) {
        this.gatewayIPv4 = gatewayIPv4;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Network withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * When enabling ula internal ipv6, caller optionally can specify the /48 range they want from the google defined ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6 address and must be within the fd20::/20. Operation will fail if the speficied /48 is already in used by another resource. If the field is not speficied, then a /48 range will be randomly allocated from fd20::/20 and returned via this field. .
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalIpv6Range")
    public String internalIpv6Range;

    public Network withInternalIpv6Range(String internalIpv6Range) {
        this.internalIpv6Range = internalIpv6Range;
        return this;
    }
    
    /**
     * [Output Only] Type of the resource. Always compute#network for networks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Network withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Maximum Transmission Unit in bytes. The minimum value for this field is 1300 and the maximum value is 8896. The suggested value is 1500, which is the default MTU used on the Internet, or 8896 if you want to use Jumbo frames. If unspecified, the value defaults to 1460.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mtu")
    public Integer mtu;

    public Network withMtu(Integer mtu) {
        this.mtu = mtu;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?`. The first character must be a lowercase letter, and all following characters (except for the last character) must be a dash, lowercase letter, or digit. The last character must be a lowercase letter or digit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Network withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkFirewallPolicyEnforcementOrder")
    public NetworkNetworkFirewallPolicyEnforcementOrderEnum networkFirewallPolicyEnforcementOrder;

    public Network withNetworkFirewallPolicyEnforcementOrder(NetworkNetworkFirewallPolicyEnforcementOrderEnum networkFirewallPolicyEnforcementOrder) {
        this.networkFirewallPolicyEnforcementOrder = networkFirewallPolicyEnforcementOrder;
        return this;
    }
    
    /**
     * [Output Only] A list of network peerings for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("peerings")
    public NetworkPeering[] peerings;

    public Network withPeerings(NetworkPeering[] peerings) {
        this.peerings = peerings;
        return this;
    }
    
    /**
     * A routing configuration attached to a network resource. The message includes the list of routers associated with the network, and a flag indicating the type of routing behavior to enforce network-wide.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routingConfig")
    public NetworkRoutingConfig routingConfig;

    public Network withRoutingConfig(NetworkRoutingConfig routingConfig) {
        this.routingConfig = routingConfig;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Network withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;

    public Network withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * [Output Only] Server-defined fully-qualified URLs for all subnetworks in this VPC network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetworks")
    public String[] subnetworks;

    public Network withSubnetworks(String[] subnetworks) {
        this.subnetworks = subnetworks;
        return this;
    }
    
    public Network(){}
}
