// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ProjectsListCardsPathParams struct {
	// column_id parameter
	ColumnID int64 `pathParam:"style=simple,explode=false,name=column_id"`
}

// ProjectsListCardsArchivedStateEnum - Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.
type ProjectsListCardsArchivedStateEnum string

const (
	ProjectsListCardsArchivedStateEnumAll         ProjectsListCardsArchivedStateEnum = "all"
	ProjectsListCardsArchivedStateEnumArchived    ProjectsListCardsArchivedStateEnum = "archived"
	ProjectsListCardsArchivedStateEnumNotArchived ProjectsListCardsArchivedStateEnum = "not_archived"
)

func (e *ProjectsListCardsArchivedStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "archived":
		fallthrough
	case "not_archived":
		*e = ProjectsListCardsArchivedStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsListCardsArchivedStateEnum: %s", s)
	}
}

type ProjectsListCardsQueryParams struct {
	// Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`.
	ArchivedState *ProjectsListCardsArchivedStateEnum `queryParam:"style=form,explode=true,name=archived_state"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
}

type ProjectsListCardsRequest struct {
	PathParams  ProjectsListCardsPathParams
	QueryParams ProjectsListCardsQueryParams
}

type ProjectsListCardsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Requires authentication
	BasicError *shared.BasicError
	// Response
	ProjectCards []shared.ProjectCard
}
