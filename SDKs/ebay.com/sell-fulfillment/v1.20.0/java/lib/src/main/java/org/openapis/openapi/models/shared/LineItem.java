/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LineItem - This type contains the details of each line item in an order.
 */
public class LineItem {
    /**
     * This array contains information about one or more sales promotions or discounts applied to the line item. It is always returned, but will be returned as an empty array if no special sales promotions or discounts apply to the order line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedPromotions")
    public AppliedPromotion[] appliedPromotions;

    public LineItem withAppliedPromotions(AppliedPromotion[] appliedPromotions) {
        this.appliedPromotions = appliedPromotions;
        return this;
    }
    
    /**
     * This type contains a breakdown of all costs associated with the fulfillment of a line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryCost")
    public DeliveryCost deliveryCost;

    public LineItem withDeliveryCost(DeliveryCost deliveryCost) {
        this.deliveryCost = deliveryCost;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discountedLineItemCost")
    public Amount discountedLineItemCost;

    public LineItem withDiscountedLineItemCost(Amount discountedLineItemCost) {
        this.discountedLineItemCost = discountedLineItemCost;
        return this;
    }
    
    /**
     * This container will be returned if the order line item is subject to a 'Collect and Remit' tax that eBay will collect and remit to the proper taxing authority on the buyer's behalf.&lt;br&gt;&lt;br&gt;'Collect and Remit' tax includes:&lt;ul&gt;&lt;li&gt;US state-mandated sales tax&lt;/li&gt;&lt;li&gt;Federal and Provincial Sales Tax in Canada&lt;/li&gt;&lt;li&gt;'Goods and Services' tax in Canada, Australia, and New Zealand&lt;/li&gt;&lt;li&gt;VAT collected for the UK and EU countries&lt;/li&gt;&lt;/ul&gt;The amount of this tax is shown in the &lt;strong&gt;amount&lt;/strong&gt; field, and the type of tax is shown in the &lt;strong&gt;taxType&lt;/strong&gt; field.&lt;br&gt;&lt;br&gt;eBay will display the tax type and amount during checkout in accordance with the buyer's address, and handle collection and remittance of the tax without requiring the seller to take any action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebayCollectAndRemitTaxes")
    public EbayCollectAndRemitTax[] ebayCollectAndRemitTaxes;

    public LineItem withEbayCollectAndRemitTaxes(EbayCollectAndRemitTax[] ebayCollectAndRemitTaxes) {
        this.ebayCollectAndRemitTaxes = ebayCollectAndRemitTaxes;
        return this;
    }
    
    /**
     * This type contains the breakdown of costs that are collected by eBay from the buyer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebayCollectedCharges")
    public EbayCollectedCharges ebayCollectedCharges;

    public LineItem withEbayCollectedCharges(EbayCollectedCharges ebayCollectedCharges) {
        this.ebayCollectedCharges = ebayCollectedCharges;
        return this;
    }
    
    /**
     * This type contains information about a digital gift card line item that was purchased as a gift and sent to the recipient by email.&lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;b&gt;GiftDetails&lt;/b&gt; will not be returned for any order that is more than 90 days old.&lt;/span&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("giftDetails")
    public GiftDetails giftDetails;

    public LineItem withGiftDetails(GiftDetails giftDetails) {
        this.giftDetails = giftDetails;
        return this;
    }
    
    /**
     * This type describes the physical location of an order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemLocation")
    public ItemLocation itemLocation;

    public LineItem withItemLocation(ItemLocation itemLocation) {
        this.itemLocation = itemLocation;
        return this;
    }
    
    /**
     * The eBay-generated legacy listing item ID of the listing. Note that the unique identifier of a listing in REST-based APIs is called the &lt;strong&gt;listingId&lt;/strong&gt; instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legacyItemId")
    public String legacyItemId;

    public LineItem withLegacyItemId(String legacyItemId) {
        this.legacyItemId = legacyItemId;
        return this;
    }
    
    /**
     * The unique identifier of a single variation within a multiple-variation listing. This field is only returned if the line item purchased was from a multiple-variation listing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("legacyVariationId")
    public String legacyVariationId;

    public LineItem withLegacyVariationId(String legacyVariationId) {
        this.legacyVariationId = legacyVariationId;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItemCost")
    public Amount lineItemCost;

    public LineItem withLineItemCost(Amount lineItemCost) {
        this.lineItemCost = lineItemCost;
        return this;
    }
    
    /**
     * This type contains the specifications for processing the fulfillment of a line item, including the handling window and the delivery window. These fields provide guidance for &lt;i&gt;eBay Guaranteed Delivery&lt;/i&gt; as well as for non-guaranteed delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItemFulfillmentInstructions")
    public LineItemFulfillmentInstructions lineItemFulfillmentInstructions;

    public LineItem withLineItemFulfillmentInstructions(LineItemFulfillmentInstructions lineItemFulfillmentInstructions) {
        this.lineItemFulfillmentInstructions = lineItemFulfillmentInstructions;
        return this;
    }
    
    /**
     * This enumeration value indicates the current fulfillment status of the line item. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:LineItemFulfillmentStatusEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItemFulfillmentStatus")
    public String lineItemFulfillmentStatus;

    public LineItem withLineItemFulfillmentStatus(String lineItemFulfillmentStatus) {
        this.lineItemFulfillmentStatus = lineItemFulfillmentStatus;
        return this;
    }
    
    /**
     * This is the unique identifier of an eBay order line item. This field is created as soon as there is a commitment to buy from the seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lineItemId")
    public String lineItemId;

    public LineItem withLineItemId(String lineItemId) {
        this.lineItemId = lineItemId;
        return this;
    }
    
    /**
     * An array of one or more line items related to the corresponding order, but not a part of that order. Details include the order ID, line item ID, and title of the linked line item, the seller of that item, item specifics, estimated delivery times, and shipment tracking (if available).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedOrderLineItems")
    public LinkedOrderLineItem[] linkedOrderLineItems;

    public LineItem withLinkedOrderLineItems(LinkedOrderLineItem[] linkedOrderLineItems) {
        this.linkedOrderLineItems = linkedOrderLineItems;
        return this;
    }
    
    /**
     * The unique identifier of the eBay marketplace where the line item was listed. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:MarketplaceIdEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listingMarketplaceId")
    public String listingMarketplaceId;

    public LineItem withListingMarketplaceId(String listingMarketplaceId) {
        this.listingMarketplaceId = listingMarketplaceId;
        return this;
    }
    
    /**
     * This type contains information about the eBay programs under which a line item was listed and sold.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public LineItemProperties properties;

    public LineItem withProperties(LineItemProperties properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * The unique identifier of the eBay marketplace where the line item was listed. Often, the &lt;strong&gt;listingMarketplaceId&lt;/strong&gt; and the &lt;strong&gt;purchaseMarketplaceId&lt;/strong&gt; identifier are the same, but there are occasions when an item will surface on multiple eBay marketplaces. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/ba:MarketplaceIdEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseMarketplaceId")
    public String purchaseMarketplaceId;

    public LineItem withPurchaseMarketplaceId(String purchaseMarketplaceId) {
        this.purchaseMarketplaceId = purchaseMarketplaceId;
        return this;
    }
    
    /**
     * The number of units of the line item in the order. These are represented as a group by a single &lt;b&gt;lineItemId&lt;/b&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Integer quantity;

    public LineItem withQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * This array is always returned, but is returned as an empty array unless the seller has submitted a partial or full refund to the buyer for the order. If a refund has occurred, the refund amount and refund date will be shown for each refund.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refunds")
    public LineItemRefund[] refunds;

    public LineItem withRefunds(LineItemRefund[] refunds) {
        this.refunds = refunds;
        return this;
    }
    
    /**
     * Seller-defined Stock-Keeping Unit (SKU). This inventory identifier must be unique within the seller's eBay inventory. SKUs are optional when listing in the legacy/Trading API system, but SKUs are required when listing items through the Inventory API model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;

    public LineItem withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * The eBay listing type of the line item. The most common listing types are &lt;code&gt;AUCTION&lt;/code&gt; and &lt;code&gt;FIXED_PRICE&lt;/code&gt;. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/fulfillment/types/sel:SoldFormatEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("soldFormat")
    public String soldFormat;

    public LineItem withSoldFormat(String soldFormat) {
        this.soldFormat = soldFormat;
        return this;
    }
    
    /**
     * Contains a list of taxes applied to the line item, if any. This array is always returned, but will be returned as empty if no taxes are applicable to the line item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxes")
    public Tax[] taxes;

    public LineItem withTaxes(Tax[] taxes) {
        this.taxes = taxes;
        return this;
    }
    
    /**
     * The title of the listing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public LineItem withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Amount total;

    public LineItem withTotal(Amount total) {
        this.total = total;
        return this;
    }
    
    /**
     * An array of aspect name-value pairs that identifies the specific variation of a multi-variation listing. This array can contain multiple name-value pairs, such as &lt;code&gt;color:blue&lt;/code&gt; and &lt;code&gt;size:large&lt;/code&gt;, and will only be returned for orders created from a multiple-variation listing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variationAspects")
    public NameValuePair[] variationAspects;

    public LineItem withVariationAspects(NameValuePair[] variationAspects) {
        this.variationAspects = variationAspects;
        return this;
    }
    
    public LineItem(){}
}
