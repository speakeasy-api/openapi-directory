// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JobTypeIDEnum - The type of work.
type JobTypeIDEnum string

const (
	JobTypeIDEnumUndefined0     JobTypeIDEnum = "Undefined0"
	JobTypeIDEnumFullTime       JobTypeIDEnum = "Full-Time"
	JobTypeIDEnumPartTime       JobTypeIDEnum = "Part-Time"
	JobTypeIDEnumContract       JobTypeIDEnum = "Contract"
	JobTypeIDEnumUndefined4     JobTypeIDEnum = "Undefined4"
	JobTypeIDEnumUndefined5     JobTypeIDEnum = "Undefined5"
	JobTypeIDEnumStudent        JobTypeIDEnum = "Student"
	JobTypeIDEnumUndefined7     JobTypeIDEnum = "Undefined7"
	JobTypeIDEnumUndefined8     JobTypeIDEnum = "Undefined8"
	JobTypeIDEnumCasual         JobTypeIDEnum = "Casual"
	JobTypeIDEnumSeasonal       JobTypeIDEnum = "Seasonal"
	JobTypeIDEnumTemporary      JobTypeIDEnum = "Temporary"
	JobTypeIDEnumPermanent      JobTypeIDEnum = "Permanent"
	JobTypeIDEnumCoOp           JobTypeIDEnum = "Co-op"
	JobTypeIDEnumApprenticeship JobTypeIDEnum = "Apprenticeship"
)

func (e *JobTypeIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Undefined0":
		fallthrough
	case "Full-Time":
		fallthrough
	case "Part-Time":
		fallthrough
	case "Contract":
		fallthrough
	case "Undefined4":
		fallthrough
	case "Undefined5":
		fallthrough
	case "Student":
		fallthrough
	case "Undefined7":
		fallthrough
	case "Undefined8":
		fallthrough
	case "Casual":
		fallthrough
	case "Seasonal":
		fallthrough
	case "Temporary":
		fallthrough
	case "Permanent":
		fallthrough
	case "Co-op":
		fallthrough
	case "Apprenticeship":
		*e = JobTypeIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JobTypeIDEnum: %s", s)
	}
}
