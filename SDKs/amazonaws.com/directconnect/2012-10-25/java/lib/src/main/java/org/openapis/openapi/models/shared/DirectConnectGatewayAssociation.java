/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DirectConnectGatewayAssociation - Information about an association between a Direct Connect gateway and a virtual private gateway or transit gateway.
 */
public class DirectConnectGatewayAssociation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedPrefixesToDirectConnectGateway")
    public RouteFilterPrefix[] allowedPrefixesToDirectConnectGateway;
    public DirectConnectGatewayAssociation withAllowedPrefixesToDirectConnectGateway(RouteFilterPrefix[] allowedPrefixesToDirectConnectGateway) {
        this.allowedPrefixesToDirectConnectGateway = allowedPrefixesToDirectConnectGateway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatedGateway")
    public AssociatedGateway associatedGateway;
    public DirectConnectGatewayAssociation withAssociatedGateway(AssociatedGateway associatedGateway) {
        this.associatedGateway = associatedGateway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associationId")
    public String associationId;
    public DirectConnectGatewayAssociation withAssociationId(String associationId) {
        this.associationId = associationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associationState")
    public DirectConnectGatewayAssociationStateEnum associationState;
    public DirectConnectGatewayAssociation withAssociationState(DirectConnectGatewayAssociationStateEnum associationState) {
        this.associationState = associationState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directConnectGatewayId")
    public String directConnectGatewayId;
    public DirectConnectGatewayAssociation withDirectConnectGatewayId(String directConnectGatewayId) {
        this.directConnectGatewayId = directConnectGatewayId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directConnectGatewayOwnerAccount")
    public String directConnectGatewayOwnerAccount;
    public DirectConnectGatewayAssociation withDirectConnectGatewayOwnerAccount(String directConnectGatewayOwnerAccount) {
        this.directConnectGatewayOwnerAccount = directConnectGatewayOwnerAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateChangeError")
    public String stateChangeError;
    public DirectConnectGatewayAssociation withStateChangeError(String stateChangeError) {
        this.stateChangeError = stateChangeError;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtualGatewayId")
    public String virtualGatewayId;
    public DirectConnectGatewayAssociation withVirtualGatewayId(String virtualGatewayId) {
        this.virtualGatewayId = virtualGatewayId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtualGatewayOwnerAccount")
    public String virtualGatewayOwnerAccount;
    public DirectConnectGatewayAssociation withVirtualGatewayOwnerAccount(String virtualGatewayOwnerAccount) {
        this.virtualGatewayOwnerAccount = virtualGatewayOwnerAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtualGatewayRegion")
    public String virtualGatewayRegion;
    public DirectConnectGatewayAssociation withVirtualGatewayRegion(String virtualGatewayRegion) {
        this.virtualGatewayRegion = virtualGatewayRegion;
        return this;
    }
    
}
