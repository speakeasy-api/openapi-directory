<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PutV2MeetingsSettingsIdJsonRequestBody
{
    /**
     * Allow other team members to schedule on you behalf.
     * 
     * @var ?bool $allowBookingOnBehalf
     */
	#[SpeakeasyMetadata('form:name=allow_booking_on_behalf')]
    public ?bool $allowBookingOnBehalf = null;
    
    /**
     * Allow team members to insert available time outside your working hours.
     * 
     * @var ?bool $allowBookingOvertime
     */
	#[SpeakeasyMetadata('form:name=allow_booking_overtime')]
    public ?bool $allowBookingOvertime = null;
    
    /**
     * Allow team members to double book events on your calendar.
     * 
     * @var ?bool $allowEventOverlap
     */
	#[SpeakeasyMetadata('form:name=allow_event_overlap')]
    public ?bool $allowEventOverlap = null;
    
    /**
     * The number of days out the user allows a prospect to schedule a meeting
     * 
     * @var ?int $availabilityLimit
     */
	#[SpeakeasyMetadata('form:name=availability_limit')]
    public ?int $availabilityLimit = null;
    
    /**
     * If Availability Limits have been turned on
     * 
     * @var ?bool $availabilityLimitEnabled
     */
	#[SpeakeasyMetadata('form:name=availability_limit_enabled')]
    public ?bool $availabilityLimitEnabled = null;
    
    /**
     * Default buffer duration in minutes set by a user
     * 
     * @var ?int $bufferTimeDuration
     */
	#[SpeakeasyMetadata('form:name=buffer_time_duration')]
    public ?int $bufferTimeDuration = null;
    
    /**
     * Calendar type
     * 
     * @var ?string $calendarType
     */
	#[SpeakeasyMetadata('form:name=calendar_type')]
    public ?string $calendarType = null;
    
    /**
     * Default meeting length in minutes set by the user
     * 
     * @var ?int $defaultMeetingLength
     */
	#[SpeakeasyMetadata('form:name=default_meeting_length')]
    public ?int $defaultMeetingLength = null;
    
    /**
     * Default description of the meeting
     * 
     * @var ?string $description
     */
	#[SpeakeasyMetadata('form:name=description')]
    public ?string $description = null;
    
    /**
     * Determines if a user enabled Calendar Sync feature
     * 
     * @var ?bool $enableCalendarSync
     */
	#[SpeakeasyMetadata('form:name=enable_calendar_sync')]
    public ?bool $enableCalendarSync = null;
    
    /**
     * Determines if location will be filled via third-party service (Zoom, GoToMeeting, etc.)
     * 
     * @var ?bool $enableDynamicLocation
     */
	#[SpeakeasyMetadata('form:name=enable_dynamic_location')]
    public ?bool $enableDynamicLocation = null;
    
    /**
     * Default location of the meeting
     * 
     * @var ?string $location
     */
	#[SpeakeasyMetadata('form:name=location')]
    public ?string $location = null;
    
    /**
     * Determines if the user lost calendar connection
     * 
     * @var ?bool $primaryCalendarConnectionFailed
     */
	#[SpeakeasyMetadata('form:name=primary_calendar_connection_failed')]
    public ?bool $primaryCalendarConnectionFailed = null;
    
    /**
     * ID of the primary calendar
     * 
     * @var ?string $primaryCalendarId
     */
	#[SpeakeasyMetadata('form:name=primary_calendar_id')]
    public ?string $primaryCalendarId = null;
    
    /**
     * Display name of the primary calendar
     * 
     * @var ?string $primaryCalendarName
     */
	#[SpeakeasyMetadata('form:name=primary_calendar_name')]
    public ?string $primaryCalendarName = null;
    
    /**
     * Determines if meetings are scheduled with a 15 minute buffer between them
     * 
     * @var ?bool $scheduleBufferEnabled
     */
	#[SpeakeasyMetadata('form:name=schedule_buffer_enabled')]
    public ?bool $scheduleBufferEnabled = null;
    
    /**
     * The number of hours in advance a user requires someone to a book a meeting with them
     * 
     * @var ?int $scheduleDelay
     */
	#[SpeakeasyMetadata('form:name=schedule_delay')]
    public ?int $scheduleDelay = null;
    
    /**
     * Allow team members to see the details of events on your calendar.
     * 
     * @var ?bool $shareEventDetail
     */
	#[SpeakeasyMetadata('form:name=share_event_detail')]
    public ?bool $shareEventDetail = null;
    
    /**
     * Time zone for current calendar
     * 
     * @var ?string $timeZone
     */
	#[SpeakeasyMetadata('form:name=time_zone')]
    public ?string $timeZone = null;
    
    /**
     * Times available set by a user that can be used to book meetings
     * 
     * @var ?array<string, mixed> $timesAvailable
     */
	#[SpeakeasyMetadata('form:name=times_available,json=true')]
    public ?array $timesAvailable = null;
    
    /**
     * Default title of the meeting
     * 
     * @var ?string $title
     */
	#[SpeakeasyMetadata('form:name=title')]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->allowBookingOnBehalf = null;
		$this->allowBookingOvertime = null;
		$this->allowEventOverlap = null;
		$this->availabilityLimit = null;
		$this->availabilityLimitEnabled = null;
		$this->bufferTimeDuration = null;
		$this->calendarType = null;
		$this->defaultMeetingLength = null;
		$this->description = null;
		$this->enableCalendarSync = null;
		$this->enableDynamicLocation = null;
		$this->location = null;
		$this->primaryCalendarConnectionFailed = null;
		$this->primaryCalendarId = null;
		$this->primaryCalendarName = null;
		$this->scheduleBufferEnabled = null;
		$this->scheduleDelay = null;
		$this->shareEventDetail = null;
		$this->timeZone = null;
		$this->timesAvailable = null;
		$this->title = null;
	}
}
