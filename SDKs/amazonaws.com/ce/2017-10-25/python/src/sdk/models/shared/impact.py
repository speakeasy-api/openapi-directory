"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Impact:
    r"""The dollar value of the anomaly."""
    
    max_impact: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxImpact') }})  
    total_actual_spend: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalActualSpend'), 'exclude': lambda f: f is None }})  
    total_expected_spend: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalExpectedSpend'), 'exclude': lambda f: f is None }})  
    total_impact: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalImpact'), 'exclude': lambda f: f is None }})  
    total_impact_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalImpactPercentage'), 'exclude': lambda f: f is None }})  
    