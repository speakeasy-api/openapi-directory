/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class LegalEntityAssociation {
    /**
     * The unique identifier of another legal entity with which the `legalEntityId` is associated. When the `legalEntityId` is associated to legal entities other than the current one, the response returns all the associations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatorId")
    public String associatorId;

    public LegalEntityAssociation withAssociatorId(String associatorId) {
        this.associatorId = associatorId;
        return this;
    }
    
    /**
     * The legal entity type of associated legal entity. 
     * 
     * For example, **organization**, **soleProprietorship** or **individual**. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityType")
    public String entityType;

    public LegalEntityAssociation withEntityType(String entityType) {
        this.entityType = entityType;
        return this;
    }
    
    /**
     * The individual's job title if the `type` is **uboThroughControl** or **signatory**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobTitle")
    public String jobTitle;

    public LegalEntityAssociation withJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
        return this;
    }
    
    /**
     * The unique identifier of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
     */
    @JsonProperty("legalEntityId")
    public String legalEntityId;

    public LegalEntityAssociation withLegalEntityId(String legalEntityId) {
        this.legalEntityId = legalEntityId;
        return this;
    }
    
    /**
     * The name of the associated [legal entity](https://docs.adyen.com/api-explorer/legalentity/latest/post/legalEntities#responses-200-id).
     * 
     * - For **individual**, `name.firstName` and `name.lastName`.
     * - For **organization**, `legalName`.
     * - For **soleProprietorship**, `name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public LegalEntityAssociation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Defines the relationship of the legal entity to the current legal entity. 
     * 
     * Possible values for organizations: **uboThroughOwnership**, **uboThroughControl**, **signatory**, or **ultimateParentCompany**. 
     * 
     * Possible values for sole proprietorships: **soleProprietorship**. 
     */
    @JsonProperty("type")
    public LegalEntityAssociationTypeEnum type;

    public LegalEntityAssociation withType(LegalEntityAssociationTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public LegalEntityAssociation(@JsonProperty("legalEntityId") String legalEntityId, @JsonProperty("type") LegalEntityAssociationTypeEnum type) {
        this.legalEntityId = legalEntityId;
        this.type = type;
  }
}
