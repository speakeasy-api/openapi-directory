// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListFiltersRequestBodyActionEnum - The action the filter applies to matched findings.
type ListFiltersRequestBodyActionEnum string

const (
	ListFiltersRequestBodyActionEnumNone     ListFiltersRequestBodyActionEnum = "NONE"
	ListFiltersRequestBodyActionEnumSuppress ListFiltersRequestBodyActionEnum = "SUPPRESS"
)

func (e *ListFiltersRequestBodyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NONE":
		fallthrough
	case "SUPPRESS":
		*e = ListFiltersRequestBodyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFiltersRequestBodyActionEnum: %s", s)
	}
}

type ListFiltersRequestBody struct {
	// The action the filter applies to matched findings.
	Action *ListFiltersRequestBodyActionEnum `json:"action,omitempty"`
	// The Amazon resource number (ARN) of the filter.
	Arns []string `json:"arns,omitempty"`
	// The maximum number of results to return in the response.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// A token to use for paginating results that are returned in the response. Set the value of this parameter to null for the first request to a list action. For subsequent calls, use the <code>NextToken</code> value returned from the previous request to continue listing results after the first page.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListFiltersRequest struct {
	RequestBody       ListFiltersRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListFiltersResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListFiltersResponse *shared.ListFiltersResponse
	StatusCode          int
	RawResponse         *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
