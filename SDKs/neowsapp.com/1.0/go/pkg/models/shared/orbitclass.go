// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OrbitClassOrbitClassTypeEnum string

const (
	OrbitClassOrbitClassTypeEnumIeo OrbitClassOrbitClassTypeEnum = "IEO"
	OrbitClassOrbitClassTypeEnumAte OrbitClassOrbitClassTypeEnum = "ATE"
	OrbitClassOrbitClassTypeEnumApo OrbitClassOrbitClassTypeEnum = "APO"
	OrbitClassOrbitClassTypeEnumAmo OrbitClassOrbitClassTypeEnum = "AMO"
	OrbitClassOrbitClassTypeEnumMca OrbitClassOrbitClassTypeEnum = "MCA"
	OrbitClassOrbitClassTypeEnumImb OrbitClassOrbitClassTypeEnum = "IMB"
	OrbitClassOrbitClassTypeEnumMba OrbitClassOrbitClassTypeEnum = "MBA"
	OrbitClassOrbitClassTypeEnumOmb OrbitClassOrbitClassTypeEnum = "OMB"
	OrbitClassOrbitClassTypeEnumTjn OrbitClassOrbitClassTypeEnum = "TJN"
	OrbitClassOrbitClassTypeEnumCen OrbitClassOrbitClassTypeEnum = "CEN"
	OrbitClassOrbitClassTypeEnumTno OrbitClassOrbitClassTypeEnum = "TNO"
	OrbitClassOrbitClassTypeEnumPaa OrbitClassOrbitClassTypeEnum = "PAA"
	OrbitClassOrbitClassTypeEnumHya OrbitClassOrbitClassTypeEnum = "HYA"
	OrbitClassOrbitClassTypeEnumHyp OrbitClassOrbitClassTypeEnum = "HYP"
	OrbitClassOrbitClassTypeEnumPar OrbitClassOrbitClassTypeEnum = "PAR"
	OrbitClassOrbitClassTypeEnumCom OrbitClassOrbitClassTypeEnum = "COM"
	OrbitClassOrbitClassTypeEnumJfc OrbitClassOrbitClassTypeEnum = "JFC"
	OrbitClassOrbitClassTypeEnumHtc OrbitClassOrbitClassTypeEnum = "HTC"
	OrbitClassOrbitClassTypeEnumEtc OrbitClassOrbitClassTypeEnum = "ETC"
	OrbitClassOrbitClassTypeEnumCtc OrbitClassOrbitClassTypeEnum = "CTC"
	OrbitClassOrbitClassTypeEnumJFc OrbitClassOrbitClassTypeEnum = "JFc"
)

func (e OrbitClassOrbitClassTypeEnum) ToPointer() *OrbitClassOrbitClassTypeEnum {
	return &e
}

func (e *OrbitClassOrbitClassTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IEO":
		fallthrough
	case "ATE":
		fallthrough
	case "APO":
		fallthrough
	case "AMO":
		fallthrough
	case "MCA":
		fallthrough
	case "IMB":
		fallthrough
	case "MBA":
		fallthrough
	case "OMB":
		fallthrough
	case "TJN":
		fallthrough
	case "CEN":
		fallthrough
	case "TNO":
		fallthrough
	case "PAA":
		fallthrough
	case "HYA":
		fallthrough
	case "HYP":
		fallthrough
	case "PAR":
		fallthrough
	case "COM":
		fallthrough
	case "JFC":
		fallthrough
	case "HTC":
		fallthrough
	case "ETC":
		fallthrough
	case "CTC":
		fallthrough
	case "JFc":
		*e = OrbitClassOrbitClassTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrbitClassOrbitClassTypeEnum: %v", v)
	}
}

type OrbitClass struct {
	OrbitClassDescription *string                       `json:"orbit_class_description,omitempty"`
	OrbitClassRange       *string                       `json:"orbit_class_range,omitempty"`
	OrbitClassType        *OrbitClassOrbitClassTypeEnum `json:"orbit_class_type,omitempty"`
}
