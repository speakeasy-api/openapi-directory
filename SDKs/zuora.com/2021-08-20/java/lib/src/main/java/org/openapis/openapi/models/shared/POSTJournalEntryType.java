/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * POSTJournalEntryType - Container for custom fields of a Journal Entry object.
 * 
 */
public class POSTJournalEntryType {
    /**
     * Name of the accounting period. The open-ended accounting period is named `Open-Ended`.
     * 
     */
    @JsonProperty("accountingPeriodName")
    public String accountingPeriodName;
    public POSTJournalEntryType withAccountingPeriodName(String accountingPeriodName) {
        this.accountingPeriodName = accountingPeriodName;
        return this;
    }
    
    /**
     * The type of currency used. Currency must be active.
     * 
     */
    @JsonProperty("currency")
    public String currency;
    public POSTJournalEntryType withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Date of the journal entry.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("journalEntryDate")
    public LocalDate journalEntryDate;
    public POSTJournalEntryType withJournalEntryDate(LocalDate journalEntryDate) {
        this.journalEntryDate = journalEntryDate;
        return this;
    }
    
    /**
     * Key name that represents the list of journal entry items.
     * 
     */
    @JsonProperty("journalEntryItems")
    public POSTJournalEntryItemType[] journalEntryItems;
    public POSTJournalEntryType withJournalEntryItems(POSTJournalEntryItemType[] journalEntryItems) {
        this.journalEntryItems = journalEntryItems;
        return this;
    }
    
    /**
     * The number associated with the revenue event.
     * 
     * Character limit: 2,000
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public POSTJournalEntryType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * List of segments that apply to the summary journal entry.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segments")
    public POSTJournalEntrySegmentType[] segments;
    public POSTJournalEntryType withSegments(POSTJournalEntrySegmentType[] segments) {
        this.segments = segments;
        return this;
    }
    
    /**
     * Status shows whether the journal entry has been transferred to an accounting system.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferredToAccounting")
    public POSTJournalEntryTypeTransferredToAccountingEnum transferredToAccounting;
    public POSTJournalEntryType withTransferredToAccounting(POSTJournalEntryTypeTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
}
