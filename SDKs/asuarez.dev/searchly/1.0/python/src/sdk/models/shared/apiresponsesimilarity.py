"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResponseSimilarityResponseSimilarityList:
    r"""Song similarity item."""
    
    artist_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artist_name'), 'exclude': lambda f: f is None }})
    r"""Artist's song name."""  
    artist_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artist_url'), 'exclude': lambda f: f is None }})
    r"""Artist URL."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Song internal identifier."""  
    index_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index_id'), 'exclude': lambda f: f is None }})
    r"""Index internal identifier."""  
    lyrics: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lyrics'), 'exclude': lambda f: f is None }})
    r"""Song lyrics."""  
    percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage'), 'exclude': lambda f: f is None }})
    r"""Similarity percentage."""  
    song_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('song_name'), 'exclude': lambda f: f is None }})
    r"""Song name."""  
    song_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('song_url'), 'exclude': lambda f: f is None }})
    r"""Song URL."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResponseSimilarityResponse:
    r"""Contains the response data if the request was successful."""
    
    similarity_list: Optional[list[APIResponseSimilarityResponseSimilarityList]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('similarity_list'), 'exclude': lambda f: f is None }})
    r"""Contains all the similarity items representing songs."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResponseSimilarity:
    r"""Standard SearchLy API v1 JSON response. You should check the `error` attribute to determine if there was an error."""
    
    error: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Whether or not the request was successfully processed or not."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Error message if the request was unsuccessful."""  
    response: Optional[APIResponseSimilarityResponse] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('response'), 'exclude': lambda f: f is None }})
    r"""Contains the response data if the request was successful."""  
    