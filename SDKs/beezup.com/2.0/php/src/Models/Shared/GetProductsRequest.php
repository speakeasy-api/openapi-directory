<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetProductsRequest - The request message to get products based on these filters
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetProductsRequest
{
    /**
     * The catalog category path
     * 
     * @var ?array<string> $categoryPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('categoryPath')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $categoryPath = null;
    
    /**
     * $columnIdList
     * 
     * @var ?array<string> $columnIdList
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnIdList')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $columnIdList = null;
    
    /**
     * Search for product by ean
     * 
     * @var ?string $ean
     */
	#[\JMS\Serializer\Annotation\SerializedName('ean')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ean = null;
    
    /**
     * Search for existing products or not. If null you will received both.
     * 
     * @var ?bool $exists
     */
	#[\JMS\Serializer\Annotation\SerializedName('exists')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $exists = null;
    
    /**
     * Search for product by mpn
     * 
     * @var ?string $mpn
     */
	#[\JMS\Serializer\Annotation\SerializedName('mpn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mpn = null;
    
    /**
     * The catalog column identifier (catalog or custom column)
     * 
     * @var ?string $orderByCatalogColumnId
     */
	#[\JMS\Serializer\Annotation\SerializedName('orderByCatalogColumnId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orderByCatalogColumnId = null;
    
    /**
     * Indicates the page number
     * 
     * @var int $pageNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pageNumber;
    
    /**
     * Indicate the item count per page
     * 
     * @var int $pageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $pageSize;
    
    /**
     * Filter with a list of product identifier
     * 
     * @var ?array<string> $productIdList
     */
	#[\JMS\Serializer\Annotation\SerializedName('productIdList')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productIdList = null;
    
    /**
     * Search for product by sku
     * 
     * @var ?string $sku
     */
	#[\JMS\Serializer\Annotation\SerializedName('sku')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sku = null;
    
    /**
     * Search for products containing this title
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Do not retrieve sub categories. By default, this value is set to false
     * 
     * @var ?bool $withoutSubCategories
     */
	#[\JMS\Serializer\Annotation\SerializedName('withoutSubCategories')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $withoutSubCategories = null;
    
	public function __construct()
	{
		$this->categoryPath = null;
		$this->columnIdList = null;
		$this->ean = null;
		$this->exists = null;
		$this->mpn = null;
		$this->orderByCatalogColumnId = null;
		$this->pageNumber = 0;
		$this->pageSize = 0;
		$this->productIdList = null;
		$this->sku = null;
		$this->title = null;
		$this->withoutSubCategories = null;
	}
}
