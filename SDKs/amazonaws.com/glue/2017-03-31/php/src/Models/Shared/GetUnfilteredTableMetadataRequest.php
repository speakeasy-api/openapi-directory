<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GetUnfilteredTableMetadataRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('AuditContext')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AuditContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditContext $auditContext = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CatalogId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $catalogId;
    
	#[\JMS\Serializer\Annotation\SerializedName('DatabaseName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $databaseName;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * $supportedPermissionTypes
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\PermissionTypeEnum> $supportedPermissionTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('SupportedPermissionTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\PermissionTypeEnum>>')]
    public array $supportedPermissionTypes;
    
	public function __construct()
	{
		$this->auditContext = null;
		$this->catalogId = "";
		$this->databaseName = "";
		$this->name = "";
		$this->supportedPermissionTypes = [];
	}
}
