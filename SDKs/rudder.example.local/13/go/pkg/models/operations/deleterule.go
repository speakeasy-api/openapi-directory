// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteRulePathParams struct {
	// Id of the target rule
	RuleID string `pathParam:"style=simple,explode=false,name=ruleId"`
}

type DeleteRuleRequest struct {
	PathParams DeleteRulePathParams
}

// DeleteRule200ApplicationJSONActionEnum - The id of the action
type DeleteRule200ApplicationJSONActionEnum string

const (
	DeleteRule200ApplicationJSONActionEnumDeleteRule DeleteRule200ApplicationJSONActionEnum = "deleteRule"
)

func (e *DeleteRule200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleteRule":
		*e = DeleteRule200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRule200ApplicationJSONActionEnum: %s", s)
	}
}

type DeleteRule200ApplicationJSONData struct {
	Rules []shared.Rule `json:"rules"`
}

// DeleteRule200ApplicationJSONResultEnum - Result of the request
type DeleteRule200ApplicationJSONResultEnum string

const (
	DeleteRule200ApplicationJSONResultEnumSuccess DeleteRule200ApplicationJSONResultEnum = "success"
	DeleteRule200ApplicationJSONResultEnumError   DeleteRule200ApplicationJSONResultEnum = "error"
)

func (e *DeleteRule200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = DeleteRule200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRule200ApplicationJSONResultEnum: %s", s)
	}
}

// DeleteRule200ApplicationJSON - Rules information
type DeleteRule200ApplicationJSON struct {
	// The id of the action
	Action DeleteRule200ApplicationJSONActionEnum `json:"action"`
	Data   DeleteRule200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result DeleteRule200ApplicationJSONResultEnum `json:"result"`
}

type DeleteRuleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Rules information
	DeleteRule200ApplicationJSONObject *DeleteRule200ApplicationJSON
}
