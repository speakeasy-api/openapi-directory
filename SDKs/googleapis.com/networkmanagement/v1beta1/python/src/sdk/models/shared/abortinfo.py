"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AbortInfoCauseEnum(str, Enum):
    r"""Causes that the analysis is aborted."""
    CAUSE_UNSPECIFIED = 'CAUSE_UNSPECIFIED'
    UNKNOWN_NETWORK = 'UNKNOWN_NETWORK'
    UNKNOWN_IP = 'UNKNOWN_IP'
    UNKNOWN_PROJECT = 'UNKNOWN_PROJECT'
    PERMISSION_DENIED = 'PERMISSION_DENIED'
    NO_SOURCE_LOCATION = 'NO_SOURCE_LOCATION'
    INVALID_ARGUMENT = 'INVALID_ARGUMENT'
    NO_EXTERNAL_IP = 'NO_EXTERNAL_IP'
    UNINTENDED_DESTINATION = 'UNINTENDED_DESTINATION'
    TRACE_TOO_LONG = 'TRACE_TOO_LONG'
    INTERNAL_ERROR = 'INTERNAL_ERROR'
    SOURCE_ENDPOINT_NOT_FOUND = 'SOURCE_ENDPOINT_NOT_FOUND'
    MISMATCHED_SOURCE_NETWORK = 'MISMATCHED_SOURCE_NETWORK'
    DESTINATION_ENDPOINT_NOT_FOUND = 'DESTINATION_ENDPOINT_NOT_FOUND'
    MISMATCHED_DESTINATION_NETWORK = 'MISMATCHED_DESTINATION_NETWORK'
    UNSUPPORTED = 'UNSUPPORTED'
    MISMATCHED_IP_VERSION = 'MISMATCHED_IP_VERSION'
    GKE_KONNECTIVITY_PROXY_UNSUPPORTED = 'GKE_KONNECTIVITY_PROXY_UNSUPPORTED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AbortInfo:
    r"""Details of the final state \\"abort\\" and associated resource."""
    
    cause: Optional[AbortInfoCauseEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cause'), 'exclude': lambda f: f is None }})
    r"""Causes that the analysis is aborted."""  
    projects_missing_permission: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectsMissingPermission'), 'exclude': lambda f: f is None }})
    r"""List of project IDs that the user has specified in the request but does not have permission to access network configs. Analysis is aborted in this case with the PERMISSION_DENIED cause."""  
    resource_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceUri'), 'exclude': lambda f: f is None }})
    r"""URI of the resource that caused the abort."""  
    