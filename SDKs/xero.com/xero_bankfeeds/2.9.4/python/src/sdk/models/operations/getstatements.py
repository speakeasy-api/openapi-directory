"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import statements as shared_statements
from typing import Optional


@dataclasses.dataclass
class GetStatementsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetStatementsRequest:
    
    xero_tenant_id: str = dataclasses.field(metadata={'header': { 'field_name': 'Xero-Tenant-Id', 'style': 'simple', 'explode': False }})
    r"""Xero identifier for Tenant"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""unique id for single object"""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""Page size which specifies how many records per page will be returned (default 10). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100."""  
    xero_application_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Xero-Application-Id', 'style': 'simple', 'explode': False }})  
    xero_user_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Xero-User-Id', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GetStatementsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    statements: Optional[shared_statements.Statements] = dataclasses.field(default=None)
    r"""success returns Statements array of objects response"""  
    