/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Status } from "./status";
import { VmUtilizationInfo, VmUtilizationInfoInput } from "./vmutilizationinfo";
import { Expose, Type } from "class-transformer";

/**
 * Output only. Current state of the report.
 */
export enum UtilizationReportStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Succeeded = "SUCCEEDED",
  Failed = "FAILED",
}

/**
 * Time frame of the report.
 */
export enum UtilizationReportTimeFrameEnum {
  TimeFrameUnspecified = "TIME_FRAME_UNSPECIFIED",
  Week = "WEEK",
  Month = "MONTH",
  Year = "YEAR",
}

/**
 * Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.
 */
export class UtilizationReport extends SpeakeasyBase {
  /**
   * Output only. The time the report was created (this refers to the time of the request, not the time the report creation completed).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * The report display name, as assigned by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * Output only. The point in time when the time frame ends. Notice that the time frame is counted backwards. For instance if the "frame_end_time" value is 2021/01/20 and the time frame is WEEK then the report covers the week between 2021/01/20 and 2021/01/14.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frameEndTime" })
  frameEndTime?: string;

  /**
   * Output only. The report unique name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. Current state of the report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: UtilizationReportStateEnum;

  /**
   * Output only. The time the state was last set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateTime" })
  stateTime?: string;

  /**
   * Time frame of the report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeFrame" })
  timeFrame?: UtilizationReportTimeFrameEnum;

  /**
   * Output only. Total number of VMs included in the report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmCount" })
  vmCount?: number;

  /**
   * List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
   */
  @SpeakeasyMetadata({ elemType: VmUtilizationInfo })
  @Expose({ name: "vms" })
  @Type(() => VmUtilizationInfo)
  vms?: VmUtilizationInfo[];
}

/**
 * Utilization report details the utilization (CPU, memory, etc.) of selected source VMs.
 */
export class UtilizationReportInput extends SpeakeasyBase {
  /**
   * The report display name, as assigned by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => Status)
  error?: Status;

  /**
   * Time frame of the report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeFrame" })
  timeFrame?: UtilizationReportTimeFrameEnum;

  /**
   * List of utilization information per VM. When sent as part of the request, the "vm_id" field is used in order to specify which VMs to include in the report. In that case all other fields are ignored.
   */
  @SpeakeasyMetadata({ elemType: VmUtilizationInfoInput })
  @Expose({ name: "vms" })
  @Type(() => VmUtilizationInfoInput)
  vms?: VmUtilizationInfoInput[];
}
