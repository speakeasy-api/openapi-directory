<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleChromeManagementV1TelemetryEvent - Telemetry data reported by a managed device.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleChromeManagementV1TelemetryEvent
{
    /**
     * `TelemetryAudioSevereUnderrunEvent` is triggered when a audio devices run out of buffer data for more than 5 seconds.
     * 
     * @var ?array<string, mixed> $audioSevereUnderrunEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('audioSevereUnderrunEvent')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $audioSevereUnderrunEvent = null;
    
    /**
     * Information about a device associated with telemetry data.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryDeviceInfo $device
     */
	#[\JMS\Serializer\Annotation\SerializedName('device')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryDeviceInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TelemetryDeviceInfo $device = null;
    
    /**
     * The event type of the current event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryEventEventTypeEnum $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryEventEventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TelemetryEventEventTypeEnum $eventType = null;
    
    /**
     * Https latency routine is run periodically and `TelemetryHttpsLatencyChangeEvent` is triggered if a latency problem was detected or if the device has recovered from a latency problem..
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent $httpsLatencyChangeEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpsLatencyChangeEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TelemetryHttpsLatencyChangeEvent $httpsLatencyChangeEvent = null;
    
    /**
     * Output only. Resource name of the event.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Timestamp that represents when the event was reported.
     * 
     * @var ?string $reportTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportTime = null;
    
    /**
     * `TelemetryUsbPeripheralsEvent` is triggered USB devices are either added or removed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryUsbPeripheralsEvent $usbPeripheralsEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('usbPeripheralsEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryUsbPeripheralsEvent')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TelemetryUsbPeripheralsEvent $usbPeripheralsEvent = null;
    
    /**
     * Information about a user associated with telemetry data.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryUserInfo $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleChromeManagementV1TelemetryUserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleChromeManagementV1TelemetryUserInfo $user = null;
    
	public function __construct()
	{
		$this->audioSevereUnderrunEvent = null;
		$this->device = null;
		$this->eventType = null;
		$this->httpsLatencyChangeEvent = null;
		$this->name = null;
		$this->reportTime = null;
		$this->usbPeripheralsEvent = null;
		$this->user = null;
	}
}
