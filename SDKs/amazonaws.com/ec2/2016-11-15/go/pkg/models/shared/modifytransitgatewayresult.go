// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum - Indicates whether attachment requests are automatically accepted.
type ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum string

const (
	ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnumEnable  ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = "enable"
	ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnumDisable ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = "disable"
)

func (e *ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum - Indicates whether resource attachments are automatically associated with the default association route table.
type ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum string

const (
	ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnumEnable  ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = "enable"
	ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnumDisable ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = "disable"
)

func (e *ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum - Indicates whether resource attachments automatically propagate routes to the default propagation route table.
type ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum string

const (
	ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnumEnable  ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = "enable"
	ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnumDisable ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = "disable"
)

func (e *ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum - Indicates whether DNS support is enabled.
type ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum string

const (
	ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnumEnable  ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum = "enable"
	ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnumDisable ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum = "disable"
)

func (e *ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum - Indicates whether multicast is enabled on the transit gateway
type ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum string

const (
	ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnumEnable  ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = "enable"
	ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnumDisable ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = "disable"
)

func (e *ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum - Indicates whether Equal Cost Multipath Protocol support is enabled.
type ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum string

const (
	ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnumEnable  ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = "enable"
	ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnumDisable ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = "disable"
)

func (e *ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayOptions - The transit gateway options.
type ModifyTransitGatewayResultTransitGatewayOptions struct {
	AmazonSideAsn                  *int64
	AssociationDefaultRouteTableID *string
	AutoAcceptSharedAttachments    *ModifyTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum
	DefaultRouteTableAssociation   *ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum
	DefaultRouteTablePropagation   *ModifyTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum
	DNSSupport                     *ModifyTransitGatewayResultTransitGatewayOptionsDNSSupportEnum
	MulticastSupport               *ModifyTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum
	PropagationDefaultRouteTableID *string
	TransitGatewayCidrBlocks       []string
	VpnEcmpSupport                 *ModifyTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum
}

// ModifyTransitGatewayResultTransitGatewayStateEnum - The state of the transit gateway.
type ModifyTransitGatewayResultTransitGatewayStateEnum string

const (
	ModifyTransitGatewayResultTransitGatewayStateEnumPending   ModifyTransitGatewayResultTransitGatewayStateEnum = "pending"
	ModifyTransitGatewayResultTransitGatewayStateEnumAvailable ModifyTransitGatewayResultTransitGatewayStateEnum = "available"
	ModifyTransitGatewayResultTransitGatewayStateEnumModifying ModifyTransitGatewayResultTransitGatewayStateEnum = "modifying"
	ModifyTransitGatewayResultTransitGatewayStateEnumDeleting  ModifyTransitGatewayResultTransitGatewayStateEnum = "deleting"
	ModifyTransitGatewayResultTransitGatewayStateEnumDeleted   ModifyTransitGatewayResultTransitGatewayStateEnum = "deleted"
)

func (e *ModifyTransitGatewayResultTransitGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyTransitGatewayResultTransitGatewayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyTransitGatewayResultTransitGatewayStateEnum: %s", s)
	}
}

// ModifyTransitGatewayResultTransitGatewayTags - Describes a tag.
type ModifyTransitGatewayResultTransitGatewayTags struct {
	Key   *string
	Value *string
}

// ModifyTransitGatewayResultTransitGateway - Information about the transit gateway.
type ModifyTransitGatewayResultTransitGateway struct {
	CreationTime      *time.Time
	Description       *string
	Options           *ModifyTransitGatewayResultTransitGatewayOptions
	OwnerID           *string
	State             *ModifyTransitGatewayResultTransitGatewayStateEnum
	Tags              []ModifyTransitGatewayResultTransitGatewayTags
	TransitGatewayArn *string
	TransitGatewayID  *string
}

// ModifyTransitGatewayResult - Success
type ModifyTransitGatewayResult struct {
	TransitGateway *ModifyTransitGatewayResultTransitGateway
}
