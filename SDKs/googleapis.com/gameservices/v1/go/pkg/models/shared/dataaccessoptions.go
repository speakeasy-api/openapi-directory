// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DataAccessOptionsLogModeEnum string

const (
	DataAccessOptionsLogModeEnumLogModeUnspecified DataAccessOptionsLogModeEnum = "LOG_MODE_UNSPECIFIED"
	DataAccessOptionsLogModeEnumLogFailClosed      DataAccessOptionsLogModeEnum = "LOG_FAIL_CLOSED"
)

func (e *DataAccessOptionsLogModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOG_MODE_UNSPECIFIED":
		fallthrough
	case "LOG_FAIL_CLOSED":
		*e = DataAccessOptionsLogModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataAccessOptionsLogModeEnum: %s", s)
	}
}

// DataAccessOptions - Write a Data Access (Gin) log
type DataAccessOptions struct {
	LogMode *DataAccessOptionsLogModeEnum `json:"logMode,omitempty"`
}
