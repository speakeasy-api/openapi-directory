"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderChangeMessage = exports.OrderChangeMessageSegmentTypeEnum = exports.OrderChangeMessageCtEnum = void 0;
var utils_1 = require("../../../internal/utils");
var ordermarketchange_1 = require("./ordermarketchange");
var class_transformer_1 = require("class-transformer");
/**
 * Change Type - set to indicate the type of change - if null this is a delta)
 */
var OrderChangeMessageCtEnum;
(function (OrderChangeMessageCtEnum) {
    OrderChangeMessageCtEnum["SubImage"] = "SUB_IMAGE";
    OrderChangeMessageCtEnum["ResubDelta"] = "RESUB_DELTA";
    OrderChangeMessageCtEnum["Heartbeat"] = "HEARTBEAT";
})(OrderChangeMessageCtEnum = exports.OrderChangeMessageCtEnum || (exports.OrderChangeMessageCtEnum = {}));
/**
 * Segment Type - if the change is split into multiple segments, this denotes the beginning and end of a change, and segments in between. Will be null if data is not segmented
 */
var OrderChangeMessageSegmentTypeEnum;
(function (OrderChangeMessageSegmentTypeEnum) {
    OrderChangeMessageSegmentTypeEnum["SegStart"] = "SEG_START";
    OrderChangeMessageSegmentTypeEnum["Seg"] = "SEG";
    OrderChangeMessageSegmentTypeEnum["SegEnd"] = "SEG_END";
})(OrderChangeMessageSegmentTypeEnum = exports.OrderChangeMessageSegmentTypeEnum || (exports.OrderChangeMessageSegmentTypeEnum = {}));
var OrderChangeMessage = /** @class */ (function (_super) {
    __extends(OrderChangeMessage, _super);
    function OrderChangeMessage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clk" }),
        __metadata("design:type", String)
    ], OrderChangeMessage.prototype, "clk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "conflateMs" }),
        __metadata("design:type", Number)
    ], OrderChangeMessage.prototype, "conflateMs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ct" }),
        __metadata("design:type", String)
    ], OrderChangeMessage.prototype, "ct", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "heartbeatMs" }),
        __metadata("design:type", Number)
    ], OrderChangeMessage.prototype, "heartbeatMs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], OrderChangeMessage.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "initialClk" }),
        __metadata("design:type", String)
    ], OrderChangeMessage.prototype, "initialClk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ordermarketchange_1.OrderMarketChange }),
        (0, class_transformer_1.Expose)({ name: "oc" }),
        (0, class_transformer_1.Type)(function () { return ordermarketchange_1.OrderMarketChange; }),
        __metadata("design:type", Array)
    ], OrderChangeMessage.prototype, "oc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "op" }),
        __metadata("design:type", String)
    ], OrderChangeMessage.prototype, "op", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pt" }),
        __metadata("design:type", Number)
    ], OrderChangeMessage.prototype, "pt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "segmentType" }),
        __metadata("design:type", String)
    ], OrderChangeMessage.prototype, "segmentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", Number)
    ], OrderChangeMessage.prototype, "status", void 0);
    return OrderChangeMessage;
}(utils_1.SpeakeasyBase));
exports.OrderChangeMessage = OrderChangeMessage;
