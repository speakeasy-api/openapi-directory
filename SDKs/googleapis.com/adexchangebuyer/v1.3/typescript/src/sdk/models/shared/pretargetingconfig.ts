/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class PretargetingConfigDimensions extends SpeakeasyBase {
  /**
   * Height in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: string;

  /**
   * Width in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: string;
}

export class PretargetingConfigExcludedPlacements extends SpeakeasyBase {
  /**
   * The value of the placement. Interpretation depends on the placement type, e.g. URL for a site placement, channel name for a channel placement, app id for a mobile app placement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;

  /**
   * The type of the placement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class PretargetingConfigPlacements extends SpeakeasyBase {
  /**
   * The value of the placement. Interpretation depends on the placement type, e.g. URL for a site placement, channel name for a channel placement, app id for a mobile app placement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;

  /**
   * The type of the placement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Successful response
 */
export class PretargetingConfig extends SpeakeasyBase {
  /**
   * The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingId" })
  billingId?: string;

  /**
   * The config id; generated automatically. Leave this field blank for insert requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configId" })
  configId?: string;

  /**
   * The name of the config. Must be unique. Required for all requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "configName" })
  configName?: string;

  /**
   * List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creativeType" })
  creativeType?: string[];

  /**
   * Requests which allow one of these (width, height) pairs will match. All pairs must be supported ad dimensions.
   */
  @SpeakeasyMetadata({ elemType: PretargetingConfigDimensions })
  @Expose({ name: "dimensions" })
  @Type(() => PretargetingConfigDimensions)
  dimensions?: PretargetingConfigDimensions[];

  /**
   * Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludedContentLabels" })
  excludedContentLabels?: string[];

  /**
   * Requests containing any of these geo criteria ids will not match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludedGeoCriteriaIds" })
  excludedGeoCriteriaIds?: string[];

  /**
   * Requests containing any of these placements will not match.
   */
  @SpeakeasyMetadata({ elemType: PretargetingConfigExcludedPlacements })
  @Expose({ name: "excludedPlacements" })
  @Type(() => PretargetingConfigExcludedPlacements)
  excludedPlacements?: PretargetingConfigExcludedPlacements[];

  /**
   * Requests containing any of these users list ids will not match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludedUserLists" })
  excludedUserLists?: string[];

  /**
   * Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excludedVerticals" })
  excludedVerticals?: string[];

  /**
   * Requests containing any of these geo criteria ids will match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCriteriaIds" })
  geoCriteriaIds?: string[];

  /**
   * Whether this config is active. Required for all requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive?: boolean;

  /**
   * The kind of the resource, i.e. "adexchangebuyer#pretargetingConfig".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Request containing any of these language codes will match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languages" })
  languages?: string[];

  /**
   * The maximum QPS allocated to this pretargeting configuration, used for pretargeting-level QPS limits. By default, this is not set, which indicates that there is no QPS limit at the configuration level (a global or account-level limit may still be imposed).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumQps" })
  maximumQps?: string;

  /**
   * Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mobileCarriers" })
  mobileCarriers?: string[];

  /**
   * Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mobileDevices" })
  mobileDevices?: string[];

  /**
   * Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mobileOperatingSystemVersions" })
  mobileOperatingSystemVersions?: string[];

  /**
   * Requests containing any of these placements will match.
   */
  @SpeakeasyMetadata({ elemType: PretargetingConfigPlacements })
  @Expose({ name: "placements" })
  @Type(() => PretargetingConfigPlacements)
  placements?: PretargetingConfigPlacements[];

  /**
   * Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "platforms" })
  platforms?: string[];

  /**
   * Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supportedCreativeAttributes" })
  supportedCreativeAttributes?: string[];

  /**
   * Requests containing any of these user list ids will match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userLists" })
  userLists?: string[];

  /**
   * Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vendorTypes" })
  vendorTypes?: string[];

  /**
   * Requests containing any of these vertical ids will match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verticals" })
  verticals?: string[];
}
