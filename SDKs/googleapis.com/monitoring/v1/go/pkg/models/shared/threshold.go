// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ThresholdColorEnum - The state color for this threshold. Color is not allowed in a XyChart.
type ThresholdColorEnum string

const (
	ThresholdColorEnumColorUnspecified ThresholdColorEnum = "COLOR_UNSPECIFIED"
	ThresholdColorEnumYellow           ThresholdColorEnum = "YELLOW"
	ThresholdColorEnumRed              ThresholdColorEnum = "RED"
)

func (e ThresholdColorEnum) ToPointer() *ThresholdColorEnum {
	return &e
}

func (e *ThresholdColorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COLOR_UNSPECIFIED":
		fallthrough
	case "YELLOW":
		fallthrough
	case "RED":
		*e = ThresholdColorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThresholdColorEnum: %v", v)
	}
}

// ThresholdDirectionEnum - The direction for the current threshold. Direction is not allowed in a XyChart.
type ThresholdDirectionEnum string

const (
	ThresholdDirectionEnumDirectionUnspecified ThresholdDirectionEnum = "DIRECTION_UNSPECIFIED"
	ThresholdDirectionEnumAbove                ThresholdDirectionEnum = "ABOVE"
	ThresholdDirectionEnumBelow                ThresholdDirectionEnum = "BELOW"
)

func (e ThresholdDirectionEnum) ToPointer() *ThresholdDirectionEnum {
	return &e
}

func (e *ThresholdDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIRECTION_UNSPECIFIED":
		fallthrough
	case "ABOVE":
		fallthrough
	case "BELOW":
		*e = ThresholdDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThresholdDirectionEnum: %v", v)
	}
}

// ThresholdTargetAxisEnum - The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
type ThresholdTargetAxisEnum string

const (
	ThresholdTargetAxisEnumTargetAxisUnspecified ThresholdTargetAxisEnum = "TARGET_AXIS_UNSPECIFIED"
	ThresholdTargetAxisEnumY1                    ThresholdTargetAxisEnum = "Y1"
	ThresholdTargetAxisEnumY2                    ThresholdTargetAxisEnum = "Y2"
)

func (e ThresholdTargetAxisEnum) ToPointer() *ThresholdTargetAxisEnum {
	return &e
}

func (e *ThresholdTargetAxisEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TARGET_AXIS_UNSPECIFIED":
		fallthrough
	case "Y1":
		fallthrough
	case "Y2":
		*e = ThresholdTargetAxisEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ThresholdTargetAxisEnum: %v", v)
	}
}

// Threshold - Defines a threshold for categorizing time series values.
type Threshold struct {
	// The state color for this threshold. Color is not allowed in a XyChart.
	Color *ThresholdColorEnum `json:"color,omitempty"`
	// The direction for the current threshold. Direction is not allowed in a XyChart.
	Direction *ThresholdDirectionEnum `json:"direction,omitempty"`
	// A label for the threshold.
	Label *string `json:"label,omitempty"`
	// The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
	TargetAxis *ThresholdTargetAxisEnum `json:"targetAxis,omitempty"`
	// The value of the threshold. The value should be defined in the native scale of the metric.
	Value *float64 `json:"value,omitempty"`
}
