// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataFilterValueRangeMajorDimensionEnum - The major dimension of the values.
type DataFilterValueRangeMajorDimensionEnum string

const (
	DataFilterValueRangeMajorDimensionEnumDimensionUnspecified DataFilterValueRangeMajorDimensionEnum = "DIMENSION_UNSPECIFIED"
	DataFilterValueRangeMajorDimensionEnumRows                 DataFilterValueRangeMajorDimensionEnum = "ROWS"
	DataFilterValueRangeMajorDimensionEnumColumns              DataFilterValueRangeMajorDimensionEnum = "COLUMNS"
)

func (e *DataFilterValueRangeMajorDimensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = DataFilterValueRangeMajorDimensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataFilterValueRangeMajorDimensionEnum: %s", s)
	}
}

// DataFilterValueRange - A range of values whose location is specified by a DataFilter.
type DataFilterValueRange struct {
	// Filter that describes what data should be selected or returned from a request.
	DataFilter *DataFilter `json:"dataFilter,omitempty"`
	// The major dimension of the values.
	MajorDimension *DataFilterValueRangeMajorDimensionEnum `json:"majorDimension,omitempty"`
	// The data to be written. If the provided values exceed any of the ranges matched by the data filter then the request fails. If the provided values are less than the matched ranges only the specified values are written, existing values in the matched ranges remain unaffected.
	Values [][]interface{} `json:"values,omitempty"`
}
