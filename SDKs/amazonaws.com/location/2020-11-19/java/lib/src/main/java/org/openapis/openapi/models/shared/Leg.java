/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Leg - &lt;p&gt;Contains the calculated route's details for each path between a pair of positions. The number of legs returned corresponds to one fewer than the total number of positions in the request. &lt;/p&gt; &lt;p&gt;For example, a route with a departure position and destination position returns one leg with the positions &lt;a href="https://docs.aws.amazon.com/location/latest/developerguide/snap-to-nearby-road.html"&gt;snapped to a nearby road&lt;/a&gt;:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;StartPosition&lt;/code&gt; is the departure position.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The &lt;code&gt;EndPosition&lt;/code&gt; is the destination position.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;A route with a waypoint between the departure and destination position returns two legs with the positions snapped to a nearby road:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Leg 1: The &lt;code&gt;StartPosition&lt;/code&gt; is the departure position . The &lt;code&gt;EndPosition&lt;/code&gt; is the waypoint positon.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Leg 2: The &lt;code&gt;StartPosition&lt;/code&gt; is the waypoint position. The &lt;code&gt;EndPosition&lt;/code&gt; is the destination position.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
public class Leg {
    @JsonProperty("Distance")
    public Double distance;
    public Leg withDistance(Double distance) {
        this.distance = distance;
        return this;
    }
    
    @JsonProperty("DurationSeconds")
    public Double durationSeconds;
    public Leg withDurationSeconds(Double durationSeconds) {
        this.durationSeconds = durationSeconds;
        return this;
    }
    
    @JsonProperty("EndPosition")
    public Double[] endPosition;
    public Leg withEndPosition(Double[] endPosition) {
        this.endPosition = endPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Geometry")
    public LegGeometry geometry;
    public Leg withGeometry(LegGeometry geometry) {
        this.geometry = geometry;
        return this;
    }
    
    @JsonProperty("StartPosition")
    public Double[] startPosition;
    public Leg withStartPosition(Double[] startPosition) {
        this.startPosition = startPosition;
        return this;
    }
    
    @JsonProperty("Steps")
    public Step[] steps;
    public Leg withSteps(Step[] steps) {
        this.steps = steps;
        return this;
    }
    
}
