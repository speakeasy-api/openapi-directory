/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody {
    /**
     * The number of assets
     */
    @JsonProperty("assets")
    public Long assets;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withAssets(Long assets) {
        this.assets = assets;
        return this;
    }
    
    /**
     * assetsCovarianceMatrix[i][j] is the covariance between the asset i and the asset j
     */
    @JsonProperty("assetsCovarianceMatrix")
    public Double[][] assetsCovarianceMatrix;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withAssetsCovarianceMatrix(Double[][] assetsCovarianceMatrix) {
        this.assetsCovarianceMatrix = assetsCovarianceMatrix;
        return this;
    }
    
    /**
     * assetsReturns[i] is the arithmetic return of asset i
     */
    @JsonProperty("assetsReturns")
    public Double[] assetsReturns;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withAssetsReturns(Double[] assetsReturns) {
        this.assetsReturns = assetsReturns;
        return this;
    }
    
    @JsonProperty("constraints")
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodyConstraints constraints;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withConstraints(PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodyConstraints constraints) {
        this.constraints = constraints;
        return this;
    }
    
    /**
     * The number of subset portfolios to compute; only applicable if the enumeration method for the subset portfolios is random sampling
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subsetPortfolios")
    public Long subsetPortfolios;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withSubsetPortfolios(Long subsetPortfolios) {
        this.subsetPortfolios = subsetPortfolios;
        return this;
    }
    
    /**
     * The method to aggregate the subset portfolios
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subsetPortfoliosAggregationMethod")
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum subsetPortfoliosAggregationMethod;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withSubsetPortfoliosAggregationMethod(PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosAggregationMethodEnum subsetPortfoliosAggregationMethod) {
        this.subsetPortfoliosAggregationMethod = subsetPortfoliosAggregationMethod;
        return this;
    }
    
    /**
     * The method to enumerate the subset portfolios
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subsetPortfoliosEnumerationMethod")
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum subsetPortfoliosEnumerationMethod;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withSubsetPortfoliosEnumerationMethod(PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBodySubsetPortfoliosEnumerationMethodEnum subsetPortfoliosEnumerationMethod) {
        this.subsetPortfoliosEnumerationMethod = subsetPortfoliosEnumerationMethod;
        return this;
    }
    
    /**
     * The number of assets to include in each subset portfolio; defaults to a value of order the square root of the total number of assets
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subsetSize")
    public Long subsetSize;
    public PostPortfolioOptimizationMeanVarianceEfficientSubsetResamplingBasedRequestBody withSubsetSize(Long subsetSize) {
        this.subsetSize = subsetSize;
        return this;
    }
    
}
