// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AcceleratorNameEnum string

const (
	AcceleratorNameEnumA100          AcceleratorNameEnum = "a100"
	AcceleratorNameEnumV100          AcceleratorNameEnum = "v100"
	AcceleratorNameEnumK80           AcceleratorNameEnum = "k80"
	AcceleratorNameEnumT4            AcceleratorNameEnum = "t4"
	AcceleratorNameEnumM60           AcceleratorNameEnum = "m60"
	AcceleratorNameEnumRadeonProV520 AcceleratorNameEnum = "radeon-pro-v520"
	AcceleratorNameEnumVu9p          AcceleratorNameEnum = "vu9p"
)

func (e AcceleratorNameEnum) ToPointer() *AcceleratorNameEnum {
	return &e
}

func (e *AcceleratorNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "a100":
		fallthrough
	case "v100":
		fallthrough
	case "k80":
		fallthrough
	case "t4":
		fallthrough
	case "m60":
		fallthrough
	case "radeon-pro-v520":
		fallthrough
	case "vu9p":
		*e = AcceleratorNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AcceleratorNameEnum: %v", v)
	}
}
