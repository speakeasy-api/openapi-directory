/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DashboardWebinarParticipantQOSParticipantQOS - Participant QOS.
 */
public class DashboardWebinarParticipantQOSParticipantQOS {
    /**
     * The type of device using which the participant joined the meeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("device")
    public String device;
    public DashboardWebinarParticipantQOSParticipantQOS withDevice(String device) {
        this.device = device;
        return this;
    }
    
    /**
     * Participant's PC domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public String domain;
    public DashboardWebinarParticipantQOSParticipantQOS withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * Participant's hard disk ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("harddisk_id")
    public String harddiskId;
    public DashboardWebinarParticipantQOSParticipantQOS withHarddiskId(String harddiskId) {
        this.harddiskId = harddiskId;
        return this;
    }
    
    /**
     * Participant's IP address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip_address")
    public String ipAddress;
    public DashboardWebinarParticipantQOSParticipantQOS withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    /**
     * The time at which participant joined the meeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("join_time")
    public OffsetDateTime joinTime;
    public DashboardWebinarParticipantQOSParticipantQOS withJoinTime(OffsetDateTime joinTime) {
        this.joinTime = joinTime;
        return this;
    }
    
    /**
     * The time at which participant left the meeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("leave_time")
    public OffsetDateTime leaveTime;
    public DashboardWebinarParticipantQOSParticipantQOS withLeaveTime(OffsetDateTime leaveTime) {
        this.leaveTime = leaveTime;
        return this;
    }
    
    /**
     * Participant's location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public DashboardWebinarParticipantQOSParticipantQOS withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Participant's MAC address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mac_addr")
    public String macAddr;
    public DashboardWebinarParticipantQOSParticipantQOS withMacAddr(String macAddr) {
        this.macAddr = macAddr;
        return this;
    }
    
    /**
     * Participant's PC name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pc_name")
    public String pcName;
    public DashboardWebinarParticipantQOSParticipantQOS withPcName(String pcName) {
        this.pcName = pcName;
        return this;
    }
    
    /**
     * Participant ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public DashboardWebinarParticipantQOSParticipantQOS withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * Participant display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_name")
    public String userName;
    public DashboardWebinarParticipantQOSParticipantQOS withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    /**
     * Quality of service provided to the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_qos")
    public DashboardWebinarParticipantQOSParticipantQOSUserQOS[] userQos;
    public DashboardWebinarParticipantQOSParticipantQOS withUserQos(DashboardWebinarParticipantQOSParticipantQOSUserQOS[] userQos) {
        this.userQos = userQos;
        return this;
    }
    
    /**
     * Participant's Zoom Client version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;
    public DashboardWebinarParticipantQOSParticipantQOS withVersion(String version) {
        this.version = version;
        return this;
    }
    
}
