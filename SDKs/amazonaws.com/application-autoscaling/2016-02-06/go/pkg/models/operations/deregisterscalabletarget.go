// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeregisterScalableTargetXAmzTargetEnum
type DeregisterScalableTargetXAmzTargetEnum string

const (
	DeregisterScalableTargetXAmzTargetEnumAnyScaleFrontendServiceDeregisterScalableTarget DeregisterScalableTargetXAmzTargetEnum = "AnyScaleFrontendService.DeregisterScalableTarget"
)

func (e *DeregisterScalableTargetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AnyScaleFrontendService.DeregisterScalableTarget":
		*e = DeregisterScalableTargetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeregisterScalableTargetXAmzTargetEnum: %s", s)
	}
}

type DeregisterScalableTargetRequest struct {
	DeregisterScalableTargetRequest shared.DeregisterScalableTargetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      DeregisterScalableTargetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeregisterScalableTargetResponse struct {
	// ConcurrentUpdateException
	ConcurrentUpdateException interface{}
	ContentType               string
	// Success
	DeregisterScalableTargetResponse map[string]interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// ObjectNotFoundException
	ObjectNotFoundException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ValidationException
	ValidationException interface{}
}
