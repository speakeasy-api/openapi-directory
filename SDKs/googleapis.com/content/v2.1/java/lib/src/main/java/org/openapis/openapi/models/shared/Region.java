/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Region - Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.
 */
public class Region {
    /**
     * The display name of the region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public Region withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A list of geotargets that defines the region area.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geotargetArea")
    public RegionGeoTargetArea geotargetArea;

    public Region withGeotargetArea(RegionGeoTargetArea geotargetArea) {
        this.geotargetArea = geotargetArea;
        return this;
    }
    
    /**
     * Output only. Immutable. Merchant that owns the region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantId")
    public String merchantId;

    public Region withMerchantId(String merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    /**
     * A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account's `ShippingSettings.postalCodeGroups` resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCodeArea")
    public RegionPostalCodeArea postalCodeArea;

    public Region withPostalCodeArea(RegionPostalCodeArea postalCodeArea) {
        this.postalCodeArea = postalCodeArea;
        return this;
    }
    
    /**
     * Output only. Immutable. The ID uniquely identifying each region.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionId")
    public String regionId;

    public Region withRegionId(String regionId) {
        this.regionId = regionId;
        return this;
    }
    
    /**
     * Output only. Indicates if the region is eligible to use in the Regional Inventory configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionalInventoryEligible")
    public Boolean regionalInventoryEligible;

    public Region withRegionalInventoryEligible(Boolean regionalInventoryEligible) {
        this.regionalInventoryEligible = regionalInventoryEligible;
        return this;
    }
    
    /**
     * Output only. Indicates if the region is eligible to use in the Shipping Services configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingEligible")
    public Boolean shippingEligible;

    public Region withShippingEligible(Boolean shippingEligible) {
        this.shippingEligible = shippingEligible;
        return this;
    }
    
    public Region(){}
}
