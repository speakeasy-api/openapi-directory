/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AnalyzeCommentResponse - The comment analysis response message.
 */
public class AnalyzeCommentResponse {
    /**
     * Scores for the requested attributes. The map keys are attribute names (same as the requested_attribute field in AnalyzeCommentRequest, for example "ATTACK_ON_AUTHOR", "INFLAMMATORY", etc).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributeScores")
    public java.util.Map<String, AttributeScores> attributeScores;
    public AnalyzeCommentResponse withAttributeScores(java.util.Map<String, AttributeScores> attributeScores) {
        this.attributeScores = attributeScores;
        return this;
    }
    
    /**
     * Same token from the original AnalyzeCommentRequest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public AnalyzeCommentResponse withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * Contains the languages detected from the text content, sorted in order of likelihood.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detectedLanguages")
    public String[] detectedLanguages;
    public AnalyzeCommentResponse withDetectedLanguages(String[] detectedLanguages) {
        this.detectedLanguages = detectedLanguages;
        return this;
    }
    
    /**
     * The language(s) used by CommentAnalyzer service to choose which Model to use when analyzing the comment. Might better be called "effective_languages". The logic used to make the choice is as follows: if !Request.languages.empty() effective_languages = Request.languages else effective_languages = detected_languages[0]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languages")
    public String[] languages;
    public AnalyzeCommentResponse withLanguages(String[] languages) {
        this.languages = languages;
        return this;
    }
    
}
