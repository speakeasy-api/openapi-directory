/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class DistributionGroupsGetApps200ApplicationJSON {
    /**
     * The description of the app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public DistributionGroupsGetApps200ApplicationJSON withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The display name of the app
     */
    @JsonProperty("display_name")
    public String displayName;
    public DistributionGroupsGetApps200ApplicationJSON withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The string representation of the source of the app's icon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon_source")
    public String iconSource;
    public DistributionGroupsGetApps200ApplicationJSON withIconSource(String iconSource) {
        this.iconSource = iconSource;
        return this;
    }
    
    /**
     * The string representation of the URL pointing to the app's icon
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon_url")
    public String iconUrl;
    public DistributionGroupsGetApps200ApplicationJSON withIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }
    
    /**
     * The unique ID (UUID) of the app
     */
    @JsonProperty("id")
    public String id;
    public DistributionGroupsGetApps200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The name of the app used in URLs
     */
    @JsonProperty("name")
    public String name;
    public DistributionGroupsGetApps200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The creation origin of this app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String origin;
    public DistributionGroupsGetApps200ApplicationJSON withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * The OS the app will be running on
     */
    @JsonProperty("os")
    public DistributionGroupsGetApps200ApplicationJSONOsEnum os;
    public DistributionGroupsGetApps200ApplicationJSON withOs(DistributionGroupsGetApps200ApplicationJSONOsEnum os) {
        this.os = os;
        return this;
    }
    
    /**
     * The information about the app's owner
     */
    @JsonProperty("owner")
    public DistributionGroupsGetApps200ApplicationJSONOwner owner;
    public DistributionGroupsGetApps200ApplicationJSON withOwner(DistributionGroupsGetApps200ApplicationJSONOwner owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The platform of the app
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public String platform;
    public DistributionGroupsGetApps200ApplicationJSON withPlatform(String platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("release_type")
    public String releaseType;
    public DistributionGroupsGetApps200ApplicationJSON withReleaseType(String releaseType) {
        this.releaseType = releaseType;
        return this;
    }
    
}
