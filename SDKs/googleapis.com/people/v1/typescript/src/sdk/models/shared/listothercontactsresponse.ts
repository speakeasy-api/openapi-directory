/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Person } from "./person";
import { Expose, Type } from "class-transformer";

/**
 * The response to a request for the authenticated user's "Other contacts".
 */
export class ListOtherContactsResponse extends SpeakeasyBase {
  /**
   * A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextSyncToken" })
  nextSyncToken?: string;

  /**
   * The list of "Other contacts" returned as Person resources. "Other contacts" support a limited subset of fields. See ListOtherContactsRequest.request_mask for more detailed information.
   */
  @SpeakeasyMetadata({ elemType: Person })
  @Expose({ name: "otherContacts" })
  @Type(() => Person)
  otherContacts?: Person[];

  /**
   * The total number of other contacts in the list without pagination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalSize" })
  totalSize?: number;
}
