// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeTagOptionXAmzTargetEnum
type DescribeTagOptionXAmzTargetEnum string

const (
	DescribeTagOptionXAmzTargetEnumAws242ServiceCatalogServiceDescribeTagOption DescribeTagOptionXAmzTargetEnum = "AWS242ServiceCatalogService.DescribeTagOption"
)

func (e *DescribeTagOptionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWS242ServiceCatalogService.DescribeTagOption":
		*e = DescribeTagOptionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTagOptionXAmzTargetEnum: %s", s)
	}
}

type DescribeTagOptionRequest struct {
	DescribeTagOptionInput shared.DescribeTagOptionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DescribeTagOptionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeTagOptionResponse struct {
	ContentType string
	// Success
	DescribeTagOptionOutput *shared.DescribeTagOptionOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TagOptionNotMigratedException
	TagOptionNotMigratedException interface{}
}
