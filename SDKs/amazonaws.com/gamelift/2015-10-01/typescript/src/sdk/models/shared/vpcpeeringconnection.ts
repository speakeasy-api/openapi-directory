/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VpcPeeringConnectionStatus } from "./vpcpeeringconnectionstatus";
import { Expose, Type } from "class-transformer";

/**
 * <p>Represents a peering connection between a VPC on one of your Amazon Web Services accounts and the VPC for your Amazon GameLift fleets. This record may be for an active peering connection or a pending connection that has not yet been established.</p> <p> <b>Related actions</b> </p> <p> <a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets">All APIs by task</a> </p>
 */
export class VpcPeeringConnection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FleetArn" })
  fleetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FleetId" })
  fleetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GameLiftVpcId" })
  gameLiftVpcId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IpV4CidrBlock" })
  ipV4CidrBlock?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PeerVpcId" })
  peerVpcId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  @Type(() => VpcPeeringConnectionStatus)
  status?: VpcPeeringConnectionStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcPeeringConnectionId" })
  vpcPeeringConnectionId?: string;
}
