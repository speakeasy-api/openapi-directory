// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TaskReservationEnumConferenceEventEnum string

const (
	TaskReservationEnumConferenceEventEnumStart   TaskReservationEnumConferenceEventEnum = "start"
	TaskReservationEnumConferenceEventEnumEnd     TaskReservationEnumConferenceEventEnum = "end"
	TaskReservationEnumConferenceEventEnumJoin    TaskReservationEnumConferenceEventEnum = "join"
	TaskReservationEnumConferenceEventEnumLeave   TaskReservationEnumConferenceEventEnum = "leave"
	TaskReservationEnumConferenceEventEnumMute    TaskReservationEnumConferenceEventEnum = "mute"
	TaskReservationEnumConferenceEventEnumHold    TaskReservationEnumConferenceEventEnum = "hold"
	TaskReservationEnumConferenceEventEnumSpeaker TaskReservationEnumConferenceEventEnum = "speaker"
)

func (e TaskReservationEnumConferenceEventEnum) ToPointer() *TaskReservationEnumConferenceEventEnum {
	return &e
}

func (e *TaskReservationEnumConferenceEventEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "start":
		fallthrough
	case "end":
		fallthrough
	case "join":
		fallthrough
	case "leave":
		fallthrough
	case "mute":
		fallthrough
	case "hold":
		fallthrough
	case "speaker":
		*e = TaskReservationEnumConferenceEventEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskReservationEnumConferenceEventEnum: %v", v)
	}
}
