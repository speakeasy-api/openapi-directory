/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class PatchTargetsTargetIdScheduledscansIdRequestBody extends SpeakeasyBase {
  /**
   * Date time of next scan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime: Date;

  /**
   * Scan recurrence:
   *
   * @remarks
   *   * d - daily
   *   * w - weekly
   *   * m - monthly
   *   * q - quarterly
   *   * '' - no recurrence
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recurrence" })
  recurrence?: shared.RecurrenceEnum;
}

export class PatchTargetsTargetIdScheduledscansIdRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchTargetsTargetIdScheduledscansIdRequestBody;

  /**
   * Object Id
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Target id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=target_id",
  })
  targetId: string;
}

/**
 * Not found
 */
export class PatchTargetsTargetIdScheduledscansId404ApplicationJSON extends SpeakeasyBase {
  /**
   * Not found.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;
}

/**
 * Not allowed to perform operation
 */
export class PatchTargetsTargetIdScheduledscansId403ApplicationJSON extends SpeakeasyBase {
  /**
   * Error message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;
}

/**
 * Access token is missing or invalid
 */
export class PatchTargetsTargetIdScheduledscansId401ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;
}

/**
 * Bad Request
 */
export class PatchTargetsTargetIdScheduledscansId400ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "<field name>" })
  lessThanFieldNameGreaterThan?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "non_field_errors" })
  nonFieldErrors?: string[];
}

export class PatchTargetsTargetIdScheduledscansIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Scheduled scan object
   */
  @SpeakeasyMetadata()
  scheduled?: shared.Scheduled;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  patchTargetsTargetIdScheduledscansId400ApplicationJSONObject?: PatchTargetsTargetIdScheduledscansId400ApplicationJSON;

  /**
   * Access token is missing or invalid
   */
  @SpeakeasyMetadata()
  patchTargetsTargetIdScheduledscansId401ApplicationJSONObject?: PatchTargetsTargetIdScheduledscansId401ApplicationJSON;

  /**
   * Not allowed to perform operation
   */
  @SpeakeasyMetadata()
  patchTargetsTargetIdScheduledscansId403ApplicationJSONObject?: PatchTargetsTargetIdScheduledscansId403ApplicationJSON;

  /**
   * Not found
   */
  @SpeakeasyMetadata()
  patchTargetsTargetIdScheduledscansId404ApplicationJSONObject?: PatchTargetsTargetIdScheduledscansId404ApplicationJSON;
}
