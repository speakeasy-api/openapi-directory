"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricvalue as shared_metricvalue
from ..shared import rowdimensions as shared_rowdimensions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FilteredBidCreativeRow:
    r"""The number of filtered bids with the specified dimension values that have the specified creative."""
    
    bid_count: Optional[shared_metricvalue.MetricValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bidCount'), 'exclude': lambda f: f is None }})
    r"""A metric value, with an expected value and a variance; represents a count that may be either exact or estimated (for example, when sampled)."""  
    creative_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeId'), 'exclude': lambda f: f is None }})
    r"""The ID of the creative."""  
    row_dimensions: Optional[shared_rowdimensions.RowDimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rowDimensions'), 'exclude': lambda f: f is None }})
    r"""A response may include multiple rows, breaking down along various dimensions. Encapsulates the values of all dimensions for a given row."""  
    