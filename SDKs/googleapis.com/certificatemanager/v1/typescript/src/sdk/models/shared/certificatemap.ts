/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GclbTarget } from "./gclbtarget";
import { Expose, Type } from "class-transformer";

/**
 * Defines a collection of certificate configurations.
 */
export class CertificateMap extends SpeakeasyBase {
  /**
   * Output only. The creation timestamp of a Certificate Map.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * One or more paragraphs of text description of a certificate map.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Output only. A list of GCLB targets that use this Certificate Map. A Target Proxy is only present on this list if it's attached to a Forwarding Rule.
   */
  @SpeakeasyMetadata({ elemType: GclbTarget })
  @Expose({ name: "gclbTargets" })
  @Type(() => GclbTarget)
  gclbTargets?: GclbTarget[];

  /**
   * Set of labels associated with a Certificate Map.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/* /locations/* /certificateMaps/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The update timestamp of a Certificate Map.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * Defines a collection of certificate configurations.
 */
export class CertificateMapInput extends SpeakeasyBase {
  /**
   * One or more paragraphs of text description of a certificate map.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Set of labels associated with a Certificate Map.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * A user-defined name of the Certificate Map. Certificate Map names must be unique globally and match pattern `projects/* /locations/* /certificateMaps/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
