/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionTypeArtifactDetails } from "./actiontypeartifactdetails";
import { ActionTypeExecutor } from "./actiontypeexecutor";
import { ActionTypeIdentifier } from "./actiontypeidentifier";
import { ActionTypePermissions } from "./actiontypepermissions";
import { ActionTypeUrls } from "./actiontypeurls";
import { Expose, Type } from "class-transformer";

/**
 * The parameters for the action type definition that are provided when the action type is created or updated.
 */
export class ActionTypeDeclaration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "executor" })
  @Type(() => ActionTypeExecutor)
  executor: ActionTypeExecutor;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  @Type(() => ActionTypeIdentifier)
  id: ActionTypeIdentifier;

  @SpeakeasyMetadata()
  @Expose({ name: "inputArtifactDetails" })
  @Type(() => ActionTypeArtifactDetails)
  inputArtifactDetails: ActionTypeArtifactDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "outputArtifactDetails" })
  @Type(() => ActionTypeArtifactDetails)
  outputArtifactDetails: ActionTypeArtifactDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => ActionTypePermissions)
  permissions?: ActionTypePermissions;

  /**
   * The properties of the action type to be updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "urls" })
  @Type(() => ActionTypeUrls)
  urls?: ActionTypeUrls;
}
