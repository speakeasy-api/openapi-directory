/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BillingPreviewResult {
    /**
     * ID of the customer account to which the billing preview applies.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public BillingPreviewResult withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * An array of credit memo items returned as the result of the billing preivew request.
     * 
     * **Note:** The credit memo items are only available if you have Invoice Settlement feature enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemoItems")
    public POSTBillingPreviewCreditMemoItem[] creditMemoItems;
    public BillingPreviewResult withCreditMemoItems(POSTBillingPreviewCreditMemoItem[] creditMemoItems) {
        this.creditMemoItems = creditMemoItems;
        return this;
    }
    
    /**
     * An array of invoice items returned as the result of the billing preview request.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceItems")
    public POSTBillingPreviewInvoiceItem[] invoiceItems;
    public BillingPreviewResult withInvoiceItems(POSTBillingPreviewInvoiceItem[] invoiceItems) {
        this.invoiceItems = invoiceItems;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public BillingPreviewResult withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
}
