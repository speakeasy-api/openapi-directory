<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EmployeeEmergencyContacts - The emergency contact model
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EmployeeEmergencyContacts
{
    /**
     * 1st address line.
     * 
     * @var ?string $address1
     */
	#[\JMS\Serializer\Annotation\SerializedName('address1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address1 = null;
    
    /**
     * 2nd address line.
     * 
     * @var ?string $address2
     */
	#[\JMS\Serializer\Annotation\SerializedName('address2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address2 = null;
    
    /**
     * City.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * County.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * Country.  Must be a valid 3 character country code.  Common values are *USA* (United States), *CAN* (Canada).
     * 
     * @var ?string $county
     */
	#[\JMS\Serializer\Annotation\SerializedName('county')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $county = null;
    
    /**
     * Contact email.  Must be valid email address format.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Required. Contact first name. <br  />Max length: 40
     * 
     * @var string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('firstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $firstName;
    
    /**
     * Contact Home Phone.  Valid phone format  *(###) #######* or *######-####* or *### ### ####* or *##########* or, if international, starts with *+#*, only spaces and digits allowed.
     * 
     * @var ?string $homePhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('homePhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $homePhone = null;
    
    /**
     * Required. Contact last name. <br  />Max length: 40
     * 
     * @var string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastName;
    
    /**
     * Contact Mobile Phone.  Valid phone format  *(###) #######* or *######-####* or *### ### ####* or *##########* or, if international, starts with *+#*, only spaces and digits allowed.
     * 
     * @var ?string $mobilePhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('mobilePhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mobilePhone = null;
    
    /**
     * Notes. <br  />Max length: 1000
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * Contact Pager.  Valid phone format  *(###) #######* or *######-####* or *### ### ####* or *##########* or, if international, starts with *+#*, only spaces and digits allowed.
     * 
     * @var ?string $pager
     */
	#[\JMS\Serializer\Annotation\SerializedName('pager')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pager = null;
    
    /**
     * Required. Contact primary phone type.  Must match Company setup.  Valid  values are H (Home), M (Mobile), P (Pager), W (Work)
     * 
     * @var ?string $primaryPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('primaryPhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $primaryPhone = null;
    
    /**
     * Required. Contact priority. Valid values are *P* (Primary) or *S* (Secondary).
     * 
     * @var ?string $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priority = null;
    
    /**
     * Required. Contact relationship.  Must match Company setup.  Common values are Spouse, Mother, Father.
     * 
     * @var ?string $relationship
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationship')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $relationship = null;
    
    /**
     * State or Province.  If U.S. address, must be valid 2 character state code.  Common values are *IL* (Illinois), *CA* (California).
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * Valid values are *true* or *false*.
     * 
     * @var ?bool $syncEmployeeInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('syncEmployeeInfo')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $syncEmployeeInfo = null;
    
    /**
     * Work Extension.
     * 
     * @var ?string $workExtension
     */
	#[\JMS\Serializer\Annotation\SerializedName('workExtension')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workExtension = null;
    
    /**
     * Contact Work Phone.  Valid phone format  *(###) #######* or *######-####* or *### ### ####* or *##########* or, if international, starts with *+#*, only spaces and digits allowed.
     * 
     * @var ?string $workPhone
     */
	#[\JMS\Serializer\Annotation\SerializedName('workPhone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $workPhone = null;
    
    /**
     * Postal code.  If U.S. address, must be a valid zip code.
     * 
     * @var ?string $zip
     */
	#[\JMS\Serializer\Annotation\SerializedName('zip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $zip = null;
    
	public function __construct()
	{
		$this->address1 = null;
		$this->address2 = null;
		$this->city = null;
		$this->country = null;
		$this->county = null;
		$this->email = null;
		$this->firstName = "";
		$this->homePhone = null;
		$this->lastName = "";
		$this->mobilePhone = null;
		$this->notes = null;
		$this->pager = null;
		$this->primaryPhone = null;
		$this->priority = null;
		$this->relationship = null;
		$this->state = null;
		$this->syncEmployeeInfo = null;
		$this->workExtension = null;
		$this->workPhone = null;
		$this->zip = null;
	}
}
