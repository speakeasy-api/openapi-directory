// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ActionsUpdateRequiredWorkflowRequestBodyScopeEnum - Enable the required workflow for all repositories or selected repositories in the organization.
type ActionsUpdateRequiredWorkflowRequestBodyScopeEnum string

const (
	ActionsUpdateRequiredWorkflowRequestBodyScopeEnumSelected ActionsUpdateRequiredWorkflowRequestBodyScopeEnum = "selected"
	ActionsUpdateRequiredWorkflowRequestBodyScopeEnumAll      ActionsUpdateRequiredWorkflowRequestBodyScopeEnum = "all"
)

func (e ActionsUpdateRequiredWorkflowRequestBodyScopeEnum) ToPointer() *ActionsUpdateRequiredWorkflowRequestBodyScopeEnum {
	return &e
}

func (e *ActionsUpdateRequiredWorkflowRequestBodyScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "selected":
		fallthrough
	case "all":
		*e = ActionsUpdateRequiredWorkflowRequestBodyScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionsUpdateRequiredWorkflowRequestBodyScopeEnum: %v", v)
	}
}

type ActionsUpdateRequiredWorkflowRequestBody struct {
	// The ID of the repository that contains the workflow file.
	RepositoryID *string `json:"repository_id,omitempty"`
	// Enable the required workflow for all repositories or selected repositories in the organization.
	Scope *ActionsUpdateRequiredWorkflowRequestBodyScopeEnum `json:"scope,omitempty"`
	// A list of repository IDs where you want to enable the required workflow. A list of repository IDs where you want to enable the required workflow. You can only provide a list of repository ids when the `scope` is set to `selected`.
	SelectedRepositoryIds []int64 `json:"selected_repository_ids,omitempty"`
	// Path of the workflow file to be configured as a required workflow.
	WorkflowFilePath *string `json:"workflow_file_path,omitempty"`
}

type ActionsUpdateRequiredWorkflowRequest struct {
	RequestBody ActionsUpdateRequiredWorkflowRequestBody `request:"mediaType=application/json"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
	// The unique identifier of the required workflow.
	RequiredWorkflowID int64 `pathParam:"style=simple,explode=false,name=required_workflow_id"`
}

type ActionsUpdateRequiredWorkflowResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	RequiredWorkflow *shared.RequiredWorkflow
	// Validation failed, or the endpoint has been spammed.
	ValidationErrorSimple *shared.ValidationErrorSimple
}
