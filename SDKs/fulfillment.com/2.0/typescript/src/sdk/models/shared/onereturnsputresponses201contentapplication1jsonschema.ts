/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy } from "./onereturnsgetresponses200contentapplication1jsonschemapropertiesdataitemspropertiesupdatedby";
import { Expose, Transform, Type } from "class-transformer";

export class OnereturnsPutResponses201ContentApplication1jsonSchemaItems extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "quantityExpected" })
  quantityExpected: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku: string;
}

export class OnereturnsPutResponses201ContentApplication1jsonSchemaConsigneeV2IsoCountryV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Two character ISO code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iso2" })
  iso2?: string;

  /**
   * Country Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class OnereturnsPutResponses201ContentApplication1jsonSchemaConsigneeV2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address1" })
  address1: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address2" })
  address2?: string;

  /**
   * City
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressLocality" })
  addressLocality: string;

  /**
   * Province / State
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressRegion" })
  addressRegion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "companyName" })
  companyName?: string;

  /**
   * Ideally provide the two character ISO code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "iso" })
  @Type(
    () =>
      OnereturnsPutResponses201ContentApplication1jsonSchemaConsigneeV2IsoCountryV2
  )
  iso?: OnereturnsPutResponses201ContentApplication1jsonSchemaConsigneeV2IsoCountryV2;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * Postal Code / Zip
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedBy" })
  @Type(
    () =>
      OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy
  )
  updatedBy?: OnereturnsGetResponses200ContentApplication1jsonSchemaPropertiesDataItemsPropertiesUpdatedBy;
}

/**
 * RMA Updated
 */
export class OnereturnsPutResponses201ContentApplication1jsonSchema extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: OnereturnsPutResponses201ContentApplication1jsonSchemaItems,
  })
  @Expose({ name: "items" })
  @Type(() => OnereturnsPutResponses201ContentApplication1jsonSchemaItems)
  items: OnereturnsPutResponses201ContentApplication1jsonSchemaItems[];

  @SpeakeasyMetadata()
  @Expose({ name: "merchantOrderId" })
  merchantOrderId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recipient" })
  @Type(() => OnereturnsPutResponses201ContentApplication1jsonSchemaConsigneeV2)
  recipient: OnereturnsPutResponses201ContentApplication1jsonSchemaConsigneeV2;

  @SpeakeasyMetadata()
  @Expose({ name: "rmaNumber" })
  rmaNumber: string;
}
