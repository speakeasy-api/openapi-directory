/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import {
  AccountSupportingEntityCapability,
  AccountSupportingEntityCapabilityInput,
} from "./accountsupportingentitycapability";
import { JSONObject } from "./jsonobject";
import { Expose, Type } from "class-transformer";

/**
 * The capability level that is allowed for the account holder.
 *
 * @remarks
 *
 * Possible values: **notApplicable**, **low**, **medium**, **high**.
 */
export enum AccountHolderCapabilityAllowedLevelEnum {
  High = "high",
  Low = "low",
  Medium = "medium",
  NotApplicable = "notApplicable",
}

/**
 * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
 *
 * @remarks
 *
 * Possible values: **notApplicable**, **low**, **medium**, **high**.
 */
export enum AccountHolderCapabilityRequestedLevelEnum {
  High = "high",
  Low = "low",
  Medium = "medium",
  NotApplicable = "notApplicable",
}

/**
 * The status of the verification checks for the capability.
 *
 * @remarks
 *
 * Possible values:
 *
 * * **pending**: Adyen is running the verification.
 *
 * * **invalid**: The verification failed. Check if the `errors` array contains more information.
 *
 * * **valid**: The verification has been successfully completed.
 *
 * * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
 *
 */
export enum AccountHolderCapabilityVerificationStatusEnum {
  Invalid = "invalid",
  Pending = "pending",
  Rejected = "rejected",
  Valid = "valid",
}

export class AccountHolderCapability extends SpeakeasyBase {
  /**
   * Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful and the account holder is permitted to use the capability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowed" })
  allowed?: boolean;

  /**
   * The capability level that is allowed for the account holder.
   *
   * @remarks
   *
   * Possible values: **notApplicable**, **low**, **medium**, **high**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedLevel" })
  allowedLevel?: AccountHolderCapabilityAllowedLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "allowedSettings" })
  @Type(() => JSONObject)
  allowedSettings?: JSONObject;

  /**
   * Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Contains verification errors and the actions that you can take to resolve them.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "problems" })
  problems?: Record<string, any>[];

  /**
   * Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requested" })
  requested?: boolean;

  /**
   * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
   *
   * @remarks
   *
   * Possible values: **notApplicable**, **low**, **medium**, **high**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedLevel" })
  requestedLevel?: AccountHolderCapabilityRequestedLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedSettings" })
  @Type(() => JSONObject)
  requestedSettings?: JSONObject;

  /**
   * Contains the status of the transfer instruments associated with this capability.
   */
  @SpeakeasyMetadata({ elemType: AccountSupportingEntityCapability })
  @Expose({ name: "transferInstruments" })
  @Type(() => AccountSupportingEntityCapability)
  transferInstruments?: AccountSupportingEntityCapability[];

  /**
   * The status of the verification checks for the capability.
   *
   * @remarks
   *
   * Possible values:
   *
   * * **pending**: Adyen is running the verification.
   *
   * * **invalid**: The verification failed. Check if the `errors` array contains more information.
   *
   * * **valid**: The verification has been successfully completed.
   *
   * * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verificationStatus" })
  verificationStatus?: AccountHolderCapabilityVerificationStatusEnum;
}

export class AccountHolderCapabilityInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowedSettings" })
  @Type(() => JSONObject)
  allowedSettings?: JSONObject;

  /**
   * Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requested" })
  requested?: boolean;

  /**
   * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
   *
   * @remarks
   *
   * Possible values: **notApplicable**, **low**, **medium**, **high**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedLevel" })
  requestedLevel?: AccountHolderCapabilityRequestedLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "requestedSettings" })
  @Type(() => JSONObject)
  requestedSettings?: JSONObject;

  /**
   * Contains the status of the transfer instruments associated with this capability.
   */
  @SpeakeasyMetadata({ elemType: AccountSupportingEntityCapabilityInput })
  @Expose({ name: "transferInstruments" })
  @Type(() => AccountSupportingEntityCapabilityInput)
  transferInstruments?: AccountSupportingEntityCapabilityInput[];
}
