/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ModelInput - API proto representing a trained machine learning model.
 */
public class ModelInput {
    /**
     * Output only. Timestamp when the model training finished and can be used for prediction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public ModelInput withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. The resource ID of the dataset used to create the model. The dataset must come from the same ancestor project and location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasetId")
    public String datasetId;
    public ModelInput withDatasetId(String datasetId) {
        this.datasetId = datasetId;
        return this;
    }
    
    /**
     * Output only. Deployment state of the model. A model can only serve prediction requests after it gets deployed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deploymentState")
    public ModelDeploymentStateEnum deploymentState;
    public ModelInput withDeploymentState(ModelDeploymentStateEnum deploymentState) {
        this.deploymentState = deploymentState;
        return this;
    }
    
    /**
     * Required. The name of the model to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9. It must start with a letter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public ModelInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Model metadata for image classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageClassificationModelMetadata")
    public ImageClassificationModelMetadata imageClassificationModelMetadata;
    public ModelInput withImageClassificationModelMetadata(ImageClassificationModelMetadata imageClassificationModelMetadata) {
        this.imageClassificationModelMetadata = imageClassificationModelMetadata;
        return this;
    }
    
    /**
     * Model metadata specific to image object detection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageObjectDetectionModelMetadata")
    public ImageObjectDetectionModelMetadata imageObjectDetectionModelMetadata;
    public ModelInput withImageObjectDetectionModelMetadata(ImageObjectDetectionModelMetadata imageObjectDetectionModelMetadata) {
        this.imageObjectDetectionModelMetadata = imageObjectDetectionModelMetadata;
        return this;
    }
    
    /**
     * Output only. Resource name of the model. Format: `projects/{project_id}/locations/{location_id}/models/{model_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ModelInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Model metadata specific to AutoML Tables.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tablesModelMetadata")
    public TablesModelMetadata tablesModelMetadata;
    public ModelInput withTablesModelMetadata(TablesModelMetadata tablesModelMetadata) {
        this.tablesModelMetadata = tablesModelMetadata;
        return this;
    }
    
    /**
     * Model metadata that is specific to text classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textClassificationModelMetadata")
    public TextClassificationModelMetadata textClassificationModelMetadata;
    public ModelInput withTextClassificationModelMetadata(TextClassificationModelMetadata textClassificationModelMetadata) {
        this.textClassificationModelMetadata = textClassificationModelMetadata;
        return this;
    }
    
    /**
     * Model metadata that is specific to text extraction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textExtractionModelMetadata")
    public TextExtractionModelMetadata textExtractionModelMetadata;
    public ModelInput withTextExtractionModelMetadata(TextExtractionModelMetadata textExtractionModelMetadata) {
        this.textExtractionModelMetadata = textExtractionModelMetadata;
        return this;
    }
    
    /**
     * Model metadata that is specific to text sentiment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textSentimentModelMetadata")
    public java.util.Map<String, Object> textSentimentModelMetadata;
    public ModelInput withTextSentimentModelMetadata(java.util.Map<String, Object> textSentimentModelMetadata) {
        this.textSentimentModelMetadata = textSentimentModelMetadata;
        return this;
    }
    
    /**
     * Model metadata that is specific to translation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("translationModelMetadata")
    public TranslationModelMetadata translationModelMetadata;
    public ModelInput withTranslationModelMetadata(TranslationModelMetadata translationModelMetadata) {
        this.translationModelMetadata = translationModelMetadata;
        return this;
    }
    
    /**
     * Output only. Timestamp when this model was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public ModelInput withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Model metadata specific to video classification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoClassificationModelMetadata")
    public java.util.Map<String, Object> videoClassificationModelMetadata;
    public ModelInput withVideoClassificationModelMetadata(java.util.Map<String, Object> videoClassificationModelMetadata) {
        this.videoClassificationModelMetadata = videoClassificationModelMetadata;
        return this;
    }
    
    /**
     * Model metadata specific to video object tracking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videoObjectTrackingModelMetadata")
    public java.util.Map<String, Object> videoObjectTrackingModelMetadata;
    public ModelInput withVideoObjectTrackingModelMetadata(java.util.Map<String, Object> videoObjectTrackingModelMetadata) {
        this.videoObjectTrackingModelMetadata = videoObjectTrackingModelMetadata;
        return this;
    }
    
}
