"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ScriptErrorErrorCodeEnum(str, Enum):
    r"""The type of error."""
    ERROR_CODE_UNSPECIFIED = 'ERROR_CODE_UNSPECIFIED'
    SYNTAX_ERROR = 'SYNTAX_ERROR'
    DEPRECATED_SYNTAX = 'DEPRECATED_SYNTAX'
    INTERNAL_ERROR = 'INTERNAL_ERROR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScriptError:
    r"""An error message for a custom bidding script."""
    
    column: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('column'), 'exclude': lambda f: f is None }})
    r"""The column number in the script where the error was thrown."""  
    error_code: Optional[ScriptErrorErrorCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCode'), 'exclude': lambda f: f is None }})
    r"""The type of error."""  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})
    r"""The detailed error message."""  
    line: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line'), 'exclude': lambda f: f is None }})
    r"""The line number in the script where the error was thrown."""  
    