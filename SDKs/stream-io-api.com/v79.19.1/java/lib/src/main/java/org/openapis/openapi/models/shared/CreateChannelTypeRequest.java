/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateChannelTypeRequest {
    /**
     * Enables automatic message moderation
     */
    @JsonProperty("automod")
    public CreateChannelTypeRequestAutoModerationEnum automod;
    public CreateChannelTypeRequest withAutomod(CreateChannelTypeRequestAutoModerationEnum automod) {
        this.automod = automod;
        return this;
    }
    
    /**
     * Sets behavior of automatic moderation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automod_behavior")
    public CreateChannelTypeRequestAutoModerationBehaviorEnum automodBehavior;
    public CreateChannelTypeRequest withAutomodBehavior(CreateChannelTypeRequestAutoModerationBehaviorEnum automodBehavior) {
        this.automodBehavior = automodBehavior;
        return this;
    }
    
    /**
     * Name of the blocklist to use
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocklist")
    public String blocklist;
    public CreateChannelTypeRequest withBlocklist(String blocklist) {
        this.blocklist = blocklist;
        return this;
    }
    
    /**
     * Sets behavior of blocklist
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocklist_behavior")
    public CreateChannelTypeRequestBlocklistBehaviorEnum blocklistBehavior;
    public CreateChannelTypeRequest withBlocklistBehavior(CreateChannelTypeRequestBlocklistBehaviorEnum blocklistBehavior) {
        this.blocklistBehavior = blocklistBehavior;
        return this;
    }
    
    /**
     * List of commands that channel supports
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commands")
    public String[] commands;
    public CreateChannelTypeRequest withCommands(String[] commands) {
        this.commands = commands;
        return this;
    }
    
    /**
     * Connect events support
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connect_events")
    public Boolean connectEvents;
    public CreateChannelTypeRequest withConnectEvents(Boolean connectEvents) {
        this.connectEvents = connectEvents;
        return this;
    }
    
    /**
     * Enables custom events
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_events")
    public Boolean customEvents;
    public CreateChannelTypeRequest withCustomEvents(Boolean customEvents) {
        this.customEvents = customEvents;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grants")
    public java.util.Map<String, String[]> grants;
    public CreateChannelTypeRequest withGrants(java.util.Map<String, String[]> grants) {
        this.grants = grants;
        return this;
    }
    
    /**
     * Number of maximum message characters
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_message_length")
    public Double maxMessageLength;
    public CreateChannelTypeRequest withMaxMessageLength(Double maxMessageLength) {
        this.maxMessageLength = maxMessageLength;
        return this;
    }
    
    /**
     * Number of days to keep messages. 'infinite' disables retention
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_retention")
    public String messageRetention;
    public CreateChannelTypeRequest withMessageRetention(String messageRetention) {
        this.messageRetention = messageRetention;
        return this;
    }
    
    /**
     * Enables mutes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mutes")
    public Boolean mutes;
    public CreateChannelTypeRequest withMutes(Boolean mutes) {
        this.mutes = mutes;
        return this;
    }
    
    /**
     * Channel type name
     */
    @JsonProperty("name")
    public String name;
    public CreateChannelTypeRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * List of permissions for the channel type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public PolicyRequest[] permissions;
    public CreateChannelTypeRequest withPermissions(PolicyRequest[] permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * Enables push notifications
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("push_notifications")
    public Boolean pushNotifications;
    public CreateChannelTypeRequest withPushNotifications(Boolean pushNotifications) {
        this.pushNotifications = pushNotifications;
        return this;
    }
    
    /**
     * Enables message reactions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reactions")
    public Boolean reactions;
    public CreateChannelTypeRequest withReactions(Boolean reactions) {
        this.reactions = reactions;
        return this;
    }
    
    /**
     * Read events support
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("read_events")
    public Boolean readEvents;
    public CreateChannelTypeRequest withReadEvents(Boolean readEvents) {
        this.readEvents = readEvents;
        return this;
    }
    
    /**
     * Enables message replies (threads)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replies")
    public Boolean replies;
    public CreateChannelTypeRequest withReplies(Boolean replies) {
        this.replies = replies;
        return this;
    }
    
    /**
     * Enables message search
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("search")
    public Boolean search;
    public CreateChannelTypeRequest withSearch(Boolean search) {
        this.search = search;
        return this;
    }
    
    /**
     * Typing events support
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("typing_events")
    public Boolean typingEvents;
    public CreateChannelTypeRequest withTypingEvents(Boolean typingEvents) {
        this.typingEvents = typingEvents;
        return this;
    }
    
    /**
     * Enables file uploads
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uploads")
    public Boolean uploads;
    public CreateChannelTypeRequest withUploads(Boolean uploads) {
        this.uploads = uploads;
        return this;
    }
    
    /**
     * Enables URL enrichment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url_enrichment")
    public Boolean urlEnrichment;
    public CreateChannelTypeRequest withUrlEnrichment(Boolean urlEnrichment) {
        this.urlEnrichment = urlEnrichment;
        return this;
    }
    
}
