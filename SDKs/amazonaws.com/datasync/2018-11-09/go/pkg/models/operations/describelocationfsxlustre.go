// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeLocationFsxLustreXAmzTargetEnum
type DescribeLocationFsxLustreXAmzTargetEnum string

const (
	DescribeLocationFsxLustreXAmzTargetEnumFmrsServiceDescribeLocationFsxLustre DescribeLocationFsxLustreXAmzTargetEnum = "FmrsService.DescribeLocationFsxLustre"
)

func (e DescribeLocationFsxLustreXAmzTargetEnum) ToPointer() *DescribeLocationFsxLustreXAmzTargetEnum {
	return &e
}

func (e *DescribeLocationFsxLustreXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FmrsService.DescribeLocationFsxLustre":
		*e = DescribeLocationFsxLustreXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeLocationFsxLustreXAmzTargetEnum: %v", v)
	}
}

type DescribeLocationFsxLustreRequest struct {
	DescribeLocationFsxLustreRequest shared.DescribeLocationFsxLustreRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       DescribeLocationFsxLustreXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeLocationFsxLustreResponse struct {
	ContentType string
	// Success
	DescribeLocationFsxLustreResponse *shared.DescribeLocationFsxLustreResponse
	// InternalException
	InternalException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
