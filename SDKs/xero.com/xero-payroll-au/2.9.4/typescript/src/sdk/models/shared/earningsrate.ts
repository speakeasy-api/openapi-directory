/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllowanceTypeEnum } from "./allowancetypeenum";
import { EarningsTypeEnum } from "./earningstypeenum";
import { EmploymentTerminationPaymentTypeEnum } from "./employmentterminationpaymenttypeenum";
import { RateTypeEnum } from "./ratetypeenum";
import { Expose } from "class-transformer";

export class EarningsRate extends SpeakeasyBase {
  /**
   * See Accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountCode" })
  accountCode?: string;

  /**
   * Indicates that this earnings rate should accrue leave. Only applicable if RateType is MULTIPLE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccrueLeave" })
  accrueLeave?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowanceType" })
  allowanceType?: AllowanceTypeEnum;

  /**
   * Optional Amount for FIXEDAMOUNT RateType EarningsRate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  /**
   * Is the current record
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrentRecord" })
  currentRecord?: boolean;

  /**
   * Xero identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EarningsRateID" })
  earningsRateID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EarningsType" })
  earningsType?: EarningsTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmploymentTerminationPaymentType" })
  employmentTerminationPaymentType?: EmploymentTerminationPaymentTypeEnum;

  /**
   * See the ATO website for details of which payments are exempt from SGC
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsExemptFromSuper" })
  isExemptFromSuper?: boolean;

  /**
   * Most payments are subject to tax, so you should only set this value if you are sure that a payment is exempt from PAYG withholding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsExemptFromTax" })
  isExemptFromTax?: boolean;

  /**
   * Boolean to determine if the earnings rate is reportable or exempt from W1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsReportableAsW1" })
  isReportableAsW1?: boolean;

  /**
   * This is the multiplier used to calculate the rate per unit, based on the employee’s ordinary earnings rate. For example, for time and a half enter 1.5. Only applicable if RateType is MULTIPLE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Multiplier" })
  multiplier?: number;

  /**
   * Name of the earnings rate (max length = 100)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * Default rate per unit (optional). Only applicable if RateType is RATEPERUNIT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RatePerUnit" })
  ratePerUnit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RateType" })
  rateType?: RateTypeEnum;

  /**
   * Type of units used to record earnings (max length = 50). Only When RateType is RATEPERUNIT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TypeOfUnits" })
  typeOfUnits?: string;

  /**
   * Last modified timestamp
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDateUTC" })
  updatedDateUTC?: string;
}

export class EarningsRateInput extends SpeakeasyBase {
  /**
   * See Accounts
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountCode" })
  accountCode?: string;

  /**
   * Indicates that this earnings rate should accrue leave. Only applicable if RateType is MULTIPLE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccrueLeave" })
  accrueLeave?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowanceType" })
  allowanceType?: AllowanceTypeEnum;

  /**
   * Optional Amount for FIXEDAMOUNT RateType EarningsRate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  /**
   * Is the current record
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CurrentRecord" })
  currentRecord?: boolean;

  /**
   * Xero identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EarningsRateID" })
  earningsRateID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EarningsType" })
  earningsType?: EarningsTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmploymentTerminationPaymentType" })
  employmentTerminationPaymentType?: EmploymentTerminationPaymentTypeEnum;

  /**
   * See the ATO website for details of which payments are exempt from SGC
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsExemptFromSuper" })
  isExemptFromSuper?: boolean;

  /**
   * Most payments are subject to tax, so you should only set this value if you are sure that a payment is exempt from PAYG withholding
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsExemptFromTax" })
  isExemptFromTax?: boolean;

  /**
   * Boolean to determine if the earnings rate is reportable or exempt from W1
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsReportableAsW1" })
  isReportableAsW1?: boolean;

  /**
   * This is the multiplier used to calculate the rate per unit, based on the employee’s ordinary earnings rate. For example, for time and a half enter 1.5. Only applicable if RateType is MULTIPLE
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Multiplier" })
  multiplier?: number;

  /**
   * Name of the earnings rate (max length = 100)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * Default rate per unit (optional). Only applicable if RateType is RATEPERUNIT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RatePerUnit" })
  ratePerUnit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RateType" })
  rateType?: RateTypeEnum;

  /**
   * Type of units used to record earnings (max length = 50). Only When RateType is RATEPERUNIT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TypeOfUnits" })
  typeOfUnits?: string;
}
