// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchJobsFilterOperatorEnum string

const (
	SearchJobsFilterOperatorEnumLt       SearchJobsFilterOperatorEnum = "LT"
	SearchJobsFilterOperatorEnumLte      SearchJobsFilterOperatorEnum = "LTE"
	SearchJobsFilterOperatorEnumEqual    SearchJobsFilterOperatorEnum = "EQUAL"
	SearchJobsFilterOperatorEnumGt       SearchJobsFilterOperatorEnum = "GT"
	SearchJobsFilterOperatorEnumGte      SearchJobsFilterOperatorEnum = "GTE"
	SearchJobsFilterOperatorEnumBetween  SearchJobsFilterOperatorEnum = "BETWEEN"
	SearchJobsFilterOperatorEnumContains SearchJobsFilterOperatorEnum = "CONTAINS"
)

func (e SearchJobsFilterOperatorEnum) ToPointer() *SearchJobsFilterOperatorEnum {
	return &e
}

func (e *SearchJobsFilterOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LT":
		fallthrough
	case "LTE":
		fallthrough
	case "EQUAL":
		fallthrough
	case "GT":
		fallthrough
	case "GTE":
		fallthrough
	case "BETWEEN":
		fallthrough
	case "CONTAINS":
		*e = SearchJobsFilterOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchJobsFilterOperatorEnum: %v", v)
	}
}
