<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * POSTAccountTypeCreditCardCardHolderInfo - Container for cardholder information. If provided, Zuora
 * 
 *       will only use this information for this card.  If not provided, Zuora
 *       will use the account''s existing bill-to contact information for this
 *       card.
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class POSTAccountTypeCreditCardCardHolderInfo
{
    /**
     * First address line, 255 characters or less.
     * 
     * 
     * 
     * @var string $addressLine1
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressLine1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressLine1;
    
    /**
     * Second address line, 255 characters or less.
     * 
     * 
     * 
     * @var ?string $addressLine2
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressLine2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine2 = null;
    
    /**
     * The card holder's full name as it appears on the card, e.g., "John J Smith", 50 characters or less.
     * 
     * 
     * 
     * @var string $cardHolderName
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardHolderName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardHolderName;
    
    /**
     * City, 40 characters or less.
     * 
     * 
     * 
     * @var string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $city;
    
    /**
     * Country; must be a valid country name or abbreviation.
     * 
     * 
     * 
     * @var string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $country;
    
    /**
     * Card holder's email address, 80 characters or less.
     * 
     * 
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Phone number, 40 characters or less.
     * 
     * 
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
    /**
     * State; must be a valid state name or 2-character abbreviation.
     * 
     * 
     * 
     * @var string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $state;
    
    /**
     * Zip code, 20 characters or less.
     * 
     * 
     * 
     * @var string $zipCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('zipCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $zipCode;
    
	public function __construct()
	{
		$this->addressLine1 = "";
		$this->addressLine2 = null;
		$this->cardHolderName = "";
		$this->city = "";
		$this->country = "";
		$this->email = null;
		$this->phone = null;
		$this->state = "";
		$this->zipCode = "";
	}
}
