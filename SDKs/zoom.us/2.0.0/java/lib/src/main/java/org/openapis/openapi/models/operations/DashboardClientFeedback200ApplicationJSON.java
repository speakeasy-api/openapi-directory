/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * DashboardClientFeedback200ApplicationJSON - **HTTP Status Code:** `200`&lt;br&gt;
 * Client Feedback details returned.
 */
public class DashboardClientFeedback200ApplicationJSON {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_feedbacks")
    public DashboardClientFeedback200ApplicationJSONClientFeedbacks[] clientFeedbacks;
    public DashboardClientFeedback200ApplicationJSON withClientFeedbacks(DashboardClientFeedback200ApplicationJSONClientFeedbacks[] clientFeedbacks) {
        this.clientFeedbacks = clientFeedbacks;
        return this;
    }
    
    /**
     * Start date for this report
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("from")
    public LocalDate from;
    public DashboardClientFeedback200ApplicationJSON withFrom(LocalDate from) {
        this.from = from;
        return this;
    }
    
    /**
     * End date for this report
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("to")
    public LocalDate to;
    public DashboardClientFeedback200ApplicationJSON withTo(LocalDate to) {
        this.to = to;
        return this;
    }
    
    /**
     * The number of all records available across pages
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_records")
    public Long totalRecords;
    public DashboardClientFeedback200ApplicationJSON withTotalRecords(Long totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }
    
}
