// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// OrgsUpdateCustomRoleRequestBodyBaseRoleEnum - The system role from which this role inherits permissions.
type OrgsUpdateCustomRoleRequestBodyBaseRoleEnum string

const (
	OrgsUpdateCustomRoleRequestBodyBaseRoleEnumRead     OrgsUpdateCustomRoleRequestBodyBaseRoleEnum = "read"
	OrgsUpdateCustomRoleRequestBodyBaseRoleEnumTriage   OrgsUpdateCustomRoleRequestBodyBaseRoleEnum = "triage"
	OrgsUpdateCustomRoleRequestBodyBaseRoleEnumWrite    OrgsUpdateCustomRoleRequestBodyBaseRoleEnum = "write"
	OrgsUpdateCustomRoleRequestBodyBaseRoleEnumMaintain OrgsUpdateCustomRoleRequestBodyBaseRoleEnum = "maintain"
)

func (e OrgsUpdateCustomRoleRequestBodyBaseRoleEnum) ToPointer() *OrgsUpdateCustomRoleRequestBodyBaseRoleEnum {
	return &e
}

func (e *OrgsUpdateCustomRoleRequestBodyBaseRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read":
		fallthrough
	case "triage":
		fallthrough
	case "write":
		fallthrough
	case "maintain":
		*e = OrgsUpdateCustomRoleRequestBodyBaseRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrgsUpdateCustomRoleRequestBodyBaseRoleEnum: %v", v)
	}
}

type OrgsUpdateCustomRoleRequestBody struct {
	// The system role from which this role inherits permissions.
	BaseRole *OrgsUpdateCustomRoleRequestBodyBaseRoleEnum `json:"base_role,omitempty"`
	// A short description about who this role is for or what permissions it grants.
	Description *string `json:"description,omitempty"`
	// The name of the custom role.
	Name *string `json:"name,omitempty"`
	// A list of additional permissions included in this role. If specified, these permissions will replace any currently set on the role.
	Permissions []string `json:"permissions,omitempty"`
}

type OrgsUpdateCustomRoleRequest struct {
	RequestBody OrgsUpdateCustomRoleRequestBody `request:"mediaType=application/json"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
	// The unique identifier of the role.
	RoleID int64 `pathParam:"style=simple,explode=false,name=role_id"`
}

type OrgsUpdateCustomRoleResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	OrganizationCustomRepositoryRole *shared.OrganizationCustomRepositoryRole
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
