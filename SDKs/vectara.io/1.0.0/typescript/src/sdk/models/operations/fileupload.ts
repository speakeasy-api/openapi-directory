/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class FileUploadSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiKeyAuth?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth?: string;
}

export class FileUploadRequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class FileUploadRequestBody extends SpeakeasyBase {
  /**
   * A JSON string of any additional metadata you want attached to the file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=doc_metadata" })
  docMetadata?: string;

  /**
   * The file to be indexed into Vectara.
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file?: FileUploadRequestBodyFile;
}

export class FileUploadRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: FileUploadRequestBody;

  /**
   * Customer ID
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=c" })
  c: number;

  /**
   * If true, the server returns the extracted document that was indexed
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=d" })
  d?: boolean;

  /**
   * Corpus ID
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=o" })
  o: number;
}

/**
 * An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.
 */
export class FileUpload400ApplicationJSON extends SpeakeasyBase {
  /**
   * Returned HTTP code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpCode" })
  httpCode?: number;
}

export class FileUpload200ApplicationJSONResponseQuotaConsumed extends SpeakeasyBase {
  /**
   * The number of characters Vectara indexed from the file uploaded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numChars" })
  numChars?: string;

  /**
   * The number of metadata characters Vectara indexed from the file uploaded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numMetadataChars" })
  numMetadataChars?: string;
}

export class FileUpload200ApplicationJSONResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "quotaConsumed" })
  @Type(() => FileUpload200ApplicationJSONResponseQuotaConsumed)
  quotaConsumed?: FileUpload200ApplicationJSONResponseQuotaConsumed;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: Record<string, any>;
}

/**
 * A successful response
 */
export class FileUpload200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  @Type(() => FileUpload200ApplicationJSONResponse)
  response?: FileUpload200ApplicationJSONResponse;
}

export class FileUploadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * A successful response
   */
  @SpeakeasyMetadata()
  fileUpload200ApplicationJSONObject?: FileUpload200ApplicationJSON;

  /**
   * An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.
   */
  @SpeakeasyMetadata()
  fileUpload400ApplicationJSONObject?: FileUpload400ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
