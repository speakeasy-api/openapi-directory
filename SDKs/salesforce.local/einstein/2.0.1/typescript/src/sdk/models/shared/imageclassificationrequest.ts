/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class ImageClassificationRequest extends SpeakeasyBase {
  /**
   * ID of the model that makes the prediction.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=modelId" })
  @Expose({ name: "modelId" })
  modelId: string;

  /**
   * Number of probabilities to return.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=numResults" })
  @Expose({ name: "numResults" })
  numResults?: number;

  /**
   * The image contained in a base64 string.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=sampleBase64Content" })
  @Expose({ name: "sampleBase64Content" })
  sampleBase64Content?: string;

  /**
   * String that you can pass in to tag the prediction. Optional. Can be any value, and is returned in the response.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=sampleId" })
  @Expose({ name: "sampleId" })
  sampleId?: string;

  /**
   * URL of the image file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=sampleLocation" })
  @Expose({ name: "sampleLocation" })
  sampleLocation?: string;
}
