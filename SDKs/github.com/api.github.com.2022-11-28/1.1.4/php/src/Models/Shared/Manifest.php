<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Manifest
{
	#[\JMS\Serializer\Annotation\SerializedName('file')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManifestFile')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManifestFile $file = null;
    
    /**
     * User-defined metadata to store domain-specific information limited to 8 keys with scalar values.
     * 
     * @var ?array<string, mixed> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * The name of the manifest.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * A collection of resolved package dependencies.
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\Dependency> $resolved
     */
	#[\JMS\Serializer\Annotation\SerializedName('resolved')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\Dependency>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resolved = null;
    
	public function __construct()
	{
		$this->file = null;
		$this->metadata = null;
		$this->name = "";
		$this->resolved = null;
	}
}
