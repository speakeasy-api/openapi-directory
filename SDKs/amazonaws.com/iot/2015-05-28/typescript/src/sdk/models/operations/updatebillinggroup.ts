/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The properties of a billing group.
 */
export class UpdateBillingGroupRequestBodyBillingGroupProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billingGroupDescription" })
  billingGroupDescription?: string;
}

export class UpdateBillingGroupRequestBody extends SpeakeasyBase {
  /**
   * The properties of a billing group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingGroupProperties" })
  @Type(() => UpdateBillingGroupRequestBodyBillingGroupProperties)
  billingGroupProperties: UpdateBillingGroupRequestBodyBillingGroupProperties;

  /**
   * The expected version of the billing group. If the version of the billing group does not match the expected version specified in the request, the <code>UpdateBillingGroup</code> request is rejected with a <code>VersionConflictException</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedVersion" })
  expectedVersion?: number;
}

export class UpdateBillingGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateBillingGroupRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the billing group.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=billingGroupName",
  })
  billingGroupName: string;
}

export class UpdateBillingGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateBillingGroupResponse?: shared.UpdateBillingGroupResponse;

  /**
   * VersionConflictException
   */
  @SpeakeasyMetadata()
  versionConflictException?: any;
}
