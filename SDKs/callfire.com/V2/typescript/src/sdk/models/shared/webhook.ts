/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Webhook is a user-defined callback, which can be maintained via API. CallFire will send POST request to a client's endpoint defined in webhook once one of assigned events is triggered. See [webhooks guide](https://developers.callfire.com/webhooks-guide.html) for more information about CallFire Webhooks API.
 */
export class WebhookInput extends SpeakeasyBase {
  /**
   * URL that webhook will send POST to on resource event trigger
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callback" })
  callback?: string;

  /**
   * A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl certificate verification is disabled)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Comma separated list of events on resource that will trigger callbacks (ex: STARTED, STOPPED, FINISHED, etc...).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: string[];

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiresAt" })
  expiresAt?: number;

  /**
   * A limit callback response to a particular fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: string;

  /**
   * An id of a webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * A name of a webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl certificate verification is disabled)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonStrictSsl" })
  nonStrictSsl?: boolean;

  /**
   * A resource name that webhook is watching events on. Use GET /webhooks/resources to determine resources and events available (ex: InboundCall, OutboundCall, InboundText, OutboundText, CallBroadcast, TextBroadcast, etc...)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource?: string;

  /**
   * Webhook secret token which is used as a signing key to HmacSHA1 hash of json payload which is returned in 'X-CallFire-Signature' header. This header can be used to verify callback POST is coming from CallFire. See [security guide](https://developers.callfire.com/security-guide.html)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * If true is set then webhook triggers only once. Afterwards the webhook will be deleted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "singleUse" })
  singleUse?: boolean;
}

/**
 * Webhook is a user-defined callback, which can be maintained via API. CallFire will send POST request to a client's endpoint defined in webhook once one of assigned events is triggered. See [webhooks guide](https://developers.callfire.com/webhooks-guide.html) for more information about CallFire Webhooks API.
 */
export class Webhook extends SpeakeasyBase {
  /**
   * URL that webhook will send POST to on resource event trigger
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callback" })
  callback?: string;

  /**
   * A time when the given resource was created, formatted in unix time milliseconds (read only). Example: 1473781817000
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: number;

  /**
   * A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl certificate verification is disabled)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Comma separated list of events on resource that will trigger callbacks (ex: STARTED, STOPPED, FINISHED, etc...).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: string[];

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiresAt" })
  expiresAt?: number;

  /**
   * A limit callback response to a particular fields
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fields" })
  fields?: string;

  /**
   * An id of a webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * A name of a webhook
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A parameter which allows the webhook to send requests to unknown ssl endpoints (ssl certificate verification is disabled)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nonStrictSsl" })
  nonStrictSsl?: boolean;

  /**
   * A resource name that webhook is watching events on. Use GET /webhooks/resources to determine resources and events available (ex: InboundCall, OutboundCall, InboundText, OutboundText, CallBroadcast, TextBroadcast, etc...)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource?: string;

  /**
   * Webhook secret token which is used as a signing key to HmacSHA1 hash of json payload which is returned in 'X-CallFire-Signature' header. This header can be used to verify callback POST is coming from CallFire. See [security guide](https://developers.callfire.com/security-guide.html)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * If true is set then webhook triggers only once. Afterwards the webhook will be deleted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "singleUse" })
  singleUse?: boolean;

  /**
   * A time when the given resource was updated, formatted in unix time milliseconds (read only). Example: 1473781817000
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  updatedAt?: number;
}
