// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum - Type of this Match.
type GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum string

const (
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumMatchTypeUnspecified GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "MATCH_TYPE_UNSPECIFIED"
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumIntent               GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "INTENT"
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumDirectIntent         GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "DIRECT_INTENT"
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumParameterFilling     GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "PARAMETER_FILLING"
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumNoMatch              GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "NO_MATCH"
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumNoInput              GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "NO_INPUT"
	GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnumEvent                GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum = "EVENT"
)

func (e *GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MATCH_TYPE_UNSPECIFIED":
		fallthrough
	case "INTENT":
		fallthrough
	case "DIRECT_INTENT":
		fallthrough
	case "PARAMETER_FILLING":
		fallthrough
	case "NO_MATCH":
		fallthrough
	case "NO_INPUT":
		fallthrough
	case "EVENT":
		*e = GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum: %s", s)
	}
}

// GoogleCloudDialogflowCxV3beta1Match - Represents one match result of MatchIntent.
type GoogleCloudDialogflowCxV3beta1Match struct {
	// The confidence of this match. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
	Confidence *float32 `json:"confidence,omitempty"`
	// The event that matched the query. Filled for `EVENT`, `NO_MATCH` and `NO_INPUT` match types.
	Event *string `json:"event,omitempty"`
	// An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
	Intent *GoogleCloudDialogflowCxV3beta1Intent `json:"intent,omitempty"`
	// Type of this Match.
	MatchType *GoogleCloudDialogflowCxV3beta1MatchMatchTypeEnum `json:"matchType,omitempty"`
	// The collection of parameters extracted from the query. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value.
	Parameters map[string]interface{} `json:"parameters,omitempty"`
	// Final text input which was matched during MatchIntent. This value can be different from original input sent in request because of spelling correction or other processing.
	ResolvedInput *string `json:"resolvedInput,omitempty"`
}
