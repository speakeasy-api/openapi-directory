// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum - An error code related to why an IPAM pool CIDR failed to be provisioned.
type GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum string

const (
	GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnumCidrNotAvailable GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum = "cidr-not-available"
	GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnumLimitExceeded    GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum = "limit-exceeded"
)

func (e *GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cidr-not-available":
		fallthrough
	case "limit-exceeded":
		*e = GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum: %s", s)
	}
}

// GetIpamPoolCidrsResultIpamPoolCidrsFailureReason - Details related to why an IPAM pool CIDR failed to be provisioned.
type GetIpamPoolCidrsResultIpamPoolCidrsFailureReason struct {
	Code    *GetIpamPoolCidrsResultIpamPoolCidrsFailureReasonCodeEnum
	Message *string
}

// GetIpamPoolCidrsResultIpamPoolCidrsStateEnum - The state of the CIDR.
type GetIpamPoolCidrsResultIpamPoolCidrsStateEnum string

const (
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumPendingProvision   GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "pending-provision"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumProvisioned        GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "provisioned"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumFailedProvision    GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "failed-provision"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumPendingDeprovision GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "pending-deprovision"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumDeprovisioned      GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "deprovisioned"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumFailedDeprovision  GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "failed-deprovision"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumPendingImport      GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "pending-import"
	GetIpamPoolCidrsResultIpamPoolCidrsStateEnumFailedImport       GetIpamPoolCidrsResultIpamPoolCidrsStateEnum = "failed-import"
)

func (e *GetIpamPoolCidrsResultIpamPoolCidrsStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending-provision":
		fallthrough
	case "provisioned":
		fallthrough
	case "failed-provision":
		fallthrough
	case "pending-deprovision":
		fallthrough
	case "deprovisioned":
		fallthrough
	case "failed-deprovision":
		fallthrough
	case "pending-import":
		fallthrough
	case "failed-import":
		*e = GetIpamPoolCidrsResultIpamPoolCidrsStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIpamPoolCidrsResultIpamPoolCidrsStateEnum: %s", s)
	}
}

// GetIpamPoolCidrsResultIpamPoolCidrs - A CIDR provisioned to an IPAM pool.
type GetIpamPoolCidrsResultIpamPoolCidrs struct {
	Cidr           *string
	FailureReason  *GetIpamPoolCidrsResultIpamPoolCidrsFailureReason
	IpamPoolCidrID *string
	NetmaskLength  *int64
	State          *GetIpamPoolCidrsResultIpamPoolCidrsStateEnum
}

// GetIpamPoolCidrsResult - Success
type GetIpamPoolCidrsResult struct {
	IpamPoolCidrs []GetIpamPoolCidrsResultIpamPoolCidrs
	NextToken     *string
}
