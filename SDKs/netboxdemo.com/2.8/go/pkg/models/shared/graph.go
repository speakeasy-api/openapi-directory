// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GraphTemplateLanguageEnum string

const (
	GraphTemplateLanguageEnumDjango GraphTemplateLanguageEnum = "django"
	GraphTemplateLanguageEnumJinja2 GraphTemplateLanguageEnum = "jinja2"
)

func (e *GraphTemplateLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "django":
		fallthrough
	case "jinja2":
		*e = GraphTemplateLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GraphTemplateLanguageEnum: %s", s)
	}
}

type GraphInput struct {
	Link             *string                    `json:"link,omitempty"`
	Name             string                     `json:"name"`
	Source           string                     `json:"source"`
	TemplateLanguage *GraphTemplateLanguageEnum `json:"template_language,omitempty"`
	Type             string                     `json:"type"`
	Weight           *int64                     `json:"weight,omitempty"`
}

type Graph struct {
	ID               *int64                     `json:"id,omitempty"`
	Link             *string                    `json:"link,omitempty"`
	Name             string                     `json:"name"`
	Source           string                     `json:"source"`
	TemplateLanguage *GraphTemplateLanguageEnum `json:"template_language,omitempty"`
	Type             string                     `json:"type"`
	Weight           *int64                     `json:"weight,omitempty"`
}
