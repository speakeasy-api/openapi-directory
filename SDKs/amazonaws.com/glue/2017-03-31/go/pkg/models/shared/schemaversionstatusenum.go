// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SchemaVersionStatusEnum string

const (
	SchemaVersionStatusEnumAvailable SchemaVersionStatusEnum = "AVAILABLE"
	SchemaVersionStatusEnumPending   SchemaVersionStatusEnum = "PENDING"
	SchemaVersionStatusEnumFailure   SchemaVersionStatusEnum = "FAILURE"
	SchemaVersionStatusEnumDeleting  SchemaVersionStatusEnum = "DELETING"
)

func (e SchemaVersionStatusEnum) ToPointer() *SchemaVersionStatusEnum {
	return &e
}

func (e *SchemaVersionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVAILABLE":
		fallthrough
	case "PENDING":
		fallthrough
	case "FAILURE":
		fallthrough
	case "DELETING":
		*e = SchemaVersionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaVersionStatusEnum: %v", v)
	}
}
