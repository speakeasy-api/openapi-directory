// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListVariantStoresQueryParams struct {
	// The maximum number of stores to return in one page of results.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Specify the pagination token from a previous request to retrieve the next page of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListVariantStoresHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// ListVariantStoresRequestBodyFilter - A filter for variant stores.
type ListVariantStoresRequestBodyFilter struct {
	Status *shared.StoreStatusEnum `json:"status,omitempty"`
}

type ListVariantStoresRequestBody struct {
	// A filter for variant stores.
	Filter *ListVariantStoresRequestBodyFilter `json:"filter,omitempty"`
	// A list of store IDs.
	Ids []string `json:"ids,omitempty"`
}

type ListVariantStoresRequest struct {
	QueryParams ListVariantStoresQueryParams
	Headers     ListVariantStoresHeaders
	Request     ListVariantStoresRequestBody `request:"mediaType=application/json"`
}

type ListVariantStoresResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListVariantStoresResponse *shared.ListVariantStoresResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
