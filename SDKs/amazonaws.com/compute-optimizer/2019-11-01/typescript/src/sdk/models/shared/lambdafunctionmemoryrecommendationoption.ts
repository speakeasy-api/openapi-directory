/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LambdaFunctionMemoryProjectedMetric } from "./lambdafunctionmemoryprojectedmetric";
import { SavingsOpportunity } from "./savingsopportunity";
import { Expose, Type } from "class-transformer";

/**
 * Describes a recommendation option for an Lambda function.
 */
export class LambdaFunctionMemoryRecommendationOption extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "memorySize" })
  memorySize?: number;

  @SpeakeasyMetadata({ elemType: LambdaFunctionMemoryProjectedMetric })
  @Expose({ name: "projectedUtilizationMetrics" })
  @Type(() => LambdaFunctionMemoryProjectedMetric)
  projectedUtilizationMetrics?: LambdaFunctionMemoryProjectedMetric[];

  @SpeakeasyMetadata()
  @Expose({ name: "rank" })
  rank?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "savingsOpportunity" })
  @Type(() => SavingsOpportunity)
  savingsOpportunity?: SavingsOpportunity;
}
