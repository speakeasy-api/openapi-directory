"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import enterprisecrmeventbusprotoparamspecentryconfig as shared_enterprisecrmeventbusprotoparamspecentryconfig
from ..shared import enterprisecrmeventbusprotoparamspecentryprotodefinition as shared_enterprisecrmeventbusprotoparamspecentryprotodefinition
from ..shared import enterprisecrmeventbusprotoparamspecentryvalidationrule as shared_enterprisecrmeventbusprotoparamspecentryvalidationrule
from ..shared import enterprisecrmfrontendseventbusprotoparametervaluetype as shared_enterprisecrmfrontendseventbusprotoparametervaluetype
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataTypeEnum(str, Enum):
    r"""The data type of the parameter."""
    DATA_TYPE_UNSPECIFIED = 'DATA_TYPE_UNSPECIFIED'
    STRING_VALUE = 'STRING_VALUE'
    INT_VALUE = 'INT_VALUE'
    DOUBLE_VALUE = 'DOUBLE_VALUE'
    BOOLEAN_VALUE = 'BOOLEAN_VALUE'
    PROTO_VALUE = 'PROTO_VALUE'
    SERIALIZED_OBJECT_VALUE = 'SERIALIZED_OBJECT_VALUE'
    STRING_ARRAY = 'STRING_ARRAY'
    INT_ARRAY = 'INT_ARRAY'
    DOUBLE_ARRAY = 'DOUBLE_ARRAY'
    PROTO_ARRAY = 'PROTO_ARRAY'
    PROTO_ENUM = 'PROTO_ENUM'
    BOOLEAN_ARRAY = 'BOOLEAN_ARRAY'
    PROTO_ENUM_ARRAY = 'PROTO_ENUM_ARRAY'
    BYTES = 'BYTES'
    BYTES_ARRAY = 'BYTES_ARRAY'
    NON_SERIALIZABLE_OBJECT = 'NON_SERIALIZABLE_OBJECT'
    JSON_VALUE = 'JSON_VALUE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmFrontendsEventbusProtoParamSpecEntry:
    r"""Key-value pair of EventBus task parameters. Next id: 13"""
    
    class_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('className'), 'exclude': lambda f: f is None }})
    r"""The FQCN of the Java object this represents. A string, for example, would be \\"java.lang.String\\". If this is \\"java.lang.Object\\", the parameter can be of any type."""  
    collection_element_class_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collectionElementClassName'), 'exclude': lambda f: f is None }})
    r"""If it is a collection of objects, this would be the FCQN of every individual element in the collection. If this is \\"java.lang.Object\\", the parameter is a collection of any type."""  
    config: Optional[shared_enterprisecrmeventbusprotoparamspecentryconfig.EnterpriseCrmEventbusProtoParamSpecEntryConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('config'), 'exclude': lambda f: f is None }})  
    data_type: Optional[EnterpriseCrmFrontendsEventbusProtoParamSpecEntryDataTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataType'), 'exclude': lambda f: f is None }})
    r"""The data type of the parameter."""  
    default_value: Optional[shared_enterprisecrmfrontendseventbusprotoparametervaluetype.EnterpriseCrmFrontendsEventbusProtoParameterValueType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultValue'), 'exclude': lambda f: f is None }})
    r"""To support various types of parameter values. Next available id: 14"""  
    is_deprecated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDeprecated'), 'exclude': lambda f: f is None }})
    r"""If set, this entry is deprecated, so further use of this parameter should be prohibited."""  
    is_output: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isOutput'), 'exclude': lambda f: f is None }})  
    json_schema: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jsonSchema'), 'exclude': lambda f: f is None }})
    r"""If the data_type is JSON_VALUE, then this will define its schema."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Key is used to retrieve the corresponding parameter value. This should be unique for a given task. These parameters must be predefined in the workflow definition."""  
    proto_def: Optional[shared_enterprisecrmeventbusprotoparamspecentryprotodefinition.EnterpriseCrmEventbusProtoParamSpecEntryProtoDefinition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protoDef'), 'exclude': lambda f: f is None }})  
    required: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required'), 'exclude': lambda f: f is None }})
    r"""If set, the user must provide an input value for this parameter."""  
    validation_rule: Optional[shared_enterprisecrmeventbusprotoparamspecentryvalidationrule.EnterpriseCrmEventbusProtoParamSpecEntryValidationRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationRule'), 'exclude': lambda f: f is None }})  
    