/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeFilter } from "./attributefilter";
import { DocumentRelevanceConfiguration } from "./documentrelevanceconfiguration";
import { Facet } from "./facet";
import { QueryResultTypeEnum } from "./queryresulttypeenum";
import { SortingConfiguration } from "./sortingconfiguration";
import { SpellCorrectionConfiguration } from "./spellcorrectionconfiguration";
import { UserContext } from "./usercontext";
import { Expose, Type } from "class-transformer";

export class QueryRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AttributeFilter" })
  @Type(() => AttributeFilter)
  attributeFilter?: AttributeFilter;

  @SpeakeasyMetadata({ elemType: DocumentRelevanceConfiguration })
  @Expose({ name: "DocumentRelevanceOverrideConfigurations" })
  @Type(() => DocumentRelevanceConfiguration)
  documentRelevanceOverrideConfigurations?: DocumentRelevanceConfiguration[];

  @SpeakeasyMetadata({ elemType: Facet })
  @Expose({ name: "Facets" })
  @Type(() => Facet)
  facets?: Facet[];

  @SpeakeasyMetadata()
  @Expose({ name: "IndexId" })
  indexId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PageNumber" })
  pageNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PageSize" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryResultTypeFilter" })
  queryResultTypeFilter?: QueryResultTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "QueryText" })
  queryText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestedDocumentAttributes" })
  requestedDocumentAttributes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SortingConfiguration" })
  @Type(() => SortingConfiguration)
  sortingConfiguration?: SortingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "SpellCorrectionConfiguration" })
  @Type(() => SpellCorrectionConfiguration)
  spellCorrectionConfiguration?: SpellCorrectionConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "UserContext" })
  @Type(() => UserContext)
  userContext?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "VisitorId" })
  visitorId?: string;
}
