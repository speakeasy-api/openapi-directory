// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ECSServiceRecommendationFindingReasonCodeEnum string

const (
	ECSServiceRecommendationFindingReasonCodeEnumMemoryOverprovisioned  ECSServiceRecommendationFindingReasonCodeEnum = "MemoryOverprovisioned"
	ECSServiceRecommendationFindingReasonCodeEnumMemoryUnderprovisioned ECSServiceRecommendationFindingReasonCodeEnum = "MemoryUnderprovisioned"
	ECSServiceRecommendationFindingReasonCodeEnumCPUOverprovisioned     ECSServiceRecommendationFindingReasonCodeEnum = "CPUOverprovisioned"
	ECSServiceRecommendationFindingReasonCodeEnumCPUUnderprovisioned    ECSServiceRecommendationFindingReasonCodeEnum = "CPUUnderprovisioned"
)

func (e ECSServiceRecommendationFindingReasonCodeEnum) ToPointer() *ECSServiceRecommendationFindingReasonCodeEnum {
	return &e
}

func (e *ECSServiceRecommendationFindingReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MemoryOverprovisioned":
		fallthrough
	case "MemoryUnderprovisioned":
		fallthrough
	case "CPUOverprovisioned":
		fallthrough
	case "CPUUnderprovisioned":
		*e = ECSServiceRecommendationFindingReasonCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ECSServiceRecommendationFindingReasonCodeEnum: %v", v)
	}
}
