/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetNamesInsideQueryParams {
    /**
     * A geographic bounding box defining the search area.  Must be specified as a string of the form 'minLongitude,minLatitude,maxLongitude,maxLatitude' (WGS84). e.g. -119,49,-118,50
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=bbox")
    public String bbox;
    public GetNamesInsideQueryParams withBbox(String bbox) {
        this.bbox = bbox;
        return this;
    }
    
    /**
     * A flag to indicate whether to embed the corresponding 'feature' into each matching name
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=embed")
    public GetNamesInsideEmbedEnum embed;
    public GetNamesInsideQueryParams withEmbed(GetNamesInsideEmbedEnum embed) {
        this.embed = embed;
        return this;
    }
    
    /**
     * A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=featureCategory")
    public String featureCategory;
    public GetNamesInsideQueryParams withFeatureCategory(String featureCategory) {
        this.featureCategory = featureCategory;
        return this;
    }
    
    /**
     * A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=featureClass")
    public String featureClass;
    public GetNamesInsideQueryParams withFeatureClass(String featureClass) {
        this.featureClass = featureClass;
        return this;
    }
    
    /**
     * A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=featureType")
    public String featureType;
    public GetNamesInsideQueryParams withFeatureType(String featureType) {
        this.featureType = featureType;
        return this;
    }
    
    /**
     * The number of search results to return (1-200)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=itemsPerPage")
    public Long itemsPerPage;
    public GetNamesInsideQueryParams withItemsPerPage(Long itemsPerPage) {
        this.itemsPerPage = itemsPerPage;
        return this;
    }
    
    /**
     * The format of the output.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=outputFormat")
    public GetNamesInsideOutputFormatEnum outputFormat;
    public GetNamesInsideQueryParams withOutputFormat(GetNamesInsideOutputFormatEnum outputFormat) {
        this.outputFormat = outputFormat;
        return this;
    }
    
    /**
     * The EPSG code of the spatial reference system (SRS) to use for output geometries.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=outputSRS")
    public GetNamesInsideOutputSrsEnum outputSRS;
    public GetNamesInsideQueryParams withOutputSRS(GetNamesInsideOutputSrsEnum outputSRS) {
        this.outputSRS = outputSRS;
        return this;
    }
    
    /**
     * A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=outputStyle")
    public GetNamesInsideOutputStyleEnum outputStyle;
    public GetNamesInsideQueryParams withOutputStyle(GetNamesInsideOutputStyleEnum outputStyle) {
        this.outputStyle = outputStyle;
        return this;
    }
    
    /**
     * The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sortBy")
    public GetNamesInsideSortByEnum sortBy;
    public GetNamesInsideQueryParams withSortBy(GetNamesInsideSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * The index of the first record to be returned (&gt;= 1)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startIndex")
    public Long startIndex;
    public GetNamesInsideQueryParams withStartIndex(Long startIndex) {
        this.startIndex = startIndex;
        return this;
    }
    
}
