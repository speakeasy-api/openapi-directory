/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IntegerPropertyOptions - The options for integer properties.
 */
public class IntegerPropertyOptions {
    /**
     * Used to specify integer faceting options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integerFacetingOptions")
    public IntegerFacetingOptions integerFacetingOptions;
    public IntegerPropertyOptions withIntegerFacetingOptions(IntegerFacetingOptions integerFacetingOptions) {
        this.integerFacetingOptions = integerFacetingOptions;
        return this;
    }
    
    /**
     * The maximum value of the property. The minimum and maximum values for the property are used to rank results according to the ordered ranking. Indexing requests with values greater than the maximum are accepted and ranked with the same weight as items indexed with the maximum value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumValue")
    public String maximumValue;
    public IntegerPropertyOptions withMaximumValue(String maximumValue) {
        this.maximumValue = maximumValue;
        return this;
    }
    
    /**
     * The minimum value of the property. The minimum and maximum values for the property are used to rank results according to the ordered ranking. Indexing requests with values less than the minimum are accepted and ranked with the same weight as items indexed with the minimum value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumValue")
    public String minimumValue;
    public IntegerPropertyOptions withMinimumValue(String minimumValue) {
        this.minimumValue = minimumValue;
        return this;
    }
    
    /**
     * Used to provide a search operator for integer properties. This is optional. Search operators let users restrict the query to specific fields relevant to the type of item being searched.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operatorOptions")
    public IntegerOperatorOptions operatorOptions;
    public IntegerPropertyOptions withOperatorOptions(IntegerOperatorOptions operatorOptions) {
        this.operatorOptions = operatorOptions;
        return this;
    }
    
    /**
     * Used to specify the ordered ranking for the integer. Can only be used if isRepeatable is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderedRanking")
    public IntegerPropertyOptionsOrderedRankingEnum orderedRanking;
    public IntegerPropertyOptions withOrderedRanking(IntegerPropertyOptionsOrderedRankingEnum orderedRanking) {
        this.orderedRanking = orderedRanking;
        return this;
    }
    
}
