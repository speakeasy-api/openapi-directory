<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * CreateMemberRequestBody - Create a Member in invite state 
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class CreateMemberRequestBody
{
    /**
     * Invite or join a member to a conversation
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MemberActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MemberActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\OpenAPI\OpenAPI\Models\Shared\MemberActionEnum $action = null;
    
    /**
     * A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\Channel $channel
     */
	#[\JMS\Serializer\Annotation\SerializedName('channel')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Channel')]
    public \OpenAPI\OpenAPI\Models\Shared\Channel $channel;
    
    /**
     * Knocker ID. A knocker is a pre-member of a conversation who does not exist yet
     * 
     * @var ?string $knockingId
     */
	#[\JMS\Serializer\Annotation\SerializedName('knocking_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $knockingId = null;
    
    /**
     * Media Object
     * 
     * @var ?array<string, mixed> $media
     */
	#[\JMS\Serializer\Annotation\SerializedName('media')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $media = null;
    
    /**
     * Member ID
     * 
     * @var ?string $memberId
     */
	#[\JMS\Serializer\Annotation\SerializedName('member_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memberId = null;
    
    /**
     * Member ID of the member that sends the invitation
     * 
     * @var ?string $memberIdInviting
     */
	#[\JMS\Serializer\Annotation\SerializedName('member_id_inviting')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memberIdInviting = null;
    
    /**
     * User ID
     * 
     * @var string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $userId;
    
	public function __construct()
	{
		$this->action = null;
		$this->channel = new \OpenAPI\OpenAPI\Models\Shared\Channel();
		$this->knockingId = null;
		$this->media = null;
		$this->memberId = null;
		$this->memberIdInviting = null;
		$this->userId = "";
	}
}
