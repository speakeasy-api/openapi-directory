// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BillingUpdateBillingPeriodAlignmentEnum string

const (
	BillingUpdateBillingPeriodAlignmentEnumAlignToCharge            BillingUpdateBillingPeriodAlignmentEnum = "AlignToCharge"
	BillingUpdateBillingPeriodAlignmentEnumAlignToSubscriptionStart BillingUpdateBillingPeriodAlignmentEnum = "AlignToSubscriptionStart"
	BillingUpdateBillingPeriodAlignmentEnumAlignToTermStart         BillingUpdateBillingPeriodAlignmentEnum = "AlignToTermStart"
)

func (e *BillingUpdateBillingPeriodAlignmentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AlignToCharge":
		fallthrough
	case "AlignToSubscriptionStart":
		fallthrough
	case "AlignToTermStart":
		*e = BillingUpdateBillingPeriodAlignmentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BillingUpdateBillingPeriodAlignmentEnum: %s", s)
	}
}

type BillingUpdate struct {
	BillingPeriodAlignment *BillingUpdateBillingPeriodAlignmentEnum `json:"billingPeriodAlignment,omitempty"`
}
