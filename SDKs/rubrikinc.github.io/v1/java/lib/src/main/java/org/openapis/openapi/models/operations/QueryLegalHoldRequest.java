/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryLegalHoldRequest {
    /**
     * Limits the list to snapshots with holds created after a specified date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after_date")
    public OffsetDateTime afterDate;

    public QueryLegalHoldRequest withAfterDate(OffsetDateTime afterDate) {
        this.afterDate = afterDate;
        return this;
    }
    
    /**
     * Limits the list to snapshots with holds created before a specified date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before_date")
    public OffsetDateTime beforeDate;

    public QueryLegalHoldRequest withBeforeDate(OffsetDateTime beforeDate) {
        this.beforeDate = beforeDate;
        return this;
    }
    
    /**
     * Limit the number of matches returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryLegalHoldRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Limit the list to snapshot for the particular object.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=object_id")
    public String objectId;

    public QueryLegalHoldRequest withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * Limits the list to objects that match a specified value for the object name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=object_name")
    public String objectName;

    public QueryLegalHoldRequest withObjectName(String objectName) {
        this.objectName = objectName;
        return this;
    }
    
    /**
     * Limits the list to objects that match a specified type.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=object_type")
    public String objectType;

    public QueryLegalHoldRequest withObjectType(String objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * An integer that specifies a number of initial matches to ignore.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryLegalHoldRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Limits the list to snapshots which were placed on legal hold after a specified date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=placed_on_hold_after_date")
    public OffsetDateTime placedOnHoldAfterDate;

    public QueryLegalHoldRequest withPlacedOnHoldAfterDate(OffsetDateTime placedOnHoldAfterDate) {
        this.placedOnHoldAfterDate = placedOnHoldAfterDate;
        return this;
    }
    
    /**
     * Limits the list to snapshots which were placed on legal hold before a specified date.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=placed_on_hold_before_date")
    public OffsetDateTime placedOnHoldBeforeDate;

    public QueryLegalHoldRequest withPlacedOnHoldBeforeDate(OffsetDateTime placedOnHoldBeforeDate) {
        this.placedOnHoldBeforeDate = placedOnHoldBeforeDate;
        return this;
    }
    
    /**
     * Specifies the type of snapshots to be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=snapshot_type")
    public QueryLegalHoldSnapshotTypeEnum snapshotType;

    public QueryLegalHoldRequest withSnapshotType(QueryLegalHoldSnapshotTypeEnum snapshotType) {
        this.snapshotType = snapshotType;
        return this;
    }
    
    /**
     * The attribute used to sort summary information. The optional parameter **_sort_order_** specifies ascending or descending sort order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryLegalHoldSortByEnum sortBy;

    public QueryLegalHoldRequest withSortBy(QueryLegalHoldSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Specifies ascending or descending sort order. Summary results are sorted in ascending order when this parameter is not specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryLegalHoldSortOrderEnum sortOrder;

    public QueryLegalHoldRequest withSortOrder(QueryLegalHoldSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public QueryLegalHoldRequest(){}
}
