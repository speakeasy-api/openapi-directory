/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChildBlock } from "./childblock";
import { Expose, Type } from "class-transformer";

/**
 * A reference to a block.
 */
export class BlockReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BeginOffset" })
  beginOffset?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "BlockId" })
  blockId?: string;

  @SpeakeasyMetadata({ elemType: ChildBlock })
  @Expose({ name: "ChildBlocks" })
  @Type(() => ChildBlock)
  childBlocks?: ChildBlock[];

  @SpeakeasyMetadata()
  @Expose({ name: "EndOffset" })
  endOffset?: number;
}
