"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import extensionactiondefinition as shared_extensionactiondefinition
from ..shared import forwardpaging as shared_forwardpaging
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CollectionResponseExtensionActionDefinitionForwardPaging:
    r"""successful operation"""
    
    results: list[shared_extensionactiondefinition.ExtensionActionDefinition] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('results') }})  
    paging: Optional[shared_forwardpaging.ForwardPaging] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paging'), 'exclude': lambda f: f is None }})  
    