// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateRuleCategoryRequest struct {
	Request shared.RuleCategory `request:"mediaType=application/json"`
}

// CreateRuleCategory200ApplicationJSONActionEnum - The id of the action
type CreateRuleCategory200ApplicationJSONActionEnum string

const (
	CreateRuleCategory200ApplicationJSONActionEnumCreateRuleCategory CreateRuleCategory200ApplicationJSONActionEnum = "CreateRuleCategory"
)

func (e *CreateRuleCategory200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateRuleCategory":
		*e = CreateRuleCategory200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRuleCategory200ApplicationJSONActionEnum: %s", s)
	}
}

type CreateRuleCategory200ApplicationJSONData struct {
	RuleCategories []shared.RuleCategory `json:"ruleCategories"`
}

// CreateRuleCategory200ApplicationJSONResultEnum - Result of the request
type CreateRuleCategory200ApplicationJSONResultEnum string

const (
	CreateRuleCategory200ApplicationJSONResultEnumSuccess CreateRuleCategory200ApplicationJSONResultEnum = "success"
	CreateRuleCategory200ApplicationJSONResultEnumError   CreateRuleCategory200ApplicationJSONResultEnum = "error"
)

func (e *CreateRuleCategory200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = CreateRuleCategory200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRuleCategory200ApplicationJSONResultEnum: %s", s)
	}
}

// CreateRuleCategory200ApplicationJSON - Rules category information
type CreateRuleCategory200ApplicationJSON struct {
	// The id of the action
	Action CreateRuleCategory200ApplicationJSONActionEnum `json:"action"`
	Data   CreateRuleCategory200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result CreateRuleCategory200ApplicationJSONResultEnum `json:"result"`
}

type CreateRuleCategoryResponse struct {
	ContentType string
	// Rules category information
	CreateRuleCategory200ApplicationJSONObject *CreateRuleCategory200ApplicationJSON
	StatusCode                                 int
	RawResponse                                *http.Response
}
