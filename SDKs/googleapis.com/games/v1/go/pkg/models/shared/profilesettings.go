// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProfileSettingsFriendsListVisibilityEnum string

const (
	ProfileSettingsFriendsListVisibilityEnumFriendsListVisibilityUnspecified ProfileSettingsFriendsListVisibilityEnum = "FRIENDS_LIST_VISIBILITY_UNSPECIFIED"
	ProfileSettingsFriendsListVisibilityEnumVisible                          ProfileSettingsFriendsListVisibilityEnum = "VISIBLE"
	ProfileSettingsFriendsListVisibilityEnumRequestRequired                  ProfileSettingsFriendsListVisibilityEnum = "REQUEST_REQUIRED"
	ProfileSettingsFriendsListVisibilityEnumUnavailable                      ProfileSettingsFriendsListVisibilityEnum = "UNAVAILABLE"
)

func (e *ProfileSettingsFriendsListVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FRIENDS_LIST_VISIBILITY_UNSPECIFIED":
		fallthrough
	case "VISIBLE":
		fallthrough
	case "REQUEST_REQUIRED":
		fallthrough
	case "UNAVAILABLE":
		*e = ProfileSettingsFriendsListVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProfileSettingsFriendsListVisibilityEnum: %s", s)
	}
}

// ProfileSettings - Profile settings
type ProfileSettings struct {
	FriendsListVisibility *ProfileSettingsFriendsListVisibilityEnum `json:"friendsListVisibility,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#profileSettings`.
	Kind *string `json:"kind,omitempty"`
	// Whether the player's profile is visible to the currently signed in player.
	ProfileVisible *bool `json:"profileVisible,omitempty"`
}
