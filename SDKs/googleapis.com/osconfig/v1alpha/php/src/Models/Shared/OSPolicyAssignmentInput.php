<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OSPolicyAssignmentInput - OS policy assignment is an API resource that is used to apply a set of OS policies to a dynamically targeted group of Compute Engine VM instances. An OS policy is used to define the desired state configuration for a Compute Engine VM instance through a set of configuration resources that provide capabilities such as installing or removing software packages, or executing a script. For more information, see [OS policy and OS policy assignment](https://cloud.google.com/compute/docs/os-configuration-management/working-with-os-policies).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OSPolicyAssignmentInput
{
    /**
     * OS policy assignment description. Length of the description is limited to 1024 characters.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The etag for this OS policy assignment. If this is provided on update, it must match the server's etag.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Filters to select target VMs for an assignment. If more than one filter criteria is specified below, a VM will be selected if and only if it satisfies all of them.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentInstanceFilter $instanceFilter
     */
	#[\JMS\Serializer\Annotation\SerializedName('instanceFilter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentInstanceFilter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyAssignmentInstanceFilter $instanceFilter = null;
    
    /**
     * Resource name. Format: `projects/{project_number}/locations/{location}/osPolicyAssignments/{os_policy_assignment_id}` This field is ignored when you create an OS policy assignment.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Required. List of OS policies to be applied to the VMs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OSPolicy> $osPolicies
     */
	#[\JMS\Serializer\Annotation\SerializedName('osPolicies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OSPolicy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $osPolicies = null;
    
    /**
     * Message to configure the rollout at the zonal level for the OS policy assignment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentRollout $rollout
     */
	#[\JMS\Serializer\Annotation\SerializedName('rollout')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OSPolicyAssignmentRollout')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OSPolicyAssignmentRollout $rollout = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->etag = null;
		$this->instanceFilter = null;
		$this->name = null;
		$this->osPolicies = null;
		$this->rollout = null;
	}
}
