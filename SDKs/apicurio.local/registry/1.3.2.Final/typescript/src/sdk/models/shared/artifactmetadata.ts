/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArtifactStateEnum } from "./artifactstateenum";
import { ArtifactTypeEnum } from "./artifacttypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Artifact was successfully created.
 */
export class ArtifactMetaData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "globalId" })
  globalId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedBy" })
  modifiedBy: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedOn: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User-defined name-value pairs. Name and value must be strings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: Record<string, string>;

  /**
   * Describes the state of an artifact or artifact version.  The following states
   *
   * @remarks
   * are possible:
   *
   * * ENABLED
   * * DISABLED
   * * DEPRECATED
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: ArtifactStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: ArtifactTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;
}
