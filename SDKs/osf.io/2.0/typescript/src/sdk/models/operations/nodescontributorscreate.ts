/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The permission level of the contributor. The default value is 'write'.
 */
export enum NodesContributorsCreateContributorAttributesPermissionEnum {
  Read = "read",
  Write = "write",
  Admin = "admin",
}

/**
 * The properties of the contributor entity.
 */
export class NodesContributorsCreateContributorAttributesInput extends SpeakeasyBase {
  /**
   * Whether or not the contributor will be included in citations for the node. The default value is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bibliographic" })
  bibliographic?: boolean;

  /**
   * The position of this contributor in the list of project contributors and in project citations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  /**
   * The permission level of the contributor. The default value is 'write'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission?: NodesContributorsCreateContributorAttributesPermissionEnum;
}

/**
 * URLs to other entities or entity collections that have a relationship to the contributor entity.
 */
export class NodesContributorsCreateContributorRelationshipsInput extends SpeakeasyBase {
  /**
   * A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user: string;
}

export class NodesContributorsCreateContributorInput extends SpeakeasyBase {
  /**
   * The properties of the contributor entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => NodesContributorsCreateContributorAttributesInput)
  attributes?: NodesContributorsCreateContributorAttributesInput;

  /**
   * URLs to other entities or entity collections that have a relationship to the contributor entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => NodesContributorsCreateContributorRelationshipsInput)
  relationships: NodesContributorsCreateContributorRelationshipsInput;
}

export class NodesContributorsCreateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: NodesContributorsCreateContributorInput;

  /**
   * The unique identifier of the node.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=node_id",
  })
  nodeId: string;
}

export class NodesContributorsCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
