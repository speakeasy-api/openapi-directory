// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MetricNameEnum string

const (
	MetricNameEnumActivatingGameSessions            MetricNameEnum = "ActivatingGameSessions"
	MetricNameEnumActiveGameSessions                MetricNameEnum = "ActiveGameSessions"
	MetricNameEnumActiveInstances                   MetricNameEnum = "ActiveInstances"
	MetricNameEnumAvailableGameSessions             MetricNameEnum = "AvailableGameSessions"
	MetricNameEnumAvailablePlayerSessions           MetricNameEnum = "AvailablePlayerSessions"
	MetricNameEnumCurrentPlayerSessions             MetricNameEnum = "CurrentPlayerSessions"
	MetricNameEnumIdleInstances                     MetricNameEnum = "IdleInstances"
	MetricNameEnumPercentAvailableGameSessions      MetricNameEnum = "PercentAvailableGameSessions"
	MetricNameEnumPercentIdleInstances              MetricNameEnum = "PercentIdleInstances"
	MetricNameEnumQueueDepth                        MetricNameEnum = "QueueDepth"
	MetricNameEnumWaitTime                          MetricNameEnum = "WaitTime"
	MetricNameEnumConcurrentActivatableGameSessions MetricNameEnum = "ConcurrentActivatableGameSessions"
)

func (e MetricNameEnum) ToPointer() *MetricNameEnum {
	return &e
}

func (e *MetricNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ActivatingGameSessions":
		fallthrough
	case "ActiveGameSessions":
		fallthrough
	case "ActiveInstances":
		fallthrough
	case "AvailableGameSessions":
		fallthrough
	case "AvailablePlayerSessions":
		fallthrough
	case "CurrentPlayerSessions":
		fallthrough
	case "IdleInstances":
		fallthrough
	case "PercentAvailableGameSessions":
		fallthrough
	case "PercentIdleInstances":
		fallthrough
	case "QueueDepth":
		fallthrough
	case "WaitTime":
		fallthrough
	case "ConcurrentActivatableGameSessions":
		*e = MetricNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetricNameEnum: %v", v)
	}
}
