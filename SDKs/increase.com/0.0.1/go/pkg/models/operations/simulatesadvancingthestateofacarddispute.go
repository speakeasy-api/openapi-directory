// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SimulatesAdvancingTheStateOfACardDisputePathParams struct {
	CardDisputeID string `pathParam:"style=simple,explode=false,name=card_dispute_id"`
}

type SimulatesAdvancingTheStateOfACardDisputeRequest struct {
	PathParams SimulatesAdvancingTheStateOfACardDisputePathParams
	Request    shared.SimulatesAdvancingTheStateOfACardDisputeParameters `request:"mediaType=application/json"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnum = "429"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnumRateLimitedError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13 struct {
	Detail     string                                                                     `json:"detail"`
	RetryAfter *int64                                                                     `json:"retry_after,omitempty"`
	Status     SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                                     `json:"title"`
	Type       SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnumFourHundredAndThree SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnum = "403"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnumPrivateFeatureError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12 struct {
	Detail string                                                                     `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                                     `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnumFourHundredAndFour SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnum = "404"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnumObjectNotFoundError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11 struct {
	Detail string                                                                     `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                                     `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnumFourHundred SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnum = "400"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnumMalformedRequestError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10 struct {
	Detail string                                                                     `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                                     `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnumFourHundred SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnum = "400"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnumInvalidParametersError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                                  `json:"errors,omitempty"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnumFourHundredAndNine SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnum = "409"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnumInvalidOperationError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnumFourHundredAndOne SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnum = "401"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnumInvalidAPIKeyError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnumFiveHundred SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnum = "500"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnumInternalServerError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnumFourHundredAndThree SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnum = "403"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnumInsufficientPermissionsError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnum = "422"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnumFourHundredAndNine SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnum = "409"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnumIdempotencyConflictError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnumFourHundredAndThree SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnum = "403"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnumEnvironmentMismatchError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnumFourHundredAndFour SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnum = "404"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnum string

const (
	SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1 struct {
	Detail string                                                                    `json:"detail"`
	Status SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                                    `json:"title"`
	Type   SimulatesAdvancingTheStateOfACardDisputeDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type SimulatesAdvancingTheStateOfACardDisputeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Card Dispute
	CardDispute *shared.CardDispute
	// Error
	Error interface{}
}
