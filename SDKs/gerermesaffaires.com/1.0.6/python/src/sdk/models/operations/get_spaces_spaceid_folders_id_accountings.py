"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accounting as shared_accounting
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDAccountingsRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    accounted_on: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AccountedOn', 'style': 'form', 'explode': True }})
    r"""accountedon of the accounting (boolean available)"""  
    class_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Class', 'style': 'form', 'explode': True }})
    r"""class of the accounting"""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Date', 'style': 'form', 'explode': True }})
    r"""date range of the documents"""  
    folder_date: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'FolderDate', 'style': 'form', 'explode': True }})
    r"""date range of attachment"""  
    range: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Range', 'style': 'form', 'explode': True }})
    r"""index range of the results"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Title', 'style': 'form', 'explode': True }})
    r"""Title of the accounting document"""  
    with_folders: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'WithFolders', 'style': 'form', 'explode': True }})
    r"""if present, the folders containing the documents are returned"""  
    workbook: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Workbook', 'style': 'form', 'explode': True }})
    r"""workbook of the accounting"""  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDAccountingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_accountings_200_application_json_all_ofs: Optional[list[shared_accounting.Accounting]] = dataclasses.field(default=None)
    r"""A list of accountings document of the folder"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    