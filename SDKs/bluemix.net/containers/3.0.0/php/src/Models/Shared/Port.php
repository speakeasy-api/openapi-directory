<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Port
{
    /**
     * Public IP address that was bound to the container in IPv4 format.
     * 
     * @var ?string $ip
     */
	#[\JMS\Serializer\Annotation\SerializedName('IP')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ip = null;
    
    /**
     * The private port of the container on which the container listens during run time.
     * 
     * @var ?string $privatePort
     */
	#[\JMS\Serializer\Annotation\SerializedName('PrivatePort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privatePort = null;
    
    /**
     * The public port that was exposed during container creation. When a public port is exposed, a public IP address can be bound to the container which makes the container accessible from the internet.
     * 
     * @var ?string $publicPort
     */
	#[\JMS\Serializer\Annotation\SerializedName('PublicPort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicPort = null;
    
    /**
     * The type of IP protocol that is used for the port. It can either be `udp` or `tcp`.  
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->ip = null;
		$this->privatePort = null;
		$this->publicPort = null;
		$this->type = null;
	}
}
