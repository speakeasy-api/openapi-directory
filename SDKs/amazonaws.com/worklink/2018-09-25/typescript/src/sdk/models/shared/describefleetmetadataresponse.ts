/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FleetStatusEnum } from "./fleetstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class DescribeFleetMetadataResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CompanyCode" })
  companyCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FleetName" })
  fleetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FleetStatus" })
  fleetStatus?: FleetStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "OptimizeForEndUserLocation" })
  optimizeForEndUserLocation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
