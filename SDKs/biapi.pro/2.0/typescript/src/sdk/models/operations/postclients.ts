/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostClientsRequestBody extends SpeakeasyBase {
  /**
   * custom config about the client
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=config" })
  config?: string;

  /**
   * if True, generate a rsa pair of keys so the client can be used to generate jwt user tokens (default: False)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=generate_keys" })
  generateKeys?: boolean;

  /**
   * name of client
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;

  /**
   * list of allowed redirect uris
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=redirect_uris" })
  redirectUris?: string;
}

export class PostClientsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostClientsRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;
}

export class PostClientsResponse extends SpeakeasyBase {
  /**
   * Successful POST on Client resource
   */
  @SpeakeasyMetadata()
  client?: shared.Client;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
