/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetClassificationsQueryParams {
    /**
     * The list of IDs to filter by. Repeat this parameter for each ID you want to include in the filter.
     * The brackets *MUST* be percent-encoded, per the requirements in
     * [RFC 3986 \u00a7 3.4](https://tools.ietf.org/html/rfc3986#section-3.4).
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ids[]")
    public String[] ids;
    public GetClassificationsQueryParams withIds(String[] ids) {
        this.ids = ids;
        return this;
    }
    
    /**
     * If this parameter is provided and not empty, limit the result to classifications
     * of type `Geography` representing countries. The credential must have at least one
     * privilege with a network, series, or advertiser profile.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_country")
    public String isCountry;
    public GetClassificationsQueryParams withIsCountry(String isCountry) {
        this.isCountry = isCountry;
        return this;
    }
    
    /**
     * Select which page number to receive results for. Pages are numbered starting at 1.
     * 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page[number]")
    public Long pageNumber;
    public GetClassificationsQueryParams withPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    /**
     * Indicate how many records to return per page. The maximum is 100.
     * 
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page[size]")
    public Long pageSize;
    public GetClassificationsQueryParams withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Limit the result to classifications with a value containing the parameter value
     * disregarding case.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;
    public GetClassificationsQueryParams withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * Specify how to sort the result. Please refer to either the top section or the
     * [JSON:API specification](https://jsonapi.org/format/#fetching-sorting) on how sorting works in general.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=sort")
    public GetClassificationsSortEnum[] sort;
    public GetClassificationsQueryParams withSort(GetClassificationsSortEnum[] sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Limit the result to classifications of this type. The possible values for types
     * depends on the privileges of the provided credential.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type")
    public GetClassificationsTypeEnum type;
    public GetClassificationsQueryParams withType(GetClassificationsTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
