"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ItvCurrentSubscription:
    r"""Details of current subscription."""
    
    cancel_at_period_end: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelAtPeriodEnd') }})
    r"""The cancellation period end flag."""  
    collection_method: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('collectionMethod') }})
    r"""The description of payment collection method."""  
    created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created') }})
    r"""The creation timestamp."""  
    current_period_end: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentPeriodEnd') }})
    r"""The end of period timestamp."""  
    current_period_start: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentPeriodStart') }})
    r"""The start of period timestamp."""  
    plan: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan') }})
    r"""The plan used during subsribing."""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of subscription."""  
    