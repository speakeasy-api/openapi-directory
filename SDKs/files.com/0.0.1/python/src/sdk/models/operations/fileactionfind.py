"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fileentity as shared_fileentity
from typing import Optional


@dataclasses.dataclass
class FileActionFindRequest:
    
    path: str = dataclasses.field(metadata={'path_param': { 'field_name': 'path', 'style': 'simple', 'explode': False }})
    r"""Path to operate on."""  
    preview_size: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'preview_size', 'style': 'form', 'explode': True }})
    r"""Request a preview size.  Can be `small` (default), `large`, `xlarge`, or `pdf`."""  
    with_previews: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with_previews', 'style': 'form', 'explode': True }})
    r"""Include file preview information?"""  
    with_priority_color: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with_priority_color', 'style': 'form', 'explode': True }})
    r"""Include file priority color information?"""  
    

@dataclasses.dataclass
class FileActionFindResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    file_entity: Optional[shared_fileentity.FileEntity] = dataclasses.field(default=None)
    r"""The FileActions object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    