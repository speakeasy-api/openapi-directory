/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RatePlanRate } from "./rateplanrate";
import { Expose, Type } from "class-transformer";

/**
 * The minimum number of nights (inclusive) that the guest has to book which include the date to be eligible for this rate.
 */
export class RatesPerDateStaythrough extends SpeakeasyBase {
  /**
   * Expressed in minimum value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min: number;
}

export class RatesPerDate extends SpeakeasyBase {
  /**
   * Determines whether the rate is available for a stay including this date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closed" })
  closed: boolean;

  /**
   * Determines whether the rate is available if the arrival falls on this date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closedToArrival" })
  closedToArrival?: boolean;

  /**
   * Determines whether the rate is available if the departure falls on this date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "closedToDeparture" })
  closedToDeparture?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;

  /**
   * Rate prices for each occupancy the room can accommodate.
   */
  @SpeakeasyMetadata({ elemType: RatePlanRate })
  @Expose({ name: "rates" })
  @Type(() => RatePlanRate)
  rates: RatePlanRate[];

  /**
   * The minimum number of nights (inclusive) that the guest has to book which include the date to be eligible for this rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "staythrough" })
  @Type(() => RatesPerDateStaythrough)
  staythrough?: RatesPerDateStaythrough;
}
