/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListMediaServerList = ["https://api.twilio.com"] as const;

export class ListMediaSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListMediaRequest extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Media resource(s) to read.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AccountSid",
  })
  accountSid: string;

  /**
   * Only include media that was created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read media that was created on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read media that was created on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read media that was created on or after midnight of this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreated;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreated?: Date;

  /**
   * Only include media that was created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read media that was created on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read media that was created on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read media that was created on or after midnight of this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreated<;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedLessThan?: Date;

  /**
   * Only include media that was created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read media that was created on this date. You can also specify an inequality, such as `StartTime<=YYYY-MM-DD`, to read media that was created on or before midnight of this date, and `StartTime>=YYYY-MM-DD` to read media that was created on or after midnight of this date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreated>;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedGreaterThan?: Date;

  /**
   * The SID of the Message resource that this Media resource belongs to.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=MessageSid",
  })
  messageSid: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;
}

/**
 * OK
 */
export class ListMediaListMediaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "first_page_uri" })
  firstPageUri?: string;

  @SpeakeasyMetadata({ elemType: shared.ApiV2010AccountMessageMedia })
  @Expose({ name: "media_list" })
  @Type(() => shared.ApiV2010AccountMessageMedia)
  mediaList?: shared.ApiV2010AccountMessageMedia[];

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_uri" })
  nextPageUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_uri" })
  previousPageUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}

export class ListMediaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listMediaResponse?: ListMediaListMediaResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
