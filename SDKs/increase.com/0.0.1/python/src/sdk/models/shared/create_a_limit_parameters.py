"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateALimitParametersIntervalEnum(str, Enum):
    r"""The interval for the metric. Required if `metric` is `count` or `volume`."""
    TRANSACTION = 'transaction'
    DAY = 'day'
    WEEK = 'week'
    MONTH = 'month'
    YEAR = 'year'
    ALL_TIME = 'all_time'

class CreateALimitParametersMetricEnum(str, Enum):
    r"""The metric for the limit."""
    COUNT = 'count'
    VOLUME = 'volume'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateALimitParameters:
    
    metric: CreateALimitParametersMetricEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metric') }})
    r"""The metric for the limit."""  
    model_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('model_id') }})
    r"""The identifier of the Account or Account Number you wish to associate the limit with."""  
    value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""The value to test the limit against."""  
    interval: Optional[CreateALimitParametersIntervalEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interval'), 'exclude': lambda f: f is None }})
    r"""The interval for the metric. Required if `metric` is `count` or `volume`."""  
    