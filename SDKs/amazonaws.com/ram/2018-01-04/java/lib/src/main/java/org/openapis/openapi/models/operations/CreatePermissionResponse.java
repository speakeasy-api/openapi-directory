/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreatePermissionResponse {
    
    public String contentType;

    public CreatePermissionResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreatePermissionResponse createPermissionResponse;

    public CreatePermissionResponse withCreatePermissionResponse(org.openapis.openapi.models.shared.CreatePermissionResponse createPermissionResponse) {
        this.createPermissionResponse = createPermissionResponse;
        return this;
    }
    
    /**
     * IdempotentParameterMismatchException
     */
    
    public Object idempotentParameterMismatchException;

    public CreatePermissionResponse withIdempotentParameterMismatchException(Object idempotentParameterMismatchException) {
        this.idempotentParameterMismatchException = idempotentParameterMismatchException;
        return this;
    }
    
    /**
     * InvalidClientTokenException
     */
    
    public Object invalidClientTokenException;

    public CreatePermissionResponse withInvalidClientTokenException(Object invalidClientTokenException) {
        this.invalidClientTokenException = invalidClientTokenException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public CreatePermissionResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidPolicyException
     */
    
    public Object invalidPolicyException;

    public CreatePermissionResponse withInvalidPolicyException(Object invalidPolicyException) {
        this.invalidPolicyException = invalidPolicyException;
        return this;
    }
    
    /**
     * MalformedPolicyTemplateException
     */
    
    public Object malformedPolicyTemplateException;

    public CreatePermissionResponse withMalformedPolicyTemplateException(Object malformedPolicyTemplateException) {
        this.malformedPolicyTemplateException = malformedPolicyTemplateException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public CreatePermissionResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * PermissionAlreadyExistsException
     */
    
    public Object permissionAlreadyExistsException;

    public CreatePermissionResponse withPermissionAlreadyExistsException(Object permissionAlreadyExistsException) {
        this.permissionAlreadyExistsException = permissionAlreadyExistsException;
        return this;
    }
    
    /**
     * PermissionLimitExceededException
     */
    
    public Object permissionLimitExceededException;

    public CreatePermissionResponse withPermissionLimitExceededException(Object permissionLimitExceededException) {
        this.permissionLimitExceededException = permissionLimitExceededException;
        return this;
    }
    
    /**
     * ServerInternalException
     */
    
    public Object serverInternalException;

    public CreatePermissionResponse withServerInternalException(Object serverInternalException) {
        this.serverInternalException = serverInternalException;
        return this;
    }
    
    /**
     * ServiceUnavailableException
     */
    
    public Object serviceUnavailableException;

    public CreatePermissionResponse withServiceUnavailableException(Object serviceUnavailableException) {
        this.serviceUnavailableException = serviceUnavailableException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreatePermissionResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreatePermissionResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public CreatePermissionResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
