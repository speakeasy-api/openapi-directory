"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VoiceWebhooksEndpointTypeEnum(str, Enum):
    ANSWER_URL = 'answer_url'
    EVENT_URL = 'event_url'

class VoiceWebhooksHTTPMethodEnum(str, Enum):
    r"""The HTTP method used to send event information to the `event_url` or `answer_url`."""
    GET = 'GET'
    POST = 'POST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VoiceWebhooks:
    
    endpoint: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoint') }})
    r"""`answer_url`: The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to answer_url. `event_url`: Nexmo sends event information asynchronously to this URL when status changes."""  
    endpoint_type: VoiceWebhooksEndpointTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endpoint_type') }})  
    http_method: VoiceWebhooksHTTPMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method') }})
    r"""The HTTP method used to send event information to the `event_url` or `answer_url`."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Voice:
    r"""The Nexmo product that you access with this application."""
    
    webhooks: Optional[list[VoiceWebhooks]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhooks'), 'exclude': lambda f: f is None }})  
    