/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AppPkgInfoLinks } from "./apppkginfolinks";
import { AppPkgOperationalStateEnum } from "./apppkgoperationalstateenum";
import { Checksum } from "./checksum";
import { OnboardingStateEnum } from "./onboardingstateenum";
import { UsageStateEnum } from "./usagestateenum";
import { Expose, Type } from "class-transformer";

/**
 * 'The data type AppPkgInfo represents the parameters for an application package resource'
 */
export class AppPkgInfo extends SpeakeasyBase {
  /**
   * Links to resources related to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => AppPkgInfoLinks)
  links: AppPkgInfoLinks;

  /**
   * Additional information of application package artifacts that are not application software images. Type is TBD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalArtifacts" })
  additionalArtifacts?: any;

  /**
   * Identifier of this MEC application descriptor. This attribute shall be globally unique.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appDId" })
  appDId: string;

  /**
   * Identifies the version of the application descriptor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appDVersion" })
  appDVersion: string;

  /**
   * Name to identify the MEC application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appName" })
  appName: string;

  /**
   * Provider of the application and of the AppD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appProvider" })
  appProvider?: string;

  /**
   * Software version of the application. This is updated when there is any change to the software in the onboarded application package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appSoftwareVersion" })
  appSoftwareVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "checksum" })
  @Type(() => Checksum)
  checksum: Checksum;

  /**
   * Identifier of the onboarded application package.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Onboarding state of application package
   */
  @SpeakeasyMetadata()
  @Expose({ name: "onboardingState" })
  onboardingState: OnboardingStateEnum;

  /**
   * Operational state of the onboarded application package: Ã¢â‚¬Â¢ENABLED: the application package can be used for instantiation of new application instances. Ã¢â‚¬Â¢DISABLED: the application package cannot be used for further application instantiation requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operationalState" })
  operationalState: AppPkgOperationalStateEnum;

  /**
   * Information of application software image in application package. Type is TBD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "softwareImages" })
  softwareImages: any;

  /**
   * Usage state of the onboarded instance of the application package
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usageState" })
  usageState: UsageStateEnum;

  /**
   * 'This data type represents a list of key-value pairs. The order of the pairs in the list is not significant. In JSON, a set of key-value pairs is represented as an object. It shall comply with the provisions defined in clause 4 of IETF RFC 8259'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userDefinedData" })
  userDefinedData?: Record<string, any>;
}
