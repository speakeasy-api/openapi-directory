"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import bucketpermissionconfiguration as shared_bucketpermissionconfiguration
from ..shared import effectivepermission_enum as shared_effectivepermission_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BucketPublicAccess:
    r"""Provides information about the permissions settings that determine whether an S3 bucket is publicly accessible."""
    
    effective_permission: Optional[shared_effectivepermission_enum.EffectivePermissionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effectivePermission'), 'exclude': lambda f: f is None }})  
    permission_configuration: Optional[shared_bucketpermissionconfiguration.BucketPermissionConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissionConfiguration'), 'exclude': lambda f: f is None }})  
    