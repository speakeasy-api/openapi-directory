/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConfigManagementGatekeeperDeploymentState - State of Policy Controller installation.
 */
public class ConfigManagementGatekeeperDeploymentState {
    /**
     * Status of gatekeeper-audit deployment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatekeeperAudit")
    public ConfigManagementGatekeeperDeploymentStateGatekeeperAuditEnum gatekeeperAudit;

    public ConfigManagementGatekeeperDeploymentState withGatekeeperAudit(ConfigManagementGatekeeperDeploymentStateGatekeeperAuditEnum gatekeeperAudit) {
        this.gatekeeperAudit = gatekeeperAudit;
        return this;
    }
    
    /**
     * Status of gatekeeper-controller-manager pod.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatekeeperControllerManagerState")
    public ConfigManagementGatekeeperDeploymentStateGatekeeperControllerManagerStateEnum gatekeeperControllerManagerState;

    public ConfigManagementGatekeeperDeploymentState withGatekeeperControllerManagerState(ConfigManagementGatekeeperDeploymentStateGatekeeperControllerManagerStateEnum gatekeeperControllerManagerState) {
        this.gatekeeperControllerManagerState = gatekeeperControllerManagerState;
        return this;
    }
    
    /**
     * Status of the pod serving the mutation webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gatekeeperMutation")
    public ConfigManagementGatekeeperDeploymentStateGatekeeperMutationEnum gatekeeperMutation;

    public ConfigManagementGatekeeperDeploymentState withGatekeeperMutation(ConfigManagementGatekeeperDeploymentStateGatekeeperMutationEnum gatekeeperMutation) {
        this.gatekeeperMutation = gatekeeperMutation;
        return this;
    }
    
    public ConfigManagementGatekeeperDeploymentState(){}
}
