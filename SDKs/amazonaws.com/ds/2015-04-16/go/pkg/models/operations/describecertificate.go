// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeCertificateXAmzTargetEnum
type DescribeCertificateXAmzTargetEnum string

const (
	DescribeCertificateXAmzTargetEnumDirectoryService20150416DescribeCertificate DescribeCertificateXAmzTargetEnum = "DirectoryService_20150416.DescribeCertificate"
)

func (e *DescribeCertificateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.DescribeCertificate":
		*e = DescribeCertificateXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeCertificateXAmzTargetEnum: %s", s)
	}
}

type DescribeCertificateHeaders struct {
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeCertificateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeCertificateRequest struct {
	Headers DescribeCertificateHeaders
	Request shared.DescribeCertificateRequest `request:"mediaType=application/json"`
}

type DescribeCertificateResponse struct {
	// CertificateDoesNotExistException
	CertificateDoesNotExistException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// Success
	DescribeCertificateResult *shared.DescribeCertificateResult
	// DirectoryDoesNotExistException
	DirectoryDoesNotExistException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceException
	ServiceException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
