// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListFirewallRuleGroupAssociationsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListFirewallRuleGroupAssociationsXAmzTargetEnum
type ListFirewallRuleGroupAssociationsXAmzTargetEnum string

const (
	ListFirewallRuleGroupAssociationsXAmzTargetEnumRoute53ResolverListFirewallRuleGroupAssociations ListFirewallRuleGroupAssociationsXAmzTargetEnum = "Route53Resolver.ListFirewallRuleGroupAssociations"
)

func (e *ListFirewallRuleGroupAssociationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Route53Resolver.ListFirewallRuleGroupAssociations":
		*e = ListFirewallRuleGroupAssociationsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFirewallRuleGroupAssociationsXAmzTargetEnum: %s", s)
	}
}

type ListFirewallRuleGroupAssociationsHeaders struct {
	XAmzAlgorithm     *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListFirewallRuleGroupAssociationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListFirewallRuleGroupAssociationsRequest struct {
	QueryParams ListFirewallRuleGroupAssociationsQueryParams
	Headers     ListFirewallRuleGroupAssociationsHeaders
	Request     shared.ListFirewallRuleGroupAssociationsRequest `request:"mediaType=application/json"`
}

type ListFirewallRuleGroupAssociationsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// Success
	ListFirewallRuleGroupAssociationsResponse *shared.ListFirewallRuleGroupAssociationsResponse
	StatusCode                                int
	RawResponse                               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
