/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkflowInvocationAction - Represents a single action in a workflow invocation.
 */
public class WorkflowInvocationAction {
    /**
     * Represents a workflow action that will run against BigQuery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bigqueryAction")
    public BigQueryAction bigqueryAction;

    public WorkflowInvocationAction withBigqueryAction(BigQueryAction bigqueryAction) {
        this.bigqueryAction = bigqueryAction;
        return this;
    }
    
    /**
     * Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canonicalTarget")
    public Target canonicalTarget;

    public WorkflowInvocationAction withCanonicalTarget(Target canonicalTarget) {
        this.canonicalTarget = canonicalTarget;
        return this;
    }
    
    /**
     * Output only. If and only if action's state is FAILED a failure reason is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureReason")
    public String failureReason;

    public WorkflowInvocationAction withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    /**
     * Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive). The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invocationTiming")
    public Interval invocationTiming;

    public WorkflowInvocationAction withInvocationTiming(Interval invocationTiming) {
        this.invocationTiming = invocationTiming;
        return this;
    }
    
    /**
     * Output only. This action's current state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public WorkflowInvocationActionStateEnum state;

    public WorkflowInvocationAction withState(WorkflowInvocationActionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Represents an action identifier. If the action writes output, the output will be written to the referenced database object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target")
    public Target target;

    public WorkflowInvocationAction withTarget(Target target) {
        this.target = target;
        return this;
    }
    
    public WorkflowInvocationAction(){}
}
