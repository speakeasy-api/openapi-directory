// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeIcd10CMInferenceJobXAmzTargetEnum
type DescribeIcd10CMInferenceJobXAmzTargetEnum string

const (
	DescribeIcd10CMInferenceJobXAmzTargetEnumComprehendMedical20181030DescribeIcd10CmInferenceJob DescribeIcd10CMInferenceJobXAmzTargetEnum = "ComprehendMedical_20181030.DescribeICD10CMInferenceJob"
)

func (e *DescribeIcd10CMInferenceJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ComprehendMedical_20181030.DescribeICD10CMInferenceJob":
		*e = DescribeIcd10CMInferenceJobXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeIcd10CMInferenceJobXAmzTargetEnum: %s", s)
	}
}

type DescribeIcd10CMInferenceJobHeaders struct {
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeIcd10CMInferenceJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeIcd10CMInferenceJobRequest struct {
	Headers DescribeIcd10CMInferenceJobHeaders
	Request shared.DescribeIcd10CMInferenceJobRequest `request:"mediaType=application/json"`
}

type DescribeIcd10CMInferenceJobResponse struct {
	ContentType string
	// Success
	DescribeIcd10CMInferenceJobResponse *shared.DescribeIcd10CMInferenceJobResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
