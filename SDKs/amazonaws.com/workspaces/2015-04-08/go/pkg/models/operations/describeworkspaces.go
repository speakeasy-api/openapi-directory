// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeWorkspacesXAmzTargetEnum
type DescribeWorkspacesXAmzTargetEnum string

const (
	DescribeWorkspacesXAmzTargetEnumWorkspacesServiceDescribeWorkspaces DescribeWorkspacesXAmzTargetEnum = "WorkspacesService.DescribeWorkspaces"
)

func (e DescribeWorkspacesXAmzTargetEnum) ToPointer() *DescribeWorkspacesXAmzTargetEnum {
	return &e
}

func (e *DescribeWorkspacesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.DescribeWorkspaces":
		*e = DescribeWorkspacesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeWorkspacesXAmzTargetEnum: %v", v)
	}
}

type DescribeWorkspacesRequest struct {
	DescribeWorkspacesRequest shared.DescribeWorkspacesRequest `request:"mediaType=application/json"`
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=Limit"`
	// Pagination token
	NextToken         *string                          `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeWorkspacesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeWorkspacesResponse struct {
	ContentType string
	// Success
	DescribeWorkspacesResult *shared.DescribeWorkspacesResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
}
