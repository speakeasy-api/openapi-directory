"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class VatLevelTwoSecurity:
    
    user_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'user_key' }})  
    

@dataclasses.dataclass
class VatLevelTwoRequestBody:
    r"""VAT number and confirmation request"""
    
    vat_number: str = dataclasses.field(metadata={'form': { 'field_name': 'vatNumber' }})
    r"""VAT number to validate"""  
    confirmation: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'confirmation' }})
    r"""If a confirmation document should be ordered"""  
    

@dataclasses.dataclass
class VatLevelTwoRequest:
    
    country: str = dataclasses.field(metadata={'path_param': { 'field_name': 'country', 'style': 'simple', 'explode': False }})
    r"""ISO_3166-1_alpha-2 representation of a country name - 2 chars"""  
    request_body: VatLevelTwoRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})
    r"""VAT number and confirmation request"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VatLevelTwoDefaultApplicationJSON:
    r"""Detailed information about the error"""
    
    code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})  
    fault: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fault'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VatLevelTwo200ApplicationJSON:
    r"""Denotes second level validity result of checked VAT"""
    
    level: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level') }})  
    validation_status: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validationStatus') }})  
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    confirmation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confirmation'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class VatLevelTwoResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    vat_level_two_200_application_json_object: Optional[VatLevelTwo200ApplicationJSON] = dataclasses.field(default=None)
    r"""Denotes second level validity result of checked VAT"""  
    vat_level_two_default_application_json_object: Optional[VatLevelTwoDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Detailed information about the error"""  
    