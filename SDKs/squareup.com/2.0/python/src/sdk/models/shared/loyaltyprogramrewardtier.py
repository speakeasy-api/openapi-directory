"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogobjectreference as shared_catalogobjectreference
from ..shared import loyaltyprogramrewarddefinition as shared_loyaltyprogramrewarddefinition
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LoyaltyProgramRewardTier:
    r"""Represents a reward tier in a loyalty program. A reward tier defines how buyers can redeem points for a reward, such as the number of points required and the value and scope of the discount. A loyalty program can offer multiple reward tiers."""
    
    created_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at') }})
    r"""The timestamp when the reward tier was created, in RFC 3339 format."""  
    definition: shared_loyaltyprogramrewarddefinition.LoyaltyProgramRewardDefinition = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('definition') }})
    r"""Provides details about the reward tier discount. DEPRECATED at version 2020-12-16. Discount details
    are now defined using a catalog pricing rule and other catalog objects. For more information, see
    [Get discount details for the reward](https://developer.squareup.com/docs/loyalty-api/overview#get-discount-details).
    """  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The Square-assigned ID of the reward tier."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the reward tier."""  
    points: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('points') }})
    r"""The points exchanged for the reward tier."""  
    pricing_rule_reference: Optional[shared_catalogobjectreference.CatalogObjectReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricing_rule_reference'), 'exclude': lambda f: f is None }})
    r"""A reference to a Catalog object at a specific version. In general this is
    used as an entry point into a graph of catalog objects, where the objects exist
    at a specific version.
    """  
    