<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Model - The properties of a model as returned by the <a>Search</a> API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Model
{
    /**
     * $containers
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ContainerDefinition> $containers
     */
	#[\JMS\Serializer\Annotation\SerializedName('Containers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ContainerDefinition>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $containers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CreationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $creationTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('EnableNetworkIsolation')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableNetworkIsolation = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ExecutionRoleArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $executionRoleArn = null;
    
    /**
     * Specifies details about how containers in a multi-container endpoint are run.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InferenceExecutionConfig $inferenceExecutionConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('InferenceExecutionConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InferenceExecutionConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InferenceExecutionConfig $inferenceExecutionConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ModelArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modelArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ModelName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modelName = null;
    
    /**
     * Describes the container, as part of model definition.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ContainerDefinition $primaryContainer
     */
	#[\JMS\Serializer\Annotation\SerializedName('PrimaryContainer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ContainerDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContainerDefinition $primaryContainer = null;
    
    /**
     * $tags
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * Specifies a VPC that your training jobs and hosted models have access to. Control access to and from your training and model containers by configuring the VPC. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/host-vpc.html">Protect Endpoints by Using an Amazon Virtual Private Cloud</a> and <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/train-vpc.html">Protect Training Jobs by Using an Amazon Virtual Private Cloud</a>. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VpcConfig $vpcConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('VpcConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VpcConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VpcConfig $vpcConfig = null;
    
	public function __construct()
	{
		$this->containers = null;
		$this->creationTime = null;
		$this->enableNetworkIsolation = null;
		$this->executionRoleArn = null;
		$this->inferenceExecutionConfig = null;
		$this->modelArn = null;
		$this->modelName = null;
		$this->primaryContainer = null;
		$this->tags = null;
		$this->vpcConfig = null;
	}
}
