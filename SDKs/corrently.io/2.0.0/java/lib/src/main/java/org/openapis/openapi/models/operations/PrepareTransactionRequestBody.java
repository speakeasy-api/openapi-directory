/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PrepareTransactionRequestBody {
    /**
     * Stromkonto account address of sender
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public String account;

    public PrepareTransactionRequestBody withAccount(String account) {
        this.account = account;
        return this;
    }
    
    /**
     * Signature per Stromkonto setting (might be simple email confirmation link)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signature")
    public String signature;

    public PrepareTransactionRequestBody withSignature(String signature) {
        this.signature = signature;
        return this;
    }
    
    /**
     * Stromkonto account address of reciever
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public String to;

    public PrepareTransactionRequestBody withTo(String to) {
        this.to = to;
        return this;
    }
    
    /**
     * Amount to transfer (in Watthours for electricity, or pcs for trees)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Long value;

    public PrepareTransactionRequestBody withValue(Long value) {
        this.value = value;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variation")
    public PrepareTransactionRequestBodyVariationEnum variation;

    public PrepareTransactionRequestBody withVariation(PrepareTransactionRequestBodyVariationEnum variation) {
        this.variation = variation;
        return this;
    }
    
    public PrepareTransactionRequestBody(){}
}
