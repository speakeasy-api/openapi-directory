// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// BillLineItemTypeEnum - Bill Line Item type
type BillLineItemTypeEnum string

const (
	BillLineItemTypeEnumExpenseItem    BillLineItemTypeEnum = "expense_item"
	BillLineItemTypeEnumExpenseAccount BillLineItemTypeEnum = "expense_account"
)

func (e BillLineItemTypeEnum) ToPointer() *BillLineItemTypeEnum {
	return &e
}

func (e *BillLineItemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "expense_item":
		fallthrough
	case "expense_account":
		*e = BillLineItemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BillLineItemTypeEnum: %v", v)
	}
}

type BillLineItemInput struct {
	// User defined item code
	Code *string `json:"code,omitempty"`
	// Department id
	DepartmentID *string `json:"department_id,omitempty"`
	// User defined description
	Description *string `json:"description,omitempty"`
	// Discount percentage
	DiscountPercentage *float64                  `json:"discount_percentage,omitempty"`
	Item               *LinkedInvoiceItemInput   `json:"item,omitempty"`
	LedgerAccount      *LinkedLedgerAccountInput `json:"ledger_account,omitempty"`
	// Line number in the invoice
	LineNumber *int64 `json:"line_number,omitempty"`
	// Location id
	LocationID *string  `json:"location_id,omitempty"`
	Quantity   *float64 `json:"quantity,omitempty"`
	// Row ID
	RowID *string `json:"row_id,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// Tax amount
	TaxAmount *float64            `json:"tax_amount,omitempty"`
	TaxRate   *LinkedTaxRateInput `json:"tax_rate,omitempty"`
	// Total amount of the line item
	TotalAmount *float64 `json:"total_amount,omitempty"`
	// Bill Line Item type
	Type *BillLineItemTypeEnum `json:"type,omitempty"`
	// Description of the unit type the item is sold as, ie: kg, hour.
	UnitOfMeasure *string  `json:"unit_of_measure,omitempty"`
	UnitPrice     *float64 `json:"unit_price,omitempty"`
}

type BillLineItem struct {
	// User defined item code
	Code *string `json:"code,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Department id
	DepartmentID *string `json:"department_id,omitempty"`
	// User defined description
	Description *string `json:"description,omitempty"`
	// Discount percentage
	DiscountPercentage *float64 `json:"discount_percentage,omitempty"`
	// A unique identifier for an object.
	ID            *string              `json:"id,omitempty"`
	Item          *LinkedInvoiceItem   `json:"item,omitempty"`
	LedgerAccount *LinkedLedgerAccount `json:"ledger_account,omitempty"`
	// Line number in the invoice
	LineNumber *int64 `json:"line_number,omitempty"`
	// Location id
	LocationID *string  `json:"location_id,omitempty"`
	Quantity   *float64 `json:"quantity,omitempty"`
	// Row ID
	RowID *string `json:"row_id,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion *string `json:"row_version,omitempty"`
	// Tax amount
	TaxAmount *float64       `json:"tax_amount,omitempty"`
	TaxRate   *LinkedTaxRate `json:"tax_rate,omitempty"`
	// Total amount of the line item
	TotalAmount *float64 `json:"total_amount,omitempty"`
	// Bill Line Item type
	Type *BillLineItemTypeEnum `json:"type,omitempty"`
	// Description of the unit type the item is sold as, ie: kg, hour.
	UnitOfMeasure *string  `json:"unit_of_measure,omitempty"`
	UnitPrice     *float64 `json:"unit_price,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
}
