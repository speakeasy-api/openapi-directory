/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomBiddingScriptRef } from "./custombiddingscriptref";
import { ScriptError } from "./scripterror";
import { Expose, Type } from "class-transformer";

/**
 * Output only. The state of the custom bidding script.
 */
export enum CustomBiddingScriptStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Accepted = "ACCEPTED",
  Rejected = "REJECTED",
  Pending = "PENDING",
}

/**
 * A single custom bidding script.
 */
export class CustomBiddingScript extends SpeakeasyBase {
  /**
   * Output only. Whether the script is currently being used for scoring by the parent algorithm.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Output only. The time when the script was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. The unique ID of the custom bidding algorithm the script belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customBiddingAlgorithmId" })
  customBiddingAlgorithmId?: string;

  /**
   * Output only. The unique ID of the custom bidding script.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customBiddingScriptId" })
  customBiddingScriptId?: string;

  /**
   * Output only. Error details of a rejected custom bidding script. This field will only be populated when Script.state is REJECTED.
   */
  @SpeakeasyMetadata({ elemType: ScriptError })
  @Expose({ name: "errors" })
  @Type(() => ScriptError)
  errors?: ScriptError[];

  /**
   * Output only. The resource name of the custom bidding script.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The reference to the uploaded custom bidding script file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "script" })
  @Type(() => CustomBiddingScriptRef)
  script?: CustomBiddingScriptRef;

  /**
   * Output only. The state of the custom bidding script.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: CustomBiddingScriptStateEnum;
}

/**
 * A single custom bidding script.
 */
export class CustomBiddingScriptInput extends SpeakeasyBase {
  /**
   * The reference to the uploaded custom bidding script file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "script" })
  @Type(() => CustomBiddingScriptRef)
  script?: CustomBiddingScriptRef;
}
