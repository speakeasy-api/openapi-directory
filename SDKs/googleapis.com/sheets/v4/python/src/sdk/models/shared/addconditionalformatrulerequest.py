"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import conditionalformatrule as shared_conditionalformatrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddConditionalFormatRuleRequest:
    r"""Adds a new conditional format rule at the given index. All subsequent rules' indexes are incremented."""
    
    index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index'), 'exclude': lambda f: f is None }})
    r"""The zero-based index where the rule should be inserted."""  
    rule: Optional[shared_conditionalformatrule.ConditionalFormatRule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rule'), 'exclude': lambda f: f is None }})
    r"""A rule describing a conditional format."""  
    