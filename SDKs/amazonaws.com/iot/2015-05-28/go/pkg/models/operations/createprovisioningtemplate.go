// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateProvisioningTemplateRequestBodyPreProvisioningHook - Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
type CreateProvisioningTemplateRequestBodyPreProvisioningHook struct {
	PayloadVersion *string `json:"payloadVersion,omitempty"`
	TargetArn      *string `json:"targetArn,omitempty"`
}

// CreateProvisioningTemplateRequestBodyTypeEnum - The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning template</a>.
type CreateProvisioningTemplateRequestBodyTypeEnum string

const (
	CreateProvisioningTemplateRequestBodyTypeEnumFleetProvisioning CreateProvisioningTemplateRequestBodyTypeEnum = "FLEET_PROVISIONING"
	CreateProvisioningTemplateRequestBodyTypeEnumJitp              CreateProvisioningTemplateRequestBodyTypeEnum = "JITP"
)

func (e *CreateProvisioningTemplateRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FLEET_PROVISIONING":
		fallthrough
	case "JITP":
		*e = CreateProvisioningTemplateRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProvisioningTemplateRequestBodyTypeEnum: %s", s)
	}
}

type CreateProvisioningTemplateRequestBody struct {
	// The description of the provisioning template.
	Description *string `json:"description,omitempty"`
	// True to enable the provisioning template, otherwise false.
	Enabled *bool `json:"enabled,omitempty"`
	// Structure that contains <code>payloadVersion</code> and <code>targetArn</code>.
	PreProvisioningHook *CreateProvisioningTemplateRequestBodyPreProvisioningHook `json:"preProvisioningHook,omitempty"`
	// The role ARN for the role associated with the provisioning template. This IoT role grants permission to provision a device.
	ProvisioningRoleArn string `json:"provisioningRoleArn"`
	// <p>Metadata which can be used to manage the provisioning template.</p> <note> <p>For URI Request parameters use format: ...key1=value1&amp;key2=value2...</p> <p>For the CLI command-line parameter use format: &amp;&amp;tags "key1=value1&amp;key2=value2..."</p> <p>For the cli-input-json file use format: "tags": "key1=value1&amp;key2=value2..."</p> </note>
	Tags []shared.Tag `json:"tags,omitempty"`
	// The JSON formatted contents of the provisioning template.
	TemplateBody string `json:"templateBody"`
	// The name of the provisioning template.
	TemplateName string `json:"templateName"`
	// The type you define in a provisioning template. You can create a template with only one type. You can't change the template type after its creation. The default value is <code>FLEET_PROVISIONING</code>. For more information about provisioning template, see: <a href="https://docs.aws.amazon.com/iot/latest/developerguide/provision-template.html">Provisioning template</a>.
	Type *CreateProvisioningTemplateRequestBodyTypeEnum `json:"type,omitempty"`
}

type CreateProvisioningTemplateRequest struct {
	RequestBody       CreateProvisioningTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateProvisioningTemplateResponse struct {
	ContentType string
	// Success
	CreateProvisioningTemplateResponse *shared.CreateProvisioningTemplateResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
