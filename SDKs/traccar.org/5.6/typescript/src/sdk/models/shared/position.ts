/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class Position extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accuracy" })
  accuracy?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "altitude" })
  altitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "course" })
  course?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId?: number;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deviceTime?: Date;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fixTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fixTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "network" })
  network?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "outdated" })
  outdated?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "protocol" })
  protocol?: string;

  /**
   * in IS0 8601 format. eg. `1963-11-22T18:30:00Z`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  serverTime?: Date;

  /**
   * in knots
   */
  @SpeakeasyMetadata()
  @Expose({ name: "speed" })
  speed?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "valid" })
  valid?: boolean;
}
