// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ProgramTypeEnum - A constant representing the object's type. For this resource it will always be `program`.
type ProgramTypeEnum string

const (
	ProgramTypeEnumProgram ProgramTypeEnum = "program"
)

func (e ProgramTypeEnum) ToPointer() *ProgramTypeEnum {
	return &e
}

func (e *ProgramTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "program":
		*e = ProgramTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProgramTypeEnum: %v", v)
	}
}

// Program - Programs determine the compliance and commercial terms of Accounts. By default, you have a Commercial Banking program for managing your own funds. If you are lending or managing funds on behalf of your customers, or otherwise engaged in regulated activity, we will work together to create additional Programs for you.
type Program struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Program was created.
	CreatedAt time.Time `json:"created_at"`
	// The Program identifier.
	ID string `json:"id"`
	// The name of the Program.
	Name string `json:"name"`
	// A constant representing the object's type. For this resource it will always be `program`.
	Type ProgramTypeEnum `json:"type"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time at which the Program was last updated.
	UpdatedAt time.Time `json:"updated_at"`
}
