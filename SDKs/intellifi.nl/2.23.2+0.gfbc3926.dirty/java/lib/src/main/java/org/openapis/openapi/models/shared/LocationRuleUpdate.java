/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LocationRuleUpdate - A JSON object containing the location rule
 */
public class LocationRuleUpdate {
    /**
     * Scope of this rule, e.g. moves at or away from a specific location or towards a specific location. The `from_location` is mandatory. The `to_location` is either mandatory, optional or not allowed depending on rule type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public LocationRuleUpdateConditions conditions;
    public LocationRuleUpdate withConditions(LocationRuleUpdateConditions conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Whether this rule should be in effect (`true`) or on hold (`false`).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public LocationRuleUpdate withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * A name or a label for this resource. This is used in the user interface, may be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public LocationRuleUpdate withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Parameters for this rule; depends on the rule type. Refer to the rule type specification for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameters")
    public java.util.Map<String, Object> parameters;
    public LocationRuleUpdate withParameters(java.util.Map<String, Object> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    /**
     * The type of location rule to be applied.
     * Allow: items at `conditions.from_location` can only move to `conditions.to_location` and locations allowed in other `allow` rules (destination whitelist).
     * Disallow: items at `conditions.from_location` cannot be moved to `conditions.to_location` and locations disallowed in other `disallow` rules (destination blacklist).
     * Disappeared: items disappearing at `conditions.from_location` will be moved to `parameters.location` after `parameters.time_s` seconds.
     * Debounce: items moves from `conditions.from_location` (and optionally to `conditions.to_location`) will be debounced with a period of `parameters.time_s` seconds, for a maximum of `parameters.max_periods` periods.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public LocationRuleTypeEnum type;
    public LocationRuleUpdate withType(LocationRuleTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
