/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudwatchAlarmAction } from "./cloudwatchalarmaction";
import { CloudwatchLogsAction } from "./cloudwatchlogsaction";
import { CloudwatchMetricAction } from "./cloudwatchmetricaction";
import { DynamoDBAction } from "./dynamodbaction";
import { DynamoDBv2Action } from "./dynamodbv2action";
import { ElasticsearchAction } from "./elasticsearchaction";
import { FirehoseAction } from "./firehoseaction";
import { HttpAction } from "./httpaction";
import { IotAnalyticsAction } from "./iotanalyticsaction";
import { IotEventsAction } from "./ioteventsaction";
import { IotSiteWiseAction } from "./iotsitewiseaction";
import { KafkaAction } from "./kafkaaction";
import { KinesisAction } from "./kinesisaction";
import { LambdaAction } from "./lambdaaction";
import { LocationAction } from "./locationaction";
import { OpenSearchAction } from "./opensearchaction";
import { RepublishAction } from "./republishaction";
import { S3Action } from "./s3action";
import { SalesforceAction } from "./salesforceaction";
import { SnsAction } from "./snsaction";
import { SqsAction } from "./sqsaction";
import { StepFunctionsAction } from "./stepfunctionsaction";
import { TimestreamAction } from "./timestreamaction";
import { Expose, Type } from "class-transformer";

/**
 * Describes the actions associated with a rule.
 */
export class Action extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cloudwatchAlarm" })
  @Type(() => CloudwatchAlarmAction)
  cloudwatchAlarm?: CloudwatchAlarmAction;

  @SpeakeasyMetadata()
  @Expose({ name: "cloudwatchLogs" })
  @Type(() => CloudwatchLogsAction)
  cloudwatchLogs?: CloudwatchLogsAction;

  @SpeakeasyMetadata()
  @Expose({ name: "cloudwatchMetric" })
  @Type(() => CloudwatchMetricAction)
  cloudwatchMetric?: CloudwatchMetricAction;

  @SpeakeasyMetadata()
  @Expose({ name: "dynamoDB" })
  @Type(() => DynamoDBAction)
  dynamoDB?: DynamoDBAction;

  @SpeakeasyMetadata()
  @Expose({ name: "dynamoDBv2" })
  @Type(() => DynamoDBv2Action)
  dynamoDBv2?: DynamoDBv2Action;

  @SpeakeasyMetadata()
  @Expose({ name: "elasticsearch" })
  @Type(() => ElasticsearchAction)
  elasticsearch?: ElasticsearchAction;

  @SpeakeasyMetadata()
  @Expose({ name: "firehose" })
  @Type(() => FirehoseAction)
  firehose?: FirehoseAction;

  @SpeakeasyMetadata()
  @Expose({ name: "http" })
  @Type(() => HttpAction)
  http?: HttpAction;

  @SpeakeasyMetadata()
  @Expose({ name: "iotAnalytics" })
  @Type(() => IotAnalyticsAction)
  iotAnalytics?: IotAnalyticsAction;

  @SpeakeasyMetadata()
  @Expose({ name: "iotEvents" })
  @Type(() => IotEventsAction)
  iotEvents?: IotEventsAction;

  @SpeakeasyMetadata()
  @Expose({ name: "iotSiteWise" })
  @Type(() => IotSiteWiseAction)
  iotSiteWise?: IotSiteWiseAction;

  @SpeakeasyMetadata()
  @Expose({ name: "kafka" })
  @Type(() => KafkaAction)
  kafka?: KafkaAction;

  @SpeakeasyMetadata()
  @Expose({ name: "kinesis" })
  @Type(() => KinesisAction)
  kinesis?: KinesisAction;

  @SpeakeasyMetadata()
  @Expose({ name: "lambda" })
  @Type(() => LambdaAction)
  lambda?: LambdaAction;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => LocationAction)
  location?: LocationAction;

  @SpeakeasyMetadata()
  @Expose({ name: "openSearch" })
  @Type(() => OpenSearchAction)
  openSearch?: OpenSearchAction;

  @SpeakeasyMetadata()
  @Expose({ name: "republish" })
  @Type(() => RepublishAction)
  republish?: RepublishAction;

  @SpeakeasyMetadata()
  @Expose({ name: "s3" })
  @Type(() => S3Action)
  s3?: S3Action;

  @SpeakeasyMetadata()
  @Expose({ name: "salesforce" })
  @Type(() => SalesforceAction)
  salesforce?: SalesforceAction;

  @SpeakeasyMetadata()
  @Expose({ name: "sns" })
  @Type(() => SnsAction)
  sns?: SnsAction;

  @SpeakeasyMetadata()
  @Expose({ name: "sqs" })
  @Type(() => SqsAction)
  sqs?: SqsAction;

  @SpeakeasyMetadata()
  @Expose({ name: "stepFunctions" })
  @Type(() => StepFunctionsAction)
  stepFunctions?: StepFunctionsAction;

  @SpeakeasyMetadata()
  @Expose({ name: "timestream" })
  @Type(() => TimestreamAction)
  timestream?: TimestreamAction;
}
