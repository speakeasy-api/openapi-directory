<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETDescribeSnapshotSchedulesRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETDescribeSnapshotSchedulesActionEnum $action;
    
    /**
     * The unique identifier for the cluster whose snapshot schedules you want to view.
     * 
     * @var ?string $clusterIdentifier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ClusterIdentifier')]
    public ?string $clusterIdentifier = null;
    
    /**
     * A value that indicates the starting point for the next set of response records in a subsequent request. If a value is returned in a response, you can retrieve the next set of records by providing this returned marker value in the <code>marker</code> parameter and retrying the command. If the <code>marker</code> field is empty, all response records have been retrieved for the request.
     * 
     * @var ?string $marker
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Marker')]
    public ?string $marker = null;
    
    /**
     * The maximum number or response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned <code>marker</code> value.
     * 
     * @var ?int $maxRecords
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=MaxRecords')]
    public ?int $maxRecords = null;
    
    /**
     * A unique identifier for a snapshot schedule.
     * 
     * @var ?string $scheduleIdentifier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ScheduleIdentifier')]
    public ?string $scheduleIdentifier = null;
    
    /**
     * The key value for a snapshot schedule tag.
     * 
     * @var ?array<string> $tagKeys
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TagKeys')]
    public ?array $tagKeys = null;
    
    /**
     * The value corresponding to the key of the snapshot schedule tag.
     * 
     * @var ?array<string> $tagValues
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TagValues')]
    public ?array $tagValues = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETDescribeSnapshotSchedulesVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETDescribeSnapshotSchedulesActionEnum::DESCRIBE_SNAPSHOT_SCHEDULES;
		$this->clusterIdentifier = null;
		$this->marker = null;
		$this->maxRecords = null;
		$this->scheduleIdentifier = null;
		$this->tagKeys = null;
		$this->tagValues = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETDescribeSnapshotSchedulesVersionEnum::TWO_THOUSAND_AND_TWELVE1201;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
