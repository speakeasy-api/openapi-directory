/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConflictDetailLevelTypeEnumEnum } from "./conflictdetailleveltypeenumenum";
import { ConflictResolution } from "./conflictresolution";
import { ConflictResolutionStrategyTypeEnumEnum } from "./conflictresolutionstrategytypeenumenum";
import { Expose, Type } from "class-transformer";

export class MergePullRequestBySquashInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authorName" })
  authorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commitMessage" })
  commitMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conflictDetailLevel" })
  conflictDetailLevel?: ConflictDetailLevelTypeEnumEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "conflictResolution" })
  @Type(() => ConflictResolution)
  conflictResolution?: ConflictResolution;

  @SpeakeasyMetadata()
  @Expose({ name: "conflictResolutionStrategy" })
  conflictResolutionStrategy?: ConflictResolutionStrategyTypeEnumEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keepEmptyFolders" })
  keepEmptyFolders?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "pullRequestId" })
  pullRequestId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryName" })
  repositoryName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceCommitId" })
  sourceCommitId?: string;
}
