/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The status of the last archive or restore process.
 */
export enum DescribeSnapshotTierStatusResultSnapshotTierStatusesLastTieringOperationStatusEnum {
  ArchivalInProgress = "archival-in-progress",
  ArchivalCompleted = "archival-completed",
  ArchivalFailed = "archival-failed",
  TemporaryRestoreInProgress = "temporary-restore-in-progress",
  TemporaryRestoreCompleted = "temporary-restore-completed",
  TemporaryRestoreFailed = "temporary-restore-failed",
  PermanentRestoreInProgress = "permanent-restore-in-progress",
  PermanentRestoreCompleted = "permanent-restore-completed",
  PermanentRestoreFailed = "permanent-restore-failed",
}

/**
 * The state of the snapshot.
 */
export enum DescribeSnapshotTierStatusResultSnapshotTierStatusesStatusEnum {
  Pending = "pending",
  Completed = "completed",
  Error = "error",
  Recoverable = "recoverable",
  Recovering = "recovering",
}

/**
 * The storage tier in which the snapshot is stored. <code>standard</code> indicates that the snapshot is stored in the standard snapshot storage tier and that it is ready for use. <code>archive</code> indicates that the snapshot is currently archived and that it must be restored before it can be used.
 */
export enum DescribeSnapshotTierStatusResultSnapshotTierStatusesStorageTierEnum {
  Archive = "archive",
  Standard = "standard",
}

/**
 * Describes a tag.
 */
export class DescribeSnapshotTierStatusResultSnapshotTierStatusesTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Provides information about a snapshot's storage tier.
 */
export class DescribeSnapshotTierStatusResultSnapshotTierStatuses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  archivalCompleteTime?: Date;

  @SpeakeasyMetadata()
  lastTieringOperationStatus?: DescribeSnapshotTierStatusResultSnapshotTierStatusesLastTieringOperationStatusEnum;

  @SpeakeasyMetadata()
  lastTieringOperationStatusDetail?: string;

  @SpeakeasyMetadata()
  lastTieringProgress?: number;

  @SpeakeasyMetadata()
  lastTieringStartTime?: Date;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  restoreExpiryTime?: Date;

  @SpeakeasyMetadata()
  snapshotId?: string;

  @SpeakeasyMetadata()
  status?: DescribeSnapshotTierStatusResultSnapshotTierStatusesStatusEnum;

  @SpeakeasyMetadata()
  storageTier?: DescribeSnapshotTierStatusResultSnapshotTierStatusesStorageTierEnum;

  @SpeakeasyMetadata({
    elemType: DescribeSnapshotTierStatusResultSnapshotTierStatusesTags,
  })
  tags?: DescribeSnapshotTierStatusResultSnapshotTierStatusesTags[];

  @SpeakeasyMetadata()
  volumeId?: string;
}

/**
 * Success
 */
export class DescribeSnapshotTierStatusResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType: DescribeSnapshotTierStatusResultSnapshotTierStatuses,
  })
  snapshotTierStatuses?: DescribeSnapshotTierStatusResultSnapshotTierStatuses[];
}
