"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Snapshot = exports.SnapshotStorageBytesStatusEnum = exports.SnapshotStatusEnum = exports.SnapshotSnapshotTypeEnum = exports.SnapshotArchitectureEnum = void 0;
var utils_1 = require("../../../internal/utils");
var customerencryptionkey_1 = require("./customerencryptionkey");
var guestosfeature_1 = require("./guestosfeature");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] The architecture of the snapshot. Valid values are ARM64 or X86_64.
 */
var SnapshotArchitectureEnum;
(function (SnapshotArchitectureEnum) {
    SnapshotArchitectureEnum["ArchitectureUnspecified"] = "ARCHITECTURE_UNSPECIFIED";
    SnapshotArchitectureEnum["Arm64"] = "ARM64";
    SnapshotArchitectureEnum["X8664"] = "X86_64";
})(SnapshotArchitectureEnum = exports.SnapshotArchitectureEnum || (exports.SnapshotArchitectureEnum = {}));
/**
 * Indicates the type of the snapshot.
 */
var SnapshotSnapshotTypeEnum;
(function (SnapshotSnapshotTypeEnum) {
    SnapshotSnapshotTypeEnum["Archive"] = "ARCHIVE";
    SnapshotSnapshotTypeEnum["Standard"] = "STANDARD";
})(SnapshotSnapshotTypeEnum = exports.SnapshotSnapshotTypeEnum || (exports.SnapshotSnapshotTypeEnum = {}));
/**
 * [Output Only] The status of the snapshot. This can be CREATING, DELETING, FAILED, READY, or UPLOADING.
 */
var SnapshotStatusEnum;
(function (SnapshotStatusEnum) {
    SnapshotStatusEnum["Creating"] = "CREATING";
    SnapshotStatusEnum["Deleting"] = "DELETING";
    SnapshotStatusEnum["Failed"] = "FAILED";
    SnapshotStatusEnum["Ready"] = "READY";
    SnapshotStatusEnum["Uploading"] = "UPLOADING";
})(SnapshotStatusEnum = exports.SnapshotStatusEnum || (exports.SnapshotStatusEnum = {}));
/**
 * [Output Only] An indicator whether storageBytes is in a stable state or it is being adjusted as a result of shared storage reallocation. This status can either be UPDATING, meaning the size of the snapshot is being updated, or UP_TO_DATE, meaning the size of the snapshot is up-to-date.
 */
var SnapshotStorageBytesStatusEnum;
(function (SnapshotStorageBytesStatusEnum) {
    SnapshotStorageBytesStatusEnum["Updating"] = "UPDATING";
    SnapshotStorageBytesStatusEnum["UpToDate"] = "UP_TO_DATE";
})(SnapshotStorageBytesStatusEnum = exports.SnapshotStorageBytesStatusEnum || (exports.SnapshotStorageBytesStatusEnum = {}));
/**
 * Represents a Persistent Disk Snapshot resource. You can use snapshots to back up data on a regular interval. For more information, read Creating persistent disk snapshots.
 */
var Snapshot = /** @class */ (function (_super) {
    __extends(Snapshot, _super);
    function Snapshot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "architecture" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "architecture", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoCreated" }),
        __metadata("design:type", Boolean)
    ], Snapshot.prototype, "autoCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chainName" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "chainName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationSizeBytes" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "creationSizeBytes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "diskSizeGb" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "diskSizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "downloadBytes" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "downloadBytes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "guestFlush" }),
        __metadata("design:type", Boolean)
    ], Snapshot.prototype, "guestFlush", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: guestosfeature_1.GuestOsFeature }),
        (0, class_transformer_1.Expose)({ name: "guestOsFeatures" }),
        (0, class_transformer_1.Type)(function () { return guestosfeature_1.GuestOsFeature; }),
        __metadata("design:type", Array)
    ], Snapshot.prototype, "guestOsFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labelFingerprint" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "labelFingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], Snapshot.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licenseCodes" }),
        __metadata("design:type", Array)
    ], Snapshot.prototype, "licenseCodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "licenses" }),
        __metadata("design:type", Array)
    ], Snapshot.prototype, "licenses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locationHint" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "locationHint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maxRetentionDays" }),
        __metadata("design:type", Number)
    ], Snapshot.prototype, "maxRetentionDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "satisfiesPzs" }),
        __metadata("design:type", Boolean)
    ], Snapshot.prototype, "satisfiesPzs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLinkWithId" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "selfLinkWithId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], Snapshot.prototype, "snapshotEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "snapshotType" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "snapshotType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceDisk" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "sourceDisk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceDiskEncryptionKey" }),
        (0, class_transformer_1.Type)(function () { return customerencryptionkey_1.CustomerEncryptionKey; }),
        __metadata("design:type", customerencryptionkey_1.CustomerEncryptionKey)
    ], Snapshot.prototype, "sourceDiskEncryptionKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceDiskId" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "sourceDiskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceInstantSnapshot" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "sourceInstantSnapshot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceInstantSnapshotId" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "sourceInstantSnapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshotSchedulePolicy" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "sourceSnapshotSchedulePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceSnapshotSchedulePolicyId" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "sourceSnapshotSchedulePolicyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageBytes" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "storageBytes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageBytesStatus" }),
        __metadata("design:type", String)
    ], Snapshot.prototype, "storageBytesStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageLocations" }),
        __metadata("design:type", Array)
    ], Snapshot.prototype, "storageLocations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userLicenses" }),
        __metadata("design:type", Array)
    ], Snapshot.prototype, "userLicenses", void 0);
    return Snapshot;
}(utils_1.SpeakeasyBase));
exports.Snapshot = Snapshot;
