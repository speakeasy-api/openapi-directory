// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SsoStrategyEntityDeprovisionBehaviorEnum - Method used for deprovisioning users.
type SsoStrategyEntityDeprovisionBehaviorEnum string

const (
	SsoStrategyEntityDeprovisionBehaviorEnumDisable SsoStrategyEntityDeprovisionBehaviorEnum = "disable"
	SsoStrategyEntityDeprovisionBehaviorEnumDelete  SsoStrategyEntityDeprovisionBehaviorEnum = "delete"
)

func (e SsoStrategyEntityDeprovisionBehaviorEnum) ToPointer() *SsoStrategyEntityDeprovisionBehaviorEnum {
	return &e
}

func (e *SsoStrategyEntityDeprovisionBehaviorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disable":
		fallthrough
	case "delete":
		*e = SsoStrategyEntityDeprovisionBehaviorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SsoStrategyEntityDeprovisionBehaviorEnum: %v", v)
	}
}

// SsoStrategyEntityLdapUsernameFieldEnum - LDAP username field
type SsoStrategyEntityLdapUsernameFieldEnum string

const (
	SsoStrategyEntityLdapUsernameFieldEnumSAmAccountName    SsoStrategyEntityLdapUsernameFieldEnum = "sAMAccountName"
	SsoStrategyEntityLdapUsernameFieldEnumUserPrincipalName SsoStrategyEntityLdapUsernameFieldEnum = "userPrincipalName"
)

func (e SsoStrategyEntityLdapUsernameFieldEnum) ToPointer() *SsoStrategyEntityLdapUsernameFieldEnum {
	return &e
}

func (e *SsoStrategyEntityLdapUsernameFieldEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "sAMAccountName":
		fallthrough
	case "userPrincipalName":
		*e = SsoStrategyEntityLdapUsernameFieldEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SsoStrategyEntityLdapUsernameFieldEnum: %v", v)
	}
}

// SsoStrategyEntityProtocolEnum - SSO Protocol
type SsoStrategyEntityProtocolEnum string

const (
	SsoStrategyEntityProtocolEnumOauth2          SsoStrategyEntityProtocolEnum = "oauth2"
	SsoStrategyEntityProtocolEnumUnusedOpenid2   SsoStrategyEntityProtocolEnum = "_unused_openid2"
	SsoStrategyEntityProtocolEnumSaml            SsoStrategyEntityProtocolEnum = "saml"
	SsoStrategyEntityProtocolEnumActiveDirectory SsoStrategyEntityProtocolEnum = "active_directory"
	SsoStrategyEntityProtocolEnumOpenLdap        SsoStrategyEntityProtocolEnum = "open_ldap"
	SsoStrategyEntityProtocolEnumScim            SsoStrategyEntityProtocolEnum = "scim"
)

func (e SsoStrategyEntityProtocolEnum) ToPointer() *SsoStrategyEntityProtocolEnum {
	return &e
}

func (e *SsoStrategyEntityProtocolEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "oauth2":
		fallthrough
	case "_unused_openid2":
		fallthrough
	case "saml":
		fallthrough
	case "active_directory":
		fallthrough
	case "open_ldap":
		fallthrough
	case "scim":
		*e = SsoStrategyEntityProtocolEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SsoStrategyEntityProtocolEnum: %v", v)
	}
}

// SsoStrategyEntityProviderEnum - Provider name
type SsoStrategyEntityProviderEnum string

const (
	SsoStrategyEntityProviderEnumGoogle       SsoStrategyEntityProviderEnum = "google"
	SsoStrategyEntityProviderEnumAuth0        SsoStrategyEntityProviderEnum = "auth0"
	SsoStrategyEntityProviderEnumOkta         SsoStrategyEntityProviderEnum = "okta"
	SsoStrategyEntityProviderEnumAtlassian    SsoStrategyEntityProviderEnum = "atlassian"
	SsoStrategyEntityProviderEnumAzure        SsoStrategyEntityProviderEnum = "azure"
	SsoStrategyEntityProviderEnumBox          SsoStrategyEntityProviderEnum = "box"
	SsoStrategyEntityProviderEnumDropbox      SsoStrategyEntityProviderEnum = "dropbox"
	SsoStrategyEntityProviderEnumSlack        SsoStrategyEntityProviderEnum = "slack"
	SsoStrategyEntityProviderEnumUnusedUbuntu SsoStrategyEntityProviderEnum = "_unused_ubuntu"
	SsoStrategyEntityProviderEnumOnelogin     SsoStrategyEntityProviderEnum = "onelogin"
	SsoStrategyEntityProviderEnumSaml         SsoStrategyEntityProviderEnum = "saml"
	SsoStrategyEntityProviderEnumIdaptive     SsoStrategyEntityProviderEnum = "idaptive"
	SsoStrategyEntityProviderEnumLdap         SsoStrategyEntityProviderEnum = "ldap"
	SsoStrategyEntityProviderEnumScim         SsoStrategyEntityProviderEnum = "scim"
)

func (e SsoStrategyEntityProviderEnum) ToPointer() *SsoStrategyEntityProviderEnum {
	return &e
}

func (e *SsoStrategyEntityProviderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "google":
		fallthrough
	case "auth0":
		fallthrough
	case "okta":
		fallthrough
	case "atlassian":
		fallthrough
	case "azure":
		fallthrough
	case "box":
		fallthrough
	case "dropbox":
		fallthrough
	case "slack":
		fallthrough
	case "_unused_ubuntu":
		fallthrough
	case "onelogin":
		fallthrough
	case "saml":
		fallthrough
	case "idaptive":
		fallthrough
	case "ldap":
		fallthrough
	case "scim":
		*e = SsoStrategyEntityProviderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SsoStrategyEntityProviderEnum: %v", v)
	}
}

// SsoStrategyEntityScimAuthenticationMethodEnum - SCIM authentication type.
type SsoStrategyEntityScimAuthenticationMethodEnum string

const (
	SsoStrategyEntityScimAuthenticationMethodEnumNone  SsoStrategyEntityScimAuthenticationMethodEnum = "none"
	SsoStrategyEntityScimAuthenticationMethodEnumBasic SsoStrategyEntityScimAuthenticationMethodEnum = "basic"
	SsoStrategyEntityScimAuthenticationMethodEnumToken SsoStrategyEntityScimAuthenticationMethodEnum = "token"
)

func (e SsoStrategyEntityScimAuthenticationMethodEnum) ToPointer() *SsoStrategyEntityScimAuthenticationMethodEnum {
	return &e
}

func (e *SsoStrategyEntityScimAuthenticationMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "none":
		fallthrough
	case "basic":
		fallthrough
	case "token":
		*e = SsoStrategyEntityScimAuthenticationMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SsoStrategyEntityScimAuthenticationMethodEnum: %v", v)
	}
}

// SsoStrategyEntity - List Sso Strategies
type SsoStrategyEntity struct {
	// Method used for deprovisioning users.
	DeprovisionBehavior *SsoStrategyEntityDeprovisionBehaviorEnum `json:"deprovision_behavior,omitempty"`
	// Auto-deprovision group membership based on group memberships on the SSO side?
	DeprovisionGroups *bool `json:"deprovision_groups,omitempty"`
	// Auto-deprovision users?
	DeprovisionUsers *bool `json:"deprovision_users,omitempty"`
	// Is strategy enabled?  This may become automatically set to `false` after a high number and duration of failures.
	Enabled *bool `json:"enabled,omitempty"`
	// ID
	ID *int `json:"id,omitempty"`
	// Custom label for the SSO provider on the login page.
	Label *string `json:"label,omitempty"`
	// Base DN for looking up users in LDAP server
	LdapBaseDn *string `json:"ldap_base_dn,omitempty"`
	// Domain name that will be appended to LDAP usernames
	LdapDomain *string `json:"ldap_domain,omitempty"`
	// LDAP host
	LdapHost *string `json:"ldap_host,omitempty"`
	// LDAP backup host
	LdapHost2 *string `json:"ldap_host_2,omitempty"`
	// LDAP backup host
	LdapHost3 *string `json:"ldap_host_3,omitempty"`
	// LDAP port
	LdapPort *int `json:"ldap_port,omitempty"`
	// Use secure LDAP?
	LdapSecure *bool `json:"ldap_secure,omitempty"`
	// Username for signing in to LDAP server.
	LdapUsername *string `json:"ldap_username,omitempty"`
	// LDAP username field
	LdapUsernameField *SsoStrategyEntityLdapUsernameFieldEnum `json:"ldap_username_field,omitempty"`
	// URL holding a custom logo for the SSO provider on the login page.
	LogoURL *string `json:"logo_url,omitempty"`
	// SSO Protocol
	Protocol *SsoStrategyEntityProtocolEnum `json:"protocol,omitempty"`
	// Provider name
	Provider *SsoStrategyEntityProviderEnum `json:"provider,omitempty"`
	// DEPRECATED: Auto-provisioned users get Sharing permission. Use a Group with the Bundle permission instead.
	ProvisionAttachmentsPermission *bool `json:"provision_attachments_permission,omitempty"`
	// Default company for auto provisioned users.
	ProvisionCompany *string `json:"provision_company,omitempty"`
	// Auto-provisioned users get WebDAV permission?
	ProvisionDavPermission *bool `json:"provision_dav_permission,omitempty"`
	// Comma-separated list of group names whose members will be created with email_signup authentication.
	ProvisionEmailSignupGroups *string `json:"provision_email_signup_groups,omitempty"`
	// Auto-provisioned users get FTP permission?
	ProvisionFtpPermission *bool `json:"provision_ftp_permission,omitempty"`
	// Comma-separated list of group names for groups to automatically add all auto-provisioned users to.
	ProvisionGroupDefault *string `json:"provision_group_default,omitempty"`
	// Comma-separated list of group names for groups (with optional wildcards) that will be excluded from auto-provisioning.
	ProvisionGroupExclusion *string `json:"provision_group_exclusion,omitempty"`
	// Comma-separated list of group names for groups (with optional wildcards) that will be auto-provisioned.
	ProvisionGroupInclusion *string `json:"provision_group_inclusion,omitempty"`
	// Comma or newline separated list of group names (with optional wildcards) to require membership for user provisioning.
	ProvisionGroupRequired *string `json:"provision_group_required,omitempty"`
	// Auto-provision group membership based on group memberships on the SSO side?
	ProvisionGroups *bool `json:"provision_groups,omitempty"`
	// Auto-provisioned users get SFTP permission?
	ProvisionSftpPermission *bool `json:"provision_sftp_permission,omitempty"`
	// Comma-separated list of group names whose members will be created as Site Admins.
	ProvisionSiteAdminGroups *string `json:"provision_site_admin_groups,omitempty"`
	// Default time zone for auto provisioned users.
	ProvisionTimeZone *string `json:"provision_time_zone,omitempty"`
	// Auto-provision users?
	ProvisionUsers *bool `json:"provision_users,omitempty"`
	// Identity provider sha256 cert fingerprint if saml_provider_metadata_url is not available.
	SamlProviderCertFingerprint *string `json:"saml_provider_cert_fingerprint,omitempty"`
	// Identity provider issuer url
	SamlProviderIssuerURL *string `json:"saml_provider_issuer_url,omitempty"`
	// Custom identity provider metadata
	SamlProviderMetadataContent *string `json:"saml_provider_metadata_content,omitempty"`
	// Metadata URL for the SAML identity provider
	SamlProviderMetadataURL *string `json:"saml_provider_metadata_url,omitempty"`
	// Identity provider SLO endpoint
	SamlProviderSloTargetURL *string `json:"saml_provider_slo_target_url,omitempty"`
	// Identity provider SSO endpoint if saml_provider_metadata_url is not available.
	SamlProviderSsoTargetURL *string `json:"saml_provider_sso_target_url,omitempty"`
	// SCIM authentication type.
	ScimAuthenticationMethod *SsoStrategyEntityScimAuthenticationMethodEnum `json:"scim_authentication_method,omitempty"`
	// SCIM OAuth Access Token.
	ScimOauthAccessToken *string `json:"scim_oauth_access_token,omitempty"`
	// SCIM OAuth Access Token Expiration Time.
	ScimOauthAccessTokenExpiresAt *string `json:"scim_oauth_access_token_expires_at,omitempty"`
	// SCIM username.
	ScimUsername *string `json:"scim_username,omitempty"`
	// Subdomain
	Subdomain *string `json:"subdomain,omitempty"`
}
