// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetNamesDecisionsRecentEmbedEnum - A flag to indicate whether to embed the corresponding 'feature' into each matching name
type GetNamesDecisionsRecentEmbedEnum int64

const (
	GetNamesDecisionsRecentEmbedEnumZero GetNamesDecisionsRecentEmbedEnum = 0
	GetNamesDecisionsRecentEmbedEnumOne  GetNamesDecisionsRecentEmbedEnum = 1
)

func (e GetNamesDecisionsRecentEmbedEnum) ToPointer() *GetNamesDecisionsRecentEmbedEnum {
	return &e
}

func (e *GetNamesDecisionsRecentEmbedEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		*e = GetNamesDecisionsRecentEmbedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamesDecisionsRecentEmbedEnum: %v", v)
	}
}

// GetNamesDecisionsRecentOutputFormatEnum - The format of the output.
type GetNamesDecisionsRecentOutputFormatEnum string

const (
	GetNamesDecisionsRecentOutputFormatEnumJSON GetNamesDecisionsRecentOutputFormatEnum = "json"
	GetNamesDecisionsRecentOutputFormatEnumXML  GetNamesDecisionsRecentOutputFormatEnum = "xml"
	GetNamesDecisionsRecentOutputFormatEnumKml  GetNamesDecisionsRecentOutputFormatEnum = "kml"
	GetNamesDecisionsRecentOutputFormatEnumCsv  GetNamesDecisionsRecentOutputFormatEnum = "csv"
)

func (e GetNamesDecisionsRecentOutputFormatEnum) ToPointer() *GetNamesDecisionsRecentOutputFormatEnum {
	return &e
}

func (e *GetNamesDecisionsRecentOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "kml":
		fallthrough
	case "csv":
		*e = GetNamesDecisionsRecentOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamesDecisionsRecentOutputFormatEnum: %v", v)
	}
}

// GetNamesDecisionsRecentOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries.
type GetNamesDecisionsRecentOutputSrsEnum int64

const (
	GetNamesDecisionsRecentOutputSrsEnumFourThousandThreeHundredAndTwentySix   GetNamesDecisionsRecentOutputSrsEnum = 4326
	GetNamesDecisionsRecentOutputSrsEnumFourThousandTwoHundredAndSixtyNine     GetNamesDecisionsRecentOutputSrsEnum = 4269
	GetNamesDecisionsRecentOutputSrsEnumThreeThousandAndFive                   GetNamesDecisionsRecentOutputSrsEnum = 3005
	GetNamesDecisionsRecentOutputSrsEnumThreeThousandEightHundredAndFiftySeven GetNamesDecisionsRecentOutputSrsEnum = 3857
	GetNamesDecisionsRecentOutputSrsEnumTwentySixThousandNineHundredAndSeven   GetNamesDecisionsRecentOutputSrsEnum = 26907
	GetNamesDecisionsRecentOutputSrsEnumTwentySixThousandNineHundredAndEight   GetNamesDecisionsRecentOutputSrsEnum = 26908
	GetNamesDecisionsRecentOutputSrsEnumTwentySixThousandNineHundredAndNine    GetNamesDecisionsRecentOutputSrsEnum = 26909
	GetNamesDecisionsRecentOutputSrsEnumTwentySixThousandNineHundredAndTen     GetNamesDecisionsRecentOutputSrsEnum = 26910
	GetNamesDecisionsRecentOutputSrsEnumTwentySixThousandNineHundredAndEleven  GetNamesDecisionsRecentOutputSrsEnum = 26911
)

func (e GetNamesDecisionsRecentOutputSrsEnum) ToPointer() *GetNamesDecisionsRecentOutputSrsEnum {
	return &e
}

func (e *GetNamesDecisionsRecentOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 4326:
		fallthrough
	case 4269:
		fallthrough
	case 3005:
		fallthrough
	case 3857:
		fallthrough
	case 26907:
		fallthrough
	case 26908:
		fallthrough
	case 26909:
		fallthrough
	case 26910:
		fallthrough
	case 26911:
		*e = GetNamesDecisionsRecentOutputSrsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamesDecisionsRecentOutputSrsEnum: %v", v)
	}
}

// GetNamesDecisionsRecentOutputStyleEnum - A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)
type GetNamesDecisionsRecentOutputStyleEnum string

const (
	GetNamesDecisionsRecentOutputStyleEnumSummary GetNamesDecisionsRecentOutputStyleEnum = "summary"
	GetNamesDecisionsRecentOutputStyleEnumDetail  GetNamesDecisionsRecentOutputStyleEnum = "detail"
)

func (e GetNamesDecisionsRecentOutputStyleEnum) ToPointer() *GetNamesDecisionsRecentOutputStyleEnum {
	return &e
}

func (e *GetNamesDecisionsRecentOutputStyleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "summary":
		fallthrough
	case "detail":
		*e = GetNamesDecisionsRecentOutputStyleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamesDecisionsRecentOutputStyleEnum: %v", v)
	}
}

// GetNamesDecisionsRecentSortByEnum - The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
type GetNamesDecisionsRecentSortByEnum string

const (
	GetNamesDecisionsRecentSortByEnumName         GetNamesDecisionsRecentSortByEnum = "name"
	GetNamesDecisionsRecentSortByEnumFeatureType  GetNamesDecisionsRecentSortByEnum = "featureType"
	GetNamesDecisionsRecentSortByEnumDecisionDate GetNamesDecisionsRecentSortByEnum = "decisionDate"
)

func (e GetNamesDecisionsRecentSortByEnum) ToPointer() *GetNamesDecisionsRecentSortByEnum {
	return &e
}

func (e *GetNamesDecisionsRecentSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "featureType":
		fallthrough
	case "decisionDate":
		*e = GetNamesDecisionsRecentSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamesDecisionsRecentSortByEnum: %v", v)
	}
}

type GetNamesDecisionsRecentRequest struct {
	// The number of days used to define the time window of naming decisions to search.  The number is interpreted as searching for 'names affected by decisions within the last X days'.
	Days int64 `queryParam:"style=form,explode=true,name=days"`
	// A flag to indicate whether to embed the corresponding 'feature' into each matching name
	Embed *GetNamesDecisionsRecentEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	// A filter to limit the search to names associated with features of a certain 'category'  The value of this parameter should be a 'featureCategoryCode' value returned by the /featureCategories resource, or an asterisk (*) to request that all feature categories be included.
	FeatureCategory *string `queryParam:"style=form,explode=true,name=featureCategory"`
	// A filter to limit the search to names associated with features of a certain 'class'  The value of this parameter should be a 'featureClassCode' value returned by the /featureClasses resource, or an asterisk (*) to request that all feature classes be included.
	FeatureClass *string `queryParam:"style=form,explode=true,name=featureClass"`
	// A filter to limit the search to names associated with features of a certain 'type'  The value of this parameter should be a 'featureTypeCode' value returned by the /featureTypes resource, or an asterisk (*) to request that all feature types be included
	FeatureType *string `queryParam:"style=form,explode=true,name=featureType"`
	// The number of search results to return (1-200)
	ItemsPerPage *int64 `queryParam:"style=form,explode=true,name=itemsPerPage"`
	// The format of the output.
	OutputFormat GetNamesDecisionsRecentOutputFormatEnum `queryParam:"style=form,explode=true,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries.
	OutputSRS *GetNamesDecisionsRecentOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// A flag indicating whether to include with each matching name a succinct list of attributes (summary), or a comprehensive list of attributes (detail)
	OutputStyle *GetNamesDecisionsRecentOutputStyleEnum `queryParam:"style=form,explode=true,name=outputStyle"`
	// The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
	SortBy *GetNamesDecisionsRecentSortByEnum `queryParam:"style=form,explode=true,name=sortBy"`
	// The index of the first record to be returned (>= 1)
	StartIndex *int64 `queryParam:"style=form,explode=true,name=startIndex"`
}

type GetNamesDecisionsRecentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
