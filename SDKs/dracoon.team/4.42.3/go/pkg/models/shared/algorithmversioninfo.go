// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AlgorithmVersionInfoStatusEnum - Algorithm status
//
// Derived from preference value and threshold
type AlgorithmVersionInfoStatusEnum string

const (
	AlgorithmVersionInfoStatusEnumRequired    AlgorithmVersionInfoStatusEnum = "REQUIRED"
	AlgorithmVersionInfoStatusEnumDiscouraged AlgorithmVersionInfoStatusEnum = "DISCOURAGED"
)

func (e AlgorithmVersionInfoStatusEnum) ToPointer() *AlgorithmVersionInfoStatusEnum {
	return &e
}

func (e *AlgorithmVersionInfoStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUIRED":
		fallthrough
	case "DISCOURAGED":
		*e = AlgorithmVersionInfoStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AlgorithmVersionInfoStatusEnum: %v", v)
	}
}

// AlgorithmVersionInfo - Algorithm information
type AlgorithmVersionInfo struct {
	// Algorithm description
	Description string `json:"description"`
	// Algorithm status
	//
	// Derived from preference value and threshold
	Status AlgorithmVersionInfoStatusEnum `json:"status"`
	// Algorithm version
	Version string `json:"version"`
}
