// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionScheduleTimeUnitEnum string

const (
	ConnectionScheduleTimeUnitEnumMinutes ConnectionScheduleTimeUnitEnum = "minutes"
	ConnectionScheduleTimeUnitEnumHours   ConnectionScheduleTimeUnitEnum = "hours"
	ConnectionScheduleTimeUnitEnumDays    ConnectionScheduleTimeUnitEnum = "days"
	ConnectionScheduleTimeUnitEnumWeeks   ConnectionScheduleTimeUnitEnum = "weeks"
	ConnectionScheduleTimeUnitEnumMonths  ConnectionScheduleTimeUnitEnum = "months"
)

func (e *ConnectionScheduleTimeUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minutes":
		fallthrough
	case "hours":
		fallthrough
	case "days":
		fallthrough
	case "weeks":
		fallthrough
	case "months":
		*e = ConnectionScheduleTimeUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionScheduleTimeUnitEnum: %s", s)
	}
}

// ConnectionSchedule - if null, then no schedule is set.
type ConnectionSchedule struct {
	TimeUnit ConnectionScheduleTimeUnitEnum `json:"timeUnit"`
	Units    int64                          `json:"units"`
}
