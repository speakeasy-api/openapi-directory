// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type LineLineRoutesByIdsServiceTypesEnum string

const (
	LineLineRoutesByIdsServiceTypesEnumRegular LineLineRoutesByIdsServiceTypesEnum = "Regular"
	LineLineRoutesByIdsServiceTypesEnumNight   LineLineRoutesByIdsServiceTypesEnum = "Night"
)

func (e LineLineRoutesByIdsServiceTypesEnum) ToPointer() *LineLineRoutesByIdsServiceTypesEnum {
	return &e
}

func (e *LineLineRoutesByIdsServiceTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Regular":
		fallthrough
	case "Night":
		*e = LineLineRoutesByIdsServiceTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LineLineRoutesByIdsServiceTypesEnum: %v", v)
	}
}

type LineLineRoutesByIdsRequest struct {
	// A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.
	Ids []string `pathParam:"style=simple,explode=false,name=ids"`
	// A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified
	ServiceTypes []LineLineRoutesByIdsServiceTypesEnum `queryParam:"style=form,explode=true,name=serviceTypes"`
}

type LineLineRoutesByIdsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TflAPIPresentationEntitiesLines []shared.TflAPIPresentationEntitiesLine
}
