/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateRelationalDatabaseRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyImmediately")
    public Boolean applyImmediately;
    public UpdateRelationalDatabaseRequest withApplyImmediately(Boolean applyImmediately) {
        this.applyImmediately = applyImmediately;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caCertificateIdentifier")
    public String caCertificateIdentifier;
    public UpdateRelationalDatabaseRequest withCaCertificateIdentifier(String caCertificateIdentifier) {
        this.caCertificateIdentifier = caCertificateIdentifier;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableBackupRetention")
    public Boolean disableBackupRetention;
    public UpdateRelationalDatabaseRequest withDisableBackupRetention(Boolean disableBackupRetention) {
        this.disableBackupRetention = disableBackupRetention;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableBackupRetention")
    public Boolean enableBackupRetention;
    public UpdateRelationalDatabaseRequest withEnableBackupRetention(Boolean enableBackupRetention) {
        this.enableBackupRetention = enableBackupRetention;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterUserPassword")
    public String masterUserPassword;
    public UpdateRelationalDatabaseRequest withMasterUserPassword(String masterUserPassword) {
        this.masterUserPassword = masterUserPassword;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredBackupWindow")
    public String preferredBackupWindow;
    public UpdateRelationalDatabaseRequest withPreferredBackupWindow(String preferredBackupWindow) {
        this.preferredBackupWindow = preferredBackupWindow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferredMaintenanceWindow")
    public String preferredMaintenanceWindow;
    public UpdateRelationalDatabaseRequest withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publiclyAccessible")
    public Boolean publiclyAccessible;
    public UpdateRelationalDatabaseRequest withPubliclyAccessible(Boolean publiclyAccessible) {
        this.publiclyAccessible = publiclyAccessible;
        return this;
    }
    
    @JsonProperty("relationalDatabaseName")
    public String relationalDatabaseName;
    public UpdateRelationalDatabaseRequest withRelationalDatabaseName(String relationalDatabaseName) {
        this.relationalDatabaseName = relationalDatabaseName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rotateMasterUserPassword")
    public Boolean rotateMasterUserPassword;
    public UpdateRelationalDatabaseRequest withRotateMasterUserPassword(Boolean rotateMasterUserPassword) {
        this.rotateMasterUserPassword = rotateMasterUserPassword;
        return this;
    }
    
}
