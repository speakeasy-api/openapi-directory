"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import domainstatus_enum as shared_domainstatus_enum
from ..shared import resourcerecord as shared_resourcerecord
from ..shared import validationmethod_enum as shared_validationmethod_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DomainValidation:
    r"""Contains information about the validation of each domain name in the certificate."""
    
    domain_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainName') }})  
    resource_record: Optional[shared_resourcerecord.ResourceRecord] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceRecord'), 'exclude': lambda f: f is None }})  
    validation_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationDomain'), 'exclude': lambda f: f is None }})  
    validation_emails: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationEmails'), 'exclude': lambda f: f is None }})  
    validation_method: Optional[shared_validationmethod_enum.ValidationMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationMethod'), 'exclude': lambda f: f is None }})  
    validation_status: Optional[shared_domainstatus_enum.DomainStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationStatus'), 'exclude': lambda f: f is None }})  
    