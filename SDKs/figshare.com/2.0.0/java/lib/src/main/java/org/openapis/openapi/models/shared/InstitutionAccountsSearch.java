/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstitutionAccountsSearch - Search Parameters
 */
public class InstitutionAccountsSearch {
    /**
     * filter by email
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public InstitutionAccountsSearch withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * filter by institution_user_id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("institution_user_id")
    public String institutionUserId;

    public InstitutionAccountsSearch withInstitutionUserId(String institutionUserId) {
        this.institutionUserId = institutionUserId;
        return this;
    }
    
    /**
     * Filter by active status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_active")
    public Long isActive;

    public InstitutionAccountsSearch withIsActive(Long isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * Number of results included on a page. Used for pagination with query
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limit")
    public Long limit;

    public InstitutionAccountsSearch withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Where to start the listing(the offset of the first result). Used for pagination with limit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offset")
    public Long offset;

    public InstitutionAccountsSearch withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * Page number. Used for pagination with page_size
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;

    public InstitutionAccountsSearch withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of results included on a page. Used for pagination with page
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;

    public InstitutionAccountsSearch withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * Search term
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("search_for")
    public String searchFor;

    public InstitutionAccountsSearch withSearchFor(String searchFor) {
        this.searchFor = searchFor;
        return this;
    }
    
    public InstitutionAccountsSearch(){}
}
