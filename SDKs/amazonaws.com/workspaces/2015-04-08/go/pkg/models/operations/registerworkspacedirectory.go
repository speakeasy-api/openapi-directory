// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterWorkspaceDirectoryXAmzTargetEnum
type RegisterWorkspaceDirectoryXAmzTargetEnum string

const (
	RegisterWorkspaceDirectoryXAmzTargetEnumWorkspacesServiceRegisterWorkspaceDirectory RegisterWorkspaceDirectoryXAmzTargetEnum = "WorkspacesService.RegisterWorkspaceDirectory"
)

func (e RegisterWorkspaceDirectoryXAmzTargetEnum) ToPointer() *RegisterWorkspaceDirectoryXAmzTargetEnum {
	return &e
}

func (e *RegisterWorkspaceDirectoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.RegisterWorkspaceDirectory":
		*e = RegisterWorkspaceDirectoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterWorkspaceDirectoryXAmzTargetEnum: %v", v)
	}
}

type RegisterWorkspaceDirectoryRequest struct {
	RegisterWorkspaceDirectoryRequest shared.RegisterWorkspaceDirectoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        RegisterWorkspaceDirectoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterWorkspaceDirectoryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// Success
	RegisterWorkspaceDirectoryResult map[string]interface{}
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// UnsupportedNetworkConfigurationException
	UnsupportedNetworkConfigurationException interface{}
	// WorkspacesDefaultRoleNotFoundException
	WorkspacesDefaultRoleNotFoundException interface{}
}
