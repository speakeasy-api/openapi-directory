/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { WorkspaceProperties } from "./workspaceproperties";
import { Expose, Type } from "class-transformer";

/**
 * Describes the information used to create a WorkSpace.
 */
export class WorkspaceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BundleId" })
  bundleId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DirectoryId" })
  directoryId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RootVolumeEncryptionEnabled" })
  rootVolumeEncryptionEnabled?: boolean;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "UserName" })
  userName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UserVolumeEncryptionEnabled" })
  userVolumeEncryptionEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "VolumeEncryptionKey" })
  volumeEncryptionKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkspaceProperties" })
  @Type(() => WorkspaceProperties)
  workspaceProperties?: WorkspaceProperties;
}
