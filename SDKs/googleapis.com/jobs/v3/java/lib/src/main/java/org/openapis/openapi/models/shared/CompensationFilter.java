/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CompensationFilter - Input only. Filter on job compensation type and amount.
 */
public class CompensationFilter {
    /**
     * Optional. If set to true, jobs with unspecified compensation range fields are included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includeJobsWithUnspecifiedCompensationRange")
    public Boolean includeJobsWithUnspecifiedCompensationRange;

    public CompensationFilter withIncludeJobsWithUnspecifiedCompensationRange(Boolean includeJobsWithUnspecifiedCompensationRange) {
        this.includeJobsWithUnspecifiedCompensationRange = includeJobsWithUnspecifiedCompensationRange;
        return this;
    }
    
    /**
     * Compensation range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("range")
    public CompensationRange range;

    public CompensationFilter withRange(CompensationRange range) {
        this.range = range;
        return this;
    }
    
    /**
     * Required. Type of filter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public CompensationFilterTypeEnum type;

    public CompensationFilter withType(CompensationFilterTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Required. Specify desired `base compensation entry's` CompensationInfo.CompensationUnit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("units")
    public CompensationFilterUnitsEnum[] units;

    public CompensationFilter withUnits(CompensationFilterUnitsEnum[] units) {
        this.units = units;
        return this;
    }
    
    public CompensationFilter(){}
}
