"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudvisionv1p2beta1feature as shared_googlecloudvisionv1p2beta1feature
from ..shared import googlecloudvisionv1p2beta1image as shared_googlecloudvisionv1p2beta1image
from ..shared import googlecloudvisionv1p2beta1imagecontext as shared_googlecloudvisionv1p2beta1imagecontext
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudVisionV1p2beta1AnnotateImageRequest:
    r"""Request for performing Google Cloud Vision API tasks over a user-provided image, with user-requested features, and with context information."""
    
    features: Optional[list[shared_googlecloudvisionv1p2beta1feature.GoogleCloudVisionV1p2beta1Feature]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('features'), 'exclude': lambda f: f is None }})
    r"""Requested features."""  
    image: Optional[shared_googlecloudvisionv1p2beta1image.GoogleCloudVisionV1p2beta1Image] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('image'), 'exclude': lambda f: f is None }})
    r"""Client image to perform Google Cloud Vision API tasks over."""  
    image_context: Optional[shared_googlecloudvisionv1p2beta1imagecontext.GoogleCloudVisionV1p2beta1ImageContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageContext'), 'exclude': lambda f: f is None }})
    r"""Image context and/or feature-specific parameters."""  
    