/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GcRule - Rule for determining which cells to delete during garbage collection.
 */
public class GcRule {
    /**
     * A GcRule which deletes cells matching all of the given rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intersection")
    public Intersection intersection;
    public GcRule withIntersection(Intersection intersection) {
        this.intersection = intersection;
        return this;
    }
    
    /**
     * Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxAge")
    public String maxAge;
    public GcRule withMaxAge(String maxAge) {
        this.maxAge = maxAge;
        return this;
    }
    
    /**
     * Delete all cells in a column except the most recent N.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxNumVersions")
    public Integer maxNumVersions;
    public GcRule withMaxNumVersions(Integer maxNumVersions) {
        this.maxNumVersions = maxNumVersions;
        return this;
    }
    
    /**
     * A GcRule which deletes cells matching any of the given rules.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("union")
    public Union union;
    public GcRule withUnion(Union union) {
        this.union = union;
        return this;
    }
    
}
