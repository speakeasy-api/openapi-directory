/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
 */
export enum LegacyBoxScoresDeltaCurrentWeekFormatEnum {
  Xml = "XML",
  Json = "JSON",
}

export class LegacyBoxScoresDeltaCurrentWeekRequest extends SpeakeasyBase {
  /**
   * Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=format",
  })
  format: LegacyBoxScoresDeltaCurrentWeekFormatEnum;

  /**
   * Only returns player statistics that have changed in the last X minutes.  You specify how many minutes in time to go back.  Valid entries are:<br>
   *
   * @remarks
   *           <code>1</code> or <code>2</code>.
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=minutes",
  })
  minutes: string;
}

export class LegacyBoxScoresDeltaCurrentWeekResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.BoxScore })
  boxScores?: shared.BoxScore[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
