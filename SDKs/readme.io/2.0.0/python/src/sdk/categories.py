"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Categories:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_category(self, request: operations.GetCategoryRequest, security: operations.GetCategorySecurity) -> operations.GetCategoryResponse:
        r"""Get category
        Returns the category with this slug
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetCategoryRequest, base_url, '/categories/{slug}', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetCategoryResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_category_docs(self, request: operations.GetCategoryDocsRequest, security: operations.GetCategoryDocsSecurity) -> operations.GetCategoryDocsResponse:
        r"""Get docs for category
        Returns the docs and children docs within this category
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetCategoryDocsRequest, base_url, '/categories/{slug}/docs', request)
        
        headers = utils.get_headers(request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetCategoryDocsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    