// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppsactivityActivitiesListSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// AppsactivityActivitiesListGroupingStrategyEnum - Indicates the strategy to use when grouping singleEvents items in the associated combinedEvent object.
type AppsactivityActivitiesListGroupingStrategyEnum string

const (
	AppsactivityActivitiesListGroupingStrategyEnumDriveUI AppsactivityActivitiesListGroupingStrategyEnum = "driveUi"
	AppsactivityActivitiesListGroupingStrategyEnumNone    AppsactivityActivitiesListGroupingStrategyEnum = "none"
)

func (e AppsactivityActivitiesListGroupingStrategyEnum) ToPointer() *AppsactivityActivitiesListGroupingStrategyEnum {
	return &e
}

func (e *AppsactivityActivitiesListGroupingStrategyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "driveUi":
		fallthrough
	case "none":
		*e = AppsactivityActivitiesListGroupingStrategyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsactivityActivitiesListGroupingStrategyEnum: %v", v)
	}
}

type AppsactivityActivitiesListRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Identifies the Drive folder containing the items for which to return activities.
	DriveAncestorID *string `queryParam:"style=form,explode=true,name=drive.ancestorId"`
	// Identifies the Drive item to return activities for.
	DriveFileID *string `queryParam:"style=form,explode=true,name=drive.fileId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Indicates the strategy to use when grouping singleEvents items in the associated combinedEvent object.
	GroupingStrategy *AppsactivityActivitiesListGroupingStrategyEnum `queryParam:"style=form,explode=true,name=groupingStrategy"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of events to return on a page. The response includes a continuation token if there are more events.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// A token to retrieve a specific page of results.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The Google service from which to return activities. Possible values of source are:
	// - drive.google.com
	Source *string `queryParam:"style=form,explode=true,name=source"`
	// The ID used for ACL checks (does not filter the resulting event list by the assigned value). Use the special value me to indicate the currently authenticated user.
	UserID *string `queryParam:"style=form,explode=true,name=userId"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type AppsactivityActivitiesListResponse struct {
	ContentType string
	// Successful response
	ListActivitiesResponse *shared.ListActivitiesResponse
	StatusCode             int
	RawResponse            *http.Response
}
