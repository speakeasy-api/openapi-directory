/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WriteResponse - The response for Firestore.Write.
 */
public class WriteResponse {
    /**
     * The time at which the commit occurred. Any read with an equal or greater `read_time` is guaranteed to see the effects of the write.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commitTime")
    public String commitTime;
    public WriteResponse withCommitTime(String commitTime) {
        this.commitTime = commitTime;
        return this;
    }
    
    /**
     * The ID of the stream. Only set on the first message, when a new stream was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamId")
    public String streamId;
    public WriteResponse withStreamId(String streamId) {
        this.streamId = streamId;
        return this;
    }
    
    /**
     * A token that represents the position of this response in the stream. This can be used by a client to resume the stream at this point. This field is always set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamToken")
    public String streamToken;
    public WriteResponse withStreamToken(String streamToken) {
        this.streamToken = streamToken;
        return this;
    }
    
    /**
     * The result of applying the writes. This i-th write result corresponds to the i-th write in the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("writeResults")
    public WriteResult[] writeResults;
    public WriteResponse withWriteResults(WriteResult[] writeResults) {
        this.writeResults = writeResults;
        return this;
    }
    
}
