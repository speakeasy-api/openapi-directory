/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomerDetailsDTO } from "./customerdetailsdto";
import { CustomerInvoiceDatesDTO } from "./customerinvoicedatesdto";
import { PaymentTermsDTO } from "./paymenttermsdto";
import { TaskDTO } from "./taskdto";
import { Expose, Type } from "class-transformer";

export enum CustomerInvoiceDTOStatusEnum {
  NotReady = "NOT_READY",
  Ready = "READY",
  Sent = "SENT",
}

export enum CustomerInvoiceDTOTypeEnum {
  Final = "FINAL",
  Draft = "DRAFT",
  CreditNote = "CREDIT_NOTE",
}

export enum CustomerInvoiceDTOVatCalculationRuleEnum {
  SumItems = "SUM_ITEMS",
  ByNetTotal = "BY_NET_TOTAL",
}

/**
 * Success
 */
export class CustomerInvoiceDTO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "currencyId" })
  currencyId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "customerDetails" })
  @Type(() => CustomerDetailsDTO)
  customerDetails?: CustomerDetailsDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "customerId" })
  customerId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "dates" })
  @Type(() => CustomerInvoiceDatesDTO)
  dates?: CustomerInvoiceDatesDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "invoiceNumber" })
  invoiceNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentMethodId" })
  paymentMethodId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentTerms" })
  @Type(() => PaymentTermsDTO)
  paymentTerms?: PaymentTermsDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CustomerInvoiceDTOStatusEnum;

  @SpeakeasyMetadata({ elemType: TaskDTO })
  @Expose({ name: "tasks" })
  @Type(() => TaskDTO)
  tasks?: TaskDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "tasksValue" })
  tasksValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalGross" })
  totalGross?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalInWords" })
  totalInWords?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalNetto" })
  totalNetto?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CustomerInvoiceDTOTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "vatCalculationRule" })
  vatCalculationRule?: CustomerInvoiceDTOVatCalculationRuleEnum;
}
