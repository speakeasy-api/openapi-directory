// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteClusterSnapshotActionEnum
type GETDeleteClusterSnapshotActionEnum string

const (
	GETDeleteClusterSnapshotActionEnumDeleteClusterSnapshot GETDeleteClusterSnapshotActionEnum = "DeleteClusterSnapshot"
)

func (e GETDeleteClusterSnapshotActionEnum) ToPointer() *GETDeleteClusterSnapshotActionEnum {
	return &e
}

func (e *GETDeleteClusterSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteClusterSnapshot":
		*e = GETDeleteClusterSnapshotActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteClusterSnapshotActionEnum: %v", v)
	}
}

// GETDeleteClusterSnapshotVersionEnum
type GETDeleteClusterSnapshotVersionEnum string

const (
	GETDeleteClusterSnapshotVersionEnumTwoThousandAndTwelve1201 GETDeleteClusterSnapshotVersionEnum = "2012-12-01"
)

func (e GETDeleteClusterSnapshotVersionEnum) ToPointer() *GETDeleteClusterSnapshotVersionEnum {
	return &e
}

func (e *GETDeleteClusterSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETDeleteClusterSnapshotVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteClusterSnapshotVersionEnum: %v", v)
	}
}

type GETDeleteClusterSnapshotRequest struct {
	Action GETDeleteClusterSnapshotActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The unique identifier of the cluster the snapshot was created from. This parameter is required if your IAM user or role has a policy containing a snapshot resource element that specifies anything other than * for the cluster name.</p> <p>Constraints: Must be the name of valid cluster.</p>
	SnapshotClusterIdentifier *string `queryParam:"style=form,explode=true,name=SnapshotClusterIdentifier"`
	// <p>The unique identifier of the manual snapshot to be deleted.</p> <p>Constraints: Must be the name of an existing snapshot that is in the <code>available</code>, <code>failed</code>, or <code>cancelled</code> state.</p>
	SnapshotIdentifier string                              `queryParam:"style=form,explode=true,name=SnapshotIdentifier"`
	Version            GETDeleteClusterSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteClusterSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
