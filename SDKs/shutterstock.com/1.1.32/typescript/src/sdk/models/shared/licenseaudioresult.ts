/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AudioUrl } from "./audiourl";
import { Expose, Type } from "class-transformer";

/**
 * The response to a licensing request for an audio track
 */
export class LicenseAudioResult extends SpeakeasyBase {
  /**
   * Number of credits that this licensing event used
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allotment_charge" })
  allotmentCharge?: number;

  /**
   * ID of the track that was licensed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "audio_id" })
  audioId: string;

  /**
   * Audio License URL object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download" })
  @Type(() => AudioUrl)
  download?: AudioUrl;

  /**
   * Error information if applicable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  /**
   * ID of the license event
   */
  @SpeakeasyMetadata()
  @Expose({ name: "license_id" })
  licenseId?: string;
}
