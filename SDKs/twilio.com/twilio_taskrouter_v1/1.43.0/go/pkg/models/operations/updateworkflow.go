// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateWorkflowServerList = []string{
	"https://taskrouter.twilio.com",
}

type UpdateWorkflowSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type UpdateWorkflowUpdateWorkflowRequest struct {
	// The URL from your application that will process task assignment events. See [Handling Task Assignment Callback](https://www.twilio.com/docs/taskrouter/handle-assignment-callbacks) for more details.
	AssignmentCallbackURL *string `form:"name=AssignmentCallbackUrl"`
	// A JSON string that contains the rules to apply to the Workflow. See [Configuring Workflows](https://www.twilio.com/docs/taskrouter/workflow-configuration) for more information.
	Configuration *string `form:"name=Configuration"`
	// The URL that we should call when a call to the `assignment_callback_url` fails.
	FallbackAssignmentCallbackURL *string `form:"name=FallbackAssignmentCallbackUrl"`
	// A descriptive string that you create to describe the Workflow resource. For example, `Inbound Call Workflow` or `2014 Outbound Campaign`.
	FriendlyName *string `form:"name=FriendlyName"`
	// Whether or not to re-evaluate Tasks. The default is `false`, which means Tasks in the Workflow will not be processed through the assignment loop again.
	ReEvaluateTasks *string `form:"name=ReEvaluateTasks"`
	// How long TaskRouter will wait for a confirmation response from your application after it assigns a Task to a Worker. Can be up to `86,400` (24 hours) and the default is `120`.
	TaskReservationTimeout *int64 `form:"name=TaskReservationTimeout"`
}

type UpdateWorkflowRequest struct {
	RequestBody *UpdateWorkflowUpdateWorkflowRequest `request:"mediaType=application/x-www-form-urlencoded"`
	// The SID of the Workflow resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
	// The SID of the Workspace with the Workflow to update.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type UpdateWorkflowResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TaskrouterV1WorkspaceWorkflow *shared.TaskrouterV1WorkspaceWorkflow
}
