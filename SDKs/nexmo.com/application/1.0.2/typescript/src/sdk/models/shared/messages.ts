/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum MessagesWebhooksEndpointTypeEnum {
  InboundUrl = "inbound_url",
  StatusUrl = "status_url",
}

/**
 * The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST.
 */
export enum MessagesWebhooksHttpMethodEnum {
  Get = "GET",
  Post = "POST",
}

export class MessagesWebhooks extends SpeakeasyBase {
  /**
   * `inbound_url`: The URL where inbound messages are delivered. `status_url`: The URL where message status is delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  endpoint: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint_type" })
  endpointType: MessagesWebhooksEndpointTypeEnum;

  /**
   * The HTTP method used to send data to the `inbound_url` or `status_url`. Default is POST.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "http_method" })
  httpMethod: MessagesWebhooksHttpMethodEnum;
}

/**
 * The Nexmo product that you access with this application.
 */
export class Messages extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: MessagesWebhooks })
  @Expose({ name: "webhooks" })
  @Type(() => MessagesWebhooks)
  webhooks?: MessagesWebhooks[];
}
