// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETStopMetricStreamsActionEnum
type GETStopMetricStreamsActionEnum string

const (
	GETStopMetricStreamsActionEnumStopMetricStreams GETStopMetricStreamsActionEnum = "StopMetricStreams"
)

func (e GETStopMetricStreamsActionEnum) ToPointer() *GETStopMetricStreamsActionEnum {
	return &e
}

func (e *GETStopMetricStreamsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StopMetricStreams":
		*e = GETStopMetricStreamsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStopMetricStreamsActionEnum: %v", v)
	}
}

// GETStopMetricStreamsVersionEnum
type GETStopMetricStreamsVersionEnum string

const (
	GETStopMetricStreamsVersionEnumTwoThousandAndTen0801 GETStopMetricStreamsVersionEnum = "2010-08-01"
)

func (e GETStopMetricStreamsVersionEnum) ToPointer() *GETStopMetricStreamsVersionEnum {
	return &e
}

func (e *GETStopMetricStreamsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = GETStopMetricStreamsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETStopMetricStreamsVersionEnum: %v", v)
	}
}

type GETStopMetricStreamsRequest struct {
	Action GETStopMetricStreamsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The array of the names of metric streams to stop streaming.</p> <p>This is an "all or nothing" operation. If you do not have permission to access all of the metric streams that you list here, then none of the streams that you list in the operation will stop streaming.</p>
	Names             []string                        `queryParam:"style=form,explode=true,name=Names"`
	Version           GETStopMetricStreamsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETStopMetricStreamsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
