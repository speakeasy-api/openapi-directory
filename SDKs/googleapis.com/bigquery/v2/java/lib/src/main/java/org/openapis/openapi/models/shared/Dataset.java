/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Dataset - Successful response
 */
public class Dataset {
    /**
     * [Optional] An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER; access.specialGroup: projectWriters; access.role: WRITER; access.specialGroup: projectOwners; access.role: OWNER; access.userByEmail: [dataset creator email]; access.role: OWNER;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access")
    public DatasetAccess[] access;
    public Dataset withAccess(DatasetAccess[] access) {
        this.access = access;
        return this;
    }
    
    /**
     * [Output-only] The time when this dataset was created, in milliseconds since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;
    public Dataset withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasetReference")
    public DatasetReference datasetReference;
    public Dataset withDatasetReference(DatasetReference datasetReference) {
        this.datasetReference = datasetReference;
        return this;
    }
    
    /**
     * [Output-only] The default collation of the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultCollation")
    public String defaultCollation;
    public Dataset withDefaultCollation(String defaultCollation) {
        this.defaultCollation = defaultCollation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultEncryptionConfiguration")
    public EncryptionConfiguration defaultEncryptionConfiguration;
    public Dataset withDefaultEncryptionConfiguration(EncryptionConfiguration defaultEncryptionConfiguration) {
        this.defaultEncryptionConfiguration = defaultEncryptionConfiguration;
        return this;
    }
    
    /**
     * [Optional] The default partition expiration for all partitioned tables in the dataset, in milliseconds. Once this property is set, all newly-created partitioned tables in the dataset will have an expirationMs property in the timePartitioning settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value. Setting this property overrides the use of defaultTableExpirationMs for partitioned tables: only one of defaultTableExpirationMs and defaultPartitionExpirationMs will be used for any new partitioned table. If you provide an explicit timePartitioning.expirationMs when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultPartitionExpirationMs")
    public String defaultPartitionExpirationMs;
    public Dataset withDefaultPartitionExpirationMs(String defaultPartitionExpirationMs) {
        this.defaultPartitionExpirationMs = defaultPartitionExpirationMs;
        return this;
    }
    
    /**
     * [Output-only] The default rounding mode of the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultRoundingMode")
    public String defaultRoundingMode;
    public Dataset withDefaultRoundingMode(String defaultRoundingMode) {
        this.defaultRoundingMode = defaultRoundingMode;
        return this;
    }
    
    /**
     * [Optional] The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultTableExpirationMs")
    public String defaultTableExpirationMs;
    public Dataset withDefaultTableExpirationMs(String defaultTableExpirationMs) {
        this.defaultTableExpirationMs = defaultTableExpirationMs;
        return this;
    }
    
    /**
     * [Optional] A user-friendly description of the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Dataset withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * [Output-only] A hash of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Dataset withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * [Optional] A descriptive name for the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendlyName")
    public String friendlyName;
    public Dataset withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * [Output-only] The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Dataset withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Optional] Indicates if table names are case insensitive in the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCaseInsensitive")
    public Boolean isCaseInsensitive;
    public Dataset withIsCaseInsensitive(Boolean isCaseInsensitive) {
        this.isCaseInsensitive = isCaseInsensitive;
        return this;
    }
    
    /**
     * [Output-only] The resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Dataset withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See Creating and Updating Dataset Labels for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Dataset withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * [Output-only] The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModifiedTime")
    public String lastModifiedTime;
    public Dataset withLastModifiedTime(String lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    /**
     * The geographic location where the dataset should reside. The default value is US. See details at https://cloud.google.com/bigquery/docs/locations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public Dataset withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * [Optional] Number of hours for the max time travel for all tables in the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTimeTravelHours")
    public String maxTimeTravelHours;
    public Dataset withMaxTimeTravelHours(String maxTimeTravelHours) {
        this.maxTimeTravelHours = maxTimeTravelHours;
        return this;
    }
    
    /**
     * [Output-only] Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public Dataset withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * [Output-only] A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public Dataset withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Optional] Storage billing model to be used for all tables in the dataset. Can be set to PHYSICAL. Default is LOGICAL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageBillingModel")
    public String storageBillingModel;
    public Dataset withStorageBillingModel(String storageBillingModel) {
        this.storageBillingModel = storageBillingModel;
        return this;
    }
    
    /**
     * [Optional]The tags associated with this dataset. Tag keys are globally unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public DatasetTags[] tags;
    public Dataset withTags(DatasetTags[] tags) {
        this.tags = tags;
        return this;
    }
    
}
