// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETAttributesActionEnum
type GETGETAttributesActionEnum string

const (
	GETGETAttributesActionEnumGetAttributes GETGETAttributesActionEnum = "GetAttributes"
)

func (e GETGETAttributesActionEnum) ToPointer() *GETGETAttributesActionEnum {
	return &e
}

func (e *GETGETAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetAttributes":
		*e = GETGETAttributesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAttributesActionEnum: %v", v)
	}
}

// GETGETAttributesVersionEnum
type GETGETAttributesVersionEnum string

const (
	GETGETAttributesVersionEnumTwoThousandAndNine0415 GETGETAttributesVersionEnum = "2009-04-15"
)

func (e GETGETAttributesVersionEnum) ToPointer() *GETGETAttributesVersionEnum {
	return &e
}

func (e *GETGETAttributesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2009-04-15":
		*e = GETGETAttributesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAttributesVersionEnum: %v", v)
	}
}

type GETGETAttributesRequest struct {
	AWSAccessKeyID string                     `queryParam:"style=form,explode=true,name=AWSAccessKeyId"`
	Action         GETGETAttributesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The names of the attributes.
	AttributeNames []string `queryParam:"style=form,explode=true,name=AttributeNames"`
	// Determines whether or not strong consistency should be enforced when data is read from SimpleDB. If <code>true</code>, any data previously written to SimpleDB will be returned. Otherwise, results will be consistent eventually, and the client may not see data that was written immediately before your read.
	ConsistentRead *bool `queryParam:"style=form,explode=true,name=ConsistentRead"`
	// The name of the domain in which to perform the operation.
	DomainName string `queryParam:"style=form,explode=true,name=DomainName"`
	// The name of the item.
	ItemName         string                      `queryParam:"style=form,explode=true,name=ItemName"`
	Signature        string                      `queryParam:"style=form,explode=true,name=Signature"`
	SignatureMethod  string                      `queryParam:"style=form,explode=true,name=SignatureMethod"`
	SignatureVersion string                      `queryParam:"style=form,explode=true,name=SignatureVersion"`
	Timestamp        string                      `queryParam:"style=form,explode=true,name=Timestamp"`
	Version          GETGETAttributesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETGETAttributesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
