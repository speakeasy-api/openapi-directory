<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VerificationParameters - Parameters needed to schedule a snapshot verification job.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VerificationParameters
{
    /**
     * Snapshot stored in the provided data location id will be verified. If not provided, we will use Rubrik cluster ID. Currently it only verifies Snapshot present Rubrik cluster.
     * 
     * 
     * 
     * @var ?string $locationIdOpt
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationIdOpt')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationIdOpt = null;
    
    /**
     * ID assigned to the object. This objectId will be used to fetch the associated object.
     * 
     * 
     * 
     * @var string $objectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectId;
    
    /**
     * The backup should be verified exactly once after the given timestamp. The date-time string should be in ISO8601 format, such as "2016-01-01T01:23:45.678". If not provided, it will default to "1970-01-01T00:00:00.000".
     * 
     * 
     * 
     * @var ?\DateTime $shouldVerifyAfterOpt
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldVerifyAfterOpt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $shouldVerifyAfterOpt = null;
    
    /**
     * ID assigned to a snapshot. This snapshotId will be used to fetch the associated snapshot. The scheduled job will verify this snapshot.
     * 
     * 
     * 
     * @var ?array<string> $snapshotIdsOpt
     */
	#[\JMS\Serializer\Annotation\SerializedName('snapshotIdsOpt')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $snapshotIdsOpt = null;
    
	public function __construct()
	{
		$this->locationIdOpt = null;
		$this->objectId = "";
		$this->shouldVerifyAfterOpt = null;
		$this->snapshotIdsOpt = null;
	}
}
