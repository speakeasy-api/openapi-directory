/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChildRolloutJobs } from "./childrolloutjobs";
import { DeploymentJobs } from "./deploymentjobs";
import { Expose, Type } from "class-transformer";

/**
 * Output only. Current state of the Phase.
 */
export enum PhaseStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Pending = "PENDING",
  InProgress = "IN_PROGRESS",
  Succeeded = "SUCCEEDED",
  Failed = "FAILED",
  Aborted = "ABORTED",
  Skipped = "SKIPPED",
}

/**
 * Phase represents a collection of jobs that are logically grouped together for a `Rollout`.
 */
export class Phase extends SpeakeasyBase {
  /**
   * ChildRollouts job composition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "childRolloutJobs" })
  @Type(() => ChildRolloutJobs)
  childRolloutJobs?: ChildRolloutJobs;

  /**
   * Deployment job composition.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deploymentJobs" })
  @Type(() => DeploymentJobs)
  deploymentJobs?: DeploymentJobs;

  /**
   * Output only. The ID of the Phase.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Output only. Additional information on why the Phase was skipped, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skipMessage" })
  skipMessage?: string;

  /**
   * Output only. Current state of the Phase.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: PhaseStateEnum;
}
