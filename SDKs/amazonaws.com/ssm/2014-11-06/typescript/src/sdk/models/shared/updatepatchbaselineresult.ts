/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OperatingSystemEnum } from "./operatingsystemenum";
import { PatchActionEnum } from "./patchactionenum";
import { PatchComplianceLevelEnum } from "./patchcompliancelevelenum";
import { PatchFilterGroup } from "./patchfiltergroup";
import { PatchRuleGroup } from "./patchrulegroup";
import { PatchSource } from "./patchsource";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class UpdatePatchBaselineResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApprovalRules" })
  @Type(() => PatchRuleGroup)
  approvalRules?: PatchRuleGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovedPatches" })
  approvedPatches?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovedPatchesComplianceLevel" })
  approvedPatchesComplianceLevel?: PatchComplianceLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ApprovedPatchesEnableNonSecurity" })
  approvedPatchesEnableNonSecurity?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "BaselineId" })
  baselineId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GlobalFilters" })
  @Type(() => PatchFilterGroup)
  globalFilters?: PatchFilterGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "ModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OperatingSystem" })
  operatingSystem?: OperatingSystemEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RejectedPatches" })
  rejectedPatches?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "RejectedPatchesAction" })
  rejectedPatchesAction?: PatchActionEnum;

  @SpeakeasyMetadata({ elemType: PatchSource })
  @Expose({ name: "Sources" })
  @Type(() => PatchSource)
  sources?: PatchSource[];
}
