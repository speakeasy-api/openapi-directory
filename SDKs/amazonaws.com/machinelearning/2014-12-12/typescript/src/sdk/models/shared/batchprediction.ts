/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EntityStatusEnum } from "./entitystatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * <p> Represents the output of a <code>GetBatchPrediction</code> operation.</p> <p> The content consists of the detailed metadata, the status, and the data file information of a <code>Batch Prediction</code>.</p>
 */
export class BatchPrediction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BatchPredictionDataSourceId" })
  batchPredictionDataSourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BatchPredictionId" })
  batchPredictionId?: string;

  /**
   * Long integer type that is a 64-bit signed number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ComputeTime" })
  computeTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedByIamUser" })
  createdByIamUser?: string;

  /**
   * A timestamp represented in epoch time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FinishedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  finishedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataLocationS3" })
  inputDataLocationS3?: string;

  /**
   * Long integer type that is a 64-bit signed number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvalidRecordCount" })
  invalidRecordCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MLModelId" })
  mlModelId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OutputUri" })
  outputUri?: string;

  /**
   * A timestamp represented in epoch time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: EntityStatusEnum;

  /**
   * Long integer type that is a 64-bit signed number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "TotalRecordCount" })
  totalRecordCount?: number;
}
