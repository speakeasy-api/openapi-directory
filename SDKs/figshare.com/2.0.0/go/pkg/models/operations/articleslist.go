// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ArticlesListOrderEnum - The field by which to order. Default varies by endpoint/resource.
type ArticlesListOrderEnum string

const (
	ArticlesListOrderEnumPublishedDate ArticlesListOrderEnum = "published_date"
	ArticlesListOrderEnumModifiedDate  ArticlesListOrderEnum = "modified_date"
	ArticlesListOrderEnumViews         ArticlesListOrderEnum = "views"
	ArticlesListOrderEnumShares        ArticlesListOrderEnum = "shares"
	ArticlesListOrderEnumDownloads     ArticlesListOrderEnum = "downloads"
	ArticlesListOrderEnumCites         ArticlesListOrderEnum = "cites"
)

func (e ArticlesListOrderEnum) ToPointer() *ArticlesListOrderEnum {
	return &e
}

func (e *ArticlesListOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "published_date":
		fallthrough
	case "modified_date":
		fallthrough
	case "views":
		fallthrough
	case "shares":
		fallthrough
	case "downloads":
		fallthrough
	case "cites":
		*e = ArticlesListOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ArticlesListOrderEnum: %v", v)
	}
}

// ArticlesListOrderDirectionEnum
type ArticlesListOrderDirectionEnum string

const (
	ArticlesListOrderDirectionEnumAsc  ArticlesListOrderDirectionEnum = "asc"
	ArticlesListOrderDirectionEnumDesc ArticlesListOrderDirectionEnum = "desc"
)

func (e ArticlesListOrderDirectionEnum) ToPointer() *ArticlesListOrderDirectionEnum {
	return &e
}

func (e *ArticlesListOrderDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ArticlesListOrderDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ArticlesListOrderDirectionEnum: %v", v)
	}
}

type ArticlesListRequest struct {
	// Unique hash used for bypassing the item retrieval limit of 9,000 entities. When using this parameter, please note that the offset parameter will not be available, but the limit parameter will still work as expected.
	XCursor *string `header:"style=simple,explode=false,name=X-Cursor"`
	// only return articles with this doi
	Doi *string `queryParam:"style=form,explode=true,name=doi"`
	// only return articles from this group
	Group *int64 `queryParam:"style=form,explode=true,name=group"`
	// only return articles with this handle
	Handle *string `queryParam:"style=form,explode=true,name=handle"`
	// only return articles from this institution
	Institution *int64 `queryParam:"style=form,explode=true,name=institution"`
	// Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model
	ItemType *int64 `queryParam:"style=form,explode=true,name=item_type"`
	// Number of results included on a page. Used for pagination with query
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	ModifiedSince *string `queryParam:"style=form,explode=true,name=modified_since"`
	// Where to start the listing(the offset of the first result). Used for pagination with limit
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// The field by which to order. Default varies by endpoint/resource.
	Order          *ArticlesListOrderEnum          `queryParam:"style=form,explode=true,name=order"`
	OrderDirection *ArticlesListOrderDirectionEnum `queryParam:"style=form,explode=true,name=order_direction"`
	// Page number. Used for pagination with page_size
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results included on a page. Used for pagination with page
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
	PublishedSince *string `queryParam:"style=form,explode=true,name=published_since"`
	// only return articles with this resource_doi
	ResourceDoi *string `queryParam:"style=form,explode=true,name=resource_doi"`
}

type ArticlesListResponse struct {
	// OK. An array of articles
	Articles    []shared.Article
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
}
