/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Contains the type of location this Location is for. Regional or Zonal.
 */
export enum LocationTypeEnum {
  LocationTypeUnspecified = "LOCATION_TYPE_UNSPECIFIED",
  Zone = "ZONE",
  Region = "REGION",
}

/**
 * Location returns the location name, and if the location is recommended for GKE cluster scheduling.
 */
export class Location extends SpeakeasyBase {
  /**
   * Contains the name of the resource requested. Specified in the format `projects/* /locations/*`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Whether the location is recommended for GKE cluster scheduling.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recommended" })
  recommended?: boolean;

  /**
   * Contains the type of location this Location is for. Regional or Zonal.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: LocationTypeEnum;
}
