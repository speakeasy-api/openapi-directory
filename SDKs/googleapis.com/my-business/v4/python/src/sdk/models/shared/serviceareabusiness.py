"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import places as shared_places
from ..shared import pointradius as shared_pointradius
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ServiceAreaBusinessBusinessTypeEnum(str, Enum):
    r"""Indicates the type of the service area business."""
    BUSINESS_TYPE_UNSPECIFIED = 'BUSINESS_TYPE_UNSPECIFIED'
    CUSTOMER_LOCATION_ONLY = 'CUSTOMER_LOCATION_ONLY'
    CUSTOMER_AND_BUSINESS_LOCATION = 'CUSTOMER_AND_BUSINESS_LOCATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ServiceAreaBusiness:
    r"""Service area businesses provide their service at the customer's location (for example, a locksmith or plumber)."""
    
    business_type: Optional[ServiceAreaBusinessBusinessTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessType'), 'exclude': lambda f: f is None }})
    r"""Indicates the type of the service area business."""  
    places: Optional[shared_places.Places] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('places'), 'exclude': lambda f: f is None }})
    r"""Defines the union of areas represented by a set of places."""  
    radius: Optional[shared_pointradius.PointRadius] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('radius'), 'exclude': lambda f: f is None }})
    r"""A radius around a particular point (latitude/longitude)."""  
    