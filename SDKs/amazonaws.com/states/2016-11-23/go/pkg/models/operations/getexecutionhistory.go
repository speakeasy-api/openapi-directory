// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetExecutionHistoryXAmzTargetEnum
type GetExecutionHistoryXAmzTargetEnum string

const (
	GetExecutionHistoryXAmzTargetEnumAwsStepFunctionsGetExecutionHistory GetExecutionHistoryXAmzTargetEnum = "AWSStepFunctions.GetExecutionHistory"
)

func (e GetExecutionHistoryXAmzTargetEnum) ToPointer() *GetExecutionHistoryXAmzTargetEnum {
	return &e
}

func (e *GetExecutionHistoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSStepFunctions.GetExecutionHistory":
		*e = GetExecutionHistoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetExecutionHistoryXAmzTargetEnum: %v", v)
	}
}

type GetExecutionHistoryRequest struct {
	GetExecutionHistoryInput shared.GetExecutionHistoryInput   `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               GetExecutionHistoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetExecutionHistoryResponse struct {
	ContentType string
	// ExecutionDoesNotExist
	ExecutionDoesNotExist interface{}
	// Success
	GetExecutionHistoryOutput *shared.GetExecutionHistoryOutput
	// InvalidArn
	InvalidArn interface{}
	// InvalidToken
	InvalidToken interface{}
	StatusCode   int
	RawResponse  *http.Response
}
