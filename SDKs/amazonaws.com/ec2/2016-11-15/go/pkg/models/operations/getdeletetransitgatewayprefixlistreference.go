// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteTransitGatewayPrefixListReferenceActionEnum
type GETDeleteTransitGatewayPrefixListReferenceActionEnum string

const (
	GETDeleteTransitGatewayPrefixListReferenceActionEnumDeleteTransitGatewayPrefixListReference GETDeleteTransitGatewayPrefixListReferenceActionEnum = "DeleteTransitGatewayPrefixListReference"
)

func (e GETDeleteTransitGatewayPrefixListReferenceActionEnum) ToPointer() *GETDeleteTransitGatewayPrefixListReferenceActionEnum {
	return &e
}

func (e *GETDeleteTransitGatewayPrefixListReferenceActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteTransitGatewayPrefixListReference":
		*e = GETDeleteTransitGatewayPrefixListReferenceActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayPrefixListReferenceActionEnum: %v", v)
	}
}

// GETDeleteTransitGatewayPrefixListReferenceVersionEnum
type GETDeleteTransitGatewayPrefixListReferenceVersionEnum string

const (
	GETDeleteTransitGatewayPrefixListReferenceVersionEnumTwoThousandAndSixteen1115 GETDeleteTransitGatewayPrefixListReferenceVersionEnum = "2016-11-15"
)

func (e GETDeleteTransitGatewayPrefixListReferenceVersionEnum) ToPointer() *GETDeleteTransitGatewayPrefixListReferenceVersionEnum {
	return &e
}

func (e *GETDeleteTransitGatewayPrefixListReferenceVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteTransitGatewayPrefixListReferenceVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayPrefixListReferenceVersionEnum: %v", v)
	}
}

type GETDeleteTransitGatewayPrefixListReferenceRequest struct {
	Action GETDeleteTransitGatewayPrefixListReferenceActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the prefix list.
	PrefixListID string `queryParam:"style=form,explode=true,name=PrefixListId"`
	// The ID of the route table.
	TransitGatewayRouteTableID string                                                `queryParam:"style=form,explode=true,name=TransitGatewayRouteTableId"`
	Version                    GETDeleteTransitGatewayPrefixListReferenceVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm              *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteTransitGatewayPrefixListReferenceResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
