/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PrepareTransactionRequestBodyVariationEnum {
  Gsb = "gsb",
  Erzeugung = "erzeugung",
  Eigenstrom = "eigenstrom",
  Co2 = "co2",
  Baeume = "baeume",
}

export class PrepareTransactionRequestBody extends SpeakeasyBase {
  /**
   * Stromkonto account address of sender
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  account?: string;

  /**
   * Signature per Stromkonto setting (might be simple email confirmation link)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signature" })
  signature?: string;

  /**
   * Stromkonto account address of reciever
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * Amount to transfer (in Watthours for electricity, or pcs for trees)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "variation" })
  variation?: PrepareTransactionRequestBodyVariationEnum;
}

export class PrepareTransactionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
