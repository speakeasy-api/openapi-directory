<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ContainersUsageInfoLimits
{
    /**
     * The number of containers that can be created in the space. If -1 is returned, then an unlimited number of containers can be created. The number however is counted towards and limited by the container memory. 
     * 
     * @var ?int $containers
     */
	#[\JMS\Serializer\Annotation\SerializedName('containers')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $containers = null;
    
    /**
     * The number of public IP addresses that can be allocated to the space.
     * 
     * @var ?int $floatingIps
     */
	#[\JMS\Serializer\Annotation\SerializedName('floating_ips')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $floatingIps = null;
    
    /**
     * The amount of container memory that can be used in the space in megabyte.
     * 
     * @var ?int $memoryMB
     */
	#[\JMS\Serializer\Annotation\SerializedName('memory_MB')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $memoryMB = null;
    
    /**
     * The number of virtual CPUs that are assigned to the space.
     * 
     * @var ?int $vcpu
     */
	#[\JMS\Serializer\Annotation\SerializedName('vcpu')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $vcpu = null;
    
	public function __construct()
	{
		$this->containers = null;
		$this->floatingIps = null;
		$this->memoryMB = null;
		$this->vcpu = null;
	}
}
