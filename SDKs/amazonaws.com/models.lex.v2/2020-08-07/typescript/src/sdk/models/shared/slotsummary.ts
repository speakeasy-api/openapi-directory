/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PromptSpecification } from "./promptspecification";
import { SlotConstraintEnum } from "./slotconstraintenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Summary information about a slot, a value that the bot elicits from the user.
 */
export class SlotSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "slotConstraint" })
  slotConstraint?: SlotConstraintEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "slotId" })
  slotId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slotName" })
  slotName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slotTypeId" })
  slotTypeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "valueElicitationPromptSpecification" })
  @Type(() => PromptSpecification)
  valueElicitationPromptSpecification?: PromptSpecification;
}
