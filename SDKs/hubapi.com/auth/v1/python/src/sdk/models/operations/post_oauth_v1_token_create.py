"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tokenresponseif as shared_tokenresponseif
from enum import Enum
from typing import Optional

class PostOauthV1TokenCreateRequestBodyGrantTypeEnum(str, Enum):
    AUTHORIZATION_CODE = 'authorization_code'
    REFRESH_TOKEN = 'refresh_token'


@dataclasses.dataclass
class PostOauthV1TokenCreateRequestBody:
    
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'client_id' }})  
    client_secret: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'client_secret' }})  
    code: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'code' }})  
    grant_type: Optional[PostOauthV1TokenCreateRequestBodyGrantTypeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'grant_type' }})  
    redirect_uri: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'redirect_uri' }})  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'refresh_token' }})  
    

@dataclasses.dataclass
class PostOauthV1TokenCreateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    token_response_if: Optional[shared_tokenresponseif.TokenResponseIF] = dataclasses.field(default=None)
    r"""successful operation"""  
    