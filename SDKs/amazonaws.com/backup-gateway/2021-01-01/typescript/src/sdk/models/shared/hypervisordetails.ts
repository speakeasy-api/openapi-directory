/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HypervisorStateEnum } from "./hypervisorstateenum";
import { SyncMetadataStatusEnum } from "./syncmetadatastatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * These are the details of the specified hypervisor. A hypervisor is hardware, software, or firmware that creates and manages virtual machines, and allocates resources to them.
 */
export class HypervisorDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Host" })
  host?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HypervisorArn" })
  hypervisorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyArn" })
  kmsKeyArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastSuccessfulMetadataSyncTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSuccessfulMetadataSyncTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestMetadataSyncStatus" })
  latestMetadataSyncStatus?: SyncMetadataStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LatestMetadataSyncStatusMessage" })
  latestMetadataSyncStatusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LogGroupArn" })
  logGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: HypervisorStateEnum;
}
