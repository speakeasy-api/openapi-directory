/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthTokenRestrictions } from "./authtokenrestrictions";
import { Expose, Type } from "class-transformer";

/**
 * General settings
 */
export class GeneralSettingsInfo extends SpeakeasyBase {
  /**
   * Auth token restrictions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authTokenRestrictions" })
  @Type(() => AuthTokenRestrictions)
  authTokenRestrictions?: AuthTokenRestrictions;

  /**
   * Activation status of client-side encryption.
   *
   * @remarks
   *
   * Can only be enabled once; disabling is not possible.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cryptoEnabled" })
  cryptoEnabled?: boolean;

  /**
   * Enable email notification button
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailNotificationButtonEnabled" })
  emailNotificationButtonEnabled?: boolean;

  /**
   * Each user has to confirm the EULA at first login.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "eulaEnabled" })
  eulaEnabled?: boolean;

  /**
   * &#128679; Deprecated since v4.42.0
   *
   * @remarks
   *
   * Defines if login fields should be hidden
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hideLoginInputFields" })
  hideLoginInputFields?: boolean;

  /**
   * &#128640; Since v4.10.0
   *
   * @remarks
   *
   * Homeroom Parent ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "homeRoomParentId" })
  homeRoomParentId?: number;

  /**
   * &#128640; Since v4.10.0
   *
   * @remarks
   *
   * Homerooms active
   */
  @SpeakeasyMetadata()
  @Expose({ name: "homeRoomsActive" })
  homeRoomsActive: boolean;

  /**
   * &#128679; Deprecated since v4.12.0
   *
   * @remarks
   *
   * Determines if the media server is enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mediaServerEnabled" })
  mediaServerEnabled?: boolean;

  /**
   * &#128640; Since v4.9.0
   *
   * @remarks
   *
   * Defines if S3 tags are enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "s3TagsEnabled" })
  s3TagsEnabled?: boolean;

  /**
   * Allow sending of share passwords via SMS
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sharePasswordSmsEnabled" })
  sharePasswordSmsEnabled?: boolean;

  /**
   * &#128640; Since v4.30.0
   *
   * @remarks
   *
   * Subscription Plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionPlan" })
  subscriptionPlan: number;

  /**
   * Defines if S3 is used as storage backend
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useS3Storage" })
  useS3Storage?: boolean;

  /**
   * &#128679; Deprecated since v4.14.0
   *
   * @remarks
   *
   * Allow weak password
   *
   * * A weak password has to fulfill the following criteria:
   *
   *    * is at least 8 characters long
   *
   *    * contains letters and numbers
   *
   * * A strong password has to fulfill the following criteria in addition:
   *
   *    * contains at least one special character
   *
   *    * contains upper and lower case characters
   *
   * Please use `GET /system/config/policies/passwords` API to get configured password policies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weakPasswordEnabled" })
  weakPasswordEnabled?: boolean;
}
