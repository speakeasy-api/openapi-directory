"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ChannelChannelTypeEnum(str, Enum):
    r"""Type of channel."""
    CHANNEL_TYPE_UNSPECIFIED = 'CHANNEL_TYPE_UNSPECIFIED'
    STABLE = 'STABLE'
    BETA = 'BETA'
    DEV = 'DEV'
    CANARY = 'CANARY'
    CANARY_ASAN = 'CANARY_ASAN'
    ALL = 'ALL'
    EXTENDED = 'EXTENDED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Channel:
    r"""Each Channel is owned by a Platform and owns a collection of versions. Possible Channels are listed in the Channel enum below. Not all Channels are available for every Platform (e.g. CANARY does not exist for LINUX)."""
    
    channel_type: Optional[ChannelChannelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelType'), 'exclude': lambda f: f is None }})
    r"""Type of channel."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Channel name. Format is \\"{product}/platforms/{platform}/channels/{channel}\\" """  
    