/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PredictImageUrlWithNoStoreRawRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Prediction-Key",
  })
  predictionKey: string;

  /**
   * An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated
   */
  @SpeakeasyMetadata({ data: "request, media_type=text/xml" })
  requestBody: Uint8Array;

  /**
   * Optional. Specifies the name of application using the endpoint
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=application",
  })
  application?: string;

  /**
   * Optional. Specifies the id of a particular iteration to evaluate against.
   *
   * @remarks
   *             The default iteration for the project will be used when not specified
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=iterationId",
  })
  iterationId?: string;

  /**
   * The project id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;
}

export class PredictImageUrlWithNoStoreRawResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  imagePrediction?: shared.ImagePrediction;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
