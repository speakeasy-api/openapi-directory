/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class MeetingLiveStreamUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Meeting live stream.
 */
export class MeetingLiveStreamUpdateApplicationJSON extends SpeakeasyBase {
  /**
   * The livestream page URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_url" })
  pageUrl?: string;

  /**
   * Stream name and key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stream_key" })
  streamKey: string;

  /**
   * Streaming URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stream_url" })
  streamUrl: string;
}

export class MeetingLiveStreamUpdateRequest extends SpeakeasyBase {
  /**
   * Meeting
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: MeetingLiveStreamUpdateApplicationJSON;

  /**
   * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
   *
   * @remarks
   *
   * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=meetingId",
  })
  meetingId: number;
}

export class MeetingLiveStreamUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
