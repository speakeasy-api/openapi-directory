"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import posten as shared_posten
from ..shared import rabatt as shared_rabatt
from ..shared import zahlung as shared_zahlung
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BelegdatenUnternehmenIDTypEnum(str, Enum):
    STEUERNUMMER = 'steuernummer'
    UID = 'uid'
    GLN = 'gln'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Belegdaten:
    r"""The `Beleg` to be signed by the \\"Signaturerstellungseinheit\\" and stored in the \\"Datenerfassungsprotokoll\\"."""
    
    externer_beleg_belegkreis: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Externer-Beleg-Belegkreis'), 'exclude': lambda f: f is None }})  
    externer_beleg_bezeichnung: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Externer-Beleg-Bezeichnung'), 'exclude': lambda f: f is None }})  
    externer_beleg_referenz: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Externer-Beleg-Referenz'), 'exclude': lambda f: f is None }})  
    kunde: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Kunde'), 'exclude': lambda f: f is None }})  
    notizen: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Notizen'), 'exclude': lambda f: f is None }})  
    posten: Optional[list[shared_posten.Posten]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Posten'), 'exclude': lambda f: f is None }})  
    rabatte: Optional[list[shared_rabatt.Rabatt]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Rabatte'), 'exclude': lambda f: f is None }})  
    storno: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Storno'), 'exclude': lambda f: f is None }})
    r"""Storno?"""  
    storno_beleg_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Storno-Beleg-UUID'), 'exclude': lambda f: f is None }})
    r"""The `Beleg-UUID` property of the `Beleg` to be cancelled"""  
    storno_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Storno-Text'), 'exclude': lambda f: f is None }})  
    training: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Training'), 'exclude': lambda f: f is None }})
    r"""Training?"""  
    unternehmen_adresse1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-Adresse1'), 'exclude': lambda f: f is None }})  
    unternehmen_adresse2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-Adresse2'), 'exclude': lambda f: f is None }})  
    unternehmen_fusszeile: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-Fusszeile'), 'exclude': lambda f: f is None }})  
    unternehmen_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-ID'), 'exclude': lambda f: f is None }})  
    unternehmen_id_typ: Optional[BelegdatenUnternehmenIDTypEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-ID-Typ'), 'exclude': lambda f: f is None }})  
    unternehmen_kopfzeile: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-Kopfzeile'), 'exclude': lambda f: f is None }})  
    unternehmen_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-Name'), 'exclude': lambda f: f is None }})  
    unternehmen_ort: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-Ort'), 'exclude': lambda f: f is None }})  
    unternehmen_plz: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unternehmen-PLZ'), 'exclude': lambda f: f is None }})  
    zahlungen: Optional[list[shared_zahlung.Zahlung]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Zahlungen'), 'exclude': lambda f: f is None }})  
    