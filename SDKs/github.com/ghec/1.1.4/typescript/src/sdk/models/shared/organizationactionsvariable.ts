/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Visibility of a variable
 */
export enum OrganizationActionsVariableVisibilityEnum {
  All = "all",
  Private = "private",
  Selected = "selected",
}

/**
 * Organization variable for GitHub Actions.
 */
export class OrganizationActionsVariable extends SpeakeasyBase {
  /**
   * The date and time at which the variable was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The name of the variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "selected_repositories_url" })
  selectedRepositoriesUrl?: string;

  /**
   * The date and time at which the variable was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * The value of the variable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;

  /**
   * Visibility of a variable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility: OrganizationActionsVariableVisibilityEnum;
}
