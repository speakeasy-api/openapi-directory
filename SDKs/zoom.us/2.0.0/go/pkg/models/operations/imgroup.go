// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type ImGroupRequest struct {
	// The group ID.<br>
	// Can be retrieved by calling [GET /groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups).
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
}

// ImGroup200ApplicationXMLTypeEnum - IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
type ImGroup200ApplicationXMLTypeEnum string

const (
	ImGroup200ApplicationXMLTypeEnumNormal     ImGroup200ApplicationXMLTypeEnum = "normal"
	ImGroup200ApplicationXMLTypeEnumShared     ImGroup200ApplicationXMLTypeEnum = "shared"
	ImGroup200ApplicationXMLTypeEnumRestricted ImGroup200ApplicationXMLTypeEnum = "restricted"
)

func (e *ImGroup200ApplicationXMLTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "normal":
		fallthrough
	case "shared":
		fallthrough
	case "restricted":
		*e = ImGroup200ApplicationXMLTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImGroup200ApplicationXMLTypeEnum: %s", s)
	}
}

// ImGroup200ApplicationXML - Group object.
type ImGroup200ApplicationXML struct {
	// Group ID.
	ID *string
	// Group name.
	Name *string
	// Members can search for others under same account.
	SearchByAccount *bool
	// Members can search for others in the same email domain.
	SearchByDomain *bool
	// Members can search for others under same master account - including all sub accounts.
	SearchByMaAccount *bool
	// Total number of members in this group.
	TotalMembers *int64
	// IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
	Type *ImGroup200ApplicationXMLTypeEnum
}

// ImGroup200ApplicationJSONTypeEnum - IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
type ImGroup200ApplicationJSONTypeEnum string

const (
	ImGroup200ApplicationJSONTypeEnumNormal     ImGroup200ApplicationJSONTypeEnum = "normal"
	ImGroup200ApplicationJSONTypeEnumShared     ImGroup200ApplicationJSONTypeEnum = "shared"
	ImGroup200ApplicationJSONTypeEnumRestricted ImGroup200ApplicationJSONTypeEnum = "restricted"
)

func (e *ImGroup200ApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "normal":
		fallthrough
	case "shared":
		fallthrough
	case "restricted":
		*e = ImGroup200ApplicationJSONTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImGroup200ApplicationJSONTypeEnum: %s", s)
	}
}

// ImGroup200ApplicationJSON - Group object.
type ImGroup200ApplicationJSON struct {
	// Group ID.
	ID *string `json:"id,omitempty"`
	// Group name.
	Name *string `json:"name,omitempty"`
	// Members can search for others under same account.
	SearchByAccount *bool `json:"search_by_account,omitempty"`
	// Members can search for others in the same email domain.
	SearchByDomain *bool `json:"search_by_domain,omitempty"`
	// Members can search for others under same master account - including all sub accounts.
	SearchByMaAccount *bool `json:"search_by_ma_account,omitempty"`
	// Total number of members in this group.
	TotalMembers *int64 `json:"total_members,omitempty"`
	// IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
	Type *ImGroup200ApplicationJSONTypeEnum `json:"type,omitempty"`
}

type ImGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` <br>
	// IM group object returned.<br>
	// **Error Code:** `200` <br>
	// Only available for paid account:{accountId}.
	ImGroup200ApplicationJSONObject *ImGroup200ApplicationJSON
}
