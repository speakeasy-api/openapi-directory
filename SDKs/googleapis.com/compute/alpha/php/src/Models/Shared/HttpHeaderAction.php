<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HttpHeaderAction - The request and response header transformations that take effect before the request is passed along to the selected backendService.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HttpHeaderAction
{
    /**
     * Headers to add to a matching request before forwarding the request to the backendService.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\HttpHeaderOption> $requestHeadersToAdd
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestHeadersToAdd')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HttpHeaderOption>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $requestHeadersToAdd = null;
    
    /**
     * A list of header names for headers that need to be removed from the request before forwarding the request to the backendService.
     * 
     * @var ?array<string> $requestHeadersToRemove
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestHeadersToRemove')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $requestHeadersToRemove = null;
    
    /**
     * Headers to add the response before sending the response back to the client.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\HttpHeaderOption> $responseHeadersToAdd
     */
	#[\JMS\Serializer\Annotation\SerializedName('responseHeadersToAdd')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\HttpHeaderOption>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $responseHeadersToAdd = null;
    
    /**
     * A list of header names for headers that need to be removed from the response before sending the response back to the client.
     * 
     * @var ?array<string> $responseHeadersToRemove
     */
	#[\JMS\Serializer\Annotation\SerializedName('responseHeadersToRemove')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $responseHeadersToRemove = null;
    
	public function __construct()
	{
		$this->requestHeadersToAdd = null;
		$this->requestHeadersToRemove = null;
		$this->responseHeadersToAdd = null;
		$this->responseHeadersToRemove = null;
	}
}
