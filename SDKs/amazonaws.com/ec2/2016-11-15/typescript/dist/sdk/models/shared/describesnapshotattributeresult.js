"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeSnapshotAttributeResult = exports.DescribeSnapshotAttributeResultProductCodes = exports.DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum = exports.DescribeSnapshotAttributeResultCreateVolumePermissions = exports.DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The group to be added or removed. The possible value is <code>all</code>.
 */
var DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum;
(function (DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum) {
    DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum["All"] = "all";
})(DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum = exports.DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum || (exports.DescribeSnapshotAttributeResultCreateVolumePermissionsGroupEnum = {}));
/**
 * Describes the user or group to be added or removed from the list of create volume permissions for a volume.
 */
var DescribeSnapshotAttributeResultCreateVolumePermissions = /** @class */ (function (_super) {
    __extends(DescribeSnapshotAttributeResultCreateVolumePermissions, _super);
    function DescribeSnapshotAttributeResultCreateVolumePermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSnapshotAttributeResultCreateVolumePermissions.prototype, "group", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSnapshotAttributeResultCreateVolumePermissions.prototype, "userId", void 0);
    return DescribeSnapshotAttributeResultCreateVolumePermissions;
}(utils_1.SpeakeasyBase));
exports.DescribeSnapshotAttributeResultCreateVolumePermissions = DescribeSnapshotAttributeResultCreateVolumePermissions;
/**
 * The type of product code.
 */
var DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum;
(function (DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum) {
    DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum["Devpay"] = "devpay";
    DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum["Marketplace"] = "marketplace";
})(DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum = exports.DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum || (exports.DescribeSnapshotAttributeResultProductCodesProductCodeTypeEnum = {}));
/**
 * Describes a product code.
 */
var DescribeSnapshotAttributeResultProductCodes = /** @class */ (function (_super) {
    __extends(DescribeSnapshotAttributeResultProductCodes, _super);
    function DescribeSnapshotAttributeResultProductCodes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSnapshotAttributeResultProductCodes.prototype, "productCodeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSnapshotAttributeResultProductCodes.prototype, "productCodeType", void 0);
    return DescribeSnapshotAttributeResultProductCodes;
}(utils_1.SpeakeasyBase));
exports.DescribeSnapshotAttributeResultProductCodes = DescribeSnapshotAttributeResultProductCodes;
/**
 * Success
 */
var DescribeSnapshotAttributeResult = /** @class */ (function (_super) {
    __extends(DescribeSnapshotAttributeResult, _super);
    function DescribeSnapshotAttributeResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSnapshotAttributeResultCreateVolumePermissions,
        }),
        __metadata("design:type", Array)
    ], DescribeSnapshotAttributeResult.prototype, "createVolumePermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeSnapshotAttributeResultProductCodes }),
        __metadata("design:type", Array)
    ], DescribeSnapshotAttributeResult.prototype, "productCodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSnapshotAttributeResult.prototype, "snapshotId", void 0);
    return DescribeSnapshotAttributeResult;
}(utils_1.SpeakeasyBase));
exports.DescribeSnapshotAttributeResult = DescribeSnapshotAttributeResult;
