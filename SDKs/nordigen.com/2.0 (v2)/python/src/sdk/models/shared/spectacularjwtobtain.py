"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpectacularJWTObtain:
    r"""Obtain new JWT pair."""
    
    access: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access'), 'exclude': lambda f: f is None }})
    r"""Your access token"""  
    access_expires: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_expires'), 'exclude': lambda f: f is None }})
    r"""Access token expires in seconds"""  
    refresh: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh'), 'exclude': lambda f: f is None }})
    r"""Your refresh token"""  
    refresh_expires: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh_expires'), 'exclude': lambda f: f is None }})
    r"""Refresh token expires in seconds"""  
    