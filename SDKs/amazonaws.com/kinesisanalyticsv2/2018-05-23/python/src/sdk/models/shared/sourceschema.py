"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import recordcolumn as shared_recordcolumn
from ..shared import recordformat as shared_recordformat
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceSchema:
    r"""For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream."""
    
    record_columns: list[shared_recordcolumn.RecordColumn] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordColumns') }})  
    record_format: shared_recordformat.RecordFormat = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordFormat') }})  
    record_encoding: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RecordEncoding'), 'exclude': lambda f: f is None }})  
    