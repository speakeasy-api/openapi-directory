// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorCodeEnum int64

const (
	ErrorCodeEnumOneThousand       ErrorCodeEnum = 1000
	ErrorCodeEnumTenThousandAndOne ErrorCodeEnum = 10001
)

func (e ErrorCodeEnum) ToPointer() *ErrorCodeEnum {
	return &e
}

func (e *ErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1000:
		fallthrough
	case 10001:
		*e = ErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCodeEnum: %v", v)
	}
}

type Error struct {
	Code    ErrorCodeEnum `json:"code"`
	Message string        `json:"message"`
}
