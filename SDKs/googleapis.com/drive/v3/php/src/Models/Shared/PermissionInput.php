<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PermissionInput - A permission for a file. A permission grants a user, group, domain, or the world access to a file or a folder hierarchy.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PermissionInput
{
    /**
     * Whether the permission allows the file to be discovered through search. This is only applicable for permissions of type domain or anyone.
     * 
     * @var ?bool $allowFileDiscovery
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowFileDiscovery')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowFileDiscovery = null;
    
    /**
     * Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * The "pretty" name of the value of the permission. The following is a list of examples for each type of permission:  
     * 
     * - user - User's full name, as defined for their Google Account, such as "Joe Smith." 
     * - group - Name of the Google Group, such as "The Company Administrators." 
     * - domain - String domain name, such as "your-company.com." 
     * - anyone - No displayName is present.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The domain to which this permission refers. The following options are currently allowed:  
     * 
     * - The entire domain, such as "your-company.com." 
     * - A target audience, such as "ID.audience.googledomains.com."
     * 
     * @var ?string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domain = null;
    
    /**
     * The email address of the user or group to which this permission refers.
     * 
     * @var ?string $emailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $emailAddress = null;
    
    /**
     * The time at which this permission will expire (RFC 3339 date-time). Expiration times have the following restrictions:  
     * 
     * - They cannot be set on shared drive items. 
     * - They can only be set on user and group permissions. 
     * - The time must be in the future. 
     * - The time cannot be more than one year in the future.
     * 
     * @var ?\DateTime $expirationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expirationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expirationTime = null;
    
    /**
     * The ID of this permission. This is a unique identifier for the grantee, and is published in User resources as permissionId. IDs should be treated as opaque values.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "drive#permission".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Whether the account associated with this permission is a pending owner. Only populated for user type permissions for files that aren't in a shared drive.
     * 
     * @var ?bool $pendingOwner
     */
	#[\JMS\Serializer\Annotation\SerializedName('pendingOwner')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $pendingOwner = null;
    
    /**
     * A link to the user's profile photo, if available.
     * 
     * @var ?string $photoLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('photoLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $photoLink = null;
    
    /**
     * The role granted by this permission. While new values may be supported in the future, the following are currently allowed:  
     * 
     * - owner 
     * - organizer 
     * - fileOrganizer 
     * - writer 
     * - commenter 
     * - reader
     * 
     * @var ?string $role
     */
	#[\JMS\Serializer\Annotation\SerializedName('role')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $role = null;
    
    /**
     * The type of the grantee. Valid values are:  
     * 
     * - user 
     * - group 
     * - domain 
     * - anyone  When creating a permission, if type is user or group, you must provide an emailAddress for the user or group. When type is domain, you must provide a domain. There isn't extra information required for the anyone type.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value.
     * 
     * @var ?string $view
     */
	#[\JMS\Serializer\Annotation\SerializedName('view')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $view = null;
    
	public function __construct()
	{
		$this->allowFileDiscovery = null;
		$this->deleted = null;
		$this->displayName = null;
		$this->domain = null;
		$this->emailAddress = null;
		$this->expirationTime = null;
		$this->id = null;
		$this->kind = null;
		$this->pendingOwner = null;
		$this->photoLink = null;
		$this->role = null;
		$this->type = null;
		$this->view = null;
	}
}
