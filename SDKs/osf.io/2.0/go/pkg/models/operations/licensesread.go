// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type LicensesReadPathParams struct {
	// The unique identifier of the license.
	LicenseID string `pathParam:"style=simple,explode=false,name=license_id"`
}

type LicensesReadRequest struct {
	PathParams LicensesReadPathParams
}

// LicensesReadLicenseAttributes - The properties of the license.
type LicensesReadLicenseAttributes struct {
	// Name of the license.
	Name *string
	// Fields required for this license (provided to help front-end validators). Maps to properties on the NodeLicense model.
	RequiredFields []string
	// Full text of the license.
	Text *string
}

// LicensesReadLicenseLinks - URLs to alternative representations of the license.
type LicensesReadLicenseLinks struct {
	// A link to the detail page for the license.
	Self *string
}

// LicensesReadLicense - OK
type LicensesReadLicense struct {
	// The properties of the license.
	Attributes *LicensesReadLicenseAttributes
	// The identifier of the license.
	ID *string
	// URLs to alternative representations of the license.
	Links *LicensesReadLicenseLinks
	// The type identifier of the license (`license`).
	Type *string
}

type LicensesReadResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
