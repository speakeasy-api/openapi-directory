"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AddAZRLocationSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddAZRLocationApplicationJSON:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the location. The name must be unique and shouldn't have already been used in the same account."""  
    parent_location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_location_id'), 'exclude': lambda f: f is None }})
    r"""The location ID of the location that is a level higher from the location that is being added.<br><br> For example, to add a City named \\"City 1\\" as the child location under a State named \\"State 1\\", you must provide the location ID of \\"State 1\\". This can be retrieved using the [List Zoom Room Locations](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) API."""  
    
class AddAZRLocation200ApplicationXMLTypeEnum(str, Enum):
    r"""Type of location. The value should be one of the following:<br>
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """
    COUNTRY = 'country'
    STATES = 'states'
    CITY = 'city'
    CAMPUS = 'campus'
    BUILDING = 'building'
    FLOOR = 'floor'


@dataclasses.dataclass
class AddAZRLocation200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Location added successfully.
    """
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Location ID: Unique Identifier of the location that was added."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the location."""  
    parent_location_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the parent location."""  
    type: Optional[AddAZRLocation200ApplicationXMLTypeEnum] = dataclasses.field(default=None)
    r"""Type of location. The value should be one of the following:<br>
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """  
    
class AddAZRLocation200ApplicationJSONTypeEnum(str, Enum):
    r"""Type of location. The value should be one of the following:<br>
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """
    COUNTRY = 'country'
    STATES = 'states'
    CITY = 'city'
    CAMPUS = 'campus'
    BUILDING = 'building'
    FLOOR = 'floor'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddAZRLocation200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Location added successfully.
    """
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Location ID: Unique Identifier of the location that was added."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the location."""  
    parent_location_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_location_id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the parent location."""  
    type: Optional[AddAZRLocation200ApplicationJSONTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of location. The value should be one of the following:<br>
    `country`, `states`, `city`, `campus`, `building`, `floor`.
    """  
    

@dataclasses.dataclass
class AddAZRLocationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    add_azr_location_200_application_json_object: Optional[AddAZRLocation200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Location added successfully.
    """  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    