// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ArtifactTypeEnum - Specifies the type of the artifact being added. Possible values include:
//
// * Avro (`AVRO`)
// * Protobuf (`PROTOBUF`)
// * JSON Schema (`JSON`)
// * Kafka Connect (`KCONNECT`)
// * OpenAPI (`OPENAPI`)
// * AsyncAPI (`ASYNCAPI`)
// * GraphQL (`GRAPHQL`)
// * Web Services Description Language (`WSDL`)
// * XML Schema (`XSD`)
type ArtifactTypeEnum string

const (
	ArtifactTypeEnumAvro     ArtifactTypeEnum = "AVRO"
	ArtifactTypeEnumProtobuf ArtifactTypeEnum = "PROTOBUF"
	ArtifactTypeEnumJSON     ArtifactTypeEnum = "JSON"
	ArtifactTypeEnumOpenapi  ArtifactTypeEnum = "OPENAPI"
	ArtifactTypeEnumAsyncapi ArtifactTypeEnum = "ASYNCAPI"
	ArtifactTypeEnumGraphql  ArtifactTypeEnum = "GRAPHQL"
	ArtifactTypeEnumKconnect ArtifactTypeEnum = "KCONNECT"
	ArtifactTypeEnumWsdl     ArtifactTypeEnum = "WSDL"
	ArtifactTypeEnumXsd      ArtifactTypeEnum = "XSD"
	ArtifactTypeEnumXML      ArtifactTypeEnum = "XML"
)

func (e *ArtifactTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AVRO":
		fallthrough
	case "PROTOBUF":
		fallthrough
	case "JSON":
		fallthrough
	case "OPENAPI":
		fallthrough
	case "ASYNCAPI":
		fallthrough
	case "GRAPHQL":
		fallthrough
	case "KCONNECT":
		fallthrough
	case "WSDL":
		fallthrough
	case "XSD":
		fallthrough
	case "XML":
		*e = ArtifactTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtifactTypeEnum: %s", s)
	}
}
