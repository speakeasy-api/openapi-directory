// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteSigningCertificateActionEnum
type GETDeleteSigningCertificateActionEnum string

const (
	GETDeleteSigningCertificateActionEnumDeleteSigningCertificate GETDeleteSigningCertificateActionEnum = "DeleteSigningCertificate"
)

func (e GETDeleteSigningCertificateActionEnum) ToPointer() *GETDeleteSigningCertificateActionEnum {
	return &e
}

func (e *GETDeleteSigningCertificateActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteSigningCertificate":
		*e = GETDeleteSigningCertificateActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSigningCertificateActionEnum: %v", v)
	}
}

// GETDeleteSigningCertificateVersionEnum
type GETDeleteSigningCertificateVersionEnum string

const (
	GETDeleteSigningCertificateVersionEnumTwoThousandAndTen0508 GETDeleteSigningCertificateVersionEnum = "2010-05-08"
)

func (e GETDeleteSigningCertificateVersionEnum) ToPointer() *GETDeleteSigningCertificateVersionEnum {
	return &e
}

func (e *GETDeleteSigningCertificateVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETDeleteSigningCertificateVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSigningCertificateVersionEnum: %v", v)
	}
}

type GETDeleteSigningCertificateRequest struct {
	Action GETDeleteSigningCertificateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The ID of the signing certificate to delete.</p> <p>The format of this parameter, as described by its <a href="http://wikipedia.org/wiki/regex">regex</a> pattern, is a string of characters that can be upper- or lower-cased letters or digits.</p>
	CertificateID string `queryParam:"style=form,explode=true,name=CertificateId"`
	// <p>The name of the user the signing certificate belongs to.</p> <p>This parameter allows (through its <a href="http://wikipedia.org/wiki/regex">regex pattern</a>) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@-</p>
	UserName          *string                                `queryParam:"style=form,explode=true,name=UserName"`
	Version           GETDeleteSigningCertificateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteSigningCertificateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
