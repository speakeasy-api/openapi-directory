// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteFirewallXAmzTargetEnum
type DeleteFirewallXAmzTargetEnum string

const (
	DeleteFirewallXAmzTargetEnumNetworkFirewall20201112DeleteFirewall DeleteFirewallXAmzTargetEnum = "NetworkFirewall_20201112.DeleteFirewall"
)

func (e *DeleteFirewallXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NetworkFirewall_20201112.DeleteFirewall":
		*e = DeleteFirewallXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteFirewallXAmzTargetEnum: %s", s)
	}
}

type DeleteFirewallRequest struct {
	DeleteFirewallRequest shared.DeleteFirewallRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteFirewallXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteFirewallResponse struct {
	ContentType string
	// Success
	DeleteFirewallResponse *shared.DeleteFirewallResponse
	// InternalServerError
	InternalServerError interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
