<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateTopicPostPMRequestBody
{
    /**
     * Required for new private message.
     * 
     * @var ?string $archetype
     */
	#[\JMS\Serializer\Annotation\SerializedName('archetype')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $archetype = null;
    
    /**
     * Optional if creating a new topic, and ignored if creating
     * 
     * a new post.
     * 
     * @var ?int $category
     */
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $category = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * Provide a URL from a remote system to associate a forum
     * 
     * topic with that URL, typically for using Discourse as a comments
     * system for an external blog.
     * 
     * @var ?string $embedUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('embed_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $embedUrl = null;
    
    /**
     * Provide an external_id from a remote system to associate
     * 
     * a forum topic with that id.
     * 
     * @var ?string $externalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('raw')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $raw;
    
    /**
     * Required for private message, comma separated.
     * 
     * @var ?string $targetRecipients
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_recipients')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetRecipients = null;
    
    /**
     * Deprecated. Use target_recipients instead.
     * 
     * @var ?string $targetUsernames
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_usernames')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetUsernames = null;
    
    /**
     * Required if creating a new topic or new private message.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Required if creating a new post.
     * 
     * @var ?int $topicId
     */
	#[\JMS\Serializer\Annotation\SerializedName('topic_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $topicId = null;
    
	public function __construct()
	{
		$this->archetype = null;
		$this->category = null;
		$this->createdAt = null;
		$this->embedUrl = null;
		$this->externalId = null;
		$this->raw = "";
		$this->targetRecipients = null;
		$this->targetUsernames = null;
		$this->title = null;
		$this->topicId = null;
	}
}
