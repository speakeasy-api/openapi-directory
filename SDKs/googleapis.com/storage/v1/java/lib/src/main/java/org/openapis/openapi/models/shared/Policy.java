/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Policy - A bucket/object IAM policy.
 */
public class Policy {
    /**
     * An association between a role, which comes with a set of permissions, and members who may assume that role.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bindings")
    public PolicyBindings[] bindings;

    public Policy withBindings(PolicyBindings[] bindings) {
        this.bindings = bindings;
        return this;
    }
    
    /**
     * HTTP 1.1  Entity tag for the policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Policy withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Policy withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceId")
    public String resourceId;

    public Policy withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    /**
     * The IAM policy format version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Integer version;

    public Policy withVersion(Integer version) {
        this.version = version;
        return this;
    }
    
    public Policy(){}
}
