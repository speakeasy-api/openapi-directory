"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import achdetails as shared_achdetails
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BankAccountPaymentDetails:
    r"""Additional details about BANK_ACCOUNT type payments."""
    
    account_ownership_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_ownership_type'), 'exclude': lambda f: f is None }})
    r"""The ownership type of the bank account performing the transfer.
    The type can be `INDIVIDUAL`, `COMPANY`, or `UNKNOWN`.
    """  
    ach_details: Optional[shared_achdetails.ACHDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ach_details'), 'exclude': lambda f: f is None }})
    r"""ACH-specific details about `BANK_ACCOUNT` type payments with the `transfer_type` of `ACH`."""  
    bank_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bank_name'), 'exclude': lambda f: f is None }})
    r"""The name of the bank associated with the bank account."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""The two-letter ISO code representing the country the bank account is located in."""  
    errors: Optional[list[shared_error.Error]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})
    r"""Information about errors encountered during the request."""  
    fingerprint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fingerprint'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the bank account for this seller and can be used
    to determine if payments are from the same bank account.
    """  
    statement_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statement_description'), 'exclude': lambda f: f is None }})
    r"""The statement description as sent to the bank."""  
    transfer_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transfer_type'), 'exclude': lambda f: f is None }})
    r"""The type of the bank transfer. The type can be `ACH` or `UNKNOWN`."""  
    