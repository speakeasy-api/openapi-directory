// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostOauthV1TokenCreateRequestBodyGrantTypeEnum string

const (
	PostOauthV1TokenCreateRequestBodyGrantTypeEnumAuthorizationCode PostOauthV1TokenCreateRequestBodyGrantTypeEnum = "authorization_code"
	PostOauthV1TokenCreateRequestBodyGrantTypeEnumRefreshToken      PostOauthV1TokenCreateRequestBodyGrantTypeEnum = "refresh_token"
)

func (e *PostOauthV1TokenCreateRequestBodyGrantTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "authorization_code":
		fallthrough
	case "refresh_token":
		*e = PostOauthV1TokenCreateRequestBodyGrantTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostOauthV1TokenCreateRequestBodyGrantTypeEnum: %s", s)
	}
}

type PostOauthV1TokenCreateRequestBody struct {
	ClientID     *string                                         `form:"name=client_id"`
	ClientSecret *string                                         `form:"name=client_secret"`
	Code         *string                                         `form:"name=code"`
	GrantType    *PostOauthV1TokenCreateRequestBodyGrantTypeEnum `form:"name=grant_type"`
	RedirectURI  *string                                         `form:"name=redirect_uri"`
	RefreshToken *string                                         `form:"name=refresh_token"`
}

type PostOauthV1TokenCreateRequest struct {
	Request *PostOauthV1TokenCreateRequestBody `request:"mediaType=application/x-www-form-urlencoded"`
}

type PostOauthV1TokenCreateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// successful operation
	TokenResponseIF *shared.TokenResponseIF
}
