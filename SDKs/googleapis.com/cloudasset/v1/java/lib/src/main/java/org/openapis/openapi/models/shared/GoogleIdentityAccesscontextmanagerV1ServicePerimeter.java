/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleIdentityAccesscontextmanagerV1ServicePerimeter - `ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project or VPC network can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.
 */
public class GoogleIdentityAccesscontextmanagerV1ServicePerimeter {
    /**
     * Description of the `ServicePerimeter` and its use. Does not affect behavior.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Resource name for the `ServicePerimeter`. Format: `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`. The `service_perimeter` component must begin with a letter, followed by alphanumeric characters or `_`. After you create a `ServicePerimeter`, you cannot change its `name`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Perimeter type indicator. A single project or VPC network is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, the restricted service list as well as access level lists must be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("perimeterType")
    public GoogleIdentityAccesscontextmanagerV1ServicePerimeterPerimeterTypeEnum perimeterType;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withPerimeterType(GoogleIdentityAccesscontextmanagerV1ServicePerimeterPerimeterTypeEnum perimeterType) {
        this.perimeterType = perimeterType;
        return this;
    }
    
    /**
     * `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spec")
    public GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig spec;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withSpec(GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig spec) {
        this.spec = spec;
        return this;
    }
    
    /**
     * `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig status;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withStatus(GoogleIdentityAccesscontextmanagerV1ServicePerimeterConfig status) {
        this.status = status;
        return this;
    }
    
    /**
     * Human readable title. Must be unique within the Policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Use explicit dry run spec flag. Ordinarily, a dry-run spec implicitly exists for all Service Perimeters, and that spec is identical to the status for those Service Perimeters. When this flag is set, it inhibits the generation of the implicit spec, thereby allowing the user to explicitly provide a configuration ("spec") to use in a dry-run version of the Service Perimeter. This allows the user to test changes to the enforced config ("status") without actually enforcing them. This testing is done through analyzing the differences between currently enforced and suggested restrictions. use_explicit_dry_run_spec must bet set to True if any of the fields in the spec are set to non-default values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useExplicitDryRunSpec")
    public Boolean useExplicitDryRunSpec;

    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter withUseExplicitDryRunSpec(Boolean useExplicitDryRunSpec) {
        this.useExplicitDryRunSpec = useExplicitDryRunSpec;
        return this;
    }
    
    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter(){}
}
