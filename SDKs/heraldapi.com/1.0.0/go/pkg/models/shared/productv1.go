// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProductV1ProductLineEnum - A product line is a major category of commercial insurance that exists across institutions.
type ProductV1ProductLineEnum string

const (
	ProductV1ProductLineEnumGeneralLiability     ProductV1ProductLineEnum = "general_liability"
	ProductV1ProductLineEnumWorkersCompensation  ProductV1ProductLineEnum = "workers_compensation"
	ProductV1ProductLineEnumBusinessOwnersPolicy ProductV1ProductLineEnum = "business_owners_policy"
)

func (e *ProductV1ProductLineEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "general_liability":
		fallthrough
	case "workers_compensation":
		fallthrough
	case "business_owners_policy":
		*e = ProductV1ProductLineEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductV1ProductLineEnum: %s", s)
	}
}

// ProductV1 - A [product](https://www.heraldapi.com/docs/products) refers to a specific type of insurance policy provided by an institution.
type ProductV1 struct {
	// `id` of a specific product.
	ID string `json:"id"`
	// ID of the associated institution
	InstitutionID string `json:"institution_id"`
	// The name of the product, defined by Herald.
	Name string `json:"name"`
	// A product line is a major category of commercial insurance that exists across institutions.
	ProductLine ProductV1ProductLineEnum `json:"product_line"`
}
