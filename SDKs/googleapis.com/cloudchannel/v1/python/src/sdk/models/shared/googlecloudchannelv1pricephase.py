"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudchannelv1price as shared_googlecloudchannelv1price
from ..shared import googlecloudchannelv1pricetier as shared_googlecloudchannelv1pricetier
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudChannelV1PricePhasePeriodTypeEnum(str, Enum):
    r"""Defines the phase period type."""
    PERIOD_TYPE_UNSPECIFIED = 'PERIOD_TYPE_UNSPECIFIED'
    DAY = 'DAY'
    MONTH = 'MONTH'
    YEAR = 'YEAR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1PricePhase:
    r"""Specifies the price by the duration of months. For example, a 20% discount for the first six months, then a 10% discount starting on the seventh month."""
    
    first_period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstPeriod'), 'exclude': lambda f: f is None }})
    r"""Defines first period for the phase."""  
    last_period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastPeriod'), 'exclude': lambda f: f is None }})
    r"""Defines first period for the phase."""  
    period_type: Optional[GoogleCloudChannelV1PricePhasePeriodTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('periodType'), 'exclude': lambda f: f is None }})
    r"""Defines the phase period type."""  
    price: Optional[shared_googlecloudchannelv1price.GoogleCloudChannelV1Price] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price'), 'exclude': lambda f: f is None }})
    r"""Represents the price of the Offer."""  
    price_tiers: Optional[list[shared_googlecloudchannelv1pricetier.GoogleCloudChannelV1PriceTier]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceTiers'), 'exclude': lambda f: f is None }})
    r"""Price by the resource tiers."""  
    