"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudretailv2alphamodelpageoptimizationconfigcandidate as shared_googlecloudretailv2alphamodelpageoptimizationconfigcandidate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRetailV2alphaModelPageOptimizationConfigPanel:
    r"""An individual panel with a list of ServingConfigs to consider for it."""
    
    candidates: Optional[list[shared_googlecloudretailv2alphamodelpageoptimizationconfigcandidate.GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('candidates'), 'exclude': lambda f: f is None }})
    r"""Required. The candidates to consider on the panel."""  
    default_candidate: Optional[shared_googlecloudretailv2alphamodelpageoptimizationconfigcandidate.GoogleCloudRetailV2alphaModelPageOptimizationConfigCandidate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultCandidate'), 'exclude': lambda f: f is None }})
    r"""A candidate to consider for a given panel. Currently only ServingConfig are valid candidates."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Optional. The name to display for the panel."""  
    