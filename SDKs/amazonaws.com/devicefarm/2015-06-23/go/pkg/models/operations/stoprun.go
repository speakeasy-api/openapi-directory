// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StopRunXAmzTargetEnum
type StopRunXAmzTargetEnum string

const (
	StopRunXAmzTargetEnumDeviceFarm20150623StopRun StopRunXAmzTargetEnum = "DeviceFarm_20150623.StopRun"
)

func (e *StopRunXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeviceFarm_20150623.StopRun":
		*e = StopRunXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StopRunXAmzTargetEnum: %s", s)
	}
}

type StopRunHeaders struct {
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StopRunXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StopRunRequest struct {
	Headers StopRunHeaders
	Request shared.StopRunRequest `request:"mediaType=application/json"`
}

type StopRunResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ServiceAccountException
	ServiceAccountException interface{}
	// Success
	StopRunResult *shared.StopRunResult
}
