<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PutApiDisplayAdsIdRequestBody
{
    /**
     * Ad must be both published and approved to be in rotation
     * 
     * @var ?bool $approved
     */
	#[\JMS\Serializer\Annotation\SerializedName('approved')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $approved = null;
    
    /**
     * The text (in markdown) of the ad (required)
     * 
     * @var string $bodyMarkdown
     */
	#[\JMS\Serializer\Annotation\SerializedName('body_markdown')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bodyMarkdown;
    
    /**
     * Identifies the user who created the ad.
     * 
     * @var ?int $creatorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('creator_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $creatorId = null;
    
    /**
     * Potentially limits visitors to whom the ad is visible
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PutApiDisplayAdsIdRequestBodyDisplayToEnum $displayTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('display_to')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PutApiDisplayAdsIdRequestBodyDisplayToEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PutApiDisplayAdsIdRequestBodyDisplayToEnum $displayTo = null;
    
    /**
     * For internal use, helps distinguish ads from one another
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Identifies the organization to which the ad belongs, required for 'community' type ads
     * 
     * @var ?int $organizationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $organizationId = null;
    
    /**
     * Identifies which area of site layout the ad can appear in
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PutApiDisplayAdsIdRequestBodyPlacementAreaEnum $placementArea
     */
	#[\JMS\Serializer\Annotation\SerializedName('placement_area')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PutApiDisplayAdsIdRequestBodyPlacementAreaEnum>')]
    public PutApiDisplayAdsIdRequestBodyPlacementAreaEnum $placementArea;
    
    /**
     * Ad must be both published and approved to be in rotation
     * 
     * @var ?bool $published
     */
	#[\JMS\Serializer\Annotation\SerializedName('published')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $published = null;
    
    /**
     * Tags on which this ad can be displayed (blank is all/any tags)
     * 
     * @var ?string $tagList
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag_list')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tagList = null;
    
	public function __construct()
	{
		$this->approved = null;
		$this->bodyMarkdown = "";
		$this->creatorId = null;
		$this->displayTo = null;
		$this->name = "";
		$this->organizationId = null;
		$this->placementArea = \OpenAPI\OpenAPI\Models\Operations\PutApiDisplayAdsIdRequestBodyPlacementAreaEnum::SIDEBAR_LEFT;
		$this->published = null;
		$this->tagList = null;
	}
}
