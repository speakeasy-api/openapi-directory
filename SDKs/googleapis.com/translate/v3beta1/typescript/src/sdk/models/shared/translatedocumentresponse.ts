/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DocumentTranslation } from "./documenttranslation";
import { TranslateTextGlossaryConfig } from "./translatetextglossaryconfig";
import { Expose, Type } from "class-transformer";

/**
 * A translated document response message.
 */
export class TranslateDocumentResponse extends SpeakeasyBase {
  /**
   * A translated document message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentTranslation" })
  @Type(() => DocumentTranslation)
  documentTranslation?: DocumentTranslation;

  /**
   * Configures which glossary should be used for a specific target language, and defines options for applying that glossary.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "glossaryConfig" })
  @Type(() => TranslateTextGlossaryConfig)
  glossaryConfig?: TranslateTextGlossaryConfig;

  /**
   * A translated document message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "glossaryDocumentTranslation" })
  @Type(() => DocumentTranslation)
  glossaryDocumentTranslation?: DocumentTranslation;

  /**
   * Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;
}
