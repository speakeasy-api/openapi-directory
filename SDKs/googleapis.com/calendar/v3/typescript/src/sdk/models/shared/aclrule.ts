/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The extent to which calendar access is granted by this ACL rule.
 */
export class AclRuleScope extends SpeakeasyBase {
  /**
   * The type of the scope. Possible values are:
   *
   * @remarks
   * - "default" - The public scope. This is the default value.
   * - "user" - Limits the scope to a single user.
   * - "group" - Limits the scope to a group.
   * - "domain" - Limits the scope to a domain.  Note: The permissions granted to the "default", or public, scope apply to any user, authenticated or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The email address of a user or group, or the name of a domain, depending on the scope type. Omitted for type "default".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Successful response
 */
export class AclRule extends SpeakeasyBase {
  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Identifier of the Access Control List (ACL) rule. See Sharing calendars.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Type of the resource ("calendar#aclRule").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The role assigned to the scope. Possible values are:
   *
   * @remarks
   * - "none" - Provides no access.
   * - "freeBusyReader" - Provides read access to free/busy information.
   * - "reader" - Provides read access to the calendar. Private events will appear to users with reader access, but event details will be hidden.
   * - "writer" - Provides read and write access to the calendar. Private events will appear to users with writer access, and event details will be visible.
   * - "owner" - Provides ownership of the calendar. This role has all of the permissions of the writer role with the additional ability to see and manipulate ACLs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;

  /**
   * The extent to which calendar access is granted by this ACL rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  @Type(() => AclRuleScope)
  scope?: AclRuleScope;
}
