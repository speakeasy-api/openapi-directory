// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AnalyzeSentimentRequestEncodingTypeEnum - The encoding type used by the API to calculate sentence offsets for the sentence sentiment.
type AnalyzeSentimentRequestEncodingTypeEnum string

const (
	AnalyzeSentimentRequestEncodingTypeEnumNone  AnalyzeSentimentRequestEncodingTypeEnum = "NONE"
	AnalyzeSentimentRequestEncodingTypeEnumUTF8  AnalyzeSentimentRequestEncodingTypeEnum = "UTF8"
	AnalyzeSentimentRequestEncodingTypeEnumUtf16 AnalyzeSentimentRequestEncodingTypeEnum = "UTF16"
	AnalyzeSentimentRequestEncodingTypeEnumUtf32 AnalyzeSentimentRequestEncodingTypeEnum = "UTF32"
)

func (e AnalyzeSentimentRequestEncodingTypeEnum) ToPointer() *AnalyzeSentimentRequestEncodingTypeEnum {
	return &e
}

func (e *AnalyzeSentimentRequestEncodingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "UTF8":
		fallthrough
	case "UTF16":
		fallthrough
	case "UTF32":
		*e = AnalyzeSentimentRequestEncodingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyzeSentimentRequestEncodingTypeEnum: %v", v)
	}
}

// AnalyzeSentimentRequest - The sentiment analysis request message.
type AnalyzeSentimentRequest struct {
	// Represents the input to API methods.
	Document *Document `json:"document,omitempty"`
	// The encoding type used by the API to calculate sentence offsets for the sentence sentiment.
	EncodingType *AnalyzeSentimentRequestEncodingTypeEnum `json:"encodingType,omitempty"`
}
