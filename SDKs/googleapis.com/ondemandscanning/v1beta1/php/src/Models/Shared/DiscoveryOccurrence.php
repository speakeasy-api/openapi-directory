<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DiscoveryOccurrence - Provides information about the analysis status of a discovered resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DiscoveryOccurrence
{
    /**
     * Indicates which analysis completed successfully. Multiple types of analysis can be performed on a single resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AnalysisCompleted $analysisCompleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('analysisCompleted')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AnalysisCompleted')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AnalysisCompleted $analysisCompleted = null;
    
    /**
     * Indicates any errors encountered during analysis of a resource. There could be 0 or more of these errors.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Status> $analysisError
     */
	#[\JMS\Serializer\Annotation\SerializedName('analysisError')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Status>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $analysisError = null;
    
    /**
     * The status of discovery for the resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiscoveryOccurrenceAnalysisStatusEnum $analysisStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('analysisStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DiscoveryOccurrenceAnalysisStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiscoveryOccurrenceAnalysisStatusEnum $analysisStatus = null;
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Status $analysisStatusError
     */
	#[\JMS\Serializer\Annotation\SerializedName('analysisStatusError')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Status')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Status $analysisStatusError = null;
    
    /**
     * Output only. The time occurrences related to this discovery occurrence were archived.
     * 
     * @var ?string $archiveTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('archiveTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $archiveTime = null;
    
    /**
     * Whether the resource is continuously analyzed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DiscoveryOccurrenceContinuousAnalysisEnum $continuousAnalysis
     */
	#[\JMS\Serializer\Annotation\SerializedName('continuousAnalysis')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DiscoveryOccurrenceContinuousAnalysisEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiscoveryOccurrenceContinuousAnalysisEnum $continuousAnalysis = null;
    
    /**
     * The CPE of the resource being scanned.
     * 
     * @var ?string $cpe
     */
	#[\JMS\Serializer\Annotation\SerializedName('cpe')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cpe = null;
    
    /**
     * The last time this resource was scanned.
     * 
     * @var ?string $lastScanTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastScanTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastScanTime = null;
    
	public function __construct()
	{
		$this->analysisCompleted = null;
		$this->analysisError = null;
		$this->analysisStatus = null;
		$this->analysisStatusError = null;
		$this->archiveTime = null;
		$this->continuousAnalysis = null;
		$this->cpe = null;
		$this->lastScanTime = null;
	}
}
