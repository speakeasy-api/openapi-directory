/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateGroupVersionRequestBody extends SpeakeasyBase {
  /**
   * The ARN of the connector definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ConnectorDefinitionVersionArn" })
  connectorDefinitionVersionArn?: string;

  /**
   * The ARN of the core definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CoreDefinitionVersionArn" })
  coreDefinitionVersionArn?: string;

  /**
   * The ARN of the device definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DeviceDefinitionVersionArn" })
  deviceDefinitionVersionArn?: string;

  /**
   * The ARN of the function definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FunctionDefinitionVersionArn" })
  functionDefinitionVersionArn?: string;

  /**
   * The ARN of the logger definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LoggerDefinitionVersionArn" })
  loggerDefinitionVersionArn?: string;

  /**
   * The ARN of the resource definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ResourceDefinitionVersionArn" })
  resourceDefinitionVersionArn?: string;

  /**
   * The ARN of the subscription definition version for this group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionDefinitionVersionArn" })
  subscriptionDefinitionVersionArn?: string;
}

export class CreateGroupVersionRequest extends SpeakeasyBase {
  /**
   * The ID of the Greengrass group.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=GroupId",
  })
  groupId: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateGroupVersionRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * A client token used to correlate requests and responses.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amzn-Client-Token",
  })
  xAmznClientToken?: string;
}

export class CreateGroupVersionResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createGroupVersionResponse?: shared.CreateGroupVersionResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
