// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhotoTypeEnum string

const (
	PhotoTypeEnumPhoto PhotoTypeEnum = "photo"
)

func (e *PhotoTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "photo":
		*e = PhotoTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhotoTypeEnum: %s", s)
	}
}

// Photo - This contains the list of the fields that are common to all media returned.
type Photo struct {
	// The height of the media in pixels
	Height int64 `json:"height"`
	// The Media Key identifier for this attachment.
	MediaKey string        `json:"media_key"`
	Type     PhotoTypeEnum `json:"type"`
	URL      *string       `json:"url,omitempty"`
	// The width of the media in pixels
	Width int64 `json:"width"`
}
