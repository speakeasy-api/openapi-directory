"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConversationsV1Configuration:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration."""  
    default_chat_service_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_chat_service_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation."""  
    default_closed_timer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_closed_timer'), 'exclude': lambda f: f is None }})
    r"""Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes."""  
    default_inactive_timer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_inactive_timer'), 'exclude': lambda f: f is None }})
    r"""Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute."""  
    default_messaging_service_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_messaging_service_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation."""  
    links: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})
    r"""Contains absolute API resource URLs to access the webhook and default service configurations."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""An absolute API resource URL for this global configuration."""  
    