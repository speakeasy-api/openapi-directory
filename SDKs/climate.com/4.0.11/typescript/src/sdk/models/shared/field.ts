/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Parent } from "./parent";
import { Expose, Type } from "class-transformer";

/**
 * Logical representation of a Field with a name.  Spatial attributes of the Field are provided in the Boundary.
 */
export class Field extends SpeakeasyBase {
  /**
   * Unique identifier for the current Field's Boundary.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boundaryId" })
  boundaryId: string;

  /**
   * Unique identifier for a Field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Name of the Field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * A minimal set of attributes regarding the parent of a farm organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => Parent)
  parent: Parent;

  /**
   * Unique identifier of the resource owner that owns the Field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceOwnerId" })
  resourceOwnerId: string;
}
