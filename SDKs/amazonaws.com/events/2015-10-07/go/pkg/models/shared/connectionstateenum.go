// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConnectionStateEnum string

const (
	ConnectionStateEnumCreating      ConnectionStateEnum = "CREATING"
	ConnectionStateEnumUpdating      ConnectionStateEnum = "UPDATING"
	ConnectionStateEnumDeleting      ConnectionStateEnum = "DELETING"
	ConnectionStateEnumAuthorized    ConnectionStateEnum = "AUTHORIZED"
	ConnectionStateEnumDeauthorized  ConnectionStateEnum = "DEAUTHORIZED"
	ConnectionStateEnumAuthorizing   ConnectionStateEnum = "AUTHORIZING"
	ConnectionStateEnumDeauthorizing ConnectionStateEnum = "DEAUTHORIZING"
)

func (e *ConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "AUTHORIZED":
		fallthrough
	case "DEAUTHORIZED":
		fallthrough
	case "AUTHORIZING":
		fallthrough
	case "DEAUTHORIZING":
		*e = ConnectionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConnectionStateEnum: %s", s)
	}
}
