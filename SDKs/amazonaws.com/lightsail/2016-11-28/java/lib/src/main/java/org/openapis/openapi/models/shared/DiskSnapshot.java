/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DiskSnapshot - Describes a block storage disk snapshot.
 */
public class DiskSnapshot {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public DiskSnapshot withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public DiskSnapshot withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromDiskArn")
    public String fromDiskArn;

    public DiskSnapshot withFromDiskArn(String fromDiskArn) {
        this.fromDiskArn = fromDiskArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromDiskName")
    public String fromDiskName;

    public DiskSnapshot withFromDiskName(String fromDiskName) {
        this.fromDiskName = fromDiskName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromInstanceArn")
    public String fromInstanceArn;

    public DiskSnapshot withFromInstanceArn(String fromInstanceArn) {
        this.fromInstanceArn = fromInstanceArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fromInstanceName")
    public String fromInstanceName;

    public DiskSnapshot withFromInstanceName(String fromInstanceName) {
        this.fromInstanceName = fromInstanceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isFromAutoSnapshot")
    public Boolean isFromAutoSnapshot;

    public DiskSnapshot withIsFromAutoSnapshot(Boolean isFromAutoSnapshot) {
        this.isFromAutoSnapshot = isFromAutoSnapshot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public ResourceLocation location;

    public DiskSnapshot withLocation(ResourceLocation location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DiskSnapshot withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("progress")
    public String progress;

    public DiskSnapshot withProgress(String progress) {
        this.progress = progress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceType")
    public ResourceTypeEnum resourceType;

    public DiskSnapshot withResourceType(ResourceTypeEnum resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sizeInGb")
    public Long sizeInGb;

    public DiskSnapshot withSizeInGb(Long sizeInGb) {
        this.sizeInGb = sizeInGb;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public DiskSnapshotStateEnum state;

    public DiskSnapshot withState(DiskSnapshotStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportCode")
    public String supportCode;

    public DiskSnapshot withSupportCode(String supportCode) {
        this.supportCode = supportCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public Tag[] tags;

    public DiskSnapshot withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    public DiskSnapshot(){}
}
