// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// GETDMTaxItemTypeNewFinanceInformation - Container for the finance information related to the taxation item.
type GETDMTaxItemTypeNewFinanceInformation struct {
	// The accounting code for the sales taxes payable.
	//
	SalesTaxPayableAccountingCode *string `json:"salesTaxPayableAccountingCode,omitempty"`
	// The type of the accounting code for the sales taxes payable.
	//
	SalesTaxPayableAccountingCodeType *string `json:"salesTaxPayableAccountingCodeType,omitempty"`
}

// GETDMTaxItemTypeNewTaxRateTypeEnum - The type of the tax rate.
type GETDMTaxItemTypeNewTaxRateTypeEnum string

const (
	GETDMTaxItemTypeNewTaxRateTypeEnumPercentage GETDMTaxItemTypeNewTaxRateTypeEnum = "Percentage"
	GETDMTaxItemTypeNewTaxRateTypeEnumFlatFee    GETDMTaxItemTypeNewTaxRateTypeEnum = "FlatFee"
)

func (e *GETDMTaxItemTypeNewTaxRateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Percentage":
		fallthrough
	case "FlatFee":
		*e = GETDMTaxItemTypeNewTaxRateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDMTaxItemTypeNewTaxRateTypeEnum: %s", s)
	}
}

// GETDMTaxItemTypeNew - Container for custom fields of a Debit Taxation Item object.
type GETDMTaxItemTypeNew struct {
	// The balance of the taxation item.
	//
	Balance *float64 `json:"balance,omitempty"`
	// The amount of credit memos applied to the debit memo.
	//
	CreditAmount *float64 `json:"creditAmount,omitempty"`
	// The amount of taxes or VAT for which the customer has an exemption.
	//
	ExemptAmount *float64 `json:"exemptAmount,omitempty"`
	// Container for the finance information related to the taxation item.
	//
	FinanceInformation *GETDMTaxItemTypeNewFinanceInformation `json:"financeInformation,omitempty"`
	// The ID of the taxation item.
	//
	ID *string `json:"id,omitempty"`
	// The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.
	//
	Jurisdiction *string `json:"jurisdiction,omitempty"`
	// The identifier for the location based on the value of the `taxCode` field.
	//
	LocationCode *string `json:"locationCode,omitempty"`
	// The name of the taxation item.
	//
	Name *string `json:"name,omitempty"`
	// The amount of payments applied to the debit memo.
	//
	PaymentAmount *float64 `json:"paymentAmount,omitempty"`
	// The ID of the source taxation item.
	//
	SourceTaxItemID *string `json:"sourceTaxItemId,omitempty"`
	// The amount of taxation.
	//
	TaxAmount *float64 `json:"taxAmount,omitempty"`
	// The tax code identifies which tax rules and tax rates to apply to a specific debit memo.
	//
	TaxCode *string `json:"taxCode,omitempty"`
	// The description of the tax code.
	//
	TaxCodeDescription *string `json:"taxCodeDescription,omitempty"`
	// The date that the tax is applied to the debit memo, in `yyyy-mm-dd` format.
	//
	TaxDate *types.Date `json:"taxDate,omitempty"`
	// The tax rate applied to the debit memo.
	//
	TaxRate *float64 `json:"taxRate,omitempty"`
	// The description of the tax rate.
	//
	TaxRateDescription *string `json:"taxRateDescription,omitempty"`
	// The type of the tax rate.
	//
	TaxRateType *GETDMTaxItemTypeNewTaxRateTypeEnum `json:"taxRateType,omitempty"`
}
