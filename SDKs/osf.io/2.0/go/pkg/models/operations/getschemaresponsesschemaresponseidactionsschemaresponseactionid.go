// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDRequest struct {
	// The unique identifier of the Schema Response Action example `61b9eae1a7d8ac025c4c46d3`.
	SchemaResponseActionID string `pathParam:"style=simple,explode=false,name=schema_response_action_id"`
	// The unique identifier of the Schema Response example `61b9cd62eb66180215222669`.
	SchemaResponseID string `pathParam:"style=simple,explode=false,name=schema_response_id"`
}

// GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum - The name of the state of the Schema Response prior to the creation of the action.
type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum string

const (
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnumInitial           GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum = "initial"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnumInProgress        GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum = "in_progress"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnumApproved          GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum = "approved"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnumPendingModeration GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum = "pending_moderation"
)

func (e *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initial":
		fallthrough
	case "in_progress":
		fallthrough
	case "approved":
		fallthrough
	case "pending_moderation":
		*e = GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum: %s", s)
	}
}

// GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum - The name of the state of the Schema Response after the creation of the action
type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum string

const (
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnumInProgress        GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum = "in_progress"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnumApproved          GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum = "approved"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnumPendingModeration GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum = "pending_moderation"
)

func (e *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "in_progress":
		fallthrough
	case "approved":
		fallthrough
	case "pending_moderation":
		*e = GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum: %s", s)
	}
}

// GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum - The name of the trigger that caused the action.
type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum string

const (
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnumSubmit          GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum = "submit"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnumApprove         GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum = "approve"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnumAccept          GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum = "accept"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnumAdminReject     GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum = "admin_reject"
	GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnumModeratorReject GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum = "moderator_reject"
)

func (e *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "submit":
		fallthrough
	case "approve":
		fallthrough
	case "accept":
		fallthrough
	case "admin_reject":
		fallthrough
	case "moderator_reject":
		*e = GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum: %s", s)
	}
}

type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributes struct {
	// Bool of representing whether a user created the action.
	Auto *bool
	// A comment made explaining the reasoning of the action.
	Comment *string
	// The date the action was created.
	DateCreated *string
	// The name of the state of the Schema Response prior to the creation of the action.
	FromState *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesFromStateEnum
	// The name of the state of the Schema Response after the creation of the action
	ToState *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesToStateEnum
	// The name of the trigger that caused the action.
	Trigger *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributesTriggerEnum
	// Bool of representing whether the action is visible.
	Visible *bool
}

// GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsLinks - URLs to alternative representations of the Registration Schema entity.
type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsLinks struct {
	// A link to the detail page for a Registration Schema.
	Self *string
}

// GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsRelationships - Links to other entities or entity collections that have a relationship to the Schema Response Action entity.
type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsRelationships struct {
	// A link to the node the file is on.
	Creator *string
	// A link to the node the file is on.
	Target *string
}

// GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActions - OK
type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActions struct {
	Attributes *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsAttributes
	// The unique identifier of the Schema Response Action.
	ID *string
	// URLs to alternative representations of the Registration Schema entity.
	Links *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsLinks
	// Links to other entities or entity collections that have a relationship to the Schema Response Action entity.
	Relationships *GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDSchemaResponseActionsRelationships
	// The type identifier of the Schema Response Action (`schema-response-actions`).
	Type *string
}

type GetSchemaResponsesSchemaResponseIDActionsSchemaResponseActionIDResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
