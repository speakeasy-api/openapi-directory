/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleFirestoreAdminV1DatabaseInput - A Cloud Firestore Database. Currently only one database is allowed per cloud project; this database must have a `database_id` of '(default)'.
 */
public class GoogleFirestoreAdminV1DatabaseInput {
    /**
     * The App Engine integration mode to use for this database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appEngineIntegrationMode")
    public GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum appEngineIntegrationMode;

    public GoogleFirestoreAdminV1DatabaseInput withAppEngineIntegrationMode(GoogleFirestoreAdminV1DatabaseAppEngineIntegrationModeEnum appEngineIntegrationMode) {
        this.appEngineIntegrationMode = appEngineIntegrationMode;
        return this;
    }
    
    /**
     * The concurrency control mode to use for this database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("concurrencyMode")
    public GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum concurrencyMode;

    public GoogleFirestoreAdminV1DatabaseInput withConcurrencyMode(GoogleFirestoreAdminV1DatabaseConcurrencyModeEnum concurrencyMode) {
        this.concurrencyMode = concurrencyMode;
        return this;
    }
    
    /**
     * State of delete protection for the database.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteProtectionState")
    public GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum deleteProtectionState;

    public GoogleFirestoreAdminV1DatabaseInput withDeleteProtectionState(GoogleFirestoreAdminV1DatabaseDeleteProtectionStateEnum deleteProtectionState) {
        this.deleteProtectionState = deleteProtectionState;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleFirestoreAdminV1DatabaseInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The location of the database. Available databases are listed at https://cloud.google.com/firestore/docs/locations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationId")
    public String locationId;

    public GoogleFirestoreAdminV1DatabaseInput withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The resource name of the Database. Format: `projects/{project}/databases/{database}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleFirestoreAdminV1DatabaseInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The type of the database. See https://cloud.google.com/datastore/docs/firestore-or-datastore for information about how to choose.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GoogleFirestoreAdminV1DatabaseTypeEnum type;

    public GoogleFirestoreAdminV1DatabaseInput withType(GoogleFirestoreAdminV1DatabaseTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public GoogleFirestoreAdminV1DatabaseInput(){}
}
