/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Atm } from "./atm";
import { Bca } from "./bca";
import { Branch } from "./branch";
import { Ccc } from "./ccc";
import { Pca } from "./pca";
import { Sme } from "./sme";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = [
  "https://developer.openbanking.org.uk/reference-implementation/open-banking/v1.3",
] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * Latest Swagger specification for OpenData
 */
export class SDK {
  /**
   * Endpoint for getting ATM data
   */
  public atm: Atm;
  /**
   * Endpoint for getting Business Current Account data
   */
  public bca: Bca;
  /**
   * Endpoint for getting Branch data
   */
  public branch: Branch;
  /**
   * Endpoint for getting Commercial Credit Card data
   */
  public ccc: Ccc;
  /**
   * Endpoint for getting Personal Current Account data
   */
  public pca: Pca;
  /**
   * Endpoint for getting Unsecured SME Loan data
   */
  public sme: Sme;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.atm = new Atm(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bca = new Bca(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.branch = new Branch(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.ccc = new Ccc(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.pca = new Pca(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.sme = new Sme(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
