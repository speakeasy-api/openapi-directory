// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteApprovalRuleTemplateXAmzTargetEnum
type DeleteApprovalRuleTemplateXAmzTargetEnum string

const (
	DeleteApprovalRuleTemplateXAmzTargetEnumCodeCommit20150413DeleteApprovalRuleTemplate DeleteApprovalRuleTemplateXAmzTargetEnum = "CodeCommit_20150413.DeleteApprovalRuleTemplate"
)

func (e *DeleteApprovalRuleTemplateXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodeCommit_20150413.DeleteApprovalRuleTemplate":
		*e = DeleteApprovalRuleTemplateXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteApprovalRuleTemplateXAmzTargetEnum: %s", s)
	}
}

type DeleteApprovalRuleTemplateRequest struct {
	DeleteApprovalRuleTemplateInput shared.DeleteApprovalRuleTemplateInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      DeleteApprovalRuleTemplateXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteApprovalRuleTemplateResponse struct {
	// ApprovalRuleTemplateInUseException
	ApprovalRuleTemplateInUseException interface{}
	// ApprovalRuleTemplateNameRequiredException
	ApprovalRuleTemplateNameRequiredException interface{}
	ContentType                               string
	// Success
	DeleteApprovalRuleTemplateOutput *shared.DeleteApprovalRuleTemplateOutput
	// InvalidApprovalRuleTemplateNameException
	InvalidApprovalRuleTemplateNameException interface{}
	StatusCode                               int
	RawResponse                              *http.Response
}
