// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodeAssociationStatusEnum - <p>The status of the association or disassociation request. </p> <p class="title"> <b>Possible values:</b> </p> <ul> <li> <p> <code>SUCCESS</code>: The association or disassociation succeeded. </p> </li> <li> <p> <code>FAILED</code>: The association or disassociation failed. </p> </li> <li> <p> <code>IN_PROGRESS</code>: The association or disassociation is still in progress. </p> </li> </ul>
type NodeAssociationStatusEnum string

const (
	NodeAssociationStatusEnumSuccess    NodeAssociationStatusEnum = "SUCCESS"
	NodeAssociationStatusEnumFailed     NodeAssociationStatusEnum = "FAILED"
	NodeAssociationStatusEnumInProgress NodeAssociationStatusEnum = "IN_PROGRESS"
)

func (e *NodeAssociationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUCCESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "IN_PROGRESS":
		*e = NodeAssociationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeAssociationStatusEnum: %s", s)
	}
}
