/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * A distribution configuration.
 */
export class CreateDistribution20200531RequestBodyDistributionConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  aliases?: shared.Aliases;

  @SpeakeasyMetadata()
  cacheBehaviors?: shared.CacheBehaviors;

  @SpeakeasyMetadata()
  callerReference?: string;

  @SpeakeasyMetadata()
  comment?: string;

  @SpeakeasyMetadata()
  continuousDeploymentPolicyId?: string;

  @SpeakeasyMetadata()
  customErrorResponses?: shared.CustomErrorResponses;

  @SpeakeasyMetadata()
  defaultCacheBehavior?: shared.DefaultCacheBehavior;

  @SpeakeasyMetadata()
  defaultRootObject?: string;

  @SpeakeasyMetadata()
  enabled?: boolean;

  @SpeakeasyMetadata()
  httpVersion?: shared.HttpVersionEnum;

  @SpeakeasyMetadata()
  isIpv6Enabled?: boolean;

  @SpeakeasyMetadata()
  logging?: shared.LoggingConfig;

  @SpeakeasyMetadata()
  originGroups?: shared.OriginGroups;

  @SpeakeasyMetadata()
  origins?: shared.Origins;

  @SpeakeasyMetadata()
  priceClass?: shared.PriceClassEnum;

  @SpeakeasyMetadata()
  restrictions?: shared.Restrictions;

  @SpeakeasyMetadata()
  staging?: boolean;

  @SpeakeasyMetadata()
  viewerCertificate?: shared.ViewerCertificate;

  @SpeakeasyMetadata()
  webACLId?: string;
}

export class CreateDistribution20200531RequestBody extends SpeakeasyBase {
  /**
   * A distribution configuration.
   */
  @SpeakeasyMetadata()
  distributionConfig: CreateDistribution20200531RequestBodyDistributionConfig;
}

export class CreateDistribution20200531Request extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=text/xml" })
  requestBody: Uint8Array;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateDistribution20200531Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
