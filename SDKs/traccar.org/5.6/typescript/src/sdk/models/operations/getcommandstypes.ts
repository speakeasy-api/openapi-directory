/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetCommandsTypesRequest extends SpeakeasyBase {
  /**
   * Internal device identifier. Only works if device has already reported some locations
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=deviceId",
  })
  deviceId?: number;

  /**
   * Protocol name. Can be used instead of device id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=protocol",
  })
  protocol?: string;

  /**
   * When `true` return SMS commands. If not specified or `false` return data commands
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=textChannel",
  })
  textChannel?: boolean;
}

export class GetCommandsTypesResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.CommandType })
  commandTypes?: shared.CommandType[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
