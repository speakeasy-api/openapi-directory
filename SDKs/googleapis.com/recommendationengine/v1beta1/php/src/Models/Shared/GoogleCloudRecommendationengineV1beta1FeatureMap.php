<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRecommendationengineV1beta1FeatureMap - FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRecommendationengineV1beta1FeatureMap
{
    /**
     * Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ "colors": {"value": ["yellow", "green"]}, "sizes": {"value":["S", "M"]}`
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommendationengineV1beta1FeatureMapStringList> $categoricalFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('categoricalFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommendationengineV1beta1FeatureMapStringList>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $categoricalFeatures = null;
    
    /**
     * Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ "lengths_cm": {"value":[2.3, 15.4]}, "heights_cm": {"value":[8.1, 6.4]} }`
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommendationengineV1beta1FeatureMapFloatList> $numericalFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('numericalFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\GoogleCloudRecommendationengineV1beta1FeatureMapFloatList>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $numericalFeatures = null;
    
	public function __construct()
	{
		$this->categoricalFeatures = null;
		$this->numericalFeatures = null;
	}
}
