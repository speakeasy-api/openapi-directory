/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The interval for the metric. Required if `metric` is `count` or `volume`.
 */
export enum CreateALimitParametersIntervalEnum {
  Transaction = "transaction",
  Day = "day",
  Week = "week",
  Month = "month",
  Year = "year",
  AllTime = "all_time",
}

/**
 * The metric for the limit.
 */
export enum CreateALimitParametersMetricEnum {
  Count = "count",
  Volume = "volume",
}

export class CreateALimitParameters extends SpeakeasyBase {
  /**
   * The interval for the metric. Required if `metric` is `count` or `volume`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interval" })
  interval?: CreateALimitParametersIntervalEnum;

  /**
   * The metric for the limit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metric" })
  metric: CreateALimitParametersMetricEnum;

  /**
   * The identifier of the Account or Account Number you wish to associate the limit with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model_id" })
  modelId: string;

  /**
   * The value to test the limit against.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}
