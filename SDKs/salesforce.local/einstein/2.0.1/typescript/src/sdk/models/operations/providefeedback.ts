/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ProvideFeedbackSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerToken: string;
}

export class ProvideFeedbackRequestBody extends SpeakeasyBase {
  /**
   * Intent or sentiment string to add to the dataset.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=document" })
  document?: string;

  /**
   * Correct label for the example. Must be a label that exists in the dataset.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=expectedLabel" })
  expectedLabel?: string;

  /**
   * ID of the model that misclassified the image. The feedback example is added to the dataset associated with this model.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=modelId" })
  modelId?: string;

  /**
   * Name of the example. Optional. Maximum length is 180 characters.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=name" })
  name?: string;
}

export class ProvideFeedbackResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Upload success
   */
  @SpeakeasyMetadata()
  example?: shared.Example;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
