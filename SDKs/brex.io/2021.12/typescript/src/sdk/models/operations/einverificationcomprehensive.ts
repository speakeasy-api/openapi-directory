/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class EinVerificationComprehensiveSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=user_key",
  })
  userKey: string;
}

export class EinVerificationComprehensiveRequest extends SpeakeasyBase {
  /**
   * Nine letter EIN number with or without hyphens
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ein" })
  ein: string;
}

/**
 * Detailed information about the error
 */
export class EinVerificationComprehensiveDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fault" })
  fault?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tag" })
  tag: string;
}

/**
 * Result of a comprehensive EIN number verification
 */
export class EinVerificationComprehensive200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ein" })
  ein: string;

  @SpeakeasyMetadata({
    elemType:
      shared.Oneapi1v11einVerification1lookupGetResponses200ContentApplication1jsonSchemaPropertiesMatchedEinCompanies,
  })
  @Expose({ name: "matched_ein_companies" })
  @Type(
    () =>
      shared.Oneapi1v11einVerification1lookupGetResponses200ContentApplication1jsonSchemaPropertiesMatchedEinCompanies
  )
  matchedEinCompanies: shared.Oneapi1v11einVerification1lookupGetResponses200ContentApplication1jsonSchemaPropertiesMatchedEinCompanies[];

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: number;

  @SpeakeasyMetadata()
  @Expose({ name: "validationStatus" })
  validationStatus: boolean;
}

export class EinVerificationComprehensiveResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Result of a comprehensive EIN number verification
   */
  @SpeakeasyMetadata()
  einVerificationComprehensive200ApplicationJSONObject?: EinVerificationComprehensive200ApplicationJSON;

  /**
   * Detailed information about the error
   */
  @SpeakeasyMetadata()
  einVerificationComprehensiveDefaultApplicationJSONObject?: EinVerificationComprehensiveDefaultApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
