/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateCategoryRequestBody {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_badges")
    public Boolean allowBadges;
    public CreateCategoryRequestBody withAllowBadges(Boolean allowBadges) {
        this.allowBadges = allowBadges;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public String color;
    public CreateCategoryRequestBody withColor(String color) {
        this.color = color;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("form_template_ids")
    public Object[] formTemplateIds;
    public CreateCategoryRequestBody withFormTemplateIds(Object[] formTemplateIds) {
        this.formTemplateIds = formTemplateIds;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public CreateCategoryRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent_category_id")
    public Long parentCategoryId;
    public CreateCategoryRequestBody withParentCategoryId(Long parentCategoryId) {
        this.parentCategoryId = parentCategoryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public java.util.Map<String, Object> permissions;
    public CreateCategoryRequestBody withPermissions(java.util.Map<String, Object> permissions) {
        this.permissions = permissions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("search_priority")
    public Long searchPriority;
    public CreateCategoryRequestBody withSearchPriority(Long searchPriority) {
        this.searchPriority = searchPriority;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slug")
    public String slug;
    public CreateCategoryRequestBody withSlug(String slug) {
        this.slug = slug;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text_color")
    public String textColor;
    public CreateCategoryRequestBody withTextColor(String textColor) {
        this.textColor = textColor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic_featured_links_allowed")
    public Boolean topicFeaturedLinksAllowed;
    public CreateCategoryRequestBody withTopicFeaturedLinksAllowed(Boolean topicFeaturedLinksAllowed) {
        this.topicFeaturedLinksAllowed = topicFeaturedLinksAllowed;
        return this;
    }
    
}
