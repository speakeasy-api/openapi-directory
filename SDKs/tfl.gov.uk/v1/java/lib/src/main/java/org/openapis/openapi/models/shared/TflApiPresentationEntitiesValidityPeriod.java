/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TflApiPresentationEntitiesValidityPeriod - Represents a period for which a planned works is valid.
 */
public class TflApiPresentationEntitiesValidityPeriod {
    /**
     * Gets or sets the start date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fromDate")
    public OffsetDateTime fromDate;

    public TflApiPresentationEntitiesValidityPeriod withFromDate(OffsetDateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }
    
    /**
     * If true is a realtime status rather than planned or info
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isNow")
    public Boolean isNow;

    public TflApiPresentationEntitiesValidityPeriod withIsNow(Boolean isNow) {
        this.isNow = isNow;
        return this;
    }
    
    /**
     * Gets or sets the end date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("toDate")
    public OffsetDateTime toDate;

    public TflApiPresentationEntitiesValidityPeriod withToDate(OffsetDateTime toDate) {
        this.toDate = toDate;
        return this;
    }
    
    public TflApiPresentationEntitiesValidityPeriod(){}
}
