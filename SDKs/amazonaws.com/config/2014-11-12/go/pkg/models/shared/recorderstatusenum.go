// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecorderStatusEnum string

const (
	RecorderStatusEnumPending RecorderStatusEnum = "Pending"
	RecorderStatusEnumSuccess RecorderStatusEnum = "Success"
	RecorderStatusEnumFailure RecorderStatusEnum = "Failure"
)

func (e RecorderStatusEnum) ToPointer() *RecorderStatusEnum {
	return &e
}

func (e *RecorderStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "Success":
		fallthrough
	case "Failure":
		*e = RecorderStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecorderStatusEnum: %v", v)
	}
}
