"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudintegrationsv1alphacoordinate as shared_googlecloudintegrationsv1alphacoordinate
from ..shared import googlecloudintegrationsv1alphanexttask as shared_googlecloudintegrationsv1alphanexttask
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaErrorCatcherConfig:
    r"""Configuration detail of a error catch task"""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. User-provided description intended to give more business context about the error catcher config."""  
    error_catcher_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCatcherId'), 'exclude': lambda f: f is None }})
    r"""Required. An error catcher id is string representation for the error catcher config. Within a workflow, error_catcher_id uniquely identifies an error catcher config among all error catcher configs for the workflow"""  
    error_catcher_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCatcherNumber'), 'exclude': lambda f: f is None }})
    r"""Required. A number to uniquely identify each error catcher config within the workflow on UI."""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""Optional. The user created label for a particular error catcher. Optional."""  
    position: Optional[shared_googlecloudintegrationsv1alphacoordinate.GoogleCloudIntegrationsV1alphaCoordinate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('position'), 'exclude': lambda f: f is None }})
    r"""Configuration detail of coordinate, it used for UI"""  
    start_error_tasks: Optional[list[shared_googlecloudintegrationsv1alphanexttask.GoogleCloudIntegrationsV1alphaNextTask]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startErrorTasks'), 'exclude': lambda f: f is None }})
    r"""Required. The set of start tasks that are to be executed for the error catch flow"""  
    