/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition } from "./destinydefinitionscommondestinydisplaypropertiesdefinition";
import { DestinyDefinitionsPresentationDestinyPresentationChildBlock } from "./destinydefinitionspresentationdestinypresentationchildblock";
import { DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock } from "./destinydefinitionspresentationdestinypresentationnoderequirementsblock";
import { DestinyDefinitionsRecordsDestinyRecordCompletionBlock } from "./destinydefinitionsrecordsdestinyrecordcompletionblock";
import { DestinyDefinitionsRecordsDestinyRecordExpirationBlock } from "./destinydefinitionsrecordsdestinyrecordexpirationblock";
import { DestinyDefinitionsRecordsDestinyRecordIntervalObjective } from "./destinydefinitionsrecordsdestinyrecordintervalobjective";
import { DestinyDefinitionsRecordsDestinyRecordIntervalRewards } from "./destinydefinitionsrecordsdestinyrecordintervalrewards";
import { DestinyDefinitionsRecordsDestinyRecordTitleBlock } from "./destinydefinitionsrecordsdestinyrecordtitleblock";
import { DestinyDefinitionsRecordsSchemaRecordStateBlock } from "./destinydefinitionsrecordsschemarecordstateblock";
import { DestinyDestinyItemQuantity } from "./destinydestinyitemquantity";

/**
 * Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval
 */
export class DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DestinyDefinitionsRecordsDestinyRecordIntervalObjective,
  })
  intervalObjectives?: DestinyDefinitionsRecordsDestinyRecordIntervalObjective[];

  @SpeakeasyMetadata({
    elemType: DestinyDefinitionsRecordsDestinyRecordIntervalRewards,
  })
  intervalRewards?: DestinyDefinitionsRecordsDestinyRecordIntervalRewards[];

  @SpeakeasyMetadata()
  originalObjectiveArrayInsertionIndex?: number;
}

export class DestinyDefinitionsRecordsDestinyRecordDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  completionInfo?: DestinyDefinitionsRecordsDestinyRecordCompletionBlock;

  /**
   * Many Destiny*Definition contracts - the "first order" entities of Destiny that have their own tables in the Manifest Database - also have displayable information. This is the base class for that display information.
   */
  @SpeakeasyMetadata()
  displayProperties?: DestinyDefinitionsCommonDestinyDisplayPropertiesDefinition;

  /**
   * If this record has an expiration after which it cannot be earned, this is some information about that expiration.
   */
  @SpeakeasyMetadata()
  expirationInfo?: DestinyDefinitionsRecordsDestinyRecordExpirationBlock;

  @SpeakeasyMetadata()
  forTitleGilding?: boolean;

  /**
   * The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
   *
   * @remarks
   * When entities refer to each other in Destiny content, it is this hash that they are referring to.
   */
  @SpeakeasyMetadata()
  hash?: number;

  /**
   * The index of the entity as it was found in the investment tables.
   */
  @SpeakeasyMetadata()
  index?: number;

  /**
   * Some records have multiple 'interval' objectives, and the record may be claimed at each completed interval
   */
  @SpeakeasyMetadata()
  intervalInfo?: DestinyDefinitionsRecordsDestinyRecordDefinitionIntervalInfo;

  @SpeakeasyMetadata()
  loreHash?: number;

  @SpeakeasyMetadata()
  objectiveHashes?: number[];

  /**
   * A quick reference to presentation nodes that have this node as a child. Presentation nodes can be parented under multiple parents.
   */
  @SpeakeasyMetadata()
  parentNodeHashes?: number[];

  @SpeakeasyMetadata()
  presentationInfo?: DestinyDefinitionsPresentationDestinyPresentationChildBlock;

  @SpeakeasyMetadata()
  presentationNodeType?: number;

  @SpeakeasyMetadata()
  recordValueStyle?: number;

  /**
   * If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
   */
  @SpeakeasyMetadata()
  redacted?: boolean;

  /**
   * Presentation nodes can be restricted by various requirements. This defines the rules of those requirements, and the message(s) to be shown if these requirements aren't met.
   */
  @SpeakeasyMetadata()
  requirements?: DestinyDefinitionsPresentationDestinyPresentationNodeRequirementsBlock;

  /**
   * If there is any publicly available information about rewards earned for achieving this record, this is the list of those items.
   *
   * @remarks
   *  However, note that some records intentionally have "hidden" rewards. These will not be returned in this list.
   */
  @SpeakeasyMetadata({ elemType: DestinyDestinyItemQuantity })
  rewardItems?: DestinyDestinyItemQuantity[];

  /**
   * Indicates whether this Record's state is determined on a per-character or on an account-wide basis.
   */
  @SpeakeasyMetadata()
  scope?: number;

  /**
   * A hint to show a large icon for a reward
   */
  @SpeakeasyMetadata()
  shouldShowLargeIcons?: boolean;

  @SpeakeasyMetadata()
  stateInfo?: DestinyDefinitionsRecordsSchemaRecordStateBlock;

  @SpeakeasyMetadata()
  titleInfo?: DestinyDefinitionsRecordsDestinyRecordTitleBlock;

  @SpeakeasyMetadata()
  traitHashes?: number[];

  @SpeakeasyMetadata()
  traitIds?: string[];
}
