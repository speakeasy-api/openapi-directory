"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchRetrieveInventoryCountsRequest:
    r"""An object containing the fields to POST for the request.
    
    See the corresponding object definition for field details.
    """
    
    catalog_object_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('catalog_object_ids'), 'exclude': lambda f: f is None }})
    r"""The filter to return results by `CatalogObject` ID.
    The filter is applicable only when set.  The default is null.
    """  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cursor'), 'exclude': lambda f: f is None }})
    r"""A pagination cursor returned by a previous call to this endpoint.
    Provide this to retrieve the next set of results for the original query.
    
    See the [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination) guide for more information.
    """  
    location_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_ids'), 'exclude': lambda f: f is None }})
    r"""The filter to return results by `Location` ID.
    This filter is applicable only when set. The default is null.
    """  
    states: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('states'), 'exclude': lambda f: f is None }})
    r"""The filter to return results by `InventoryState`. The filter is only applicable when set.
    Ignored are untracked states of `NONE`, `SOLD`, and `UNLINKED_RETURN`.
    The default is null.
    """  
    updated_after: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_after'), 'exclude': lambda f: f is None }})
    r"""The filter to return results with their `calculated_at` value
    after the given time as specified in an RFC 3339 timestamp. 
    The default value is the UNIX epoch of (`1970-01-01T00:00:00Z`).
    """  
    