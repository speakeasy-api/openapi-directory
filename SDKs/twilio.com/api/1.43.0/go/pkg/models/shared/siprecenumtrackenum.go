// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SiprecEnumTrackEnum string

const (
	SiprecEnumTrackEnumInboundTrack  SiprecEnumTrackEnum = "inbound_track"
	SiprecEnumTrackEnumOutboundTrack SiprecEnumTrackEnum = "outbound_track"
	SiprecEnumTrackEnumBothTracks    SiprecEnumTrackEnum = "both_tracks"
)

func (e SiprecEnumTrackEnum) ToPointer() *SiprecEnumTrackEnum {
	return &e
}

func (e *SiprecEnumTrackEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inbound_track":
		fallthrough
	case "outbound_track":
		fallthrough
	case "both_tracks":
		*e = SiprecEnumTrackEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SiprecEnumTrackEnum: %v", v)
	}
}
