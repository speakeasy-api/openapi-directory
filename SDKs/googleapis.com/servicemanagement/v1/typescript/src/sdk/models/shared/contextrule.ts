/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A context rule provides information about the context for an individual API element.
 */
export class ContextRule extends SpeakeasyBase {
  /**
   * A list of full type names or extension IDs of extensions allowed in grpc side channel from client to backend.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedRequestExtensions" })
  allowedRequestExtensions?: string[];

  /**
   * A list of full type names or extension IDs of extensions allowed in grpc side channel from backend to client.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedResponseExtensions" })
  allowedResponseExtensions?: string[];

  /**
   * A list of full type names of provided contexts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provided" })
  provided?: string[];

  /**
   * A list of full type names of requested contexts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requested" })
  requested?: string[];

  /**
   * Selects the methods to which this rule applies. Refer to selector for syntax details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selector" })
  selector?: string;
}
