/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo - Information on the pickup store.
 */
public class CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo {
    /**
     * Additional information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalInfo")
    public String additionalInfo;
    public CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo withAdditionalInfo(String additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }
    
    /**
     * Address information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public java.util.Map<String, Object> address;
    public CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo withAddress(java.util.Map<String, Object> address) {
        this.address = address;
        return this;
    }
    
    /**
     * Corresponding dock ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dockId")
    public String dockId;
    public CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo withDockId(String dockId) {
        this.dockId = dockId;
        return this;
    }
    
    /**
     * Friendly name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendlyName")
    public String friendlyName;
    public CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * Indicates whether it is the pickup store.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isPickupStore")
    public Boolean isPickupStore;
    public CartSimulation200ApplicationJSONLogisticsInfoSlasPickupStoreInfo withIsPickupStore(Boolean isPickupStore) {
        this.isPickupStore = isPickupStore;
        return this;
    }
    
}
