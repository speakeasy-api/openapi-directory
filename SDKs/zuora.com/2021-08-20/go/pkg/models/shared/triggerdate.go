// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// TriggerDateNameEnum - Name of the trigger date of the order action.
type TriggerDateNameEnum string

const (
	TriggerDateNameEnumContractEffective  TriggerDateNameEnum = "ContractEffective"
	TriggerDateNameEnumServiceActivation  TriggerDateNameEnum = "ServiceActivation"
	TriggerDateNameEnumCustomerAcceptance TriggerDateNameEnum = "CustomerAcceptance"
)

func (e *TriggerDateNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ContractEffective":
		fallthrough
	case "ServiceActivation":
		fallthrough
	case "CustomerAcceptance":
		*e = TriggerDateNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TriggerDateNameEnum: %s", s)
	}
}

type TriggerDate struct {
	// Name of the trigger date of the order action.
	//
	Name *TriggerDateNameEnum `json:"name,omitempty"`
	// Trigger date in YYYY-MM-DD format.
	//
	TriggerDate *types.Date `json:"triggerDate,omitempty"`
}
