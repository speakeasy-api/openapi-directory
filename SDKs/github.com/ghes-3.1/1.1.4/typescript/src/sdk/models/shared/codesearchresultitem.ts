/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MinimalRepository } from "./minimalrepository";
import { SearchResultTextMatches } from "./searchresulttextmatches";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Code Search Result Item
 */
export class CodeSearchResultItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "file_size" })
  fileSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "git_url" })
  gitUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "last_modified_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "line_numbers" })
  lineNumbers?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * Minimal Repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  @Type(() => MinimalRepository)
  repository: MinimalRepository;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha: string;

  @SpeakeasyMetadata({ elemType: SearchResultTextMatches })
  @Expose({ name: "text_matches" })
  @Type(() => SearchResultTextMatches)
  textMatches?: SearchResultTextMatches[];

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
