"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tablecelllocation as shared_tablecelllocation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InsertTableColumnsRequest:
    r"""Inserts columns into a table. Other columns in the table will be resized to fit the new column."""
    
    cell_location: Optional[shared_tablecelllocation.TableCellLocation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cellLocation'), 'exclude': lambda f: f is None }})
    r"""A location of a single table cell within a table."""  
    insert_right: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insertRight'), 'exclude': lambda f: f is None }})
    r"""Whether to insert new columns to the right of the reference cell location. - `True`: insert to the right. - `False`: insert to the left."""  
    number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""The number of columns to be inserted. Maximum 20 per request."""  
    table_object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableObjectId'), 'exclude': lambda f: f is None }})
    r"""The table to insert columns into."""  
    