/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of error in case of a failure
 */
export enum StatusMessageErrorCodeEnum {
  NoAppKey = "NO_APP_KEY",
  InvalidAppKey = "INVALID_APP_KEY",
  NoSession = "NO_SESSION",
  InvalidSessionInformation = "INVALID_SESSION_INFORMATION",
  NotAuthorized = "NOT_AUTHORIZED",
  InvalidInput = "INVALID_INPUT",
  InvalidClock = "INVALID_CLOCK",
  UnexpectedError = "UNEXPECTED_ERROR",
  Timeout = "TIMEOUT",
  SubscriptionLimitExceeded = "SUBSCRIPTION_LIMIT_EXCEEDED",
  InvalidRequest = "INVALID_REQUEST",
  ConnectionFailed = "CONNECTION_FAILED",
  MaxConnectionLimitExceeded = "MAX_CONNECTION_LIMIT_EXCEEDED",
  TooManyRequests = "TOO_MANY_REQUESTS",
}

/**
 * The status of the last request
 */
export enum StatusMessageStatusCodeEnum {
  Success = "SUCCESS",
  Failure = "FAILURE",
}

export class StatusMessage extends SpeakeasyBase {
  /**
   * Is the connection now closed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectionClosed" })
  connectionClosed?: boolean;

  /**
   * The connection id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectionId" })
  connectionId?: string;

  /**
   * The number of connections available for this account at this moment in time. Present on responses to Authentication messages only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectionsAvailable" })
  connectionsAvailable?: number;

  /**
   * The type of error in case of a failure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: StatusMessageErrorCodeEnum;

  /**
   * Additional message in case of a failure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * Client generated unique id to link request with response (like json rpc)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * The operation type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "op" })
  op?: string;

  /**
   * The status of the last request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusCode" })
  statusCode?: StatusMessageStatusCodeEnum;
}
