// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteRepositoryXAmzTargetEnum
type DeleteRepositoryXAmzTargetEnum string

const (
	DeleteRepositoryXAmzTargetEnumAmazonEc2ContainerRegistryV20150921DeleteRepository DeleteRepositoryXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.DeleteRepository"
)

func (e *DeleteRepositoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonEC2ContainerRegistry_V20150921.DeleteRepository":
		*e = DeleteRepositoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRepositoryXAmzTargetEnum: %s", s)
	}
}

type DeleteRepositoryRequest struct {
	DeleteRepositoryRequest shared.DeleteRepositoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DeleteRepositoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteRepositoryResponse struct {
	ContentType string
	// Success
	DeleteRepositoryResponse *shared.DeleteRepositoryResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// KmsException
	KmsException interface{}
	// RepositoryNotEmptyException
	RepositoryNotEmptyException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
