// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateSimServerList = []string{
	"https://supersim.twilio.com",
}

type UpdateSimSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateSimPathParams struct {
	// The SID of the Sim resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

// UpdateSimUpdateSimRequestCallbackMethodEnum - The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
type UpdateSimUpdateSimRequestCallbackMethodEnum string

const (
	UpdateSimUpdateSimRequestCallbackMethodEnumHead   UpdateSimUpdateSimRequestCallbackMethodEnum = "HEAD"
	UpdateSimUpdateSimRequestCallbackMethodEnumGet    UpdateSimUpdateSimRequestCallbackMethodEnum = "GET"
	UpdateSimUpdateSimRequestCallbackMethodEnumPost   UpdateSimUpdateSimRequestCallbackMethodEnum = "POST"
	UpdateSimUpdateSimRequestCallbackMethodEnumPatch  UpdateSimUpdateSimRequestCallbackMethodEnum = "PATCH"
	UpdateSimUpdateSimRequestCallbackMethodEnumPut    UpdateSimUpdateSimRequestCallbackMethodEnum = "PUT"
	UpdateSimUpdateSimRequestCallbackMethodEnumDelete UpdateSimUpdateSimRequestCallbackMethodEnum = "DELETE"
)

func (e *UpdateSimUpdateSimRequestCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateSimUpdateSimRequestCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSimUpdateSimRequestCallbackMethodEnum: %s", s)
	}
}

type UpdateSimUpdateSimRequest struct {
	// The SID of the Account to which the Sim resource should belong. The Account SID can only be that of the requesting Account or that of a Subaccount of the requesting Account. Only valid when the Sim resource's status is new.
	AccountSid *string `form:"name=AccountSid"`
	// The HTTP method we should use to call `callback_url`. Can be: `GET` or `POST` and the default is POST.
	CallbackMethod *UpdateSimUpdateSimRequestCallbackMethodEnum `form:"name=CallbackMethod"`
	// The URL we should call using the `callback_method` after an asynchronous update has finished.
	CallbackURL *string `form:"name=CallbackUrl"`
	// The SID or unique name of the Fleet to which the SIM resource should be assigned.
	Fleet  *string                         `form:"name=Fleet"`
	Status *shared.SimEnumStatusUpdateEnum `form:"name=Status"`
	// An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
	UniqueName *string `form:"name=UniqueName"`
}

type UpdateSimRequest struct {
	PathParams UpdateSimPathParams
	Request    *UpdateSimUpdateSimRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateSimSecurity
	ServerURL  *string
}

type UpdateSimResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	SupersimV1Sim *shared.SupersimV1Sim
}
