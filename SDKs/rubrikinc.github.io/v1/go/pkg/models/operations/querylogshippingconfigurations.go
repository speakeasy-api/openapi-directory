// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryLogShippingConfigurationsSortByEnum - Specifies an attribute used to ASCII-sort the results. Sorting by the last_applied attribute represents the timestamp as an ISO 8601-encoded string.
type QueryLogShippingConfigurationsSortByEnum string

const (
	QueryLogShippingConfigurationsSortByEnumSecondaryDatabaseName QueryLogShippingConfigurationsSortByEnum = "secondaryDatabaseName"
	QueryLogShippingConfigurationsSortByEnumPrimaryDatabaseName   QueryLogShippingConfigurationsSortByEnum = "primaryDatabaseName"
	QueryLogShippingConfigurationsSortByEnumLastAppliedPoint      QueryLogShippingConfigurationsSortByEnum = "lastAppliedPoint"
	QueryLogShippingConfigurationsSortByEnumLocation              QueryLogShippingConfigurationsSortByEnum = "location"
)

func (e QueryLogShippingConfigurationsSortByEnum) ToPointer() *QueryLogShippingConfigurationsSortByEnum {
	return &e
}

func (e *QueryLogShippingConfigurationsSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "secondaryDatabaseName":
		fallthrough
	case "primaryDatabaseName":
		fallthrough
	case "lastAppliedPoint":
		fallthrough
	case "location":
		*e = QueryLogShippingConfigurationsSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLogShippingConfigurationsSortByEnum: %v", v)
	}
}

// QueryLogShippingConfigurationsSortOrderEnum - Sort order, either ascending or descending.
type QueryLogShippingConfigurationsSortOrderEnum string

const (
	QueryLogShippingConfigurationsSortOrderEnumAsc  QueryLogShippingConfigurationsSortOrderEnum = "asc"
	QueryLogShippingConfigurationsSortOrderEnumDesc QueryLogShippingConfigurationsSortOrderEnum = "desc"
)

func (e QueryLogShippingConfigurationsSortOrderEnum) ToPointer() *QueryLogShippingConfigurationsSortOrderEnum {
	return &e
}

func (e *QueryLogShippingConfigurationsSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryLogShippingConfigurationsSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLogShippingConfigurationsSortOrderEnum: %v", v)
	}
}

// QueryLogShippingConfigurationsStatusEnum - Filter log shipping configuration objects based on the status value for the secondary database.
type QueryLogShippingConfigurationsStatusEnum string

const (
	QueryLogShippingConfigurationsStatusEnumOk           QueryLogShippingConfigurationsStatusEnum = "OK"
	QueryLogShippingConfigurationsStatusEnumBroken       QueryLogShippingConfigurationsStatusEnum = "Broken"
	QueryLogShippingConfigurationsStatusEnumInitializing QueryLogShippingConfigurationsStatusEnum = "Initializing"
	QueryLogShippingConfigurationsStatusEnumStale        QueryLogShippingConfigurationsStatusEnum = "Stale"
)

func (e QueryLogShippingConfigurationsStatusEnum) ToPointer() *QueryLogShippingConfigurationsStatusEnum {
	return &e
}

func (e *QueryLogShippingConfigurationsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OK":
		fallthrough
	case "Broken":
		fallthrough
	case "Initializing":
		fallthrough
	case "Stale":
		*e = QueryLogShippingConfigurationsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryLogShippingConfigurationsStatusEnum: %v", v)
	}
}

type QueryLogShippingConfigurationsRequest struct {
	// Limit the summary information to a specified maximum number of results.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter log shipping configuration objects by performing an infix search using the location string value (host/instance) for a secondary database.
	Location *string `queryParam:"style=form,explode=true,name=location"`
	// Starting position in the list of results contained in the response. The summary information includes the specified numbered result and all higher numbered results.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// ID of a primary database object.
	PrimaryDatabaseID *string `queryParam:"style=form,explode=true,name=primary_database_id"`
	// Filter log shipping configuration objects by performing an infix search using the name of a primary database.
	PrimaryDatabaseName *string `queryParam:"style=form,explode=true,name=primary_database_name"`
	// Filter log shipping configuration objects by performing an infix search using the name of a secondary database.
	SecondaryDatabaseName *string `queryParam:"style=form,explode=true,name=secondary_database_name"`
	// Specifies an attribute used to ASCII-sort the results. Sorting by the last_applied attribute represents the timestamp as an ISO 8601-encoded string.
	SortBy *QueryLogShippingConfigurationsSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryLogShippingConfigurationsSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
	// Filter log shipping configuration objects based on the status value for the secondary database.
	Status *QueryLogShippingConfigurationsStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type QueryLogShippingConfigurationsResponse struct {
	ContentType string
	// Summary list of descendant objects.
	MssqlLogShippingSummaryListResponse *shared.MssqlLogShippingSummaryListResponse
	StatusCode                          int
	RawResponse                         *http.Response
}
