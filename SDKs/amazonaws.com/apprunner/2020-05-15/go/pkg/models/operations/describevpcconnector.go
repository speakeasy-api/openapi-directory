// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeVpcConnectorXAmzTargetEnum
type DescribeVpcConnectorXAmzTargetEnum string

const (
	DescribeVpcConnectorXAmzTargetEnumAppRunnerDescribeVpcConnector DescribeVpcConnectorXAmzTargetEnum = "AppRunner.DescribeVpcConnector"
)

func (e DescribeVpcConnectorXAmzTargetEnum) ToPointer() *DescribeVpcConnectorXAmzTargetEnum {
	return &e
}

func (e *DescribeVpcConnectorXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AppRunner.DescribeVpcConnector":
		*e = DescribeVpcConnectorXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeVpcConnectorXAmzTargetEnum: %v", v)
	}
}

type DescribeVpcConnectorRequest struct {
	DescribeVpcConnectorRequest shared.DescribeVpcConnectorRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  DescribeVpcConnectorXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeVpcConnectorResponse struct {
	ContentType string
	// Success
	DescribeVpcConnectorResponse *shared.DescribeVpcConnectorResponse
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
