// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTPurgeQueueActionEnum
type POSTPurgeQueueActionEnum string

const (
	POSTPurgeQueueActionEnumPurgeQueue POSTPurgeQueueActionEnum = "PurgeQueue"
)

func (e POSTPurgeQueueActionEnum) ToPointer() *POSTPurgeQueueActionEnum {
	return &e
}

func (e *POSTPurgeQueueActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PurgeQueue":
		*e = POSTPurgeQueueActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTPurgeQueueActionEnum: %v", v)
	}
}

// POSTPurgeQueueVersionEnum
type POSTPurgeQueueVersionEnum string

const (
	POSTPurgeQueueVersionEnumTwoThousandAndTwelve1105 POSTPurgeQueueVersionEnum = "2012-11-05"
)

func (e POSTPurgeQueueVersionEnum) ToPointer() *POSTPurgeQueueVersionEnum {
	return &e
}

func (e *POSTPurgeQueueVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-11-05":
		*e = POSTPurgeQueueVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTPurgeQueueVersionEnum: %v", v)
	}
}

type POSTPurgeQueueRequest struct {
	Action            POSTPurgeQueueActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                    `request:"mediaType=text/xml"`
	Version           POSTPurgeQueueVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTPurgeQueueResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
