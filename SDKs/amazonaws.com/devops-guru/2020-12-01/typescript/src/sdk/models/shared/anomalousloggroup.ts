/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LogAnomalyShowcase } from "./loganomalyshowcase";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  An Amazon CloudWatch log group that contains log anomalies and is used to generate an insight.
 */
export class AnomalousLogGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ImpactEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  impactEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ImpactStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  impactStartTime?: Date;

  @SpeakeasyMetadata({ elemType: LogAnomalyShowcase })
  @Expose({ name: "LogAnomalyShowcases" })
  @Type(() => LogAnomalyShowcase)
  logAnomalyShowcases?: LogAnomalyShowcase[];

  @SpeakeasyMetadata()
  @Expose({ name: "LogGroupName" })
  logGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfLogLinesScanned" })
  numberOfLogLinesScanned?: number;
}
