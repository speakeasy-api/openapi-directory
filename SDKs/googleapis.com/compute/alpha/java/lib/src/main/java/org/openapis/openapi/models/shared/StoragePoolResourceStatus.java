/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StoragePoolResourceStatus - [Output Only] Contains output only fields.
 */
public class StoragePoolResourceStatus {
    /**
     * [Output Only] Sum of all the disk' provisioned IOPS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregateDiskProvisionedIops")
    public String aggregateDiskProvisionedIops;

    public StoragePoolResourceStatus withAggregateDiskProvisionedIops(String aggregateDiskProvisionedIops) {
        this.aggregateDiskProvisionedIops = aggregateDiskProvisionedIops;
        return this;
    }
    
    /**
     * [Output Only] Sum of all the capacity provisioned in disks in this storage pool. A disk's provisioned capacity is the same as its total capacity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregateDiskSizeGb")
    public String aggregateDiskSizeGb;

    public StoragePoolResourceStatus withAggregateDiskSizeGb(String aggregateDiskSizeGb) {
        this.aggregateDiskSizeGb = aggregateDiskSizeGb;
        return this;
    }
    
    /**
     * [Output Only] Timestamp of the last successful resize in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastResizeTimestamp")
    public String lastResizeTimestamp;

    public StoragePoolResourceStatus withLastResizeTimestamp(String lastResizeTimestamp) {
        this.lastResizeTimestamp = lastResizeTimestamp;
        return this;
    }
    
    /**
     * [Output Only] Maximum allowed aggregate disk size in gigabytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxAggregateDiskSizeGb")
    public String maxAggregateDiskSizeGb;

    public StoragePoolResourceStatus withMaxAggregateDiskSizeGb(String maxAggregateDiskSizeGb) {
        this.maxAggregateDiskSizeGb = maxAggregateDiskSizeGb;
        return this;
    }
    
    /**
     * [Output Only] Number of disks used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfDisks")
    public String numberOfDisks;

    public StoragePoolResourceStatus withNumberOfDisks(String numberOfDisks) {
        this.numberOfDisks = numberOfDisks;
        return this;
    }
    
    /**
     * [Output Only] Space used by data stored in disks within the storage pool (in bytes).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usedBytes")
    public String usedBytes;

    public StoragePoolResourceStatus withUsedBytes(String usedBytes) {
        this.usedBytes = usedBytes;
        return this;
    }
    
    /**
     * [Output Only] Space used by compressed and deduped data stored in disks within the storage pool (in bytes).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usedReducedBytes")
    public String usedReducedBytes;

    public StoragePoolResourceStatus withUsedReducedBytes(String usedReducedBytes) {
        this.usedReducedBytes = usedReducedBytes;
        return this;
    }
    
    public StoragePoolResourceStatus(){}
}
