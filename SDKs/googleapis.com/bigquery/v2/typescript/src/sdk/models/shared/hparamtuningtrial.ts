/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EvaluationMetrics } from "./evaluationmetrics";
import { TrainingOptions } from "./trainingoptions";
import { Expose, Type } from "class-transformer";

/**
 * The status of the trial.
 */
export enum HparamTuningTrialStatusEnum {
  TrialStatusUnspecified = "TRIAL_STATUS_UNSPECIFIED",
  NotStarted = "NOT_STARTED",
  Running = "RUNNING",
  Succeeded = "SUCCEEDED",
  Failed = "FAILED",
  Infeasible = "INFEASIBLE",
  StoppedEarly = "STOPPED_EARLY",
}

/**
 * Training info of a trial in [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models.
 */
export class HparamTuningTrial extends SpeakeasyBase {
  /**
   * Ending time of the trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTimeMs" })
  endTimeMs?: string;

  /**
   * Error message for FAILED and INFEASIBLE trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  /**
   * Loss computed on the eval data at the end of trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evalLoss" })
  evalLoss?: number;

  /**
   * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evaluationMetrics" })
  @Type(() => EvaluationMetrics)
  evaluationMetrics?: EvaluationMetrics;

  /**
   * Evaluation metrics of a model. These are either computed on all training data or just the eval data based on whether eval data was used during training. These are not present for imported models.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hparamTuningEvaluationMetrics" })
  @Type(() => EvaluationMetrics)
  hparamTuningEvaluationMetrics?: EvaluationMetrics;

  /**
   * Options used in model training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hparams" })
  @Type(() => TrainingOptions)
  hparams?: TrainingOptions;

  /**
   * Starting time of the trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTimeMs" })
  startTimeMs?: string;

  /**
   * The status of the trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: HparamTuningTrialStatusEnum;

  /**
   * Loss computed on the training data at the end of trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainingLoss" })
  trainingLoss?: number;

  /**
   * 1-based index of the trial.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trialId" })
  trialId?: string;
}
