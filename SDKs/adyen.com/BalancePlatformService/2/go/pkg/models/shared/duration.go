// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DurationUnitEnum - The unit of time. You can only use **minutes** and **hours** if the `interval.type` is **sliding**.
//
// Possible values: **minutes**, **hours**, **days**, **weeks**, or **months**
type DurationUnitEnum string

const (
	DurationUnitEnumDays    DurationUnitEnum = "days"
	DurationUnitEnumHours   DurationUnitEnum = "hours"
	DurationUnitEnumMinutes DurationUnitEnum = "minutes"
	DurationUnitEnumMonths  DurationUnitEnum = "months"
	DurationUnitEnumWeeks   DurationUnitEnum = "weeks"
)

func (e *DurationUnitEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "days":
		fallthrough
	case "hours":
		fallthrough
	case "minutes":
		fallthrough
	case "months":
		fallthrough
	case "weeks":
		*e = DurationUnitEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DurationUnitEnum: %s", s)
	}
}

type Duration struct {
	// The unit of time. You can only use **minutes** and **hours** if the `interval.type` is **sliding**.
	//
	// Possible values: **minutes**, **hours**, **days**, **weeks**, or **months**
	Unit *DurationUnitEnum `json:"unit,omitempty"`
	// The length of time by the unit. For example, 5 days.
	//
	// The maximum duration is 90 days or an equivalent in other units. For example, 3 months.
	Value *int `json:"value,omitempty"`
}
