"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import schedulerresource as shared_schedulerresource
from ..shared import triggererresource as shared_triggererresource
from ..shared import webserverresource as shared_webserverresource
from ..shared import workerresource as shared_workerresource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WorkloadsConfig:
    r"""The Kubernetes workloads configuration for GKE cluster associated with the Cloud Composer environment. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer."""
    
    scheduler: Optional[shared_schedulerresource.SchedulerResource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduler'), 'exclude': lambda f: f is None }})
    r"""Configuration for resources used by Airflow schedulers."""  
    triggerer: Optional[shared_triggererresource.TriggererResource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerer'), 'exclude': lambda f: f is None }})
    r"""Configuration for resources used by Airflow triggerers."""  
    web_server: Optional[shared_webserverresource.WebServerResource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webServer'), 'exclude': lambda f: f is None }})
    r"""Configuration for resources used by Airflow web server."""  
    worker: Optional[shared_workerresource.WorkerResource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('worker'), 'exclude': lambda f: f is None }})
    r"""Configuration for resources used by Airflow workers."""  
    