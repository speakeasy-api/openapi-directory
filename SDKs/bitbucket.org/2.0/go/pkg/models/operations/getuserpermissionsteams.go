// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetUserPermissionsTeamsSecurity struct {
	APIKey *shared.SchemeAPIKey `security:"scheme,type=apiKey,subtype=header"`
	Basic  *shared.SchemeBasic  `security:"scheme,type=http,subtype=basic"`
	Oauth2 *shared.SchemeOauth2 `security:"scheme,type=oauth2"`
}

type GetUserPermissionsTeamsQueryParams struct {
	// Query string to narrow down the response as per
	// [filtering and sorting](../../../meta/filtering).
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// Name of a response property sort the result by as per
	// [filtering and sorting](../../../meta/filtering#query-sort).
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

type GetUserPermissionsTeamsRequest struct {
	QueryParams GetUserPermissionsTeamsQueryParams
	Security    GetUserPermissionsTeamsSecurity
}

type GetUserPermissionsTeamsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Team permissions for the teams a caller is a member of.
	PaginatedTeamPermissions *shared.PaginatedTeamPermissions
}
