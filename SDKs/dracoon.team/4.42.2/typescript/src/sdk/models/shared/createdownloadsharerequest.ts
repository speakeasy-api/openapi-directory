/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FileKey } from "./filekey";
import { ObjectExpiration } from "./objectexpiration";
import { UserKeyPairContainer } from "./userkeypaircontainer";
import { Expose, Type } from "class-transformer";

/**
 * Request model for creating a Download Share
 */
export class CreateDownloadShareRequest extends SpeakeasyBase {
  /**
   * &#128679; Deprecated since v4.20.0
   *
   * @remarks
   *
   * Language tag for messages to creator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorLanguage" })
  creatorLanguage?: string;

  /**
   * Expiration information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiration" })
  @Type(() => ObjectExpiration)
  expiration?: ObjectExpiration;

  /**
   * File key information
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileKey" })
  @Type(() => FileKey)
  fileKey?: FileKey;

  /**
   * &#128640; Since v4.11.0
   *
   * @remarks
   *
   * Internal notes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "internalNotes" })
  internalNotes?: string;

  /**
   * Key pair container
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keyPair" })
  @Type(() => UserKeyPairContainer)
  keyPair?: UserKeyPairContainer;

  /**
   * &#128679; Deprecated since v4.11.0
   *
   * @remarks
   *
   * Notification email content
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mailBody" })
  mailBody?: string;

  /**
   * &#128679; Deprecated since v4.11.0
   *
   * @remarks
   *
   * CSV string of recipient email addresses
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mailRecipients" })
  mailRecipients?: string;

  /**
   * &#128679; Deprecated since v4.11.0
   *
   * @remarks
   *
   * Notification email subject
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mailSubject" })
  mailSubject?: string;

  /**
   * Max allowed downloads
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxDownloads" })
  maxDownloads?: number;

  /**
   * Alias name
   *
   * @remarks
   *
   * (default: name of the shared node)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Source node ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeId" })
  nodeId: number;

  /**
   * User notes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * &#128679; Deprecated since v4.20.0
   *
   * @remarks
   *
   * Notify creator on every download.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notifyCreator" })
  notifyCreator?: boolean;

  /**
   * Access password, not allowed for encrypted shares
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * Language tag for messages to receiver
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverLanguage" })
  receiverLanguage?: string;

  /**
   * &#128679; Deprecated since v4.11.0
   *
   * @remarks
   *
   * Notify recipients via email
   *
   * Please use `POST /shares/downloads/{share_id}/email` API instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sendMail" })
  sendMail?: boolean;

  /**
   * &#128679; Deprecated since v4.11.0
   *
   * @remarks
   *
   * Send share password via SMS
   *
   * Please use `textMessageRecipients` attribute instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sendSms" })
  sendSms?: boolean;

  /**
   * Show creator first and last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showCreatorName" })
  showCreatorName?: boolean;

  /**
   * Show creator email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showCreatorUsername" })
  showCreatorUsername?: boolean;

  /**
   * &#128679; Deprecated since v4.11.0
   *
   * @remarks
   *
   * CSV string of recipient MSISDNs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smsRecipients" })
  smsRecipients?: string;

  /**
   * &#128640; Since v4.11.0
   *
   * @remarks
   *
   * List of recipient FQTNs
   *
   * E.123 / E.164 Format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textMessageRecipients" })
  textMessageRecipients?: string[];
}
