<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Organisation - The Organisation resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Organisation
{
    /**
     * $addresses
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrganisationAddress> $addresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('addresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrganisationAddress>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addresses = null;
    
    /**
     * $electronicAddresses
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ElectronicAddress> $electronicAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('electronicAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ElectronicAddress>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $electronicAddresses = null;
    
    /**
     * The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).
     * 
     * @var \DateTime $establishmentDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('establishmentDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    public \DateTime $establishmentDate;
    
    /**
     * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     * 
     * @var ?\DateTime $fromDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $fromDate = null;
    
    /**
     * The party's unique identifier.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The organisation's legal entity type.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\OrganisationLegalEntityTypeEnum $legalEntityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalEntityType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OrganisationLegalEntityTypeEnum>')]
    public OrganisationLegalEntityTypeEnum $legalEntityType;
    
    /**
     * $names
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrganisationName> $names
     */
	#[\JMS\Serializer\Annotation\SerializedName('names')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrganisationName>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $names = null;
    
    /**
     * $registeredIdentifiers
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RegisteredIdentifier> $registeredIdentifiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('registeredIdentifiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RegisteredIdentifier>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $registeredIdentifiers = null;
    
    /**
     * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     * 
     * @var ?\DateTime $toDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('toDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $toDate = null;
    
	public function __construct()
	{
		$this->addresses = null;
		$this->electronicAddresses = null;
		$this->establishmentDate = new \DateTime();
		$this->fromDate = null;
		$this->id = null;
		$this->legalEntityType = \OpenAPI\OpenAPI\Models\Shared\OrganisationLegalEntityTypeEnum::COMPANY;
		$this->names = null;
		$this->registeredIdentifiers = null;
		$this->toDate = null;
	}
}
