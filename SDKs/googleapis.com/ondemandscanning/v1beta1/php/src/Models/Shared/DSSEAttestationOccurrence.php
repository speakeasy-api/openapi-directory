<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DSSEAttestationOccurrence - Deprecated. Prefer to use a regular Occurrence, and populate the Envelope at the top level of the Occurrence.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DSSEAttestationOccurrence
{
    /**
     * MUST match https://github.com/secure-systems-lab/dsse/blob/master/envelope.proto. An authenticated message of arbitrary type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Envelope $envelope
     */
	#[\JMS\Serializer\Annotation\SerializedName('envelope')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Envelope')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Envelope $envelope = null;
    
    /**
     * Spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement The serialized InTotoStatement will be stored as Envelope.payload. Envelope.payloadType is always "application/vnd.in-toto+json".
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InTotoStatement $statement
     */
	#[\JMS\Serializer\Annotation\SerializedName('statement')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InTotoStatement')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InTotoStatement $statement = null;
    
	public function __construct()
	{
		$this->envelope = null;
		$this->statement = null;
	}
}
