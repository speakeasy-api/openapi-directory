// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatientHealthResultResourceAttributesAnnotations struct {
	Text  *string `json:"text,omitempty"`
	Title *string `json:"title,omitempty"`
}

type PatientHealthResultResourceAttributesData struct {
	// Can be any value (number, boolean, string, object) depending on the metric type. Most values are of type number
	Value interface{} `json:"value,omitempty"`
}

type PatientHealthResultResourceAttributesMetricTypeEnum string

const (
	PatientHealthResultResourceAttributesMetricTypeEnumBloodPressureSystolic     PatientHealthResultResourceAttributesMetricTypeEnum = "blood_pressure_systolic"
	PatientHealthResultResourceAttributesMetricTypeEnumBloodPressureDiastolic    PatientHealthResultResourceAttributesMetricTypeEnum = "blood_pressure_diastolic"
	PatientHealthResultResourceAttributesMetricTypeEnumHemoglobinA1c             PatientHealthResultResourceAttributesMetricTypeEnum = "hemoglobin_a1c"
	PatientHealthResultResourceAttributesMetricTypeEnumHdlCholesterol            PatientHealthResultResourceAttributesMetricTypeEnum = "hdl_cholesterol"
	PatientHealthResultResourceAttributesMetricTypeEnumLdlCholesterol            PatientHealthResultResourceAttributesMetricTypeEnum = "ldl_cholesterol"
	PatientHealthResultResourceAttributesMetricTypeEnumTotalCholesterol          PatientHealthResultResourceAttributesMetricTypeEnum = "total_cholesterol"
	PatientHealthResultResourceAttributesMetricTypeEnumTriglycerides             PatientHealthResultResourceAttributesMetricTypeEnum = "triglycerides"
	PatientHealthResultResourceAttributesMetricTypeEnumBloodUreaNitrogen         PatientHealthResultResourceAttributesMetricTypeEnum = "blood_urea_nitrogen"
	PatientHealthResultResourceAttributesMetricTypeEnumCreatinine                PatientHealthResultResourceAttributesMetricTypeEnum = "creatinine"
	PatientHealthResultResourceAttributesMetricTypeEnumHemoglobin                PatientHealthResultResourceAttributesMetricTypeEnum = "hemoglobin"
	PatientHealthResultResourceAttributesMetricTypeEnumHematocrit                PatientHealthResultResourceAttributesMetricTypeEnum = "hematocrit"
	PatientHealthResultResourceAttributesMetricTypeEnumTotalSerumIron            PatientHealthResultResourceAttributesMetricTypeEnum = "total_serum_iron"
	PatientHealthResultResourceAttributesMetricTypeEnumThyroidStimulatingHormone PatientHealthResultResourceAttributesMetricTypeEnum = "thyroid_stimulating_hormone"
	PatientHealthResultResourceAttributesMetricTypeEnumFreeThyroxine             PatientHealthResultResourceAttributesMetricTypeEnum = "free_thyroxine"
	PatientHealthResultResourceAttributesMetricTypeEnumFreeTriiodothyronine      PatientHealthResultResourceAttributesMetricTypeEnum = "free_triiodothyronine"
	PatientHealthResultResourceAttributesMetricTypeEnumTotalTriiodothyronine     PatientHealthResultResourceAttributesMetricTypeEnum = "total_triiodothyronine"
	PatientHealthResultResourceAttributesMetricTypeEnumCd4CellCount              PatientHealthResultResourceAttributesMetricTypeEnum = "cd4_cell_count"
	PatientHealthResultResourceAttributesMetricTypeEnumHivViralLoad              PatientHealthResultResourceAttributesMetricTypeEnum = "hiv_viral_load"
	PatientHealthResultResourceAttributesMetricTypeEnumInr                       PatientHealthResultResourceAttributesMetricTypeEnum = "inr"
	PatientHealthResultResourceAttributesMetricTypeEnumFreeTestosterone          PatientHealthResultResourceAttributesMetricTypeEnum = "free_testosterone"
	PatientHealthResultResourceAttributesMetricTypeEnumTotalTestosterone         PatientHealthResultResourceAttributesMetricTypeEnum = "total_testosterone"
	PatientHealthResultResourceAttributesMetricTypeEnumCReactiveProtein          PatientHealthResultResourceAttributesMetricTypeEnum = "c_reactive_protein"
	PatientHealthResultResourceAttributesMetricTypeEnumProstateSpecificAntigen   PatientHealthResultResourceAttributesMetricTypeEnum = "prostate_specific_antigen"
	PatientHealthResultResourceAttributesMetricTypeEnumCotinine                  PatientHealthResultResourceAttributesMetricTypeEnum = "cotinine"
	PatientHealthResultResourceAttributesMetricTypeEnumCPeptide                  PatientHealthResultResourceAttributesMetricTypeEnum = "c_peptide"
	PatientHealthResultResourceAttributesMetricTypeEnumBloodPressure             PatientHealthResultResourceAttributesMetricTypeEnum = "blood_pressure"
	PatientHealthResultResourceAttributesMetricTypeEnumBloodGlucose              PatientHealthResultResourceAttributesMetricTypeEnum = "blood_glucose"
	PatientHealthResultResourceAttributesMetricTypeEnumWeight                    PatientHealthResultResourceAttributesMetricTypeEnum = "weight"
	PatientHealthResultResourceAttributesMetricTypeEnumHeartRate                 PatientHealthResultResourceAttributesMetricTypeEnum = "heart_rate"
	PatientHealthResultResourceAttributesMetricTypeEnumBodyFatPercentage         PatientHealthResultResourceAttributesMetricTypeEnum = "body_fat_percentage"
	PatientHealthResultResourceAttributesMetricTypeEnumBodyMassIndex             PatientHealthResultResourceAttributesMetricTypeEnum = "body_mass_index"
	PatientHealthResultResourceAttributesMetricTypeEnumBodyTemperature           PatientHealthResultResourceAttributesMetricTypeEnum = "body_temperature"
	PatientHealthResultResourceAttributesMetricTypeEnumForcedExpiratoryVolume1   PatientHealthResultResourceAttributesMetricTypeEnum = "forced_expiratory_volume1"
	PatientHealthResultResourceAttributesMetricTypeEnumForcedVitalCapacity       PatientHealthResultResourceAttributesMetricTypeEnum = "forced_vital_capacity"
	PatientHealthResultResourceAttributesMetricTypeEnumLeanBodyMass              PatientHealthResultResourceAttributesMetricTypeEnum = "lean_body_mass"
	PatientHealthResultResourceAttributesMetricTypeEnumNauseaLevel               PatientHealthResultResourceAttributesMetricTypeEnum = "nausea_level"
	PatientHealthResultResourceAttributesMetricTypeEnumOxygenSaturation          PatientHealthResultResourceAttributesMetricTypeEnum = "oxygen_saturation"
	PatientHealthResultResourceAttributesMetricTypeEnumPainLevel                 PatientHealthResultResourceAttributesMetricTypeEnum = "pain_level"
	PatientHealthResultResourceAttributesMetricTypeEnumPeakExpiratoryFlowRate    PatientHealthResultResourceAttributesMetricTypeEnum = "peak_expiratory_flow_rate"
	PatientHealthResultResourceAttributesMetricTypeEnumPeripheralPerfusionIndex  PatientHealthResultResourceAttributesMetricTypeEnum = "peripheral_perfusion_index"
	PatientHealthResultResourceAttributesMetricTypeEnumRespiratoryRate           PatientHealthResultResourceAttributesMetricTypeEnum = "respiratory_rate"
	PatientHealthResultResourceAttributesMetricTypeEnumInhalerUsage              PatientHealthResultResourceAttributesMetricTypeEnum = "inhaler_usage"
)

func (e *PatientHealthResultResourceAttributesMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "blood_pressure_systolic":
		fallthrough
	case "blood_pressure_diastolic":
		fallthrough
	case "hemoglobin_a1c":
		fallthrough
	case "hdl_cholesterol":
		fallthrough
	case "ldl_cholesterol":
		fallthrough
	case "total_cholesterol":
		fallthrough
	case "triglycerides":
		fallthrough
	case "blood_urea_nitrogen":
		fallthrough
	case "creatinine":
		fallthrough
	case "hemoglobin":
		fallthrough
	case "hematocrit":
		fallthrough
	case "total_serum_iron":
		fallthrough
	case "thyroid_stimulating_hormone":
		fallthrough
	case "free_thyroxine":
		fallthrough
	case "free_triiodothyronine":
		fallthrough
	case "total_triiodothyronine":
		fallthrough
	case "cd4_cell_count":
		fallthrough
	case "hiv_viral_load":
		fallthrough
	case "inr":
		fallthrough
	case "free_testosterone":
		fallthrough
	case "total_testosterone":
		fallthrough
	case "c_reactive_protein":
		fallthrough
	case "prostate_specific_antigen":
		fallthrough
	case "cotinine":
		fallthrough
	case "c_peptide":
		fallthrough
	case "blood_pressure":
		fallthrough
	case "blood_glucose":
		fallthrough
	case "weight":
		fallthrough
	case "heart_rate":
		fallthrough
	case "body_fat_percentage":
		fallthrough
	case "body_mass_index":
		fallthrough
	case "body_temperature":
		fallthrough
	case "forced_expiratory_volume1":
		fallthrough
	case "forced_vital_capacity":
		fallthrough
	case "lean_body_mass":
		fallthrough
	case "nausea_level":
		fallthrough
	case "oxygen_saturation":
		fallthrough
	case "pain_level":
		fallthrough
	case "peak_expiratory_flow_rate":
		fallthrough
	case "peripheral_perfusion_index":
		fallthrough
	case "respiratory_rate":
		fallthrough
	case "inhaler_usage":
		*e = PatientHealthResultResourceAttributesMetricTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientHealthResultResourceAttributesMetricTypeEnum: %s", s)
	}
}

type PatientHealthResultResourceAttributesSource struct {
	// Can be any value
	Metadata interface{} `json:"metadata,omitempty"`
	Name     *string     `json:"name,omitempty"`
	SourceID *string     `json:"source_id,omitempty"`
}

type PatientHealthResultResourceAttributes struct {
	// Links together results. This should be the same as the thread of _action, if it is defined
	Thread             *string                                              `json:"_thread,omitempty"`
	Aggregation        *string                                              `json:"aggregation,omitempty"`
	Annotations        []PatientHealthResultResourceAttributesAnnotations   `json:"annotations,omitempty"`
	Channel            *string                                              `json:"channel,omitempty"`
	Data               *PatientHealthResultResourceAttributesData           `json:"data,omitempty"`
	ExternalID         *string                                              `json:"external_id,omitempty"`
	MetricType         *PatientHealthResultResourceAttributesMetricTypeEnum `json:"metric_type,omitempty"`
	OccurredAt         *string                                              `json:"occurred_at,omitempty"`
	OccurredAtTimeZone *string                                              `json:"occurred_at_time_zone,omitempty"`
	Skipped            *bool                                                `json:"skipped,omitempty"`
	Source             *PatientHealthResultResourceAttributesSource         `json:"source,omitempty"`
	// Type of result. Usually the same as metric_type except for lifestyle actions
	Type   *string `json:"type,omitempty"`
	Window *string `json:"window,omitempty"`
}

type PatientHealthResultResourceRelationshipsActionData struct {
	ID   *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

type PatientHealthResultResourceRelationshipsAction struct {
	Data  *PatientHealthResultResourceRelationshipsActionData `json:"data,omitempty"`
	Links map[string]interface{}                              `json:"links,omitempty"`
}

type PatientHealthResultResourceRelationshipsMetricData struct {
	ID   *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

type PatientHealthResultResourceRelationshipsMetric struct {
	Data  *PatientHealthResultResourceRelationshipsMetricData `json:"data,omitempty"`
	Links map[string]interface{}                              `json:"links,omitempty"`
}

type PatientHealthResultResourceRelationshipsPatientDataMetaQueryIdentifier struct {
	System string `json:"system"`
	Value  string `json:"value"`
}

// PatientHealthResultResourceRelationshipsPatientDataMetaQuery - The query must return one and only one patient.
type PatientHealthResultResourceRelationshipsPatientDataMetaQuery struct {
	Groups       []string                                                               `json:"groups,omitempty"`
	Identifier   PatientHealthResultResourceRelationshipsPatientDataMetaQueryIdentifier `json:"identifier"`
	Organization *string                                                                `json:"organization,omitempty"`
}

// PatientHealthResultResourceRelationshipsPatientDataMeta - Allows the specification of a query for a patient rather than providing a patient id directly
type PatientHealthResultResourceRelationshipsPatientDataMeta struct {
	// The query must return one and only one patient.
	Query PatientHealthResultResourceRelationshipsPatientDataMetaQuery `json:"query"`
}

type PatientHealthResultResourceRelationshipsPatientData struct {
	// Required if the `meta.query` is not defined.
	ID *string `json:"id,omitempty"`
	// Allows the specification of a query for a patient rather than providing a patient id directly
	Meta *PatientHealthResultResourceRelationshipsPatientDataMeta `json:"meta,omitempty"`
	Type *string                                                  `json:"type,omitempty"`
}

type PatientHealthResultResourceRelationshipsPatient struct {
	Data  *PatientHealthResultResourceRelationshipsPatientData `json:"data,omitempty"`
	Links map[string]interface{}                               `json:"links,omitempty"`
}

type PatientHealthResultResourceRelationships struct {
	Action  *PatientHealthResultResourceRelationshipsAction  `json:"action,omitempty"`
	Metric  *PatientHealthResultResourceRelationshipsMetric  `json:"metric,omitempty"`
	Patient *PatientHealthResultResourceRelationshipsPatient `json:"patient,omitempty"`
}

type PatientHealthResultResource struct {
	Attributes    *PatientHealthResultResourceAttributes    `json:"attributes,omitempty"`
	ID            string                                    `json:"id"`
	Relationships *PatientHealthResultResourceRelationships `json:"relationships,omitempty"`
	Type          string                                    `json:"type"`
}
