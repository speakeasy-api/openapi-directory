// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SuggestionSubtypeEnum - The sub-type of this event.
type SuggestionSubtypeEnum string

const (
	SuggestionSubtypeEnumSubtypeUnspecified SuggestionSubtypeEnum = "SUBTYPE_UNSPECIFIED"
	SuggestionSubtypeEnumAdded              SuggestionSubtypeEnum = "ADDED"
	SuggestionSubtypeEnumDeleted            SuggestionSubtypeEnum = "DELETED"
	SuggestionSubtypeEnumReplyAdded         SuggestionSubtypeEnum = "REPLY_ADDED"
	SuggestionSubtypeEnumReplyDeleted       SuggestionSubtypeEnum = "REPLY_DELETED"
	SuggestionSubtypeEnumAccepted           SuggestionSubtypeEnum = "ACCEPTED"
	SuggestionSubtypeEnumRejected           SuggestionSubtypeEnum = "REJECTED"
	SuggestionSubtypeEnumAcceptDeleted      SuggestionSubtypeEnum = "ACCEPT_DELETED"
	SuggestionSubtypeEnumRejectDeleted      SuggestionSubtypeEnum = "REJECT_DELETED"
)

func (e *SuggestionSubtypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBTYPE_UNSPECIFIED":
		fallthrough
	case "ADDED":
		fallthrough
	case "DELETED":
		fallthrough
	case "REPLY_ADDED":
		fallthrough
	case "REPLY_DELETED":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "ACCEPT_DELETED":
		fallthrough
	case "REJECT_DELETED":
		*e = SuggestionSubtypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SuggestionSubtypeEnum: %s", s)
	}
}

// Suggestion - A suggestion.
type Suggestion struct {
	// The sub-type of this event.
	Subtype *SuggestionSubtypeEnum `json:"subtype,omitempty"`
}
