Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/dns/v1beta2/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.DNSChangesCreateRequest(
    dollar_xgafv="2",
    change=shared.Change(
        additions=[
            shared.ResourceRecordSet(
                kind="distinctio",
                name="quibusdam",
                routing_policy=shared.RRSetRoutingPolicy(
                    geo=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="corrupti",
                                            ip_protocol="udp",
                                            kind="vel",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="deserunt",
                                            port="suscipit",
                                            project="iure",
                                            region="magnam",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="debitis",
                                            ip_protocol="undefined",
                                            kind="delectus",
                                            load_balancer_type="none",
                                            network_url="suscipit",
                                            port="molestiae",
                                            project="minus",
                                            region="placeat",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptatum",
                                            ip_protocol="tcp",
                                            kind="excepturi",
                                            load_balancer_type="none",
                                            network_url="recusandae",
                                            port="temporibus",
                                            project="ab",
                                            region="quis",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="veritatis",
                                            ip_protocol="tcp",
                                            kind="perferendis",
                                            load_balancer_type="none",
                                            network_url="repellendus",
                                            port="sapiente",
                                            project="quo",
                                            region="odit",
                                        ),
                                    ],
                                ),
                                kind="at",
                                location="at",
                                rrdatas=[
                                    "molestiae",
                                    "quod",
                                    "quod",
                                    "esse",
                                ],
                                signature_rrdatas=[
                                    "porro",
                                    "dolorum",
                                    "dicta",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="officia",
                                            ip_protocol="tcp",
                                            kind="fugit",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="hic",
                                            port="optio",
                                            project="totam",
                                            region="beatae",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="commodi",
                                            ip_protocol="tcp",
                                            kind="modi",
                                            load_balancer_type="none",
                                            network_url="impedit",
                                            port="cum",
                                            project="esse",
                                            region="ipsum",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="excepturi",
                                            ip_protocol="undefined",
                                            kind="perferendis",
                                            load_balancer_type="none",
                                            network_url="natus",
                                            port="sed",
                                            project="iste",
                                            region="dolor",
                                        ),
                                    ],
                                ),
                                kind="natus",
                                location="laboriosam",
                                rrdatas=[
                                    "saepe",
                                    "fuga",
                                    "in",
                                    "corporis",
                                ],
                                signature_rrdatas=[
                                    "iure",
                                    "saepe",
                                    "quidem",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ipsa",
                                            ip_protocol="udp",
                                            kind="est",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="laborum",
                                            port="dolores",
                                            project="dolorem",
                                            region="corporis",
                                        ),
                                    ],
                                ),
                                kind="explicabo",
                                location="nobis",
                                rrdatas=[
                                    "omnis",
                                    "nemo",
                                ],
                                signature_rrdatas=[
                                    "excepturi",
                                    "accusantium",
                                ],
                            ),
                        ],
                        kind="iure",
                    ),
                    geo_policy=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="sapiente",
                                            ip_protocol="undefined",
                                            kind="mollitia",
                                            load_balancer_type="none",
                                            network_url="culpa",
                                            port="consequuntur",
                                            project="repellat",
                                            region="mollitia",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="occaecati",
                                            ip_protocol="undefined",
                                            kind="commodi",
                                            load_balancer_type="none",
                                            network_url="molestiae",
                                            port="velit",
                                            project="error",
                                            region="quia",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quis",
                                            ip_protocol="undefined",
                                            kind="laborum",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="enim",
                                            port="odit",
                                            project="quo",
                                            region="sequi",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="tenetur",
                                            ip_protocol="tcp",
                                            kind="id",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="aut",
                                            port="quasi",
                                            project="error",
                                            region="temporibus",
                                        ),
                                    ],
                                ),
                                kind="laborum",
                                location="quasi",
                                rrdatas=[
                                    "voluptatibus",
                                    "vero",
                                    "nihil",
                                    "praesentium",
                                ],
                                signature_rrdatas=[
                                    "ipsa",
                                    "omnis",
                                    "voluptate",
                                    "cum",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="doloremque",
                                            ip_protocol="tcp",
                                            kind="ut",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="dicta",
                                            port="corporis",
                                            project="dolore",
                                            region="iusto",
                                        ),
                                    ],
                                ),
                                kind="dicta",
                                location="harum",
                                rrdatas=[
                                    "accusamus",
                                    "commodi",
                                ],
                                signature_rrdatas=[
                                    "quae",
                                    "ipsum",
                                    "quidem",
                                    "molestias",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="pariatur",
                                            ip_protocol="undefined",
                                            kind="praesentium",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="voluptates",
                                            port="quasi",
                                            project="repudiandae",
                                            region="sint",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="veritatis",
                                            ip_protocol="udp",
                                            kind="incidunt",
                                            load_balancer_type="none",
                                            network_url="consequatur",
                                            port="est",
                                            project="quibusdam",
                                            region="explicabo",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="deserunt",
                                            ip_protocol="udp",
                                            kind="quibusdam",
                                            load_balancer_type="none",
                                            network_url="modi",
                                            port="qui",
                                            project="aliquid",
                                            region="cupiditate",
                                        ),
                                    ],
                                ),
                                kind="quos",
                                location="perferendis",
                                rrdatas=[
                                    "assumenda",
                                ],
                                signature_rrdatas=[
                                    "alias",
                                    "fugit",
                                ],
                            ),
                        ],
                        kind="dolorum",
                    ),
                    kind="excepturi",
                    primary_backup=shared.RRSetRoutingPolicyPrimaryBackupPolicy(
                        backup_geo_targets=shared.RRSetRoutingPolicyGeoPolicy(
                            enable_fencing=False,
                            items=[
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="tempore",
                                                ip_protocol="undefined",
                                                kind="delectus",
                                                load_balancer_type="none",
                                                network_url="non",
                                                port="eligendi",
                                                project="sint",
                                                region="aliquid",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="provident",
                                                ip_protocol="udp",
                                                kind="sint",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="dolor",
                                                port="debitis",
                                                project="a",
                                                region="dolorum",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="in",
                                                ip_protocol="tcp",
                                                kind="illum",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="rerum",
                                                port="dicta",
                                                project="magnam",
                                                region="cumque",
                                            ),
                                        ],
                                    ),
                                    kind="facere",
                                    location="ea",
                                    rrdatas=[
                                        "laborum",
                                        "accusamus",
                                    ],
                                    signature_rrdatas=[
                                        "occaecati",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="accusamus",
                                                ip_protocol="udp",
                                                kind="quidem",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="nam",
                                                port="id",
                                                project="blanditiis",
                                                region="deleniti",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="sapiente",
                                                ip_protocol="undefined",
                                                kind="deserunt",
                                                load_balancer_type="none",
                                                network_url="vel",
                                                port="natus",
                                                project="omnis",
                                                region="molestiae",
                                            ),
                                        ],
                                    ),
                                    kind="perferendis",
                                    location="nihil",
                                    rrdatas=[
                                        "distinctio",
                                        "id",
                                    ],
                                    signature_rrdatas=[
                                        "labore",
                                        "suscipit",
                                    ],
                                ),
                            ],
                            kind="natus",
                        ),
                        kind="nobis",
                        primary_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                            internal_load_balancers=[
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="vero",
                                    ip_protocol="undefined",
                                    kind="architecto",
                                    load_balancer_type="none",
                                    network_url="et",
                                    port="excepturi",
                                    project="ullam",
                                    region="provident",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="quos",
                                    ip_protocol="tcp",
                                    kind="accusantium",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="reiciendis",
                                    port="mollitia",
                                    project="ad",
                                    region="eum",
                                ),
                            ],
                        ),
                        trickle_traffic=2212.62,
                    ),
                    wrr=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="nemo",
                                            ip_protocol="undefined",
                                            kind="iure",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="debitis",
                                            port="eius",
                                            project="maxime",
                                            region="deleniti",
                                        ),
                                    ],
                                ),
                                kind="facilis",
                                rrdatas=[
                                    "architecto",
                                    "architecto",
                                ],
                                signature_rrdatas=[
                                    "ullam",
                                    "expedita",
                                    "nihil",
                                    "repellat",
                                ],
                                weight=8411.4,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="saepe",
                                            ip_protocol="udp",
                                            kind="accusantium",
                                            load_balancer_type="none",
                                            network_url="praesentium",
                                            port="natus",
                                            project="magni",
                                            region="sunt",
                                        ),
                                    ],
                                ),
                                kind="quo",
                                rrdatas=[
                                    "pariatur",
                                    "maxime",
                                    "ea",
                                    "excepturi",
                                ],
                                signature_rrdatas=[
                                    "ea",
                                ],
                                weight=332.22,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="maiores",
                                            ip_protocol="udp",
                                            kind="ipsam",
                                            load_balancer_type="none",
                                            network_url="autem",
                                            port="nam",
                                            project="eaque",
                                            region="pariatur",
                                        ),
                                    ],
                                ),
                                kind="nemo",
                                rrdatas=[
                                    "perferendis",
                                    "fugiat",
                                    "amet",
                                    "aut",
                                ],
                                signature_rrdatas=[
                                    "corporis",
                                    "hic",
                                    "libero",
                                    "nobis",
                                ],
                                weight=1716.29,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="totam",
                                            ip_protocol="tcp",
                                            kind="eaque",
                                            load_balancer_type="none",
                                            network_url="nesciunt",
                                            port="eos",
                                            project="perferendis",
                                            region="dolores",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="minus",
                                            ip_protocol="tcp",
                                            kind="dolor",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="nostrum",
                                            port="hic",
                                            project="recusandae",
                                            region="omnis",
                                        ),
                                    ],
                                ),
                                kind="facilis",
                                rrdatas=[
                                    "voluptatem",
                                    "porro",
                                    "consequuntur",
                                ],
                                signature_rrdatas=[
                                    "error",
                                    "eaque",
                                    "occaecati",
                                ],
                                weight=6990.98,
                            ),
                        ],
                        kind="adipisci",
                    ),
                    wrr_policy=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="modi",
                                            ip_protocol="tcp",
                                            kind="dolorum",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="pariatur",
                                            port="provident",
                                            project="nobis",
                                            region="libero",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="delectus",
                                            ip_protocol="undefined",
                                            kind="quos",
                                            load_balancer_type="none",
                                            network_url="dolorem",
                                            port="dolorem",
                                            project="dolor",
                                            region="qui",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ipsum",
                                            ip_protocol="udp",
                                            kind="excepturi",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="voluptate",
                                            port="dignissimos",
                                            project="reiciendis",
                                            region="amet",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="dolorum",
                                            ip_protocol="undefined",
                                            kind="veritatis",
                                            load_balancer_type="none",
                                            network_url="ipsa",
                                            port="iure",
                                            project="odio",
                                            region="quaerat",
                                        ),
                                    ],
                                ),
                                kind="accusamus",
                                rrdatas=[
                                    "voluptatibus",
                                    "voluptas",
                                    "natus",
                                ],
                                signature_rrdatas=[
                                    "atque",
                                ],
                                weight=246.78,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ab",
                                            ip_protocol="udp",
                                            kind="dolorum",
                                            load_balancer_type="none",
                                            network_url="voluptate",
                                            port="dolorum",
                                            project="deleniti",
                                            region="omnis",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="necessitatibus",
                                            ip_protocol="udp",
                                            kind="asperiores",
                                            load_balancer_type="none",
                                            network_url="ipsum",
                                            port="voluptate",
                                            project="id",
                                            region="saepe",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="eius",
                                            ip_protocol="undefined",
                                            kind="perferendis",
                                            load_balancer_type="none",
                                            network_url="optio",
                                            port="accusamus",
                                            project="ad",
                                            region="saepe",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="suscipit",
                                            ip_protocol="tcp",
                                            kind="provident",
                                            load_balancer_type="none",
                                            network_url="repellendus",
                                            port="totam",
                                            project="similique",
                                            region="alias",
                                        ),
                                    ],
                                ),
                                kind="at",
                                rrdatas=[
                                    "tempora",
                                    "vel",
                                ],
                                signature_rrdatas=[
                                    "officiis",
                                    "qui",
                                    "dolorum",
                                    "a",
                                ],
                                weight=4561.3,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="iusto",
                                            ip_protocol="undefined",
                                            kind="quisquam",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="amet",
                                            port="tempore",
                                            project="accusamus",
                                            region="numquam",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="enim",
                                            ip_protocol="undefined",
                                            kind="sapiente",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="nihil",
                                            port="sit",
                                            project="expedita",
                                            region="neque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="sed",
                                            ip_protocol="tcp",
                                            kind="libero",
                                            load_balancer_type="none",
                                            network_url="deserunt",
                                            port="quam",
                                            project="ipsum",
                                            region="incidunt",
                                        ),
                                    ],
                                ),
                                kind="qui",
                                rrdatas=[
                                    "maxime",
                                    "pariatur",
                                    "soluta",
                                ],
                                signature_rrdatas=[
                                    "laborum",
                                ],
                                weight=5173.79,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="aspernatur",
                                            ip_protocol="undefined",
                                            kind="distinctio",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="aliquid",
                                            port="quam",
                                            project="molestias",
                                            region="temporibus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="qui",
                                            ip_protocol="undefined",
                                            kind="fugit",
                                            load_balancer_type="none",
                                            network_url="odio",
                                            port="sunt",
                                            project="ullam",
                                            region="nam",
                                        ),
                                    ],
                                ),
                                kind="hic",
                                rrdatas=[
                                    "cumque",
                                ],
                                signature_rrdatas=[
                                    "nobis",
                                    "et",
                                    "saepe",
                                ],
                                weight=2174.5,
                            ),
                        ],
                        kind="veritatis",
                    ),
                ),
                rrdatas=[
                    "quos",
                    "tempore",
                    "cupiditate",
                ],
                signature_rrdatas=[
                    "delectus",
                ],
                ttl=209157,
                type="dolore",
            ),
            shared.ResourceRecordSet(
                kind="labore",
                name="adipisci",
                routing_policy=shared.RRSetRoutingPolicy(
                    geo=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quae",
                                            ip_protocol="undefined",
                                            kind="quas",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="consequatur",
                                            port="est",
                                            project="repellendus",
                                            region="porro",
                                        ),
                                    ],
                                ),
                                kind="doloribus",
                                location="ut",
                                rrdatas=[
                                    "cupiditate",
                                    "qui",
                                    "quae",
                                ],
                                signature_rrdatas=[
                                    "odio",
                                    "occaecati",
                                    "voluptatibus",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vero",
                                            ip_protocol="tcp",
                                            kind="quis",
                                            load_balancer_type="none",
                                            network_url="delectus",
                                            port="voluptate",
                                            project="consectetur",
                                            region="vero",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="tenetur",
                                            ip_protocol="tcp",
                                            kind="hic",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="quod",
                                            port="odio",
                                            project="similique",
                                            region="facilis",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vero",
                                            ip_protocol="tcp",
                                            kind="dolore",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="illum",
                                            port="sequi",
                                            project="natus",
                                            region="impedit",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="aut",
                                            ip_protocol="udp",
                                            kind="exercitationem",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="fugit",
                                            port="porro",
                                            project="maiores",
                                            region="doloribus",
                                        ),
                                    ],
                                ),
                                kind="iusto",
                                location="eligendi",
                                rrdatas=[
                                    "alias",
                                    "officia",
                                ],
                                signature_rrdatas=[
                                    "ipsam",
                                    "ea",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vel",
                                            ip_protocol="udp",
                                            kind="magnam",
                                            load_balancer_type="none",
                                            network_url="ex",
                                            port="laudantium",
                                            project="dicta",
                                            region="dolor",
                                        ),
                                    ],
                                ),
                                kind="maiores",
                                location="quasi",
                                rrdatas=[
                                    "nulla",
                                    "excepturi",
                                ],
                                signature_rrdatas=[
                                    "nostrum",
                                    "sapiente",
                                    "quisquam",
                                    "saepe",
                                ],
                            ),
                        ],
                        kind="ea",
                    ),
                    geo_policy=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="veniam",
                                            ip_protocol="tcp",
                                            kind="inventore",
                                            load_balancer_type="none",
                                            network_url="ea",
                                            port="quo",
                                            project="consectetur",
                                            region="recusandae",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="aspernatur",
                                            ip_protocol="undefined",
                                            kind="eaque",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="libero",
                                            port="aut",
                                            project="aut",
                                            region="deleniti",
                                        ),
                                    ],
                                ),
                                kind="impedit",
                                location="aliquam",
                                rrdatas=[
                                    "accusamus",
                                ],
                                signature_rrdatas=[
                                    "non",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="dolorum",
                                            ip_protocol="udp",
                                            kind="placeat",
                                            load_balancer_type="none",
                                            network_url="eum",
                                            port="autem",
                                            project="nobis",
                                            region="quas",
                                        ),
                                    ],
                                ),
                                kind="assumenda",
                                location="nulla",
                                rrdatas=[
                                    "libero",
                                    "quasi",
                                ],
                                signature_rrdatas=[
                                    "numquam",
                                    "explicabo",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ipsa",
                                            ip_protocol="tcp",
                                            kind="magnam",
                                            load_balancer_type="none",
                                            network_url="eius",
                                            port="esse",
                                            project="esse",
                                            region="rem",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="fuga",
                                            ip_protocol="tcp",
                                            kind="quidem",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="ut",
                                            port="eum",
                                            project="suscipit",
                                            region="assumenda",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="eos",
                                            ip_protocol="tcp",
                                            kind="quisquam",
                                            load_balancer_type="none",
                                            network_url="ipsa",
                                            port="id",
                                            project="quidem",
                                            region="neque",
                                        ),
                                    ],
                                ),
                                kind="quo",
                                location="illum",
                                rrdatas=[
                                    "fuga",
                                    "eius",
                                    "eos",
                                    "voluptas",
                                ],
                                signature_rrdatas=[
                                    "cupiditate",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="tempora",
                                            ip_protocol="udp",
                                            kind="ipsam",
                                            load_balancer_type="none",
                                            network_url="sequi",
                                            port="quo",
                                            project="esse",
                                            region="recusandae",
                                        ),
                                    ],
                                ),
                                kind="aperiam",
                                location="distinctio",
                                rrdatas=[
                                    "dignissimos",
                                    "inventore",
                                    "nihil",
                                    "totam",
                                ],
                                signature_rrdatas=[
                                    "aliquam",
                                    "odio",
                                    "occaecati",
                                    "commodi",
                                ],
                            ),
                        ],
                        kind="sapiente",
                    ),
                    kind="dolores",
                    primary_backup=shared.RRSetRoutingPolicyPrimaryBackupPolicy(
                        backup_geo_targets=shared.RRSetRoutingPolicyGeoPolicy(
                            enable_fencing=False,
                            items=[
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="accusantium",
                                                ip_protocol="udp",
                                                kind="eum",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="praesentium",
                                                port="consequuntur",
                                                project="deleniti",
                                                region="fugit",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="fuga",
                                                ip_protocol="tcp",
                                                kind="incidunt",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="explicabo",
                                                port="minima",
                                                project="nisi",
                                                region="fugit",
                                            ),
                                        ],
                                    ),
                                    kind="sapiente",
                                    location="consequuntur",
                                    rrdatas=[
                                        "explicabo",
                                    ],
                                    signature_rrdatas=[
                                        "occaecati",
                                        "atque",
                                        "et",
                                        "esse",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="accusamus",
                                                ip_protocol="undefined",
                                                kind="esse",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="nam",
                                                port="vero",
                                                project="aliquid",
                                                region="quasi",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="saepe",
                                                ip_protocol="tcp",
                                                kind="harum",
                                                load_balancer_type="none",
                                                network_url="rerum",
                                                port="occaecati",
                                                project="minima",
                                                region="distinctio",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="eligendi",
                                                ip_protocol="undefined",
                                                kind="culpa",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="adipisci",
                                                port="cumque",
                                                project="consequuntur",
                                                region="consequatur",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="minus",
                                                ip_protocol="undefined",
                                                kind="sapiente",
                                                load_balancer_type="none",
                                                network_url="esse",
                                                port="blanditiis",
                                                project="provident",
                                                region="a",
                                            ),
                                        ],
                                    ),
                                    kind="nulla",
                                    location="quas",
                                    rrdatas=[
                                        "quasi",
                                        "a",
                                    ],
                                    signature_rrdatas=[
                                        "sint",
                                        "pariatur",
                                        "possimus",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="eveniet",
                                                ip_protocol="udp",
                                                kind="facere",
                                                load_balancer_type="none",
                                                network_url="consequuntur",
                                                port="quasi",
                                                project="similique",
                                                region="culpa",
                                            ),
                                        ],
                                    ),
                                    kind="aliquid",
                                    location="tenetur",
                                    rrdatas=[
                                        "earum",
                                    ],
                                    signature_rrdatas=[
                                        "in",
                                        "eius",
                                    ],
                                ),
                            ],
                            kind="libero",
                        ),
                        kind="illum",
                        primary_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                            internal_load_balancers=[
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="accusantium",
                                    ip_protocol="undefined",
                                    kind="sapiente",
                                    load_balancer_type="none",
                                    network_url="ullam",
                                    port="reprehenderit",
                                    project="ullam",
                                    region="nisi",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="aut",
                                    ip_protocol="tcp",
                                    kind="qui",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="ex",
                                    port="deleniti",
                                    project="itaque",
                                    region="dolorum",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="architecto",
                                    ip_protocol="tcp",
                                    kind="tenetur",
                                    load_balancer_type="none",
                                    network_url="at",
                                    port="et",
                                    project="voluptate",
                                    region="ipsa",
                                ),
                            ],
                        ),
                        trickle_traffic=3267.01,
                    ),
                    wrr=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="adipisci",
                                            ip_protocol="tcp",
                                            kind="temporibus",
                                            load_balancer_type="none",
                                            network_url="rem",
                                            port="aut",
                                            project="laudantium",
                                            region="eum",
                                        ),
                                    ],
                                ),
                                kind="mollitia",
                                rrdatas=[
                                    "corrupti",
                                ],
                                signature_rrdatas=[
                                    "voluptatem",
                                    "dolor",
                                ],
                                weight=5801.52,
                            ),
                        ],
                        kind="numquam",
                    ),
                    wrr_policy=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptas",
                                            ip_protocol="undefined",
                                            kind="dignissimos",
                                            load_balancer_type="none",
                                            network_url="maiores",
                                            port="natus",
                                            project="velit",
                                            region="voluptatibus",
                                        ),
                                    ],
                                ),
                                kind="voluptas",
                                rrdatas=[
                                    "aperiam",
                                    "ea",
                                    "quaerat",
                                    "consequuntur",
                                ],
                                signature_rrdatas=[
                                    "officia",
                                    "maxime",
                                    "dignissimos",
                                    "officia",
                                ],
                                weight=9894.1,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quae",
                                            ip_protocol="undefined",
                                            kind="porro",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="labore",
                                            port="ab",
                                            project="adipisci",
                                            region="fuga",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="id",
                                            ip_protocol="tcp",
                                            kind="velit",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="est",
                                            port="recusandae",
                                            project="totam",
                                            region="fugiat",
                                        ),
                                    ],
                                ),
                                kind="vel",
                                rrdatas=[
                                    "quos",
                                    "vel",
                                ],
                                signature_rrdatas=[
                                    "possimus",
                                    "facilis",
                                ],
                                weight=7382.27,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="in",
                                            ip_protocol="tcp",
                                            kind="reiciendis",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="nemo",
                                            port="recusandae",
                                            project="aliquid",
                                            region="aperiam",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="cum",
                                            ip_protocol="undefined",
                                            kind="in",
                                            load_balancer_type="none",
                                            network_url="earum",
                                            port="facere",
                                            project="numquam",
                                            region="doloribus",
                                        ),
                                    ],
                                ),
                                kind="suscipit",
                                rrdatas=[
                                    "quidem",
                                    "saepe",
                                    "necessitatibus",
                                    "dolore",
                                ],
                                signature_rrdatas=[
                                    "asperiores",
                                ],
                                weight=2415.45,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="amet",
                                            ip_protocol="undefined",
                                            kind="dignissimos",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="debitis",
                                            port="consectetur",
                                            project="corporis",
                                            region="harum",
                                        ),
                                    ],
                                ),
                                kind="laboriosam",
                                rrdatas=[
                                    "voluptates",
                                ],
                                signature_rrdatas=[
                                    "vitae",
                                    "accusamus",
                                    "similique",
                                ],
                                weight=2724.37,
                            ),
                        ],
                        kind="aspernatur",
                    ),
                ),
                rrdatas=[
                    "voluptas",
                    "voluptas",
                ],
                signature_rrdatas=[
                    "nobis",
                    "dolorum",
                ],
                ttl=237807,
                type="minus",
            ),
            shared.ResourceRecordSet(
                kind="dolores",
                name="blanditiis",
                routing_policy=shared.RRSetRoutingPolicy(
                    geo=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="aliquam",
                                            ip_protocol="udp",
                                            kind="temporibus",
                                            load_balancer_type="none",
                                            network_url="adipisci",
                                            port="cum",
                                            project="blanditiis",
                                            region="quas",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="hic",
                                            ip_protocol="undefined",
                                            kind="culpa",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="pariatur",
                                            port="totam",
                                            project="hic",
                                            region="exercitationem",
                                        ),
                                    ],
                                ),
                                kind="nobis",
                                location="sit",
                                rrdatas=[
                                    "sed",
                                    "reiciendis",
                                    "explicabo",
                                ],
                                signature_rrdatas=[
                                    "facilis",
                                    "voluptate",
                                    "expedita",
                                    "ab",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="dolore",
                                            ip_protocol="udp",
                                            kind="sed",
                                            load_balancer_type="none",
                                            network_url="commodi",
                                            port="quidem",
                                            project="explicabo",
                                            region="voluptas",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="unde",
                                            ip_protocol="undefined",
                                            kind="suscipit",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="debitis",
                                            port="illo",
                                            project="reiciendis",
                                            region="perferendis",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="corrupti",
                                            ip_protocol="udp",
                                            kind="incidunt",
                                            load_balancer_type="none",
                                            network_url="provident",
                                            port="eius",
                                            project="necessitatibus",
                                            region="ipsum",
                                        ),
                                    ],
                                ),
                                kind="ea",
                                location="occaecati",
                                rrdatas=[
                                    "voluptatibus",
                                    "tempora",
                                    "tempora",
                                ],
                                signature_rrdatas=[
                                    "reiciendis",
                                    "ex",
                                ],
                            ),
                        ],
                        kind="sit",
                    ),
                    geo_policy=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="praesentium",
                                            ip_protocol="udp",
                                            kind="quaerat",
                                            load_balancer_type="none",
                                            network_url="ipsam",
                                            port="debitis",
                                            project="rem",
                                            region="sit",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="nobis",
                                            ip_protocol="tcp",
                                            kind="veniam",
                                            load_balancer_type="none",
                                            network_url="recusandae",
                                            port="reiciendis",
                                            project="nulla",
                                            region="magni",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="aperiam",
                                            ip_protocol="udp",
                                            kind="numquam",
                                            load_balancer_type="none",
                                            network_url="in",
                                            port="officiis",
                                            project="beatae",
                                            region="laudantium",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="exercitationem",
                                            ip_protocol="tcp",
                                            kind="cum",
                                            load_balancer_type="none",
                                            network_url="dolorum",
                                            port="voluptatum",
                                            project="error",
                                            region="hic",
                                        ),
                                    ],
                                ),
                                kind="expedita",
                                location="debitis",
                                rrdatas=[
                                    "dolorum",
                                ],
                                signature_rrdatas=[
                                    "officia",
                                    "dolorum",
                                ],
                            ),
                        ],
                        kind="corrupti",
                    ),
                    kind="accusamus",
                    primary_backup=shared.RRSetRoutingPolicyPrimaryBackupPolicy(
                        backup_geo_targets=shared.RRSetRoutingPolicyGeoPolicy(
                            enable_fencing=False,
                            items=[
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="fugit",
                                                ip_protocol="undefined",
                                                kind="fugiat",
                                                load_balancer_type="none",
                                                network_url="culpa",
                                                port="expedita",
                                                project="magnam",
                                                region="consequatur",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="esse",
                                                ip_protocol="tcp",
                                                kind="sit",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="quas",
                                                port="repudiandae",
                                                project="corporis",
                                                region="et",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="blanditiis",
                                                ip_protocol="tcp",
                                                kind="sed",
                                                load_balancer_type="none",
                                                network_url="vel",
                                                port="nostrum",
                                                project="saepe",
                                                region="error",
                                            ),
                                        ],
                                    ),
                                    kind="consequatur",
                                    location="incidunt",
                                    rrdatas=[
                                        "dolorem",
                                        "harum",
                                        "dicta",
                                        "architecto",
                                    ],
                                    signature_rrdatas=[
                                        "labore",
                                        "quidem",
                                        "atque",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="nam",
                                                ip_protocol="udp",
                                                kind="laboriosam",
                                                load_balancer_type="none",
                                                network_url="amet",
                                                port="deserunt",
                                                project="voluptate",
                                                region="unde",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="reiciendis",
                                                ip_protocol="tcp",
                                                kind="repellendus",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="voluptates",
                                                port="perferendis",
                                                project="est",
                                                region="quidem",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="reprehenderit",
                                                ip_protocol="udp",
                                                kind="fuga",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="mollitia",
                                                port="veniam",
                                                project="voluptatem",
                                                region="quisquam",
                                            ),
                                        ],
                                    ),
                                    kind="repudiandae",
                                    location="quasi",
                                    rrdatas=[
                                        "reprehenderit",
                                        "asperiores",
                                        "totam",
                                    ],
                                    signature_rrdatas=[
                                        "quidem",
                                        "maxime",
                                    ],
                                ),
                            ],
                            kind="et",
                        ),
                        kind="esse",
                        primary_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                            internal_load_balancers=[
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="assumenda",
                                    ip_protocol="tcp",
                                    kind="atque",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="officiis",
                                    port="officiis",
                                    project="accusamus",
                                    region="natus",
                                ),
                            ],
                        ),
                        trickle_traffic=3283.03,
                    ),
                    wrr=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="maiores",
                                            ip_protocol="tcp",
                                            kind="at",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="blanditiis",
                                            port="suscipit",
                                            project="repudiandae",
                                            region="atque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="atque",
                                            ip_protocol="undefined",
                                            kind="recusandae",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="repellendus",
                                            port="labore",
                                            project="reiciendis",
                                            region="doloremque",
                                        ),
                                    ],
                                ),
                                kind="repudiandae",
                                rrdatas=[
                                    "accusantium",
                                ],
                                signature_rrdatas=[
                                    "dolores",
                                ],
                                weight=3164.88,
                            ),
                        ],
                        kind="laboriosam",
                    ),
                    wrr_policy=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="molestias",
                                            ip_protocol="undefined",
                                            kind="saepe",
                                            load_balancer_type="none",
                                            network_url="occaecati",
                                            port="officiis",
                                            project="perspiciatis",
                                            region="in",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="adipisci",
                                            ip_protocol="udp",
                                            kind="occaecati",
                                            load_balancer_type="none",
                                            network_url="fugit",
                                            port="id",
                                            project="quis",
                                            region="reprehenderit",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="error",
                                            ip_protocol="undefined",
                                            kind="corporis",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="eveniet",
                                            port="non",
                                            project="vero",
                                            region="doloremque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="iure",
                                            ip_protocol="undefined",
                                            kind="totam",
                                            load_balancer_type="none",
                                            network_url="molestiae",
                                            port="eveniet",
                                            project="qui",
                                            region="cum",
                                        ),
                                    ],
                                ),
                                kind="iure",
                                rrdatas=[
                                    "ratione",
                                    "laborum",
                                    "distinctio",
                                    "voluptatum",
                                ],
                                signature_rrdatas=[
                                    "aliquam",
                                    "ad",
                                    "repellat",
                                ],
                                weight=30.99,
                            ),
                        ],
                        kind="corporis",
                    ),
                ),
                rrdatas=[
                    "nihil",
                    "mollitia",
                    "voluptas",
                ],
                signature_rrdatas=[
                    "maiores",
                ],
                ttl=970222,
                type="dolores",
            ),
        ],
        deletions=[
            shared.ResourceRecordSet(
                kind="minima",
                name="dolore",
                routing_policy=shared.RRSetRoutingPolicy(
                    geo=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quae",
                                            ip_protocol="udp",
                                            kind="omnis",
                                            load_balancer_type="none",
                                            network_url="molestiae",
                                            port="ex",
                                            project="ut",
                                            region="culpa",
                                        ),
                                    ],
                                ),
                                kind="adipisci",
                                location="debitis",
                                rrdatas=[
                                    "eum",
                                    "nemo",
                                    "recusandae",
                                ],
                                signature_rrdatas=[
                                    "provident",
                                    "quis",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="reiciendis",
                                            ip_protocol="tcp",
                                            kind="aspernatur",
                                            load_balancer_type="none",
                                            network_url="quasi",
                                            port="animi",
                                            project="nostrum",
                                            region="mollitia",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="provident",
                                            ip_protocol="udp",
                                            kind="animi",
                                            load_balancer_type="none",
                                            network_url="aliquid",
                                            port="accusantium",
                                            project="repellat",
                                            region="doloribus",
                                        ),
                                    ],
                                ),
                                kind="ullam",
                                location="in",
                                rrdatas=[
                                    "earum",
                                    "officia",
                                    "laborum",
                                ],
                                signature_rrdatas=[
                                    "modi",
                                    "voluptatibus",
                                    "molestias",
                                    "officiis",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="cumque",
                                            ip_protocol="undefined",
                                            kind="rerum",
                                            load_balancer_type="none",
                                            network_url="quis",
                                            port="inventore",
                                            project="fugit",
                                            region="cumque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quae",
                                            ip_protocol="undefined",
                                            kind="velit",
                                            load_balancer_type="none",
                                            network_url="eum",
                                            port="eius",
                                            project="rem",
                                            region="at",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="impedit",
                                            ip_protocol="undefined",
                                            kind="sapiente",
                                            load_balancer_type="none",
                                            network_url="dicta",
                                            port="minima",
                                            project="beatae",
                                            region="cupiditate",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="provident",
                                            ip_protocol="udp",
                                            kind="soluta",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="illum",
                                            port="eaque",
                                            project="earum",
                                            region="perspiciatis",
                                        ),
                                    ],
                                ),
                                kind="maiores",
                                location="debitis",
                                rrdatas=[
                                    "porro",
                                    "suscipit",
                                ],
                                signature_rrdatas=[
                                    "fugit",
                                ],
                            ),
                        ],
                        kind="cumque",
                    ),
                    geo_policy=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="animi",
                                            ip_protocol="udp",
                                            kind="nulla",
                                            load_balancer_type="none",
                                            network_url="quasi",
                                            port="et",
                                            project="ducimus",
                                            region="natus",
                                        ),
                                    ],
                                ),
                                kind="occaecati",
                                location="suscipit",
                                rrdatas=[
                                    "quasi",
                                ],
                                signature_rrdatas=[
                                    "doloribus",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="necessitatibus",
                                            ip_protocol="undefined",
                                            kind="tempora",
                                            load_balancer_type="none",
                                            network_url="molestiae",
                                            port="dicta",
                                            project="iusto",
                                            region="esse",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="praesentium",
                                            ip_protocol="udp",
                                            kind="reiciendis",
                                            load_balancer_type="none",
                                            network_url="architecto",
                                            port="fugiat",
                                            project="doloremque",
                                            region="dicta",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="odio",
                                            ip_protocol="undefined",
                                            kind="esse",
                                            load_balancer_type="none",
                                            network_url="consectetur",
                                            port="aliquid",
                                            project="ipsa",
                                            region="laborum",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="sunt",
                                            ip_protocol="tcp",
                                            kind="fugiat",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="aliquid",
                                            port="officia",
                                            project="suscipit",
                                            region="aliquid",
                                        ),
                                    ],
                                ),
                                kind="perferendis",
                                location="eum",
                                rrdatas=[
                                    "iste",
                                    "id",
                                ],
                                signature_rrdatas=[
                                    "error",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptates",
                                            ip_protocol="tcp",
                                            kind="laborum",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="ad",
                                            port="deleniti",
                                            project="enim",
                                            region="vitae",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="repellendus",
                                            ip_protocol="tcp",
                                            kind="quo",
                                            load_balancer_type="none",
                                            network_url="ut",
                                            port="ad",
                                            project="expedita",
                                            region="voluptatem",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="molestias",
                                            ip_protocol="udp",
                                            kind="aliquid",
                                            load_balancer_type="none",
                                            network_url="voluptatum",
                                            port="omnis",
                                            project="veritatis",
                                            region="rerum",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="est",
                                            ip_protocol="tcp",
                                            kind="voluptatem",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="officiis",
                                            port="architecto",
                                            project="fuga",
                                            region="pariatur",
                                        ),
                                    ],
                                ),
                                kind="debitis",
                                location="voluptatem",
                                rrdatas=[
                                    "deleniti",
                                ],
                                signature_rrdatas=[
                                    "ex",
                                    "sapiente",
                                    "rem",
                                    "minus",
                                ],
                            ),
                        ],
                        kind="nemo",
                    ),
                    kind="asperiores",
                    primary_backup=shared.RRSetRoutingPolicyPrimaryBackupPolicy(
                        backup_geo_targets=shared.RRSetRoutingPolicyGeoPolicy(
                            enable_fencing=False,
                            items=[
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="perferendis",
                                                ip_protocol="udp",
                                                kind="totam",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="quibusdam",
                                                port="nam",
                                                project="ipsam",
                                                region="culpa",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="dolor",
                                                ip_protocol="undefined",
                                                kind="inventore",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="veritatis",
                                                port="tempora",
                                                project="dolor",
                                                region="consequatur",
                                            ),
                                        ],
                                    ),
                                    kind="architecto",
                                    location="sit",
                                    rrdatas=[
                                        "fugit",
                                        "ab",
                                    ],
                                    signature_rrdatas=[
                                        "quae",
                                        "dolor",
                                        "fugiat",
                                    ],
                                ),
                            ],
                            kind="ipsam",
                        ),
                        kind="consequuntur",
                        primary_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                            internal_load_balancers=[
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="quas",
                                    ip_protocol="udp",
                                    kind="impedit",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="esse",
                                    port="necessitatibus",
                                    project="sed",
                                    region="veniam",
                                ),
                            ],
                        ),
                        trickle_traffic=1995.96,
                    ),
                    wrr=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vel",
                                            ip_protocol="tcp",
                                            kind="magnam",
                                            load_balancer_type="none",
                                            network_url="ab",
                                            port="porro",
                                            project="autem",
                                            region="nobis",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="laboriosam",
                                            ip_protocol="udp",
                                            kind="consequuntur",
                                            load_balancer_type="none",
                                            network_url="exercitationem",
                                            port="necessitatibus",
                                            project="quasi",
                                            region="nisi",
                                        ),
                                    ],
                                ),
                                kind="at",
                                rrdatas=[
                                    "est",
                                    "harum",
                                    "sequi",
                                    "doloribus",
                                ],
                                signature_rrdatas=[
                                    "optio",
                                    "occaecati",
                                    "nemo",
                                    "voluptate",
                                ],
                                weight=5010.63,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptas",
                                            ip_protocol="undefined",
                                            kind="nemo",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="eius",
                                            port="aspernatur",
                                            project="ducimus",
                                            region="nesciunt",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="fuga",
                                            ip_protocol="tcp",
                                            kind="incidunt",
                                            load_balancer_type="none",
                                            network_url="rem",
                                            port="fugiat",
                                            project="dicta",
                                            region="nisi",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="consequuntur",
                                            ip_protocol="undefined",
                                            kind="aperiam",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="reiciendis",
                                            port="soluta",
                                            project="alias",
                                            region="omnis",
                                        ),
                                    ],
                                ),
                                kind="eos",
                                rrdatas=[
                                    "iste",
                                    "magni",
                                    "inventore",
                                ],
                                signature_rrdatas=[
                                    "accusamus",
                                    "voluptatibus",
                                    "distinctio",
                                ],
                                weight=6085.93,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="minima",
                                            ip_protocol="tcp",
                                            kind="maxime",
                                            load_balancer_type="none",
                                            network_url="temporibus",
                                            port="quos",
                                            project="commodi",
                                            region="itaque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="commodi",
                                            ip_protocol="tcp",
                                            kind="earum",
                                            load_balancer_type="none",
                                            network_url="nam",
                                            port="vero",
                                            project="voluptatem",
                                            region="ipsam",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vel",
                                            ip_protocol="undefined",
                                            kind="quasi",
                                            load_balancer_type="none",
                                            network_url="maiores",
                                            port="enim",
                                            project="sint",
                                            region="nulla",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="deserunt",
                                            ip_protocol="tcp",
                                            kind="nemo",
                                            load_balancer_type="none",
                                            network_url="est",
                                            port="quis",
                                            project="sint",
                                            region="accusamus",
                                        ),
                                    ],
                                ),
                                kind="impedit",
                                rrdatas=[
                                    "necessitatibus",
                                    "asperiores",
                                    "ex",
                                    "voluptas",
                                ],
                                signature_rrdatas=[
                                    "delectus",
                                    "quae",
                                    "minus",
                                    "fuga",
                                ],
                                weight=6756.89,
                            ),
                        ],
                        kind="consectetur",
                    ),
                    wrr_policy=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ipsum",
                                            ip_protocol="udp",
                                            kind="magni",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="repudiandae",
                                            port="nam",
                                            project="dolore",
                                            region="iusto",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptate",
                                            ip_protocol="undefined",
                                            kind="dignissimos",
                                            load_balancer_type="none",
                                            network_url="quo",
                                            port="deleniti",
                                            project="quibusdam",
                                            region="iure",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="odit",
                                            ip_protocol="udp",
                                            kind="vel",
                                            load_balancer_type="none",
                                            network_url="quibusdam",
                                            port="inventore",
                                            project="facere",
                                            region="libero",
                                        ),
                                    ],
                                ),
                                kind="architecto",
                                rrdatas=[
                                    "quia",
                                    "porro",
                                    "aliquam",
                                    "velit",
                                ],
                                signature_rrdatas=[
                                    "accusantium",
                                ],
                                weight=4246.63,
                            ),
                        ],
                        kind="ea",
                    ),
                ),
                rrdatas=[
                    "vero",
                ],
                signature_rrdatas=[
                    "eum",
                    "velit",
                    "ut",
                ],
                ttl=596433,
                type="earum",
            ),
            shared.ResourceRecordSet(
                kind="dicta",
                name="impedit",
                routing_policy=shared.RRSetRoutingPolicy(
                    geo=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="itaque",
                                            ip_protocol="undefined",
                                            kind="nisi",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="velit",
                                            port="laborum",
                                            project="non",
                                            region="dolor",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="iusto",
                                            ip_protocol="undefined",
                                            kind="doloremque",
                                            load_balancer_type="none",
                                            network_url="officia",
                                            port="recusandae",
                                            project="ea",
                                            region="quidem",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptas",
                                            ip_protocol="udp",
                                            kind="placeat",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="expedita",
                                            port="deleniti",
                                            project="a",
                                            region="voluptate",
                                        ),
                                    ],
                                ),
                                kind="ullam",
                                location="unde",
                                rrdatas=[
                                    "animi",
                                    "impedit",
                                    "ipsam",
                                    "corporis",
                                ],
                                signature_rrdatas=[
                                    "error",
                                    "esse",
                                    "labore",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vero",
                                            ip_protocol="undefined",
                                            kind="vitae",
                                            load_balancer_type="none",
                                            network_url="dolorem",
                                            port="ad",
                                            project="qui",
                                            region="iste",
                                        ),
                                    ],
                                ),
                                kind="ex",
                                location="nemo",
                                rrdatas=[
                                    "libero",
                                    "rem",
                                    "dolorum",
                                ],
                                signature_rrdatas=[
                                    "fugit",
                                    "alias",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="vel",
                                            ip_protocol="undefined",
                                            kind="quae",
                                            load_balancer_type="none",
                                            network_url="neque",
                                            port="exercitationem",
                                            project="itaque",
                                            region="et",
                                        ),
                                    ],
                                ),
                                kind="ipsum",
                                location="unde",
                                rrdatas=[
                                    "distinctio",
                                    "maxime",
                                    "quia",
                                    "quia",
                                ],
                                signature_rrdatas=[
                                    "omnis",
                                    "libero",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="id",
                                            ip_protocol="udp",
                                            kind="fugiat",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="quos",
                                            port="placeat",
                                            project="sit",
                                            region="iusto",
                                        ),
                                    ],
                                ),
                                kind="ipsa",
                                location="voluptates",
                                rrdatas=[
                                    "aperiam",
                                ],
                                signature_rrdatas=[
                                    "dolore",
                                    "eligendi",
                                    "distinctio",
                                ],
                            ),
                        ],
                        kind="voluptatem",
                    ),
                    geo_policy=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="dolores",
                                            ip_protocol="udp",
                                            kind="beatae",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="facere",
                                            port="corrupti",
                                            project="molestiae",
                                            region="provident",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="accusamus",
                                            ip_protocol="udp",
                                            kind="tempore",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="ea",
                                            port="autem",
                                            project="ipsam",
                                            region="rerum",
                                        ),
                                    ],
                                ),
                                kind="laudantium",
                                location="corporis",
                                rrdatas=[
                                    "voluptatibus",
                                    "cum",
                                    "at",
                                    "alias",
                                ],
                                signature_rrdatas=[
                                    "quidem",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="repudiandae",
                                            ip_protocol="undefined",
                                            kind="expedita",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="eos",
                                            port="quibusdam",
                                            project="odio",
                                            region="praesentium",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="odit",
                                            ip_protocol="undefined",
                                            kind="corporis",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="earum",
                                            port="adipisci",
                                            project="recusandae",
                                            region="similique",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ut",
                                            ip_protocol="udp",
                                            kind="quis",
                                            load_balancer_type="none",
                                            network_url="unde",
                                            port="molestiae",
                                            project="delectus",
                                            region="cupiditate",
                                        ),
                                    ],
                                ),
                                kind="fugit",
                                location="numquam",
                                rrdatas=[
                                    "nesciunt",
                                    "at",
                                ],
                                signature_rrdatas=[
                                    "dignissimos",
                                    "optio",
                                    "necessitatibus",
                                ],
                            ),
                        ],
                        kind="corporis",
                    ),
                    kind="qui",
                    primary_backup=shared.RRSetRoutingPolicyPrimaryBackupPolicy(
                        backup_geo_targets=shared.RRSetRoutingPolicyGeoPolicy(
                            enable_fencing=False,
                            items=[
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="cupiditate",
                                                ip_protocol="undefined",
                                                kind="placeat",
                                                load_balancer_type="none",
                                                network_url="neque",
                                                port="in",
                                                project="minus",
                                                region="eum",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="modi",
                                                ip_protocol="tcp",
                                                kind="magnam",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="maiores",
                                                port="tempore",
                                                project="aperiam",
                                                region="libero",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="ratione",
                                                ip_protocol="undefined",
                                                kind="totam",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="voluptas",
                                                port="quo",
                                                project="velit",
                                                region="minus",
                                            ),
                                        ],
                                    ),
                                    kind="fuga",
                                    location="nostrum",
                                    rrdatas=[
                                        "impedit",
                                        "delectus",
                                        "tempore",
                                    ],
                                    signature_rrdatas=[
                                        "odit",
                                        "repellat",
                                        "pariatur",
                                        "nemo",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="aperiam",
                                                ip_protocol="tcp",
                                                kind="minima",
                                                load_balancer_type="none",
                                                network_url="ducimus",
                                                port="excepturi",
                                                project="dolores",
                                                region="error",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="veritatis",
                                                ip_protocol="tcp",
                                                kind="voluptate",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="itaque",
                                                port="similique",
                                                project="optio",
                                                region="ex",
                                            ),
                                        ],
                                    ),
                                    kind="quaerat",
                                    location="commodi",
                                    rrdatas=[
                                        "placeat",
                                        "quidem",
                                        "exercitationem",
                                        "quam",
                                    ],
                                    signature_rrdatas=[
                                        "modi",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="sint",
                                                ip_protocol="udp",
                                                kind="sequi",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="cum",
                                                port="dicta",
                                                project="earum",
                                                region="veniam",
                                            ),
                                        ],
                                    ),
                                    kind="animi",
                                    location="dolores",
                                    rrdatas=[
                                        "dicta",
                                        "consequuntur",
                                        "necessitatibus",
                                    ],
                                    signature_rrdatas=[
                                        "ipsa",
                                        "ducimus",
                                        "maiores",
                                    ],
                                ),
                            ],
                            kind="veritatis",
                        ),
                        kind="quasi",
                        primary_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                            internal_load_balancers=[
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="pariatur",
                                    ip_protocol="udp",
                                    kind="excepturi",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="nemo",
                                    port="aliquam",
                                    project="nostrum",
                                    region="doloribus",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="eligendi",
                                    ip_protocol="tcp",
                                    kind="enim",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="animi",
                                    port="quas",
                                    project="totam",
                                    region="molestias",
                                ),
                            ],
                        ),
                        trickle_traffic=4849.66,
                    ),
                    wrr=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="architecto",
                                            ip_protocol="tcp",
                                            kind="iste",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="tempore",
                                            port="libero",
                                            project="velit",
                                            region="doloremque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="delectus",
                                            ip_protocol="udp",
                                            kind="cum",
                                            load_balancer_type="none",
                                            network_url="adipisci",
                                            port="saepe",
                                            project="deserunt",
                                            region="doloremque",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quis",
                                            ip_protocol="undefined",
                                            kind="libero",
                                            load_balancer_type="none",
                                            network_url="cupiditate",
                                            port="molestiae",
                                            project="eligendi",
                                            region="possimus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="non",
                                            ip_protocol="undefined",
                                            kind="itaque",
                                            load_balancer_type="none",
                                            network_url="asperiores",
                                            port="veniam",
                                            project="consequuntur",
                                            region="facere",
                                        ),
                                    ],
                                ),
                                kind="laudantium",
                                rrdatas=[
                                    "pariatur",
                                ],
                                signature_rrdatas=[
                                    "exercitationem",
                                ],
                                weight=688.52,
                            ),
                        ],
                        kind="velit",
                    ),
                    wrr_policy=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="nisi",
                                            ip_protocol="udp",
                                            kind="quaerat",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="distinctio",
                                            port="nisi",
                                            project="quis",
                                            region="nisi",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="libero",
                                            ip_protocol="udp",
                                            kind="facere",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="ipsum",
                                            port="ad",
                                            project="voluptatibus",
                                            region="voluptatibus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="consequuntur",
                                            ip_protocol="udp",
                                            kind="labore",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="eos",
                                            port="reprehenderit",
                                            project="nostrum",
                                            region="neque",
                                        ),
                                    ],
                                ),
                                kind="iusto",
                                rrdatas=[
                                    "rem",
                                    "eligendi",
                                    "fugiat",
                                ],
                                signature_rrdatas=[
                                    "officiis",
                                    "ducimus",
                                    "dolor",
                                ],
                                weight=1180.41,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="porro",
                                            ip_protocol="undefined",
                                            kind="dignissimos",
                                            load_balancer_type="none",
                                            network_url="fugiat",
                                            port="ad",
                                            project="aspernatur",
                                            region="enim",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="delectus",
                                            ip_protocol="tcp",
                                            kind="dignissimos",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="illo",
                                            port="ab",
                                            project="incidunt",
                                            region="accusamus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="saepe",
                                            ip_protocol="udp",
                                            kind="veniam",
                                            load_balancer_type="none",
                                            network_url="reiciendis",
                                            port="earum",
                                            project="reprehenderit",
                                            region="praesentium",
                                        ),
                                    ],
                                ),
                                kind="nemo",
                                rrdatas=[
                                    "quisquam",
                                    "sequi",
                                    "nihil",
                                    "deleniti",
                                ],
                                signature_rrdatas=[
                                    "labore",
                                ],
                                weight=8288.41,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quisquam",
                                            ip_protocol="tcp",
                                            kind="laudantium",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="consequatur",
                                            port="maxime",
                                            project="aspernatur",
                                            region="nam",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="expedita",
                                            ip_protocol="tcp",
                                            kind="provident",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="rerum",
                                            port="dignissimos",
                                            project="corporis",
                                            region="vero",
                                        ),
                                    ],
                                ),
                                kind="similique",
                                rrdatas=[
                                    "iure",
                                    "dolorem",
                                    "commodi",
                                    "impedit",
                                ],
                                signature_rrdatas=[
                                    "aut",
                                    "voluptatem",
                                ],
                                weight=3228.29,
                            ),
                        ],
                        kind="quae",
                    ),
                ),
                rrdatas=[
                    "illum",
                ],
                signature_rrdatas=[
                    "quidem",
                    "cum",
                    "amet",
                ],
                ttl=97676,
                type="dicta",
            ),
            shared.ResourceRecordSet(
                kind="laudantium",
                name="doloremque",
                routing_policy=shared.RRSetRoutingPolicy(
                    geo=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="amet",
                                            ip_protocol="tcp",
                                            kind="dolorum",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="provident",
                                            port="repudiandae",
                                            project="consequatur",
                                            region="nemo",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="molestiae",
                                            ip_protocol="udp",
                                            kind="facilis",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="aperiam",
                                            port="sint",
                                            project="accusamus",
                                            region="eos",
                                        ),
                                    ],
                                ),
                                kind="totam",
                                location="dicta",
                                rrdatas=[
                                    "velit",
                                ],
                                signature_rrdatas=[
                                    "sunt",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="dolor",
                                            ip_protocol="tcp",
                                            kind="atque",
                                            load_balancer_type="none",
                                            network_url="at",
                                            port="labore",
                                            project="minus",
                                            region="esse",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="voluptatem",
                                            ip_protocol="undefined",
                                            kind="rerum",
                                            load_balancer_type="none",
                                            network_url="aperiam",
                                            port="dignissimos",
                                            project="repellat",
                                            region="velit",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="porro",
                                            ip_protocol="tcp",
                                            kind="consectetur",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="dignissimos",
                                            port="consectetur",
                                            project="soluta",
                                            region="natus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="temporibus",
                                            ip_protocol="tcp",
                                            kind="amet",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="aspernatur",
                                            port="quo",
                                            project="itaque",
                                            region="illum",
                                        ),
                                    ],
                                ),
                                kind="laborum",
                                location="dignissimos",
                                rrdatas=[
                                    "qui",
                                    "consectetur",
                                    "repellat",
                                    "explicabo",
                                ],
                                signature_rrdatas=[
                                    "exercitationem",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="non",
                                            ip_protocol="undefined",
                                            kind="illo",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="deserunt",
                                            port="delectus",
                                            project="non",
                                            region="distinctio",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="in",
                                            ip_protocol="tcp",
                                            kind="labore",
                                            load_balancer_type="none",
                                            network_url="repudiandae",
                                            port="modi",
                                            project="in",
                                            region="explicabo",
                                        ),
                                    ],
                                ),
                                kind="accusamus",
                                location="rem",
                                rrdatas=[
                                    "odit",
                                ],
                                signature_rrdatas=[
                                    "enim",
                                    "voluptate",
                                    "similique",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="libero",
                                            ip_protocol="undefined",
                                            kind="sit",
                                            load_balancer_type="none",
                                            network_url="eum",
                                            port="nesciunt",
                                            project="mollitia",
                                            region="dignissimos",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="fugiat",
                                            ip_protocol="tcp",
                                            kind="molestiae",
                                            load_balancer_type="none",
                                            network_url="reiciendis",
                                            port="ab",
                                            project="modi",
                                            region="aut",
                                        ),
                                    ],
                                ),
                                kind="aut",
                                location="eveniet",
                                rrdatas=[
                                    "commodi",
                                    "numquam",
                                ],
                                signature_rrdatas=[
                                    "possimus",
                                    "voluptate",
                                    "consectetur",
                                ],
                            ),
                        ],
                        kind="nesciunt",
                    ),
                    geo_policy=shared.RRSetRoutingPolicyGeoPolicy(
                        enable_fencing=False,
                        items=[
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="minus",
                                            ip_protocol="undefined",
                                            kind="distinctio",
                                            load_balancer_type="none",
                                            network_url="quas",
                                            port="et",
                                            project="facilis",
                                            region="amet",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="autem",
                                            ip_protocol="udp",
                                            kind="alias",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="aut",
                                            port="quos",
                                            project="laudantium",
                                            region="repellendus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="veritatis",
                                            ip_protocol="undefined",
                                            kind="eaque",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="delectus",
                                            port="mollitia",
                                            project="nulla",
                                            region="officia",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="sed",
                                            ip_protocol="undefined",
                                            kind="alias",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="hic",
                                            port="voluptatem",
                                            project="incidunt",
                                            region="qui",
                                        ),
                                    ],
                                ),
                                kind="qui",
                                location="necessitatibus",
                                rrdatas=[
                                    "explicabo",
                                    "beatae",
                                    "aliquid",
                                ],
                                signature_rrdatas=[
                                    "optio",
                                    "voluptatibus",
                                ],
                            ),
                            shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="officia",
                                            ip_protocol="udp",
                                            kind="totam",
                                            load_balancer_type="none",
                                            network_url="aliquid",
                                            port="ea",
                                            project="impedit",
                                            region="ducimus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="odit",
                                            ip_protocol="undefined",
                                            kind="reiciendis",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="nulla",
                                            port="laborum",
                                            project="natus",
                                            region="accusamus",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="doloremque",
                                            ip_protocol="tcp",
                                            kind="rerum",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="voluptates",
                                            port="non",
                                            project="rem",
                                            region="quia",
                                        ),
                                    ],
                                ),
                                kind="ullam",
                                location="quisquam",
                                rrdatas=[
                                    "voluptatibus",
                                ],
                                signature_rrdatas=[
                                    "quae",
                                    "officiis",
                                    "architecto",
                                    "architecto",
                                ],
                            ),
                        ],
                        kind="enim",
                    ),
                    kind="optio",
                    primary_backup=shared.RRSetRoutingPolicyPrimaryBackupPolicy(
                        backup_geo_targets=shared.RRSetRoutingPolicyGeoPolicy(
                            enable_fencing=False,
                            items=[
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="facilis",
                                                ip_protocol="udp",
                                                kind="a",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="dicta",
                                                port="quos",
                                                project="ullam",
                                                region="dolore",
                                            ),
                                        ],
                                    ),
                                    kind="modi",
                                    location="itaque",
                                    rrdatas=[
                                        "modi",
                                        "consequuntur",
                                        "assumenda",
                                        "vero",
                                    ],
                                    signature_rrdatas=[
                                        "impedit",
                                        "porro",
                                        "accusamus",
                                        "totam",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="ab",
                                                ip_protocol="tcp",
                                                kind="nihil",
                                                load_balancer_type="none",
                                                network_url="iure",
                                                port="odio",
                                                project="nesciunt",
                                                region="debitis",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="vel",
                                                ip_protocol="undefined",
                                                kind="corporis",
                                                load_balancer_type="none",
                                                network_url="consequuntur",
                                                port="officia",
                                                project="reprehenderit",
                                                region="distinctio",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="eius",
                                                ip_protocol="undefined",
                                                kind="rem",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="accusantium",
                                                port="veniam",
                                                project="saepe",
                                                region="neque",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="facere",
                                                ip_protocol="undefined",
                                                kind="quos",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="fugiat",
                                                port="est",
                                                project="delectus",
                                                region="velit",
                                            ),
                                        ],
                                    ),
                                    kind="vitae",
                                    location="nesciunt",
                                    rrdatas=[
                                        "illo",
                                        "repellat",
                                        "nemo",
                                    ],
                                    signature_rrdatas=[
                                        "possimus",
                                        "unde",
                                        "incidunt",
                                        "explicabo",
                                    ],
                                ),
                                shared.RRSetRoutingPolicyGeoPolicyGeoPolicyItem(
                                    health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                        internal_load_balancers=[
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="cupiditate",
                                                ip_protocol="udp",
                                                kind="alias",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="nesciunt",
                                                port="commodi",
                                                project="sapiente",
                                                region="consequuntur",
                                            ),
                                            shared.RRSetRoutingPolicyLoadBalancerTarget(
                                                ip_address="veniam",
                                                ip_protocol="udp",
                                                kind="officia",
                                                load_balancer_type="regionalL4ilb",
                                                network_url="ut",
                                                port="numquam",
                                                project="tenetur",
                                                region="adipisci",
                                            ),
                                        ],
                                    ),
                                    kind="libero",
                                    location="in",
                                    rrdatas=[
                                        "ex",
                                        "minus",
                                    ],
                                    signature_rrdatas=[
                                        "beatae",
                                    ],
                                ),
                            ],
                            kind="hic",
                        ),
                        kind="nisi",
                        primary_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                            internal_load_balancers=[
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="dolor",
                                    ip_protocol="tcp",
                                    kind="fuga",
                                    load_balancer_type="none",
                                    network_url="architecto",
                                    port="qui",
                                    project="aliquid",
                                    region="magni",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="incidunt",
                                    ip_protocol="undefined",
                                    kind="praesentium",
                                    load_balancer_type="none",
                                    network_url="exercitationem",
                                    port="expedita",
                                    project="facilis",
                                    region="impedit",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="sit",
                                    ip_protocol="tcp",
                                    kind="culpa",
                                    load_balancer_type="none",
                                    network_url="amet",
                                    port="deserunt",
                                    project="modi",
                                    region="veniam",
                                ),
                                shared.RRSetRoutingPolicyLoadBalancerTarget(
                                    ip_address="quod",
                                    ip_protocol="udp",
                                    kind="a",
                                    load_balancer_type="regionalL4ilb",
                                    network_url="enim",
                                    port="doloribus",
                                    project="assumenda",
                                    region="officiis",
                                ),
                            ],
                        ),
                        trickle_traffic=1039.9,
                    ),
                    wrr=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ipsa",
                                            ip_protocol="udp",
                                            kind="necessitatibus",
                                            load_balancer_type="none",
                                            network_url="dicta",
                                            port="vel",
                                            project="perspiciatis",
                                            region="debitis",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="ullam",
                                            ip_protocol="undefined",
                                            kind="accusantium",
                                            load_balancer_type="none",
                                            network_url="veritatis",
                                            port="provident",
                                            project="cumque",
                                            region="iure",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quibusdam",
                                            ip_protocol="udp",
                                            kind="nemo",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="velit",
                                            port="magnam",
                                            project="dignissimos",
                                            region="laboriosam",
                                        ),
                                    ],
                                ),
                                kind="sed",
                                rrdatas=[
                                    "natus",
                                    "provident",
                                ],
                                signature_rrdatas=[
                                    "doloribus",
                                    "facilis",
                                    "quidem",
                                ],
                                weight=9320.8,
                            ),
                        ],
                        kind="laboriosam",
                    ),
                    wrr_policy=shared.RRSetRoutingPolicyWrrPolicy(
                        items=[
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="perspiciatis",
                                            ip_protocol="udp",
                                            kind="cum",
                                            load_balancer_type="none",
                                            network_url="libero",
                                            port="nam",
                                            project="incidunt",
                                            region="recusandae",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="quod",
                                            ip_protocol="tcp",
                                            kind="saepe",
                                            load_balancer_type="none",
                                            network_url="quo",
                                            port="nesciunt",
                                            project="illum",
                                            region="nemo",
                                        ),
                                    ],
                                ),
                                kind="illum",
                                rrdatas=[
                                    "non",
                                    "mollitia",
                                    "assumenda",
                                ],
                                signature_rrdatas=[
                                    "distinctio",
                                    "pariatur",
                                    "ad",
                                    "facere",
                                ],
                                weight=6746.83,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="laborum",
                                            ip_protocol="undefined",
                                            kind="maxime",
                                            load_balancer_type="none",
                                            network_url="alias",
                                            port="suscipit",
                                            project="deserunt",
                                            region="molestias",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="laborum",
                                            ip_protocol="udp",
                                            kind="occaecati",
                                            load_balancer_type="none",
                                            network_url="quo",
                                            port="perferendis",
                                            project="fugit",
                                            region="aliquid",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="magnam",
                                            ip_protocol="undefined",
                                            kind="eligendi",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="nostrum",
                                            port="officiis",
                                            project="unde",
                                            region="nulla",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="error",
                                            ip_protocol="tcp",
                                            kind="magnam",
                                            load_balancer_type="none",
                                            network_url="esse",
                                            port="corrupti",
                                            project="fuga",
                                            region="facere",
                                        ),
                                    ],
                                ),
                                kind="impedit",
                                rrdatas=[
                                    "deserunt",
                                ],
                                signature_rrdatas=[
                                    "laboriosam",
                                    "doloremque",
                                    "voluptatem",
                                    "facere",
                                ],
                                weight=9010.08,
                            ),
                            shared.RRSetRoutingPolicyWrrPolicyWrrPolicyItem(
                                health_checked_targets=shared.RRSetRoutingPolicyHealthCheckTargets(
                                    internal_load_balancers=[
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="consequatur",
                                            ip_protocol="undefined",
                                            kind="architecto",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="porro",
                                            port="blanditiis",
                                            project="quae",
                                            region="magni",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="officiis",
                                            ip_protocol="undefined",
                                            kind="necessitatibus",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="ipsa",
                                            port="excepturi",
                                            project="a",
                                            region="maiores",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="laudantium",
                                            ip_protocol="udp",
                                            kind="alias",
                                            load_balancer_type="regionalL4ilb",
                                            network_url="rem",
                                            port="dicta",
                                            project="suscipit",
                                            region="earum",
                                        ),
                                        shared.RRSetRoutingPolicyLoadBalancerTarget(
                                            ip_address="doloribus",
                                            ip_protocol="undefined",
                                            kind="eius",
                                            load_balancer_type="none",
                                            network_url="in",
                                            port="eligendi",
                                            project="quasi",
                                            region="neque",
                                        ),
                                    ],
                                ),
                                kind="vero",
                                rrdatas=[
                                    "accusantium",
                                    "qui",
                                    "impedit",
                                ],
                                signature_rrdatas=[
                                    "incidunt",
                                ],
                                weight=1165.58,
                            ),
                        ],
                        kind="odit",
                    ),
                ),
                rrdatas=[
                    "rerum",
                    "alias",
                ],
                signature_rrdatas=[
                    "vel",
                    "accusantium",
                    "id",
                ],
                ttl=388169,
                type="ex",
            ),
        ],
        id="quas",
        is_serving=False,
        kind="veritatis",
        start_time="ullam",
        status="pending",
    ),
    access_token="similique",
    alt="json",
    callback="quam",
    client_operation_id="magni",
    fields_="deserunt",
    key="delectus",
    managed_zone="omnis",
    oauth_token="sed",
    pretty_print=False,
    project="nesciunt",
    quota_user="maxime",
    upload_type="quis",
    upload_protocol="cupiditate",
)
    
res = s.changes.dns_changes_create(req, operations.DNSChangesCreateSecurity(
    option1=operations.DNSChangesCreateSecurityOption1(
        oauth2="Bearer YOUR_ACCESS_TOKEN_HERE",
        oauth2c="Bearer YOUR_ACCESS_TOKEN_HERE",
    ),
))

if res.change is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### changes

* `dns_changes_create` - Atomically updates the ResourceRecordSet collection.
* `dns_changes_get` - Fetches the representation of an existing Change.
* `dns_changes_list` - Enumerates Changes to a ResourceRecordSet collection.

### dns_keys

* `dns_dns_keys_get` - Fetches the representation of an existing DnsKey.
* `dns_dns_keys_list` - Enumerates DnsKeys to a ResourceRecordSet collection.

### managed_zone_operations

* `dns_managed_zone_operations_get` - Fetches the representation of an existing Operation.
* `dns_managed_zone_operations_list` - Enumerates Operations for the given ManagedZone.

### managed_zones

* `dns_managed_zones_create` - Creates a new ManagedZone.
* `dns_managed_zones_delete` - Deletes a previously created ManagedZone.
* `dns_managed_zones_get` - Fetches the representation of an existing ManagedZone.
* `dns_managed_zones_get_iam_policy` - Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
* `dns_managed_zones_list` - Enumerates ManagedZones that have been created but not yet deleted.
* `dns_managed_zones_patch` - Applies a partial update to an existing ManagedZone.
* `dns_managed_zones_set_iam_policy` - Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
* `dns_managed_zones_test_iam_permissions` - Returns permissions that a caller has on the specified resource. If the resource does not exist, this returns an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.
* `dns_managed_zones_update` - Updates an existing ManagedZone.

### policies

* `dns_policies_create` - Creates a new Policy.
* `dns_policies_delete` - Deletes a previously created Policy. Fails if the policy is still being referenced by a network.
* `dns_policies_get` - Fetches the representation of an existing Policy.
* `dns_policies_list` - Enumerates all Policies associated with a project.
* `dns_policies_patch` - Applies a partial update to an existing Policy.
* `dns_policies_update` - Updates an existing Policy.

### projects

* `dns_projects_get` - Fetches the representation of an existing Project.

### resource_record_sets

* `dns_resource_record_sets_create` - Creates a new ResourceRecordSet.
* `dns_resource_record_sets_delete` - Deletes a previously created ResourceRecordSet.
* `dns_resource_record_sets_get` - Fetches the representation of an existing ResourceRecordSet.
* `dns_resource_record_sets_list` - Enumerates ResourceRecordSets that you have created but not yet deleted.
* `dns_resource_record_sets_patch` - Applies a partial update to an existing ResourceRecordSet.

### response_policies

* `dns_response_policies_create` - Creates a new Response Policy
* `dns_response_policies_delete` - Deletes a previously created Response Policy. Fails if the response policy is non-empty or still being referenced by a network.
* `dns_response_policies_get` - Fetches the representation of an existing Response Policy.
* `dns_response_policies_list` - Enumerates all Response Policies associated with a project.
* `dns_response_policies_patch` - Applies a partial update to an existing Response Policy.
* `dns_response_policies_update` - Updates an existing Response Policy.

### response_policy_rules

* `dns_response_policy_rules_create` - Creates a new Response Policy Rule.
* `dns_response_policy_rules_delete` - Deletes a previously created Response Policy Rule.
* `dns_response_policy_rules_get` - Fetches the representation of an existing Response Policy Rule.
* `dns_response_policy_rules_list` - Enumerates all Response Policy Rules associated with a project.
* `dns_response_policy_rules_patch` - Applies a partial update to an existing Response Policy Rule.
* `dns_response_policy_rules_update` - Updates an existing Response Policy Rule.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
