/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.
 */
export class FirstLastNameDiasporaedOut extends SpeakeasyBase {
  /**
   * From input data, the countryIso2 of geographic context (US,CA etc.)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "countryIso2" })
  countryIso2?: string;

  /**
   * List most likely ethnicities (top 10)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ethnicitiesTop" })
  ethnicitiesTop?: string[];

  /**
   * The most likely ethnicity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ethnicity" })
  ethnicity?: string;

  /**
   * The second best alternative ethnicity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ethnicityAlt" })
  ethnicityAlt?: string;

  /**
   * The first name (also known as given name)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The last name (also known as family name, or surname)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  /**
   * Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lifted" })
  lifted?: boolean;

  /**
   * The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "probabilityAltCalibrated" })
  probabilityAltCalibrated?: number;

  /**
   * The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "probabilityCalibrated" })
  probabilityCalibrated?: number;

  /**
   * Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "script" })
  script?: string;
}
