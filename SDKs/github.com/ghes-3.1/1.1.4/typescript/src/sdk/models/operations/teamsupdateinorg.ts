/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * **Deprecated**. The permission that new repositories will be added to the team with when none is specified.
 */
export enum TeamsUpdateInOrgRequestBodyPermissionEnum {
  Pull = "pull",
  Push = "push",
  Admin = "admin",
}

/**
 * The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:
 *
 * @remarks
 * **For a non-nested team:**
 * \* `secret` - only visible to organization owners and members of this team.
 * \* `closed` - visible to all members of this organization.
 * **For a parent or child team:**
 * \* `closed` - visible to all members of this organization.
 */
export enum TeamsUpdateInOrgRequestBodyPrivacyEnum {
  Secret = "secret",
  Closed = "closed",
}

export class TeamsUpdateInOrgRequestBody extends SpeakeasyBase {
  /**
   * The description of the team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The name of the team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The ID of a team to set as the parent team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_team_id" })
  parentTeamId?: number;

  /**
   * **Deprecated**. The permission that new repositories will be added to the team with when none is specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission?: TeamsUpdateInOrgRequestBodyPermissionEnum;

  /**
   * The level of privacy this team should have. Editing teams without specifying this parameter leaves `privacy` intact. When a team is nested, the `privacy` for parent teams cannot be `secret`. The options are:
   *
   * @remarks
   * **For a non-nested team:**
   * \* `secret` - only visible to organization owners and members of this team.
   * \* `closed` - visible to all members of this organization.
   * **For a parent or child team:**
   * \* `closed` - visible to all members of this organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  privacy?: TeamsUpdateInOrgRequestBodyPrivacyEnum;
}

export class TeamsUpdateInOrgRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: TeamsUpdateInOrgRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * The slug of the team name.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_slug",
  })
  teamSlug: string;
}

export class TeamsUpdateInOrgResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  teamFull?: shared.TeamFull;
}
