/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetFeaturedImageCollectionListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

/**
 * Cover image size
 */
export enum GetFeaturedImageCollectionListAssetHintEnum {
  Onex = "1x",
  Twox = "2x",
}

/**
 * Which sharing information to include in the response, such as a URL to the collection
 */
export enum GetFeaturedImageCollectionListEmbedEnum {
  ShareUrl = "share_url",
}

export enum GetFeaturedImageCollectionListTypeEnum {
  Photo = "photo",
  Editorial = "editorial",
  Vector = "vector",
}

export class GetFeaturedImageCollectionListRequest extends SpeakeasyBase {
  /**
   * Cover image size
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=asset_hint",
  })
  assetHint?: GetFeaturedImageCollectionListAssetHintEnum;

  /**
   * Which sharing information to include in the response, such as a URL to the collection
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=embed" })
  embed?: GetFeaturedImageCollectionListEmbedEnum;

  /**
   * The types of collections to return
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: GetFeaturedImageCollectionListTypeEnum[];
}

export class GetFeaturedImageCollectionListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  featuredCollectionDataList?: shared.FeaturedCollectionDataList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
