// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoadBalancerAttributeNameEnum string

const (
	LoadBalancerAttributeNameEnumHealthCheckPath                          LoadBalancerAttributeNameEnum = "HealthCheckPath"
	LoadBalancerAttributeNameEnumSessionStickinessEnabled                 LoadBalancerAttributeNameEnum = "SessionStickinessEnabled"
	LoadBalancerAttributeNameEnumSessionStickinessLbCookieDurationSeconds LoadBalancerAttributeNameEnum = "SessionStickiness_LB_CookieDurationSeconds"
	LoadBalancerAttributeNameEnumHTTPSRedirectionEnabled                  LoadBalancerAttributeNameEnum = "HttpsRedirectionEnabled"
	LoadBalancerAttributeNameEnumTLSPolicyName                            LoadBalancerAttributeNameEnum = "TlsPolicyName"
)

func (e LoadBalancerAttributeNameEnum) ToPointer() *LoadBalancerAttributeNameEnum {
	return &e
}

func (e *LoadBalancerAttributeNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HealthCheckPath":
		fallthrough
	case "SessionStickinessEnabled":
		fallthrough
	case "SessionStickiness_LB_CookieDurationSeconds":
		fallthrough
	case "HttpsRedirectionEnabled":
		fallthrough
	case "TlsPolicyName":
		*e = LoadBalancerAttributeNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoadBalancerAttributeNameEnum: %v", v)
	}
}
