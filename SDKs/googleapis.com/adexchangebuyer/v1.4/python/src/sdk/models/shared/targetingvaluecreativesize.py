"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import targetingvaluesize as shared_targetingvaluesize
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetingValueCreativeSize:
    r"""Next Id: 7"""
    
    allowed_formats: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedFormats'), 'exclude': lambda f: f is None }})
    r"""The formats allowed by the publisher."""  
    companion_sizes: Optional[list[shared_targetingvaluesize.TargetingValueSize]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companionSizes'), 'exclude': lambda f: f is None }})
    r"""For video size type, the list of companion sizes."""  
    creative_size_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeSizeType'), 'exclude': lambda f: f is None }})
    r"""The Creative size type."""  
    native_template: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nativeTemplate'), 'exclude': lambda f: f is None }})
    r"""The native template for native ad."""  
    size: Optional[shared_targetingvaluesize.TargetingValueSize] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size'), 'exclude': lambda f: f is None }})  
    skippable_ad_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skippableAdType'), 'exclude': lambda f: f is None }})
    r"""The skippable ad type for video size."""  
    