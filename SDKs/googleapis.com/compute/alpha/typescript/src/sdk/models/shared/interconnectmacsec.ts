/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InterconnectMacsecPreSharedKey } from "./interconnectmacsecpresharedkey";
import { Expose, Type } from "class-transformer";

/**
 * Configuration information for enabling Media Access Control security (Macsec) on this Interconnect between Google and your on-premises router.
 */
export class InterconnectMacsec extends SpeakeasyBase {
  /**
   * If set to true, the Interconnect will be configured with a should-secure MACsec security policy, that allows the Google router to fallback to cleartext traffic if the MKA session cannot be established. By default, the Interconnect will be configured with a must-secure security policy that drops all traffic if the MKA session cannot be established with your router.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failOpen" })
  failOpen?: boolean;

  /**
   * Required. A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK will be generated for each key in the key chain. Google router will automatically pick the key with the most recent startTime when establishing or re-establishing a MACsec secure link.
   */
  @SpeakeasyMetadata({ elemType: InterconnectMacsecPreSharedKey })
  @Expose({ name: "preSharedKeys" })
  @Type(() => InterconnectMacsecPreSharedKey)
  preSharedKeys?: InterconnectMacsecPreSharedKey[];
}
