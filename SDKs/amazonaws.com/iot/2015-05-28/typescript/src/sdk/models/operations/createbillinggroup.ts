/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The properties of a billing group.
 */
export class CreateBillingGroupRequestBodyBillingGroupProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "billingGroupDescription" })
  billingGroupDescription?: string;
}

export class CreateBillingGroupRequestBody extends SpeakeasyBase {
  /**
   * The properties of a billing group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingGroupProperties" })
  @Type(() => CreateBillingGroupRequestBodyBillingGroupProperties)
  billingGroupProperties?: CreateBillingGroupRequestBodyBillingGroupProperties;

  /**
   * Metadata which can be used to manage the billing group.
   */
  @SpeakeasyMetadata({ elemType: shared.Tag })
  @Expose({ name: "tags" })
  @Type(() => shared.Tag)
  tags?: shared.Tag[];
}

export class CreateBillingGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateBillingGroupRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name you wish to give to the billing group.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=billingGroupName",
  })
  billingGroupName: string;
}

export class CreateBillingGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createBillingGroupResponse?: shared.CreateBillingGroupResponse;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceAlreadyExistsException
   */
  @SpeakeasyMetadata()
  resourceAlreadyExistsException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
