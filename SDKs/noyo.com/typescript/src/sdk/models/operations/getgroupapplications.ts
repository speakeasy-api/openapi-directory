/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetGroupApplicationsRequest extends SpeakeasyBase {
  /**
   * The application type used to filter results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=application_type",
  })
  applicationType?: string;

  /**
   * The associated carrier group ID used to filter results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=carrier_group_id",
  })
  carrierGroupId?: string;

  /**
   * The associated carrier ID used to filter results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=carrier_id",
  })
  carrierId?: string;

  /**
   * The unique identifier of the group in Noyo
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=group_id",
  })
  groupId: string;

  /**
   * The integer offset at which to start the page. Possible values are 0 to total_records - 1
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * The max size of each page of results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * The attribute on which to sort the group applications
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_by",
  })
  sortBy?: string;

  /**
   * Either asc or desc, to denote the data's direction
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sort_direction",
  })
  sortDirection?: string;

  /**
   * The application status used to filter results
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: string;
}

export class GetGroupApplicationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Response - Returns all matching Group Applications
   */
  @SpeakeasyMetadata()
  paginatedGroupApplicationResult?: shared.PaginatedGroupApplicationResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
