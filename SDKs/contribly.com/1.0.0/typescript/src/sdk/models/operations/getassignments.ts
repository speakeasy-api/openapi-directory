/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetAssignmentsRequest extends SpeakeasyBase {
  /**
   * Select assignments with no closing date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=alwaysOpen",
  })
  alwaysOpen?: boolean;

  /**
   * Restrict results to the assignment (or potentially assignments) with this exact name
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Select open or closed assignments
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=open" })
  open?: boolean;

  /**
   * Restrict results to assignments owned by this user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ownedBy",
  })
  ownedBy?: string;

  /**
   * Pagination page
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Pagination page size
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * Restrict results to assignments whose name or description matches this keyword.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   * Restrict results to assignments which are tagged with this tag.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=tag" })
  tag?: string;

  /**
   * Select an assignment by urlWords.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=urlWords",
  })
  urlWords?: string;
}

export class GetAssignmentsResponse extends SpeakeasyBase {
  /**
   * A list of assignments
   */
  @SpeakeasyMetadata({ elemType: shared.Assignment })
  assignments?: shared.Assignment[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
