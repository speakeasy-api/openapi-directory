/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class UserUpdateContent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("birthday")
    public LocalDate birthday;
    public UserUpdateContent withBirthday(LocalDate birthday) {
        this.birthday = birthday;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public UserUpdateContent withCity(String city) {
        this.city = city;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public UserUpdateContent withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Optional. User e-mail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public UserUpdateContent withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Optional. User first name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    public String firstName;
    public UserUpdateContent withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Optional. ID of the user being updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public UserUpdateContent withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Optional. User last name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;
    public UserUpdateContent withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Notification settings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifications")
    public UserUpdateContentNotifications notifications;
    public UserUpdateContent withNotifications(UserUpdateContentNotifications notifications) {
        this.notifications = notifications;
        return this;
    }
    
    /**
     * Notify new user account creation with login information and MotaWord introduction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notify")
    public Boolean notify;
    public UserUpdateContent withNotify(Boolean notify) {
        this.notify = notify;
        return this;
    }
    
    /**
     * Optional. Vendor paypal e-mail
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paypal_email")
    public String paypalEmail;
    public UserUpdateContent withPaypalEmail(String paypalEmail) {
        this.paypalEmail = paypalEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;
    public UserUpdateContent withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * Optional. Whether this vendor requires 1099 form in US for their earnings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("require_1099")
    public Boolean require1099;
    public UserUpdateContent withRequire1099(Boolean require1099) {
        this.require1099 = require1099;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;
    public UserUpdateContent withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("street")
    public String street;
    public UserUpdateContent withStreet(String street) {
        this.street = street;
        return this;
    }
    
    /**
     * A list of user group IDs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_groups")
    public Long[] userGroups;
    public UserUpdateContent withUserGroups(Long[] userGroups) {
        this.userGroups = userGroups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zip")
    public String zip;
    public UserUpdateContent withZip(String zip) {
        this.zip = zip;
        return this;
    }
    
}
