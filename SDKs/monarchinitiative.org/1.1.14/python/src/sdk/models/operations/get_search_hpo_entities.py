"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import layresults as shared_layresults
from typing import Optional


@dataclasses.dataclass
class GetSearchHpoEntitiesRequest:
    
    term: str = dataclasses.field(metadata={'path_param': { 'field_name': 'term', 'style': 'simple', 'explode': False }})
    r"""search string, e.g. muscle atrophy, frequent infections"""  
    anatomical_system: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'anatomical_system', 'style': 'form', 'explode': True }})
    r"""anatomical system id"""  
    anatomical_system_label: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'anatomical_system_label', 'style': 'form', 'explode': True }})
    r"""anatomical system label"""  
    highlight_class: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'highlight_class', 'style': 'form', 'explode': True }})
    r"""highlight class"""  
    phenotype_group: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'phenotype_group', 'style': 'form', 'explode': True }})
    r"""phenotype group id"""  
    phenotype_group_label: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'phenotype_group_label', 'style': 'form', 'explode': True }})
    r"""phenotype group label"""  
    rows: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'rows', 'style': 'form', 'explode': True }})
    r"""number of rows"""  
    start: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start', 'style': 'form', 'explode': True }})
    r"""row number to start from"""  
    

@dataclasses.dataclass
class GetSearchHpoEntitiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    lay_results: Optional[shared_layresults.LayResults] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    