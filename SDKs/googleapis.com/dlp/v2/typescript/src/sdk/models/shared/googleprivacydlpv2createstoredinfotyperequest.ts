/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2StoredInfoTypeConfig } from "./googleprivacydlpv2storedinfotypeconfig";
import { Expose, Type } from "class-transformer";

/**
 * Request message for CreateStoredInfoType.
 */
export class GooglePrivacyDlpV2CreateStoredInfoTypeRequest extends SpeakeasyBase {
  /**
   * Configuration for stored infoTypes. All fields and subfield are provided by the user. For more information, see https://cloud.google.com/dlp/docs/creating-custom-infotypes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => GooglePrivacyDlpV2StoredInfoTypeConfig)
  config?: GooglePrivacyDlpV2StoredInfoTypeConfig;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;

  /**
   * The storedInfoType ID can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storedInfoTypeId" })
  storedInfoTypeId?: string;
}
