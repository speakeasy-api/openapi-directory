/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssetModelCompositeModel } from "./assetmodelcompositemodel";
import { AssetModelHierarchy } from "./assetmodelhierarchy";
import { AssetModelProperty } from "./assetmodelproperty";
import { AssetModelStatus } from "./assetmodelstatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeAssetModelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assetModelArn" })
  assetModelArn: string;

  @SpeakeasyMetadata({ elemType: AssetModelCompositeModel })
  @Expose({ name: "assetModelCompositeModels" })
  @Type(() => AssetModelCompositeModel)
  assetModelCompositeModels?: AssetModelCompositeModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  assetModelCreationDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelDescription" })
  assetModelDescription: string;

  @SpeakeasyMetadata({ elemType: AssetModelHierarchy })
  @Expose({ name: "assetModelHierarchies" })
  @Type(() => AssetModelHierarchy)
  assetModelHierarchies: AssetModelHierarchy[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelId" })
  assetModelId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelLastUpdateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  assetModelLastUpdateDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelName" })
  assetModelName: string;

  @SpeakeasyMetadata({ elemType: AssetModelProperty })
  @Expose({ name: "assetModelProperties" })
  @Type(() => AssetModelProperty)
  assetModelProperties: AssetModelProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetModelStatus" })
  @Type(() => AssetModelStatus)
  assetModelStatus: AssetModelStatus;
}
