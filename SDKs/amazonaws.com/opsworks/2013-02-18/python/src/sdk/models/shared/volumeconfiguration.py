"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VolumeConfiguration:
    r"""Describes an Amazon EBS volume configuration."""
    
    mount_point: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MountPoint') }})  
    number_of_disks: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfDisks') }})  
    size: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Size') }})  
    encrypted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Encrypted'), 'exclude': lambda f: f is None }})  
    iops: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Iops'), 'exclude': lambda f: f is None }})  
    raid_level: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RaidLevel'), 'exclude': lambda f: f is None }})  
    volume_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VolumeType'), 'exclude': lambda f: f is None }})  
    