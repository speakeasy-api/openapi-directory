"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import summaryresponse as shared_summaryresponse
from enum import Enum
from typing import Optional

class MetalsSpotRatioSummaryGETFormatEnum(str, Enum):
    r"""to override content negotiation specify a value of json or xml"""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class MetalsSpotRatioSummaryGETRequest:
    
    pairs: str = dataclasses.field(metadata={'query_param': { 'field_name': 'pairs', 'style': 'form', 'explode': True }})
    r"""comma separated list of metal pairs. For example: gold/silver,gold/platinum,silver/palladium"""  
    format: Optional[MetalsSpotRatioSummaryGETFormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""to override content negotiation specify a value of json or xml"""  
    

@dataclasses.dataclass
class MetalsSpotRatioSummaryGETResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    summary_responses: Optional[list[shared_summaryresponse.SummaryResponse]] = dataclasses.field(default=None)
    r"""Success"""  
    