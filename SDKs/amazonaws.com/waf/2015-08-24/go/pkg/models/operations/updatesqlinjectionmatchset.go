// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateSQLInjectionMatchSetXAmzTargetEnum
type UpdateSQLInjectionMatchSetXAmzTargetEnum string

const (
	UpdateSQLInjectionMatchSetXAmzTargetEnumAwswaf20150824UpdateSQLInjectionMatchSet UpdateSQLInjectionMatchSetXAmzTargetEnum = "AWSWAF_20150824.UpdateSqlInjectionMatchSet"
)

func (e *UpdateSQLInjectionMatchSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_20150824.UpdateSqlInjectionMatchSet":
		*e = UpdateSQLInjectionMatchSetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSQLInjectionMatchSetXAmzTargetEnum: %s", s)
	}
}

type UpdateSQLInjectionMatchSetRequest struct {
	UpdateSQLInjectionMatchSetRequest shared.UpdateSQLInjectionMatchSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        UpdateSQLInjectionMatchSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateSQLInjectionMatchSetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	UpdateSQLInjectionMatchSetResponse *shared.UpdateSQLInjectionMatchSetResponse
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFInvalidOperationException
	WAFInvalidOperationException interface{}
	// WAFInvalidParameterException
	WAFInvalidParameterException interface{}
	// WAFLimitsExceededException
	WAFLimitsExceededException interface{}
	// WAFNonexistentContainerException
	WAFNonexistentContainerException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
}
