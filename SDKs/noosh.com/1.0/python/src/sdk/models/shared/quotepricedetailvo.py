"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import breakoutvo as shared_breakoutvo
from ..shared import propertypaandattvo as shared_propertypaandattvo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuotePriceDetailVO:
    r"""Java type: com.noosh.nooshapi.vo.QuotePriceDetailVO"""
    
    breakouts: Optional[list[shared_breakoutvo.BreakoutVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('breakouts'), 'exclude': lambda f: f is None }})  
    cost: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cost'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    custom_fields: Optional[list[shared_propertypaandattvo.PropertyPaAndAttVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_fields'), 'exclude': lambda f: f is None }})  
    fixed: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixed'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    is_chosen: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_chosen'), 'exclude': lambda f: f is None }})  
    is_included: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_included'), 'exclude': lambda f: f is None }})  
    is_quoted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_quoted'), 'exclude': lambda f: f is None }})  
    parent_price_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent_price_id'), 'exclude': lambda f: f is None }})  
    price_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_id'), 'exclude': lambda f: f is None }})  
    quantity: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    sell_price: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sell_price'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    shipping: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    source: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.QuotePriceSourceVO"""  
    supplier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supplier'), 'exclude': lambda f: f is None }})  
    tax: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    total: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_cost: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_cost'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_fixed: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_fixed'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_sell_price: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_sell_price'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_shipping: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_shipping'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_tax: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_tax'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_total: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_total'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    transactional_variable: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactional_variable'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    variable: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variable'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    variable_percent: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('variable_percent'), 'exclude': lambda f: f is None }})
    r"""Java type: java.math.BigDecimal"""  
    