"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import certificate as shared_certificate
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class CertificateGetEntitlementRequest:
    
    entitlement_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'entitlementId', 'style': 'form', 'explode': True }})
    r"""Entitlement id to lookup"""  
    latest: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latest', 'style': 'form', 'explode': True }})
    r"""Fetch only the most recent certificate"""  
    

@dataclasses.dataclass
class CertificateGetEntitlementResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    certificates: Optional[list[shared_certificate.Certificate]] = dataclasses.field(default=None)
    r"""Certificate details retrieved"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Request was malformed"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    