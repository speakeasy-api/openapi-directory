// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ListRepliesPolicyEnum - The user-defined title of the list.
type ListRepliesPolicyEnum string

const (
	ListRepliesPolicyEnumFollowed ListRepliesPolicyEnum = "followed"
	ListRepliesPolicyEnumList     ListRepliesPolicyEnum = "list"
	ListRepliesPolicyEnumNone     ListRepliesPolicyEnum = "none"
)

func (e ListRepliesPolicyEnum) ToPointer() *ListRepliesPolicyEnum {
	return &e
}

func (e *ListRepliesPolicyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "followed":
		fallthrough
	case "list":
		fallthrough
	case "none":
		*e = ListRepliesPolicyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRepliesPolicyEnum: %v", v)
	}
}

// List - Represents a list of some users that the authenticated user follows.
// https://docs.joinmastodon.org/entities/list/
type List struct {
	// The internal database ID of the list. Cast from an integer, but not guaranteed to be a number.
	ID string `json:"id"`
	// The user-defined title of the list.
	RepliesPolicy ListRepliesPolicyEnum `json:"replies_policy"`
	// The user-defined title of the list.
	Title string `json:"title"`
}
