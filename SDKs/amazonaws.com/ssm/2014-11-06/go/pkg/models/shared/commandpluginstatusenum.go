// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CommandPluginStatusEnum string

const (
	CommandPluginStatusEnumPending    CommandPluginStatusEnum = "Pending"
	CommandPluginStatusEnumInProgress CommandPluginStatusEnum = "InProgress"
	CommandPluginStatusEnumSuccess    CommandPluginStatusEnum = "Success"
	CommandPluginStatusEnumTimedOut   CommandPluginStatusEnum = "TimedOut"
	CommandPluginStatusEnumCancelled  CommandPluginStatusEnum = "Cancelled"
	CommandPluginStatusEnumFailed     CommandPluginStatusEnum = "Failed"
)

func (e *CommandPluginStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Success":
		fallthrough
	case "TimedOut":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Failed":
		*e = CommandPluginStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandPluginStatusEnum: %s", s)
	}
}
