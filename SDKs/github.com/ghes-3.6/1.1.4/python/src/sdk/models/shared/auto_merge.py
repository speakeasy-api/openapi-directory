"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import simple_user as shared_simple_user
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class AutoMergeMergeMethodEnum(str, Enum):
    r"""The merge method to use."""
    MERGE = 'merge'
    SQUASH = 'squash'
    REBASE = 'rebase'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoMerge:
    r"""The status of auto merging a pull request."""
    
    commit_message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commit_message') }})
    r"""Commit message for the merge commit."""  
    commit_title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commit_title') }})
    r"""Title for the merge commit message."""  
    enabled_by: shared_simple_user.SimpleUser = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled_by') }})
    r"""A GitHub user."""  
    merge_method: AutoMergeMergeMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merge_method') }})
    r"""The merge method to use."""  
    