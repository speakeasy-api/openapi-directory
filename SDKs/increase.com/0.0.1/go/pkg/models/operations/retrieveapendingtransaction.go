// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveAPendingTransactionPathParams struct {
	PendingTransactionID string `pathParam:"style=simple,explode=false,name=pending_transaction_id"`
}

type RetrieveAPendingTransactionRequest struct {
	PathParams RetrieveAPendingTransactionPathParams
}

type RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON13 struct {
	Detail     string                                                        `json:"detail"`
	RetryAfter *int64                                                        `json:"retry_after,omitempty"`
	Status     RetrieveAPendingTransactionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                        `json:"title"`
	Type       RetrieveAPendingTransactionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON12 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON11 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnumFourHundred RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON10 struct {
	Detail string                                                        `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnumFourHundred RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                     `json:"errors,omitempty"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON8 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON7 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnumFiveHundred RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnumInternalServerError RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON6 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON5 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON4 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON3 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON2 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum string

const (
	RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveAPendingTransactionDefaultApplicationJSON1 struct {
	Detail string                                                       `json:"detail"`
	Status RetrieveAPendingTransactionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   RetrieveAPendingTransactionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveAPendingTransactionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Pending Transaction
	PendingTransaction *shared.PendingTransaction
}
