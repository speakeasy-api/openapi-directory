"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tablecolumnproperties as shared_tablecolumnproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateTableColumnPropertiesRequest:
    r"""Updates the properties of a Table column."""
    
    column_indices: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnIndices'), 'exclude': lambda f: f is None }})
    r"""The list of zero-based indices specifying which columns to update. If no indices are provided, all columns in the table will be updated."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `tableColumnProperties` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example to update the column width, set `fields` to `\\"column_width\\"`. If '\\"column_width\\"' is included in the field mask but the property is left unset, the column width will default to 406,400 EMU (32 points)."""  
    object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the table."""  
    table_column_properties: Optional[shared_tablecolumnproperties.TableColumnProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tableColumnProperties'), 'exclude': lambda f: f is None }})
    r"""Properties of each column in a table."""  
    