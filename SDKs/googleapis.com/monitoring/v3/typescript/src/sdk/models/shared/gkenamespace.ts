/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * GKE Namespace. The field names correspond to the resource metadata labels on monitored resources that fall under a namespace (for example, k8s_container or k8s_pod).
 */
export class GkeNamespace extends SpeakeasyBase {
  /**
   * The name of the parent cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterName" })
  clusterName?: string;

  /**
   * The location of the parent cluster. This may be a zone or region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * The name of this namespace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "namespaceName" })
  namespaceName?: string;

  /**
   * Output only. The project this resource lives in. For legacy services migrated from the Custom type, this may be a distinct project from the one parenting the service itself.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  projectId?: string;
}

/**
 * GKE Namespace. The field names correspond to the resource metadata labels on monitored resources that fall under a namespace (for example, k8s_container or k8s_pod).
 */
export class GkeNamespaceInput extends SpeakeasyBase {
  /**
   * The name of the parent cluster.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clusterName" })
  clusterName?: string;

  /**
   * The location of the parent cluster. This may be a zone or region.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * The name of this namespace.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "namespaceName" })
  namespaceName?: string;
}
