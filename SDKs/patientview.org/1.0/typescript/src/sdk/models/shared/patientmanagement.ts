/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FhirCondition } from "./fhircondition";
import { FhirEncounter } from "./fhirencounter";
import { FhirObservation } from "./fhirobservation";
import { FhirPatient } from "./fhirpatient";
import { FhirPractitioner } from "./fhirpractitioner";
import { Expose, Type } from "class-transformer";

/**
 * patientManagement
 */
export class PatientManagement extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  @Type(() => FhirCondition)
  condition?: FhirCondition;

  @SpeakeasyMetadata({ elemType: FhirEncounter })
  @Expose({ name: "encounters" })
  @Type(() => FhirEncounter)
  encounters?: FhirEncounter[];

  @SpeakeasyMetadata()
  @Expose({ name: "groupCode" })
  groupCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  @SpeakeasyMetadata({ elemType: FhirObservation })
  @Expose({ name: "observations" })
  @Type(() => FhirObservation)
  observations?: FhirObservation[];

  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  @Type(() => FhirPatient)
  patient?: FhirPatient;

  @SpeakeasyMetadata({ elemType: FhirPractitioner })
  @Expose({ name: "practitioners" })
  @Type(() => FhirPractitioner)
  practitioners?: FhirPractitioner[];
}
