// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostSpacesSpaceIDLegalEntitiesIDInsurancesSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnumConfidential PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum = "confidential"
	PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnumRegular      PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum = "regular"
	PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnumPublic       PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum = "public"
)

func (e PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum) ToPointer() *PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum {
	return &e
}

func (e *PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum: %v", v)
	}
}

// PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBody - Insurance to add (except name, class and archivaldate)
type PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBody struct {
	About          *string                                                         `json:"About,omitempty"`
	Comment        *string                                                         `json:"Comment,omitempty"`
	CustomerNumber *string                                                         `json:"CustomerNumber,omitempty"`
	Designation    *string                                                         `json:"Designation,omitempty"`
	End            *string                                                         `json:"End,omitempty"`
	Home           *bool                                                           `json:"Home,omitempty"`
	Keywords       []string                                                        `json:"Keywords,omitempty"`
	Level          *PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBodyLevelEnum `json:"Level,omitempty"`
	PolicyNumber   *string                                                         `json:"PolicyNumber,omitempty"`
	Start          *string                                                         `json:"Start,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDInsurancesRequest struct {
	// Insurance to add (except name, class and archivaldate)
	RequestBody PostSpacesSpaceIDLegalEntitiesIDInsurancesRequestBody `request:"mediaType=application/json"`
	// Id of the insurance or memberId
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostSpacesSpaceIDLegalEntitiesIDInsurances201ApplicationJSON - Id of folder created
type PostSpacesSpaceIDLegalEntitiesIDInsurances201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDInsurancesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of folder created
	PostSpacesSpaceIDLegalEntitiesIDInsurances201ApplicationJSONObject *PostSpacesSpaceIDLegalEntitiesIDInsurances201ApplicationJSON
}
