/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { DeleteChannelsResult } from "./deletechannelsresult";
import { Expose, Transform } from "class-transformer";

/**
 * Successful response
 */
export class DeleteChannelsResponse extends SpeakeasyBase {
  /**
   * Duration of the request in human-readable format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: string;

  @SpeakeasyMetadata({ elemType: DeleteChannelsResult })
  @Expose({ name: "result" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, DeleteChannelsResult> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], DeleteChannelsResult);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  result?: Record<string, DeleteChannelsResult>;

  @SpeakeasyMetadata()
  @Expose({ name: "task_id" })
  taskId?: string;
}
