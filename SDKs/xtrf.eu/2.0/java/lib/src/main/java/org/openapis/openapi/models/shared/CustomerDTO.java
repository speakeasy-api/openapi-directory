/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CustomerDTO - Created user object
 */
public class CustomerDTO {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountOnCustomerServer")
    public String accountOnCustomerServer;

    public CustomerDTO withAccountOnCustomerServer(String accountOnCustomerServer) {
        this.accountOnCustomerServer = accountOnCustomerServer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accounting")
    public CustomerAccountingDTO accounting;

    public CustomerDTO withAccounting(CustomerAccountingDTO accounting) {
        this.accounting = accounting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingAddress")
    public AddressDTO billingAddress;

    public CustomerDTO withBillingAddress(AddressDTO billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("branchId")
    public Long branchId;

    public CustomerDTO withBranchId(Long branchId) {
        this.branchId = branchId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoriesIds")
    public Long[] categoriesIds;

    public CustomerDTO withCategoriesIds(Long[] categoriesIds) {
        this.categoriesIds = categoriesIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("clientFirstProjectDate")
    public OffsetDateTime clientFirstProjectDate;

    public CustomerDTO withClientFirstProjectDate(OffsetDateTime clientFirstProjectDate) {
        this.clientFirstProjectDate = clientFirstProjectDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("clientFirstQuoteDate")
    public OffsetDateTime clientFirstQuoteDate;

    public CustomerDTO withClientFirstQuoteDate(OffsetDateTime clientFirstQuoteDate) {
        this.clientFirstQuoteDate = clientFirstQuoteDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("clientLastProjectDate")
    public OffsetDateTime clientLastProjectDate;

    public CustomerDTO withClientLastProjectDate(OffsetDateTime clientLastProjectDate) {
        this.clientLastProjectDate = clientLastProjectDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("clientLastQuoteDate")
    public OffsetDateTime clientLastQuoteDate;

    public CustomerDTO withClientLastQuoteDate(OffsetDateTime clientLastQuoteDate) {
        this.clientLastQuoteDate = clientLastQuoteDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientNumberOfProjects")
    public Integer clientNumberOfProjects;

    public CustomerDTO withClientNumberOfProjects(Integer clientNumberOfProjects) {
        this.clientNumberOfProjects = clientNumberOfProjects;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientNumberOfQuotes")
    public Integer clientNumberOfQuotes;

    public CustomerDTO withClientNumberOfQuotes(Integer clientNumberOfQuotes) {
        this.clientNumberOfQuotes = clientNumberOfQuotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contact")
    public ContactDTO contact;

    public CustomerDTO withContact(ContactDTO contact) {
        this.contact = contact;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contractNumber")
    public String contractNumber;

    public CustomerDTO withContractNumber(String contractNumber) {
        this.contractNumber = contractNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("correspondenceAddress")
    public AddressDTO correspondenceAddress;

    public CustomerDTO withCorrespondenceAddress(AddressDTO correspondenceAddress) {
        this.correspondenceAddress = correspondenceAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public CustomFieldDTO[] customFields;

    public CustomerDTO withCustomFields(CustomFieldDTO[] customFields) {
        this.customFields = customFields;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullName")
    public String fullName;

    public CustomerDTO withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;

    public CustomerDTO withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idNumber")
    public String idNumber;

    public CustomerDTO withIdNumber(String idNumber) {
        this.idNumber = idNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("industriesIds")
    public Long[] industriesIds;

    public CustomerDTO withIndustriesIds(Long[] industriesIds) {
        this.industriesIds = industriesIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("leadSourceId")
    public Long leadSourceId;

    public CustomerDTO withLeadSourceId(Long leadSourceId) {
        this.leadSourceId = leadSourceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("limitAccessToPeopleResponsible")
    public Boolean limitAccessToPeopleResponsible;

    public CustomerDTO withLimitAccessToPeopleResponsible(Boolean limitAccessToPeopleResponsible) {
        this.limitAccessToPeopleResponsible = limitAccessToPeopleResponsible;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CustomerDTO withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public CustomerDTO withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("persons")
    public CustomerPersonDTO[] persons;

    public CustomerDTO withPersons(CustomerPersonDTO[] persons) {
        this.persons = persons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responsiblePersons")
    public CustomerResponsiblePersonsDTO responsiblePersons;

    public CustomerDTO withResponsiblePersons(CustomerResponsiblePersonsDTO responsiblePersons) {
        this.responsiblePersons = responsiblePersons;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salesNotes")
    public String salesNotes;

    public CustomerDTO withSalesNotes(String salesNotes) {
        this.salesNotes = salesNotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public CustomerDTOStatusEnum status;

    public CustomerDTO withStatus(CustomerDTOStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public CustomerDTO(){}
}
