// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type OrganizationsUpdateSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type OrganizationsUpdatePathParams struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
}

// OrganizationsUpdateRequestBody - The data for the org
type OrganizationsUpdateRequestBody struct {
	// The full (friendly) name of the organization.
	DisplayName *string `json:"display_name,omitempty"`
	// The name of the organization used in URLs
	Name *string `json:"name,omitempty"`
}

type OrganizationsUpdateRequest struct {
	PathParams OrganizationsUpdatePathParams
	// The data for the org
	Request  OrganizationsUpdateRequestBody `request:"mediaType=application/json"`
	Security OrganizationsUpdateSecurity
}

type OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum string

const (
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumBadRequest          OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumConflict            OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumNotAcceptable       OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumNotFound            OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumInternalServerError OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumUnauthorized        OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	OrganizationsUpdateDefaultApplicationJSONErrorCodeEnumTooManyRequests     OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type OrganizationsUpdateDefaultApplicationJSONError struct {
	Code    OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                 `json:"message"`
}

// OrganizationsUpdateDefaultApplicationJSON - Error
type OrganizationsUpdateDefaultApplicationJSON struct {
	Error OrganizationsUpdateDefaultApplicationJSONError `json:"error"`
}

// OrganizationsUpdate200ApplicationJSONOriginEnum - The creation origin of this organization
type OrganizationsUpdate200ApplicationJSONOriginEnum string

const (
	OrganizationsUpdate200ApplicationJSONOriginEnumAppcenter OrganizationsUpdate200ApplicationJSONOriginEnum = "appcenter"
	OrganizationsUpdate200ApplicationJSONOriginEnumHockeyapp OrganizationsUpdate200ApplicationJSONOriginEnum = "hockeyapp"
)

func (e *OrganizationsUpdate200ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = OrganizationsUpdate200ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationsUpdate200ApplicationJSONOriginEnum: %s", s)
	}
}

// OrganizationsUpdate200ApplicationJSON - Success
type OrganizationsUpdate200ApplicationJSON struct {
	// The URL to a user-uploaded Avatar image
	AvatarURL *string `json:"avatar_url,omitempty"`
	// The creation date of this organization
	CreatedAt string `json:"created_at"`
	// The display name of the organization
	DisplayName string `json:"display_name"`
	// The internal unique id (UUID) of the organization.
	ID string `json:"id"`
	// The slug name of the organization
	Name string `json:"name"`
	// The creation origin of this organization
	Origin OrganizationsUpdate200ApplicationJSONOriginEnum `json:"origin"`
	// The date the organization was last updated at
	UpdatedAt string `json:"updated_at"`
}

type OrganizationsUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	OrganizationsUpdate200ApplicationJSONObject *OrganizationsUpdate200ApplicationJSON
	// Error
	OrganizationsUpdateDefaultApplicationJSONObject *OrganizationsUpdateDefaultApplicationJSON
}
