/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeatureDefinition } from "./featuredefinition";
import { FeatureGroupStatusEnum } from "./featuregroupstatusenum";
import { LastUpdateStatus } from "./lastupdatestatus";
import { OfflineStoreConfig } from "./offlinestoreconfig";
import { OfflineStoreStatus } from "./offlinestorestatus";
import { OnlineStoreConfig } from "./onlinestoreconfig";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.
 */
export class FeatureGroup extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventTimeFeatureName" })
  eventTimeFeatureName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata({ elemType: FeatureDefinition })
  @Expose({ name: "FeatureDefinitions" })
  @Type(() => FeatureDefinition)
  featureDefinitions?: FeatureDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupArn" })
  featureGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupName" })
  featureGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupStatus" })
  featureGroupStatus?: FeatureGroupStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdateStatus" })
  @Type(() => LastUpdateStatus)
  lastUpdateStatus?: LastUpdateStatus;

  /**
   * <p>The configuration of an <code>OfflineStore</code>.</p> <p>Provide an <code>OfflineStoreConfig</code> in a request to <code>CreateFeatureGroup</code> to create an <code>OfflineStore</code>.</p> <p>To encrypt an <code>OfflineStore</code> using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or <code>KMSKeyId</code>, in <code>S3StorageConfig</code>.</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OfflineStoreConfig" })
  @Type(() => OfflineStoreConfig)
  offlineStoreConfig?: OfflineStoreConfig;

  /**
   * The status of <code>OfflineStore</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OfflineStoreStatus" })
  @Type(() => OfflineStoreStatus)
  offlineStoreStatus?: OfflineStoreStatus;

  /**
   * Use this to specify the Amazon Web Services Key Management Service (KMS) Key ID, or <code>KMSKeyId</code>, for at rest data encryption. You can turn <code>OnlineStore</code> on or off by specifying the <code>EnableOnlineStore</code> flag at General Assembly; the default value is <code>False</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OnlineStoreConfig" })
  @Type(() => OnlineStoreConfig)
  onlineStoreConfig?: OnlineStoreConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "RecordIdentifierFeatureName" })
  recordIdentifierFeatureName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
