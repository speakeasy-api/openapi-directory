"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MetricHeaderEntryTypeEnum(str, Enum):
    r"""The type of the metric, for example `INTEGER`."""
    METRIC_TYPE_UNSPECIFIED = 'METRIC_TYPE_UNSPECIFIED'
    INTEGER = 'INTEGER'
    FLOAT = 'FLOAT'
    CURRENCY = 'CURRENCY'
    PERCENT = 'PERCENT'
    TIME = 'TIME'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetricHeaderEntry:
    r"""Header for the metrics."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the header."""  
    type: Optional[MetricHeaderEntryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the metric, for example `INTEGER`."""  
    