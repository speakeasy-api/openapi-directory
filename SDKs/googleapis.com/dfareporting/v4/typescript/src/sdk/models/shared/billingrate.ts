/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BillingRateTieredRate } from "./billingratetieredrate";
import { Expose, Type } from "class-transformer";

/**
 * Type of this billing rate.
 */
export enum BillingRateTypeEnum {
  AdServing = "AD_SERVING",
  Clicks = "CLICKS",
  MinimumService = "MINIMUM_SERVICE",
  PathToConversion = "PATH_TO_CONVERSION",
  RichMediaInpage = "RICH_MEDIA_INPAGE",
  RichMediaExpanding = "RICH_MEDIA_EXPANDING",
  RichMediaFloating = "RICH_MEDIA_FLOATING",
  RichMediaVideo = "RICH_MEDIA_VIDEO",
  RichMediaTeaser = "RICH_MEDIA_TEASER",
  RichMediaVpaid = "RICH_MEDIA_VPAID",
  InstreamVideo = "INSTREAM_VIDEO",
  Pixel = "PIXEL",
  Tracking = "TRACKING",
  TraffickingFeature = "TRAFFICKING_FEATURE",
  CustomReports = "CUSTOM_REPORTS",
  ExposureToConversion = "EXPOSURE_TO_CONVERSION",
  DataTransfer = "DATA_TRANSFER",
  DataTransferSetup = "DATA_TRANSFER_SETUP",
  Startup = "STARTUP",
  StatementOfWork = "STATEMENT_OF_WORK",
  ProvidedList = "PROVIDED_LIST",
  ProvidedListSetup = "PROVIDED_LIST_SETUP",
  EnhancedFormats = "ENHANCED_FORMATS",
  TrackingAdImpressions = "TRACKING_AD_IMPRESSIONS",
  TrackingAdClicks = "TRACKING_AD_CLICKS",
  NielsenDigitalAdRatingsFee = "NIELSEN_DIGITAL_AD_RATINGS_FEE",
  InstreamVideoRedirect = "INSTREAM_VIDEO_REDIRECT",
  InstreamVideoVpaid = "INSTREAM_VIDEO_VPAID",
  DisplayAdServing = "DISPLAY_AD_SERVING",
  VideoAdServing = "VIDEO_AD_SERVING",
  AudioAdServing = "AUDIO_AD_SERVING",
  AdvancedDisplayAdServing = "ADVANCED_DISPLAY_AD_SERVING",
}

/**
 * Unit of measure for this billing rate.
 */
export enum BillingRateUnitOfMeasureEnum {
  Cpm = "CPM",
  Cpc = "CPC",
  Ea = "EA",
  P2C = "P2C",
}

export class BillingRate extends SpeakeasyBase {
  /**
   * Billing currency code in ISO 4217 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currencyCode" })
  currencyCode?: string;

  /**
   * End date of this billing rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  endDate?: string;

  /**
   * ID of this billing rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of this billing rate. This must be less than 256 characters long.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Flat rate in micros of this billing rate. This cannot co-exist with tiered rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rateInMicros" })
  rateInMicros?: string;

  /**
   * Start date of this billing rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  startDate?: string;

  /**
   * Tiered rate of this billing rate. This cannot co-exist with flat rate.
   */
  @SpeakeasyMetadata({ elemType: BillingRateTieredRate })
  @Expose({ name: "tieredRates" })
  @Type(() => BillingRateTieredRate)
  tieredRates?: BillingRateTieredRate[];

  /**
   * Type of this billing rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: BillingRateTypeEnum;

  /**
   * Unit of measure for this billing rate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unitOfMeasure" })
  unitOfMeasure?: BillingRateUnitOfMeasureEnum;
}
