/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CurrencyEnum } from "./currencyenum";
import {
  JournalEntryLineItem,
  JournalEntryLineItemInput,
} from "./journalentrylineitem";
import { Expose, Transform, Type } from "class-transformer";

export class JournalEntryInput extends SpeakeasyBase {
  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Currency Exchange Rate at the time entity was recorded/generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency_rate" })
  currencyRate?: number;

  /**
   * Journal symbol of the entry. For example IND for indirect costs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "journal_symbol" })
  journalSymbol?: string;

  /**
   * Requires a minimum of 2 line items that sum to 0
   */
  @SpeakeasyMetadata({ elemType: JournalEntryLineItemInput })
  @Expose({ name: "line_items" })
  @Type(() => JournalEntryLineItemInput)
  lineItems?: JournalEntryLineItemInput[];

  /**
   * Reference for the journal entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memo" })
  memo?: string;

  /**
   * This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "posted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  postedAt?: Date;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Journal entry title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class JournalEntry extends SpeakeasyBase {
  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * Currency Exchange Rate at the time entity was recorded/generated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency_rate" })
  currencyRate?: number;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Journal symbol of the entry. For example IND for indirect costs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "journal_symbol" })
  journalSymbol?: string;

  /**
   * Requires a minimum of 2 line items that sum to 0
   */
  @SpeakeasyMetadata({ elemType: JournalEntryLineItem })
  @Expose({ name: "line_items" })
  @Type(() => JournalEntryLineItem)
  lineItems?: JournalEntryLineItem[];

  /**
   * Reference for the journal entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memo" })
  memo?: string;

  /**
   * This is the date on which the journal entry was added. This can be different from the creation date and can also be backdated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "posted_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  postedAt?: Date;

  /**
   * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "row_version" })
  rowVersion?: string;

  /**
   * Journal entry title
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
