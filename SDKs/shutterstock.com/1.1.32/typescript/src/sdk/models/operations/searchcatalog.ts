/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SearchCatalogSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode: string;
}

export enum SearchCatalogAssetTypeEnum {
  Image = "image",
  Video = "video",
  Audio = "audio",
  Elements = "elements",
  EditorialImage = "editorial-image",
  EditorialVideo = "editorial-video",
}

/**
 * Sort by
 */
export enum SearchCatalogSortEnum {
  Newest = "newest",
  Oldest = "oldest",
}

export class SearchCatalogRequest extends SpeakeasyBase {
  /**
   * Filter by asset type
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=asset_type",
  })
  assetType?: SearchCatalogAssetTypeEnum[];

  /**
   * Filter by collection id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=collection_id",
  })
  collectionId?: string[];

  /**
   * Page number
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Number of results per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * One or more search terms separated by spaces
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;

  /**
   * Sort by
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: SearchCatalogSortEnum;
}

export class SearchCatalogResponse extends SpeakeasyBase {
  /**
   * OK
   */
  @SpeakeasyMetadata()
  catalogCollectionItemDataList?: shared.CatalogCollectionItemDataList;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
