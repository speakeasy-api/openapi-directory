"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eksemptydir as shared_eksemptydir
from ..shared import ekshostpath as shared_ekshostpath
from ..shared import ekssecret as shared_ekssecret
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EksVolume:
    r"""Specifies an Amazon EKS volume for a job definition."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    empty_dir: Optional[shared_eksemptydir.EksEmptyDir] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('emptyDir'), 'exclude': lambda f: f is None }})  
    host_path: Optional[shared_ekshostpath.EksHostPath] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostPath'), 'exclude': lambda f: f is None }})  
    secret: Optional[shared_ekssecret.EksSecret] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('secret'), 'exclude': lambda f: f is None }})  
    