"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2Color:
    r"""Represents a color in the RGB color space."""
    
    blue: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('blue'), 'exclude': lambda f: f is None }})
    r"""The amount of blue in the color as a value in the interval [0, 1]."""  
    green: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('green'), 'exclude': lambda f: f is None }})
    r"""The amount of green in the color as a value in the interval [0, 1]."""  
    red: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('red'), 'exclude': lambda f: f is None }})
    r"""The amount of red in the color as a value in the interval [0, 1]."""  
    