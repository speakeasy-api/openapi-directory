/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FxSummary } from "./fxsummary";
import { PayoutSchedule } from "./payoutschedule";
import { SourceAccountSummary } from "./sourceaccountsummary";
import { Expose, Transform, Type } from "class-transformer";

export class PayoutSummaryAudit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "dateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  @SpeakeasyMetadata({ elemType: FxSummary })
  @Expose({ name: "fxSummaries" })
  @Type(() => FxSummary)
  fxSummaries?: FxSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "instructedDateTime" })
  instructedDateTime?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payorId" })
  payorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payorName" })
  payorName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payoutId" })
  payoutId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payoutMemo" })
  payoutMemo?: string;

  /**
   * The type of payout. One of the following values: STANDARD, AS, ON_BEHALF_OF
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutType" })
  payoutType: string;

  /**
   * Details relating to a payout that was executed via a schedule or is still waiting to be executed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  @Type(() => PayoutSchedule)
  schedule?: PayoutSchedule;

  @SpeakeasyMetadata({ elemType: SourceAccountSummary })
  @Expose({ name: "sourceAccountSummary" })
  @Type(() => SourceAccountSummary)
  sourceAccountSummary?: SourceAccountSummary[];

  /**
   * Current status of the Payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "submittedDateTime" })
  submittedDateTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "totalIncompletePayments" })
  totalIncompletePayments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalPayments" })
  totalPayments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalReturnedPayments" })
  totalReturnedPayments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalWithdrawnPayments" })
  totalWithdrawnPayments?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "withdrawnDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  withdrawnDateTime?: Date;
}
