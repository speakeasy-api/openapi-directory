// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateRoleSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// UpdateRoleApplicationJSONSubAccountPrivileges - This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure.
type UpdateRoleApplicationJSONSubAccountPrivileges struct {
	// Indicates how the account can manage sub accounts. The value can be one of the following:<br>
	// `1`: Manage the sub account as an owner of the account.<br>
	// `2`: Manage the sub account with the same privileges as the current account.<br>
	// `3`: Manage the sub account with specified privileges.
	SecondLevel *int64 `json:"second_level,omitempty"`
}

type UpdateRoleApplicationJSON struct {
	// Description of the role.
	Description *string `json:"description,omitempty"`
	// Role Id.
	ID *string `json:"id,omitempty"`
	// Name of the role.
	Name *string `json:"name,omitempty"`
	// Privileges assigned to the role. Can be one or a combination of [these permissions](https://marketplace.zoom.us/docs/api-reference/other-references/privileges).
	//
	Privileges []string `json:"privileges,omitempty"`
	// This field will only be displayed to accounts that are enrolled in the partner plan and follow master accounts and sub accounts structure.
	SubAccountPrivileges *UpdateRoleApplicationJSONSubAccountPrivileges `json:"sub_account_privileges,omitempty"`
	// Total members assigned to that role.
	TotalMembers *int64 `json:"total_members,omitempty"`
}

type UpdateRoleRequest struct {
	RequestBody *UpdateRoleApplicationJSON `request:"mediaType=application/json"`
	// Role Id
	RoleID string `pathParam:"style=simple,explode=false,name=roleId"`
}

type UpdateRoleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **Error Code:** `200`<br>
	// The account must be a paid account to update the role.
	UpdateRole200ApplicationJSONAny interface{}
}
