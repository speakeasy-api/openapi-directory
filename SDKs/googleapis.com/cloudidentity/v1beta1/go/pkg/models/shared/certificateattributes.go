// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CertificateAttributesValidationStateEnum - Validation state of this certificate.
type CertificateAttributesValidationStateEnum string

const (
	CertificateAttributesValidationStateEnumCertificateValidationStateUnspecified CertificateAttributesValidationStateEnum = "CERTIFICATE_VALIDATION_STATE_UNSPECIFIED"
	CertificateAttributesValidationStateEnumValidationSuccessful                  CertificateAttributesValidationStateEnum = "VALIDATION_SUCCESSFUL"
	CertificateAttributesValidationStateEnumValidationFailed                      CertificateAttributesValidationStateEnum = "VALIDATION_FAILED"
)

func (e *CertificateAttributesValidationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CERTIFICATE_VALIDATION_STATE_UNSPECIFIED":
		fallthrough
	case "VALIDATION_SUCCESSFUL":
		fallthrough
	case "VALIDATION_FAILED":
		*e = CertificateAttributesValidationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CertificateAttributesValidationStateEnum: %s", s)
	}
}

// CertificateAttributes - Stores information about a certificate.
type CertificateAttributes struct {
	// CertificateTemplate (v3 Extension in X.509).
	CertificateTemplate *CertificateTemplate `json:"certificateTemplate,omitempty"`
	// The encoded certificate fingerprint.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// The name of the issuer of this certificate.
	Issuer *string `json:"issuer,omitempty"`
	// Serial number of the certificate, Example: "123456789".
	SerialNumber *string `json:"serialNumber,omitempty"`
	// The subject name of this certificate.
	Subject *string `json:"subject,omitempty"`
	// The certificate thumbprint.
	Thumbprint *string `json:"thumbprint,omitempty"`
	// Validation state of this certificate.
	ValidationState *CertificateAttributesValidationStateEnum `json:"validationState,omitempty"`
	// Certificate not valid at or after this timestamp.
	ValidityExpirationTime *string `json:"validityExpirationTime,omitempty"`
	// Certificate not valid before this timestamp.
	ValidityStartTime *string `json:"validityStartTime,omitempty"`
}
