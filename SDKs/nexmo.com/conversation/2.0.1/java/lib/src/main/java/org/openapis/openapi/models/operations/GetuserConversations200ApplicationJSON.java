/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetuserConversations200ApplicationJSON {
    /**
     * The display name for the conversation. It does not have to be unique
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;
    public GetuserConversations200ApplicationJSON withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A link towards a resources included in Conversation API
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("href")
    public String href;
    public GetuserConversations200ApplicationJSON withHref(String href) {
        this.href = href;
        return this;
    }
    
    /**
     * The unique identifier for this conversation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetuserConversations200ApplicationJSON withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A link to an image for conversations' and users' avatars
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;
    public GetuserConversations200ApplicationJSON withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * Member ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("member_id")
    public String memberId;
    public GetuserConversations200ApplicationJSON withMemberId(String memberId) {
        this.memberId = memberId;
        return this;
    }
    
    /**
     * Unique name for a conversation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GetuserConversations200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * the id of the last event of the conversation (event's id is an incremental number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sequence_number")
    public Long sequenceNumber;
    public GetuserConversations200ApplicationJSON withSequenceNumber(Long sequenceNumber) {
        this.sequenceNumber = sequenceNumber;
        return this;
    }
    
    /**
     * The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public org.openapis.openapi.models.shared.MemberStateEnum state;
    public GetuserConversations200ApplicationJSON withState(org.openapis.openapi.models.shared.MemberStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public GetuserConversations200ApplicationJSONTimestamp timestamp;
    public GetuserConversations200ApplicationJSON withTimestamp(GetuserConversations200ApplicationJSONTimestamp timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
}
