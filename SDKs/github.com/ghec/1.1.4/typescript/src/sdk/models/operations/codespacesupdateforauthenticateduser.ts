/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CodespacesUpdateForAuthenticatedUserRequestBody extends SpeakeasyBase {
  /**
   * Display name for this codespace
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * A valid machine to transition this codespace to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "machine" })
  machine?: string;

  /**
   * Recently opened folders inside the codespace. It is currently used by the clients to determine the folder path to load the codespace in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recent_folders" })
  recentFolders?: string[];
}

export class CodespacesUpdateForAuthenticatedUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: CodespacesUpdateForAuthenticatedUserRequestBody;

  /**
   * The name of the codespace.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=codespace_name",
  })
  codespaceName: string;
}

export class CodespacesUpdateForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  codespace?: shared.Codespace;
}
