// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExportAssetsRequestContentTypeEnum - Asset content type. If not specified, no content but the asset name will be returned.
type ExportAssetsRequestContentTypeEnum string

const (
	ExportAssetsRequestContentTypeEnumContentTypeUnspecified ExportAssetsRequestContentTypeEnum = "CONTENT_TYPE_UNSPECIFIED"
	ExportAssetsRequestContentTypeEnumResource               ExportAssetsRequestContentTypeEnum = "RESOURCE"
	ExportAssetsRequestContentTypeEnumIamPolicy              ExportAssetsRequestContentTypeEnum = "IAM_POLICY"
)

func (e ExportAssetsRequestContentTypeEnum) ToPointer() *ExportAssetsRequestContentTypeEnum {
	return &e
}

func (e *ExportAssetsRequestContentTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTENT_TYPE_UNSPECIFIED":
		fallthrough
	case "RESOURCE":
		fallthrough
	case "IAM_POLICY":
		*e = ExportAssetsRequestContentTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportAssetsRequestContentTypeEnum: %v", v)
	}
}

// ExportAssetsRequest - Export asset request.
type ExportAssetsRequest struct {
	// A list of asset types of which to take a snapshot for. For example: "google.compute.Disk". If specified, only matching assets will be returned. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/resource-manager/docs/cloud-asset-inventory/overview) for all supported asset types.
	AssetTypes []string `json:"assetTypes,omitempty"`
	// Asset content type. If not specified, no content but the asset name will be returned.
	ContentType *ExportAssetsRequestContentTypeEnum `json:"contentType,omitempty"`
	// Output configuration for export assets destination.
	OutputConfig *OutputConfig `json:"outputConfig,omitempty"`
	// Timestamp to take an asset snapshot. This can only be set to a timestamp between 2018-10-02 UTC (inclusive) and the current time. If not specified, the current time will be used. Due to delays in resource data collection and indexing, there is a volatile window during which running the same query may get different results.
	ReadTime *string `json:"readTime,omitempty"`
}
