// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListConnectionsXAmzTargetEnum
type ListConnectionsXAmzTargetEnum string

const (
	ListConnectionsXAmzTargetEnumComAmazonawsCodestarConnectionsCodeStarConnections20191201ListConnections ListConnectionsXAmzTargetEnum = "com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListConnections"
)

func (e ListConnectionsXAmzTargetEnum) ToPointer() *ListConnectionsXAmzTargetEnum {
	return &e
}

func (e *ListConnectionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.codestar.connections.CodeStar_connections_20191201.ListConnections":
		*e = ListConnectionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListConnectionsXAmzTargetEnum: %v", v)
	}
}

type ListConnectionsRequest struct {
	ListConnectionsInput shared.ListConnectionsInput `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                       `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListConnectionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListConnectionsResponse struct {
	ContentType string
	// Success
	ListConnectionsOutput *shared.ListConnectionsOutput
	StatusCode            int
	RawResponse           *http.Response
}
