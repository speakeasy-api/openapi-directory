// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LicenseSFXAudioLayoutEnum string

const (
	LicenseSFXAudioLayoutEnumAmbisonic LicenseSFXAudioLayoutEnum = "ambisonic"
	LicenseSFXAudioLayoutEnumFive1     LicenseSFXAudioLayoutEnum = "5.1"
	LicenseSFXAudioLayoutEnumStereo    LicenseSFXAudioLayoutEnum = "stereo"
)

func (e *LicenseSFXAudioLayoutEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ambisonic":
		fallthrough
	case "5.1":
		fallthrough
	case "stereo":
		*e = LicenseSFXAudioLayoutEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseSFXAudioLayoutEnum: %s", s)
	}
}

type LicenseSFXFormatEnum string

const (
	LicenseSFXFormatEnumWav LicenseSFXFormatEnum = "wav"
	LicenseSFXFormatEnumMp3 LicenseSFXFormatEnum = "mp3"
)

func (e *LicenseSFXFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "wav":
		fallthrough
	case "mp3":
		*e = LicenseSFXFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseSFXFormatEnum: %s", s)
	}
}

type LicenseSFX struct {
	AudioLayout *LicenseSFXAudioLayoutEnum `json:"audio_layout,omitempty"`
	Format      *LicenseSFXFormatEnum      `json:"format,omitempty"`
	// ID of the search that led to this licensing event
	SearchID *string `json:"search_id,omitempty"`
	// ID of the sounds effect being licensed
	SfxID string `json:"sfx_id"`
	// ID of the subscription to use for the download.
	SubscriptionID string `json:"subscription_id"`
}
