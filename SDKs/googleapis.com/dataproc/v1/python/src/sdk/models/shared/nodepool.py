"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NodePoolRepairActionEnum(str, Enum):
    r"""Required. Repair action to take on specified resources of the node pool."""
    REPAIR_ACTION_UNSPECIFIED = 'REPAIR_ACTION_UNSPECIFIED'
    DELETE = 'DELETE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NodePool:
    r"""indicating a list of workers of same type"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id."""  
    instance_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceNames'), 'exclude': lambda f: f is None }})
    r"""Name of instances to be repaired. These instances must belong to specified node pool."""  
    repair_action: Optional[NodePoolRepairActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repairAction'), 'exclude': lambda f: f is None }})
    r"""Required. Repair action to take on specified resources of the node pool."""  
    