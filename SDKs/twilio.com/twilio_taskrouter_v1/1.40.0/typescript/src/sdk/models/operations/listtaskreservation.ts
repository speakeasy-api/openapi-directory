/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListTaskReservationServerList = [
  "https://taskrouter.twilio.com",
] as const;

export class ListTaskReservationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListTaskReservationRequest extends SpeakeasyBase {
  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * Returns the list of reservations for a task with a specified ReservationStatus.  Can be: `pending`, `accepted`, `rejected`, or `timeout`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ReservationStatus",
  })
  reservationStatus?: shared.TaskReservationEnumStatusEnum;

  /**
   * The SID of the reserved Task resource with the TaskReservation resources to read.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=TaskSid",
  })
  taskSid: string;

  /**
   * The SID of the reserved Worker resource to read.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=WorkerSid",
  })
  workerSid?: string;

  /**
   * The SID of the Workspace with the TaskReservation resources to read.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=WorkspaceSid",
  })
  workspaceSid: string;
}

export class ListTaskReservationListTaskReservationResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListTaskReservationListTaskReservationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListTaskReservationListTaskReservationResponseMeta)
  meta?: ListTaskReservationListTaskReservationResponseMeta;

  @SpeakeasyMetadata({
    elemType: shared.TaskrouterV1WorkspaceTaskTaskReservation,
  })
  @Expose({ name: "reservations" })
  @Type(() => shared.TaskrouterV1WorkspaceTaskTaskReservation)
  reservations?: shared.TaskrouterV1WorkspaceTaskTaskReservation[];
}

export class ListTaskReservationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listTaskReservationResponse?: ListTaskReservationListTaskReservationResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
