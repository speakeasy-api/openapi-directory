// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountTypeEnum - See Account Types
type AccountTypeEnum string

const (
	AccountTypeEnumBank                    AccountTypeEnum = "BANK"
	AccountTypeEnumCurrent                 AccountTypeEnum = "CURRENT"
	AccountTypeEnumCurrliab                AccountTypeEnum = "CURRLIAB"
	AccountTypeEnumDepreciatn              AccountTypeEnum = "DEPRECIATN"
	AccountTypeEnumDirectcosts             AccountTypeEnum = "DIRECTCOSTS"
	AccountTypeEnumEquity                  AccountTypeEnum = "EQUITY"
	AccountTypeEnumExpense                 AccountTypeEnum = "EXPENSE"
	AccountTypeEnumFixed                   AccountTypeEnum = "FIXED"
	AccountTypeEnumInventory               AccountTypeEnum = "INVENTORY"
	AccountTypeEnumLiability               AccountTypeEnum = "LIABILITY"
	AccountTypeEnumNoncurrent              AccountTypeEnum = "NONCURRENT"
	AccountTypeEnumOtherincome             AccountTypeEnum = "OTHERINCOME"
	AccountTypeEnumOverheads               AccountTypeEnum = "OVERHEADS"
	AccountTypeEnumPrepayment              AccountTypeEnum = "PREPAYMENT"
	AccountTypeEnumRevenue                 AccountTypeEnum = "REVENUE"
	AccountTypeEnumSales                   AccountTypeEnum = "SALES"
	AccountTypeEnumTermliab                AccountTypeEnum = "TERMLIAB"
	AccountTypeEnumPaygliability           AccountTypeEnum = "PAYGLIABILITY"
	AccountTypeEnumPayg                    AccountTypeEnum = "PAYG"
	AccountTypeEnumSuperannuationexpense   AccountTypeEnum = "SUPERANNUATIONEXPENSE"
	AccountTypeEnumSuperannuationliability AccountTypeEnum = "SUPERANNUATIONLIABILITY"
	AccountTypeEnumWagesexpense            AccountTypeEnum = "WAGESEXPENSE"
	AccountTypeEnumWagespayableliability   AccountTypeEnum = "WAGESPAYABLELIABILITY"
)

func (e AccountTypeEnum) ToPointer() *AccountTypeEnum {
	return &e
}

func (e *AccountTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BANK":
		fallthrough
	case "CURRENT":
		fallthrough
	case "CURRLIAB":
		fallthrough
	case "DEPRECIATN":
		fallthrough
	case "DIRECTCOSTS":
		fallthrough
	case "EQUITY":
		fallthrough
	case "EXPENSE":
		fallthrough
	case "FIXED":
		fallthrough
	case "INVENTORY":
		fallthrough
	case "LIABILITY":
		fallthrough
	case "NONCURRENT":
		fallthrough
	case "OTHERINCOME":
		fallthrough
	case "OVERHEADS":
		fallthrough
	case "PREPAYMENT":
		fallthrough
	case "REVENUE":
		fallthrough
	case "SALES":
		fallthrough
	case "TERMLIAB":
		fallthrough
	case "PAYGLIABILITY":
		fallthrough
	case "PAYG":
		fallthrough
	case "SUPERANNUATIONEXPENSE":
		fallthrough
	case "SUPERANNUATIONLIABILITY":
		fallthrough
	case "WAGESEXPENSE":
		fallthrough
	case "WAGESPAYABLELIABILITY":
		*e = AccountTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountTypeEnum: %v", v)
	}
}
