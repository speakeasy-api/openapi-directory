/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleChromePolicyVersionsV1PolicyTargetKey } from "./googlechromepolicyversionsv1policytargetkey";
import { Expose, Type } from "class-transformer";

/**
 * Request message for getting the resolved policy value for a specific target.
 */
export class GoogleChromePolicyVersionsV1ResolveRequest extends SpeakeasyBase {
  /**
   * The maximum number of policies to return, defaults to 100 and has a maximum of 1000.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageSize" })
  pageSize?: number;

  /**
   * The page token used to retrieve a specific page of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pageToken" })
  pageToken?: string;

  /**
   * Required. The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: "chrome.users.*", "chrome.users.apps.*", "chrome.printers.*" Invalid: "*", "*.users", "chrome.*", "chrome.*.apps.*"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policySchemaFilter" })
  policySchemaFilter?: string;

  /**
   * The key used to identify the target on which the policy will be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "policyTargetKey" })
  @Type(() => GoogleChromePolicyVersionsV1PolicyTargetKey)
  policyTargetKey?: GoogleChromePolicyVersionsV1PolicyTargetKey;
}
