// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteRangeRequestShiftDimensionEnum - The dimension from which deleted cells will be replaced with. If ROWS, existing cells will be shifted upward to replace the deleted cells. If COLUMNS, existing cells will be shifted left to replace the deleted cells.
type DeleteRangeRequestShiftDimensionEnum string

const (
	DeleteRangeRequestShiftDimensionEnumDimensionUnspecified DeleteRangeRequestShiftDimensionEnum = "DIMENSION_UNSPECIFIED"
	DeleteRangeRequestShiftDimensionEnumRows                 DeleteRangeRequestShiftDimensionEnum = "ROWS"
	DeleteRangeRequestShiftDimensionEnumColumns              DeleteRangeRequestShiftDimensionEnum = "COLUMNS"
)

func (e *DeleteRangeRequestShiftDimensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = DeleteRangeRequestShiftDimensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRangeRequestShiftDimensionEnum: %s", s)
	}
}

// DeleteRangeRequest - Deletes a range of cells, shifting other cells into the deleted area.
type DeleteRangeRequest struct {
	// A range on a sheet. All indexes are zero-based. Indexes are half open, i.e. the start index is inclusive and the end index is exclusive -- [start_index, end_index). Missing indexes indicate the range is unbounded on that side. For example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id: 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0, end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2, end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B == sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B == sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or equal to the end index. If the start index equals the end index, then the range is empty. Empty ranges are typically not meaningful and are usually rendered in the UI as `#REF!`.
	Range *GridRange `json:"range,omitempty"`
	// The dimension from which deleted cells will be replaced with. If ROWS, existing cells will be shifted upward to replace the deleted cells. If COLUMNS, existing cells will be shifted left to replace the deleted cells.
	ShiftDimension *DeleteRangeRequestShiftDimensionEnum `json:"shiftDimension,omitempty"`
}
