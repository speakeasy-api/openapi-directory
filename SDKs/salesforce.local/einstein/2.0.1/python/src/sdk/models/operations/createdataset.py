"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import dataset as shared_dataset
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateDatasetSecurity:
    
    bearer_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class CreateDatasetRequestBodyTypeEnum(str, Enum):
    r"""Type of dataset data"""
    IMAGE = 'image'
    IMAGE_MULTI_LABEL = 'image-multi-label'


@dataclasses.dataclass
class CreateDatasetRequestBody:
    
    labels: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'labels' }})
    r"""Optional comma-separated list of labels. If specified, creates the labels in the dataset. Maximum number of labels per dataset is 250."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""Name of the dataset. Maximum length is 180 characters."""  
    type: Optional[CreateDatasetRequestBodyTypeEnum] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'type' }})
    r"""Type of dataset data"""  
    

@dataclasses.dataclass
class CreateDatasetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    dataset: Optional[shared_dataset.Dataset] = dataclasses.field(default=None)
    r"""Creation success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    