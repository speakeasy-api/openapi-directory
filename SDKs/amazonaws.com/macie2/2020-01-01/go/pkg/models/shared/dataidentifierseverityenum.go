// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataIdentifierSeverityEnum - The severity of a finding, ranging from LOW, for least severe, to HIGH, for most severe. Valid values are:
type DataIdentifierSeverityEnum string

const (
	DataIdentifierSeverityEnumLow    DataIdentifierSeverityEnum = "LOW"
	DataIdentifierSeverityEnumMedium DataIdentifierSeverityEnum = "MEDIUM"
	DataIdentifierSeverityEnumHigh   DataIdentifierSeverityEnum = "HIGH"
)

func (e DataIdentifierSeverityEnum) ToPointer() *DataIdentifierSeverityEnum {
	return &e
}

func (e *DataIdentifierSeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LOW":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "HIGH":
		*e = DataIdentifierSeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DataIdentifierSeverityEnum: %v", v)
	}
}
