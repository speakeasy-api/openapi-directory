/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Consent } from "./consent";
import { DateRange } from "./daterange";
import { KeyMaterial } from "./keymaterial";
import { Expose, Transform, Type } from "class-transformer";

export class HIRequestHIRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "consent" })
  @Type(() => Consent)
  consent: Consent;

  @SpeakeasyMetadata()
  @Expose({ name: "dataPushUrl" })
  dataPushUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dateRange" })
  @Type(() => DateRange)
  dateRange: DateRange;

  @SpeakeasyMetadata()
  @Expose({ name: "keyMaterial" })
  @Type(() => KeyMaterial)
  keyMaterial: KeyMaterial;
}

export class HIRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "hiRequest" })
  @Type(() => HIRequestHIRequest)
  hiRequest: HIRequestHIRequest;

  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
