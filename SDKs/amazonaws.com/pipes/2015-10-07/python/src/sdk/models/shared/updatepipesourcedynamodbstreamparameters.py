"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deadletterconfig as shared_deadletterconfig
from ..shared import onpartialbatchitemfailurestreams_enum as shared_onpartialbatchitemfailurestreams_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdatePipeSourceDynamoDBStreamParameters:
    r"""The parameters for using a DynamoDB stream as a source."""
    
    batch_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BatchSize'), 'exclude': lambda f: f is None }})  
    dead_letter_config: Optional[shared_deadletterconfig.DeadLetterConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeadLetterConfig'), 'exclude': lambda f: f is None }})  
    maximum_batching_window_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumBatchingWindowInSeconds'), 'exclude': lambda f: f is None }})  
    maximum_record_age_in_seconds: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumRecordAgeInSeconds'), 'exclude': lambda f: f is None }})  
    maximum_retry_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaximumRetryAttempts'), 'exclude': lambda f: f is None }})  
    on_partial_batch_item_failure: Optional[shared_onpartialbatchitemfailurestreams_enum.OnPartialBatchItemFailureStreamsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OnPartialBatchItemFailure'), 'exclude': lambda f: f is None }})  
    parallelization_factor: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParallelizationFactor'), 'exclude': lambda f: f is None }})  
    