/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SuggestTagsAndRegionsRequest extends SpeakeasyBase {
  /**
   * Array of image ids tag suggestion are needed for. Use GetUntaggedImages API to get imageIds.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=imageIds",
  })
  imageIds: string[];

  /**
   * IterationId to use for tag and region suggestion.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=iterationId",
  })
  iterationId: string;

  /**
   * The project id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;
}

export class SuggestTagsAndRegionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error response
   */
  @SpeakeasyMetadata()
  customVisionError?: shared.CustomVisionError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.SuggestedTagAndRegion })
  suggestedTagAndRegions?: shared.SuggestedTagAndRegion[];
}
