<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetCandidatesTotalsAggregatesRequest
{
    /**
     * Candidate totals aggregate_by (Chose one of dropdown options):
     * 
     *         - ' ' grouped by election year
     *         - office grouped by election year, by office
     *         - office-state grouped by election year, by office, by state
     *         - office-state-district grouped by election year, by office, by state, by district
     *         - office-party grouped by election year, by office, by party
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetCandidatesTotalsAggregatesAggregateByEnum $aggregateBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=aggregate_by')]
    public ?GetCandidatesTotalsAggregatesAggregateByEnum $aggregateBy = null;
    
    /**
     * 
     * API key for https://api.data.gov. Get one at https://api.data.gov/signup.
     * 
     * 
     * @var string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public string $apiKey;
    
    /**
     * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
     * 
     * @var ?array<string> $district
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=district')]
    public ?array $district = null;
    
    /**
     * `True` indicates that full election period of a candidate.
     * 
     * `False` indicates that two year election cycle.
     * 
     * @var ?bool $electionFull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=election_full')]
    public ?bool $electionFull = null;
    
    /**
     * 
     * Filter records to only those that were applicable to a given
     * two-year period.The cycle begins with an odd year and is named
     * for its ending, even year.
     * 
     * 
     * @var ?array<int> $electionYear
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=election_year')]
    public ?array $electionYear = null;
    
    /**
     *  Candidates who are actively seeking office. If no value is specified, all candidates
     * 
     * are returned. When True is specified, only active candidates are returned. When False is
     * specified, only inactive candidates are returned.
     * 
     * 
     * @var ?bool $isActiveCandidate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=is_active_candidate')]
    public ?bool $isActiveCandidate = null;
    
    /**
     * 
     * Filter records to only those that are applicable to a given two-year
     * period. This cycle follows the traditional House election cycle and
     * subdivides the presidential and Senate elections into comparable
     * two-year blocks. The cycle begins with an odd year and is named for its
     * ending, even year.
     * 
     * 
     * @var ?int $maxElectionCycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_election_cycle')]
    public ?int $maxElectionCycle = null;
    
    /**
     * 
     * Filter records to only those that are applicable to a given two-year
     * period. This cycle follows the traditional House election cycle and
     * subdivides the presidential and Senate elections into comparable
     * two-year blocks. The cycle begins with an odd year and is named for its
     * ending, even year.
     * 
     * 
     * @var ?int $minElectionCycle
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_election_cycle')]
    public ?int $minElectionCycle = null;
    
    /**
     * Federal office candidate runs for: H, S or P
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetCandidatesTotalsAggregatesOfficeEnum $office
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=office')]
    public ?GetCandidatesTotalsAggregatesOfficeEnum $office = null;
    
    /**
     * For paginating through results, starting at page 1
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page')]
    public ?int $page = null;
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetCandidatesTotalsAggregatesPartyEnum $party
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=party')]
    public ?GetCandidatesTotalsAggregatesPartyEnum $party = null;
    
    /**
     * The number of results returned per page. Defaults to 20.
     * 
     * @var ?int $perPage
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=per_page')]
    public ?int $perPage = null;
    
    /**
     * 
     * Provide a field to sort by. Use `-` for descending order. ex: `-case_no`
     * 
     * 
     * @var ?array<string> $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?array $sort = null;
    
    /**
     * Hide null values on sorted column(s).
     * 
     * @var ?bool $sortHideNull
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_hide_null')]
    public ?bool $sortHideNull = null;
    
    /**
     * Toggle that filters out all rows having sort column that is non-null
     * 
     * @var ?bool $sortNullOnly
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_null_only')]
    public ?bool $sortNullOnly = null;
    
    /**
     * Toggle that sorts null values last
     * 
     * @var ?bool $sortNullsLast
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_nulls_last')]
    public ?bool $sortNullsLast = null;
    
    /**
     * US state or territory where a candidate runs for office
     * 
     * @var ?array<string> $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?array $state = null;
    
	public function __construct()
	{
		$this->aggregateBy = null;
		$this->apiKey = "";
		$this->district = null;
		$this->electionFull = null;
		$this->electionYear = null;
		$this->isActiveCandidate = null;
		$this->maxElectionCycle = null;
		$this->minElectionCycle = null;
		$this->office = null;
		$this->page = null;
		$this->party = null;
		$this->perPage = null;
		$this->sort = null;
		$this->sortHideNull = null;
		$this->sortNullOnly = null;
		$this->sortNullsLast = null;
		$this->state = null;
	}
}
