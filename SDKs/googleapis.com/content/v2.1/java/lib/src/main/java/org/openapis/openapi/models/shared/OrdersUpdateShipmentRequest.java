/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrdersUpdateShipmentRequest {
    /**
     * The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier")
    public String carrier;

    public OrdersUpdateShipmentRequest withCarrier(String carrier) {
        this.carrier = carrier;
        return this;
    }
    
    /**
     * Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryDate")
    public String deliveryDate;

    public OrdersUpdateShipmentRequest withDeliveryDate(String deliveryDate) {
        this.deliveryDate = deliveryDate;
        return this;
    }
    
    /**
     * Date after which the pickup will expire, in ISO 8601 format. Required only when order is buy-online-pickup-in-store(BOPIS) and `status` is `ready for pickup`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastPickupDate")
    public String lastPickupDate;

    public OrdersUpdateShipmentRequest withLastPickupDate(String lastPickupDate) {
        this.lastPickupDate = lastPickupDate;
        return this;
    }
    
    /**
     * The ID of the operation. Unique across all operations for a given order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationId")
    public String operationId;

    public OrdersUpdateShipmentRequest withOperationId(String operationId) {
        this.operationId = operationId;
        return this;
    }
    
    /**
     * Date on which the shipment has been ready for pickup, in ISO 8601 format. Optional and can be provided only if `status` is `ready for pickup`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readyPickupDate")
    public String readyPickupDate;

    public OrdersUpdateShipmentRequest withReadyPickupDate(String readyPickupDate) {
        this.readyPickupDate = readyPickupDate;
        return this;
    }
    
    /**
     * ScheduledDeliveryDetails used to update the scheduled delivery order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduledDeliveryDetails")
    public OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails scheduledDeliveryDetails;

    public OrdersUpdateShipmentRequest withScheduledDeliveryDetails(OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails scheduledDeliveryDetails) {
        this.scheduledDeliveryDetails = scheduledDeliveryDetails;
        return this;
    }
    
    /**
     * The ID of the shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipmentId")
    public String shipmentId;

    public OrdersUpdateShipmentRequest withShipmentId(String shipmentId) {
        this.shipmentId = shipmentId;
        return this;
    }
    
    /**
     * New status for the shipment. Not updated if missing. Acceptable values are: - "`delivered`" - "`undeliverable`" - "`readyForPickup`" 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public OrdersUpdateShipmentRequest withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The tracking ID for the shipment. Not updated if missing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingId")
    public String trackingId;

    public OrdersUpdateShipmentRequest withTrackingId(String trackingId) {
        this.trackingId = trackingId;
        return this;
    }
    
    /**
     * Date on which the shipment has been undeliverable, in ISO 8601 format. Optional and can be provided only if `status` is `undeliverable`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("undeliveredDate")
    public String undeliveredDate;

    public OrdersUpdateShipmentRequest withUndeliveredDate(String undeliveredDate) {
        this.undeliveredDate = undeliveredDate;
        return this;
    }
    
    public OrdersUpdateShipmentRequest(){}
}
