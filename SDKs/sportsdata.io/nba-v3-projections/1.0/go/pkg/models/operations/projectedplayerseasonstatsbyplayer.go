// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectedPlayerSeasonStatsByPlayerFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type ProjectedPlayerSeasonStatsByPlayerFormatEnum string

const (
	ProjectedPlayerSeasonStatsByPlayerFormatEnumXML  ProjectedPlayerSeasonStatsByPlayerFormatEnum = "XML"
	ProjectedPlayerSeasonStatsByPlayerFormatEnumJSON ProjectedPlayerSeasonStatsByPlayerFormatEnum = "JSON"
)

func (e ProjectedPlayerSeasonStatsByPlayerFormatEnum) ToPointer() *ProjectedPlayerSeasonStatsByPlayerFormatEnum {
	return &e
}

func (e *ProjectedPlayerSeasonStatsByPlayerFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = ProjectedPlayerSeasonStatsByPlayerFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectedPlayerSeasonStatsByPlayerFormatEnum: %v", v)
	}
}

type ProjectedPlayerSeasonStatsByPlayerRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format ProjectedPlayerSeasonStatsByPlayerFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID. Example:<code>20000571</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
	// Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2019</code>, etc.
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type ProjectedPlayerSeasonStatsByPlayerResponse struct {
	ContentType            string
	PlayerSeasonProjection *shared.PlayerSeasonProjection
	StatusCode             int
	RawResponse            *http.Response
}
