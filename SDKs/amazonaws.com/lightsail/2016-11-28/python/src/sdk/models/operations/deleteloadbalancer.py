"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deleteloadbalancerrequest as shared_deleteloadbalancerrequest
from ..shared import deleteloadbalancerresult as shared_deleteloadbalancerresult
from enum import Enum
from typing import Any, Optional

class DeleteLoadBalancerXAmzTargetEnum(str, Enum):
    LIGHTSAIL_20161128_DELETE_LOAD_BALANCER = 'Lightsail_20161128.DeleteLoadBalancer'


@dataclasses.dataclass
class DeleteLoadBalancerRequest:
    
    delete_load_balancer_request: shared_deleteloadbalancerrequest.DeleteLoadBalancerRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: DeleteLoadBalancerXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class DeleteLoadBalancerResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_denied_exception: Optional[Any] = dataclasses.field(default=None)
    r"""AccessDeniedException"""  
    account_setup_in_progress_exception: Optional[Any] = dataclasses.field(default=None)
    r"""AccountSetupInProgressException"""  
    delete_load_balancer_result: Optional[shared_deleteloadbalancerresult.DeleteLoadBalancerResult] = dataclasses.field(default=None)
    r"""Success"""  
    invalid_input_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidInputException"""  
    not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""NotFoundException"""  
    operation_failure_exception: Optional[Any] = dataclasses.field(default=None)
    r"""OperationFailureException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceException"""  
    unauthenticated_exception: Optional[Any] = dataclasses.field(default=None)
    r"""UnauthenticatedException"""  
    