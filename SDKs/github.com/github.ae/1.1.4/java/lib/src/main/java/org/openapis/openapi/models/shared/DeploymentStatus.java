/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DeploymentStatus - The status of a deployment.
 */
public class DeploymentStatus {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public DeploymentStatus withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonProperty("creator")
    public NullableSimpleUser creator;
    public DeploymentStatus withCreator(NullableSimpleUser creator) {
        this.creator = creator;
        return this;
    }
    
    @JsonProperty("deployment_url")
    public String deploymentUrl;
    public DeploymentStatus withDeploymentUrl(String deploymentUrl) {
        this.deploymentUrl = deploymentUrl;
        return this;
    }
    
    /**
     * A short description of the status.
     */
    @JsonProperty("description")
    public String description;
    public DeploymentStatus withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The environment of the deployment that the status is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public String environment;
    public DeploymentStatus withEnvironment(String environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * The URL for accessing your environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment_url")
    public String environmentUrl;
    public DeploymentStatus withEnvironmentUrl(String environmentUrl) {
        this.environmentUrl = environmentUrl;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;
    public DeploymentStatus withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The URL to associate with this status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("log_url")
    public String logUrl;
    public DeploymentStatus withLogUrl(String logUrl) {
        this.logUrl = logUrl;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;
    public DeploymentStatus withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("performed_via_github_app")
    public NullableIntegration performedViaGithubApp;
    public DeploymentStatus withPerformedViaGithubApp(NullableIntegration performedViaGithubApp) {
        this.performedViaGithubApp = performedViaGithubApp;
        return this;
    }
    
    @JsonProperty("repository_url")
    public String repositoryUrl;
    public DeploymentStatus withRepositoryUrl(String repositoryUrl) {
        this.repositoryUrl = repositoryUrl;
        return this;
    }
    
    /**
     * The state of the status.
     */
    @JsonProperty("state")
    public DeploymentStatusStateEnum state;
    public DeploymentStatus withState(DeploymentStatusStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Deprecated: the URL to associate with this status.
     */
    @JsonProperty("target_url")
    public String targetUrl;
    public DeploymentStatus withTargetUrl(String targetUrl) {
        this.targetUrl = targetUrl;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public DeploymentStatus withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;
    public DeploymentStatus withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
