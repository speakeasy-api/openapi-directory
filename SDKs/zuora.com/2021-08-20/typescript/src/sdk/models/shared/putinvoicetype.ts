/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PutInvoiceItemType } from "./putinvoiceitemtype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Whether the invoice was transferred to an external accounting system.
 *
 * @remarks
 *
 */
export enum PutInvoiceTypeTransferredToAccountingEnum {
  Processing = "Processing",
  Yes = "Yes",
  Error = "Error",
  Ignore = "Ignore",
}

/**
 * Container for custom fields of an Invoice object.
 *
 * @remarks
 *
 */
export class PutInvoiceType extends SpeakeasyBase {
  /**
   * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationId__NS" })
  integrationIdNS?: string;

  /**
   * Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IntegrationStatus__NS" })
  integrationStatusNS?: string;

  /**
   * Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SyncDate__NS" })
  syncDateNS?: string;

  /**
   * Whether invoices are automatically picked up for processing in the corresponding payment run.
   *
   * @remarks
   *
   * By default, invoices are automatically picked up for processing in the corresponding payment run.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoPay" })
  autoPay?: boolean;

  /**
   * Additional information related to the invoice that a Zuora user added to the invoice.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  /**
   * The date by which the payment for this invoice is due.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dueDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * The new invoice date of the invoice. The new invoice date cannot fall in a closed accounting period.
   *
   * @remarks
   *
   * You can only specify `invoiceDate` or `dueDate` in one request. Otherwise, an error occurs.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  invoiceDate?: Date;

  /**
   * Container for invoice items, The maximum number of items is 1,000.
   *
   * @remarks
   * **Note:** Invoice items can only be updated when Unified Invoice is enabled and the invoice is a standalone invoice.
   *
   */
  @SpeakeasyMetadata({ elemType: PutInvoiceItemType })
  @Expose({ name: "invoiceItems" })
  @Type(() => PutInvoiceItemType)
  invoiceItems?: PutInvoiceItemType[];

  /**
   * Whether the invoice was transferred to an external accounting system.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transferredToAccounting" })
  transferredToAccounting?: PutInvoiceTypeTransferredToAccountingEnum;
}
