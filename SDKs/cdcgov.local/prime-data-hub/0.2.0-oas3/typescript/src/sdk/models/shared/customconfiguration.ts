/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The format of the serializer
 */
export enum CustomConfigurationFormatEnum {
  Csv = "CSV",
  Hl7 = "HL7",
}

/**
 * A custom configuration for a custom schema
 */
export class CustomConfiguration extends SpeakeasyBase {
  /**
   * The format of the serializer
   */
  @SpeakeasyMetadata()
  @Expose({ name: "format" })
  format: CustomConfigurationFormatEnum;

  /**
   * The format to use for the file name generated by the translation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nameFormat" })
  nameFormat?: string;

  /**
   * The name of the receiving organization in the message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receivingOrganization" })
  receivingOrganization?: string;

  /**
   * The name of the custom schema
   */
  @SpeakeasyMetadata()
  @Expose({ name: "schemaName" })
  schemaName: string;

  /**
   * The transport to use
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport" })
  transport: any;

  /**
   * The discrimenator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
