"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from ..shared import cardbin as shared_cardbin
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CostEstimateResponse:
    r"""OK - the request has succeeded."""
    
    card_bin: Optional[shared_cardbin.CardBin] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardBin'), 'exclude': lambda f: f is None }})  
    cost_estimate_amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('costEstimateAmount'), 'exclude': lambda f: f is None }})  
    result_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode'), 'exclude': lambda f: f is None }})
    r"""The result of the cost estimation."""  
    surcharge_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('surchargeType'), 'exclude': lambda f: f is None }})
    r"""Indicates the way the charges can be passed on to the cardholder. The following values are possible:
    * `ZERO` - the charges are not allowed to pass on
    * `PASSTHROUGH` - the charges can be passed on
    * `UNLIMITED` - there is no limit on how much surcharge is passed on
    """  
    