/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { IamPolicyAnalysisQuery } from "./iampolicyanalysisquery";
import { IamPolicyAnalysisResult } from "./iampolicyanalysisresult";
import { Expose, Type } from "class-transformer";

/**
 * An analysis message to group the query and results.
 */
export class IamPolicyAnalysis extends SpeakeasyBase {
  /**
   * IAM policy analysis query message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "analysisQuery" })
  @Type(() => IamPolicyAnalysisQuery)
  analysisQuery?: IamPolicyAnalysisQuery;

  /**
   * A list of IamPolicyAnalysisResult that matches the analysis query, or empty if no result is found.
   */
  @SpeakeasyMetadata({ elemType: IamPolicyAnalysisResult })
  @Expose({ name: "analysisResults" })
  @Type(() => IamPolicyAnalysisResult)
  analysisResults?: IamPolicyAnalysisResult[];

  /**
   * Represents whether all entries in the analysis_results have been fully explored to answer the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullyExplored" })
  fullyExplored?: boolean;
}
