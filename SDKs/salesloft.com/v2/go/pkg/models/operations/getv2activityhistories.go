// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetV2ActivityHistoriesQueryParams struct {
	// For internal use only. This field does not comply with our backwards compatibility policies. This filter is for authenticated users of Salesloft only and will not work for OAuth Applications. Filter by the {resource_type, resource_id} of activity. Provide this in the format resource[]=person,1234
	Resource *string `queryParam:"style=form,explode=true,name=_resource"`
	// Whether to include total_pages and total_count in the metadata. Defaults to false
	IncludePagingCounts *bool `queryParam:"style=form,explode=true,name=include_paging_counts"`
	// Equality filters that are applied to the occurred_at field. A single filter can be used by itself or combined with other filters to create a range.
	// ---CUSTOM---
	// {"keys":[{"description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"gt","type":"iso8601 string"},{"description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"gte","type":"iso8601 string"},{"description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"lt","type":"iso8601 string"},{"description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"lte","type":"iso8601 string"}],"type":"object"}
	//
	OccurredAt map[string]interface{} `queryParam:"style=form,explode=true,name=occurred_at"`
	// The current page to fetch results from. Defaults to 1
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// How many records to show per page in the range [1, 100]. Defaults to 25
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Filter by the pinned status of activity. Must be 'true' or 'false'
	Pinned *bool `queryParam:"style=form,explode=true,name=pinned"`
	// Filter by the resource id. "resource_type" filter is required to use this filter.
	ResourceID []string `queryParam:"style=form,explode=false,name=resource_id"`
	// Filter by the resource type. A resource is a Salesloft object that the activity is attributed to. A valid resource types must be one of person, account, crm_opportunity. Can be provided as an array
	ResourceType *string `queryParam:"style=form,explode=true,name=resource_type"`
	// Key to sort on, must be one of: occurred_at, updated_at. Defaults to occurred_at
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// Direction to sort in, must be one of: ASC, DESC. Defaults to DESC
	SortDirection *string `queryParam:"style=form,explode=true,name=sort_direction"`
	// Filter by the type of activity. Must be one of: added_to_cadence, completed_action, call, requested_email, sent_email, received_email, email_reply, note, success, dnc_event, residency_change, meeting, meeting_held, message_conversation, task, voicemail, opportunity_stage_change, opportunity_amount_change, opportunity_close_date_change. Can be provided as an array, or as an object of type[resource_type][]=type
	Type *string `queryParam:"style=form,explode=true,name=type"`
	// Equality filters that are applied to the updated_at field. A single filter can be used by itself or combined with other filters to create a range.
	// ---CUSTOM---
	// {"keys":[{"description":"Returns all matching records that are greater than the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"gt","type":"iso8601 string"},{"description":"Returns all matching records that are greater than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"gte","type":"iso8601 string"},{"description":"Returns all matching records that are less than the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"lt","type":"iso8601 string"},{"description":"Returns all matching records that are less than or equal to the provided iso8601 timestamp. The comparison is done using microsecond precision.","name":"lte","type":"iso8601 string"}],"type":"object"}
	//
	UpdatedAt map[string]interface{} `queryParam:"style=form,explode=true,name=updated_at"`
	// Filter activities by a user's guid.
	UserGUID *string `queryParam:"style=form,explode=true,name=user_guid"`
}

type GetV2ActivityHistoriesRequest struct {
	QueryParams GetV2ActivityHistoriesQueryParams
}

type GetV2ActivityHistoriesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
