<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OrderReturnDiscount - Represents a discount being returned that applies to one or more return line items in an
 * 
 * order.
 * 
 * Fixed-amount, order-scoped discounts are distributed across all non-zero return line item totals.
 * The amount distributed to each return line item is relative to that itemâ€™s contribution to the
 * order subtotal.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OrderReturnDiscount
{
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $amountMoney = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $appliedMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $appliedMoney = null;
    
    /**
     * The catalog object ID referencing [CatalogDiscount](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogDiscount).
     * 
     * @var ?string $catalogObjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_object_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $catalogObjectId = null;
    
    /**
     * The version of the catalog object that this discount references.
     * 
     * @var ?int $catalogVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $catalogVersion = null;
    
    /**
     * The discount's name.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The percentage of the tax, as a string representation of a decimal number.
     * 
     * A value of `"7.25"` corresponds to a percentage of 7.25%.
     * 
     * `percentage` is not set for amount-based discounts.
     * 
     * @var ?string $percentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('percentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $percentage = null;
    
    /**
     * Indicates the level at which the `OrderReturnDiscount` applies. For `ORDER` scoped
     * 
     * discounts, the server generates references in `applied_discounts` on all
     * `OrderReturnLineItem`s. For `LINE_ITEM` scoped discounts, the discount is only applied to
     * `OrderReturnLineItem`s with references in their `applied_discounts` field.
     * 
     * @var ?string $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scope = null;
    
    /**
     * The discount `uid` from the order that contains the original application of this discount.
     * 
     * @var ?string $sourceDiscountUid
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_discount_uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDiscountUid = null;
    
    /**
     * The type of the discount. If it is created by the API, it is `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.
     * 
     * 
     * Discounts that do not reference a catalog object ID must have a type of
     * `FIXED_PERCENTAGE` or `FIXED_AMOUNT`.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * A unique ID that identifies the returned discount only within this order.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
	public function __construct()
	{
		$this->amountMoney = null;
		$this->appliedMoney = null;
		$this->catalogObjectId = null;
		$this->catalogVersion = null;
		$this->name = null;
		$this->percentage = null;
		$this->scope = null;
		$this->sourceDiscountUid = null;
		$this->type = null;
		$this->uid = null;
	}
}
