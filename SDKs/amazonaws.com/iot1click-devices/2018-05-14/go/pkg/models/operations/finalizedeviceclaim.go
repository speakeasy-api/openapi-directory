// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FinalizeDeviceClaimRequestBody struct {
	// <p>A collection of key/value pairs defining the resource tags. For example, {
	//  "tags": {"key1": "value1", "key2": "value2"} }. For more information, see <a href="https://aws.amazon.com/answers/account-management/aws-tagging-strategies/">AWS
	//  Tagging Strategies</a>.</p><p>
	//
	//  </p>
	Tags map[string]string `json:"tags,omitempty"`
}

type FinalizeDeviceClaimRequest struct {
	RequestBody       FinalizeDeviceClaimRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier of the device.
	DeviceID string `pathParam:"style=simple,explode=false,name=deviceId"`
}

type FinalizeDeviceClaimResponse struct {
	ContentType string
	// Success
	FinalizeDeviceClaimResponse *shared.FinalizeDeviceClaimResponse
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// ResourceConflictException
	ResourceConflictException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
