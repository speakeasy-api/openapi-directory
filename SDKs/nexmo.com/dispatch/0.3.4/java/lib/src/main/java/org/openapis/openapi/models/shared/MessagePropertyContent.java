/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class MessagePropertyContent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audio")
    public AudioProperty audio;

    public MessagePropertyContent withAudio(AudioProperty audio) {
        this.audio = audio;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file")
    public FileProperty file;

    public MessagePropertyContent withFile(FileProperty file) {
        this.file = file;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public ImageProperty image;

    public MessagePropertyContent withImage(ImageProperty image) {
        this.image = image;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    public TemplateProperty template;

    public MessagePropertyContent withTemplate(TemplateProperty template) {
        this.template = template;
        return this;
    }
    
    /**
     * The text of the message.
     * 
     * **Messenger**: Is limited to 640 characters
     * 
     * **SMS** or **Viber**: Is 1000 characters
     * 
     * **WhatsApp**: is 4096 characters
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;

    public MessagePropertyContent withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * The type of message that you are sending.
     * 
     * **Messenger**: supports `text`, `image`, `audio`, `video` and `file`.
     * 
     * **Viber Business Messages**: supports `image` and `text`.
     * 
     * **WhatsApp**: supports `template`, `text`, `image`, `audio`, `video` and `file`.
     * 
     * **SMS**: supports `text`.
     * 
     */
    @JsonProperty("type")
    public MessagePropertyContentTypeEnum type;

    public MessagePropertyContent withType(MessagePropertyContentTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("video")
    public VideoProperty video;

    public MessagePropertyContent withVideo(VideoProperty video) {
        this.video = video;
        return this;
    }
    
    public MessagePropertyContent(@JsonProperty("type") MessagePropertyContentTypeEnum type) {
        this.type = type;
  }
}
