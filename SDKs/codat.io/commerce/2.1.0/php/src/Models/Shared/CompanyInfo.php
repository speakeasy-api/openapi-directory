<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CompanyInfo - In the Codat system, company information includes standard commercial details about 
 * 
 * a linked company, such as their address, phone number, and company registration.
 * 
 * Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&dataType=companyInfo) for this data type.
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CompanyInfo
{
    /**
     * The available and current cash balances for the company's accounts
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AccountBalance> $accountBalances
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountBalances')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AccountBalance>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accountBalances = null;
    
    /**
     * Addresses associated with the company
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Address> $addresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('addresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Address>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addresses = null;
    
    /**
     * The currency data type in Codat is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, e.g. _GBP_.
     * 
     * 
     * ## Unknown currencies
     * 
     * In line with the ISO 4217 specification, the code _XXX_ is used when the data source does not return a currency for a transaction. 
     * 
     * There are only a very small number of edge cases where this currency code is returned by the Codat system.
     * 
     * @var ?string $baseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('baseCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $baseCurrency = null;
    
    /**
     * Identifier or reference for the company in the commerce platform
     * 
     * @var ?string $commercePlatformRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('commercePlatformRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commercePlatformRef = null;
    
    /**
     * The full legal name of the company
     * 
     * @var ?string $companyLegalName
     */
	#[\JMS\Serializer\Annotation\SerializedName('companyLegalName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyLegalName = null;
    
    /**
     * The name of the company
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('companyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
     * 
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * > Time zones
     * > 
     * > Not all dates from Codat will contain information about time zones.  
     * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     * 
     * @var ?string $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdDate = null;
    
    /**
     * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
     * 
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * > Time zones
     * > 
     * > Not all dates from Codat will contain information about time zones.  
     * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     * 
     * @var ?string $modifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modifiedDate = null;
    
    /**
     * Phone numbers associated with the company
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PhoneNumber> $phoneNumbers
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumbers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PhoneNumber>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phoneNumbers = null;
    
    /**
     * The registration number of the company
     * 
     * @var ?string $registrationNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('registrationNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $registrationNumber = null;
    
    /**
     * In Codat's data model, dates and times are represented using the <a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601 standard</a>. Date and time fields are formatted as strings; for example:
     * 
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * > Time zones
     * > 
     * > Not all dates from Codat will contain information about time zones.  
     * > Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     * 
     * @var ?string $sourceModifiedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceModifiedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceModifiedDate = null;
    
    /**
     * URL addresses for the originating system. For example, potential use cases include 'deeplinking' to the originating system
     * 
     * @var ?array<string, string> $sourceUrls
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceUrls')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sourceUrls = null;
    
    /**
     * Weblinks associated with the company
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CompanyInfoWeblink> $webLinks
     */
	#[\JMS\Serializer\Annotation\SerializedName('webLinks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CompanyInfoWeblink>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $webLinks = null;
    
	public function __construct()
	{
		$this->accountBalances = null;
		$this->addresses = null;
		$this->baseCurrency = null;
		$this->commercePlatformRef = null;
		$this->companyLegalName = null;
		$this->companyName = null;
		$this->createdDate = null;
		$this->modifiedDate = null;
		$this->phoneNumbers = null;
		$this->registrationNumber = null;
		$this->sourceModifiedDate = null;
		$this->sourceUrls = null;
		$this->webLinks = null;
	}
}
