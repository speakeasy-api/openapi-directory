// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListPackagesSecurity struct {
	RhIdentity shared.SchemeRhIdentity `security:"scheme,type=apiKey,subtype=header"`
}

// ListPackagesSortEnum - Sort field
type ListPackagesSortEnum string

const (
	ListPackagesSortEnumID               ListPackagesSortEnum = "id"
	ListPackagesSortEnumName             ListPackagesSortEnum = "name"
	ListPackagesSortEnumSystemsInstalled ListPackagesSortEnum = "systems_installed"
	ListPackagesSortEnumSystemsUpdatable ListPackagesSortEnum = "systems_updatable"
)

func (e *ListPackagesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "systems_installed":
		fallthrough
	case "systems_updatable":
		*e = ListPackagesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPackagesSortEnum: %s", s)
	}
}

type ListPackagesQueryParams struct {
	// Filter
	FilterName *string `queryParam:"style=form,explode=true,name=filter[name]"`
	// Filter
	FilterSummary *string `queryParam:"style=form,explode=true,name=filter[summary]"`
	// Filter systems by their SAP SIDs
	FilterSystemProfileSapSidsIn []string `queryParam:"style=form,explode=true,name=filter[system_profile][sap_sids][in]"`
	// Filter only SAP systems
	FilterSystemProfileSapSystem *string `queryParam:"style=form,explode=true,name=filter[system_profile][sap_system]"`
	// Filter
	FilterSystemsInstalled *string `queryParam:"style=form,explode=true,name=filter[systems_installed]"`
	// Filter
	FilterSystemsUpdatable *string `queryParam:"style=form,explode=true,name=filter[systems_updatable]"`
	// Limit for paging, set -1 to return all
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Offset for paging
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Find matching text
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Sort field
	Sort *ListPackagesSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Tag filter
	Tags []string `queryParam:"style=form,explode=true,name=tags"`
}

type ListPackagesRequest struct {
	QueryParams ListPackagesQueryParams
	Security    ListPackagesSecurity
}

type ListPackagesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ControllersPackagesResponse *shared.ControllersPackagesResponse
}
