// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutAccountSettingDefaultXAmzTargetEnum
type PutAccountSettingDefaultXAmzTargetEnum string

const (
	PutAccountSettingDefaultXAmzTargetEnumAmazonEc2ContainerServiceV20141113PutAccountSettingDefault PutAccountSettingDefaultXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.PutAccountSettingDefault"
)

func (e PutAccountSettingDefaultXAmzTargetEnum) ToPointer() *PutAccountSettingDefaultXAmzTargetEnum {
	return &e
}

func (e *PutAccountSettingDefaultXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerServiceV20141113.PutAccountSettingDefault":
		*e = PutAccountSettingDefaultXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAccountSettingDefaultXAmzTargetEnum: %v", v)
	}
}

type PutAccountSettingDefaultRequest struct {
	PutAccountSettingDefaultRequest shared.PutAccountSettingDefaultRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      PutAccountSettingDefaultXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PutAccountSettingDefaultResponse struct {
	// ClientException
	ClientException interface{}
	ContentType     string
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	PutAccountSettingDefaultResponse *shared.PutAccountSettingDefaultResponse
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
}
