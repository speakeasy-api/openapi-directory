"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import session as shared_session
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSessionsResponse:
    r"""Successful response"""
    
    deleted_session: Optional[list[shared_session.Session]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deletedSession'), 'exclude': lambda f: f is None }})
    r"""If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync."""  
    has_more_data: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasMoreData'), 'exclude': lambda f: f is None }})
    r"""Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request."""  
    session: Optional[list[shared_session.Session]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('session'), 'exclude': lambda f: f is None }})
    r"""Sessions with an end time that is between startTime and endTime of the request."""  
    