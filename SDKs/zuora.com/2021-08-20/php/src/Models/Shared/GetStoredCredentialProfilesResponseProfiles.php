<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetStoredCredentialProfilesResponseProfiles - Container for stored credential profiles.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetStoredCredentialProfilesResponseProfiles
{
    /**
     * The date when the stored credential profile was activated (if applicable).
     * 
     * 
     * 
     * @var ?\DateTime $activatedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('activatedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $activatedOn = null;
    
    /**
     * The date when the stored credential profile was created.
     * 
     * 
     * 
     * @var ?\DateTime $agreedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('agreedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $agreedOn = null;
    
    /**
     * The stored credential transaction framework. For example, Visa.
     * 
     * 
     * 
     * @var ?string $brand
     */
	#[\JMS\Serializer\Annotation\SerializedName('brand')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $brand = null;
    
    /**
     * The date when the stored credential profile was cancelled (if applicable).
     * 
     * 
     * 
     * @var ?\DateTime $cancelledOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancelledOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $cancelledOn = null;
    
    /**
     * Your reference for the consent agreement that you have established with the customer.
     * 
     * 
     * 
     * @var ?string $consentAgreementRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('consentAgreementRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $consentAgreementRef = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('consentAgreementSrc')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetStoredCredentialProfilesResponseProfilesConsentAgreementSrcEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetStoredCredentialProfilesResponseProfilesConsentAgreementSrcEnum $consentAgreementSrc = null;
    
    /**
     * The date when the stored credential profile was expired (if applicable).
     * 
     * 
     * 
     * @var ?\DateTime $expiredOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiredOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expiredOn = null;
    
    /**
     * The number that identifies the stored credential profile within the payment method.
     * 
     * 
     * 
     * @var ?int $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $number = null;
    
    /**
     * ID of the payment method.
     * 
     * 
     * 
     * @var ?string $paymentMethodId
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentMethodId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMethodId = null;
    
    /**
     * The status of the stored credential profile.
     * 
     * 
     * * `Agreed` - The stored credential profile has not been validated via an authorization transaction with the payment gateway.
     * * `Active` - The stored credential profile has been validated via an authorization transaction with the payment gateway.
     * * `Cancelled` - The stored credentials are no longer valid, per a customer request. Zuora cannot use the stored credentials in transactions.
     * * `Expired` - The stored credentials are no longer valid, per an expiration policy in the stored credential transaction framework. Zuora cannot use the stored credentials in transactions.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GetStoredCredentialProfilesResponseProfilesStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetStoredCredentialProfilesResponseProfilesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetStoredCredentialProfilesResponseProfilesStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GetStoredCredentialProfilesResponseProfilesTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetStoredCredentialProfilesResponseProfilesTypeEnum $type = null;
    
	public function __construct()
	{
		$this->activatedOn = null;
		$this->agreedOn = null;
		$this->brand = null;
		$this->cancelledOn = null;
		$this->consentAgreementRef = null;
		$this->consentAgreementSrc = null;
		$this->expiredOn = null;
		$this->number = null;
		$this->paymentMethodId = null;
		$this->status = null;
		$this->type = null;
	}
}
