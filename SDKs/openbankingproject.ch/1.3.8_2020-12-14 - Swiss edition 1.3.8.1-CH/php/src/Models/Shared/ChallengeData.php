<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ChallengeData - It is contained in addition to the data element 'chosenScaMethod' if challenge data is needed for SCA.
 * 
 * In rare cases this attribute is also used in the context of the 'startAuthorisationWithPsuAuthentication' link.
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ChallengeData
{
    /**
     * Additional explanation for the PSU to explain
     * 
     * e.g. fallback mechanism for the chosen SCA method.
     * The TPP is obliged to show this to the PSU.
     * 
     * 
     * @var ?string $additionalInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalInformation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $additionalInformation = null;
    
    /**
     * A collection of strings as challenge data.
     * 
     * @var ?array<string> $data
     */
	#[\JMS\Serializer\Annotation\SerializedName('data')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $data = null;
    
    /**
     * PNG data (max. 512 kilobyte) to be displayed to the PSU,
     * 
     * Base64 encoding, cp. [RFC4648].
     * This attribute is used only, when PHOTO_OTP or CHIP_OTP
     * is the selected SCA method.
     * 
     * 
     * @var ?string $image
     */
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $image = null;
    
    /**
     * A link where the ASPSP will provides the challenge image for the TPP.
     * 
     * @var ?string $imageLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('imageLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imageLink = null;
    
    /**
     * The format type of the OTP to be typed in. The admitted values are "characters" or "integer".
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChallengeDataOtpFormatEnum $otpFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('otpFormat')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ChallengeDataOtpFormatEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChallengeDataOtpFormatEnum $otpFormat = null;
    
    /**
     * The maximal length for the OTP to be typed in by the PSU.
     * 
     * @var ?int $otpMaxLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('otpMaxLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $otpMaxLength = null;
    
	public function __construct()
	{
		$this->additionalInformation = null;
		$this->data = null;
		$this->image = null;
		$this->imageLink = null;
		$this->otpFormat = null;
		$this->otpMaxLength = null;
	}
}
