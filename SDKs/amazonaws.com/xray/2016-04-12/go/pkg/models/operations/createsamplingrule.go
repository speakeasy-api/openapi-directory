// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateSamplingRuleHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateSamplingRuleRequestBodySamplingRule - A sampling rule that services use to decide whether to instrument a request. Rule fields can match properties of the service, or properties of a request. The service can ignore rules that don't match its properties.
type CreateSamplingRuleRequestBodySamplingRule struct {
	Attributes    map[string]string `json:"Attributes,omitempty"`
	FixedRate     *float64          `json:"FixedRate,omitempty"`
	HTTPMethod    *string           `json:"HTTPMethod,omitempty"`
	Host          *string           `json:"Host,omitempty"`
	Priority      *int64            `json:"Priority,omitempty"`
	ReservoirSize *int64            `json:"ReservoirSize,omitempty"`
	ResourceARN   *string           `json:"ResourceARN,omitempty"`
	RuleARN       *string           `json:"RuleARN,omitempty"`
	RuleName      *string           `json:"RuleName,omitempty"`
	ServiceName   *string           `json:"ServiceName,omitempty"`
	ServiceType   *string           `json:"ServiceType,omitempty"`
	URLPath       *string           `json:"URLPath,omitempty"`
	Version       *int64            `json:"Version,omitempty"`
}

type CreateSamplingRuleRequestBody struct {
	// A sampling rule that services use to decide whether to instrument a request. Rule fields can match properties of the service, or properties of a request. The service can ignore rules that don't match its properties.
	SamplingRule CreateSamplingRuleRequestBodySamplingRule `json:"SamplingRule"`
	// <p>A map that contains one or more tag keys and tag values to attach to an X-Ray sampling rule. For more information about ways to use tags, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>The following restrictions apply to tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p> </li> <li> <p>Maximum tag key length: 128 Unicode characters</p> </li> <li> <p>Maximum tag value length: 256 Unicode characters</p> </li> <li> <p>Valid values for key and value: a-z, A-Z, 0-9, space, and the following characters: _ . : / = + - and @</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as a prefix for keys; it's reserved for Amazon Web Services use.</p> </li> </ul>
	Tags []shared.Tag `json:"Tags,omitempty"`
}

type CreateSamplingRuleRequest struct {
	Headers CreateSamplingRuleHeaders
	Request CreateSamplingRuleRequestBody `request:"mediaType=application/json"`
}

type CreateSamplingRuleResponse struct {
	ContentType string
	// Success
	CreateSamplingRuleResult *shared.CreateSamplingRuleResult
	// InvalidRequestException
	InvalidRequestException interface{}
	// RuleLimitExceededException
	RuleLimitExceededException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ThrottledException
	ThrottledException interface{}
}
