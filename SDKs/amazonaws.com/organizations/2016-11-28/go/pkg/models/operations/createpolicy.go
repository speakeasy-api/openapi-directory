// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreatePolicyXAmzTargetEnum
type CreatePolicyXAmzTargetEnum string

const (
	CreatePolicyXAmzTargetEnumAwsOrganizationsV20161128CreatePolicy CreatePolicyXAmzTargetEnum = "AWSOrganizationsV20161128.CreatePolicy"
)

func (e *CreatePolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSOrganizationsV20161128.CreatePolicy":
		*e = CreatePolicyXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePolicyXAmzTargetEnum: %s", s)
	}
}

type CreatePolicyHeaders struct {
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        CreatePolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreatePolicyRequest struct {
	Headers CreatePolicyHeaders
	Request shared.CreatePolicyRequest `request:"mediaType=application/json"`
}

type CreatePolicyResponse struct {
	// AWSOrganizationsNotInUseException
	AWSOrganizationsNotInUseException interface{}
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	// ConstraintViolationException
	ConstraintViolationException interface{}
	ContentType                  string
	// Success
	CreatePolicyResponse *shared.CreatePolicyResponse
	// DuplicatePolicyException
	DuplicatePolicyException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// MalformedPolicyDocumentException
	MalformedPolicyDocumentException interface{}
	// PolicyTypeNotAvailableForOrganizationException
	PolicyTypeNotAvailableForOrganizationException interface{}
	StatusCode                                     int
	RawResponse                                    *http.Response
	// ServiceException
	ServiceException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UnsupportedAPIEndpointException
	UnsupportedAPIEndpointException interface{}
}
