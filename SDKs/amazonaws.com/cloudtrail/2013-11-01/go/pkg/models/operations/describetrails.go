// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeTrailsXAmzTargetEnum
type DescribeTrailsXAmzTargetEnum string

const (
	DescribeTrailsXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101DescribeTrails DescribeTrailsXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DescribeTrails"
)

func (e DescribeTrailsXAmzTargetEnum) ToPointer() *DescribeTrailsXAmzTargetEnum {
	return &e
}

func (e *DescribeTrailsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.DescribeTrails":
		*e = DescribeTrailsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTrailsXAmzTargetEnum: %v", v)
	}
}

type DescribeTrailsRequest struct {
	DescribeTrailsRequest shared.DescribeTrailsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DescribeTrailsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeTrailsResponse struct {
	ContentType string
	// Success
	DescribeTrailsResponse *shared.DescribeTrailsResponse
	// InvalidTrailNameException
	InvalidTrailNameException interface{}
	// NoManagementAccountSLRExistsException
	NoManagementAccountSLRExistsException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
