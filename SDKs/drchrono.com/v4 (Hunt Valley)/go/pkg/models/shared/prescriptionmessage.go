// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrescriptionMessageMessageDirectionEnum - Possible values are `Outgoing` and `Incoming`.
type PrescriptionMessageMessageDirectionEnum string

const (
	PrescriptionMessageMessageDirectionEnumI PrescriptionMessageMessageDirectionEnum = "I"
	PrescriptionMessageMessageDirectionEnumO PrescriptionMessageMessageDirectionEnum = "O"
)

func (e *PrescriptionMessageMessageDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "I":
		fallthrough
	case "O":
		*e = PrescriptionMessageMessageDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PrescriptionMessageMessageDirectionEnum: %s", s)
	}
}

// PrescriptionMessage - OK
type PrescriptionMessage struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Doctor    *int64  `json:"doctor,omitempty"`
	ID        *int64  `json:"id,omitempty"`
	// Data sent along with `NewRx`, `RefillRequest`, and `RefillResponses` messages. The format varies, but most likely it will contain `BenefitsCoordination` section with insurance info and `MedicationPrescribed` with medication info. `Patient`, `Pharmacy`, and `Prescriber` are also usually present.
	JSONData *string `json:"json_data,omitempty"`
	// Possible values are `Outgoing` and `Incoming`.
	MessageDirection *PrescriptionMessageMessageDirectionEnum `json:"message_direction,omitempty"`
	// Message status for Incoming and Outgoing values. Success message for message_type are: `NewRx` : `Sent`, `RefillRequest` : `Received`, `RefillResponse` : `Sent`.
	MessageStatus *string `json:"message_status,omitempty"`
	// Possible values are `NewRx` for outgoing new prescriptions, `RefillRequest` for incoming refill requests, `RefillResponse` for outgoing refill responses, `Error` for incoming errors, `Status` and `Verify` for incoming status reports from Surescripts.
	MessageType *string `json:"message_type,omitempty"`
	// Refers to the parent message, used for refill responses and incoming error/status reports.
	ParentMessage *string `json:"parent_message,omitempty"`
	// An optional field which refers to a patient.
	Patient *int64 `json:"patient,omitempty"`
	// NCPDPID allocated #ID of the Pharmacy
	Pharmacy *string `json:"pharmacy,omitempty"`
}
