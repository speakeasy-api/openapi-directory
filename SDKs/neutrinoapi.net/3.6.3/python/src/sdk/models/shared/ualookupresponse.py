"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UALookupResponse:
    
    browser_engine: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('browser-engine') }})
    r"""If the client is a web browser which underlying browser engine does it use"""  
    browser_release: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('browser-release') }})
    r"""If the client is a web browser which year was this browser version released"""  
    device_brand: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-brand') }})
    r"""The device brand / manufacturer"""  
    device_height_px: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-height-px') }})
    r"""The device display height in CSS 'px'"""  
    device_model: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-model') }})
    r"""The device model"""  
    device_model_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-model-code') }})
    r"""The device model code"""  
    device_pixel_ratio: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-pixel-ratio') }})
    r"""The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)"""  
    device_ppi: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-ppi') }})
    r"""The device display PPI (pixels per inch)"""  
    device_price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-price') }})
    r"""The average device price on release in USD"""  
    device_release: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-release') }})
    r"""The year when this device model was released"""  
    device_resolution: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-resolution') }})
    r"""The device display resolution in physical pixels (e.g. 720x1280)"""  
    device_width_px: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device-width-px') }})
    r"""The device display width in CSS 'px'"""  
    is_mobile: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is-mobile') }})
    r"""Is this a mobile device (e.g. a phone or tablet)"""  
    is_webview: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is-webview') }})
    r"""Is this a WebView / embedded software client"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The client software name"""  
    os: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os') }})
    r"""The full operating system name"""  
    os_family: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os-family') }})
    r"""The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux"""  
    os_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os-version') }})
    r"""The operating system full version"""  
    os_version_major: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os-version-major') }})
    r"""The operating system major version"""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>"""  
    ua: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ua') }})
    r"""The user agent string"""  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""The client software full version"""  
    version_major: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version-major') }})
    r"""The client software major version"""  
    