// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// PreprintsCreatePreprintAttributesInput - The properties of the preprint entity.
type PreprintsCreatePreprintAttributesInput struct {
	// The DOI of the associated journal article, as entered by the user, if the preprint is published.
	Doi *string `json:"doi,omitempty"`
	// The metadata (copyright year and holder) associated with a license, required for certain licenses.
	LicenseRecord *string `json:"license_record,omitempty"`
	// A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
	Subjects []string `json:"subjects,omitempty"`
}

// PreprintsCreatePreprintRelationshipsInput - URLs to other entities or entity collections that have a relationship to the preprint entity.
type PreprintsCreatePreprintRelationshipsInput struct {
	// A relationship to the license that has been applied to the preprint.
	License *string `json:"license,omitempty"`
	// A relationship to the node that was created for the preprint, or from which the preprint was created.
	Node string `json:"node"`
	// A relationship to the file that is designated as the preprint's primary file, or the manuscript of the preprint.
	PrimaryFile string `json:"primary_file"`
	// A relationship to the preprint provider under which the preprint was created (OSF, socarxiv, psyarxiv, etc.).
	Provider string `json:"provider"`
}

type PreprintsCreatePreprintInput struct {
	// The properties of the preprint entity.
	Attributes *PreprintsCreatePreprintAttributesInput `json:"attributes,omitempty"`
	// URLs to other entities or entity collections that have a relationship to the preprint entity.
	Relationships PreprintsCreatePreprintRelationshipsInput `json:"relationships"`
	// The type identifier of the preprint entity (`preprints`).
	Type string `json:"type"`
}

type PreprintsCreateRequest struct {
	Request PreprintsCreatePreprintInput `request:"mediaType=application/json"`
}

type PreprintsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
