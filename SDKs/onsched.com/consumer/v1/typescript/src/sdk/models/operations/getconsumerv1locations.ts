/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetConsumerV1LocationsRequest extends SpeakeasyBase {
  /**
   * Frienldy Id of location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=friendlyId",
  })
  friendlyId?: string;

  /**
   * Don't include the Primary Location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ignorePrimary",
  })
  ignorePrimary?: boolean;

  /**
   * Page limit, default 20, max 100
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Location name (full or partial)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Search by distance nearest Geocoords, City, Postal/Zip Code
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=nearestTo",
  })
  nearestTo?: string;

  /**
   * Starting row of page, default 0
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * Maximum distance to display
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=proximity",
  })
  proximity?: number;

  /**
   * Locations within a specific region
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=regionId",
  })
  regionId?: string;

  /**
   * Locations that offer this service
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=serviceId",
  })
  serviceId?: string;

  /**
   * Distance either imperial(miles), metric(kilometers)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=units" })
  units?: string;
}

export class GetConsumerV1LocationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  locationListViewModel?: shared.LocationListViewModel;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
