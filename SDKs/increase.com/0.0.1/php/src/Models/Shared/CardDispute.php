<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CardDispute - If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CardDispute
{
    /**
     * If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CardDisputeCardDisputeAcceptance $acceptance
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CardDisputeCardDisputeAcceptance')]
    public CardDisputeCardDisputeAcceptance $acceptance;
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The identifier of the Transaction that was disputed.
     * 
     * @var string $disputedTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('disputed_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $disputedTransactionId;
    
    /**
     * Why you disputed the Transaction in question.
     * 
     * @var string $explanation
     */
	#[\JMS\Serializer\Annotation\SerializedName('explanation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $explanation;
    
    /**
     * The Card Dispute identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CardDisputeCardDisputeRejection $rejection
     */
	#[\JMS\Serializer\Annotation\SerializedName('rejection')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CardDisputeCardDisputeRejection')]
    public CardDisputeCardDisputeRejection $rejection;
    
    /**
     * The results of the Dispute investigation.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CardDisputeStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CardDisputeStatusEnum>')]
    public CardDisputeStatusEnum $status;
    
    /**
     * A constant representing the object's type. For this resource it will always be `card_dispute`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CardDisputeTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CardDisputeTypeEnum>')]
    public CardDisputeTypeEnum $type;
    
	public function __construct()
	{
		$this->acceptance = new \OpenAPI\OpenAPI\Models\Shared\CardDisputeCardDisputeAcceptance();
		$this->createdAt = new \DateTime();
		$this->disputedTransactionId = "";
		$this->explanation = "";
		$this->id = "";
		$this->rejection = new \OpenAPI\OpenAPI\Models\Shared\CardDisputeCardDisputeRejection();
		$this->status = \OpenAPI\OpenAPI\Models\Shared\CardDisputeStatusEnum::PENDING_REVIEWING;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\CardDisputeTypeEnum::CARD_DISPUTE;
	}
}
