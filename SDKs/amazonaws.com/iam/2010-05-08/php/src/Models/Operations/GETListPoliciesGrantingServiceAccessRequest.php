<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETListPoliciesGrantingServiceAccessRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETListPoliciesGrantingServiceAccessActionEnum $action;
    
    /**
     * The ARN of the IAM identity (user, group, or role) whose policies you want to list.
     * 
     * @var string $arn
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Arn')]
    public string $arn;
    
    /**
     * Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
     * 
     * @var ?string $marker
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Marker')]
    public ?string $marker = null;
    
    /**
     * <p>The service namespace for the Amazon Web Services services whose policies you want to list.</p> <p>To learn the service namespace for a service, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html">Actions, resources, and condition keys for Amazon Web Services services</a> in the <i>IAM User Guide</i>. Choose the name of the service to view details for that service. In the first paragraph, find the service prefix. For example, <code>(service prefix: a4b)</code>. For more information about service namespaces, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#genref-aws-service-namespaces">Amazon Web Services service namespaces</a> in theÂ <i>Amazon Web Services General Reference</i>.</p>
     * 
     * @var array<string> $serviceNamespaces
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ServiceNamespaces')]
    public array $serviceNamespaces;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETListPoliciesGrantingServiceAccessVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETListPoliciesGrantingServiceAccessActionEnum::LIST_POLICIES_GRANTING_SERVICE_ACCESS;
		$this->arn = "";
		$this->marker = null;
		$this->serviceNamespaces = [];
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETListPoliciesGrantingServiceAccessVersionEnum::TWO_THOUSAND_AND_TEN0508;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
