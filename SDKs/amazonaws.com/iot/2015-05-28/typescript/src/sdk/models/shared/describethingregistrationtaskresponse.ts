/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatusEnum } from "./statusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class DescribeThingRegistrationTaskResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "failureCount" })
  failureCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "inputFileBucket" })
  inputFileBucket?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inputFileKey" })
  inputFileKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "percentageProgress" })
  percentageProgress?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "successCount" })
  successCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "taskId" })
  taskId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateBody" })
  templateBody?: string;
}
