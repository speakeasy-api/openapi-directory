/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Precondition - A precondition on a document, used for conditional operations.
 */
public class Precondition {
    /**
     * When set to `true`, the target document must exist. When set to `false`, the target document must not exist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exists")
    public Boolean exists;
    public Precondition withExists(Boolean exists) {
        this.exists = exists;
        return this;
    }
    
    /**
     * When set, the target document must exist and have been last updated at that time. Timestamp must be microsecond aligned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Precondition withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
