// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type ProductsAPIPatchProductRequestBodyType string

const (
	ProductsAPIPatchProductRequestBodyTypeProductCreateModify ProductsAPIPatchProductRequestBodyType = "ProductCreateModify"
)

type ProductsAPIPatchProductRequestBody struct {
	ProductCreateModify *shared.ProductCreateModify

	Type ProductsAPIPatchProductRequestBodyType
}

func CreateProductsAPIPatchProductRequestBodyProductCreateModify(productCreateModify shared.ProductCreateModify) ProductsAPIPatchProductRequestBody {
	typ := ProductsAPIPatchProductRequestBodyTypeProductCreateModify

	return ProductsAPIPatchProductRequestBody{
		ProductCreateModify: &productCreateModify,
		Type:                typ,
	}
}

func (u *ProductsAPIPatchProductRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	productCreateModify := new(shared.ProductCreateModify)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&productCreateModify); err == nil {
		u.ProductCreateModify = productCreateModify
		u.Type = ProductsAPIPatchProductRequestBodyTypeProductCreateModify
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u ProductsAPIPatchProductRequestBody) MarshalJSON() ([]byte, error) {
	if u.ProductCreateModify != nil {
		return json.Marshal(u.ProductCreateModify)
	}

	return nil, nil
}

type ProductsAPIPatchProductResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
