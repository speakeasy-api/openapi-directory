"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsRedshiftClusterLoggingStatus:
    r"""Provides information about the logging status of the cluster."""
    
    bucket_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BucketName'), 'exclude': lambda f: f is None }})  
    last_failure_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastFailureMessage'), 'exclude': lambda f: f is None }})  
    last_failure_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastFailureTime'), 'exclude': lambda f: f is None }})  
    last_successful_delivery_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastSuccessfulDeliveryTime'), 'exclude': lambda f: f is None }})  
    logging_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LoggingEnabled'), 'exclude': lambda f: f is None }})  
    s3_key_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S3KeyPrefix'), 'exclude': lambda f: f is None }})  
    