// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum string

const (
	GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnumKnowledgeTypeUnspecified GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum = "KNOWLEDGE_TYPE_UNSPECIFIED"
	GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnumFaq                      GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum = "FAQ"
	GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnumExtractiveQa             GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum = "EXTRACTIVE_QA"
	GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnumArticleSuggestion        GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum = "ARTICLE_SUGGESTION"
	GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnumAgentFacingSmartReply    GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum = "AGENT_FACING_SMART_REPLY"
)

func (e *GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KNOWLEDGE_TYPE_UNSPECIFIED":
		fallthrough
	case "FAQ":
		fallthrough
	case "EXTRACTIVE_QA":
		fallthrough
	case "ARTICLE_SUGGESTION":
		fallthrough
	case "AGENT_FACING_SMART_REPLY":
		*e = GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum: %s", s)
	}
}

// GoogleCloudDialogflowV2ImportDocumentTemplate - The template used for importing documents.
type GoogleCloudDialogflowV2ImportDocumentTemplate struct {
	// Required. The knowledge type of document content.
	KnowledgeTypes []GoogleCloudDialogflowV2ImportDocumentTemplateKnowledgeTypesEnum `json:"knowledgeTypes,omitempty"`
	// Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Required. The MIME type of the document.
	MimeType *string `json:"mimeType,omitempty"`
}
