/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ExperimentSummary - A summary of the properties of an experiment. To get the complete set of properties, call the &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_DescribeExperiment.html"&gt;DescribeExperiment&lt;/a&gt; API and provide the &lt;code&gt;ExperimentName&lt;/code&gt;.
 */
public class ExperimentSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public ExperimentSummary withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;

    public ExperimentSummary withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentArn")
    public String experimentArn;

    public ExperimentSummary withExperimentArn(String experimentArn) {
        this.experimentArn = experimentArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentName")
    public String experimentName;

    public ExperimentSummary withExperimentName(String experimentName) {
        this.experimentName = experimentName;
        return this;
    }
    
    /**
     * The source of the experiment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentSource")
    public ExperimentSource experimentSource;

    public ExperimentSummary withExperimentSource(ExperimentSource experimentSource) {
        this.experimentSource = experimentSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;

    public ExperimentSummary withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    public ExperimentSummary(){}
}
