/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EventMessage {
    /**
     * Body content for this message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public EventMessage withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Headers for this message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public Header[] headers;

    public EventMessage withHeaders(Header[] headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * Unique identifier of this message
     */
    @JsonProperty("id")
    public String id;

    public EventMessage withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Content type of message
     */
    @JsonProperty("mediaType")
    public String mediaType;

    public EventMessage withMediaType(String mediaType) {
        this.mediaType = mediaType;
        return this;
    }
    
    /**
     * Unique distinct name of this message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public EventMessage withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Identifier of Operation this message is associated to
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operationId")
    public String operationId;

    public EventMessage withOperationId(String operationId) {
        this.operationId = operationId;
        return this;
    }
    
    /**
     * Unique identifier of TestCase this message is attached (in case of a test)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testCaseId")
    public String testCaseId;

    public EventMessage withTestCaseId(String testCaseId) {
        this.testCaseId = testCaseId;
        return this;
    }
    
    public EventMessage(@JsonProperty("id") String id, @JsonProperty("mediaType") String mediaType) {
        this.id = id;
        this.mediaType = mediaType;
  }
}
