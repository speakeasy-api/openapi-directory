// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ApplicationEnabledFeaturesEnum string

const (
	ApplicationEnabledFeaturesEnumApplicationFeatureUnspecified ApplicationEnabledFeaturesEnum = "APPLICATION_FEATURE_UNSPECIFIED"
	ApplicationEnabledFeaturesEnumSnapshots                     ApplicationEnabledFeaturesEnum = "SNAPSHOTS"
)

func (e *ApplicationEnabledFeaturesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "APPLICATION_FEATURE_UNSPECIFIED":
		fallthrough
	case "SNAPSHOTS":
		*e = ApplicationEnabledFeaturesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationEnabledFeaturesEnum: %s", s)
	}
}

// Application - The Application resource.
type Application struct {
	// The number of achievements visible to the currently authenticated player.
	AchievementCount *int `json:"achievement_count,omitempty"`
	// The assets of the application.
	Assets []ImageAsset `json:"assets,omitempty"`
	// The author of the application.
	Author *string `json:"author,omitempty"`
	// An application category object.
	Category *ApplicationCategory `json:"category,omitempty"`
	// The description of the application.
	Description *string `json:"description,omitempty"`
	// A list of features that have been enabled for the application.
	EnabledFeatures []ApplicationEnabledFeaturesEnum `json:"enabledFeatures,omitempty"`
	// The ID of the application.
	ID *string `json:"id,omitempty"`
	// The instances of the application.
	Instances []Instance `json:"instances,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#application`.
	Kind *string `json:"kind,omitempty"`
	// The last updated timestamp of the application.
	LastUpdatedTimestamp *string `json:"lastUpdatedTimestamp,omitempty"`
	// The number of leaderboards visible to the currently authenticated player.
	LeaderboardCount *int `json:"leaderboard_count,omitempty"`
	// The name of the application.
	Name *string `json:"name,omitempty"`
	// A hint to the client UI for what color to use as an app-themed color. The color is given as an RGB triplet (e.g. "E0E0E0").
	ThemeColor *string `json:"themeColor,omitempty"`
}
