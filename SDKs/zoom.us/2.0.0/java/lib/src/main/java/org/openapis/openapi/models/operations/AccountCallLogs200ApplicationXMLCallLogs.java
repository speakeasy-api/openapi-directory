/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;

public class AccountCallLogs200ApplicationXMLCallLogs {
    /**
     * GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
     * 		
     */
    
    public OffsetDateTime answerStartTime;
    public AccountCallLogs200ApplicationXMLCallLogs withAnswerStartTime(OffsetDateTime answerStartTime) {
        this.answerStartTime = answerStartTime;
        return this;
    }
    
    /**
     * Unique identifier of the phone call.
     */
    
    public String callId;
    public AccountCallLogs200ApplicationXMLCallLogs withCallId(String callId) {
        this.callId = callId;
        return this;
    }
    
    /**
     * The type of call:
     * *`voip` (Voice over IP)
     * *`pstn` (Public Switched Telephone Network)
     * *`tollfree`
     * *`international`
     * *`contactCenter`
     */
    
    public AccountCallLogs200ApplicationXMLCallLogsCallTypeEnum callType;
    public AccountCallLogs200ApplicationXMLCallLogs withCallType(AccountCallLogs200ApplicationXMLCallLogsCallTypeEnum callType) {
        this.callType = callType;
        return this;
    }
    
    /**
     * Contact name of callee
     */
    
    public String calleeName;
    public AccountCallLogs200ApplicationXMLCallLogs withCalleeName(String calleeName) {
        this.calleeName = calleeName;
        return this;
    }
    
    /**
     * Number of callee
     */
    
    public String calleeNumber;
    public AccountCallLogs200ApplicationXMLCallLogs withCalleeNumber(String calleeNumber) {
        this.calleeNumber = calleeNumber;
        return this;
    }
    
    /**
     * Type of callee's number. 1 - internal | 2 - external
     */
    
    public String calleeNumberType;
    public AccountCallLogs200ApplicationXMLCallLogs withCalleeNumberType(String calleeNumberType) {
        this.calleeNumberType = calleeNumberType;
        return this;
    }
    
    /**
     * Contact name of caller
     */
    
    public String callerName;
    public AccountCallLogs200ApplicationXMLCallLogs withCallerName(String callerName) {
        this.callerName = callerName;
        return this;
    }
    
    /**
     * Number of caller
     */
    
    public String callerNumber;
    public AccountCallLogs200ApplicationXMLCallLogs withCallerNumber(String callerNumber) {
        this.callerNumber = callerNumber;
        return this;
    }
    
    /**
     * Type of caller's number. 1 - internal | 2 - external
     */
    
    public String callerNumberType;
    public AccountCallLogs200ApplicationXMLCallLogs withCallerNumberType(String callerNumberType) {
        this.callerNumberType = callerNumberType;
        return this;
    }
    
    /**
     * Billing charge for the call.
     */
    
    public String charge;
    public AccountCallLogs200ApplicationXMLCallLogs withCharge(String charge) {
        this.charge = charge;
        return this;
    }
    
    /**
     * Client code.
     */
    
    public String clientCode;
    public AccountCallLogs200ApplicationXMLCallLogs withClientCode(String clientCode) {
        this.clientCode = clientCode;
        return this;
    }
    
    /**
     * Start time of the call
     */
    
    public String dateTime;
    public AccountCallLogs200ApplicationXMLCallLogs withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    /**
     * Direction of the call. "inbound" | "outbound"
     */
    
    public String direction;
    public AccountCallLogs200ApplicationXMLCallLogs withDirection(String direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Duration of the call in seconds.
     */
    
    public Long duration;
    public AccountCallLogs200ApplicationXMLCallLogs withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Call Log ID
     */
    
    public String id;
    public AccountCallLogs200ApplicationXMLCallLogs withId(String id) {
        this.id = id;
        return this;
    }
    
    
    public AccountCallLogs200ApplicationXMLCallLogsOwner owner;
    public AccountCallLogs200ApplicationXMLCallLogs withOwner(AccountCallLogs200ApplicationXMLCallLogsOwner owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * Path of the call. 
     */
    
    public String path;
    public AccountCallLogs200ApplicationXMLCallLogs withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Billing rate for the call.
     */
    
    public String rate;
    public AccountCallLogs200ApplicationXMLCallLogs withRate(String rate) {
        this.rate = rate;
        return this;
    }
    
    /**
     * Unique identifier of the call recording.
     */
    
    public String recordingId;
    public AccountCallLogs200ApplicationXMLCallLogs withRecordingId(String recordingId) {
        this.recordingId = recordingId;
        return this;
    }
    
    /**
     * Type of call recording:&lt;br&gt;
     * `1` OnDemand&lt;br&gt;
     * `2` Automatic
     */
    
    public AccountCallLogs200ApplicationXMLCallLogsRecordingTypeEnum recordingType;
    public AccountCallLogs200ApplicationXMLCallLogs withRecordingType(AccountCallLogs200ApplicationXMLCallLogsRecordingTypeEnum recordingType) {
        this.recordingType = recordingType;
        return this;
    }
    
    /**
     * Result of the call. "call_connected" | "recorded" | "no_answer"
     */
    
    public String result;
    public AccountCallLogs200ApplicationXMLCallLogs withResult(String result) {
        this.result = result;
        return this;
    }
    
    
    public AccountCallLogs200ApplicationXMLCallLogsSite site;
    public AccountCallLogs200ApplicationXMLCallLogs withSite(AccountCallLogs200ApplicationXMLCallLogsSite site) {
        this.site = site;
        return this;
    }
    
    /**
     * User ID of the call log owner.
     */
    
    public String userId;
    public AccountCallLogs200ApplicationXMLCallLogs withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    /**
     * Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.
     * 			
     */
    
    public String waitingTime;
    public AccountCallLogs200ApplicationXMLCallLogs withWaitingTime(String waitingTime) {
        this.waitingTime = waitingTime;
        return this;
    }
    
}
