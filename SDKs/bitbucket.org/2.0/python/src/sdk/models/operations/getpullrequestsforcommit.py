"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import paginated_pullrequests as shared_paginated_pullrequests
from typing import Any, Optional


@dataclasses.dataclass
class GetPullrequestsForCommitRequest:
    
    commit: str = dataclasses.field(metadata={'path_param': { 'field_name': 'commit', 'style': 'simple', 'explode': False }})
    r"""The SHA1 of the commit"""  
    repo_slug: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo_slug', 'style': 'simple', 'explode': False }})
    r"""The repository; either the UUID in curly braces, or the slug"""  
    workspace: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspace', 'style': 'simple', 'explode': False }})
    r"""This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Which page to retrieve"""  
    pagelen: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pagelen', 'style': 'form', 'explode': True }})
    r"""How many pull requests to retrieve per page"""  
    

@dataclasses.dataclass
class GetPullrequestsForCommitResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Either the repository does not exist, or pull request commit links have not yet been indexed."""  
    paginated_pullrequests: Optional[shared_paginated_pullrequests.PaginatedPullrequests] = dataclasses.field(default=None)
    r"""The paginated list of pull requests."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    