// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ErrorCodeEnum string

const (
	ErrorCodeEnumAlreadyEnabled          ErrorCodeEnum = "ALREADY_ENABLED"
	ErrorCodeEnumEnableInProgress        ErrorCodeEnum = "ENABLE_IN_PROGRESS"
	ErrorCodeEnumDisableInProgress       ErrorCodeEnum = "DISABLE_IN_PROGRESS"
	ErrorCodeEnumSuspendInProgress       ErrorCodeEnum = "SUSPEND_IN_PROGRESS"
	ErrorCodeEnumResourceNotFound        ErrorCodeEnum = "RESOURCE_NOT_FOUND"
	ErrorCodeEnumAccessDenied            ErrorCodeEnum = "ACCESS_DENIED"
	ErrorCodeEnumInternalError           ErrorCodeEnum = "INTERNAL_ERROR"
	ErrorCodeEnumSsmUnavailable          ErrorCodeEnum = "SSM_UNAVAILABLE"
	ErrorCodeEnumSsmThrottled            ErrorCodeEnum = "SSM_THROTTLED"
	ErrorCodeEnumEventbridgeUnavailable  ErrorCodeEnum = "EVENTBRIDGE_UNAVAILABLE"
	ErrorCodeEnumEventbridgeThrottled    ErrorCodeEnum = "EVENTBRIDGE_THROTTLED"
	ErrorCodeEnumResourceScanNotDisabled ErrorCodeEnum = "RESOURCE_SCAN_NOT_DISABLED"
	ErrorCodeEnumDisassociateAllMembers  ErrorCodeEnum = "DISASSOCIATE_ALL_MEMBERS"
	ErrorCodeEnumAccountIsIsolated       ErrorCodeEnum = "ACCOUNT_IS_ISOLATED"
)

func (e *ErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ALREADY_ENABLED":
		fallthrough
	case "ENABLE_IN_PROGRESS":
		fallthrough
	case "DISABLE_IN_PROGRESS":
		fallthrough
	case "SUSPEND_IN_PROGRESS":
		fallthrough
	case "RESOURCE_NOT_FOUND":
		fallthrough
	case "ACCESS_DENIED":
		fallthrough
	case "INTERNAL_ERROR":
		fallthrough
	case "SSM_UNAVAILABLE":
		fallthrough
	case "SSM_THROTTLED":
		fallthrough
	case "EVENTBRIDGE_UNAVAILABLE":
		fallthrough
	case "EVENTBRIDGE_THROTTLED":
		fallthrough
	case "RESOURCE_SCAN_NOT_DISABLED":
		fallthrough
	case "DISASSOCIATE_ALL_MEMBERS":
		fallthrough
	case "ACCOUNT_IS_ISOLATED":
		*e = ErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorCodeEnum: %s", s)
	}
}
