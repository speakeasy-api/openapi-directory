"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MeetingUpdateMultipartResponse = exports.MeetingUpdateMultipartRequest = exports.MeetingUpdateMultipartFormData3 = exports.MeetingUpdateMultipartFormDataTypeEnum1 = exports.MeetingUpdateMultipartFormDataTrackingFields = exports.MeetingUpdateMultipartFormDataRecurrence = exports.MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum = exports.MeetingUpdateMultipartFormDataRecurrenceTypeEnum = exports.MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum = exports.MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum = exports.MeetingUpdateMultipartSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var MeetingUpdateMultipartSecurity = /** @class */ (function (_super) {
    __extends(MeetingUpdateMultipartSecurity, _super);
    function MeetingUpdateMultipartSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartSecurity.prototype, "oAuth", void 0);
    return MeetingUpdateMultipartSecurity;
}(utils_1.SpeakeasyBase));
exports.MeetingUpdateMultipartSecurity = MeetingUpdateMultipartSecurity;
/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
 */
var MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum;
(function (MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum) {
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum["Minus1"] = "-1";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum["One"] = "1";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum["Two"] = "2";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum["Three"] = "3";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum["Four"] = "4";
})(MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum = exports.MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum || (exports.MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekEnum = {}));
/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
 *
 * @remarks
 *
 * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
var MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum;
(function (MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum) {
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["One"] = "1";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["Two"] = "2";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["Three"] = "3";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["Four"] = "4";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["Five"] = "5";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["Six"] = "6";
    MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum["Seven"] = "7";
})(MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum = exports.MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum || (exports.MeetingUpdateMultipartFormDataRecurrenceMonthlyWeekDayEnum = {}));
/**
 * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
 */
var MeetingUpdateMultipartFormDataRecurrenceTypeEnum;
(function (MeetingUpdateMultipartFormDataRecurrenceTypeEnum) {
    MeetingUpdateMultipartFormDataRecurrenceTypeEnum["One"] = "1";
    MeetingUpdateMultipartFormDataRecurrenceTypeEnum["Two"] = "2";
    MeetingUpdateMultipartFormDataRecurrenceTypeEnum["Three"] = "3";
})(MeetingUpdateMultipartFormDataRecurrenceTypeEnum = exports.MeetingUpdateMultipartFormDataRecurrenceTypeEnum || (exports.MeetingUpdateMultipartFormDataRecurrenceTypeEnum = {}));
/**
 * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
 *
 * @remarks
 *
 *  <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
var MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum;
(function (MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum) {
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["One"] = "1";
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["Two"] = "2";
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["Three"] = "3";
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["Four"] = "4";
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["Five"] = "5";
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["Six"] = "6";
    MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum["Seven"] = "7";
})(MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum = exports.MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum || (exports.MeetingUpdateMultipartFormDataRecurrenceWeeklyDaysEnum = {}));
/**
 * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
 */
var MeetingUpdateMultipartFormDataRecurrence = /** @class */ (function (_super) {
    __extends(MeetingUpdateMultipartFormDataRecurrence, _super);
    function MeetingUpdateMultipartFormDataRecurrence() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_date_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "endDateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_times" }),
        __metadata("design:type", Number)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "endTimes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthly_day" }),
        __metadata("design:type", Number)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "monthlyDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthly_week" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "monthlyWeek", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthly_week_day" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "monthlyWeekDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "repeat_interval" }),
        __metadata("design:type", Number)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "repeatInterval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weekly_days" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormDataRecurrence.prototype, "weeklyDays", void 0);
    return MeetingUpdateMultipartFormDataRecurrence;
}(utils_1.SpeakeasyBase));
exports.MeetingUpdateMultipartFormDataRecurrence = MeetingUpdateMultipartFormDataRecurrence;
var MeetingUpdateMultipartFormDataTrackingFields = /** @class */ (function (_super) {
    __extends(MeetingUpdateMultipartFormDataTrackingFields, _super);
    function MeetingUpdateMultipartFormDataTrackingFields() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "field" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormDataTrackingFields.prototype, "field", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormDataTrackingFields.prototype, "value", void 0);
    return MeetingUpdateMultipartFormDataTrackingFields;
}(utils_1.SpeakeasyBase));
exports.MeetingUpdateMultipartFormDataTrackingFields = MeetingUpdateMultipartFormDataTrackingFields;
/**
 * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`8` - Recurring meeting with a fixed time.
 */
var MeetingUpdateMultipartFormDataTypeEnum1;
(function (MeetingUpdateMultipartFormDataTypeEnum1) {
    MeetingUpdateMultipartFormDataTypeEnum1["One"] = "1";
    MeetingUpdateMultipartFormDataTypeEnum1["Two"] = "2";
    MeetingUpdateMultipartFormDataTypeEnum1["Three"] = "3";
    MeetingUpdateMultipartFormDataTypeEnum1["Eight"] = "8";
})(MeetingUpdateMultipartFormDataTypeEnum1 = exports.MeetingUpdateMultipartFormDataTypeEnum1 || (exports.MeetingUpdateMultipartFormDataTypeEnum1 = {}));
/**
 * Base object for sessions.
 */
var MeetingUpdateMultipartFormData3 = /** @class */ (function (_super) {
    __extends(MeetingUpdateMultipartFormData3, _super);
    function MeetingUpdateMultipartFormData3() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=agenda" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "agenda", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=duration" }),
        __metadata("design:type", Number)
    ], MeetingUpdateMultipartFormData3.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=password" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=recurrence;json=true" }),
        __metadata("design:type", MeetingUpdateMultipartFormDataRecurrence)
    ], MeetingUpdateMultipartFormData3.prototype, "recurrence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=schedule_for" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "scheduleFor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=settings;json=true" }),
        __metadata("design:type", Object)
    ], MeetingUpdateMultipartFormData3.prototype, "settings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "multipart_form, name=start_time;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
        }),
        __metadata("design:type", Date)
    ], MeetingUpdateMultipartFormData3.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=template_id" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "templateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=timezone" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "timezone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=topic" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "multipart_form, name=tracking_fields;json=true",
            elemType: MeetingUpdateMultipartFormDataTrackingFields,
        }),
        __metadata("design:type", Array)
    ], MeetingUpdateMultipartFormData3.prototype, "trackingFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "multipart_form, name=type" }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartFormData3.prototype, "type", void 0);
    return MeetingUpdateMultipartFormData3;
}(utils_1.SpeakeasyBase));
exports.MeetingUpdateMultipartFormData3 = MeetingUpdateMultipartFormData3;
var MeetingUpdateMultipartRequest = /** @class */ (function (_super) {
    __extends(MeetingUpdateMultipartRequest, _super);
    function MeetingUpdateMultipartRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=multipart/form-data" }),
        __metadata("design:type", MeetingUpdateMultipartFormData3)
    ], MeetingUpdateMultipartRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=meetingId",
        }),
        __metadata("design:type", Number)
    ], MeetingUpdateMultipartRequest.prototype, "meetingId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=occurrence_id",
        }),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartRequest.prototype, "occurrenceId", void 0);
    return MeetingUpdateMultipartRequest;
}(utils_1.SpeakeasyBase));
exports.MeetingUpdateMultipartRequest = MeetingUpdateMultipartRequest;
var MeetingUpdateMultipartResponse = /** @class */ (function (_super) {
    __extends(MeetingUpdateMultipartResponse, _super);
    function MeetingUpdateMultipartResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], MeetingUpdateMultipartResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], MeetingUpdateMultipartResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], MeetingUpdateMultipartResponse.prototype, "rawResponse", void 0);
    return MeetingUpdateMultipartResponse;
}(utils_1.SpeakeasyBase));
exports.MeetingUpdateMultipartResponse = MeetingUpdateMultipartResponse;
