"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregationconfig as shared_aggregationconfig
from ..shared import filetype_enum as shared_filetype_enum
from ..shared import prefixconfig as shared_prefixconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpsolverS3OutputFormatConfig:
    r"""The configuration that determines how Amazon AppFlow formats the flow output data when Upsolver is used as the destination."""
    
    prefix_config: shared_prefixconfig.PrefixConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prefixConfig') }})
    r"""Specifies elements that Amazon AppFlow includes in the file and folder names in the flow destination."""  
    aggregation_config: Optional[shared_aggregationconfig.AggregationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregationConfig'), 'exclude': lambda f: f is None }})
    r"""The aggregation settings that you can use to customize the output format of your flow data."""  
    file_type: Optional[shared_filetype_enum.FileTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileType'), 'exclude': lambda f: f is None }})  
    