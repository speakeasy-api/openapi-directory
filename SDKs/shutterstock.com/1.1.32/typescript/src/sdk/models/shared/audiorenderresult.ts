/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AudioRendersFilesList } from "./audiorendersfileslist";
import { AudioRenderTimeline } from "./audiorendertimeline";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The file format preset
 */
export enum AudioRenderResultPresetEnum {
  MasterMp3 = "MASTER_MP3",
  MasterWav = "MASTER_WAV",
  StemsWav = "STEMS_WAV",
}

/**
 * A coarse progress indicator
 */
export enum AudioRenderResultStatusEnum {
  WaitingCompose = "WAITING_COMPOSE",
  RunningCompose = "RUNNING_COMPOSE",
  WaitingRender = "WAITING_RENDER",
  RunningRender = "RUNNING_RENDER",
  Created = "CREATED",
  FailedCreate = "FAILED_CREATE",
}

/**
 * The output of an audio render in WAV or MP3 format
 */
export class AudioRenderResult extends SpeakeasyBase {
  /**
   * The time the render was submitted to the API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   * The files associated with the render
   */
  @SpeakeasyMetadata({ elemType: AudioRendersFilesList })
  @Expose({ name: "files" })
  @Type(() => AudioRendersFilesList)
  files?: AudioRendersFilesList[];

  /**
   * The alphanumeric ID of the simple render
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The file format preset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preset" })
  preset?: AudioRenderResultPresetEnum;

  /**
   * The current progress of the render as a percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progress_percent" })
  progressPercent?: number;

  /**
   * A coarse progress indicator
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AudioRenderResultStatusEnum;

  /**
   * A timeline object that represents either a request for music to be created or an entire music composition
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeline" })
  @Type(() => AudioRenderTimeline)
  timeline: AudioRenderTimeline;

  /**
   * The time that the audio output was uploaded
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
