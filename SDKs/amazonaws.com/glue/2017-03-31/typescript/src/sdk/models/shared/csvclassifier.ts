/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CsvHeaderOptionEnum } from "./csvheaderoptionenum";
import { Expose, Transform } from "class-transformer";

/**
 * A classifier for custom <code>CSV</code> content.
 */
export class CsvClassifier extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowSingleColumn" })
  allowSingleColumn?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ContainsHeader" })
  containsHeader?: CsvHeaderOptionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomDatatypeConfigured" })
  customDatatypeConfigured?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomDatatypes" })
  customDatatypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Delimiter" })
  delimiter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisableValueTrimming" })
  disableValueTrimming?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Header" })
  header?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "QuoteSymbol" })
  quoteSymbol?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: number;
}
