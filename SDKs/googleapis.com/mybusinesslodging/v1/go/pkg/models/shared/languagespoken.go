// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LanguageSpokenSpokenExceptionEnum - Spoken exception.
type LanguageSpokenSpokenExceptionEnum string

const (
	LanguageSpokenSpokenExceptionEnumExceptionUnspecified LanguageSpokenSpokenExceptionEnum = "EXCEPTION_UNSPECIFIED"
	LanguageSpokenSpokenExceptionEnumUnderConstruction    LanguageSpokenSpokenExceptionEnum = "UNDER_CONSTRUCTION"
	LanguageSpokenSpokenExceptionEnumDependentOnSeason    LanguageSpokenSpokenExceptionEnum = "DEPENDENT_ON_SEASON"
	LanguageSpokenSpokenExceptionEnumDependentOnDayOfWeek LanguageSpokenSpokenExceptionEnum = "DEPENDENT_ON_DAY_OF_WEEK"
)

func (e *LanguageSpokenSpokenExceptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEPTION_UNSPECIFIED":
		fallthrough
	case "UNDER_CONSTRUCTION":
		fallthrough
	case "DEPENDENT_ON_SEASON":
		fallthrough
	case "DEPENDENT_ON_DAY_OF_WEEK":
		*e = LanguageSpokenSpokenExceptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LanguageSpokenSpokenExceptionEnum: %s", s)
	}
}

// LanguageSpoken - Language spoken by at least one staff member.
type LanguageSpoken struct {
	// Required. The BCP-47 language code for the spoken language. Currently accepted codes: ar, de, en, es, fil, fr, hi, id, it, ja, ko, nl, pt, ru, vi, yue, zh.
	LanguageCode *string `json:"languageCode,omitempty"`
	// At least one member of the staff can speak the language.
	Spoken *bool `json:"spoken,omitempty"`
	// Spoken exception.
	SpokenException *LanguageSpokenSpokenExceptionEnum `json:"spokenException,omitempty"`
}
