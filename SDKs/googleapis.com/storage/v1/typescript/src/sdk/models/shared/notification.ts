/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A subscription to receive Google PubSub notifications.
 */
export class Notification extends SpeakeasyBase {
  /**
   * An optional list of additional attributes to attach to each Cloud PubSub message published for this notification subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_attributes" })
  customAttributes?: Record<string, string>;

  /**
   * HTTP 1.1 Entity tag for this subscription notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * If present, only send notifications about listed event types. If empty, sent notifications for all event types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_types" })
  eventTypes?: string[];

  /**
   * The ID of the notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The kind of item this is. For notifications, this is always storage#notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * If present, only apply this notification configuration to object names that begin with this prefix.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "object_name_prefix" })
  objectNamePrefix?: string;

  /**
   * The desired content of the Payload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payload_format" })
  payloadFormat?: string;

  /**
   * The canonical URL of this notification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The Cloud PubSub topic to which this subscription publishes. Formatted as: '//pubsub.googleapis.com/projects/{project-identifier}/topics/{my-topic}'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}
