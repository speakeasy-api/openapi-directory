"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyCustomTokenResponse:
    r"""Response from verifying a custom token"""
    
    expires_in: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiresIn'), 'exclude': lambda f: f is None }})
    r"""If idToken is STS id token, then this field will be expiration time of STS id token in seconds."""  
    id_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idToken'), 'exclude': lambda f: f is None }})
    r"""The GITKit token for authenticated user."""  
    is_new_user: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isNewUser'), 'exclude': lambda f: f is None }})
    r"""True if it's a new user sign-in, false if it's a returning user."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""The fixed string \\"identitytoolkit#VerifyCustomTokenResponse\\"."""  
    refresh_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refreshToken'), 'exclude': lambda f: f is None }})
    r"""If idToken is STS id token, then this field will be refresh token."""  
    