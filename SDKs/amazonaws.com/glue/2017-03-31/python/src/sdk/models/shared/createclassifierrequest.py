"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import createcsvclassifierrequest as shared_createcsvclassifierrequest
from ..shared import creategrokclassifierrequest as shared_creategrokclassifierrequest
from ..shared import createjsonclassifierrequest as shared_createjsonclassifierrequest
from ..shared import createxmlclassifierrequest as shared_createxmlclassifierrequest
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateClassifierRequest:
    
    csv_classifier: Optional[shared_createcsvclassifierrequest.CreateCsvClassifierRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CsvClassifier'), 'exclude': lambda f: f is None }})  
    grok_classifier: Optional[shared_creategrokclassifierrequest.CreateGrokClassifierRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GrokClassifier'), 'exclude': lambda f: f is None }})  
    json_classifier: Optional[shared_createjsonclassifierrequest.CreateJSONClassifierRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('JsonClassifier'), 'exclude': lambda f: f is None }})  
    xml_classifier: Optional[shared_createxmlclassifierrequest.CreateXMLClassifierRequest] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('XMLClassifier'), 'exclude': lambda f: f is None }})  
    