/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class OrderLineItemsInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applied_discounts")
    public OrderLineItemsAppliedDiscountsInput[] appliedDiscounts;

    public OrderLineItemsInput withAppliedDiscounts(OrderLineItemsAppliedDiscountsInput[] appliedDiscounts) {
        this.appliedDiscounts = appliedDiscounts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applied_taxes")
    public OrderLineItemsAppliedTaxesInput[] appliedTaxes;

    public OrderLineItemsInput withAppliedTaxes(OrderLineItemsAppliedTaxesInput[] appliedTaxes) {
        this.appliedTaxes = appliedTaxes;
        return this;
    }
    
    /**
     * Customizable options \u2013 toppings, add-ons, or special requests \u2013 create item modifiers. Modifiers that are applied to items will display on your customers\u2019 digital receipts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiers")
    public OrderLineItemsModifiers[] modifiers;

    public OrderLineItemsInput withModifiers(OrderLineItemsModifiers[] modifiers) {
        this.modifiers = modifiers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public OrderLineItemsInput withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;

    public OrderLineItemsInput withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_amount")
    public Long totalAmount;

    public OrderLineItemsInput withTotalAmount(Long totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_discount")
    public Long totalDiscount;

    public OrderLineItemsInput withTotalDiscount(Long totalDiscount) {
        this.totalDiscount = totalDiscount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_tax")
    public Long totalTax;

    public OrderLineItemsInput withTotalTax(Long totalTax) {
        this.totalTax = totalTax;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit_price")
    public Double unitPrice;

    public OrderLineItemsInput withUnitPrice(Double unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    public OrderLineItemsInput(){}
}
