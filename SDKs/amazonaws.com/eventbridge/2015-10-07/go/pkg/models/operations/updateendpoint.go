// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateEndpointXAmzTargetEnum
type UpdateEndpointXAmzTargetEnum string

const (
	UpdateEndpointXAmzTargetEnumAwsEventsUpdateEndpoint UpdateEndpointXAmzTargetEnum = "AWSEvents.UpdateEndpoint"
)

func (e UpdateEndpointXAmzTargetEnum) ToPointer() *UpdateEndpointXAmzTargetEnum {
	return &e
}

func (e *UpdateEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSEvents.UpdateEndpoint":
		*e = UpdateEndpointXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateEndpointXAmzTargetEnum: %v", v)
	}
}

type UpdateEndpointRequest struct {
	UpdateEndpointRequest shared.UpdateEndpointRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            UpdateEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateEndpointResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalException
	InternalException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateEndpointResponse *shared.UpdateEndpointResponse
}
