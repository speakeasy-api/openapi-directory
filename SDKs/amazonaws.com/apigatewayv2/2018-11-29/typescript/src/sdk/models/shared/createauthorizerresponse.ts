/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The authorizer type. Specify REQUEST for a Lambda function using incoming request parameters. Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
 */
export enum CreateAuthorizerResponseAuthorizerTypeEnum {
  Request = "REQUEST",
  Jwt = "JWT",
}

/**
 * Represents the configuration of a JWT authorizer. Required for the JWT authorizer type. Supported only for HTTP APIs.
 */
export class CreateAuthorizerResponseJwtConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Audience" })
  audience?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Issuer" })
  issuer?: string;
}

/**
 * Success
 */
export class CreateAuthorizerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizerCredentialsArn" })
  authorizerCredentialsArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizerId" })
  authorizerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizerPayloadFormatVersion" })
  authorizerPayloadFormatVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizerResultTtlInSeconds" })
  authorizerResultTtlInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizerType" })
  authorizerType?: CreateAuthorizerResponseAuthorizerTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizerUri" })
  authorizerUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableSimpleResponses" })
  enableSimpleResponses?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentitySource" })
  identitySource?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityValidationExpression" })
  identityValidationExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JwtConfiguration" })
  @Type(() => CreateAuthorizerResponseJwtConfiguration)
  jwtConfiguration?: CreateAuthorizerResponseJwtConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}
