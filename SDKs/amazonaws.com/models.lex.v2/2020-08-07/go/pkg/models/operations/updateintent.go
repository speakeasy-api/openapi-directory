// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateIntentRequestBodyDialogCodeHook - Settings that determine the Lambda function that Amazon Lex uses for processing user responses.
type UpdateIntentRequestBodyDialogCodeHook struct {
	Enabled *bool `json:"enabled,omitempty"`
}

// UpdateIntentRequestBodyFulfillmentCodeHook - Determines if a Lambda function should be invoked for a specific intent.
type UpdateIntentRequestBodyFulfillmentCodeHook struct {
	Active                             *bool                                      `json:"active,omitempty"`
	Enabled                            *bool                                      `json:"enabled,omitempty"`
	FulfillmentUpdatesSpecification    *shared.FulfillmentUpdatesSpecification    `json:"fulfillmentUpdatesSpecification,omitempty"`
	PostFulfillmentStatusSpecification *shared.PostFulfillmentStatusSpecification `json:"postFulfillmentStatusSpecification,omitempty"`
}

// UpdateIntentRequestBodyInitialResponseSetting - Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.
type UpdateIntentRequestBodyInitialResponseSetting struct {
	//  Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation.
	CodeHook *shared.DialogCodeHookInvocationSetting `json:"codeHook,omitempty"`
	// Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
	Conditional *shared.ConditionalSpecification `json:"conditional,omitempty"`
	// Specifies a list of message groups that Amazon Lex uses to respond the user input.
	InitialResponse *shared.ResponseSpecification `json:"initialResponse,omitempty"`
	NextStep        *shared.DialogState           `json:"nextStep,omitempty"`
}

// UpdateIntentRequestBodyIntentClosingSetting - Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.
type UpdateIntentRequestBodyIntentClosingSetting struct {
	Active          *bool                            `json:"active,omitempty"`
	ClosingResponse *shared.ResponseSpecification    `json:"closingResponse,omitempty"`
	Conditional     *shared.ConditionalSpecification `json:"conditional,omitempty"`
	NextStep        *shared.DialogState              `json:"nextStep,omitempty"`
}

// UpdateIntentRequestBodyIntentConfirmationSetting - Provides a prompt for making sure that the user is ready for the intent to be fulfilled.
type UpdateIntentRequestBodyIntentConfirmationSetting struct {
	Active                  *bool                                   `json:"active,omitempty"`
	CodeHook                *shared.DialogCodeHookInvocationSetting `json:"codeHook,omitempty"`
	ConfirmationConditional *shared.ConditionalSpecification        `json:"confirmationConditional,omitempty"`
	ConfirmationNextStep    *shared.DialogState                     `json:"confirmationNextStep,omitempty"`
	// Specifies a list of message groups that Amazon Lex uses to respond the user input.
	ConfirmationResponse   *shared.ResponseSpecification                `json:"confirmationResponse,omitempty"`
	DeclinationConditional *shared.ConditionalSpecification             `json:"declinationConditional,omitempty"`
	DeclinationNextStep    *shared.DialogState                          `json:"declinationNextStep,omitempty"`
	DeclinationResponse    *shared.ResponseSpecification                `json:"declinationResponse,omitempty"`
	ElicitationCodeHook    *shared.ElicitationCodeHookInvocationSetting `json:"elicitationCodeHook,omitempty"`
	// Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
	FailureConditional *shared.ConditionalSpecification `json:"failureConditional,omitempty"`
	FailureNextStep    *shared.DialogState              `json:"failureNextStep,omitempty"`
	// Specifies a list of message groups that Amazon Lex uses to respond the user input.
	FailureResponse     *shared.ResponseSpecification `json:"failureResponse,omitempty"`
	PromptSpecification *shared.PromptSpecification   `json:"promptSpecification,omitempty"`
}

// UpdateIntentRequestBodyKendraConfiguration - Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user's utterance.
type UpdateIntentRequestBodyKendraConfiguration struct {
	KendraIndex              *string `json:"kendraIndex,omitempty"`
	QueryFilterString        *string `json:"queryFilterString,omitempty"`
	QueryFilterStringEnabled *bool   `json:"queryFilterStringEnabled,omitempty"`
}

type UpdateIntentRequestBody struct {
	// The new description of the intent.
	Description *string `json:"description,omitempty"`
	// Settings that determine the Lambda function that Amazon Lex uses for processing user responses.
	DialogCodeHook *UpdateIntentRequestBodyDialogCodeHook `json:"dialogCodeHook,omitempty"`
	// Determines if a Lambda function should be invoked for a specific intent.
	FulfillmentCodeHook *UpdateIntentRequestBodyFulfillmentCodeHook `json:"fulfillmentCodeHook,omitempty"`
	// Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.
	InitialResponseSetting *UpdateIntentRequestBodyInitialResponseSetting `json:"initialResponseSetting,omitempty"`
	// A new list of contexts that must be active in order for Amazon Lex to consider the intent.
	InputContexts []shared.InputContext `json:"inputContexts,omitempty"`
	// Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.
	IntentClosingSetting *UpdateIntentRequestBodyIntentClosingSetting `json:"intentClosingSetting,omitempty"`
	// Provides a prompt for making sure that the user is ready for the intent to be fulfilled.
	IntentConfirmationSetting *UpdateIntentRequestBodyIntentConfirmationSetting `json:"intentConfirmationSetting,omitempty"`
	// The new name for the intent.
	IntentName string `json:"intentName"`
	// Provides configuration information for the AMAZON.KendraSearchIntent intent. When you use this intent, Amazon Lex searches the specified Amazon Kendra index and returns documents from the index that match the user's utterance.
	KendraConfiguration *UpdateIntentRequestBodyKendraConfiguration `json:"kendraConfiguration,omitempty"`
	// A new list of contexts that Amazon Lex activates when the intent is fulfilled.
	OutputContexts []shared.OutputContext `json:"outputContexts,omitempty"`
	// The signature of the new built-in intent to use as the parent of this intent.
	ParentIntentSignature *string `json:"parentIntentSignature,omitempty"`
	// New utterances used to invoke the intent.
	SampleUtterances []shared.SampleUtterance `json:"sampleUtterances,omitempty"`
	// A new list of slots and their priorities that are contained by the intent.
	SlotPriorities []shared.SlotPriority `json:"slotPriorities,omitempty"`
}

type UpdateIntentRequest struct {
	RequestBody       UpdateIntentRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The identifier of the bot that contains the intent.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The version of the bot that contains the intent. Must be <code>DRAFT</code>.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
	// The unique identifier of the intent to update.
	IntentID string `pathParam:"style=simple,explode=false,name=intentId"`
	// The identifier of the language and locale where this intent is used. The string must match one of the supported locales. For more information, see <a href="https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html">Supported languages</a>.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
}

type UpdateIntentResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateIntentResponse *shared.UpdateIntentResponse
	// ValidationException
	ValidationException interface{}
}
