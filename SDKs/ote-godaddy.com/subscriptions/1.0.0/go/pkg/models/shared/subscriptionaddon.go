// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SubscriptionAddonCommitmentEnum - The financial commitment the customer has in the product
type SubscriptionAddonCommitmentEnum string

const (
	SubscriptionAddonCommitmentEnumPaid  SubscriptionAddonCommitmentEnum = "PAID"
	SubscriptionAddonCommitmentEnumFree  SubscriptionAddonCommitmentEnum = "FREE"
	SubscriptionAddonCommitmentEnumTrial SubscriptionAddonCommitmentEnum = "TRIAL"
)

func (e *SubscriptionAddonCommitmentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PAID":
		fallthrough
	case "FREE":
		fallthrough
	case "TRIAL":
		*e = SubscriptionAddonCommitmentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionAddonCommitmentEnum: %s", s)
	}
}

type SubscriptionAddon struct {
	// The financial commitment the customer has in the product
	Commitment SubscriptionAddonCommitmentEnum `json:"commitment"`
	// Unique identifier of the add-in product
	Pfid     int64 `json:"pfid"`
	Quantity int64 `json:"quantity"`
}
