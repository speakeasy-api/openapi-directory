/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Target - A specification of a set of documents to listen to.
 */
public class Target {
    /**
     * A target specified by a set of documents names.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents")
    public DocumentsTarget documents;
    public Target withDocuments(DocumentsTarget documents) {
        this.documents = documents;
        return this;
    }
    
    /**
     * If the target should be removed once it is current and consistent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("once")
    public Boolean once;
    public Target withOnce(Boolean once) {
        this.once = once;
        return this;
    }
    
    /**
     * A target specified by a query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query")
    public QueryTarget query;
    public Target withQuery(QueryTarget query) {
        this.query = query;
        return this;
    }
    
    /**
     * Start listening after a specific `read_time`. The client must know the state of matching documents at this time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readTime")
    public String readTime;
    public Target withReadTime(String readTime) {
        this.readTime = readTime;
        return this;
    }
    
    /**
     * A resume token from a prior TargetChange for an identical target. Using a resume token with a different target is unsupported and may fail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resumeToken")
    public String resumeToken;
    public Target withResumeToken(String resumeToken) {
        this.resumeToken = resumeToken;
        return this;
    }
    
    /**
     * The target ID that identifies the target on the stream. Must be a positive number and non-zero.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetId")
    public Integer targetId;
    public Target withTargetId(Integer targetId) {
        this.targetId = targetId;
        return this;
    }
    
}
