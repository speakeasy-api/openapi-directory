/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MessageStatus - The callbacks for the message status are the same as defined in the Messaging API. The only difference will be that dispatch_uuid and link will be appended.
 */
public class MessageStatus {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public MessageStatusLinks links;

    public MessageStatus withLinks(MessageStatusLinks links) {
        this.links = links;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public MessageStatusError error;

    public MessageStatus withError(MessageStatusError error) {
        this.error = error;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("from")
    public FromProperty from;

    public MessageStatus withFrom(FromProperty from) {
        this.from = from;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message_uuid")
    public String messageUuid;

    public MessageStatus withMessageUuid(String messageUuid) {
        this.messageUuid = messageUuid;
        return this;
    }
    
    /**
     * The status of the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public MessageStatusStatusEnum status;

    public MessageStatus withStatus(MessageStatusStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The datetime of when the event occurred.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public String timestamp;

    public MessageStatus withTimestamp(String timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("to")
    public ToProperty to;

    public MessageStatus withTo(ToProperty to) {
        this.to = to;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage")
    public MessageStatusUsage usage;

    public MessageStatus withUsage(MessageStatusUsage usage) {
        this.usage = usage;
        return this;
    }
    
    public MessageStatus(){}
}
