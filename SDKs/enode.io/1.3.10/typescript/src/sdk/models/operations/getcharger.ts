/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetChargerSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken1?: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  userAccessToken2?: string;
}

export class GetChargerRequest extends SpeakeasyBase {
  /**
   * ID of the Charger
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=chargerId",
  })
  chargerId: string;

  /**
   * An optional array of Charger fields that should be included in the response, for example: `?field[]=information&field[]=chargeState`
   *
   * @remarks
   *
   * By default, no optional fields are included and only the Charger ID will be returned. Response time will generally be slower the more fields you request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=field[]",
  })
  field?: shared.OnechargersGetParameters0Enum[];
}

export class GetCharger200ApplicationJSONChargeState extends SpeakeasyBase {
  /**
   * The current charge rate in kW.
   *
   * @remarks
   *
   * This property is only available when the charger is actively charging a vehicle, and is `null` any other time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chargeRate" })
  chargeRate?: number;

  /**
   * Current charging status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCharging" })
  isCharging?: boolean;

  /**
   * Indicates whether the charger has a vehicle plugged into it (regardless of whether that vehicle is actually charging)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPluggedIn" })
  isPluggedIn?: boolean;
}

/**
 * Descriptive information about the Charger
 */
export class GetCharger200ApplicationJSONInformation extends SpeakeasyBase {
  /**
   * Charger brand
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: string;

  /**
   * Charger ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Charger model
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model?: string;

  /**
   * Charger production year
   */
  @SpeakeasyMetadata()
  @Expose({ name: "year" })
  year?: number;
}

/**
 * Successful
 */
export class GetCharger200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "chargeState" })
  @Type(() => GetCharger200ApplicationJSONChargeState)
  chargeState?: GetCharger200ApplicationJSONChargeState;

  /**
   * Charger ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Descriptive information about the Charger
   */
  @SpeakeasyMetadata()
  @Expose({ name: "information" })
  @Type(() => GetCharger200ApplicationJSONInformation)
  information?: GetCharger200ApplicationJSONInformation;

  /**
   * Is the charger currently reachable?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isReachable" })
  isReachable?: boolean;

  /**
   * The last time the charger was successfully communicated with
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastSeen" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastSeen?: Date;
}

export class GetChargerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful
   */
  @SpeakeasyMetadata()
  getCharger200ApplicationJSONObject?: GetCharger200ApplicationJSON;
}
