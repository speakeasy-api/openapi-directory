"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import errorfieldtype as shared_errorfieldtype
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PayoutAccountHolderResponsePayoutSpeedEnum(str, Enum):
    r"""Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`."""
    INSTANT = 'INSTANT'
    SAME_DAY = 'SAME_DAY'
    STANDARD = 'STANDARD'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayoutAccountHolderResponse:
    r"""OK - the request has succeeded."""
    
    bank_account_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bankAccountUUID'), 'exclude': lambda f: f is None }})
    r"""The unique ID of the Bank Account to which the payout was made."""  
    invalid_fields: Optional[list[shared_errorfieldtype.ErrorFieldType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidFields'), 'exclude': lambda f: f is None }})
    r"""Contains field validation errors that would prevent requests from being processed."""  
    merchant_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantReference'), 'exclude': lambda f: f is None }})
    r"""The value supplied by the executing user when initiating the transfer; may be used to link multiple transactions."""  
    payout_speed: Optional[PayoutAccountHolderResponsePayoutSpeedEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payoutSpeed'), 'exclude': lambda f: f is None }})
    r"""Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`."""  
    psp_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference'), 'exclude': lambda f: f is None }})
    r"""The reference of a request. Can be used to uniquely identify the request."""  
    result_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode'), 'exclude': lambda f: f is None }})
    r"""The result code."""  
    