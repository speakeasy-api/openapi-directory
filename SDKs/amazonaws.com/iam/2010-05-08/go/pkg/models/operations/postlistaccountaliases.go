// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListAccountAliasesActionEnum
type POSTListAccountAliasesActionEnum string

const (
	POSTListAccountAliasesActionEnumListAccountAliases POSTListAccountAliasesActionEnum = "ListAccountAliases"
)

func (e POSTListAccountAliasesActionEnum) ToPointer() *POSTListAccountAliasesActionEnum {
	return &e
}

func (e *POSTListAccountAliasesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListAccountAliases":
		*e = POSTListAccountAliasesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListAccountAliasesActionEnum: %v", v)
	}
}

// POSTListAccountAliasesVersionEnum
type POSTListAccountAliasesVersionEnum string

const (
	POSTListAccountAliasesVersionEnumTwoThousandAndTen0508 POSTListAccountAliasesVersionEnum = "2010-05-08"
)

func (e POSTListAccountAliasesVersionEnum) ToPointer() *POSTListAccountAliasesVersionEnum {
	return &e
}

func (e *POSTListAccountAliasesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTListAccountAliasesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListAccountAliasesVersionEnum: %v", v)
	}
}

type POSTListAccountAliasesRequest struct {
	Action POSTListAccountAliasesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                           `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                            `request:"mediaType=text/xml"`
	Version           POSTListAccountAliasesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListAccountAliasesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
