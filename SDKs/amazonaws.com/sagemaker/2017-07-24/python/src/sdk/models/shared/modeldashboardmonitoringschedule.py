"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import monitoringalertsummary as shared_monitoringalertsummary
from ..shared import monitoringexecutionsummary as shared_monitoringexecutionsummary
from ..shared import monitoringscheduleconfig as shared_monitoringscheduleconfig
from ..shared import monitoringtype_enum as shared_monitoringtype_enum
from ..shared import schedulestatus_enum as shared_schedulestatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ModelDashboardMonitoringSchedule:
    r"""A monitoring schedule for a model displayed in the Amazon SageMaker Model Dashboard."""
    
    creation_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    endpoint_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EndpointName'), 'exclude': lambda f: f is None }})  
    failure_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FailureReason'), 'exclude': lambda f: f is None }})  
    last_modified_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastModifiedTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    last_monitoring_execution_summary: Optional[shared_monitoringexecutionsummary.MonitoringExecutionSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastMonitoringExecutionSummary'), 'exclude': lambda f: f is None }})
    r"""Summary of information about the last monitoring job to run."""  
    monitoring_alert_summaries: Optional[list[shared_monitoringalertsummary.MonitoringAlertSummary]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringAlertSummaries'), 'exclude': lambda f: f is None }})  
    monitoring_schedule_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringScheduleArn'), 'exclude': lambda f: f is None }})  
    monitoring_schedule_config: Optional[shared_monitoringscheduleconfig.MonitoringScheduleConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringScheduleConfig'), 'exclude': lambda f: f is None }})
    r"""Configures the monitoring schedule and defines the monitoring job."""  
    monitoring_schedule_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringScheduleName'), 'exclude': lambda f: f is None }})  
    monitoring_schedule_status: Optional[shared_schedulestatus_enum.ScheduleStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringScheduleStatus'), 'exclude': lambda f: f is None }})  
    monitoring_type: Optional[shared_monitoringtype_enum.MonitoringTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringType'), 'exclude': lambda f: f is None }})  
    