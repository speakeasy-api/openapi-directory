"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FutureReservationsScopedList = exports.FutureReservationsScopedListWarning = exports.FutureReservationsScopedListWarningData = exports.FutureReservationsScopedListWarningCodeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var futurereservation_1 = require("./futurereservation");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
var FutureReservationsScopedListWarningCodeEnum;
(function (FutureReservationsScopedListWarningCodeEnum) {
    FutureReservationsScopedListWarningCodeEnum["CleanupFailed"] = "CLEANUP_FAILED";
    FutureReservationsScopedListWarningCodeEnum["DeprecatedResourceUsed"] = "DEPRECATED_RESOURCE_USED";
    FutureReservationsScopedListWarningCodeEnum["DeprecatedTypeUsed"] = "DEPRECATED_TYPE_USED";
    FutureReservationsScopedListWarningCodeEnum["DiskSizeLargerThanImageSize"] = "DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
    FutureReservationsScopedListWarningCodeEnum["ExperimentalTypeUsed"] = "EXPERIMENTAL_TYPE_USED";
    FutureReservationsScopedListWarningCodeEnum["ExternalApiWarning"] = "EXTERNAL_API_WARNING";
    FutureReservationsScopedListWarningCodeEnum["FieldValueOverriden"] = "FIELD_VALUE_OVERRIDEN";
    FutureReservationsScopedListWarningCodeEnum["InjectedKernelsDeprecated"] = "INJECTED_KERNELS_DEPRECATED";
    FutureReservationsScopedListWarningCodeEnum["InvalidHealthCheckForDynamicWieghtedLb"] = "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
    FutureReservationsScopedListWarningCodeEnum["LargeDeploymentWarning"] = "LARGE_DEPLOYMENT_WARNING";
    FutureReservationsScopedListWarningCodeEnum["MissingTypeDependency"] = "MISSING_TYPE_DEPENDENCY";
    FutureReservationsScopedListWarningCodeEnum["NextHopAddressNotAssigned"] = "NEXT_HOP_ADDRESS_NOT_ASSIGNED";
    FutureReservationsScopedListWarningCodeEnum["NextHopCannotIpForward"] = "NEXT_HOP_CANNOT_IP_FORWARD";
    FutureReservationsScopedListWarningCodeEnum["NextHopInstanceHasNoIpv6Interface"] = "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
    FutureReservationsScopedListWarningCodeEnum["NextHopInstanceNotFound"] = "NEXT_HOP_INSTANCE_NOT_FOUND";
    FutureReservationsScopedListWarningCodeEnum["NextHopInstanceNotOnNetwork"] = "NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
    FutureReservationsScopedListWarningCodeEnum["NextHopNotRunning"] = "NEXT_HOP_NOT_RUNNING";
    FutureReservationsScopedListWarningCodeEnum["NotCriticalError"] = "NOT_CRITICAL_ERROR";
    FutureReservationsScopedListWarningCodeEnum["NoResultsOnPage"] = "NO_RESULTS_ON_PAGE";
    FutureReservationsScopedListWarningCodeEnum["PartialSuccess"] = "PARTIAL_SUCCESS";
    FutureReservationsScopedListWarningCodeEnum["RequiredTosAgreement"] = "REQUIRED_TOS_AGREEMENT";
    FutureReservationsScopedListWarningCodeEnum["ResourceInUseByOtherResourceWarning"] = "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
    FutureReservationsScopedListWarningCodeEnum["ResourceNotDeleted"] = "RESOURCE_NOT_DELETED";
    FutureReservationsScopedListWarningCodeEnum["SchemaValidationIgnored"] = "SCHEMA_VALIDATION_IGNORED";
    FutureReservationsScopedListWarningCodeEnum["SingleInstancePropertyTemplate"] = "SINGLE_INSTANCE_PROPERTY_TEMPLATE";
    FutureReservationsScopedListWarningCodeEnum["UndeclaredProperties"] = "UNDECLARED_PROPERTIES";
    FutureReservationsScopedListWarningCodeEnum["Unreachable"] = "UNREACHABLE";
})(FutureReservationsScopedListWarningCodeEnum = exports.FutureReservationsScopedListWarningCodeEnum || (exports.FutureReservationsScopedListWarningCodeEnum = {}));
var FutureReservationsScopedListWarningData = /** @class */ (function (_super) {
    __extends(FutureReservationsScopedListWarningData, _super);
    function FutureReservationsScopedListWarningData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], FutureReservationsScopedListWarningData.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], FutureReservationsScopedListWarningData.prototype, "value", void 0);
    return FutureReservationsScopedListWarningData;
}(utils_1.SpeakeasyBase));
exports.FutureReservationsScopedListWarningData = FutureReservationsScopedListWarningData;
/**
 * Informational warning which replaces the list of future reservations when the list is empty.
 */
var FutureReservationsScopedListWarning = /** @class */ (function (_super) {
    __extends(FutureReservationsScopedListWarning, _super);
    function FutureReservationsScopedListWarning() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], FutureReservationsScopedListWarning.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: FutureReservationsScopedListWarningData }),
        (0, class_transformer_1.Expose)({ name: "data" }),
        (0, class_transformer_1.Type)(function () { return FutureReservationsScopedListWarningData; }),
        __metadata("design:type", Array)
    ], FutureReservationsScopedListWarning.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], FutureReservationsScopedListWarning.prototype, "message", void 0);
    return FutureReservationsScopedListWarning;
}(utils_1.SpeakeasyBase));
exports.FutureReservationsScopedListWarning = FutureReservationsScopedListWarning;
var FutureReservationsScopedList = /** @class */ (function (_super) {
    __extends(FutureReservationsScopedList, _super);
    function FutureReservationsScopedList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: futurereservation_1.FutureReservation }),
        (0, class_transformer_1.Expose)({ name: "futureReservations" }),
        (0, class_transformer_1.Type)(function () { return futurereservation_1.FutureReservation; }),
        __metadata("design:type", Array)
    ], FutureReservationsScopedList.prototype, "futureReservations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "warning" }),
        (0, class_transformer_1.Type)(function () { return FutureReservationsScopedListWarning; }),
        __metadata("design:type", FutureReservationsScopedListWarning)
    ], FutureReservationsScopedList.prototype, "warning", void 0);
    return FutureReservationsScopedList;
}(utils_1.SpeakeasyBase));
exports.FutureReservationsScopedList = FutureReservationsScopedList;
