// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DimensionRangeDimensionEnum - The dimension of the span.
type DimensionRangeDimensionEnum string

const (
	DimensionRangeDimensionEnumDimensionUnspecified DimensionRangeDimensionEnum = "DIMENSION_UNSPECIFIED"
	DimensionRangeDimensionEnumRows                 DimensionRangeDimensionEnum = "ROWS"
	DimensionRangeDimensionEnumColumns              DimensionRangeDimensionEnum = "COLUMNS"
)

func (e *DimensionRangeDimensionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = DimensionRangeDimensionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DimensionRangeDimensionEnum: %s", s)
	}
}

// DimensionRange - A range along a single dimension on a sheet. All indexes are zero-based. Indexes are half open: the start index is inclusive and the end index is exclusive. Missing indexes indicate the range is unbounded on that side.
type DimensionRange struct {
	// The dimension of the span.
	Dimension *DimensionRangeDimensionEnum `json:"dimension,omitempty"`
	// The end (exclusive) of the span, or not set if unbounded.
	EndIndex *int `json:"endIndex,omitempty"`
	// The sheet this span is on.
	SheetID *int `json:"sheetId,omitempty"`
	// The start (inclusive) of the span, or not set if unbounded.
	StartIndex *int `json:"startIndex,omitempty"`
}
