/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StructValue } from "./structvalue";
import { Expose, Type } from "class-transformer";

/**
 * <p>Contains the value of a column.</p> <pre><code> &lt;note&gt; &lt;p&gt;This data structure is only used with the deprecated &lt;code&gt;ExecuteSql&lt;/code&gt; operation. Use the &lt;code&gt;BatchExecuteStatement&lt;/code&gt; or &lt;code&gt;ExecuteStatement&lt;/code&gt; operation instead.&lt;/p&gt; &lt;/note&gt; </code></pre>
 */
export class Value extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Value })
  @Expose({ name: "arrayValues" })
  @Type(() => Value)
  arrayValues?: Value[];

  @SpeakeasyMetadata()
  @Expose({ name: "bigIntValue" })
  bigIntValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "bitValue" })
  bitValue?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "blobValue" })
  blobValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "doubleValue" })
  doubleValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "intValue" })
  intValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "isNull" })
  isNull?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "realValue" })
  realValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  stringValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "structValue" })
  @Type(() => StructValue)
  structValue?: StructValue;
}
