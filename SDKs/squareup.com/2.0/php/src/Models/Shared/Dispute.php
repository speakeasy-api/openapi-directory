<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Dispute - Represents a dispute a cardholder initiated with their bank.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Dispute
{
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $amountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $amountMoney = null;
    
    /**
     * The ID of the dispute in the card brand system, generated by the card brand.
     * 
     * @var ?string $brandDisputeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('brand_dispute_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $brandDisputeId = null;
    
    /**
     * The card brand used in the disputed payment.
     * 
     * @var ?string $cardBrand
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_brand')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardBrand = null;
    
    /**
     * The timestamp when the dispute was created, in RFC 3339 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The unique ID for this `Dispute`, generated by Square.
     * 
     * @var ?string $disputeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('dispute_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $disputeId = null;
    
    /**
     * The payment the cardholder disputed.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DisputedPayment $disputedPayment
     */
	#[\JMS\Serializer\Annotation\SerializedName('disputed_payment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DisputedPayment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DisputedPayment $disputedPayment = null;
    
    /**
     * The time when the next action is due, in RFC 3339 format.
     * 
     * @var ?string $dueAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('due_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dueAt = null;
    
    /**
     * The IDs of the evidence associated with the dispute.
     * 
     * @var ?array<string> $evidenceIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('evidence_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $evidenceIds = null;
    
    /**
     * The unique ID for this `Dispute`, generated by Square.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The ID of the location where the dispute originated.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * The dispute reason why the cardholder initiated the dispute with their bank.
     * 
     * @var ?string $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reason = null;
    
    /**
     * The timestamp when the dispute was reported, in RFC 3339 format.
     * 
     * @var ?string $reportedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('reported_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportedAt = null;
    
    /**
     * The timestamp when the dispute was reported, in RFC 3339 format.
     * 
     * @var ?string $reportedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('reported_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportedDate = null;
    
    /**
     * The current state of this dispute.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * The timestamp when the dispute was last updated, in RFC 3339 format.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * The current version of the `Dispute`.
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
	public function __construct()
	{
		$this->amountMoney = null;
		$this->brandDisputeId = null;
		$this->cardBrand = null;
		$this->createdAt = null;
		$this->disputeId = null;
		$this->disputedPayment = null;
		$this->dueAt = null;
		$this->evidenceIds = null;
		$this->id = null;
		$this->locationId = null;
		$this->reason = null;
		$this->reportedAt = null;
		$this->reportedDate = null;
		$this->state = null;
		$this->updatedAt = null;
		$this->version = null;
	}
}
