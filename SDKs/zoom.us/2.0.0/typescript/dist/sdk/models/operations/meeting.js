"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Meeting200ApplicationJSONSettingsLanguageInterpretation = exports.Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters = exports.Meeting200ApplicationJSONSettingsJbhTimeEnum = exports.Meeting200ApplicationJSONSettingsGlobalDialInNumbers = exports.Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum = exports.Meeting200ApplicationJSONSettingsEncryptionTypeEnum = exports.Meeting200ApplicationJSONSettingsCustomKeys = exports.Meeting200ApplicationJSONSettingsBreakoutRoom = exports.Meeting200ApplicationJSONSettingsBreakoutRoomRooms = exports.Meeting200ApplicationJSONSettingsAutoRecordingEnum = exports.Meeting200ApplicationJSONSettingsAuthenticationException = exports.Meeting200ApplicationJSONSettingsAudioEnum = exports.Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions = exports.Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum = exports.Meeting200ApplicationJSONSettingsApprovalTypeEnum = exports.Meeting200ApplicationJSONRecurrence = exports.Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum = exports.Meeting200ApplicationJSONRecurrenceTypeEnum = exports.Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum = exports.Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum = exports.Meeting200ApplicationJSONOccurrences = exports.Meeting200ApplicationXML = exports.Meeting200ApplicationXMLTypeEnum = exports.Meeting200ApplicationXMLTrackingFields = exports.Meeting200ApplicationXMLStatusEnum = exports.Meeting200ApplicationXMLSettings = exports.Meeting200ApplicationXMLSettingsRegistrationTypeEnum = exports.Meeting200ApplicationXMLSettingsLanguageInterpretation = exports.Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters = exports.Meeting200ApplicationXMLSettingsJbhTimeEnum = exports.Meeting200ApplicationXMLSettingsGlobalDialInNumbers = exports.Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum = exports.Meeting200ApplicationXMLSettingsEncryptionTypeEnum = exports.Meeting200ApplicationXMLSettingsCustomKeys = exports.Meeting200ApplicationXMLSettingsBreakoutRoom = exports.Meeting200ApplicationXMLSettingsBreakoutRoomRooms = exports.Meeting200ApplicationXMLSettingsAutoRecordingEnum = exports.Meeting200ApplicationXMLSettingsAuthenticationException = exports.Meeting200ApplicationXMLSettingsAudioEnum = exports.Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions = exports.Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum = exports.Meeting200ApplicationXMLSettingsApprovalTypeEnum = exports.Meeting200ApplicationXMLRecurrence = exports.Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum = exports.Meeting200ApplicationXMLRecurrenceTypeEnum = exports.Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum = exports.Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum = exports.Meeting200ApplicationXMLOccurrences = exports.MeetingRequest = exports.MeetingSecurity = void 0;
exports.MeetingResponse = exports.Meeting200ApplicationJSON = exports.Meeting200ApplicationJSONTypeEnum = exports.Meeting200ApplicationJSONTrackingFields = exports.Meeting200ApplicationJSONStatusEnum = exports.Meeting200ApplicationJSONSettings = exports.Meeting200ApplicationJSONSettingsRegistrationTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var MeetingSecurity = /** @class */ (function (_super) {
    __extends(MeetingSecurity, _super);
    function MeetingSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], MeetingSecurity.prototype, "oAuth", void 0);
    return MeetingSecurity;
}(utils_1.SpeakeasyBase));
exports.MeetingSecurity = MeetingSecurity;
var MeetingRequest = /** @class */ (function (_super) {
    __extends(MeetingRequest, _super);
    function MeetingRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=meetingId",
        }),
        __metadata("design:type", Number)
    ], MeetingRequest.prototype, "meetingId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=occurrence_id",
        }),
        __metadata("design:type", String)
    ], MeetingRequest.prototype, "occurrenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=show_previous_occurrences",
        }),
        __metadata("design:type", Boolean)
    ], MeetingRequest.prototype, "showPreviousOccurrences", void 0);
    return MeetingRequest;
}(utils_1.SpeakeasyBase));
exports.MeetingRequest = MeetingRequest;
/**
 * Occurence object. This object is only returned for Recurring Webinars.
 */
var Meeting200ApplicationXMLOccurrences = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLOccurrences, _super);
    function Meeting200ApplicationXMLOccurrences() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXMLOccurrences.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLOccurrences.prototype, "occurrenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], Meeting200ApplicationXMLOccurrences.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLOccurrences.prototype, "status", void 0);
    return Meeting200ApplicationXMLOccurrences;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLOccurrences = Meeting200ApplicationXMLOccurrences;
/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
 */
var Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum;
(function (Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum) {
    Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum["Minus1"] = "-1";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum["One"] = "1";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum["Two"] = "2";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum["Three"] = "3";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum["Four"] = "4";
})(Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum = exports.Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum || (exports.Meeting200ApplicationXMLRecurrenceMonthlyWeekEnum = {}));
/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
 *
 * @remarks
 *
 * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
var Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum;
(function (Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum) {
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["One"] = "1";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["Two"] = "2";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["Three"] = "3";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["Four"] = "4";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["Five"] = "5";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["Six"] = "6";
    Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum["Seven"] = "7";
})(Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum = exports.Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum || (exports.Meeting200ApplicationXMLRecurrenceMonthlyWeekDayEnum = {}));
/**
 * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
 */
var Meeting200ApplicationXMLRecurrenceTypeEnum;
(function (Meeting200ApplicationXMLRecurrenceTypeEnum) {
    Meeting200ApplicationXMLRecurrenceTypeEnum["One"] = "1";
    Meeting200ApplicationXMLRecurrenceTypeEnum["Two"] = "2";
    Meeting200ApplicationXMLRecurrenceTypeEnum["Three"] = "3";
})(Meeting200ApplicationXMLRecurrenceTypeEnum = exports.Meeting200ApplicationXMLRecurrenceTypeEnum || (exports.Meeting200ApplicationXMLRecurrenceTypeEnum = {}));
/**
 * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
 *
 * @remarks
 *
 *  <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
var Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum;
(function (Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum) {
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["One"] = "1";
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["Two"] = "2";
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["Three"] = "3";
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["Four"] = "4";
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["Five"] = "5";
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["Six"] = "6";
    Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum["Seven"] = "7";
})(Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum = exports.Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum || (exports.Meeting200ApplicationXMLRecurrenceWeeklyDaysEnum = {}));
/**
 * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
 */
var Meeting200ApplicationXMLRecurrence = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLRecurrence, _super);
    function Meeting200ApplicationXMLRecurrence() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], Meeting200ApplicationXMLRecurrence.prototype, "endDateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXMLRecurrence.prototype, "endTimes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXMLRecurrence.prototype, "monthlyDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLRecurrence.prototype, "monthlyWeek", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLRecurrence.prototype, "monthlyWeekDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXMLRecurrence.prototype, "repeatInterval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLRecurrence.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLRecurrence.prototype, "weeklyDays", void 0);
    return Meeting200ApplicationXMLRecurrence;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLRecurrence = Meeting200ApplicationXMLRecurrence;
/**
 * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
 *
 * @remarks
 *
 * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
 */
var Meeting200ApplicationXMLSettingsApprovalTypeEnum;
(function (Meeting200ApplicationXMLSettingsApprovalTypeEnum) {
    Meeting200ApplicationXMLSettingsApprovalTypeEnum["Zero"] = "0";
    Meeting200ApplicationXMLSettingsApprovalTypeEnum["One"] = "1";
    Meeting200ApplicationXMLSettingsApprovalTypeEnum["Two"] = "2";
})(Meeting200ApplicationXMLSettingsApprovalTypeEnum = exports.Meeting200ApplicationXMLSettingsApprovalTypeEnum || (exports.Meeting200ApplicationXMLSettingsApprovalTypeEnum = {}));
/**
 * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
 *
 * @remarks
 * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
 * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
 */
var Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum;
(function (Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum) {
    Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum["Approve"] = "approve";
    Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum["Deny"] = "deny";
})(Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum = exports.Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum || (exports.Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum = {}));
/**
 * Approve or block users from specific regions/countries from joining this meeting.
 *
 * @remarks
 *
 */
var Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions, _super);
    function Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions.prototype, "approvedList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions.prototype, "deniedList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions.prototype, "method", void 0);
    return Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions = Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions;
/**
 * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
 */
var Meeting200ApplicationXMLSettingsAudioEnum;
(function (Meeting200ApplicationXMLSettingsAudioEnum) {
    Meeting200ApplicationXMLSettingsAudioEnum["Both"] = "both";
    Meeting200ApplicationXMLSettingsAudioEnum["Telephony"] = "telephony";
    Meeting200ApplicationXMLSettingsAudioEnum["Voip"] = "voip";
})(Meeting200ApplicationXMLSettingsAudioEnum = exports.Meeting200ApplicationXMLSettingsAudioEnum || (exports.Meeting200ApplicationXMLSettingsAudioEnum = {}));
var Meeting200ApplicationXMLSettingsAuthenticationException = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsAuthenticationException, _super);
    function Meeting200ApplicationXMLSettingsAuthenticationException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsAuthenticationException.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsAuthenticationException.prototype, "name", void 0);
    return Meeting200ApplicationXMLSettingsAuthenticationException;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsAuthenticationException = Meeting200ApplicationXMLSettingsAuthenticationException;
/**
 * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
 */
var Meeting200ApplicationXMLSettingsAutoRecordingEnum;
(function (Meeting200ApplicationXMLSettingsAutoRecordingEnum) {
    Meeting200ApplicationXMLSettingsAutoRecordingEnum["Local"] = "local";
    Meeting200ApplicationXMLSettingsAutoRecordingEnum["Cloud"] = "cloud";
    Meeting200ApplicationXMLSettingsAutoRecordingEnum["None"] = "none";
})(Meeting200ApplicationXMLSettingsAutoRecordingEnum = exports.Meeting200ApplicationXMLSettingsAutoRecordingEnum || (exports.Meeting200ApplicationXMLSettingsAutoRecordingEnum = {}));
var Meeting200ApplicationXMLSettingsBreakoutRoomRooms = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsBreakoutRoomRooms, _super);
    function Meeting200ApplicationXMLSettingsBreakoutRoomRooms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsBreakoutRoomRooms.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettingsBreakoutRoomRooms.prototype, "participants", void 0);
    return Meeting200ApplicationXMLSettingsBreakoutRoomRooms;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsBreakoutRoomRooms = Meeting200ApplicationXMLSettingsBreakoutRoomRooms;
/**
 * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
 */
var Meeting200ApplicationXMLSettingsBreakoutRoom = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsBreakoutRoom, _super);
    function Meeting200ApplicationXMLSettingsBreakoutRoom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettingsBreakoutRoom.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationXMLSettingsBreakoutRoomRooms,
        }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettingsBreakoutRoom.prototype, "rooms", void 0);
    return Meeting200ApplicationXMLSettingsBreakoutRoom;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsBreakoutRoom = Meeting200ApplicationXMLSettingsBreakoutRoom;
var Meeting200ApplicationXMLSettingsCustomKeys = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsCustomKeys, _super);
    function Meeting200ApplicationXMLSettingsCustomKeys() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsCustomKeys.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsCustomKeys.prototype, "value", void 0);
    return Meeting200ApplicationXMLSettingsCustomKeys;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsCustomKeys = Meeting200ApplicationXMLSettingsCustomKeys;
/**
 * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
 *
 * @remarks
 * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
 *
 * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
 */
var Meeting200ApplicationXMLSettingsEncryptionTypeEnum;
(function (Meeting200ApplicationXMLSettingsEncryptionTypeEnum) {
    Meeting200ApplicationXMLSettingsEncryptionTypeEnum["EnhancedEncryption"] = "enhanced_encryption";
    Meeting200ApplicationXMLSettingsEncryptionTypeEnum["E2ee"] = "e2ee";
})(Meeting200ApplicationXMLSettingsEncryptionTypeEnum = exports.Meeting200ApplicationXMLSettingsEncryptionTypeEnum || (exports.Meeting200ApplicationXMLSettingsEncryptionTypeEnum = {}));
/**
 * Type of number.
 */
var Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum;
(function (Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum) {
    Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum["Toll"] = "toll";
    Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum["Tollfree"] = "tollfree";
})(Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum = exports.Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum || (exports.Meeting200ApplicationXMLSettingsGlobalDialInNumbersTypeEnum = {}));
var Meeting200ApplicationXMLSettingsGlobalDialInNumbers = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsGlobalDialInNumbers, _super);
    function Meeting200ApplicationXMLSettingsGlobalDialInNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsGlobalDialInNumbers.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsGlobalDialInNumbers.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsGlobalDialInNumbers.prototype, "countryName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsGlobalDialInNumbers.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsGlobalDialInNumbers.prototype, "type", void 0);
    return Meeting200ApplicationXMLSettingsGlobalDialInNumbers;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsGlobalDialInNumbers = Meeting200ApplicationXMLSettingsGlobalDialInNumbers;
/**
 * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
 *
 * @remarks
 *
 * *  `0`: Allow participant to join anytime.
 * *  `5`: Allow participant to join 5 minutes before meeting start time.
 *  * `10`: Allow participant to join 10 minutes before meeting start time.
 */
var Meeting200ApplicationXMLSettingsJbhTimeEnum;
(function (Meeting200ApplicationXMLSettingsJbhTimeEnum) {
    Meeting200ApplicationXMLSettingsJbhTimeEnum["Zero"] = "0";
    Meeting200ApplicationXMLSettingsJbhTimeEnum["Five"] = "5";
    Meeting200ApplicationXMLSettingsJbhTimeEnum["Ten"] = "10";
})(Meeting200ApplicationXMLSettingsJbhTimeEnum = exports.Meeting200ApplicationXMLSettingsJbhTimeEnum || (exports.Meeting200ApplicationXMLSettingsJbhTimeEnum = {}));
var Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters, _super);
    function Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters.prototype, "languages", void 0);
    return Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters = Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters;
var Meeting200ApplicationXMLSettingsLanguageInterpretation = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettingsLanguageInterpretation, _super);
    function Meeting200ApplicationXMLSettingsLanguageInterpretation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettingsLanguageInterpretation.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationXMLSettingsLanguageInterpretationInterpreters,
        }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettingsLanguageInterpretation.prototype, "interpreters", void 0);
    return Meeting200ApplicationXMLSettingsLanguageInterpretation;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettingsLanguageInterpretation = Meeting200ApplicationXMLSettingsLanguageInterpretation;
/**
 * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
 */
var Meeting200ApplicationXMLSettingsRegistrationTypeEnum;
(function (Meeting200ApplicationXMLSettingsRegistrationTypeEnum) {
    Meeting200ApplicationXMLSettingsRegistrationTypeEnum["One"] = "1";
    Meeting200ApplicationXMLSettingsRegistrationTypeEnum["Two"] = "2";
    Meeting200ApplicationXMLSettingsRegistrationTypeEnum["Three"] = "3";
})(Meeting200ApplicationXMLSettingsRegistrationTypeEnum = exports.Meeting200ApplicationXMLSettingsRegistrationTypeEnum || (exports.Meeting200ApplicationXMLSettingsRegistrationTypeEnum = {}));
/**
 * Meeting settings.
 */
var Meeting200ApplicationXMLSettings = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLSettings, _super);
    function Meeting200ApplicationXMLSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "allowMultipleDevices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "alternativeHosts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "alternativeHostsEmailNotification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "approvalType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Meeting200ApplicationXMLSettingsApprovedOrDeniedCountriesOrRegions)
    ], Meeting200ApplicationXMLSettings.prototype, "approvedOrDeniedCountriesOrRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "audio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "authenticationDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationXMLSettingsAuthenticationException,
        }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettings.prototype, "authenticationException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "authenticationName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "authenticationOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "autoRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Meeting200ApplicationXMLSettingsBreakoutRoom)
    ], Meeting200ApplicationXMLSettings.prototype, "breakoutRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "closeRegistration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "cnMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "contactEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "contactName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Meeting200ApplicationXMLSettingsCustomKeys }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettings.prototype, "customKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "encryptionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "enforceLogin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "enforceLoginDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettings.prototype, "globalDialInCountries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationXMLSettingsGlobalDialInNumbers,
        }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXMLSettings.prototype, "globalDialInNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "hostVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "inMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "jbhTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "joinBeforeHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Meeting200ApplicationXMLSettingsLanguageInterpretation)
    ], Meeting200ApplicationXMLSettings.prototype, "languageInterpretation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "meetingAuthentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "muteUponEntry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "participantVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "registrantsConfirmationEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "registrantsEmailNotification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLSettings.prototype, "registrationType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "showShareButton", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "usePmi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "waitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLSettings.prototype, "watermark", void 0);
    return Meeting200ApplicationXMLSettings;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLSettings = Meeting200ApplicationXMLSettings;
/**
 * Meeting status
 */
var Meeting200ApplicationXMLStatusEnum;
(function (Meeting200ApplicationXMLStatusEnum) {
    Meeting200ApplicationXMLStatusEnum["Waiting"] = "waiting";
    Meeting200ApplicationXMLStatusEnum["Started"] = "started";
})(Meeting200ApplicationXMLStatusEnum = exports.Meeting200ApplicationXMLStatusEnum || (exports.Meeting200ApplicationXMLStatusEnum = {}));
var Meeting200ApplicationXMLTrackingFields = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXMLTrackingFields, _super);
    function Meeting200ApplicationXMLTrackingFields() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLTrackingFields.prototype, "field", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXMLTrackingFields.prototype, "value", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationXMLTrackingFields.prototype, "visible", void 0);
    return Meeting200ApplicationXMLTrackingFields;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXMLTrackingFields = Meeting200ApplicationXMLTrackingFields;
/**
 * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`4` - PMI Meeting<br>
 *
 * @remarks
 * `8` - Recurring meeting with a fixed time.
 */
var Meeting200ApplicationXMLTypeEnum;
(function (Meeting200ApplicationXMLTypeEnum) {
    Meeting200ApplicationXMLTypeEnum["One"] = "1";
    Meeting200ApplicationXMLTypeEnum["Two"] = "2";
    Meeting200ApplicationXMLTypeEnum["Three"] = "3";
    Meeting200ApplicationXMLTypeEnum["Eight"] = "8";
})(Meeting200ApplicationXMLTypeEnum = exports.Meeting200ApplicationXMLTypeEnum || (exports.Meeting200ApplicationXMLTypeEnum = {}));
/**
 * Meeting object.
 */
var Meeting200ApplicationXML = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationXML, _super);
    function Meeting200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "agenda", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "assistantId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], Meeting200ApplicationXML.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXML.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "encryptedPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "h323Password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "hostEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "hostId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXML.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "joinUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Meeting200ApplicationXMLOccurrences }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXML.prototype, "occurrences", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], Meeting200ApplicationXML.prototype, "pmi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Meeting200ApplicationXMLRecurrence)
    ], Meeting200ApplicationXML.prototype, "recurrence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Meeting200ApplicationXMLSettings)
    ], Meeting200ApplicationXML.prototype, "settings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], Meeting200ApplicationXML.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "startUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "timezone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Meeting200ApplicationXMLTrackingFields }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationXML.prototype, "trackingFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], Meeting200ApplicationXML.prototype, "uuid", void 0);
    return Meeting200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationXML = Meeting200ApplicationXML;
/**
 * Occurence object. This object is only returned for Recurring Webinars.
 */
var Meeting200ApplicationJSONOccurrences = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONOccurrences, _super);
    function Meeting200ApplicationJSONOccurrences() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSONOccurrences.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "occurrence_id" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONOccurrences.prototype, "occurrenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Meeting200ApplicationJSONOccurrences.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONOccurrences.prototype, "status", void 0);
    return Meeting200ApplicationJSONOccurrences;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONOccurrences = Meeting200ApplicationJSONOccurrences;
/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state the week of the month when the meeting should recur. If you use this field, **you must also use the `monthly_week_day` field to state the day of the week when the meeting should recur.** <br>`-1` - Last week of the month.<br>`1` - First week of the month.<br>`2` - Second week of the month.<br>`3` - Third week of the month.<br>`4` - Fourth week of the month.
 */
var Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum;
(function (Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum) {
    Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum["Minus1"] = "-1";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum["One"] = "1";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum["Two"] = "2";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum["Three"] = "3";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum["Four"] = "4";
})(Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum = exports.Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum || (exports.Meeting200ApplicationJSONRecurrenceMonthlyWeekEnum = {}));
/**
 * Use this field **only if you're scheduling a recurring meeting of type** `3` to state a specific day in a week when the monthly meeting should recur. To use this field, you must also use the `monthly_week` field.
 *
 * @remarks
 *
 * <br>`1` - Sunday.<br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` - Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
var Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum;
(function (Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum) {
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["One"] = "1";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["Two"] = "2";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["Three"] = "3";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["Four"] = "4";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["Five"] = "5";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["Six"] = "6";
    Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum["Seven"] = "7";
})(Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum = exports.Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum || (exports.Meeting200ApplicationJSONRecurrenceMonthlyWeekDayEnum = {}));
/**
 * Recurrence meeting types:<br>`1` - Daily.<br>`2` - Weekly.<br>`3` - Monthly.
 */
var Meeting200ApplicationJSONRecurrenceTypeEnum;
(function (Meeting200ApplicationJSONRecurrenceTypeEnum) {
    Meeting200ApplicationJSONRecurrenceTypeEnum["One"] = "1";
    Meeting200ApplicationJSONRecurrenceTypeEnum["Two"] = "2";
    Meeting200ApplicationJSONRecurrenceTypeEnum["Three"] = "3";
})(Meeting200ApplicationJSONRecurrenceTypeEnum = exports.Meeting200ApplicationJSONRecurrenceTypeEnum || (exports.Meeting200ApplicationJSONRecurrenceTypeEnum = {}));
/**
 * This field is required **if you're scheduling a recurring meeting of type** `2` to state which day(s) of the week the meeting should repeat. <br> <br> The value for this field could be a number between `1` to `7` in string format. For instance, if the meeting should recur on Sunday, provide `"1"` as the value of this field.<br><br> **Note:** If you would like the meeting to occur on multiple days of a week, you should provide comma separated values for this field. For instance, if the meeting should recur on Sundays and Tuesdays provide `"1,3"` as the value of this field.
 *
 * @remarks
 *
 *  <br>`1`  - Sunday. <br>`2` - Monday.<br>`3` - Tuesday.<br>`4` -  Wednesday.<br>`5` -  Thursday.<br>`6` - Friday.<br>`7` - Saturday.
 */
var Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum;
(function (Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum) {
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["One"] = "1";
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["Two"] = "2";
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["Three"] = "3";
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["Four"] = "4";
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["Five"] = "5";
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["Six"] = "6";
    Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum["Seven"] = "7";
})(Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum = exports.Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum || (exports.Meeting200ApplicationJSONRecurrenceWeeklyDaysEnum = {}));
/**
 * Recurrence object. Use this object only for a meeting with type `8` i.e., a recurring meeting with fixed time.
 */
var Meeting200ApplicationJSONRecurrence = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONRecurrence, _super);
    function Meeting200ApplicationJSONRecurrence() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_date_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Meeting200ApplicationJSONRecurrence.prototype, "endDateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_times" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSONRecurrence.prototype, "endTimes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthly_day" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSONRecurrence.prototype, "monthlyDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthly_week" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONRecurrence.prototype, "monthlyWeek", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "monthly_week_day" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONRecurrence.prototype, "monthlyWeekDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "repeat_interval" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSONRecurrence.prototype, "repeatInterval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONRecurrence.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "weekly_days" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONRecurrence.prototype, "weeklyDays", void 0);
    return Meeting200ApplicationJSONRecurrence;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONRecurrence = Meeting200ApplicationJSONRecurrence;
/**
 * Enable registration and set approval for the registration. Note that this feature requires the host to be of **Licensed** user type. **Registration cannot be enabled for a basic user.** <br><br>
 *
 * @remarks
 *
 * `0` - Automatically approve.<br>`1` - Manually approve.<br>`2` - No registration required.
 */
var Meeting200ApplicationJSONSettingsApprovalTypeEnum;
(function (Meeting200ApplicationJSONSettingsApprovalTypeEnum) {
    Meeting200ApplicationJSONSettingsApprovalTypeEnum["Zero"] = "0";
    Meeting200ApplicationJSONSettingsApprovalTypeEnum["One"] = "1";
    Meeting200ApplicationJSONSettingsApprovalTypeEnum["Two"] = "2";
})(Meeting200ApplicationJSONSettingsApprovalTypeEnum = exports.Meeting200ApplicationJSONSettingsApprovalTypeEnum || (exports.Meeting200ApplicationJSONSettingsApprovalTypeEnum = {}));
/**
 * Specify whether to allow users from specific regions to join this meeting; or block users from specific regions from joining this meeting. <br><br>
 *
 * @remarks
 * `approve`: Allow users from specific regions/countries to join this meeting. If this setting is selected, the approved regions/countries must be included in the `approved_list`.<br><br>
 * `deny`: Block users from specific regions/countries from joining this meeting. If this setting is selected, the approved regions/countries must be included in the `denied_list`
 */
var Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum;
(function (Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum) {
    Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum["Approve"] = "approve";
    Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum["Deny"] = "deny";
})(Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum = exports.Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum || (exports.Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegionsMethodEnum = {}));
/**
 * Approve or block users from specific regions/countries from joining this meeting.
 *
 * @remarks
 *
 */
var Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions, _super);
    function Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approved_list" }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions.prototype, "approvedList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "denied_list" }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions.prototype, "deniedList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "method" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions.prototype, "method", void 0);
    return Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions = Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions;
/**
 * Determine how participants can join the audio portion of the meeting.<br>`both` - Both Telephony and VoIP.<br>`telephony` - Telephony only.<br>`voip` - VoIP only.
 */
var Meeting200ApplicationJSONSettingsAudioEnum;
(function (Meeting200ApplicationJSONSettingsAudioEnum) {
    Meeting200ApplicationJSONSettingsAudioEnum["Both"] = "both";
    Meeting200ApplicationJSONSettingsAudioEnum["Telephony"] = "telephony";
    Meeting200ApplicationJSONSettingsAudioEnum["Voip"] = "voip";
})(Meeting200ApplicationJSONSettingsAudioEnum = exports.Meeting200ApplicationJSONSettingsAudioEnum || (exports.Meeting200ApplicationJSONSettingsAudioEnum = {}));
var Meeting200ApplicationJSONSettingsAuthenticationException = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsAuthenticationException, _super);
    function Meeting200ApplicationJSONSettingsAuthenticationException() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsAuthenticationException.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsAuthenticationException.prototype, "name", void 0);
    return Meeting200ApplicationJSONSettingsAuthenticationException;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsAuthenticationException = Meeting200ApplicationJSONSettingsAuthenticationException;
/**
 * Automatic recording:<br>`local` - Record on local.<br>`cloud` -  Record on cloud.<br>`none` - Disabled.
 */
var Meeting200ApplicationJSONSettingsAutoRecordingEnum;
(function (Meeting200ApplicationJSONSettingsAutoRecordingEnum) {
    Meeting200ApplicationJSONSettingsAutoRecordingEnum["Local"] = "local";
    Meeting200ApplicationJSONSettingsAutoRecordingEnum["Cloud"] = "cloud";
    Meeting200ApplicationJSONSettingsAutoRecordingEnum["None"] = "none";
})(Meeting200ApplicationJSONSettingsAutoRecordingEnum = exports.Meeting200ApplicationJSONSettingsAutoRecordingEnum || (exports.Meeting200ApplicationJSONSettingsAutoRecordingEnum = {}));
var Meeting200ApplicationJSONSettingsBreakoutRoomRooms = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsBreakoutRoomRooms, _super);
    function Meeting200ApplicationJSONSettingsBreakoutRoomRooms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsBreakoutRoomRooms.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "participants" }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettingsBreakoutRoomRooms.prototype, "participants", void 0);
    return Meeting200ApplicationJSONSettingsBreakoutRoomRooms;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsBreakoutRoomRooms = Meeting200ApplicationJSONSettingsBreakoutRoomRooms;
/**
 * Setting to [pre-assign breakout rooms](https://support.zoom.us/hc/en-us/articles/360032752671-Pre-assigning-participants-to-breakout-rooms#h_36f71353-4190-48a2-b999-ca129861c1f4).
 */
var Meeting200ApplicationJSONSettingsBreakoutRoom = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsBreakoutRoom, _super);
    function Meeting200ApplicationJSONSettingsBreakoutRoom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettingsBreakoutRoom.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationJSONSettingsBreakoutRoomRooms,
        }),
        (0, class_transformer_1.Expose)({ name: "rooms" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsBreakoutRoomRooms; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettingsBreakoutRoom.prototype, "rooms", void 0);
    return Meeting200ApplicationJSONSettingsBreakoutRoom;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsBreakoutRoom = Meeting200ApplicationJSONSettingsBreakoutRoom;
var Meeting200ApplicationJSONSettingsCustomKeys = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsCustomKeys, _super);
    function Meeting200ApplicationJSONSettingsCustomKeys() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsCustomKeys.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsCustomKeys.prototype, "value", void 0);
    return Meeting200ApplicationJSONSettingsCustomKeys;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsCustomKeys = Meeting200ApplicationJSONSettingsCustomKeys;
/**
 * Choose between enhanced encryption and [end-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871) when starting or a meeting. When using end-to-end encryption, several features (e.g. cloud recording, phone/SIP/H.323 dial-in) will be **automatically disabled**. <br><br>The value of this field can be one of the following:<br>
 *
 * @remarks
 * `enhanced_encryption`: Enhanced encryption. Encryption is stored in the cloud if you enable this option. <br>
 *
 * `e2ee`: [End-to-end encryption](https://support.zoom.us/hc/en-us/articles/360048660871). The encryption key is stored in your local device and can not be obtained by anyone else. Enabling this setting also **disables** the following features: join before host, cloud recording, streaming, live transcription, breakout rooms, polling, 1:1 private chat, and meeting reactions.
 */
var Meeting200ApplicationJSONSettingsEncryptionTypeEnum;
(function (Meeting200ApplicationJSONSettingsEncryptionTypeEnum) {
    Meeting200ApplicationJSONSettingsEncryptionTypeEnum["EnhancedEncryption"] = "enhanced_encryption";
    Meeting200ApplicationJSONSettingsEncryptionTypeEnum["E2ee"] = "e2ee";
})(Meeting200ApplicationJSONSettingsEncryptionTypeEnum = exports.Meeting200ApplicationJSONSettingsEncryptionTypeEnum || (exports.Meeting200ApplicationJSONSettingsEncryptionTypeEnum = {}));
/**
 * Type of number.
 */
var Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum;
(function (Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum) {
    Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum["Toll"] = "toll";
    Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum["Tollfree"] = "tollfree";
})(Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum = exports.Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum || (exports.Meeting200ApplicationJSONSettingsGlobalDialInNumbersTypeEnum = {}));
var Meeting200ApplicationJSONSettingsGlobalDialInNumbers = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsGlobalDialInNumbers, _super);
    function Meeting200ApplicationJSONSettingsGlobalDialInNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsGlobalDialInNumbers.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsGlobalDialInNumbers.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country_name" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsGlobalDialInNumbers.prototype, "countryName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsGlobalDialInNumbers.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsGlobalDialInNumbers.prototype, "type", void 0);
    return Meeting200ApplicationJSONSettingsGlobalDialInNumbers;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsGlobalDialInNumbers = Meeting200ApplicationJSONSettingsGlobalDialInNumbers;
/**
 * If the value of "join_before_host" field is set to true, this field can be used to indicate time limits within which a participant may join a meeting before a host. The value of this field can be one of the following:
 *
 * @remarks
 *
 * *  `0`: Allow participant to join anytime.
 * *  `5`: Allow participant to join 5 minutes before meeting start time.
 *  * `10`: Allow participant to join 10 minutes before meeting start time.
 */
var Meeting200ApplicationJSONSettingsJbhTimeEnum;
(function (Meeting200ApplicationJSONSettingsJbhTimeEnum) {
    Meeting200ApplicationJSONSettingsJbhTimeEnum["Zero"] = "0";
    Meeting200ApplicationJSONSettingsJbhTimeEnum["Five"] = "5";
    Meeting200ApplicationJSONSettingsJbhTimeEnum["Ten"] = "10";
})(Meeting200ApplicationJSONSettingsJbhTimeEnum = exports.Meeting200ApplicationJSONSettingsJbhTimeEnum || (exports.Meeting200ApplicationJSONSettingsJbhTimeEnum = {}));
var Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters, _super);
    function Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "languages" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters.prototype, "languages", void 0);
    return Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters = Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters;
var Meeting200ApplicationJSONSettingsLanguageInterpretation = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettingsLanguageInterpretation, _super);
    function Meeting200ApplicationJSONSettingsLanguageInterpretation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettingsLanguageInterpretation.prototype, "enable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters,
        }),
        (0, class_transformer_1.Expose)({ name: "interpreters" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsLanguageInterpretationInterpreters; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettingsLanguageInterpretation.prototype, "interpreters", void 0);
    return Meeting200ApplicationJSONSettingsLanguageInterpretation;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettingsLanguageInterpretation = Meeting200ApplicationJSONSettingsLanguageInterpretation;
/**
 * Registration type. Used for recurring meeting with fixed time only. <br>`1` Attendees register once and can attend any of the occurrences.<br>`2` Attendees need to register for each occurrence to attend.<br>`3` Attendees register once and can choose one or more occurrences to attend.
 */
var Meeting200ApplicationJSONSettingsRegistrationTypeEnum;
(function (Meeting200ApplicationJSONSettingsRegistrationTypeEnum) {
    Meeting200ApplicationJSONSettingsRegistrationTypeEnum["One"] = "1";
    Meeting200ApplicationJSONSettingsRegistrationTypeEnum["Two"] = "2";
    Meeting200ApplicationJSONSettingsRegistrationTypeEnum["Three"] = "3";
})(Meeting200ApplicationJSONSettingsRegistrationTypeEnum = exports.Meeting200ApplicationJSONSettingsRegistrationTypeEnum || (exports.Meeting200ApplicationJSONSettingsRegistrationTypeEnum = {}));
/**
 * Meeting settings.
 */
var Meeting200ApplicationJSONSettings = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONSettings, _super);
    function Meeting200ApplicationJSONSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allow_multiple_devices" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "allowMultipleDevices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alternative_hosts" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "alternativeHosts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alternative_hosts_email_notification" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "alternativeHostsEmailNotification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approval_type" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "approvalType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approved_or_denied_countries_or_regions" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions; }),
        __metadata("design:type", Meeting200ApplicationJSONSettingsApprovedOrDeniedCountriesOrRegions)
    ], Meeting200ApplicationJSONSettings.prototype, "approvedOrDeniedCountriesOrRegions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "audio" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "audio", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication_domains" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "authenticationDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationJSONSettingsAuthenticationException,
        }),
        (0, class_transformer_1.Expose)({ name: "authentication_exception" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsAuthenticationException; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettings.prototype, "authenticationException", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication_name" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "authenticationName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication_option" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "authenticationOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auto_recording" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "autoRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "breakout_room" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsBreakoutRoom; }),
        __metadata("design:type", Meeting200ApplicationJSONSettingsBreakoutRoom)
    ], Meeting200ApplicationJSONSettings.prototype, "breakoutRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "close_registration" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "closeRegistration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cn_meeting" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "cnMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contact_email" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "contactEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contact_name" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "contactName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Meeting200ApplicationJSONSettingsCustomKeys }),
        (0, class_transformer_1.Expose)({ name: "custom_keys" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsCustomKeys; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettings.prototype, "customKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encryption_type" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "encryptionType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforce_login" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "enforceLogin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforce_login_domains" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "enforceLoginDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "global_dial_in_countries" }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettings.prototype, "globalDialInCountries", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: Meeting200ApplicationJSONSettingsGlobalDialInNumbers,
        }),
        (0, class_transformer_1.Expose)({ name: "global_dial_in_numbers" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsGlobalDialInNumbers; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSONSettings.prototype, "globalDialInNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host_video" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "hostVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "in_meeting" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "inMeeting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "jbh_time" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "jbhTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "join_before_host" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "joinBeforeHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "language_interpretation" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettingsLanguageInterpretation; }),
        __metadata("design:type", Meeting200ApplicationJSONSettingsLanguageInterpretation)
    ], Meeting200ApplicationJSONSettings.prototype, "languageInterpretation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "meeting_authentication" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "meetingAuthentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mute_upon_entry" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "muteUponEntry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "participant_video" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "participantVideo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registrants_confirmation_email" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "registrantsConfirmationEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registrants_email_notification" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "registrantsEmailNotification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registration_type" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONSettings.prototype, "registrationType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "show_share_button" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "showShareButton", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "use_pmi" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "usePmi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "waiting_room" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "waitingRoom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "watermark" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONSettings.prototype, "watermark", void 0);
    return Meeting200ApplicationJSONSettings;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONSettings = Meeting200ApplicationJSONSettings;
/**
 * Meeting status
 */
var Meeting200ApplicationJSONStatusEnum;
(function (Meeting200ApplicationJSONStatusEnum) {
    Meeting200ApplicationJSONStatusEnum["Waiting"] = "waiting";
    Meeting200ApplicationJSONStatusEnum["Started"] = "started";
})(Meeting200ApplicationJSONStatusEnum = exports.Meeting200ApplicationJSONStatusEnum || (exports.Meeting200ApplicationJSONStatusEnum = {}));
var Meeting200ApplicationJSONTrackingFields = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSONTrackingFields, _super);
    function Meeting200ApplicationJSONTrackingFields() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "field" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONTrackingFields.prototype, "field", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSONTrackingFields.prototype, "value", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visible" }),
        __metadata("design:type", Boolean)
    ], Meeting200ApplicationJSONTrackingFields.prototype, "visible", void 0);
    return Meeting200ApplicationJSONTrackingFields;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSONTrackingFields = Meeting200ApplicationJSONTrackingFields;
/**
 * Meeting Types:<br>`1` - Instant meeting.<br>`2` - Scheduled meeting.<br>`3` - Recurring meeting with no fixed time.<br>`4` - PMI Meeting<br>
 *
 * @remarks
 * `8` - Recurring meeting with a fixed time.
 */
var Meeting200ApplicationJSONTypeEnum;
(function (Meeting200ApplicationJSONTypeEnum) {
    Meeting200ApplicationJSONTypeEnum["One"] = "1";
    Meeting200ApplicationJSONTypeEnum["Two"] = "2";
    Meeting200ApplicationJSONTypeEnum["Three"] = "3";
    Meeting200ApplicationJSONTypeEnum["Eight"] = "8";
})(Meeting200ApplicationJSONTypeEnum = exports.Meeting200ApplicationJSONTypeEnum || (exports.Meeting200ApplicationJSONTypeEnum = {}));
/**
 * Meeting object.
 */
var Meeting200ApplicationJSON = /** @class */ (function (_super) {
    __extends(Meeting200ApplicationJSON, _super);
    function Meeting200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "agenda" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "agenda", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "assistant_id" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "assistantId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Meeting200ApplicationJSON.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSON.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "encrypted_password" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "encryptedPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "h323_password" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "h323Password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host_email" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "hostEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host_id" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "hostId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "join_url" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "joinUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Meeting200ApplicationJSONOccurrences }),
        (0, class_transformer_1.Expose)({ name: "occurrences" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONOccurrences; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSON.prototype, "occurrences", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "pmi" }),
        __metadata("design:type", Number)
    ], Meeting200ApplicationJSON.prototype, "pmi", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recurrence" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONRecurrence; }),
        __metadata("design:type", Meeting200ApplicationJSONRecurrence)
    ], Meeting200ApplicationJSON.prototype, "recurrence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "settings" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONSettings; }),
        __metadata("design:type", Meeting200ApplicationJSONSettings)
    ], Meeting200ApplicationJSON.prototype, "settings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_time" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Meeting200ApplicationJSON.prototype, "startTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_url" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "startUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timezone" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "timezone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "topic" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: Meeting200ApplicationJSONTrackingFields }),
        (0, class_transformer_1.Expose)({ name: "tracking_fields" }),
        (0, class_transformer_1.Type)(function () { return Meeting200ApplicationJSONTrackingFields; }),
        __metadata("design:type", Array)
    ], Meeting200ApplicationJSON.prototype, "trackingFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uuid" }),
        __metadata("design:type", String)
    ], Meeting200ApplicationJSON.prototype, "uuid", void 0);
    return Meeting200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.Meeting200ApplicationJSON = Meeting200ApplicationJSON;
var MeetingResponse = /** @class */ (function (_super) {
    __extends(MeetingResponse, _super);
    function MeetingResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], MeetingResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], MeetingResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], MeetingResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], MeetingResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Meeting200ApplicationJSON)
    ], MeetingResponse.prototype, "meeting200ApplicationJSONObject", void 0);
    return MeetingResponse;
}(utils_1.SpeakeasyBase));
exports.MeetingResponse = MeetingResponse;
