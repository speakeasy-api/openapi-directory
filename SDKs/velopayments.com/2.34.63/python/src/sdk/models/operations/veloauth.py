"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import authresponse as shared_authresponse
from typing import Optional


@dataclasses.dataclass
class VeloAuthSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class VeloAuthRequest:
    
    grant_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'grant_type', 'style': 'form', 'explode': True }})
    r"""OAuth grant type. Should use 'client_credentials'"""  
    

@dataclasses.dataclass
class VeloAuthResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    auth_response: Optional[shared_authresponse.AuthResponse] = dataclasses.field(default=None)
    r"""Valid Authenication response"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    