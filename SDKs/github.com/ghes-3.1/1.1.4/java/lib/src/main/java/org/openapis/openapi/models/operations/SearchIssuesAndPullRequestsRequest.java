/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class SearchIssuesAndPullRequestsRequest {
    /**
     * Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=order")
    public org.openapis.openapi.models.shared.OrderEnum order;

    public SearchIssuesAndPullRequestsRequest withOrder(org.openapis.openapi.models.shared.OrderEnum order) {
        this.order = order;
        return this;
    }
    
    /**
     * Page number of the results to fetch.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;

    public SearchIssuesAndPullRequestsRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of results per page (max 100).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;

    public SearchIssuesAndPullRequestsRequest withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub Enterprise Server. The REST API supports the same qualifiers as the web interface for GitHub Enterprise Server. To learn more about the format of the query, see [Constructing a search query](https://docs.github.com/enterprise-server@3.1/rest/reference/search#constructing-a-search-query). See "[Searching issues and pull requests](https://docs.github.com/enterprise-server@3.1/search-github/searching-on-github/searching-issues-and-pull-requests)" for a detailed list of qualifiers.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=q")
    public String q;

    public SearchIssuesAndPullRequestsRequest withQ(String q) {
        this.q = q;
        return this;
    }
    
    /**
     * Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`, Default: [best match](https://docs.github.com/enterprise-server@3.1/rest/reference/search#ranking-search-results)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public SearchIssuesAndPullRequestsSortEnum sort;

    public SearchIssuesAndPullRequestsRequest withSort(SearchIssuesAndPullRequestsSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    public SearchIssuesAndPullRequestsRequest(@JsonProperty("q") String q) {
        this.q = q;
  }
}
