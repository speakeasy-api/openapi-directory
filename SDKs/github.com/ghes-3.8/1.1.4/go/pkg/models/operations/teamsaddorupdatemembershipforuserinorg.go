// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum - The role that this user should have in the team.
type TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum string

const (
	TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnumMember     TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum = "member"
	TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnumMaintainer TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum = "maintainer"
)

func (e *TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "member":
		fallthrough
	case "maintainer":
		*e = TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum: %s", s)
	}
}

type TeamsAddOrUpdateMembershipForUserInOrgRequestBody struct {
	// The role that this user should have in the team.
	Role *TeamsAddOrUpdateMembershipForUserInOrgRequestBodyRoleEnum `json:"role,omitempty"`
}

type TeamsAddOrUpdateMembershipForUserInOrgRequest struct {
	RequestBody *TeamsAddOrUpdateMembershipForUserInOrgRequestBody `request:"mediaType=application/json"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
	// The slug of the team name.
	TeamSlug string `pathParam:"style=simple,explode=false,name=team_slug"`
	// The handle for the GitHub user account.
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

type TeamsAddOrUpdateMembershipForUserInOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	TeamMembership *shared.TeamMembership
}
