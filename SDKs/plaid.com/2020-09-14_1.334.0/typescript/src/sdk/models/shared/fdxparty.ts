/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FDXPartyRegistryEnum } from "./fdxpartyregistryenum";
import { FDXPartyTypeEnum } from "./fdxpartytypeenum";
import { Expose } from "class-transformer";

/**
 * FDX Participant - an entity or person that is a part of a FDX API transaction
 */
export class FDXParty extends SpeakeasyBase {
  /**
   * URI for party, where an end user could learn more about the company or application involved in the data sharing chain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "homeUri" })
  homeUri?: string;

  /**
   * URI for a logo asset to be displayed to the end user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logoUri" })
  logoUri?: string;

  /**
   * Human recognizable common name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Registered id of party
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registeredEntityId" })
  registeredEntityId?: string;

  /**
   * Registered name of party
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registeredEntityName" })
  registeredEntityName?: string;

  /**
   * The registry containing the partyâ€™s registration with name and id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registry" })
  registry?: FDXPartyRegistryEnum;

  /**
   * Identifies the type of a party
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: FDXPartyTypeEnum;
}
