// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetFindPathwaysByXrefFormatEnum
type GetFindPathwaysByXrefFormatEnum string

const (
	GetFindPathwaysByXrefFormatEnumJSON GetFindPathwaysByXrefFormatEnum = "json"
	GetFindPathwaysByXrefFormatEnumXML  GetFindPathwaysByXrefFormatEnum = "xml"
	GetFindPathwaysByXrefFormatEnumHTML GetFindPathwaysByXrefFormatEnum = "html"
	GetFindPathwaysByXrefFormatEnumDump GetFindPathwaysByXrefFormatEnum = "dump"
	GetFindPathwaysByXrefFormatEnumJpg  GetFindPathwaysByXrefFormatEnum = "jpg"
	GetFindPathwaysByXrefFormatEnumPdf  GetFindPathwaysByXrefFormatEnum = "pdf"
)

func (e *GetFindPathwaysByXrefFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetFindPathwaysByXrefFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFindPathwaysByXrefFormatEnum: %s", s)
	}
}

type GetFindPathwaysByXrefRequest struct {
	// string
	Codes  []interface{}                    `queryParam:"style=form,explode=false,name=codes"`
	Format *GetFindPathwaysByXrefFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// string
	Ids []interface{} `queryParam:"style=form,explode=false,name=ids"`
}

type GetFindPathwaysByXrefResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
