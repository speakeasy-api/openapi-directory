/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Member {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public MemberLinks links;
    public Member withLinks(MemberLinks links) {
        this.links = links;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public MemberChannel channel;
    public Member withChannel(MemberChannel channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * The display name of the User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;
    public Member withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Member ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Member withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initiator")
    public MemberInitiator initiator;
    public Member withInitiator(MemberInitiator initiator) {
        this.initiator = initiator;
        return this;
    }
    
    /**
     * The current media state for the member
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("media")
    public MemberMedia media;
    public Member withMedia(MemberMedia media) {
        this.media = media;
        return this;
    }
    
    /**
     * The name of the User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Member withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The state that the member is in for this conversation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public MemberStateEnum state;
    public Member withState(MemberStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public MemberTimestamp timestamp;
    public Member withTimestamp(MemberTimestamp timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * The ID of the User
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public Member withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
