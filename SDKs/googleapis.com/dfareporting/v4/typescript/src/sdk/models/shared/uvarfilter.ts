/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Indicates how the filter should be matched to the values.
 */
export enum UvarFilterMatchEnum {
  Unspecified = "UNSPECIFIED",
  Exact = "EXACT",
  Contains = "CONTAINS",
}

/**
 * Defines the filtering on a single uvar.
 */
export class UvarFilter extends SpeakeasyBase {
  /**
   * Return rows which don't match this filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: boolean;

  /**
   * Custom variable index the filter is applied to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: string;

  /**
   * The kind of resource this is, in this case dfareporting#uvarFilter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Indicates how the filter should be matched to the values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "match" })
  match?: UvarFilterMatchEnum;

  /**
   * Values to filter on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values?: string[];
}
