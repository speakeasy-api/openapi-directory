/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SupplierInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account")
    public LinkedLedgerAccountInput account;

    public SupplierInput withAccount(LinkedLedgerAccountInput account) {
        this.account = account;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addresses")
    public Address[] addresses;

    public SupplierInput withAddresses(Address[] addresses) {
        this.addresses = addresses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bank_accounts")
    public BankAccount[] bankAccounts;

    public SupplierInput withBankAccounts(BankAccount[] bankAccounts) {
        this.bankAccounts = bankAccounts;
        return this;
    }
    
    /**
     * The name of the company.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    public String companyName;

    public SupplierInput withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public CurrencyEnum currency;

    public SupplierInput withCurrency(CurrencyEnum currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Display ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_id")
    public String displayId;

    public SupplierInput withDisplayId(String displayId) {
        this.displayId = displayId;
        return this;
    }
    
    /**
     * Display name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;

    public SupplierInput withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emails")
    public Email[] emails;

    public SupplierInput withEmails(Email[] emails) {
        this.emails = emails;
        return this;
    }
    
    /**
     * The first name of the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    public String firstName;

    public SupplierInput withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Is this an individual or business supplier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individual")
    public Boolean individual;

    public SupplierInput withIndividual(Boolean individual) {
        this.individual = individual;
        return this;
    }
    
    /**
     * The last name of the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;

    public SupplierInput withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Middle name of the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middle_name")
    public String middleName;

    public SupplierInput withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    /**
     * Some notes about this supplier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public SupplierInput withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_numbers")
    public PhoneNumber[] phoneNumbers;

    public SupplierInput withPhoneNumbers(PhoneNumber[] phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
        return this;
    }
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("row_version")
    public String rowVersion;

    public SupplierInput withRowVersion(String rowVersion) {
        this.rowVersion = rowVersion;
        return this;
    }
    
    /**
     * Supplier status
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public SupplierStatusEnum status;

    public SupplierInput withStatus(SupplierStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suffix")
    public String suffix;

    public SupplierInput withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_number")
    public String taxNumber;

    public SupplierInput withTaxNumber(String taxNumber) {
        this.taxNumber = taxNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_rate")
    public LinkedTaxRateInput taxRate;

    public SupplierInput withTaxRate(LinkedTaxRateInput taxRate) {
        this.taxRate = taxRate;
        return this;
    }
    
    /**
     * The job title of the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public SupplierInput withTitle(String title) {
        this.title = title;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("websites")
    public Website[] websites;

    public SupplierInput withWebsites(Website[] websites) {
        this.websites = websites;
        return this;
    }
    
    public SupplierInput(){}
}
