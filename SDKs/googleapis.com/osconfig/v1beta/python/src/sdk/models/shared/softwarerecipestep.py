"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import softwarerecipestepcopyfile as shared_softwarerecipestepcopyfile
from ..shared import softwarerecipestepexecfile as shared_softwarerecipestepexecfile
from ..shared import softwarerecipestepextractarchive as shared_softwarerecipestepextractarchive
from ..shared import softwarerecipestepinstalldpkg as shared_softwarerecipestepinstalldpkg
from ..shared import softwarerecipestepinstallmsi as shared_softwarerecipestepinstallmsi
from ..shared import softwarerecipestepinstallrpm as shared_softwarerecipestepinstallrpm
from ..shared import softwarerecipesteprunscript as shared_softwarerecipesteprunscript
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SoftwareRecipeStep:
    r"""An action that can be taken as part of installing or updating a recipe."""
    
    archive_extraction: Optional[shared_softwarerecipestepextractarchive.SoftwareRecipeStepExtractArchive] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('archiveExtraction'), 'exclude': lambda f: f is None }})
    r"""Extracts an archive of the type specified in the specified directory."""  
    dpkg_installation: Optional[shared_softwarerecipestepinstalldpkg.SoftwareRecipeStepInstallDpkg] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dpkgInstallation'), 'exclude': lambda f: f is None }})
    r"""Installs a deb via dpkg."""  
    file_copy: Optional[shared_softwarerecipestepcopyfile.SoftwareRecipeStepCopyFile] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileCopy'), 'exclude': lambda f: f is None }})
    r"""Copies the artifact to the specified path on the instance."""  
    file_exec: Optional[shared_softwarerecipestepexecfile.SoftwareRecipeStepExecFile] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileExec'), 'exclude': lambda f: f is None }})
    r"""Executes an artifact or local file."""  
    msi_installation: Optional[shared_softwarerecipestepinstallmsi.SoftwareRecipeStepInstallMsi] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('msiInstallation'), 'exclude': lambda f: f is None }})
    r"""Installs an MSI file."""  
    rpm_installation: Optional[shared_softwarerecipestepinstallrpm.SoftwareRecipeStepInstallRpm] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rpmInstallation'), 'exclude': lambda f: f is None }})
    r"""Installs an rpm file via the rpm utility."""  
    script_run: Optional[shared_softwarerecipesteprunscript.SoftwareRecipeStepRunScript] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scriptRun'), 'exclude': lambda f: f is None }})
    r"""Runs a script through an interpreter."""  
    