/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The status for the specified destination.
 */
export enum PromotionPromotionStatusDestinationStatusStatusEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  InReview = "IN_REVIEW",
  Rejected = "REJECTED",
  Live = "LIVE",
  Stopped = "STOPPED",
  Expired = "EXPIRED",
  Pending = "PENDING",
}

/**
 * The destination status of the promotion.
 */
export class PromotionPromotionStatusDestinationStatus extends SpeakeasyBase {
  /**
   * The name of the destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  destination?: string;

  /**
   * The status for the specified destination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: PromotionPromotionStatusDestinationStatusStatusEnum;
}
