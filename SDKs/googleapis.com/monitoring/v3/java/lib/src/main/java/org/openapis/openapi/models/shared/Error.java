/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Error - Detailed information about an error category.
 */
public class Error {
    /**
     * The number of points that couldn't be written because of status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pointCount")
    public Integer pointCount;
    public Error withPointCount(Integer pointCount) {
        this.pointCount = pointCount;
        return this;
    }
    
    /**
     * The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public Status status;
    public Error withStatus(Status status) {
        this.status = status;
        return this;
    }
    
}
