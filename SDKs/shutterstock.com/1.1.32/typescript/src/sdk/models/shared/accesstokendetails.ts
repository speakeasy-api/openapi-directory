/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Type of access token
 */
export enum AccessTokenDetailsRealmEnum {
  Customer = "customer",
  Contributor = "contributor",
}

/**
 * Access token details that are currently associated with this user
 */
export class AccessTokenDetails extends SpeakeasyBase {
  /**
   * Client ID that is associated with the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * Contributor ID that is associated with the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contributor_id" })
  contributorId?: string;

  /**
   * Customer ID that is associated with the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customer_id" })
  customerId?: string;

  /**
   * Number of seconds until the access token expires; no expiration if this value is null
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_in" })
  expiresIn?: number;

  /**
   * Organization ID that is associated with the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization_id" })
  organizationId?: string;

  /**
   * Type of access token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "realm" })
  realm?: AccessTokenDetailsRealmEnum;

  /**
   * Scopes that this access token provides when used as authentication
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes" })
  scopes?: string[];

  /**
   * User ID that is associated with the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;

  /**
   * User name that is associated with the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
