"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContainerVersionHeader:
    r"""Represents a Google Tag Manager Container Version Header."""
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""GTM Account ID."""  
    container_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerId'), 'exclude': lambda f: f is None }})
    r"""GTM Container ID."""  
    container_version_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('containerVersionId'), 'exclude': lambda f: f is None }})
    r"""The Container Version ID uniquely identifies the GTM Container Version."""  
    deleted: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deleted'), 'exclude': lambda f: f is None }})
    r"""A value of true indicates this container version has been deleted."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Container version display name."""  
    num_clients: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numClients'), 'exclude': lambda f: f is None }})
    r"""Number of clients in the container version."""  
    num_custom_templates: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numCustomTemplates'), 'exclude': lambda f: f is None }})
    r"""Number of custom templates in the container version."""  
    num_gtag_configs: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numGtagConfigs'), 'exclude': lambda f: f is None }})
    r"""Number of Google tag configs in the container version."""  
    num_macros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numMacros'), 'exclude': lambda f: f is None }})
    r"""Number of macros in the container version."""  
    num_rules: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numRules'), 'exclude': lambda f: f is None }})
    r"""Number of rules in the container version."""  
    num_tags: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numTags'), 'exclude': lambda f: f is None }})
    r"""Number of tags in the container version."""  
    num_triggers: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numTriggers'), 'exclude': lambda f: f is None }})
    r"""Number of triggers in the container version."""  
    num_variables: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numVariables'), 'exclude': lambda f: f is None }})
    r"""Number of variables in the container version."""  
    num_zones: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numZones'), 'exclude': lambda f: f is None }})
    r"""Number of zones in the container version."""  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path'), 'exclude': lambda f: f is None }})
    r"""GTM Container Version's API relative path."""  
    