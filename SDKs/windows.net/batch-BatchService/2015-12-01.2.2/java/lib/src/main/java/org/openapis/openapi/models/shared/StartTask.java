/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StartTask - A task defined on a pool and run by compute nodes when they join the pool.
 */
public class StartTask {
    /**
     * Gets or sets the command line of the start task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandLine")
    public String commandLine;

    public StartTask withCommandLine(String commandLine) {
        this.commandLine = commandLine;
        return this;
    }
    
    /**
     * Gets or sets a list of environment variable settings for the start task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentSettings")
    public EnvironmentSetting[] environmentSettings;

    public StartTask withEnvironmentSettings(EnvironmentSetting[] environmentSettings) {
        this.environmentSettings = environmentSettings;
        return this;
    }
    
    /**
     * Gets or sets the maximum number of times the task may be retried.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxTaskRetryCount")
    public Integer maxTaskRetryCount;

    public StartTask withMaxTaskRetryCount(Integer maxTaskRetryCount) {
        this.maxTaskRetryCount = maxTaskRetryCount;
        return this;
    }
    
    /**
     * Gets or sets a list of files that Batch will download to the compute node before running the command line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceFiles")
    public ResourceFile[] resourceFiles;

    public StartTask withResourceFiles(ResourceFile[] resourceFiles) {
        this.resourceFiles = resourceFiles;
        return this;
    }
    
    /**
     * Gets or sets whether to run the start task in elevated mode. The default value is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runElevated")
    public Boolean runElevated;

    public StartTask withRunElevated(Boolean runElevated) {
        this.runElevated = runElevated;
        return this;
    }
    
    /**
     * Gets or sets whether the Batch Service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waitForSuccess")
    public Boolean waitForSuccess;

    public StartTask withWaitForSuccess(Boolean waitForSuccess) {
        this.waitForSuccess = waitForSuccess;
        return this;
    }
    
    public StartTask(){}
}
