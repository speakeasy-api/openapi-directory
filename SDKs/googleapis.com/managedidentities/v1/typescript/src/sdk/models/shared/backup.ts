/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. The current state of the backup.
 */
export enum BackupStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Active = "ACTIVE",
  Failed = "FAILED",
  Deleting = "DELETING",
}

/**
 * Output only. Indicates whether it’s an on-demand backup or scheduled.
 */
export enum BackupTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  OnDemand = "ON_DEMAND",
  Scheduled = "SCHEDULED",
}

/**
 * Represents a Managed Microsoft Identities backup.
 */
export class Backup extends SpeakeasyBase {
  /**
   * Output only. The time the backups was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Output only. The unique name of the Backup in the form of `projects/{project_id}/locations/global/domains/{domain_name}/backups/{name}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The current state of the backup.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: BackupStateEnum;

  /**
   * Output only. Additional information about the current status of this backup, if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage?: string;

  /**
   * Output only. Indicates whether it’s an on-demand backup or scheduled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: BackupTypeEnum;

  /**
   * Output only. Last update time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * Represents a Managed Microsoft Identities backup.
 */
export class BackupInput extends SpeakeasyBase {
  /**
   * Optional. Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;
}
