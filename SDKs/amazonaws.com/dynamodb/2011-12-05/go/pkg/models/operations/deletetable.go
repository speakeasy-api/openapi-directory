// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteTableXAmzTargetEnum
type DeleteTableXAmzTargetEnum string

const (
	DeleteTableXAmzTargetEnumDynamoDb20111205DeleteTable DeleteTableXAmzTargetEnum = "DynamoDB_20111205.DeleteTable"
)

func (e DeleteTableXAmzTargetEnum) ToPointer() *DeleteTableXAmzTargetEnum {
	return &e
}

func (e *DeleteTableXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20111205.DeleteTable":
		*e = DeleteTableXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteTableXAmzTargetEnum: %v", v)
	}
}

type DeleteTableRequest struct {
	DeleteTableInput  shared.DeleteTableInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteTableXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteTableResponse struct {
	ContentType string
	// Success
	DeleteTableOutput *shared.DeleteTableOutput
	// InternalServerError
	InternalServerError interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
