// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// VcdVappSummarySLAAssignmentEnum - The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
type VcdVappSummarySLAAssignmentEnum string

const (
	VcdVappSummarySLAAssignmentEnumDerived    VcdVappSummarySLAAssignmentEnum = "Derived"
	VcdVappSummarySLAAssignmentEnumDirect     VcdVappSummarySLAAssignmentEnum = "Direct"
	VcdVappSummarySLAAssignmentEnumUnassigned VcdVappSummarySLAAssignmentEnum = "Unassigned"
)

func (e VcdVappSummarySLAAssignmentEnum) ToPointer() *VcdVappSummarySLAAssignmentEnum {
	return &e
}

func (e *VcdVappSummarySLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = VcdVappSummarySLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VcdVappSummarySLAAssignmentEnum: %v", v)
	}
}

type VcdVappSummary struct {
	// ID of the parent catalog if the vApp object is a template.
	CatalogID *string `json:"catalogId,omitempty"`
	// The ID of the SLA Domain configured directly on the Rubrik object.
	ConfiguredSLADomainID string `json:"configuredSlaDomainId"`
	// The name of the SLA Domain configured directly on the Rubrik object.
	ConfiguredSLADomainName string `json:"configuredSlaDomainName"`
	// Specifies whether the SLA Domain is used for protection or retention.
	ConfiguredSLADomainType *ConfiguredSLATypeEnum    `json:"configuredSlaDomainType,omitempty"`
	CurrentBackupTaskInfo   *BackupTaskDiagnosticInfo `json:"currentBackupTaskInfo,omitempty"`
	// The ID of the SLA Domain that controls the protection of the Rubrik object.
	EffectiveSLADomainID string `json:"effectiveSlaDomainId"`
	// The name of the SLA Domain that controls the protection of the Rubrik object.
	EffectiveSLADomainName string `json:"effectiveSlaDomainName"`
	// Optional. This field contains the managed ID of of the Polaris-managed effective SLA Domain.
	EffectiveSLADomainPolarisManagedID *string `json:"effectiveSlaDomainPolarisManagedId,omitempty"`
	// The ID of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
	EffectiveSLASourceObjectID *string `json:"effectiveSlaSourceObjectId,omitempty"`
	// The name of the parent of the Rubrik object from which the SLA Domain that controls the protection of Rubrik object is inherited.
	EffectiveSLASourceObjectName *string `json:"effectiveSlaSourceObjectName,omitempty"`
	// The ID of the Rubrik object.
	ID string `json:"id"`
	// Boolean value that indicates if backup task information isincluded in the response.
	IncludeBackupTaskInfo *bool `json:"includeBackupTaskInfo,omitempty"`
	// Brief information of all the objects in the infrastructure path to this vCD vApp object.
	InfraPath []ManagedHierarchyObjectAncestor `json:"infraPath"`
	// Indicates whether the configured SLA Domain is Retention Locked. When this value is 'true', the configured SLA Domain is a Retention Lock SLA Domain.
	IsConfiguredSLADomainRetentionLocked *bool `json:"isConfiguredSlaDomainRetentionLocked,omitempty"`
	// Indicates whether the effective SLA Domain is Retention Locked. When this value is 'true', the effective SLA domain is a Retention Lock SLA Domain.
	IsEffectiveSLADomainRetentionLocked *bool `json:"isEffectiveSlaDomainRetentionLocked,omitempty"`
	// Boolean value that indicates whether a vApp is present on the specified vCD cluster. Set to 'true' when the vApp is present and 'false' when the vApp is not present.
	IsRelic *bool `json:"isRelic,omitempty"`
	// A Boolean value that indicates whether the vApp object is a template. When this value is 'true,' the vApp object is a template. When this value is 'false,' the vApp object is not a template.
	IsTemplate *bool `json:"isTemplate,omitempty"`
	// The timestamp of the previous snapshot.
	LastSnapshotTime *time.Time `json:"lastSnapshotTime,omitempty"`
	// The name of the Rubrik object.
	Name string `json:"name"`
	// An integer that specifies the number of missed snapshots.
	NumMissedSnapshot int                          `json:"numMissedSnapshot"`
	PendingSLADomain  *ManagedObjectPendingSLAInfo `json:"pendingSlaDomain,omitempty"`
	// The ID of the cluster that manages the Rubrik object.
	PrimaryClusterID string `json:"primaryClusterId"`
	// The ID of the SLA Domain whose retention policy is in use.
	RetentionSLADomainID *string `json:"retentionSlaDomainId,omitempty"`
	// The SLA assignment type. Direct SLA assignment means that a SLA Domain was configured directly on the Rubrik object by the user. Derived SLA assignment means that the Rubrik object inherits an SLA Domain from its parent Rubrik object.
	SLAAssignment VcdVappSummarySLAAssignmentEnum `json:"slaAssignment"`
	// The UTC time when the SLA Domain was last updated.
	SLALastUpdateTime *time.Time `json:"slaLastUpdateTime,omitempty"`
	// ID assigned to a vCD Cluster object that contains a specified vApp object.
	VcdClusterID *string `json:"vcdClusterId,omitempty"`
	// Name assigned to a vCD Cluster object that contains a specified vApp object.
	VcdClusterName *string `json:"vcdClusterName,omitempty"`
}
