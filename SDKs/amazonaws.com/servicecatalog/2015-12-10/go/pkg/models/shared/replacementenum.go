// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplacementEnum string

const (
	ReplacementEnumTrue        ReplacementEnum = "TRUE"
	ReplacementEnumFalse       ReplacementEnum = "FALSE"
	ReplacementEnumConditional ReplacementEnum = "CONDITIONAL"
)

func (e ReplacementEnum) ToPointer() *ReplacementEnum {
	return &e
}

func (e *ReplacementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRUE":
		fallthrough
	case "FALSE":
		fallthrough
	case "CONDITIONAL":
		*e = ReplacementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplacementEnum: %v", v)
	}
}
