// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type TimeOffRequestNotes struct {
	Employee *string `json:"employee,omitempty"`
	Manager  *string `json:"manager,omitempty"`
}

// TimeOffRequestRequestTypeEnum - The type of request
type TimeOffRequestRequestTypeEnum string

const (
	TimeOffRequestRequestTypeEnumVacation    TimeOffRequestRequestTypeEnum = "vacation"
	TimeOffRequestRequestTypeEnumSick        TimeOffRequestRequestTypeEnum = "sick"
	TimeOffRequestRequestTypeEnumPersonal    TimeOffRequestRequestTypeEnum = "personal"
	TimeOffRequestRequestTypeEnumJuryDuty    TimeOffRequestRequestTypeEnum = "jury_duty"
	TimeOffRequestRequestTypeEnumVolunteer   TimeOffRequestRequestTypeEnum = "volunteer"
	TimeOffRequestRequestTypeEnumBereavement TimeOffRequestRequestTypeEnum = "bereavement"
	TimeOffRequestRequestTypeEnumOther       TimeOffRequestRequestTypeEnum = "other"
)

func (e *TimeOffRequestRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "vacation":
		fallthrough
	case "sick":
		fallthrough
	case "personal":
		fallthrough
	case "jury_duty":
		fallthrough
	case "volunteer":
		fallthrough
	case "bereavement":
		fallthrough
	case "other":
		*e = TimeOffRequestRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeOffRequestRequestTypeEnum: %s", s)
	}
}

// TimeOffRequestStatusEnum - The status of the time off request.
type TimeOffRequestStatusEnum string

const (
	TimeOffRequestStatusEnumRequested TimeOffRequestStatusEnum = "requested"
	TimeOffRequestStatusEnumApproved  TimeOffRequestStatusEnum = "approved"
	TimeOffRequestStatusEnumDeclined  TimeOffRequestStatusEnum = "declined"
	TimeOffRequestStatusEnumCancelled TimeOffRequestStatusEnum = "cancelled"
	TimeOffRequestStatusEnumDeleted   TimeOffRequestStatusEnum = "deleted"
	TimeOffRequestStatusEnumOther     TimeOffRequestStatusEnum = "other"
)

func (e *TimeOffRequestStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "requested":
		fallthrough
	case "approved":
		fallthrough
	case "declined":
		fallthrough
	case "cancelled":
		fallthrough
	case "deleted":
		fallthrough
	case "other":
		*e = TimeOffRequestStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeOffRequestStatusEnum: %s", s)
	}
}

// TimeOffRequestUnitsEnum - The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
type TimeOffRequestUnitsEnum string

const (
	TimeOffRequestUnitsEnumDays  TimeOffRequestUnitsEnum = "days"
	TimeOffRequestUnitsEnumHours TimeOffRequestUnitsEnum = "hours"
	TimeOffRequestUnitsEnumOther TimeOffRequestUnitsEnum = "other"
)

func (e *TimeOffRequestUnitsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "days":
		fallthrough
	case "hours":
		fallthrough
	case "other":
		*e = TimeOffRequestUnitsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimeOffRequestUnitsEnum: %s", s)
	}
}

type TimeOffRequestInput struct {
	// The amount of time off requested.
	Amount *float64 `json:"amount,omitempty"`
	// The date the request was approved
	ApprovalDate *string `json:"approval_date,omitempty"`
	// Description of the time off request.
	Description *string `json:"description,omitempty"`
	// ID of the employee
	EmployeeID *string `json:"employee_id,omitempty"`
	// The end date of the time off request.
	EndDate *string              `json:"end_date,omitempty"`
	Notes   *TimeOffRequestNotes `json:"notes,omitempty"`
	// ID of the policy
	PolicyID *string `json:"policy_id,omitempty"`
	// The date the request was made.
	RequestDate *string `json:"request_date,omitempty"`
	// The type of request
	RequestType *TimeOffRequestRequestTypeEnum `json:"request_type,omitempty"`
	// The start date of the time off request.
	StartDate *string `json:"start_date,omitempty"`
	// The status of the time off request.
	Status *TimeOffRequestStatusEnum `json:"status,omitempty"`
	// The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
	Units *TimeOffRequestUnitsEnum `json:"units,omitempty"`
}

type TimeOffRequest struct {
	// The amount of time off requested.
	Amount *float64 `json:"amount,omitempty"`
	// The date the request was approved
	ApprovalDate *string `json:"approval_date,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Description of the time off request.
	Description *string `json:"description,omitempty"`
	// ID of the employee
	EmployeeID *string `json:"employee_id,omitempty"`
	// The end date of the time off request.
	EndDate *string `json:"end_date,omitempty"`
	// A unique identifier for an object.
	ID    *string              `json:"id,omitempty"`
	Notes *TimeOffRequestNotes `json:"notes,omitempty"`
	// ID of the policy
	PolicyID *string `json:"policy_id,omitempty"`
	// The date the request was made.
	RequestDate *string `json:"request_date,omitempty"`
	// The type of request
	RequestType *TimeOffRequestRequestTypeEnum `json:"request_type,omitempty"`
	// The start date of the time off request.
	StartDate *string `json:"start_date,omitempty"`
	// The status of the time off request.
	Status *TimeOffRequestStatusEnum `json:"status,omitempty"`
	// The unit of time off requested. Possible values include: `hours`, `days`, or `other`.
	Units *TimeOffRequestUnitsEnum `json:"units,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
}
