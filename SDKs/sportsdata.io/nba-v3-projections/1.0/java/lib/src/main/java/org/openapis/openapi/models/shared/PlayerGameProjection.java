/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerGameProjection {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Assists")
    public Double assists;

    public PlayerGameProjection withAssists(Double assists) {
        this.assists = assists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistsPercentage")
    public Double assistsPercentage;

    public PlayerGameProjection withAssistsPercentage(Double assistsPercentage) {
        this.assistsPercentage = assistsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedShots")
    public Double blockedShots;

    public PlayerGameProjection withBlockedShots(Double blockedShots) {
        this.blockedShots = blockedShots;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlocksPercentage")
    public Double blocksPercentage;

    public PlayerGameProjection withBlocksPercentage(Double blocksPercentage) {
        this.blocksPercentage = blocksPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public PlayerGameProjection withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public PlayerGameProjection withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefensiveRebounds")
    public Double defensiveRebounds;

    public PlayerGameProjection withDefensiveRebounds(Double defensiveRebounds) {
        this.defensiveRebounds = defensiveRebounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefensiveReboundsPercentage")
    public Double defensiveReboundsPercentage;

    public PlayerGameProjection withDefensiveReboundsPercentage(Double defensiveReboundsPercentage) {
        this.defensiveReboundsPercentage = defensiveReboundsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DoubleDoubles")
    public Double doubleDoubles;

    public PlayerGameProjection withDoubleDoubles(Double doubleDoubles) {
        this.doubleDoubles = doubleDoubles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsPosition")
    public String draftKingsPosition;

    public PlayerGameProjection withDraftKingsPosition(String draftKingsPosition) {
        this.draftKingsPosition = draftKingsPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsSalary")
    public Long draftKingsSalary;

    public PlayerGameProjection withDraftKingsSalary(Long draftKingsSalary) {
        this.draftKingsSalary = draftKingsSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EffectiveFieldGoalsPercentage")
    public Double effectiveFieldGoalsPercentage;

    public PlayerGameProjection withEffectiveFieldGoalsPercentage(Double effectiveFieldGoalsPercentage) {
        this.effectiveFieldGoalsPercentage = effectiveFieldGoalsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelPosition")
    public String fanDuelPosition;

    public PlayerGameProjection withFanDuelPosition(String fanDuelPosition) {
        this.fanDuelPosition = fanDuelPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelSalary")
    public Long fanDuelSalary;

    public PlayerGameProjection withFanDuelSalary(Long fanDuelSalary) {
        this.fanDuelSalary = fanDuelSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDataSalary")
    public Long fantasyDataSalary;

    public PlayerGameProjection withFantasyDataSalary(Long fantasyDataSalary) {
        this.fantasyDataSalary = fantasyDataSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftPosition")
    public String fantasyDraftPosition;

    public PlayerGameProjection withFantasyDraftPosition(String fantasyDraftPosition) {
        this.fantasyDraftPosition = fantasyDraftPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftSalary")
    public Long fantasyDraftSalary;

    public PlayerGameProjection withFantasyDraftSalary(Long fantasyDraftSalary) {
        this.fantasyDraftSalary = fantasyDraftSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;

    public PlayerGameProjection withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;

    public PlayerGameProjection withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;

    public PlayerGameProjection withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFantasyDraft")
    public Double fantasyPointsFantasyDraft;

    public PlayerGameProjection withFantasyPointsFantasyDraft(Double fantasyPointsFantasyDraft) {
        this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;

    public PlayerGameProjection withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsAttempted")
    public Double fieldGoalsAttempted;

    public PlayerGameProjection withFieldGoalsAttempted(Double fieldGoalsAttempted) {
        this.fieldGoalsAttempted = fieldGoalsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsMade")
    public Double fieldGoalsMade;

    public PlayerGameProjection withFieldGoalsMade(Double fieldGoalsMade) {
        this.fieldGoalsMade = fieldGoalsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalsPercentage")
    public Double fieldGoalsPercentage;

    public PlayerGameProjection withFieldGoalsPercentage(Double fieldGoalsPercentage) {
        this.fieldGoalsPercentage = fieldGoalsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FreeThrowsAttempted")
    public Double freeThrowsAttempted;

    public PlayerGameProjection withFreeThrowsAttempted(Double freeThrowsAttempted) {
        this.freeThrowsAttempted = freeThrowsAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FreeThrowsMade")
    public Double freeThrowsMade;

    public PlayerGameProjection withFreeThrowsMade(Double freeThrowsMade) {
        this.freeThrowsMade = freeThrowsMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FreeThrowsPercentage")
    public Double freeThrowsPercentage;

    public PlayerGameProjection withFreeThrowsPercentage(Double freeThrowsPercentage) {
        this.freeThrowsPercentage = freeThrowsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;

    public PlayerGameProjection withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Games")
    public Long games;

    public PlayerGameProjection withGames(Long games) {
        this.games = games;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;

    public PlayerGameProjection withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalOpponentID")
    public Long globalOpponentID;

    public PlayerGameProjection withGlobalOpponentID(Long globalOpponentID) {
        this.globalOpponentID = globalOpponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;

    public PlayerGameProjection withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;

    public PlayerGameProjection withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryBodyPart")
    public String injuryBodyPart;

    public PlayerGameProjection withInjuryBodyPart(String injuryBodyPart) {
        this.injuryBodyPart = injuryBodyPart;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryNotes")
    public String injuryNotes;

    public PlayerGameProjection withInjuryNotes(String injuryNotes) {
        this.injuryNotes = injuryNotes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryStartDate")
    public String injuryStartDate;

    public PlayerGameProjection withInjuryStartDate(String injuryStartDate) {
        this.injuryStartDate = injuryStartDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InjuryStatus")
    public String injuryStatus;

    public PlayerGameProjection withInjuryStatus(String injuryStatus) {
        this.injuryStatus = injuryStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsClosed")
    public Boolean isClosed;

    public PlayerGameProjection withIsClosed(Boolean isClosed) {
        this.isClosed = isClosed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsGameOver")
    public Boolean isGameOver;

    public PlayerGameProjection withIsGameOver(Boolean isGameOver) {
        this.isGameOver = isGameOver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LineupConfirmed")
    public Boolean lineupConfirmed;

    public PlayerGameProjection withLineupConfirmed(Boolean lineupConfirmed) {
        this.lineupConfirmed = lineupConfirmed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LineupStatus")
    public String lineupStatus;

    public PlayerGameProjection withLineupStatus(String lineupStatus) {
        this.lineupStatus = lineupStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Minutes")
    public Long minutes;

    public PlayerGameProjection withMinutes(Long minutes) {
        this.minutes = minutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public PlayerGameProjection withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffensiveRebounds")
    public Double offensiveRebounds;

    public PlayerGameProjection withOffensiveRebounds(Double offensiveRebounds) {
        this.offensiveRebounds = offensiveRebounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffensiveReboundsPercentage")
    public Double offensiveReboundsPercentage;

    public PlayerGameProjection withOffensiveReboundsPercentage(Double offensiveReboundsPercentage) {
        this.offensiveReboundsPercentage = offensiveReboundsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;

    public PlayerGameProjection withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;

    public PlayerGameProjection withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentPositionRank")
    public Long opponentPositionRank;

    public PlayerGameProjection withOpponentPositionRank(Long opponentPositionRank) {
        this.opponentPositionRank = opponentPositionRank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentRank")
    public Long opponentRank;

    public PlayerGameProjection withOpponentRank(Long opponentRank) {
        this.opponentRank = opponentRank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PersonalFouls")
    public Double personalFouls;

    public PlayerGameProjection withPersonalFouls(Double personalFouls) {
        this.personalFouls = personalFouls;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerEfficiencyRating")
    public Double playerEfficiencyRating;

    public PlayerGameProjection withPlayerEfficiencyRating(Double playerEfficiencyRating) {
        this.playerEfficiencyRating = playerEfficiencyRating;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;

    public PlayerGameProjection withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlusMinus")
    public Double plusMinus;

    public PlayerGameProjection withPlusMinus(Double plusMinus) {
        this.plusMinus = plusMinus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Points")
    public Double points;

    public PlayerGameProjection withPoints(Double points) {
        this.points = points;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Position")
    public String position;

    public PlayerGameProjection withPosition(String position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Rebounds")
    public Double rebounds;

    public PlayerGameProjection withRebounds(Double rebounds) {
        this.rebounds = rebounds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public PlayerGameProjection withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public PlayerGameProjection withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Seconds")
    public Long seconds;

    public PlayerGameProjection withSeconds(Long seconds) {
        this.seconds = seconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Started")
    public Long started;

    public PlayerGameProjection withStarted(Long started) {
        this.started = started;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StatID")
    public Long statID;

    public PlayerGameProjection withStatID(Long statID) {
        this.statID = statID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Steals")
    public Double steals;

    public PlayerGameProjection withSteals(Double steals) {
        this.steals = steals;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StealsPercentage")
    public Double stealsPercentage;

    public PlayerGameProjection withStealsPercentage(Double stealsPercentage) {
        this.stealsPercentage = stealsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public PlayerGameProjection withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;

    public PlayerGameProjection withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreePointersAttempted")
    public Double threePointersAttempted;

    public PlayerGameProjection withThreePointersAttempted(Double threePointersAttempted) {
        this.threePointersAttempted = threePointersAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreePointersMade")
    public Double threePointersMade;

    public PlayerGameProjection withThreePointersMade(Double threePointersMade) {
        this.threePointersMade = threePointersMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThreePointersPercentage")
    public Double threePointersPercentage;

    public PlayerGameProjection withThreePointersPercentage(Double threePointersPercentage) {
        this.threePointersPercentage = threePointersPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalReboundsPercentage")
    public Double totalReboundsPercentage;

    public PlayerGameProjection withTotalReboundsPercentage(Double totalReboundsPercentage) {
        this.totalReboundsPercentage = totalReboundsPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TripleDoubles")
    public Double tripleDoubles;

    public PlayerGameProjection withTripleDoubles(Double tripleDoubles) {
        this.tripleDoubles = tripleDoubles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueShootingAttempts")
    public Double trueShootingAttempts;

    public PlayerGameProjection withTrueShootingAttempts(Double trueShootingAttempts) {
        this.trueShootingAttempts = trueShootingAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrueShootingPercentage")
    public Double trueShootingPercentage;

    public PlayerGameProjection withTrueShootingPercentage(Double trueShootingPercentage) {
        this.trueShootingPercentage = trueShootingPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TurnOversPercentage")
    public Double turnOversPercentage;

    public PlayerGameProjection withTurnOversPercentage(Double turnOversPercentage) {
        this.turnOversPercentage = turnOversPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Turnovers")
    public Double turnovers;

    public PlayerGameProjection withTurnovers(Double turnovers) {
        this.turnovers = turnovers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointersAttempted")
    public Double twoPointersAttempted;

    public PlayerGameProjection withTwoPointersAttempted(Double twoPointersAttempted) {
        this.twoPointersAttempted = twoPointersAttempted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointersMade")
    public Double twoPointersMade;

    public PlayerGameProjection withTwoPointersMade(Double twoPointersMade) {
        this.twoPointersMade = twoPointersMade;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointersPercentage")
    public Double twoPointersPercentage;

    public PlayerGameProjection withTwoPointersPercentage(Double twoPointersPercentage) {
        this.twoPointersPercentage = twoPointersPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;

    public PlayerGameProjection withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UsageRatePercentage")
    public Double usageRatePercentage;

    public PlayerGameProjection withUsageRatePercentage(Double usageRatePercentage) {
        this.usageRatePercentage = usageRatePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooPosition")
    public String yahooPosition;

    public PlayerGameProjection withYahooPosition(String yahooPosition) {
        this.yahooPosition = yahooPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooSalary")
    public Long yahooSalary;

    public PlayerGameProjection withYahooSalary(Long yahooSalary) {
        this.yahooSalary = yahooSalary;
        return this;
    }
    
    public PlayerGameProjection(){}
}
