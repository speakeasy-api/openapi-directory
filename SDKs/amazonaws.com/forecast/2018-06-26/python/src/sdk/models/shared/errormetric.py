"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ErrorMetric:
    r"""Provides detailed error metrics to evaluate the performance of a predictor. This object is part of the <a>Metrics</a> object."""
    
    forecast_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ForecastType'), 'exclude': lambda f: f is None }})  
    mape: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MAPE'), 'exclude': lambda f: f is None }})  
    mase: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MASE'), 'exclude': lambda f: f is None }})  
    rmse: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RMSE'), 'exclude': lambda f: f is None }})  
    wape: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WAPE'), 'exclude': lambda f: f is None }})  
    