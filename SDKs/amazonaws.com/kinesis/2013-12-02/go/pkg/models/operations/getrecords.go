// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetRecordsXAmzTargetEnum
type GetRecordsXAmzTargetEnum string

const (
	GetRecordsXAmzTargetEnumKinesis20131202GetRecords GetRecordsXAmzTargetEnum = "Kinesis_20131202.GetRecords"
)

func (e GetRecordsXAmzTargetEnum) ToPointer() *GetRecordsXAmzTargetEnum {
	return &e
}

func (e *GetRecordsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Kinesis_20131202.GetRecords":
		*e = GetRecordsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRecordsXAmzTargetEnum: %v", v)
	}
}

type GetRecordsRequest struct {
	GetRecordsInput   shared.GetRecordsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetRecordsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetRecordsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// ExpiredIteratorException
	ExpiredIteratorException interface{}
	// Success
	GetRecordsOutput *shared.GetRecordsOutput
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// KMSAccessDeniedException
	KMSAccessDeniedException interface{}
	// KMSDisabledException
	KMSDisabledException interface{}
	// KMSInvalidStateException
	KMSInvalidStateException interface{}
	// KMSNotFoundException
	KMSNotFoundException interface{}
	// KMSOptInRequired
	KMSOptInRequired interface{}
	// KMSThrottlingException
	KMSThrottlingException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
