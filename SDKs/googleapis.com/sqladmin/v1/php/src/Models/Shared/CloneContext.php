<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CloneContext - Database instance clone context.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CloneContext
{
    /**
     * The name of the allocated ip range for the private ip Cloud SQL instance. For example: "google-managed-services-default". If set, the cloned instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])?. Reserved for future use.
     * 
     * @var ?string $allocatedIpRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('allocatedIpRange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $allocatedIpRange = null;
    
    /**
     * Binary log coordinates.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BinLogCoordinates $binLogCoordinates
     */
	#[\JMS\Serializer\Annotation\SerializedName('binLogCoordinates')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BinLogCoordinates')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BinLogCoordinates $binLogCoordinates = null;
    
    /**
     * (SQL Server only) Clone only the specified databases from the source instance. Clone all databases if empty.
     * 
     * @var ?array<string> $databaseNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('databaseNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $databaseNames = null;
    
    /**
     * Name of the Cloud SQL instance to be created as a clone.
     * 
     * @var ?string $destinationInstanceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('destinationInstanceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destinationInstanceName = null;
    
    /**
     * This is always `sql#cloneContext`.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Reserved for future use.
     * 
     * @var ?string $pitrTimestampMs
     */
	#[\JMS\Serializer\Annotation\SerializedName('pitrTimestampMs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pitrTimestampMs = null;
    
    /**
     * Timestamp, if specified, identifies the time to which the source instance is cloned.
     * 
     * @var ?string $pointInTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('pointInTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pointInTime = null;
    
	public function __construct()
	{
		$this->allocatedIpRange = null;
		$this->binLogCoordinates = null;
		$this->databaseNames = null;
		$this->destinationInstanceName = null;
		$this->kind = null;
		$this->pitrTimestampMs = null;
		$this->pointInTime = null;
	}
}
