/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FootnoteReference - A ParagraphElement representing a footnote reference. A footnote reference is the inline content rendered with a number and is used to identify the footnote.
 */
public class FootnoteReference {
    /**
     * The ID of the footnote that contains the content of this footnote reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("footnoteId")
    public String footnoteId;

    public FootnoteReference withFootnoteId(String footnoteId) {
        this.footnoteId = footnoteId;
        return this;
    }
    
    /**
     * The rendered number of this footnote.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("footnoteNumber")
    public String footnoteNumber;

    public FootnoteReference withFootnoteNumber(String footnoteNumber) {
        this.footnoteNumber = footnoteNumber;
        return this;
    }
    
    /**
     * The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedDeletionIds")
    public String[] suggestedDeletionIds;

    public FootnoteReference withSuggestedDeletionIds(String[] suggestedDeletionIds) {
        this.suggestedDeletionIds = suggestedDeletionIds;
        return this;
    }
    
    /**
     * The suggested insertion IDs. A FootnoteReference may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedInsertionIds")
    public String[] suggestedInsertionIds;

    public FootnoteReference withSuggestedInsertionIds(String[] suggestedInsertionIds) {
        this.suggestedInsertionIds = suggestedInsertionIds;
        return this;
    }
    
    /**
     * The suggested text style changes to this FootnoteReference, keyed by suggestion ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedTextStyleChanges")
    public java.util.Map<String, SuggestedTextStyle> suggestedTextStyleChanges;

    public FootnoteReference withSuggestedTextStyleChanges(java.util.Map<String, SuggestedTextStyle> suggestedTextStyleChanges) {
        this.suggestedTextStyleChanges = suggestedTextStyleChanges;
        return this;
    }
    
    /**
     * Represents the styling that can be applied to text. Inherited text styles are represented as unset fields in this message. A text style's parent depends on where the text style is defined: * The TextStyle of text in a Paragraph inherits from the paragraph's corresponding named style type. * The TextStyle on a named style inherits from the normal text named style. * The TextStyle of the normal text named style inherits from the default text style in the Docs editor. * The TextStyle on a Paragraph element that's contained in a table may inherit its text style from the table style. If the text style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textStyle")
    public TextStyle textStyle;

    public FootnoteReference withTextStyle(TextStyle textStyle) {
        this.textStyle = textStyle;
        return this;
    }
    
    public FootnoteReference(){}
}
