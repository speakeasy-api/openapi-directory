<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CustomEvent - Experimental feature (no support provided) A custom event represents a third party impression, a third party click, an annotation on a first party impression, or an annotation on a first party click.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CustomEvent
{
    /**
     * Annotate a click event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomEventClickAnnotation $annotateClickEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('annotateClickEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomEventClickAnnotation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomEventClickAnnotation $annotateClickEvent = null;
    
    /**
     * Annotate an impression.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomEventImpressionAnnotation $annotateImpressionEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('annotateImpressionEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomEventImpressionAnnotation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomEventImpressionAnnotation $annotateImpressionEvent = null;
    
    /**
     * Custom variables associated with the event.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CustomVariable> $customVariables
     */
	#[\JMS\Serializer\Annotation\SerializedName('customVariables')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CustomVariable>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customVariables = null;
    
    /**
     * The type of event. If INSERT, the fields in insertEvent need to be populated. If ANNOTATE, the fields in either annotateClickEvent or annotateImpressionEvent need to be populated.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomEventEventTypeEnum $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CustomEventEventTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomEventEventTypeEnum $eventType = null;
    
    /**
     * Floodlight configuration ID of the advertiser the event is linked to. This is a required field.
     * 
     * @var ?string $floodlightConfigurationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('floodlightConfigurationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $floodlightConfigurationId = null;
    
    /**
     * Custom event to be inserted.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomEventInsert $insertEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('insertEvent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomEventInsert')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomEventInsert $insertEvent = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#customEvent".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The ordinal of this custom event. This is a required field.
     * 
     * @var ?string $ordinal
     */
	#[\JMS\Serializer\Annotation\SerializedName('ordinal')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ordinal = null;
    
    /**
     * The timestamp of this custom event, in Unix epoch micros. This is a required field.
     * 
     * @var ?string $timestampMicros
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampMicros')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timestampMicros = null;
    
	public function __construct()
	{
		$this->annotateClickEvent = null;
		$this->annotateImpressionEvent = null;
		$this->customVariables = null;
		$this->eventType = null;
		$this->floodlightConfigurationId = null;
		$this->insertEvent = null;
		$this->kind = null;
		$this->ordinal = null;
		$this->timestampMicros = null;
	}
}
