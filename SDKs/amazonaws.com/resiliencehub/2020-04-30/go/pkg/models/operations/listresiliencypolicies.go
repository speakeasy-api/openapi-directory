// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListResiliencyPoliciesQueryParams struct {
	// The maximum number of results to include in the response. If more results exist than the specified <code>MaxResults</code> value, a token is included in the response so that the remaining results can be retrieved.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Null, or the token from a previous call to get the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The name of the policy
	PolicyName *string `queryParam:"style=form,explode=true,name=policyName"`
}

type ListResiliencyPoliciesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListResiliencyPoliciesRequest struct {
	QueryParams ListResiliencyPoliciesQueryParams
	Headers     ListResiliencyPoliciesHeaders
}

type ListResiliencyPoliciesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListResiliencyPoliciesResponse *shared.ListResiliencyPoliciesResponse
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
