"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class APICoreDtoDomainsDomainTypeEnum(str, Enum):
    SYSTEM = 'System'
    GO = 'Go'
    DEDICATED = 'Dedicated'
    PERSONAL = 'Personal'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APICoreDtoDomainsDomain:
    r"""The domain to create"""
    
    custom404: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom404'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'custom404' }})  
    custom_homepage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customHomepage'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'customHomepage' }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'id' }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'name' }})  
    type: Optional[APICoreDtoDomainsDomainTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'type' }})  
    