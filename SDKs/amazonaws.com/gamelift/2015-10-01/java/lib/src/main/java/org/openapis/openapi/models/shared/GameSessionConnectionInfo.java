/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GameSessionConnectionInfo - Connection information for a new game session that is created in response to a start matchmaking request. Once a match is made, the FlexMatch engine creates a new game session for it. This information, including the game session endpoint and player sessions for each player in the original matchmaking request, is added to the matchmaking ticket.
 */
public class GameSessionConnectionInfo {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DnsName")
    public String dnsName;
    public GameSessionConnectionInfo withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameSessionArn")
    public String gameSessionArn;
    public GameSessionConnectionInfo withGameSessionArn(String gameSessionArn) {
        this.gameSessionArn = gameSessionArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IpAddress")
    public String ipAddress;
    public GameSessionConnectionInfo withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MatchedPlayerSessions")
    public MatchedPlayerSession[] matchedPlayerSessions;
    public GameSessionConnectionInfo withMatchedPlayerSessions(MatchedPlayerSession[] matchedPlayerSessions) {
        this.matchedPlayerSessions = matchedPlayerSessions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Port")
    public Long port;
    public GameSessionConnectionInfo withPort(Long port) {
        this.port = port;
        return this;
    }
    
}
