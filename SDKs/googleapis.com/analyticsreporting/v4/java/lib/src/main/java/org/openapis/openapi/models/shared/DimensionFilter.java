/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DimensionFilter - Dimension filter specifies the filtering options on a dimension.
 */
public class DimensionFilter {
    /**
     * Should the match be case sensitive? Default is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("caseSensitive")
    public Boolean caseSensitive;

    public DimensionFilter withCaseSensitive(Boolean caseSensitive) {
        this.caseSensitive = caseSensitive;
        return this;
    }
    
    /**
     * The dimension to filter on. A DimensionFilter must contain a dimension.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dimensionName")
    public String dimensionName;

    public DimensionFilter withDimensionName(String dimensionName) {
        this.dimensionName = dimensionName;
        return this;
    }
    
    /**
     * Strings or regular expression to match against. Only the first value of the list is used for comparison unless the operator is `IN_LIST`. If `IN_LIST` operator, then the entire list is used to filter the dimensions as explained in the description of the `IN_LIST` operator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expressions")
    public String[] expressions;

    public DimensionFilter withExpressions(String[] expressions) {
        this.expressions = expressions;
        return this;
    }
    
    /**
     * Logical `NOT` operator. If this boolean is set to true, then the matching dimension values will be excluded in the report. The default is false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("not")
    public Boolean not;

    public DimensionFilter withNot(Boolean not) {
        this.not = not;
        return this;
    }
    
    /**
     * How to match the dimension to the expression. The default is REGEXP.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operator")
    public DimensionFilterOperatorEnum operator;

    public DimensionFilter withOperator(DimensionFilterOperatorEnum operator) {
        this.operator = operator;
        return this;
    }
    
    public DimensionFilter(){}
}
