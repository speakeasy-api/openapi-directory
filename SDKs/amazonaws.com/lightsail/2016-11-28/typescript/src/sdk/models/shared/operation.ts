/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OperationStatusEnum } from "./operationstatusenum";
import { OperationTypeEnum } from "./operationtypeenum";
import { ResourceLocation } from "./resourcelocation";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes the API operation.
 */
export class Operation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDetails" })
  errorDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isTerminal" })
  isTerminal?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ResourceLocation)
  location?: ResourceLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "operationDetails" })
  operationDetails?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operationType" })
  operationType?: OperationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceName" })
  resourceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: OperationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusChangedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  statusChangedAt?: Date;
}
