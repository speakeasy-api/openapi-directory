// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FailoverInstanceRequestDataProtectionModeEnum - Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default.
type FailoverInstanceRequestDataProtectionModeEnum string

const (
	FailoverInstanceRequestDataProtectionModeEnumDataProtectionModeUnspecified FailoverInstanceRequestDataProtectionModeEnum = "DATA_PROTECTION_MODE_UNSPECIFIED"
	FailoverInstanceRequestDataProtectionModeEnumLimitedDataLoss               FailoverInstanceRequestDataProtectionModeEnum = "LIMITED_DATA_LOSS"
	FailoverInstanceRequestDataProtectionModeEnumForceDataLoss                 FailoverInstanceRequestDataProtectionModeEnum = "FORCE_DATA_LOSS"
)

func (e FailoverInstanceRequestDataProtectionModeEnum) ToPointer() *FailoverInstanceRequestDataProtectionModeEnum {
	return &e
}

func (e *FailoverInstanceRequestDataProtectionModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DATA_PROTECTION_MODE_UNSPECIFIED":
		fallthrough
	case "LIMITED_DATA_LOSS":
		fallthrough
	case "FORCE_DATA_LOSS":
		*e = FailoverInstanceRequestDataProtectionModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FailoverInstanceRequestDataProtectionModeEnum: %v", v)
	}
}

// FailoverInstanceRequest - Request for Failover.
type FailoverInstanceRequest struct {
	// Optional. Available data protection modes that the user can choose. If it's unspecified, data protection mode will be LIMITED_DATA_LOSS by default.
	DataProtectionMode *FailoverInstanceRequestDataProtectionModeEnum `json:"dataProtectionMode,omitempty"`
}
