"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostInstructFxInfo:
    r"""FX details relating to a payout that was executed or is still waiting to be executed"""
    
    fx_mode: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fxMode') }})
    r"""The mode by which the FX rate is to be determined (MANUAL or AUTO)"""  
    fx_status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fxStatus') }})
    r"""The state to which the Post-Instruct FX process has reached (INITIATED or COMPLETED)"""  
    fx_status_updated_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fxStatusUpdatedAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})
    r"""The date-time at which the most recent fxStatus was determined."""  
    fx_transaction_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fxTransactionReference'), 'exclude': lambda f: f is None }})
    r"""The reference assigned to the FX funding that will fulfil this payment."""  
    