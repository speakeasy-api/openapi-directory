/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class POSTOrderPreviewRequestType {
    /**
     * Container for custom fields of an Order object.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;
    public POSTOrderPreviewRequestType withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * A description of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public POSTOrderPreviewRequestType withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The account number that this order will be created under. It can be either the accountNumber or the account info. It will return an error if both are specified.
     * Note that invoice owner account of the subscriptions included in this order should be the same with the account of the order.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("existingAccountNumber")
    public String existingAccountNumber;
    public POSTOrderPreviewRequestType withExistingAccountNumber(String existingAccountNumber) {
        this.existingAccountNumber = existingAccountNumber;
        return this;
    }
    
    /**
     * The date when the order is signed. All of the order actions under this order will use this order date as the contract effective date.
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("orderDate")
    public LocalDate orderDate;
    public POSTOrderPreviewRequestType withOrderDate(LocalDate orderDate) {
        this.orderDate = orderDate;
        return this;
    }
    
    /**
     * [Order Line Items](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Order_Line_Items/AA_Overview_of_Order_Line_Items) are non subscription based items created by an Order, representing transactional charges such as one-time fees, physical goods, or professional service charges that are not sold as subscription services. 
     * 
     * With the Order Line Items feature enabled, you can now launch non-subscription and hybrid monetization business models in Zuora, in addition to subscription business models. 
     * 
     * **Note:** The [Order Line Items](https://knowledgecenter.zuora.com/Billing/Subscriptions/Orders/Order_Line_Items/AA_Overview_of_Order_Line_Items) feature is in the **Early Adopter** phase. We are actively soliciting feedback from a small set of early adopters before releasing it as generally available. If you want to join this early adopter program, submit a request at [Zuora Global Support](https://support.zuora.com/). 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderLineItems")
    public OrderLineItemCommonPostOrder[] orderLineItems;
    public POSTOrderPreviewRequestType withOrderLineItems(OrderLineItemCommonPostOrder[] orderLineItems) {
        this.orderLineItems = orderLineItems;
        return this;
    }
    
    /**
     * The order number of this order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderNumber")
    public String orderNumber;
    public POSTOrderPreviewRequestType withOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
        return this;
    }
    
    /**
     * Information about the account that will own the order.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previewAccountInfo")
    public PreviewAccountInfo previewAccountInfo;
    public POSTOrderPreviewRequestType withPreviewAccountInfo(PreviewAccountInfo previewAccountInfo) {
        this.previewAccountInfo = previewAccountInfo;
        return this;
    }
    
    @JsonProperty("previewOptions")
    public PreviewOptions previewOptions;
    public POSTOrderPreviewRequestType withPreviewOptions(PreviewOptions previewOptions) {
        this.previewOptions = previewOptions;
        return this;
    }
    
    /**
     * Each item includes a set of order actions, which will be applied to the same base subscription.
     */
    @JsonProperty("subscriptions")
    public POSTOrderPreviewRequestTypeSubscriptions[] subscriptions;
    public POSTOrderPreviewRequestType withSubscriptions(POSTOrderPreviewRequestTypeSubscriptions[] subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }
    
}
