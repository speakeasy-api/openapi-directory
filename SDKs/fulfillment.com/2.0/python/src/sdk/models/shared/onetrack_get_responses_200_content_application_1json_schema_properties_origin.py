"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import onetrack_get_responses_200_content_application_1json_schema_properties_origin_properties_geometry as shared_onetrack_get_responses_200_content_application_1json_schema_properties_origin_properties_geometry
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginGeometryTypeEnum(str, Enum):
    r"""the geometry type"""
    POINT = 'Point'
    LINE_STRING = 'LineString'
    POLYGON = 'Polygon'
    MULTI_POINT = 'MultiPoint'
    MULTI_LINE_STRING = 'MultiLineString'
    MULTI_POLYGON = 'MultiPolygon'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginGeometry:
    r"""GeoJSon geometry
    http://geojson.org/geojson-spec.html#geometry-objects
    """
    
    coordinates: Any = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coordinates') }})  
    type: OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginGeometryTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""the geometry type"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginProperties:
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    
class OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginTypeEnum(str, Enum):
    FEATURE = 'Feature'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOrigin:
    r"""GeoJSon Feature
    https://tools.ietf.org/html/rfc7946#section-3.2
    """
    
    geometry: OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginGeometry = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('geometry') }})
    r"""GeoJSon geometry
    http://geojson.org/geojson-spec.html#geometry-objects
    """  
    properties: OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginProperties = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties') }})  
    type: OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    bbox: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bbox'), 'exclude': lambda f: f is None }})  
    centerline: Optional[shared_onetrack_get_responses_200_content_application_1json_schema_properties_origin_properties_geometry.OnetrackGetResponses200ContentApplication1jsonSchemaPropertiesOriginPropertiesGeometry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('centerline'), 'exclude': lambda f: f is None }})
    r"""GeoJSon geometry
    http://geojson.org/geojson-spec.html#geometry-objects
    """  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})  
    