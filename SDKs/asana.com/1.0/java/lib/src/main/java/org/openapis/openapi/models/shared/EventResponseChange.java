/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EventResponseChange - Information about the type of change that has occurred. This field is only present when the value of the property `action`, describing the action taken on the **resource**, is `changed`.
 */
public class EventResponseChange {
    /**
     * The type of action taken on the **field** which has been changed.  This can be one of `changed`, `added`, or `removed` depending on the nature of the change.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public String action;
    public EventResponseChange withAction(String action) {
        this.action = action;
        return this;
    }
    
    /**
     * *Conditional.* This property is only present when the **field's** `action` is `added` _and_ the `added_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/input-output-options)) when using the [Events](/docs/asana-events) endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("added_value")
    public Object addedValue;
    public EventResponseChange withAddedValue(Object addedValue) {
        this.addedValue = addedValue;
        return this;
    }
    
    /**
     * The name of the field that has changed in the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("field")
    public String field;
    public EventResponseChange withField(String field) {
        this.field = field;
        return this;
    }
    
    /**
     * *Conditional.* This property is only present when the **field's** `action` is `changed` _and_ the `new_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/input-output-options)) when using the [Events](/docs/asana-events) endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("new_value")
    public Object newValue;
    public EventResponseChange withNewValue(Object newValue) {
        this.newValue = newValue;
        return this;
    }
    
    /**
     * *Conditional.* This property is only present when the **field's** `action` is `removed` _and_ the `removed_value` is an Asana resource. This will be only the `gid` and `resource_type` of the resource when the events come from webhooks; this will be the compact representation (and can have fields expanded with [opt_fields](/docs/input-output-options)) when using the [Events](/docs/asana-events) endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removed_value")
    public Object removedValue;
    public EventResponseChange withRemovedValue(Object removedValue) {
        this.removedValue = removedValue;
        return this;
    }
    
}
