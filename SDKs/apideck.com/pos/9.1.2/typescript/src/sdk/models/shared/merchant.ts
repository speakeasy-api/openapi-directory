/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { CurrencyEnum } from "./currencyenum";
import { ServiceCharge, ServiceChargeInput } from "./servicecharge";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Status of this merchant.
 */
export enum MerchantStatusEnum {
  Active = "active",
  Inactive = "inactive",
  Other = "other",
}

export class MerchantInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => Address)
  address?: Address;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * language code according to ISO 639-1. For the United States - EN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * The main location ID of the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "main_location_id" })
  mainLocationId?: string;

  /**
   * The name of the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner_id" })
  ownerId?: string;

  @SpeakeasyMetadata({ elemType: ServiceChargeInput })
  @Expose({ name: "service_charges" })
  @Type(() => ServiceChargeInput)
  serviceCharges?: ServiceChargeInput[];

  /**
   * Status of this merchant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: MerchantStatusEnum;
}

export class Merchant extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => Address)
  address?: Address;

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The user who created the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: CurrencyEnum;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * language code according to ISO 639-1. For the United States - EN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * The main location ID of the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "main_location_id" })
  mainLocationId?: string;

  /**
   * The name of the merchant
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner_id" })
  ownerId?: string;

  @SpeakeasyMetadata({ elemType: ServiceCharge })
  @Expose({ name: "service_charges" })
  @Type(() => ServiceCharge)
  serviceCharges?: ServiceCharge[];

  /**
   * Status of this merchant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: MerchantStatusEnum;

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  /**
   * The user who last updated the object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_by" })
  updatedBy?: string;
}
