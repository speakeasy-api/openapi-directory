/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Authentication } from "./authentication";
import { CardConfiguration } from "./cardconfiguration";
import { Contact } from "./contact";
import { Expose, Type } from "class-transformer";

/**
 * The form factor of the card.
 *
 * @remarks
 * Possible values: **virtual**, **physical**.
 */
export enum CardInfoFormFactorEnum {
  Physical = "physical",
  Unknown = "unknown",
  Virtual = "virtual",
}

export class CardInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(() => Authentication)
  authentication?: Authentication;

  /**
   * The brand of the physical or the virtual card.
   *
   * @remarks
   * Possible values: **visa**, **mc**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand: string;

  /**
   * The brand variant of the physical or the virtual card.
   *
   * @remarks
   * >Contact your Adyen Implementation Manager to get the values that are relevant to your integration. Examples: **visadebit**, **mcprepaid**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brandVariant" })
  brandVariant: string;

  /**
   * The name of the cardholder.
   *
   * @remarks
   *  Maximum length: 26 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cardholderName" })
  cardholderName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  @Type(() => CardConfiguration)
  configuration?: CardConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "deliveryContact" })
  @Type(() => Contact)
  deliveryContact?: Contact;

  /**
   * The form factor of the card.
   *
   * @remarks
   * Possible values: **virtual**, **physical**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formFactor" })
  formFactor: CardInfoFormFactorEnum;
}
