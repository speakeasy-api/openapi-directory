// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryFailoverClusterAppOperatingSystemTypeEnum - Filter a response based on the failover cluster operating system type.
type QueryFailoverClusterAppOperatingSystemTypeEnum string

const (
	QueryFailoverClusterAppOperatingSystemTypeEnumAny      QueryFailoverClusterAppOperatingSystemTypeEnum = "ANY"
	QueryFailoverClusterAppOperatingSystemTypeEnumAix      QueryFailoverClusterAppOperatingSystemTypeEnum = "AIX"
	QueryFailoverClusterAppOperatingSystemTypeEnumHpux     QueryFailoverClusterAppOperatingSystemTypeEnum = "HPUX"
	QueryFailoverClusterAppOperatingSystemTypeEnumLinux    QueryFailoverClusterAppOperatingSystemTypeEnum = "Linux"
	QueryFailoverClusterAppOperatingSystemTypeEnumSunOs    QueryFailoverClusterAppOperatingSystemTypeEnum = "SunOS"
	QueryFailoverClusterAppOperatingSystemTypeEnumUnixLike QueryFailoverClusterAppOperatingSystemTypeEnum = "UnixLike"
	QueryFailoverClusterAppOperatingSystemTypeEnumWindows  QueryFailoverClusterAppOperatingSystemTypeEnum = "Windows"
)

func (e QueryFailoverClusterAppOperatingSystemTypeEnum) ToPointer() *QueryFailoverClusterAppOperatingSystemTypeEnum {
	return &e
}

func (e *QueryFailoverClusterAppOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANY":
		fallthrough
	case "AIX":
		fallthrough
	case "HPUX":
		fallthrough
	case "Linux":
		fallthrough
	case "SunOS":
		fallthrough
	case "UnixLike":
		fallthrough
	case "Windows":
		*e = QueryFailoverClusterAppOperatingSystemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterAppOperatingSystemTypeEnum: %v", v)
	}
}

// QueryFailoverClusterAppSLAAssignmentEnum - Limit a response to the results that have the specified SLA Domain assignment type.
type QueryFailoverClusterAppSLAAssignmentEnum string

const (
	QueryFailoverClusterAppSLAAssignmentEnumDerived    QueryFailoverClusterAppSLAAssignmentEnum = "Derived"
	QueryFailoverClusterAppSLAAssignmentEnumDirect     QueryFailoverClusterAppSLAAssignmentEnum = "Direct"
	QueryFailoverClusterAppSLAAssignmentEnumUnassigned QueryFailoverClusterAppSLAAssignmentEnum = "Unassigned"
)

func (e QueryFailoverClusterAppSLAAssignmentEnum) ToPointer() *QueryFailoverClusterAppSLAAssignmentEnum {
	return &e
}

func (e *QueryFailoverClusterAppSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = QueryFailoverClusterAppSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterAppSLAAssignmentEnum: %v", v)
	}
}

// QueryFailoverClusterAppSortByEnum - Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified.
type QueryFailoverClusterAppSortByEnum string

const (
	QueryFailoverClusterAppSortByEnumName QueryFailoverClusterAppSortByEnum = "name"
)

func (e QueryFailoverClusterAppSortByEnum) ToPointer() *QueryFailoverClusterAppSortByEnum {
	return &e
}

func (e *QueryFailoverClusterAppSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		*e = QueryFailoverClusterAppSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterAppSortByEnum: %v", v)
	}
}

// QueryFailoverClusterAppSortOrderEnum - Sort order, either ascending or descending.
type QueryFailoverClusterAppSortOrderEnum string

const (
	QueryFailoverClusterAppSortOrderEnumAsc  QueryFailoverClusterAppSortOrderEnum = "asc"
	QueryFailoverClusterAppSortOrderEnumDesc QueryFailoverClusterAppSortOrderEnum = "desc"
)

func (e QueryFailoverClusterAppSortOrderEnum) ToPointer() *QueryFailoverClusterAppSortOrderEnum {
	return &e
}

func (e *QueryFailoverClusterAppSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryFailoverClusterAppSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryFailoverClusterAppSortOrderEnum: %v", v)
	}
}

type QueryFailoverClusterAppRequest struct {
	// Limit the summary information to a specified maximum number of matches. Optionally, use with offset to start the count at a specified point. Optionally, use with sort_by to perform sort on given attributes. Include sort_order to determine the ascending or descending direction of the sort.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Filter the response by comparing the failover cluster app name with the specified value.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Starting position in the list of matches. The response includes the specified numbered entry and all higher numbered entries. Use with limit to retrieve the response as smaller groups of entries, for example for paging of results.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter a response based on the failover cluster operating system type.
	OperatingSystemType *QueryFailoverClusterAppOperatingSystemTypeEnum `queryParam:"style=form,explode=true,name=operating_system_type"`
	// Limit a response to the results that have the specified primary cluster value.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Limit a response to the results that have the specified SLA Domain assignment type.
	SLAAssignment *QueryFailoverClusterAppSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Specifies a comma-separated list of attributes to use in sorting the matches. Performs an ASCII sort of the values in the response using each specified attribute, in the order specified.
	SortBy *QueryFailoverClusterAppSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryFailoverClusterAppSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryFailoverClusterAppResponse struct {
	ContentType string
	// Successful query results for failover cluster app.
	FailoverClusterAppSummaryListResponse *shared.FailoverClusterAppSummaryListResponse
	StatusCode                            int
	RawResponse                           *http.Response
}
