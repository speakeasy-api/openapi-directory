"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETModifySubnetAttributeResponse = exports.GETModifySubnetAttributeRequest = exports.GETModifySubnetAttributeVersionEnum = exports.GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum = exports.GETModifySubnetAttributeMapPublicIPOnLaunch = exports.GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch = exports.GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch = exports.GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch = exports.GETModifySubnetAttributeEnableDns64 = exports.GETModifySubnetAttributeDisableLniAtDeviceIndex = exports.GETModifySubnetAttributeAssignIpv6AddressOnCreation = exports.GETModifySubnetAttributeActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETModifySubnetAttributeActionEnum;
(function (GETModifySubnetAttributeActionEnum) {
    GETModifySubnetAttributeActionEnum["ModifySubnetAttribute"] = "ModifySubnetAttribute";
})(GETModifySubnetAttributeActionEnum = exports.GETModifySubnetAttributeActionEnum || (exports.GETModifySubnetAttributeActionEnum = {}));
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeAssignIpv6AddressOnCreation = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeAssignIpv6AddressOnCreation, _super);
    function GETModifySubnetAttributeAssignIpv6AddressOnCreation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeAssignIpv6AddressOnCreation.prototype, "value", void 0);
    return GETModifySubnetAttributeAssignIpv6AddressOnCreation;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeAssignIpv6AddressOnCreation = GETModifySubnetAttributeAssignIpv6AddressOnCreation;
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeDisableLniAtDeviceIndex = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeDisableLniAtDeviceIndex, _super);
    function GETModifySubnetAttributeDisableLniAtDeviceIndex() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeDisableLniAtDeviceIndex.prototype, "value", void 0);
    return GETModifySubnetAttributeDisableLniAtDeviceIndex;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeDisableLniAtDeviceIndex = GETModifySubnetAttributeDisableLniAtDeviceIndex;
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeEnableDns64 = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeEnableDns64, _super);
    function GETModifySubnetAttributeEnableDns64() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeEnableDns64.prototype, "value", void 0);
    return GETModifySubnetAttributeEnableDns64;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeEnableDns64 = GETModifySubnetAttributeEnableDns64;
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch, _super);
    function GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch.prototype, "value", void 0);
    return GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch = GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch;
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch, _super);
    function GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch.prototype, "value", void 0);
    return GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch = GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch;
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch, _super);
    function GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch.prototype, "value", void 0);
    return GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch = GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch;
/**
 * Describes a value for a resource attribute that is a Boolean value.
 */
var GETModifySubnetAttributeMapPublicIPOnLaunch = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeMapPublicIPOnLaunch, _super);
    function GETModifySubnetAttributeMapPublicIPOnLaunch() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, name=Value" }),
        __metadata("design:type", Boolean)
    ], GETModifySubnetAttributeMapPublicIPOnLaunch.prototype, "value", void 0);
    return GETModifySubnetAttributeMapPublicIPOnLaunch;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeMapPublicIPOnLaunch = GETModifySubnetAttributeMapPublicIPOnLaunch;
/**
 * The type of hostname to assign to instances in the subnet at launch. For IPv4-only and dual-stack (IPv4 and IPv6) subnets, an instance DNS name can be based on the instance IPv4 address (ip-name) or the instance ID (resource-name). For IPv6 only subnets, an instance DNS name must be based on the instance ID (resource-name).
 */
var GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum;
(function (GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum) {
    GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum["IpName"] = "ip-name";
    GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum["ResourceName"] = "resource-name";
})(GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum = exports.GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum || (exports.GETModifySubnetAttributePrivateDNSHostnameTypeOnLaunchEnum = {}));
var GETModifySubnetAttributeVersionEnum;
(function (GETModifySubnetAttributeVersionEnum) {
    GETModifySubnetAttributeVersionEnum["TwoThousandAndSixteen1115"] = "2016-11-15";
})(GETModifySubnetAttributeVersionEnum = exports.GETModifySubnetAttributeVersionEnum || (exports.GETModifySubnetAttributeVersionEnum = {}));
var GETModifySubnetAttributeRequest = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeRequest, _super);
    function GETModifySubnetAttributeRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=AssignIpv6AddressOnCreation",
        }),
        __metadata("design:type", GETModifySubnetAttributeAssignIpv6AddressOnCreation)
    ], GETModifySubnetAttributeRequest.prototype, "assignIpv6AddressOnCreation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=CustomerOwnedIpv4Pool",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "customerOwnedIpv4Pool", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DisableLniAtDeviceIndex",
        }),
        __metadata("design:type", GETModifySubnetAttributeDisableLniAtDeviceIndex)
    ], GETModifySubnetAttributeRequest.prototype, "disableLniAtDeviceIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableDns64",
        }),
        __metadata("design:type", GETModifySubnetAttributeEnableDns64)
    ], GETModifySubnetAttributeRequest.prototype, "enableDns64", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableLniAtDeviceIndex",
        }),
        __metadata("design:type", Number)
    ], GETModifySubnetAttributeRequest.prototype, "enableLniAtDeviceIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableResourceNameDnsAAAARecordOnLaunch",
        }),
        __metadata("design:type", GETModifySubnetAttributeEnableResourceNameDNSAaaaRecordOnLaunch)
    ], GETModifySubnetAttributeRequest.prototype, "enableResourceNameDnsAAAARecordOnLaunch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableResourceNameDnsARecordOnLaunch",
        }),
        __metadata("design:type", GETModifySubnetAttributeEnableResourceNameDNSARecordOnLaunch)
    ], GETModifySubnetAttributeRequest.prototype, "enableResourceNameDnsARecordOnLaunch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MapCustomerOwnedIpOnLaunch",
        }),
        __metadata("design:type", GETModifySubnetAttributeMapCustomerOwnedIPOnLaunch)
    ], GETModifySubnetAttributeRequest.prototype, "mapCustomerOwnedIpOnLaunch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MapPublicIpOnLaunch",
        }),
        __metadata("design:type", GETModifySubnetAttributeMapPublicIPOnLaunch)
    ], GETModifySubnetAttributeRequest.prototype, "mapPublicIpOnLaunch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PrivateDnsHostnameTypeOnLaunch",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "privateDnsHostnameTypeOnLaunch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=SubnetId",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "subnetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETModifySubnetAttributeRequest;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeRequest = GETModifySubnetAttributeRequest;
var GETModifySubnetAttributeResponse = /** @class */ (function (_super) {
    __extends(GETModifySubnetAttributeResponse, _super);
    function GETModifySubnetAttributeResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETModifySubnetAttributeResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETModifySubnetAttributeResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETModifySubnetAttributeResponse.prototype, "rawResponse", void 0);
    return GETModifySubnetAttributeResponse;
}(utils_1.SpeakeasyBase));
exports.GETModifySubnetAttributeResponse = GETModifySubnetAttributeResponse;
