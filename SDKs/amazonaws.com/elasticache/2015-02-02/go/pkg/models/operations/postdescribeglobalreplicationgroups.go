// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeGlobalReplicationGroupsActionEnum
type POSTDescribeGlobalReplicationGroupsActionEnum string

const (
	POSTDescribeGlobalReplicationGroupsActionEnumDescribeGlobalReplicationGroups POSTDescribeGlobalReplicationGroupsActionEnum = "DescribeGlobalReplicationGroups"
)

func (e POSTDescribeGlobalReplicationGroupsActionEnum) ToPointer() *POSTDescribeGlobalReplicationGroupsActionEnum {
	return &e
}

func (e *POSTDescribeGlobalReplicationGroupsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeGlobalReplicationGroups":
		*e = POSTDescribeGlobalReplicationGroupsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeGlobalReplicationGroupsActionEnum: %v", v)
	}
}

// POSTDescribeGlobalReplicationGroupsVersionEnum
type POSTDescribeGlobalReplicationGroupsVersionEnum string

const (
	POSTDescribeGlobalReplicationGroupsVersionEnumTwoThousandAndFifteen0202 POSTDescribeGlobalReplicationGroupsVersionEnum = "2015-02-02"
)

func (e POSTDescribeGlobalReplicationGroupsVersionEnum) ToPointer() *POSTDescribeGlobalReplicationGroupsVersionEnum {
	return &e
}

func (e *POSTDescribeGlobalReplicationGroupsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = POSTDescribeGlobalReplicationGroupsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeGlobalReplicationGroupsVersionEnum: %v", v)
	}
}

type POSTDescribeGlobalReplicationGroupsRequest struct {
	Action POSTDescribeGlobalReplicationGroupsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords        *string                                        `queryParam:"style=form,explode=true,name=MaxRecords"`
	RequestBody       []byte                                         `request:"mediaType=text/xml"`
	Version           POSTDescribeGlobalReplicationGroupsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeGlobalReplicationGroupsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
