// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FitnessUsersDataSourcesDatasetsGetSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption10 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption11 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption12 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption13 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption14 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption15 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption16 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption17 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption18 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption19 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption20 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption21 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption22 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption5 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption6 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption7 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption8 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurityOption9 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FitnessUsersDataSourcesDatasetsGetSecurity struct {
	Option1  *FitnessUsersDataSourcesDatasetsGetSecurityOption1  `security:"option"`
	Option10 *FitnessUsersDataSourcesDatasetsGetSecurityOption10 `security:"option"`
	Option11 *FitnessUsersDataSourcesDatasetsGetSecurityOption11 `security:"option"`
	Option12 *FitnessUsersDataSourcesDatasetsGetSecurityOption12 `security:"option"`
	Option13 *FitnessUsersDataSourcesDatasetsGetSecurityOption13 `security:"option"`
	Option14 *FitnessUsersDataSourcesDatasetsGetSecurityOption14 `security:"option"`
	Option15 *FitnessUsersDataSourcesDatasetsGetSecurityOption15 `security:"option"`
	Option16 *FitnessUsersDataSourcesDatasetsGetSecurityOption16 `security:"option"`
	Option17 *FitnessUsersDataSourcesDatasetsGetSecurityOption17 `security:"option"`
	Option18 *FitnessUsersDataSourcesDatasetsGetSecurityOption18 `security:"option"`
	Option19 *FitnessUsersDataSourcesDatasetsGetSecurityOption19 `security:"option"`
	Option2  *FitnessUsersDataSourcesDatasetsGetSecurityOption2  `security:"option"`
	Option20 *FitnessUsersDataSourcesDatasetsGetSecurityOption20 `security:"option"`
	Option21 *FitnessUsersDataSourcesDatasetsGetSecurityOption21 `security:"option"`
	Option22 *FitnessUsersDataSourcesDatasetsGetSecurityOption22 `security:"option"`
	Option3  *FitnessUsersDataSourcesDatasetsGetSecurityOption3  `security:"option"`
	Option4  *FitnessUsersDataSourcesDatasetsGetSecurityOption4  `security:"option"`
	Option5  *FitnessUsersDataSourcesDatasetsGetSecurityOption5  `security:"option"`
	Option6  *FitnessUsersDataSourcesDatasetsGetSecurityOption6  `security:"option"`
	Option7  *FitnessUsersDataSourcesDatasetsGetSecurityOption7  `security:"option"`
	Option8  *FitnessUsersDataSourcesDatasetsGetSecurityOption8  `security:"option"`
	Option9  *FitnessUsersDataSourcesDatasetsGetSecurityOption9  `security:"option"`
}

type FitnessUsersDataSourcesDatasetsGetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The data stream ID of the data source that created the dataset.
	DataSourceID string `pathParam:"style=simple,explode=false,name=dataSourceId"`
	// Dataset identifier that is a composite of the minimum data point start time and maximum data point end time represented as nanoseconds from the epoch. The ID is formatted like: "startTime-endTime" where startTime and endTime are 64 bit integers.
	DatasetID string `pathParam:"style=simple,explode=false,name=datasetId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// If specified, no more than this many data points will be included in the dataset. If there are more data points in the dataset, nextPageToken will be set in the dataset response. The limit is applied from the end of the time range. That is, if pageToken is absent, the limit most recent data points will be returned.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The continuation token, which is used to page through large datasets. To get the next page of a dataset, set this parameter to the value of nextPageToken from the previous response. Each subsequent call will yield a partial dataset with data point end timestamps that are strictly smaller than those in the previous partial response.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Retrieve a dataset for the person identified. Use me to indicate the authenticated user. Only me is supported at this time.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type FitnessUsersDataSourcesDatasetsGetResponse struct {
	ContentType string
	// Successful response
	Dataset     *shared.Dataset
	StatusCode  int
	RawResponse *http.Response
}
