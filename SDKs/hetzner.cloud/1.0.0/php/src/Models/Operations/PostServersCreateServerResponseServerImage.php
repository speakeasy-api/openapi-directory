<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostServersCreateServerResponseServerImage
{
    /**
     * ID of Server the Image is bound to. Only set for Images of type `backup`.
     * 
     * @var int $boundTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('bound_to')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $boundTo;
    
    /**
     * Point in time when the Resource was created (in ISO-8601 format)
     * 
     * @var string $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $created;
    
    /**
     * Information about the Server the Image was created from
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageCreatedFrom $createdFrom
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_from')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageCreatedFrom')]
    public PostServersCreateServerResponseServerImageCreatedFrom $createdFrom;
    
    /**
     * Point in time where the Image was deleted (in ISO-8601 format)
     * 
     * @var string $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deleted;
    
    /**
     * Point in time when the Image is considered to be deprecated (in ISO-8601 format)
     * 
     * @var string $deprecated
     */
	#[\JMS\Serializer\Annotation\SerializedName('deprecated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $deprecated;
    
    /**
     * Description of the Image
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * Size of the disk contained in the Image in GB
     * 
     * @var float $diskSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('disk_size')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $diskSize;
    
    /**
     * ID of the Resource
     * 
     * @var int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
    /**
     * Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.
     * 
     * @var float $imageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('image_size')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $imageSize;
    
    /**
     * User-defined labels (key-value pairs)
     * 
     * @var array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $labels;
    
    /**
     * Unique identifier of the Image. This value is only set for system Images.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Flavor of operating system contained in the Image
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageOsFlavorEnum $osFlavor
     */
	#[\JMS\Serializer\Annotation\SerializedName('os_flavor')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageOsFlavorEnum>')]
    public PostServersCreateServerResponseServerImageOsFlavorEnum $osFlavor;
    
    /**
     * Operating system version
     * 
     * @var string $osVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('os_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $osVersion;
    
    /**
     * Protection configuration for the Resource
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageProtection $protection
     */
	#[\JMS\Serializer\Annotation\SerializedName('protection')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageProtection')]
    public PostServersCreateServerResponseServerImageProtection $protection;
    
    /**
     * Indicates that rapid deploy of the Image is available
     * 
     * @var ?bool $rapidDeploy
     */
	#[\JMS\Serializer\Annotation\SerializedName('rapid_deploy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $rapidDeploy = null;
    
    /**
     * Whether the Image can be used or if it's still being created or unavailable
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageStatusEnum>')]
    public PostServersCreateServerResponseServerImageStatusEnum $status;
    
    /**
     * Type of the Image
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageTypeEnum>')]
    public PostServersCreateServerResponseServerImageTypeEnum $type;
    
	public function __construct()
	{
		$this->boundTo = 0;
		$this->created = "";
		$this->createdFrom = new \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageCreatedFrom();
		$this->deleted = "";
		$this->deprecated = "";
		$this->description = "";
		$this->diskSize = 0;
		$this->id = 0;
		$this->imageSize = 0;
		$this->labels = [];
		$this->name = "";
		$this->osFlavor = \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageOsFlavorEnum::UBUNTU;
		$this->osVersion = "";
		$this->protection = new \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageProtection();
		$this->rapidDeploy = null;
		$this->status = \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageStatusEnum::AVAILABLE;
		$this->type = \OpenAPI\OpenAPI\Models\Operations\PostServersCreateServerResponseServerImageTypeEnum::SYSTEM;
	}
}
