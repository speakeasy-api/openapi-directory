// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NotificationsNotificationTypesEnum string

const (
	NotificationsNotificationTypesEnumNotificationTypeUnspecified NotificationsNotificationTypesEnum = "NOTIFICATION_TYPE_UNSPECIFIED"
	NotificationsNotificationTypesEnumGoogleUpdate                NotificationsNotificationTypesEnum = "GOOGLE_UPDATE"
	NotificationsNotificationTypesEnumNewReview                   NotificationsNotificationTypesEnum = "NEW_REVIEW"
	NotificationsNotificationTypesEnumUpdatedReview               NotificationsNotificationTypesEnum = "UPDATED_REVIEW"
	NotificationsNotificationTypesEnumNewCustomerMedia            NotificationsNotificationTypesEnum = "NEW_CUSTOMER_MEDIA"
	NotificationsNotificationTypesEnumNewQuestion                 NotificationsNotificationTypesEnum = "NEW_QUESTION"
	NotificationsNotificationTypesEnumUpdatedQuestion             NotificationsNotificationTypesEnum = "UPDATED_QUESTION"
	NotificationsNotificationTypesEnumNewAnswer                   NotificationsNotificationTypesEnum = "NEW_ANSWER"
	NotificationsNotificationTypesEnumUpdatedAnswer               NotificationsNotificationTypesEnum = "UPDATED_ANSWER"
	NotificationsNotificationTypesEnumUpdatedLocationState        NotificationsNotificationTypesEnum = "UPDATED_LOCATION_STATE"
)

func (e NotificationsNotificationTypesEnum) ToPointer() *NotificationsNotificationTypesEnum {
	return &e
}

func (e *NotificationsNotificationTypesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NOTIFICATION_TYPE_UNSPECIFIED":
		fallthrough
	case "GOOGLE_UPDATE":
		fallthrough
	case "NEW_REVIEW":
		fallthrough
	case "UPDATED_REVIEW":
		fallthrough
	case "NEW_CUSTOMER_MEDIA":
		fallthrough
	case "NEW_QUESTION":
		fallthrough
	case "UPDATED_QUESTION":
		fallthrough
	case "NEW_ANSWER":
		fallthrough
	case "UPDATED_ANSWER":
		fallthrough
	case "UPDATED_LOCATION_STATE":
		*e = NotificationsNotificationTypesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationsNotificationTypesEnum: %v", v)
	}
}

// Notifications - A Google Cloud Pub/Sub topic where notifications can be published when a location is updated or has a new review. There will be only one notification settings resource per-account.
type Notifications struct {
	// Output only. The notifications resource name.
	Name *string `json:"name,omitempty"`
	// The types of notifications that will be sent to the Cloud Pub/Sub topic. At least one must be specified. To stop receiving notifications entirely, use DeleteNotifications.
	NotificationTypes []NotificationsNotificationTypesEnum `json:"notificationTypes,omitempty"`
	// The Google Cloud Pub/Sub topic that will receive notifications when locations managed by this account are updated. If unset, no notifications will be posted. The account mybusiness-api-pubsub@system.gserviceaccount.com must have at least Publish permissions on the Cloud Pub/Sub topic.
	TopicName *string `json:"topicName,omitempty"`
}
