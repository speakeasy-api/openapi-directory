// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ScanXAmzTargetEnum
type ScanXAmzTargetEnum string

const (
	ScanXAmzTargetEnumDynamoDb20120810Scan ScanXAmzTargetEnum = "DynamoDB_20120810.Scan"
)

func (e *ScanXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20120810.Scan":
		*e = ScanXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScanXAmzTargetEnum: %s", s)
	}
}

type ScanRequest struct {
	// Pagination token
	ExclusiveStartKey *string `queryParam:"style=form,explode=true,name=ExclusiveStartKey"`
	// Pagination limit
	Limit             *string            `queryParam:"style=form,explode=true,name=Limit"`
	ScanInput         shared.ScanInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ScanXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ScanResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	ScanOutput  *shared.ScanOutput
	StatusCode  int
	RawResponse *http.Response
}
