/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PUTAccountTypeTaxInfo - Container for tax exempt information, used to establish the tax exempt status of a customer account.
 * 
 */
public class PUTAccountTypeTaxInfo {
    /**
     * EU Value Added Tax ID. 
     * 
     * **Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VATId")
    public String vatId;
    public PUTAccountTypeTaxInfo withVATId(String vatId) {
        this.vatId = vatId;
        return this;
    }
    
    /**
     * Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.
     * 
     * **Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyCode")
    public String companyCode;
    public PUTAccountTypeTaxInfo withCompanyCode(String companyCode) {
        this.companyCode = companyCode;
        return this;
    }
    
    /**
     * ID of the customer tax exemption certificate. Requires Zuora Tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptCertificateId")
    public String exemptCertificateId;
    public PUTAccountTypeTaxInfo withExemptCertificateId(String exemptCertificateId) {
        this.exemptCertificateId = exemptCertificateId;
        return this;
    }
    
    /**
     * Type of tax exemption certificate that the customer holds. Requires Zuora Tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptCertificateType")
    public String exemptCertificateType;
    public PUTAccountTypeTaxInfo withExemptCertificateType(String exemptCertificateType) {
        this.exemptCertificateType = exemptCertificateType;
        return this;
    }
    
    /**
     * Description of the tax exemption certificate that the customer holds. Requires Zuora Tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptDescription")
    public String exemptDescription;
    public PUTAccountTypeTaxInfo withExemptDescription(String exemptDescription) {
        this.exemptDescription = exemptDescription;
        return this;
    }
    
    /**
     * Date when the customer tax exemption starts. Requires Zuora Tax.
     * 
     * Format: `yyyy-mm-dd`. Defaults to the current date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("exemptEffectiveDate")
    public LocalDate exemptEffectiveDate;
    public PUTAccountTypeTaxInfo withExemptEffectiveDate(LocalDate exemptEffectiveDate) {
        this.exemptEffectiveDate = exemptEffectiveDate;
        return this;
    }
    
    /**
     * A unique entity use code to apply exemptions in Avalara AvaTax.
     * 
     * This account-level field is required only when you choose Avalara as your tax engine. See [Exempt Transactions](https://developer.avalara.com/avatax/handling-tax-exempt-customers/)for more details.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptEntityUseCode")
    public String exemptEntityUseCode;
    public PUTAccountTypeTaxInfo withExemptEntityUseCode(String exemptEntityUseCode) {
        this.exemptEntityUseCode = exemptEntityUseCode;
        return this;
    }
    
    /**
     * Date when the customer tax exemption expires. Requires Zuora Tax.
     * 
     * Format: `yyyy-mm-dd`. Defaults to the current date.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("exemptExpirationDate")
    public LocalDate exemptExpirationDate;
    public PUTAccountTypeTaxInfo withExemptExpirationDate(LocalDate exemptExpirationDate) {
        this.exemptExpirationDate = exemptExpirationDate;
        return this;
    }
    
    /**
     * Jurisdiction in which the customer tax exemption certificate was issued.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptIssuingJurisdiction")
    public String exemptIssuingJurisdiction;
    public PUTAccountTypeTaxInfo withExemptIssuingJurisdiction(String exemptIssuingJurisdiction) {
        this.exemptIssuingJurisdiction = exemptIssuingJurisdiction;
        return this;
    }
    
    /**
     * Status of the account tax exemption. Requires Zuora Tax.
     * 
     * Required if you use Zuora Tax. This field is unavailable if Zuora Tax is not used.
     * 
     * Values: `Yes`, `No`, `pendingVerification`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exemptStatus")
    public String exemptStatus;
    public PUTAccountTypeTaxInfo withExemptStatus(String exemptStatus) {
        this.exemptStatus = exemptStatus;
        return this;
    }
    
}
