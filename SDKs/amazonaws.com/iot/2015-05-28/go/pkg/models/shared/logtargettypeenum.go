// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LogTargetTypeEnum string

const (
	LogTargetTypeEnumDefault     LogTargetTypeEnum = "DEFAULT"
	LogTargetTypeEnumThingGroup  LogTargetTypeEnum = "THING_GROUP"
	LogTargetTypeEnumClientID    LogTargetTypeEnum = "CLIENT_ID"
	LogTargetTypeEnumSourceIP    LogTargetTypeEnum = "SOURCE_IP"
	LogTargetTypeEnumPrincipalID LogTargetTypeEnum = "PRINCIPAL_ID"
)

func (e LogTargetTypeEnum) ToPointer() *LogTargetTypeEnum {
	return &e
}

func (e *LogTargetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULT":
		fallthrough
	case "THING_GROUP":
		fallthrough
	case "CLIENT_ID":
		fallthrough
	case "SOURCE_IP":
		fallthrough
	case "PRINCIPAL_ID":
		*e = LogTargetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LogTargetTypeEnum: %v", v)
	}
}
