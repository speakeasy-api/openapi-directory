/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PreprintsCreatePreprintAttributesInput - The properties of the preprint entity.
 */
public class PreprintsCreatePreprintAttributesInput {
    /**
     * The DOI of the associated journal article, as entered by the user, if the preprint is published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doi")
    public String doi;

    public PreprintsCreatePreprintAttributesInput withDoi(String doi) {
        this.doi = doi;
        return this;
    }
    
    /**
     * The metadata (copyright year and holder) associated with a license, required for certain licenses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("license_record")
    public String licenseRecord;

    public PreprintsCreatePreprintAttributesInput withLicenseRecord(String licenseRecord) {
        this.licenseRecord = licenseRecord;
        return this;
    }
    
    /**
     * A nested array structure that describe subjects related to the preprint, in the BePress taxonomy. Each dictionary contains the text and ID of a subject.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjects")
    public String[] subjects;

    public PreprintsCreatePreprintAttributesInput withSubjects(String[] subjects) {
        this.subjects = subjects;
        return this;
    }
    
    public PreprintsCreatePreprintAttributesInput(){}
}
