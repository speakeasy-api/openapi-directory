/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TruncatableString - Represents a string that might be shortened to a specified length.
 */
public class TruncatableString {
    /**
     * The number of bytes removed from the original string. If this value is 0, then the string was not shortened.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("truncatedByteCount")
    public Integer truncatedByteCount;

    public TruncatableString withTruncatedByteCount(Integer truncatedByteCount) {
        this.truncatedByteCount = truncatedByteCount;
        return this;
    }
    
    /**
     * The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then `value` contains the first 128 bytes of the 500-byte string. Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public TruncatableString withValue(String value) {
        this.value = value;
        return this;
    }
    
    public TruncatableString(){}
}
