// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudMlV1TrialStateEnum - The detailed state of a trial.
type GoogleCloudMlV1TrialStateEnum string

const (
	GoogleCloudMlV1TrialStateEnumStateUnspecified GoogleCloudMlV1TrialStateEnum = "STATE_UNSPECIFIED"
	GoogleCloudMlV1TrialStateEnumRequested        GoogleCloudMlV1TrialStateEnum = "REQUESTED"
	GoogleCloudMlV1TrialStateEnumActive           GoogleCloudMlV1TrialStateEnum = "ACTIVE"
	GoogleCloudMlV1TrialStateEnumCompleted        GoogleCloudMlV1TrialStateEnum = "COMPLETED"
	GoogleCloudMlV1TrialStateEnumStopping         GoogleCloudMlV1TrialStateEnum = "STOPPING"
)

func (e *GoogleCloudMlV1TrialStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "REQUESTED":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "STOPPING":
		*e = GoogleCloudMlV1TrialStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudMlV1TrialStateEnum: %s", s)
	}
}

// GoogleCloudMlV1Trial - A message representing a trial.
type GoogleCloudMlV1Trial struct {
	// Output only. The identifier of the client that originally requested this trial.
	ClientID *string `json:"clientId,omitempty"`
	// Output only. Time at which the trial's status changed to COMPLETED.
	EndTime *string `json:"endTime,omitempty"`
	// A message representing a measurement.
	FinalMeasurement *GoogleCloudMlV1Measurement `json:"finalMeasurement,omitempty"`
	// Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
	InfeasibleReason *string `json:"infeasibleReason,omitempty"`
	// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
	Measurements []GoogleCloudMlV1Measurement `json:"measurements,omitempty"`
	// Output only. Name of the trial assigned by the service.
	Name *string `json:"name,omitempty"`
	// The parameters of the trial.
	Parameters []GoogleCloudMlV1TrialParameter `json:"parameters,omitempty"`
	// Output only. Time at which the trial was started.
	StartTime *string `json:"startTime,omitempty"`
	// The detailed state of a trial.
	State *GoogleCloudMlV1TrialStateEnum `json:"state,omitempty"`
	// Output only. If true, the parameters in this trial are not attempted again.
	TrialInfeasible *bool `json:"trialInfeasible,omitempty"`
}

// GoogleCloudMlV1TrialInput - A message representing a trial.
type GoogleCloudMlV1TrialInput struct {
	// A message representing a measurement.
	FinalMeasurement *GoogleCloudMlV1Measurement `json:"finalMeasurement,omitempty"`
	// A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
	Measurements []GoogleCloudMlV1Measurement `json:"measurements,omitempty"`
	// The parameters of the trial.
	Parameters []GoogleCloudMlV1TrialParameter `json:"parameters,omitempty"`
	// The detailed state of a trial.
	State *GoogleCloudMlV1TrialStateEnum `json:"state,omitempty"`
}
