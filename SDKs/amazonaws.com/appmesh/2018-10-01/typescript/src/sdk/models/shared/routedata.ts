/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceMetadata } from "./resourcemetadata";
import { RouteSpec } from "./routespec";
import { RouteStatus } from "./routestatus";
import { Expose, Type } from "class-transformer";

/**
 * An object representing a route returned by a describe operation.
 */
export class RouteData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meshName" })
  meshName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => ResourceMetadata)
  metadata?: ResourceMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "routeName" })
  routeName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "spec" })
  @Type(() => RouteSpec)
  spec?: RouteSpec;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => RouteStatus)
  status?: RouteStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "virtualRouterName" })
  virtualRouterName: string;
}
