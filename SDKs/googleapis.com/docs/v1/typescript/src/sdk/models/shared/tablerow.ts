/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { SuggestedTableRowStyle } from "./suggestedtablerowstyle";
import { TableCell } from "./tablecell";
import { TableRowStyle } from "./tablerowstyle";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The contents and style of a row in a Table.
 */
export class TableRow extends SpeakeasyBase {
  /**
   * The zero-based end index of this row, exclusive, in UTF-16 code units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endIndex" })
  endIndex?: number;

  /**
   * The zero-based start index of this row, in UTF-16 code units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startIndex" })
  startIndex?: number;

  /**
   * The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suggestedDeletionIds" })
  suggestedDeletionIds?: string[];

  /**
   * The suggested insertion IDs. A TableRow may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suggestedInsertionIds" })
  suggestedInsertionIds?: string[];

  /**
   * The suggested style changes to this row, keyed by suggestion ID.
   */
  @SpeakeasyMetadata({ elemType: SuggestedTableRowStyle })
  @Expose({ name: "suggestedTableRowStyleChanges" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SuggestedTableRowStyle> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SuggestedTableRowStyle);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  suggestedTableRowStyleChanges?: Record<string, SuggestedTableRowStyle>;

  /**
   * The contents and style of each cell in this row. It's possible for a table to be non-rectangular, so some rows may have a different number of cells than other rows in the same table.
   */
  @SpeakeasyMetadata({ elemType: TableCell })
  @Expose({ name: "tableCells" })
  @Type(() => TableCell)
  tableCells?: TableCell[];

  /**
   * Styles that apply to a table row.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tableRowStyle" })
  @Type(() => TableRowStyle)
  tableRowStyle?: TableRowStyle;
}
