/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TflApiPresentationEntitiesBikePointOccupancy - Bike point occupancy
 */
public class TflApiPresentationEntitiesBikePointOccupancy {
    /**
     * Total bike counts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bikesCount")
    public Integer bikesCount;

    public TflApiPresentationEntitiesBikePointOccupancy withBikesCount(Integer bikesCount) {
        this.bikesCount = bikesCount;
        return this;
    }
    
    /**
     * Total ebikes count
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eBikesCount")
    public Integer eBikesCount;

    public TflApiPresentationEntitiesBikePointOccupancy withEBikesCount(Integer eBikesCount) {
        this.eBikesCount = eBikesCount;
        return this;
    }
    
    /**
     * Empty docks
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emptyDocks")
    public Integer emptyDocks;

    public TflApiPresentationEntitiesBikePointOccupancy withEmptyDocks(Integer emptyDocks) {
        this.emptyDocks = emptyDocks;
        return this;
    }
    
    /**
     * Id of the bike point such as BikePoints_1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public TflApiPresentationEntitiesBikePointOccupancy withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name / Common name of the bike point
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TflApiPresentationEntitiesBikePointOccupancy withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Total standard bikes count
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standardBikesCount")
    public Integer standardBikesCount;

    public TflApiPresentationEntitiesBikePointOccupancy withStandardBikesCount(Integer standardBikesCount) {
        this.standardBikesCount = standardBikesCount;
        return this;
    }
    
    /**
     * Total docks available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalDocks")
    public Integer totalDocks;

    public TflApiPresentationEntitiesBikePointOccupancy withTotalDocks(Integer totalDocks) {
        this.totalDocks = totalDocks;
        return this;
    }
    
    public TflApiPresentationEntitiesBikePointOccupancy(){}
}
