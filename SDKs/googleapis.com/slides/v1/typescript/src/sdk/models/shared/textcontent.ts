/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { List } from "./list";
import { TextElement } from "./textelement";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The general text content. The text must reside in a compatible shape (e.g. text box or rectangle) or a table cell in a page.
 */
export class TextContent extends SpeakeasyBase {
  /**
   * The bulleted lists contained in this text, keyed by list ID.
   */
  @SpeakeasyMetadata({ elemType: List })
  @Expose({ name: "lists" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, List> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], List);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  lists?: Record<string, List>;

  /**
   * The text contents broken down into its component parts, including styling information. This property is read-only.
   */
  @SpeakeasyMetadata({ elemType: TextElement })
  @Expose({ name: "textElements" })
  @Type(() => TextElement)
  textElements?: TextElement[];
}
