// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BurstablePerformanceEnum string

const (
	BurstablePerformanceEnumIncluded BurstablePerformanceEnum = "included"
	BurstablePerformanceEnumRequired BurstablePerformanceEnum = "required"
	BurstablePerformanceEnumExcluded BurstablePerformanceEnum = "excluded"
)

func (e BurstablePerformanceEnum) ToPointer() *BurstablePerformanceEnum {
	return &e
}

func (e *BurstablePerformanceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "included":
		fallthrough
	case "required":
		fallthrough
	case "excluded":
		*e = BurstablePerformanceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BurstablePerformanceEnum: %v", v)
	}
}
