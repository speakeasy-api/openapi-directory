// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateConnectionXAmzTargetEnum
type UpdateConnectionXAmzTargetEnum string

const (
	UpdateConnectionXAmzTargetEnumAwsGlueUpdateConnection UpdateConnectionXAmzTargetEnum = "AWSGlue.UpdateConnection"
)

func (e *UpdateConnectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.UpdateConnection":
		*e = UpdateConnectionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateConnectionXAmzTargetEnum: %s", s)
	}
}

type UpdateConnectionRequest struct {
	UpdateConnectionRequest shared.UpdateConnectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              UpdateConnectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateConnectionResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// GlueEncryptionException
	GlueEncryptionException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateConnectionResponse map[string]interface{}
}
