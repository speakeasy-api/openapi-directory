/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Invite } from "./invite";
import { UserMetadata } from "./usermetadata";
import { UserProfile } from "./userprofile";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Succesful response
 */
export class UserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatarUrl" })
  avatarUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstAccessAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  firstAccessAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "invite" })
  @Type(() => Invite)
  invite?: Invite;

  @SpeakeasyMetadata()
  @Expose({ name: "lastAccessAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => UserMetadata)
  metadata?: UserMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "personId" })
  personId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "profile" })
  @Type(() => UserProfile)
  profile?: UserProfile;
}
