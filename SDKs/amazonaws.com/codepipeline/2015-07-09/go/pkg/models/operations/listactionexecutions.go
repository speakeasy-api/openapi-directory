// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListActionExecutionsXAmzTargetEnum
type ListActionExecutionsXAmzTargetEnum string

const (
	ListActionExecutionsXAmzTargetEnumCodePipeline20150709ListActionExecutions ListActionExecutionsXAmzTargetEnum = "CodePipeline_20150709.ListActionExecutions"
)

func (e ListActionExecutionsXAmzTargetEnum) ToPointer() *ListActionExecutionsXAmzTargetEnum {
	return &e
}

func (e *ListActionExecutionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.ListActionExecutions":
		*e = ListActionExecutionsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListActionExecutionsXAmzTargetEnum: %v", v)
	}
}

type ListActionExecutionsRequest struct {
	ListActionExecutionsInput shared.ListActionExecutionsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                ListActionExecutionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListActionExecutionsResponse struct {
	ContentType string
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListActionExecutionsOutput *shared.ListActionExecutionsOutput
	// PipelineExecutionNotFoundException
	PipelineExecutionNotFoundException interface{}
	// PipelineNotFoundException
	PipelineNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
