// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UnitEnum string

const (
	UnitEnumBits     UnitEnum = "BITS"
	UnitEnumBytes    UnitEnum = "BYTES"
	UnitEnumPackets  UnitEnum = "PACKETS"
	UnitEnumRequests UnitEnum = "REQUESTS"
)

func (e UnitEnum) ToPointer() *UnitEnum {
	return &e
}

func (e *UnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BITS":
		fallthrough
	case "BYTES":
		fallthrough
	case "PACKETS":
		fallthrough
	case "REQUESTS":
		*e = UnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnitEnum: %v", v)
	}
}
