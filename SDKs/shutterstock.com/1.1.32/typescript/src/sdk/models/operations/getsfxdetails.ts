/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetSfxDetailsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode?: string;
}

/**
 * Which library to fetch from
 */
export enum GetSfxDetailsLibraryEnum {
  Shutterstock = "shutterstock",
  Premier = "premier",
  Premiumbeat = "premiumbeat",
}

/**
 * Amount of detail to render in the response
 */
export enum GetSfxDetailsViewEnum {
  Minimal = "minimal",
  Full = "full",
}

export class GetSfxDetailsRequest extends SpeakeasyBase {
  /**
   * Audio track ID
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;

  /**
   * Language for the keywords and categories in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: shared.LanguageEnum;

  /**
   * Which library to fetch from
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=library",
  })
  library?: GetSfxDetailsLibraryEnum;

  /**
   * The ID of the search that is related to this request
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search_id",
  })
  searchId?: string;

  /**
   * Amount of detail to render in the response
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=view" })
  view?: GetSfxDetailsViewEnum;
}

export class GetSfxDetailsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  sfx?: shared.Sfx;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
