/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CareContextDefinition } from "./carecontextdefinition";
import { HITypeEnumEnum } from "./hitypeenumenum";
import { Permission } from "./permission";
import { Requester } from "./requester";
import { UsePurpose } from "./usepurpose";
import { Expose, Transform, Type } from "class-transformer";

export class ConsentRequestConsentHip extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class ConsentRequestConsentHiu extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class ConsentRequestConsentPatient extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class ConsentRequestConsent extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CareContextDefinition })
  @Expose({ name: "careContexts" })
  @Type(() => CareContextDefinition)
  careContexts?: CareContextDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "hiTypes" })
  hiTypes: HITypeEnumEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "hip" })
  @Type(() => ConsentRequestConsentHip)
  hip?: ConsentRequestConsentHip;

  @SpeakeasyMetadata()
  @Expose({ name: "hiu" })
  @Type(() => ConsentRequestConsentHiu)
  hiu: ConsentRequestConsentHiu;

  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  @Type(() => ConsentRequestConsentPatient)
  patient: ConsentRequestConsentPatient;

  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  @Type(() => Permission)
  permission: Permission;

  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  @Type(() => UsePurpose)
  purpose: UsePurpose;

  @SpeakeasyMetadata()
  @Expose({ name: "requester" })
  @Type(() => Requester)
  requester: Requester;
}

export class ConsentRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "consent" })
  @Type(() => ConsentRequestConsent)
  consent: ConsentRequestConsent;

  /**
   * a nonce, unique for each HTTP request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId: string;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
