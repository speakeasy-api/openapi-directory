/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Dimension } from "./dimension";
import { OptionalColor } from "./optionalcolor";
import { TableCellBorder } from "./tablecellborder";
import { Expose, Type } from "class-transformer";

/**
 * The alignment of the content in the table cell. The default alignment matches the alignment for newly created table cells in the Docs editor.
 */
export enum TableCellStyleContentAlignmentEnum {
  ContentAlignmentUnspecified = "CONTENT_ALIGNMENT_UNSPECIFIED",
  ContentAlignmentUnsupported = "CONTENT_ALIGNMENT_UNSUPPORTED",
  Top = "TOP",
  Middle = "MIDDLE",
  Bottom = "BOTTOM",
}

/**
 * The style of a TableCell. Inherited table cell styles are represented as unset fields in this message. A table cell style can inherit from the table's style.
 */
export class TableCellStyle extends SpeakeasyBase {
  /**
   * A color that can either be fully opaque or fully transparent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "backgroundColor" })
  @Type(() => OptionalColor)
  backgroundColor?: OptionalColor;

  /**
   * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "borderBottom" })
  @Type(() => TableCellBorder)
  borderBottom?: TableCellBorder;

  /**
   * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "borderLeft" })
  @Type(() => TableCellBorder)
  borderLeft?: TableCellBorder;

  /**
   * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "borderRight" })
  @Type(() => TableCellBorder)
  borderRight?: TableCellBorder;

  /**
   * A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "borderTop" })
  @Type(() => TableCellBorder)
  borderTop?: TableCellBorder;

  /**
   * The column span of the cell. This property is read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "columnSpan" })
  columnSpan?: number;

  /**
   * The alignment of the content in the table cell. The default alignment matches the alignment for newly created table cells in the Docs editor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentAlignment" })
  contentAlignment?: TableCellStyleContentAlignmentEnum;

  /**
   * A magnitude in a single direction in the specified units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paddingBottom" })
  @Type(() => Dimension)
  paddingBottom?: Dimension;

  /**
   * A magnitude in a single direction in the specified units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paddingLeft" })
  @Type(() => Dimension)
  paddingLeft?: Dimension;

  /**
   * A magnitude in a single direction in the specified units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paddingRight" })
  @Type(() => Dimension)
  paddingRight?: Dimension;

  /**
   * A magnitude in a single direction in the specified units.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paddingTop" })
  @Type(() => Dimension)
  paddingTop?: Dimension;

  /**
   * The row span of the cell. This property is read-only.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rowSpan" })
  rowSpan?: number;
}
