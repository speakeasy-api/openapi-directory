/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class NodesDraftRegistrationsSubjectsRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the draft registration.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=draft_id",
  })
  draftId: string;
}

/**
 * The attributes of the Subject.
 */
export class NodesDraftRegistrationsSubjectsSubjectAttributes extends SpeakeasyBase {
  /**
   * The name for the taxonomy used to name subjects (`bepress`)
   */
  @SpeakeasyMetadata()
  taxonomyName?: string;

  /**
   * The name for the subject (`Arts and Humanities`)
   */
  @SpeakeasyMetadata()
  text?: string;
}

/**
 * The attributes of the Subject.
 */
export class NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataAttributes extends SpeakeasyBase {
  /**
   * The name for the taxonmy used to name subjects (`bepress`)
   */
  @SpeakeasyMetadata()
  taxonomyName?: string;

  /**
   * The name for the subject (`Arts and Humanities`)
   */
  @SpeakeasyMetadata()
  text?: string;
}

/**
 * Links to other entities or entity collections that have a relationship to the file entity.
 */
export class NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataRelationships extends SpeakeasyBase {
  /**
   * A link to the children for this Subject.
   */
  @SpeakeasyMetadata()
  children?: string;

  /**
   * A link to the parent for this Subject.
   */
  @SpeakeasyMetadata()
  parent?: string;
}

export class NodesDraftRegistrationsSubjectsSubjectEmbedsParentData extends SpeakeasyBase {
  /**
   * The attributes of the Subject.
   */
  @SpeakeasyMetadata()
  attributes?: NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataAttributes;

  /**
   * A JSON object containing the embedded information.
   */
  @SpeakeasyMetadata()
  data?: Record<string, any>;

  /**
   * The unique identifier of the Subject.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Links to other entities or entity collections that have a relationship to the file entity.
   */
  @SpeakeasyMetadata()
  relationships?: NodesDraftRegistrationsSubjectsSubjectEmbedsParentDataRelationships;

  /**
   * The type identifier of the Subject (`subject`).
   */
  @SpeakeasyMetadata()
  type?: string;
}

/**
 * The parent of the Subject.
 */
export class NodesDraftRegistrationsSubjectsSubjectEmbedsParent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  data?: NodesDraftRegistrationsSubjectsSubjectEmbedsParentData;
}

/**
 * The parent is always embedded in the Subject response.
 */
export class NodesDraftRegistrationsSubjectsSubjectEmbeds extends SpeakeasyBase {
  /**
   * The parent of the Subject.
   */
  @SpeakeasyMetadata()
  parent?: NodesDraftRegistrationsSubjectsSubjectEmbedsParent;
}

/**
 * URLs to alternative representations of the Subject entity.
 */
export class NodesDraftRegistrationsSubjectsSubjectLinks extends SpeakeasyBase {
  /**
   * A link to the detail page for a Subject.
   */
  @SpeakeasyMetadata()
  self?: string;
}

/**
 * Links to other entities or entity collections that have a relationship to the file entity.
 */
export class NodesDraftRegistrationsSubjectsSubjectRelationships extends SpeakeasyBase {
  /**
   * A link to the children for this Subject.
   */
  @SpeakeasyMetadata()
  children?: string;

  /**
   * A link to the parent for this Subject.
   */
  @SpeakeasyMetadata()
  parent?: string;
}

/**
 * OK
 */
export class NodesDraftRegistrationsSubjectsSubject extends SpeakeasyBase {
  /**
   * The attributes of the Subject.
   */
  @SpeakeasyMetadata()
  attributes?: NodesDraftRegistrationsSubjectsSubjectAttributes;

  /**
   * The parent is always embedded in the Subject response.
   */
  @SpeakeasyMetadata()
  embeds?: NodesDraftRegistrationsSubjectsSubjectEmbeds;

  /**
   * The unique identifier of the Subject.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * URLs to alternative representations of the Subject entity.
   */
  @SpeakeasyMetadata()
  links?: NodesDraftRegistrationsSubjectsSubjectLinks;

  /**
   * Links to other entities or entity collections that have a relationship to the file entity.
   */
  @SpeakeasyMetadata()
  relationships?: NodesDraftRegistrationsSubjectsSubjectRelationships;

  /**
   * The type identifier of the Subject (`subject`).
   */
  @SpeakeasyMetadata()
  type?: string;
}

export class NodesDraftRegistrationsSubjectsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
