// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetAPIV1DonationsCarbonCalculateSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// GetAPIV1DonationsCarbonCalculateTransportationMethodEnum - The primary transportation method of the shipment.
type GetAPIV1DonationsCarbonCalculateTransportationMethodEnum string

const (
	GetAPIV1DonationsCarbonCalculateTransportationMethodEnumAir   GetAPIV1DonationsCarbonCalculateTransportationMethodEnum = "air"
	GetAPIV1DonationsCarbonCalculateTransportationMethodEnumTruck GetAPIV1DonationsCarbonCalculateTransportationMethodEnum = "truck"
	GetAPIV1DonationsCarbonCalculateTransportationMethodEnumRail  GetAPIV1DonationsCarbonCalculateTransportationMethodEnum = "rail"
	GetAPIV1DonationsCarbonCalculateTransportationMethodEnumSea   GetAPIV1DonationsCarbonCalculateTransportationMethodEnum = "sea"
)

func (e *GetAPIV1DonationsCarbonCalculateTransportationMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "air":
		fallthrough
	case "truck":
		fallthrough
	case "rail":
		fallthrough
	case "sea":
		*e = GetAPIV1DonationsCarbonCalculateTransportationMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPIV1DonationsCarbonCalculateTransportationMethodEnum: %s", s)
	}
}

type GetAPIV1DonationsCarbonCalculateRequest struct {
	// The destination zip code (US only) of the shipment. If you send this parameter, also send `origin_address`.
	DestinationAddress *float64 `queryParam:"style=form,explode=true,name=destination_address"`
	// The total distance (in miles) of the shipment. You can use this parameter in place of `origin_address` and `destination_address`.
	DistanceMi *float64 `queryParam:"style=form,explode=true,name=distance_mi"`
	// The origin zip code (US only) of the shipment. If you send this parameter, also send `destination_address`.
	OriginAddress *float64 `queryParam:"style=form,explode=true,name=origin_address"`
	// The primary transportation method of the shipment.
	TransportationMethod *GetAPIV1DonationsCarbonCalculateTransportationMethodEnum `queryParam:"style=form,explode=true,name=transportation_method"`
	// The total weight (in pounds) of the shipment.
	WeightLb float64 `queryParam:"style=form,explode=true,name=weight_lb"`
}

type GetAPIV1DonationsCarbonCalculateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
