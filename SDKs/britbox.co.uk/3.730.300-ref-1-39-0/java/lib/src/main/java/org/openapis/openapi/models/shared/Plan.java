/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Plan - The Plan requested.
 */
public class Plan {
    /**
     * An alias for a plan.
     */
    @JsonProperty("alias")
    public String alias;

    public Plan withAlias(String alias) {
        this.alias = alias;
        return this;
    }
    
    /**
     * The list of benefits to display for a plan.
     */
    @JsonProperty("benefits")
    public String[] benefits;

    public Plan withBenefits(String[] benefits) {
        this.benefits = benefits;
        return this;
    }
    
    /**
     * Given the `billingPeriodType` this is how frequently it will run. e.g. every 2 weeks.
     */
    @JsonProperty("billingPeriodFrequency")
    public Integer billingPeriodFrequency;

    public Plan withBillingPeriodFrequency(Integer billingPeriodFrequency) {
        this.billingPeriodFrequency = billingPeriodFrequency;
        return this;
    }
    
    /**
     * The type of billing period used.
     */
    @JsonProperty("billingPeriodType")
    public PlanBillingPeriodTypeEnum billingPeriodType;

    public Plan withBillingPeriodType(PlanBillingPeriodTypeEnum billingPeriodType) {
        this.billingPeriodType = billingPeriodType;
        return this;
    }
    
    /**
     * The currency a plan is offered in.
     */
    @JsonProperty("currency")
    public String currency;

    public Plan withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * A map of custom fields defined by a curator for a plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFields")
    public java.util.Map<String, Object> customFields;

    public Plan withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * True if a plan has a trial period, false if not.
     */
    @JsonProperty("hasTrialPeriod")
    public Boolean hasTrialPeriod;

    public Plan withHasTrialPeriod(Boolean hasTrialPeriod) {
        this.hasTrialPeriod = hasTrialPeriod;
        return this;
    }
    
    /**
     * The identifier of a plan.
     */
    @JsonProperty("id")
    public String id;

    public Plan withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * True if a plan is active, false if its retired.
     */
    @JsonProperty("isActive")
    public Boolean isActive;

    public Plan withIsActive(Boolean isActive) {
        this.isActive = isActive;
        return this;
    }
    
    /**
     * True if a plan should be highlighted as featured, false if not.
     */
    @JsonProperty("isFeatured")
    public Boolean isFeatured;

    public Plan withIsFeatured(Boolean isFeatured) {
        this.isFeatured = isFeatured;
        return this;
    }
    
    /**
     * True if a plan should not be presented in the primary plan options, false if not.
     */
    @JsonProperty("isPrivate")
    public Boolean isPrivate;

    public Plan withIsPrivate(Boolean isPrivate) {
        this.isPrivate = isPrivate;
        return this;
    }
    
    /**
     * The price of a plan. If a free plan then undefined.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Float price;

    public Plan withPrice(Float price) {
        this.price = price;
        return this;
    }
    
    /**
     * The revenue type a plan targets.
     */
    @JsonProperty("revenueType")
    public PlanRevenueTypeEnum revenueType;

    public Plan withRevenueType(PlanRevenueTypeEnum revenueType) {
        this.revenueType = revenueType;
        return this;
    }
    
    /**
     * The subscription code a plan targets.
     */
    @JsonProperty("subscriptionCode")
    public String subscriptionCode;

    public Plan withSubscriptionCode(String subscriptionCode) {
        this.subscriptionCode = subscriptionCode;
        return this;
    }
    
    /**
     * The short tagline for a plan.
     */
    @JsonProperty("tagline")
    public String tagline;

    public Plan withTagline(String tagline) {
        this.tagline = tagline;
        return this;
    }
    
    /**
     * The terms and conditions for a plan.
     */
    @JsonProperty("termsAndConditions")
    public String termsAndConditions;

    public Plan withTermsAndConditions(String termsAndConditions) {
        this.termsAndConditions = termsAndConditions;
        return this;
    }
    
    /**
     * The title of a plan.
     */
    @JsonProperty("title")
    public String title;

    public Plan withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * How many days a trial period runs for a plan. Only valid if `hasTrialPeriod` is true.
     */
    @JsonProperty("trialPeriodDays")
    public Integer trialPeriodDays;

    public Plan withTrialPeriodDays(Integer trialPeriodDays) {
        this.trialPeriodDays = trialPeriodDays;
        return this;
    }
    
    /**
     * The type of plan.
     */
    @JsonProperty("type")
    public PlanTypeEnum type;

    public Plan withType(PlanTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public Plan(@JsonProperty("alias") String alias, @JsonProperty("benefits") String[] benefits, @JsonProperty("billingPeriodFrequency") Integer billingPeriodFrequency, @JsonProperty("billingPeriodType") PlanBillingPeriodTypeEnum billingPeriodType, @JsonProperty("currency") String currency, @JsonProperty("hasTrialPeriod") Boolean hasTrialPeriod, @JsonProperty("id") String id, @JsonProperty("isActive") Boolean isActive, @JsonProperty("isFeatured") Boolean isFeatured, @JsonProperty("isPrivate") Boolean isPrivate, @JsonProperty("revenueType") PlanRevenueTypeEnum revenueType, @JsonProperty("subscriptionCode") String subscriptionCode, @JsonProperty("tagline") String tagline, @JsonProperty("termsAndConditions") String termsAndConditions, @JsonProperty("title") String title, @JsonProperty("trialPeriodDays") Integer trialPeriodDays, @JsonProperty("type") PlanTypeEnum type) {
        this.alias = alias;
        this.benefits = benefits;
        this.billingPeriodFrequency = billingPeriodFrequency;
        this.billingPeriodType = billingPeriodType;
        this.currency = currency;
        this.hasTrialPeriod = hasTrialPeriod;
        this.id = id;
        this.isActive = isActive;
        this.isFeatured = isFeatured;
        this.isPrivate = isPrivate;
        this.revenueType = revenueType;
        this.subscriptionCode = subscriptionCode;
        this.tagline = tagline;
        this.termsAndConditions = termsAndConditions;
        this.title = title;
        this.trialPeriodDays = trialPeriodDays;
        this.type = type;
  }
}
