// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FlywheelIterationStatusEnum string

const (
	FlywheelIterationStatusEnumTraining      FlywheelIterationStatusEnum = "TRAINING"
	FlywheelIterationStatusEnumEvaluating    FlywheelIterationStatusEnum = "EVALUATING"
	FlywheelIterationStatusEnumCompleted     FlywheelIterationStatusEnum = "COMPLETED"
	FlywheelIterationStatusEnumFailed        FlywheelIterationStatusEnum = "FAILED"
	FlywheelIterationStatusEnumStopRequested FlywheelIterationStatusEnum = "STOP_REQUESTED"
	FlywheelIterationStatusEnumStopped       FlywheelIterationStatusEnum = "STOPPED"
)

func (e FlywheelIterationStatusEnum) ToPointer() *FlywheelIterationStatusEnum {
	return &e
}

func (e *FlywheelIterationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRAINING":
		fallthrough
	case "EVALUATING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "STOP_REQUESTED":
		fallthrough
	case "STOPPED":
		*e = FlywheelIterationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FlywheelIterationStatusEnum: %v", v)
	}
}
