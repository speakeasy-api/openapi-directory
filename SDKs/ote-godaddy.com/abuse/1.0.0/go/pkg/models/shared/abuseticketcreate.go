// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AbuseTicketCreateTypeEnum - The type of abuse being reported.
type AbuseTicketCreateTypeEnum string

const (
	AbuseTicketCreateTypeEnumARecord      AbuseTicketCreateTypeEnum = "A_RECORD"
	AbuseTicketCreateTypeEnumChildAbuse   AbuseTicketCreateTypeEnum = "CHILD_ABUSE"
	AbuseTicketCreateTypeEnumContent      AbuseTicketCreateTypeEnum = "CONTENT"
	AbuseTicketCreateTypeEnumFraudWire    AbuseTicketCreateTypeEnum = "FRAUD_WIRE"
	AbuseTicketCreateTypeEnumIPBlock      AbuseTicketCreateTypeEnum = "IP_BLOCK"
	AbuseTicketCreateTypeEnumMalware      AbuseTicketCreateTypeEnum = "MALWARE"
	AbuseTicketCreateTypeEnumNetworkAbuse AbuseTicketCreateTypeEnum = "NETWORK_ABUSE"
	AbuseTicketCreateTypeEnumPhishing     AbuseTicketCreateTypeEnum = "PHISHING"
	AbuseTicketCreateTypeEnumSpam         AbuseTicketCreateTypeEnum = "SPAM"
)

func (e *AbuseTicketCreateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "A_RECORD":
		fallthrough
	case "CHILD_ABUSE":
		fallthrough
	case "CONTENT":
		fallthrough
	case "FRAUD_WIRE":
		fallthrough
	case "IP_BLOCK":
		fallthrough
	case "MALWARE":
		fallthrough
	case "NETWORK_ABUSE":
		fallthrough
	case "PHISHING":
		fallthrough
	case "SPAM":
		*e = AbuseTicketCreateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AbuseTicketCreateTypeEnum: %s", s)
	}
}

// AbuseTicketCreate - The endpoint which allows the Reporter to create a new abuse ticket
type AbuseTicketCreate struct {
	// Additional information that may assist the abuse investigator. ie: server logs or email headers/body for SPAM
	Info *string `json:"info,omitempty"`
	// Reporter URL if housing additional information that may assist the abuse investigator
	InfoURL *string `json:"infoUrl,omitempty"`
	// Do you believe this is intentional abuse by the domain holder?
	Intentional *bool `json:"intentional,omitempty"`
	// The Proxy information required to view the abuse being reported. ie: Specific IP used, or country of IP viewing from
	Proxy *string `json:"proxy,omitempty"`
	// The URL or IP where live abuse content is located at. ie: https://www.example.com/bad_stuff/bad.php
	Source *string `json:"source,omitempty"`
	// The brand/company the abuse is targeting. ie: brand name/bank name
	Target *string `json:"target,omitempty"`
	// The type of abuse being reported.
	Type *AbuseTicketCreateTypeEnum `json:"type,omitempty"`
}
