/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Filter } from "./filter";
import { RecommendationPreferences } from "./recommendationpreferences";
import { Expose, Type } from "class-transformer";

export class GetEc2InstanceRecommendationsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accountIds" })
  accountIds?: string[];

  @SpeakeasyMetadata({ elemType: Filter })
  @Expose({ name: "filters" })
  @Type(() => Filter)
  filters?: Filter[];

  @SpeakeasyMetadata()
  @Expose({ name: "instanceArns" })
  instanceArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendationPreferences" })
  @Type(() => RecommendationPreferences)
  recommendationPreferences?: RecommendationPreferences;
}
