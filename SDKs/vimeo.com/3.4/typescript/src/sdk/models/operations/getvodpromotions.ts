/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetVodPromotionsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

/**
 * The filter to apply to the results.
 */
export enum GetVodPromotionsFilterEnum {
  Batch = "batch",
  Default = "default",
  Single = "single",
  Vip = "vip",
}

export class GetVodPromotionsRequest extends SpeakeasyBase {
  /**
   * The filter to apply to the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter: GetVodPromotionsFilterEnum;

  /**
   * The ID of the On Demand.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ondemand_id",
  })
  ondemandId: number;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;
}

export class GetVodPromotionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The filter is invalid.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The promotions were returned.
   */
  @SpeakeasyMetadata()
  onDemandPromotion?: shared.OnDemandPromotion;
}
