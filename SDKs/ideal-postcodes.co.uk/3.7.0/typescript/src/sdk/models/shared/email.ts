/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum EmailResultEnum {
  Deliverable = "deliverable",
  NotDeliverable = "not_deliverable",
}

export class Email extends SpeakeasyBase {
  /**
   * Returns `true` if this domain accepts all emails regardless of username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catchall" })
  catchall: boolean;

  /**
   * Returns `true` if the email can be delivered
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliverable" })
  deliverable: boolean;

  /**
   * Returns `true` if email comes from a disposable email service like temp-mail
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disposable" })
  disposable: boolean;

  /**
   * Returns `true` if the email originates from a free service like Outlook or Gmail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free" })
  free: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result: EmailResultEnum;

  /**
   * Returns `true` if email address represents an organisational role like `admin`, `support`, `postmaster` etc
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role: boolean;
}
