// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StudentSubmissionCourseWorkTypeEnum - Type of course work this submission is for. Read-only.
type StudentSubmissionCourseWorkTypeEnum string

const (
	StudentSubmissionCourseWorkTypeEnumCourseWorkTypeUnspecified StudentSubmissionCourseWorkTypeEnum = "COURSE_WORK_TYPE_UNSPECIFIED"
	StudentSubmissionCourseWorkTypeEnumAssignment                StudentSubmissionCourseWorkTypeEnum = "ASSIGNMENT"
	StudentSubmissionCourseWorkTypeEnumShortAnswerQuestion       StudentSubmissionCourseWorkTypeEnum = "SHORT_ANSWER_QUESTION"
	StudentSubmissionCourseWorkTypeEnumMultipleChoiceQuestion    StudentSubmissionCourseWorkTypeEnum = "MULTIPLE_CHOICE_QUESTION"
)

func (e *StudentSubmissionCourseWorkTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COURSE_WORK_TYPE_UNSPECIFIED":
		fallthrough
	case "ASSIGNMENT":
		fallthrough
	case "SHORT_ANSWER_QUESTION":
		fallthrough
	case "MULTIPLE_CHOICE_QUESTION":
		*e = StudentSubmissionCourseWorkTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StudentSubmissionCourseWorkTypeEnum: %s", s)
	}
}

// StudentSubmissionStateEnum - State of this submission. Read-only.
type StudentSubmissionStateEnum string

const (
	StudentSubmissionStateEnumSubmissionStateUnspecified StudentSubmissionStateEnum = "SUBMISSION_STATE_UNSPECIFIED"
	StudentSubmissionStateEnumNew                        StudentSubmissionStateEnum = "NEW"
	StudentSubmissionStateEnumCreated                    StudentSubmissionStateEnum = "CREATED"
	StudentSubmissionStateEnumTurnedIn                   StudentSubmissionStateEnum = "TURNED_IN"
	StudentSubmissionStateEnumReturned                   StudentSubmissionStateEnum = "RETURNED"
	StudentSubmissionStateEnumReclaimedByStudent         StudentSubmissionStateEnum = "RECLAIMED_BY_STUDENT"
)

func (e *StudentSubmissionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMISSION_STATE_UNSPECIFIED":
		fallthrough
	case "NEW":
		fallthrough
	case "CREATED":
		fallthrough
	case "TURNED_IN":
		fallthrough
	case "RETURNED":
		fallthrough
	case "RECLAIMED_BY_STUDENT":
		*e = StudentSubmissionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StudentSubmissionStateEnum: %s", s)
	}
}

// StudentSubmission - Student submission for course work. StudentSubmission items are generated when a CourseWork item is created. StudentSubmissions that have never been accessed (i.e. with `state` = NEW) may not have a creation time or update time.
type StudentSubmission struct {
	// Absolute link to the submission in the Classroom web UI. Read-only.
	AlternateLink *string `json:"alternateLink,omitempty"`
	// Optional grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This may be modified only by course teachers.
	AssignedGrade *float64 `json:"assignedGrade,omitempty"`
	// Student work for an assignment.
	AssignmentSubmission *AssignmentSubmission `json:"assignmentSubmission,omitempty"`
	// Whether this student submission is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.
	AssociatedWithDeveloper *bool `json:"associatedWithDeveloper,omitempty"`
	// Identifier of the course. Read-only.
	CourseID *string `json:"courseId,omitempty"`
	// Identifier for the course work this corresponds to. Read-only.
	CourseWorkID *string `json:"courseWorkId,omitempty"`
	// Type of course work this submission is for. Read-only.
	CourseWorkType *StudentSubmissionCourseWorkTypeEnum `json:"courseWorkType,omitempty"`
	// Creation time of this submission. This may be unset if the student has not accessed this item. Read-only.
	CreationTime *string `json:"creationTime,omitempty"`
	// Optional pending grade. If unset, no grade was set. This value must be non-negative. Decimal (that is, non-integer) values are allowed, but are rounded to two decimal places. This is only visible to and modifiable by course teachers.
	DraftGrade *float64 `json:"draftGrade,omitempty"`
	// Classroom-assigned Identifier for the student submission. This is unique among submissions for the relevant course work. Read-only.
	ID *string `json:"id,omitempty"`
	// Whether this submission is late. Read-only.
	Late *bool `json:"late,omitempty"`
	// Student work for a multiple-choice question.
	MultipleChoiceSubmission *MultipleChoiceSubmission `json:"multipleChoiceSubmission,omitempty"`
	// Student work for a short answer question.
	ShortAnswerSubmission *ShortAnswerSubmission `json:"shortAnswerSubmission,omitempty"`
	// State of this submission. Read-only.
	State *StudentSubmissionStateEnum `json:"state,omitempty"`
	// The history of the submission (includes state and grade histories). Read-only.
	SubmissionHistory []SubmissionHistory `json:"submissionHistory,omitempty"`
	// Last update time of this submission. This may be unset if the student has not accessed this item. Read-only.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Identifier for the student that owns this submission. Read-only.
	UserID *string `json:"userId,omitempty"`
}
