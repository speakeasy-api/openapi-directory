/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountCategoriesUpdatedWebhook - Webhook request body for account categories updated.
 */
public class AccountCategoriesUpdatedWebhook {
    /**
     * Unique identifier of the alert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alertId")
    public String alertId;

    public AccountCategoriesUpdatedWebhook withAlertId(String alertId) {
        this.alertId = alertId;
        return this;
    }
    
    /**
     * Unique identifier for your client in Codat.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;

    public AccountCategoriesUpdatedWebhook withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Name of your client in Codat.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientName")
    public String clientName;

    public AccountCategoriesUpdatedWebhook withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    /**
     * Unique identifier for your SMB in Codat.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyId")
    public String companyId;

    public AccountCategoriesUpdatedWebhook withCompanyId(String companyId) {
        this.companyId = companyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public AccountCategoriesUpdatedWebhookData data;

    public AccountCategoriesUpdatedWebhook withData(AccountCategoriesUpdatedWebhookData data) {
        this.data = data;
        return this;
    }
    
    /**
     * Unique identifier for a company's data connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataConnectionId")
    public String dataConnectionId;

    public AccountCategoriesUpdatedWebhook withDataConnectionId(String dataConnectionId) {
        this.dataConnectionId = dataConnectionId;
        return this;
    }
    
    /**
     * A human readable message about the webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;

    public AccountCategoriesUpdatedWebhook withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Unique identifier for the rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleId")
    public String ruleId;

    public AccountCategoriesUpdatedWebhook withRuleId(String ruleId) {
        this.ruleId = ruleId;
        return this;
    }
    
    /**
     * The type of rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleType")
    public String ruleType;

    public AccountCategoriesUpdatedWebhook withRuleType(String ruleType) {
        this.ruleType = ruleType;
        return this;
    }
    
    public AccountCategoriesUpdatedWebhook(){}
}
