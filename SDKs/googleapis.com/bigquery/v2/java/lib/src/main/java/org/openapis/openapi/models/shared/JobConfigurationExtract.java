/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class JobConfigurationExtract {
    /**
     * [Optional] The compression type to use for exported files. Possible values include GZIP, DEFLATE, SNAPPY, and NONE. The default value is NONE. DEFLATE and SNAPPY are only supported for Avro. Not applicable when extracting models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compression")
    public String compression;

    public JobConfigurationExtract withCompression(String compression) {
        this.compression = compression;
        return this;
    }
    
    /**
     * [Optional] The exported file format. Possible values include CSV, NEWLINE_DELIMITED_JSON, PARQUET or AVRO for tables and ML_TF_SAVED_MODEL or ML_XGBOOST_BOOSTER for models. The default value for tables is CSV. Tables with nested or repeated fields cannot be exported as CSV. The default value for models is ML_TF_SAVED_MODEL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationFormat")
    public String destinationFormat;

    public JobConfigurationExtract withDestinationFormat(String destinationFormat) {
        this.destinationFormat = destinationFormat;
        return this;
    }
    
    /**
     * [Pick one] DEPRECATED: Use destinationUris instead, passing only one URI as necessary. The fully-qualified Google Cloud Storage URI where the extracted table should be written.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationUri")
    public String destinationUri;

    public JobConfigurationExtract withDestinationUri(String destinationUri) {
        this.destinationUri = destinationUri;
        return this;
    }
    
    /**
     * [Pick one] A list of fully-qualified Google Cloud Storage URIs where the extracted table should be written.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationUris")
    public String[] destinationUris;

    public JobConfigurationExtract withDestinationUris(String[] destinationUris) {
        this.destinationUris = destinationUris;
        return this;
    }
    
    /**
     * [Optional] Delimiter to use between fields in the exported data. Default is ','. Not applicable when extracting models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldDelimiter")
    public String fieldDelimiter;

    public JobConfigurationExtract withFieldDelimiter(String fieldDelimiter) {
        this.fieldDelimiter = fieldDelimiter;
        return this;
    }
    
    /**
     * [Optional] Whether to print out a header row in the results. Default is true. Not applicable when extracting models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("printHeader")
    public Boolean printHeader;

    public JobConfigurationExtract withPrintHeader(Boolean printHeader) {
        this.printHeader = printHeader;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceModel")
    public ModelReference sourceModel;

    public JobConfigurationExtract withSourceModel(ModelReference sourceModel) {
        this.sourceModel = sourceModel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceTable")
    public TableReference sourceTable;

    public JobConfigurationExtract withSourceTable(TableReference sourceTable) {
        this.sourceTable = sourceTable;
        return this;
    }
    
    /**
     * [Optional] If destinationFormat is set to "AVRO", this flag indicates whether to enable extracting applicable column types (such as TIMESTAMP) to their corresponding AVRO logical types (timestamp-micros), instead of only using their raw types (avro-long). Not applicable when extracting models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useAvroLogicalTypes")
    public Boolean useAvroLogicalTypes;

    public JobConfigurationExtract withUseAvroLogicalTypes(Boolean useAvroLogicalTypes) {
        this.useAvroLogicalTypes = useAvroLogicalTypes;
        return this;
    }
    
    public JobConfigurationExtract(){}
}
