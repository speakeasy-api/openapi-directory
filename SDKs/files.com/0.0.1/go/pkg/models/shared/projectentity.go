// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectEntityGlobalAccessEnum - Global access settings
type ProjectEntityGlobalAccessEnum string

const (
	ProjectEntityGlobalAccessEnumNone           ProjectEntityGlobalAccessEnum = "none"
	ProjectEntityGlobalAccessEnumAnyoneWithRead ProjectEntityGlobalAccessEnum = "anyone_with_read"
	ProjectEntityGlobalAccessEnumAnyoneWithFull ProjectEntityGlobalAccessEnum = "anyone_with_full"
)

func (e *ProjectEntityGlobalAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "anyone_with_read":
		fallthrough
	case "anyone_with_full":
		*e = ProjectEntityGlobalAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectEntityGlobalAccessEnum: %s", s)
	}
}

// ProjectEntity - List Projects
type ProjectEntity struct {
	// Global access settings
	GlobalAccess *ProjectEntityGlobalAccessEnum `json:"global_access,omitempty"`
	// Project ID
	ID *int `json:"id,omitempty"`
}
