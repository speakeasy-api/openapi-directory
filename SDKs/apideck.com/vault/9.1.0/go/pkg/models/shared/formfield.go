// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FormFieldTypeEnum string

const (
	FormFieldTypeEnumText           FormFieldTypeEnum = "text"
	FormFieldTypeEnumCheckbox       FormFieldTypeEnum = "checkbox"
	FormFieldTypeEnumTel            FormFieldTypeEnum = "tel"
	FormFieldTypeEnumEmail          FormFieldTypeEnum = "email"
	FormFieldTypeEnumURL            FormFieldTypeEnum = "url"
	FormFieldTypeEnumTextarea       FormFieldTypeEnum = "textarea"
	FormFieldTypeEnumSelect         FormFieldTypeEnum = "select"
	FormFieldTypeEnumFilteredSelect FormFieldTypeEnum = "filtered-select"
	FormFieldTypeEnumMultiSelect    FormFieldTypeEnum = "multi-select"
	FormFieldTypeEnumDatetime       FormFieldTypeEnum = "datetime"
	FormFieldTypeEnumDate           FormFieldTypeEnum = "date"
	FormFieldTypeEnumTime           FormFieldTypeEnum = "time"
	FormFieldTypeEnumNumber         FormFieldTypeEnum = "number"
)

func (e *FormFieldTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "text":
		fallthrough
	case "checkbox":
		fallthrough
	case "tel":
		fallthrough
	case "email":
		fallthrough
	case "url":
		fallthrough
	case "textarea":
		fallthrough
	case "select":
		fallthrough
	case "filtered-select":
		fallthrough
	case "multi-select":
		fallthrough
	case "datetime":
		fallthrough
	case "date":
		fallthrough
	case "time":
		fallthrough
	case "number":
		*e = FormFieldTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FormFieldTypeEnum: %s", s)
	}
}

type FormField struct {
	// Only applicable to select fields. Allow the user to add a custom value though the option select if the desired value is not in the option select list.
	AllowCustomValues *bool `json:"allow_custom_values,omitempty"`
	CustomField       *bool `json:"custom_field,omitempty"`
	// The description of the form field
	Description *string `json:"description,omitempty"`
	// Indicates if the form field is displayed in a “read-only” mode.
	Disabled *bool `json:"disabled,omitempty"`
	// Indicates if the form field is not displayed but the value that is being stored on the connection.
	Hidden *bool `json:"hidden,omitempty"`
	// The unique identifier of the form field.
	ID *string `json:"id,omitempty"`
	// The label of the field
	Label   *string       `json:"label,omitempty"`
	Options []interface{} `json:"options,omitempty"`
	// The placeholder for the form field
	Placeholder *string `json:"placeholder,omitempty"`
	// Indicates if the form field is required, which means it must be filled in before the form can be submitted
	Required *bool `json:"required,omitempty"`
	// Indicates if the form field contains sensitive data, which will display the value as a masked input.
	Sensitive *bool              `json:"sensitive,omitempty"`
	Type      *FormFieldTypeEnum `json:"type,omitempty"`
}
