/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PartialGroupByKeyInstruction - An instruction that does a partial group-by-key. One input and one output.
 */
public class PartialGroupByKeyInstruction {
    /**
     * An input of an instruction, as a reference to an output of a producer instruction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("input")
    public InstructionInput input;

    public PartialGroupByKeyInstruction withInput(InstructionInput input) {
        this.input = input;
        return this;
    }
    
    /**
     * The codec to use for interpreting an element in the input PTable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputElementCodec")
    public java.util.Map<String, Object> inputElementCodec;

    public PartialGroupByKeyInstruction withInputElementCodec(java.util.Map<String, Object> inputElementCodec) {
        this.inputElementCodec = inputElementCodec;
        return this;
    }
    
    /**
     * If this instruction includes a combining function this is the name of the intermediate store between the GBK and the CombineValues.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalCombineValuesInputStoreName")
    public String originalCombineValuesInputStoreName;

    public PartialGroupByKeyInstruction withOriginalCombineValuesInputStoreName(String originalCombineValuesInputStoreName) {
        this.originalCombineValuesInputStoreName = originalCombineValuesInputStoreName;
        return this;
    }
    
    /**
     * If this instruction includes a combining function, this is the name of the CombineValues instruction lifted into this instruction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalCombineValuesStepName")
    public String originalCombineValuesStepName;

    public PartialGroupByKeyInstruction withOriginalCombineValuesStepName(String originalCombineValuesStepName) {
        this.originalCombineValuesStepName = originalCombineValuesStepName;
        return this;
    }
    
    /**
     * Zero or more side inputs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sideInputs")
    public SideInputInfo[] sideInputs;

    public PartialGroupByKeyInstruction withSideInputs(SideInputInfo[] sideInputs) {
        this.sideInputs = sideInputs;
        return this;
    }
    
    /**
     * The value combining function to invoke.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valueCombiningFn")
    public java.util.Map<String, Object> valueCombiningFn;

    public PartialGroupByKeyInstruction withValueCombiningFn(java.util.Map<String, Object> valueCombiningFn) {
        this.valueCombiningFn = valueCombiningFn;
        return this;
    }
    
    public PartialGroupByKeyInstruction(){}
}
