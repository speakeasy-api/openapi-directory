<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetDeviceSwitchPortsStatuses200ApplicationJSONCdp - The Cisco Discovery Protocol (CDP) information of the connected device.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetDeviceSwitchPortsStatuses200ApplicationJSONCdp
{
    /**
     * Contains network addresses of both receiving and sending devices.
     * 
     * @var ?string $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $address = null;
    
    /**
     * Identifies the device type, which indicates the functional capabilities of the device.
     * 
     * @var ?string $capabilities
     */
	#[\JMS\Serializer\Annotation\SerializedName('capabilities')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $capabilities = null;
    
    /**
     * Identifies the device name.
     * 
     * @var ?string $deviceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceId = null;
    
    /**
     * The device's management IP.
     * 
     * @var ?string $managementAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('managementAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $managementAddress = null;
    
    /**
     * Indicates, per interface, the assumed VLAN for untagged packets on the interface.
     * 
     * @var ?int $nativeVlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('nativeVlan')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nativeVlan = null;
    
    /**
     * Identifies the hardware platform of the device.
     * 
     * @var ?string $platform
     */
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $platform = null;
    
    /**
     * Identifies the port from which the CDP packet was sent.
     * 
     * @var ?string $portId
     */
	#[\JMS\Serializer\Annotation\SerializedName('portId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $portId = null;
    
    /**
     * The system name.
     * 
     * @var ?string $systemName
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $systemName = null;
    
    /**
     * Contains the device software release information.
     * 
     * @var ?string $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $version = null;
    
    /**
     * Advertises the configured VLAN Trunking Protocl (VTP)-management-domain name of the system.
     * 
     * @var ?string $vtpManagementDomain
     */
	#[\JMS\Serializer\Annotation\SerializedName('vtpManagementDomain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vtpManagementDomain = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->capabilities = null;
		$this->deviceId = null;
		$this->managementAddress = null;
		$this->nativeVlan = null;
		$this->platform = null;
		$this->portId = null;
		$this->systemName = null;
		$this->version = null;
		$this->vtpManagementDomain = null;
	}
}
