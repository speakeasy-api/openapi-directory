/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressInput } from "./addressinput";
import { EmailInput } from "./emailinput";
import { PhoneInput } from "./phoneinput";
import { ServiceBusinessContext } from "./servicebusinesscontext";
import { Expose, Type } from "class-transformer";

/**
 * Verification method.
 */
export enum VerifyLocationRequestMethodEnum {
  VerificationMethodUnspecified = "VERIFICATION_METHOD_UNSPECIFIED",
  Address = "ADDRESS",
  Email = "EMAIL",
  PhoneCall = "PHONE_CALL",
  Sms = "SMS",
  Auto = "AUTO",
}

/**
 * Request message for Verifications.VerifyLocation.
 */
export class VerifyLocationRequest extends SpeakeasyBase {
  /**
   * Input for ADDRESS verification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressInput" })
  @Type(() => AddressInput)
  addressInput?: AddressInput;

  /**
   * Additional data for service business verification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "context" })
  @Type(() => ServiceBusinessContext)
  context?: ServiceBusinessContext;

  /**
   * Input for EMAIL verification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailInput" })
  @Type(() => EmailInput)
  emailInput?: EmailInput;

  /**
   * The BCP 47 language code representing the language that is to be used for the verification process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCode" })
  languageCode?: string;

  /**
   * Verification method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  method?: VerifyLocationRequestMethodEnum;

  /**
   * Input for PHONE_CALL/SMS verification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneInput" })
  @Type(() => PhoneInput)
  phoneInput?: PhoneInput;
}
