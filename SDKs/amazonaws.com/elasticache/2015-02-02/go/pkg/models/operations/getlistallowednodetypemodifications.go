// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListAllowedNodeTypeModificationsActionEnum
type GETListAllowedNodeTypeModificationsActionEnum string

const (
	GETListAllowedNodeTypeModificationsActionEnumListAllowedNodeTypeModifications GETListAllowedNodeTypeModificationsActionEnum = "ListAllowedNodeTypeModifications"
)

func (e GETListAllowedNodeTypeModificationsActionEnum) ToPointer() *GETListAllowedNodeTypeModificationsActionEnum {
	return &e
}

func (e *GETListAllowedNodeTypeModificationsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListAllowedNodeTypeModifications":
		*e = GETListAllowedNodeTypeModificationsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListAllowedNodeTypeModificationsActionEnum: %v", v)
	}
}

// GETListAllowedNodeTypeModificationsVersionEnum
type GETListAllowedNodeTypeModificationsVersionEnum string

const (
	GETListAllowedNodeTypeModificationsVersionEnumTwoThousandAndFifteen0202 GETListAllowedNodeTypeModificationsVersionEnum = "2015-02-02"
)

func (e GETListAllowedNodeTypeModificationsVersionEnum) ToPointer() *GETListAllowedNodeTypeModificationsVersionEnum {
	return &e
}

func (e *GETListAllowedNodeTypeModificationsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2015-02-02":
		*e = GETListAllowedNodeTypeModificationsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListAllowedNodeTypeModificationsVersionEnum: %v", v)
	}
}

type GETListAllowedNodeTypeModificationsRequest struct {
	Action GETListAllowedNodeTypeModificationsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the cluster you want to scale up to a larger node instanced type. ElastiCache uses the cluster id to identify the current node type of this cluster and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>
	CacheClusterID *string `queryParam:"style=form,explode=true,name=CacheClusterId"`
	// <p>The name of the replication group want to scale up to a larger node type. ElastiCache uses the replication group id to identify the current node type being used by this replication group, and from that to create a list of node types you can scale up to.</p> <important> <p>You must provide a value for either the <code>CacheClusterId</code> or the <code>ReplicationGroupId</code>.</p> </important>
	ReplicationGroupID *string                                        `queryParam:"style=form,explode=true,name=ReplicationGroupId"`
	Version            GETListAllowedNodeTypeModificationsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListAllowedNodeTypeModificationsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
