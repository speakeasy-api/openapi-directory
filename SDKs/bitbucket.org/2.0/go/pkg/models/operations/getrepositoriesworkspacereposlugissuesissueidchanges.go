// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetRepositoriesWorkspaceRepoSlugIssuesIssueIDChangesSecurity struct {
	APIKey *string             `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
	Basic  *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	Oauth2 *string             `security:"scheme,type=oauth2,name=Authorization"`
}

type GetRepositoriesWorkspaceRepoSlugIssuesIssueIDChangesRequest struct {
	// The issue id
	IssueID string `pathParam:"style=simple,explode=false,name=issue_id"`
	// Query string to narrow down the response. See
	// [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering) for details.
	Q *string `queryParam:"style=form,explode=true,name=q"`
	// This can either be the repository slug or the UUID of the repository,
	// surrounded by curly-braces, for example: `{repository UUID}`.
	//
	RepoSlug string `pathParam:"style=simple,explode=false,name=repo_slug"`
	// Name of a response property to sort results. See
	// [filtering and sorting](/cloud/bitbucket/rest/intro/#sorting-query-results)
	// for details.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// This can either be the workspace ID (slug) or the workspace UUID
	// surrounded by curly-braces, for example: `{workspace UUID}`.
	//
	Workspace string `pathParam:"style=simple,explode=false,name=workspace"`
}

type GetRepositoriesWorkspaceRepoSlugIssuesIssueIDChangesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The specified repository or issue does not exist or does not have the issue tracker enabled.
	Error map[string]interface{}
	// Returns all the issue changes that were made on the specified issue.
	PaginatedLogEntries *shared.PaginatedLogEntries
}
