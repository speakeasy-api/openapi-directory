"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudmlv1_measurement_metric as shared_googlecloudmlv1_measurement_metric
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudMlV1Measurement:
    r"""A message representing a measurement."""
    
    elapsed_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('elapsedTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time that the trial has been running at the point of this measurement."""  
    metrics: Optional[list[shared_googlecloudmlv1_measurement_metric.GoogleCloudMlV1MeasurementMetric]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""Provides a list of metrics that act as inputs into the objective function."""  
    step_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stepCount'), 'exclude': lambda f: f is None }})
    r"""The number of steps a machine learning model has been trained for. Must be non-negative."""  
    