"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import netlicensing as shared_netlicensing
from typing import Optional


@dataclasses.dataclass
class CreateLicenseeSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateLicenseeRequestBody:
    
    active: bool = dataclasses.field(metadata={'form': { 'field_name': 'active' }})
    r"""If set to 'false', the Licensee is disabled. Licensee can not obtain new Licenses, and validation is disabled"""  
    product_number: str = dataclasses.field(metadata={'form': { 'field_name': 'productNumber' }})
    r"""'productNumber' to assign new Licensee object"""  
    marked_for_transfer: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'markedForTransfer' }})
    r"""Mark Licensee for transfer."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'name' }})  
    number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'number' }})
    r"""Unique number (across all Products of a Vendor) that identifies the Licensee. Vendor can assign this number when creating a Licensee or let NetLicensing generate one. Read-only after creation of the first License for the Licensee"""  
    

@dataclasses.dataclass
class CreateLicenseeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    netlicensing: Optional[shared_netlicensing.Netlicensing] = dataclasses.field(default=None)
    r"""Successful request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    