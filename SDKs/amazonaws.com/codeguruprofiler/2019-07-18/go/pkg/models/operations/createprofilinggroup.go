// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateProfilingGroupRequestBodyAgentOrchestrationConfig -  Specifies whether profiling is enabled or disabled for a profiling group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling group.
type CreateProfilingGroupRequestBodyAgentOrchestrationConfig struct {
	ProfilingEnabled *bool `json:"profilingEnabled,omitempty"`
}

// CreateProfilingGroupRequestBodyComputePlatformEnum -  The compute platform of the profiling group. Use <code>AWSLambda</code> if your application runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, <code>Default</code> is used.
type CreateProfilingGroupRequestBodyComputePlatformEnum string

const (
	CreateProfilingGroupRequestBodyComputePlatformEnumDefault   CreateProfilingGroupRequestBodyComputePlatformEnum = "Default"
	CreateProfilingGroupRequestBodyComputePlatformEnumAwsLambda CreateProfilingGroupRequestBodyComputePlatformEnum = "AWSLambda"
)

func (e *CreateProfilingGroupRequestBodyComputePlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "AWSLambda":
		*e = CreateProfilingGroupRequestBodyComputePlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProfilingGroupRequestBodyComputePlatformEnum: %s", s)
	}
}

type CreateProfilingGroupRequestBody struct {
	//  Specifies whether profiling is enabled or disabled for a profiling group. It is used by <a href="https://docs.aws.amazon.com/codeguru/latest/profiler-api/API_ConfigureAgent.html"> <code>ConfigureAgent</code> </a> to enable or disable profiling for a profiling group.
	AgentOrchestrationConfig *CreateProfilingGroupRequestBodyAgentOrchestrationConfig `json:"agentOrchestrationConfig,omitempty"`
	//  The compute platform of the profiling group. Use <code>AWSLambda</code> if your application runs on AWS Lambda. Use <code>Default</code> if your application runs on a compute platform that is not AWS Lambda, such an Amazon EC2 instance, an on-premises server, or a different platform. If not specified, <code>Default</code> is used.
	ComputePlatform *CreateProfilingGroupRequestBodyComputePlatformEnum `json:"computePlatform,omitempty"`
	// The name of the profiling group to create.
	ProfilingGroupName string `json:"profilingGroupName"`
	//  A list of tags to add to the created profiling group.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateProfilingGroupRequest struct {
	RequestBody       CreateProfilingGroupRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	//  Amazon CodeGuru Profiler uses this universally unique identifier (UUID) to prevent the accidental creation of duplicate profiling groups if there are failures and retries.
	ClientToken string `queryParam:"style=form,explode=true,name=clientToken"`
}

type CreateProfilingGroupResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateProfilingGroupResponse *shared.CreateProfilingGroupResponse
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
