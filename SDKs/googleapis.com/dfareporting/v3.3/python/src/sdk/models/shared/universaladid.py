"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UniversalAdIDRegistryEnum(str, Enum):
    r"""Registry used for the Ad ID value."""
    OTHER = 'OTHER'
    AD_ID_ORG = 'AD_ID.ORG'
    CLEARCAST = 'CLEARCAST'
    DCM = 'DCM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UniversalAdID:
    r"""A Universal Ad ID as per the VAST 4.0 spec. Applicable to the following creative types: INSTREAM_AUDIO, INSTREAM_VIDEO and VPAID."""
    
    registry: Optional[UniversalAdIDRegistryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registry'), 'exclude': lambda f: f is None }})
    r"""Registry used for the Ad ID value."""  
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""ID value for this creative. Only alphanumeric characters and the following symbols are valid: \\"_/\-\\". Maximum length is 64 characters. Read only when registry is DCM."""  
    