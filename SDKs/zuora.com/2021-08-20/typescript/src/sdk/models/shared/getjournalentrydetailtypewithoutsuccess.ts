/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GETJournalEntryItemType } from "./getjournalentryitemtype";
import { GETJournalEntrySegmentType } from "./getjournalentrysegmenttype";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Status of journal entry.
 */
export enum GETJournalEntryDetailTypeWithoutSuccessStatusEnum {
  Created = "Created",
  Cancelled = "Cancelled",
}

/**
 * Status shows whether the journal entry has been transferred to an accounting system.
 */
export enum GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum {
  No = "No",
  Processing = "Processing",
  Yes = "Yes",
  Error = "Error",
  Ignore = "Ignore",
}

/**
 * Container for custom fields of a Journal Entry object.
 *
 * @remarks
 *
 */
export class GETJournalEntryDetailTypeWithoutSuccess extends SpeakeasyBase {
  /**
   * Name of the accounting period that the journal entry belongs to.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountingPeriodName" })
  accountingPeriodName?: string;

  /**
   * Returns true if the journal entry is aggregating currencies. That is, if the journal entry was created when the `Aggregate transactions with different currencies during a JournalRun` setting was configured to "Yes". Otherwise, returns `false`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregateCurrency" })
  aggregateCurrency?: boolean;

  /**
   * Currency used.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Home currency used.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "homeCurrency" })
  homeCurrency?: string;

  /**
   * Date of the journal entry.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "journalEntryDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  journalEntryDate?: Date;

  /**
   * Key name that represents the list of journal entry items.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETJournalEntryItemType })
  @Expose({ name: "journalEntryItems" })
  @Type(() => GETJournalEntryItemType)
  journalEntryItems?: GETJournalEntryItemType[];

  /**
   * Additional information about this record.
   *
   * @remarks
   * Character limit: 2,000
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * Journal entry number in the format JE-00000001.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * List of segments that apply to the summary journal entry.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ elemType: GETJournalEntrySegmentType })
  @Expose({ name: "segments" })
  @Type(() => GETJournalEntrySegmentType)
  segments?: GETJournalEntrySegmentType[];

  /**
   * Status of journal entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: GETJournalEntryDetailTypeWithoutSuccessStatusEnum;

  /**
   * End date of time period included in the journal entry.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timePeriodEnd" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timePeriodEnd?: Date;

  /**
   * Start date of time period included in the journal entry.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timePeriodStart" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timePeriodStart?: Date;

  /**
   * Transaction type of the transactions included in the summary journal entry.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionType" })
  transactionType?: string;

  /**
   * Date and time that transferredToAccounting was changed to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transferDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  transferDateTime?: Date;

  /**
   * User ID of the person who changed transferredToAccounting to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transferredBy" })
  transferredBy?: string;

  /**
   * Status shows whether the journal entry has been transferred to an accounting system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transferredToAccounting" })
  transferredToAccounting?: GETJournalEntryDetailTypeWithoutSuccessTransferredToAccountingEnum;
}
