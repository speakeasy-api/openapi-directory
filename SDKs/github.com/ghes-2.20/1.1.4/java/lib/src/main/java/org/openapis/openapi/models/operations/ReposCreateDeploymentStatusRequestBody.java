/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ReposCreateDeploymentStatusRequestBody {
    /**
     * Adds a new `inactive` status to all prior non-transient, non-production environment deployments with the same repository and `environment` name as the created status's deployment. An `inactive` status is only added to deployments that had a `success` state. Default: `true`  
     * **Note:** To add an `inactive` status to `production` environments, you must use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#deployment-statuses) custom media type.  
     * **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#enhanced-deployments) custom media type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("auto_inactive")
    public Boolean autoInactive;
    public ReposCreateDeploymentStatusRequestBody withAutoInactive(Boolean autoInactive) {
        this.autoInactive = autoInactive;
        return this;
    }
    
    /**
     * A short description of the status. The maximum description length is 140 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ReposCreateDeploymentStatusRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Name for the target deployment environment, which can be changed when setting a deploy status. For example, `production`, `staging`, or `qa`. **Note:** This parameter requires you to use the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#deployment-statuses) custom media type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public ReposCreateDeploymentStatusRequestBodyEnvironmentEnum environment;
    public ReposCreateDeploymentStatusRequestBody withEnvironment(ReposCreateDeploymentStatusRequestBodyEnvironmentEnum environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * Sets the URL for accessing your environment. Default: `""`  
     * **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#enhanced-deployments) custom media type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment_url")
    public String environmentUrl;
    public ReposCreateDeploymentStatusRequestBody withEnvironmentUrl(String environmentUrl) {
        this.environmentUrl = environmentUrl;
        return this;
    }
    
    /**
     * The full URL of the deployment's output. This parameter replaces `target_url`. We will continue to accept `target_url` to support legacy uses, but we recommend replacing `target_url` with `log_url`. Setting `log_url` will automatically set `target_url` to the same value. Default: `""`  
     * **Note:** This parameter requires you to use the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#enhanced-deployments) custom media type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("log_url")
    public String logUrl;
    public ReposCreateDeploymentStatusRequestBody withLogUrl(String logUrl) {
        this.logUrl = logUrl;
        return this;
    }
    
    /**
     * The state of the status. Can be one of `error`, `failure`, `inactive`, `in_progress`, `queued` `pending`, or `success`. **Note:** To use the `inactive` state, you must provide the [`application/vnd.github.ant-man-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#enhanced-deployments) custom media type. To use the `in_progress` and `queued` states, you must provide the [`application/vnd.github.flash-preview+json`](https://docs.github.com/enterprise-server@2.20/rest/overview/api-previews#deployment-statuses) custom media type. When you set a transient deployment to `inactive`, the deployment will be shown as `destroyed` in GitHub.
     */
    @JsonProperty("state")
    public ReposCreateDeploymentStatusRequestBodyStateEnum state;
    public ReposCreateDeploymentStatusRequestBody withState(ReposCreateDeploymentStatusRequestBodyStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. **Note:** It's recommended to use the `log_url` parameter, which replaces `target_url`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_url")
    public String targetUrl;
    public ReposCreateDeploymentStatusRequestBody withTargetUrl(String targetUrl) {
        this.targetUrl = targetUrl;
        return this;
    }
    
}
