/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchOrdersSort - Sorting criteria for a `SearchOrders` request. Results can only be sorted
 * by a timestamp field.
 */
public class SearchOrdersSort {
    /**
     * The field to sort by.
     * 
     * __Important:__ When using a [DateTimeFilter](https://developer.squareup.com/reference/square_2021-08-18/objects/SearchOrdersFilter),
     * `sort_field` must match the timestamp field that the `DateTimeFilter` uses to
     * filter. For example, if you set your `sort_field` to `CLOSED_AT` and you use a
     * `DateTimeFilter`, your `DateTimeFilter` must filter for orders by their `CLOSED_AT` date.
     * If this field does not match the timestamp field in `DateTimeFilter`,
     * `SearchOrders` returns an error.
     * 
     * Default: `CREATED_AT`.
     */
    @JsonProperty("sort_field")
    public String sortField;
    public SearchOrdersSort withSortField(String sortField) {
        this.sortField = sortField;
        return this;
    }
    
    /**
     * The chronological order in which results are returned. Defaults to `DESC`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort_order")
    public String sortOrder;
    public SearchOrdersSort withSortOrder(String sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
}
