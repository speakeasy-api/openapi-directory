// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum - Count-based metric type. Only one of type or count_type is specified in each Metric.
type GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum string

const (
	GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnumCountTypeUnspecified GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum = "COUNT_TYPE_UNSPECIFIED"
	GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnumTotalNoMatchCount    GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum = "TOTAL_NO_MATCH_COUNT"
	GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnumTotalTurnCount       GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum = "TOTAL_TURN_COUNT"
	GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnumAverageTurnCount     GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum = "AVERAGE_TURN_COUNT"
)

func (e *GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COUNT_TYPE_UNSPECIFIED":
		fallthrough
	case "TOTAL_NO_MATCH_COUNT":
		fallthrough
	case "TOTAL_TURN_COUNT":
		fallthrough
	case "AVERAGE_TURN_COUNT":
		*e = GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum: %s", s)
	}
}

// GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum - Ratio-based metric type. Only one of type or count_type is specified in each Metric.
type GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum string

const (
	GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnumMetricUnspecified              GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum = "METRIC_UNSPECIFIED"
	GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnumContainedSessionNoCallbackRate GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum = "CONTAINED_SESSION_NO_CALLBACK_RATE"
	GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnumLiveAgentHandoffRate           GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum = "LIVE_AGENT_HANDOFF_RATE"
	GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnumCallbackSessionRate            GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum = "CALLBACK_SESSION_RATE"
	GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnumAbandonedSessionRate           GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum = "ABANDONED_SESSION_RATE"
	GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnumSessionEndRate                 GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum = "SESSION_END_RATE"
)

func (e *GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_UNSPECIFIED":
		fallthrough
	case "CONTAINED_SESSION_NO_CALLBACK_RATE":
		fallthrough
	case "LIVE_AGENT_HANDOFF_RATE":
		fallthrough
	case "CALLBACK_SESSION_RATE":
		fallthrough
	case "ABANDONED_SESSION_RATE":
		fallthrough
	case "SESSION_END_RATE":
		*e = GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum: %s", s)
	}
}

// GoogleCloudDialogflowCxV3ExperimentResultMetric - Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3ExperimentResultMetric struct {
	// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
	ConfidenceInterval *GoogleCloudDialogflowCxV3ExperimentResultConfidenceInterval `json:"confidenceInterval,omitempty"`
	// Count value of a metric.
	Count *float64 `json:"count,omitempty"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType *GoogleCloudDialogflowCxV3ExperimentResultMetricCountTypeEnum `json:"countType,omitempty"`
	// Ratio value of a metric.
	Ratio *float64 `json:"ratio,omitempty"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type *GoogleCloudDialogflowCxV3ExperimentResultMetricTypeEnum `json:"type,omitempty"`
}
