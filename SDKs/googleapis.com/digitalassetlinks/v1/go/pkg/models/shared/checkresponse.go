// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CheckResponseErrorCodeEnum string

const (
	CheckResponseErrorCodeEnumErrorCodeUnspecified                 CheckResponseErrorCodeEnum = "ERROR_CODE_UNSPECIFIED"
	CheckResponseErrorCodeEnumErrorCodeInvalidQuery                CheckResponseErrorCodeEnum = "ERROR_CODE_INVALID_QUERY"
	CheckResponseErrorCodeEnumErrorCodeFetchError                  CheckResponseErrorCodeEnum = "ERROR_CODE_FETCH_ERROR"
	CheckResponseErrorCodeEnumErrorCodeFailedSslValidation         CheckResponseErrorCodeEnum = "ERROR_CODE_FAILED_SSL_VALIDATION"
	CheckResponseErrorCodeEnumErrorCodeRedirect                    CheckResponseErrorCodeEnum = "ERROR_CODE_REDIRECT"
	CheckResponseErrorCodeEnumErrorCodeTooLarge                    CheckResponseErrorCodeEnum = "ERROR_CODE_TOO_LARGE"
	CheckResponseErrorCodeEnumErrorCodeMalformedHTTPResponse       CheckResponseErrorCodeEnum = "ERROR_CODE_MALFORMED_HTTP_RESPONSE"
	CheckResponseErrorCodeEnumErrorCodeWrongContentType            CheckResponseErrorCodeEnum = "ERROR_CODE_WRONG_CONTENT_TYPE"
	CheckResponseErrorCodeEnumErrorCodeMalformedContent            CheckResponseErrorCodeEnum = "ERROR_CODE_MALFORMED_CONTENT"
	CheckResponseErrorCodeEnumErrorCodeSecureAssetIncludesInsecure CheckResponseErrorCodeEnum = "ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE"
	CheckResponseErrorCodeEnumErrorCodeFetchBudgetExhausted        CheckResponseErrorCodeEnum = "ERROR_CODE_FETCH_BUDGET_EXHAUSTED"
)

func (e CheckResponseErrorCodeEnum) ToPointer() *CheckResponseErrorCodeEnum {
	return &e
}

func (e *CheckResponseErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR_CODE_UNSPECIFIED":
		fallthrough
	case "ERROR_CODE_INVALID_QUERY":
		fallthrough
	case "ERROR_CODE_FETCH_ERROR":
		fallthrough
	case "ERROR_CODE_FAILED_SSL_VALIDATION":
		fallthrough
	case "ERROR_CODE_REDIRECT":
		fallthrough
	case "ERROR_CODE_TOO_LARGE":
		fallthrough
	case "ERROR_CODE_MALFORMED_HTTP_RESPONSE":
		fallthrough
	case "ERROR_CODE_WRONG_CONTENT_TYPE":
		fallthrough
	case "ERROR_CODE_MALFORMED_CONTENT":
		fallthrough
	case "ERROR_CODE_SECURE_ASSET_INCLUDES_INSECURE":
		fallthrough
	case "ERROR_CODE_FETCH_BUDGET_EXHAUSTED":
		*e = CheckResponseErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckResponseErrorCodeEnum: %v", v)
	}
}

// CheckResponse - Response message for the CheckAssetLinks call.
type CheckResponse struct {
	// Human-readable message containing information intended to help end users understand, reproduce and debug the result. The message will be in English and we are currently not planning to offer any translations. Please note that no guarantees are made about the contents or format of this string. Any aspect of it may be subject to change without notice. You should not attempt to programmatically parse this data. For programmatic access, use the error_code field below.
	DebugString *string `json:"debugString,omitempty"`
	// Error codes that describe the result of the Check operation.
	ErrorCode []CheckResponseErrorCodeEnum `json:"errorCode,omitempty"`
	// Set to true if the assets specified in the request are linked by the relation specified in the request.
	Linked *bool `json:"linked,omitempty"`
	// From serving time, how much longer the response should be considered valid barring further updates. REQUIRED
	MaxAge *string `json:"maxAge,omitempty"`
}
