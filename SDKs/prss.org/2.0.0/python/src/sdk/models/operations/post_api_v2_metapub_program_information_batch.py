"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import programinformationbatch as shared_programinformationbatch
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PostAPIV2MetapubProgramInformationBatchSecurity:
    
    cd_oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class PostAPIV2MetapubProgramInformationBatchRequestBodyFormatEnum(str, Enum):
    r"""The format of the metadata file defining the create or update actions to be performed on one or more EPG programs. For more information on how RadioDNS EPG maps to ContentDepot <a href=\\"/api/epg-cd-mapping.html\\">click here </a>"""
    RADIODNS = 'radiodns'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPIV2MetapubProgramInformationBatchRequestBodyProgram:
    r"""The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly."""
    
    air_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('airDate') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPIV2MetapubProgramInformationBatchRequestBody:
    r"""The batch operation definition."""
    
    format: PostAPIV2MetapubProgramInformationBatchRequestBodyFormatEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format') }})
    r"""The format of the metadata file defining the create or update actions to be performed on one or more EPG programs. For more information on how RadioDNS EPG maps to ContentDepot <a href=\\"/api/epg-cd-mapping.html\\">click here </a>"""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The URI to the metadata file. Currently only the ```cddrive``` scheme is supported."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""An optional human readable name for the batch."""  
    program: Optional[PostAPIV2MetapubProgramInformationBatchRequestBodyProgram] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('program'), 'exclude': lambda f: f is None }})
    r"""The program information to associate the ingested metadata with. This is only required if the metadata format doesn't provide the program title and air date information directly."""  
    

@dataclasses.dataclass
class PostAPIV2MetapubProgramInformationBatchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    program_information_batch: Optional[shared_programinformationbatch.ProgramInformationBatch] = dataclasses.field(default=None)
    r"""The accepted batch information that is queued for processing."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    