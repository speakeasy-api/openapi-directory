"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import events_v1_sink as shared_events_v1_sink
from ..shared import sink_enum_sink_type_enum as shared_sink_enum_sink_type_enum
from typing import Any, Optional

CREATE_SINK_SERVERS = [
	"https://events.twilio.com",
]


@dataclasses.dataclass
class CreateSinkSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateSinkCreateSinkRequest:
    
    description: str = dataclasses.field(metadata={'form': { 'field_name': 'Description' }})
    r"""A human readable description for the Sink **This value should not contain PII.**"""  
    sink_configuration: Any = dataclasses.field(metadata={'form': { 'field_name': 'SinkConfiguration' }})
    r"""The information required for Twilio to connect to the provided Sink encoded as JSON."""  
    sink_type: shared_sink_enum_sink_type_enum.SinkEnumSinkTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'SinkType' }})  
    

@dataclasses.dataclass
class CreateSinkResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    events_v1_sink: Optional[shared_events_v1_sink.EventsV1Sink] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    