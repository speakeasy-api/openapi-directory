"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class TargetFrequencyTimeUnitEnum(str, Enum):
    r"""The unit of time in which the target frequency will be applied. The following time unit is applicable: * `TIME_UNIT_WEEKS`"""
    TIME_UNIT_UNSPECIFIED = 'TIME_UNIT_UNSPECIFIED'
    TIME_UNIT_LIFETIME = 'TIME_UNIT_LIFETIME'
    TIME_UNIT_MONTHS = 'TIME_UNIT_MONTHS'
    TIME_UNIT_WEEKS = 'TIME_UNIT_WEEKS'
    TIME_UNIT_DAYS = 'TIME_UNIT_DAYS'
    TIME_UNIT_HOURS = 'TIME_UNIT_HOURS'
    TIME_UNIT_MINUTES = 'TIME_UNIT_MINUTES'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetFrequency:
    r"""Setting that controls the average number of times the ads will show to the same person over a certain period of time."""
    
    target_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetCount'), 'exclude': lambda f: f is None }})
    r"""The target number of times, on average, the ads will be shown to the same person in the timespan dictated by time_unit and time_unit_count."""  
    time_unit: Optional[TargetFrequencyTimeUnitEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeUnit'), 'exclude': lambda f: f is None }})
    r"""The unit of time in which the target frequency will be applied. The following time unit is applicable: * `TIME_UNIT_WEEKS`"""  
    time_unit_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeUnitCount'), 'exclude': lambda f: f is None }})
    r"""The number of time_unit the target frequency will last. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_WEEKS` - must be 1"""  
    