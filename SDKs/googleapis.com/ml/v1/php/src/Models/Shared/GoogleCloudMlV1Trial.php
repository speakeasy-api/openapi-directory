<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudMlV1Trial - A message representing a trial.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudMlV1Trial
{
    /**
     * Output only. The identifier of the client that originally requested this trial.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Output only. Time at which the trial's status changed to COMPLETED.
     * 
     * @var ?string $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endTime = null;
    
    /**
     * A message representing a measurement.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1Measurement $finalMeasurement
     */
	#[\JMS\Serializer\Annotation\SerializedName('finalMeasurement')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1Measurement')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudMlV1Measurement $finalMeasurement = null;
    
    /**
     * Output only. A human readable string describing why the trial is infeasible. This should only be set if trial_infeasible is true.
     * 
     * @var ?string $infeasibleReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('infeasibleReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $infeasibleReason = null;
    
    /**
     * A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1Measurement> $measurements
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurements')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1Measurement>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $measurements = null;
    
    /**
     * Output only. Name of the trial assigned by the service.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The parameters of the trial.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1TrialParameter> $parameters
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1TrialParameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameters = null;
    
    /**
     * Output only. Time at which the trial was started.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * The detailed state of a trial.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1TrialStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudMlV1TrialStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudMlV1TrialStateEnum $state = null;
    
    /**
     * Output only. If true, the parameters in this trial are not attempted again.
     * 
     * @var ?bool $trialInfeasible
     */
	#[\JMS\Serializer\Annotation\SerializedName('trialInfeasible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $trialInfeasible = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->endTime = null;
		$this->finalMeasurement = null;
		$this->infeasibleReason = null;
		$this->measurements = null;
		$this->name = null;
		$this->parameters = null;
		$this->startTime = null;
		$this->state = null;
		$this->trialInfeasible = null;
	}
}
