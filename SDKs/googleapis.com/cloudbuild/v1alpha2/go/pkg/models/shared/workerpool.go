// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkerPoolInput - Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.
type WorkerPoolInput struct {
	// Network describes the network configuration for a `WorkerPool`.
	NetworkConfig *NetworkConfig `json:"networkConfig,omitempty"`
	// Required. Immutable. The region where the `WorkerPool` runs. Only "us-central1" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.
	Region *string `json:"region,omitempty"`
	// WorkerConfig defines the configuration to be used for a creating workers in the pool.
	WorkerConfig *WorkerConfig `json:"workerConfig,omitempty"`
}

// WorkerPoolStateEnum - Output only. WorkerPool state.
type WorkerPoolStateEnum string

const (
	WorkerPoolStateEnumStateUnspecified WorkerPoolStateEnum = "STATE_UNSPECIFIED"
	WorkerPoolStateEnumCreating         WorkerPoolStateEnum = "CREATING"
	WorkerPoolStateEnumRunning          WorkerPoolStateEnum = "RUNNING"
	WorkerPoolStateEnumDeleting         WorkerPoolStateEnum = "DELETING"
	WorkerPoolStateEnumDeleted          WorkerPoolStateEnum = "DELETED"
)

func (e *WorkerPoolStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = WorkerPoolStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkerPoolStateEnum: %s", s)
	}
}

// WorkerPool - Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.
type WorkerPool struct {
	// Output only. Time at which the request to create the `WorkerPool` was received.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Time at which the request to delete the `WorkerPool` was received.
	DeleteTime *string `json:"deleteTime,omitempty"`
	// Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.
	Name *string `json:"name,omitempty"`
	// Network describes the network configuration for a `WorkerPool`.
	NetworkConfig *NetworkConfig `json:"networkConfig,omitempty"`
	// Required. Immutable. The region where the `WorkerPool` runs. Only "us-central1" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.
	Region *string `json:"region,omitempty"`
	// Output only. WorkerPool state.
	State *WorkerPoolStateEnum `json:"state,omitempty"`
	// Output only. Time at which the request to update the `WorkerPool` was received.
	UpdateTime *string `json:"updateTime,omitempty"`
	// WorkerConfig defines the configuration to be used for a creating workers in the pool.
	WorkerConfig *WorkerConfig `json:"workerConfig,omitempty"`
}
