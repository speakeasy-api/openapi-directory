// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeLocationsXAmzTargetEnum
type DescribeLocationsXAmzTargetEnum string

const (
	DescribeLocationsXAmzTargetEnumOvertureServiceDescribeLocations DescribeLocationsXAmzTargetEnum = "OvertureService.DescribeLocations"
)

func (e *DescribeLocationsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OvertureService.DescribeLocations":
		*e = DescribeLocationsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeLocationsXAmzTargetEnum: %s", s)
	}
}

type DescribeLocationsRequest struct {
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeLocationsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeLocationsResponse struct {
	ContentType string
	// DirectConnectClientException
	DirectConnectClientException interface{}
	// DirectConnectServerException
	DirectConnectServerException interface{}
	// Success
	Locations   *shared.Locations
	StatusCode  int
	RawResponse *http.Response
}
