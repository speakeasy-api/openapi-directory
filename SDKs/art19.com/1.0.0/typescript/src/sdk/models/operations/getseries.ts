/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetSeriesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey: string;
}

export enum GetSeriesSortEnum {
  CreatedAt = "created_at",
  EpisodeReleasedAt = "episode_released_at",
  SortTitle = "sort_title",
  Title = "title",
  UpdatedAt = "updated_at",
}

export class GetSeriesRequest extends SpeakeasyBase {
  /**
   * Limit the result to series with an ad deal of this Ad Ops profile.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ad_rep_account_id",
  })
  adRepAccountId?: string;

  /**
   * The list of IDs to filter by. Repeat this parameter for each ID you want to include in the filter.
   *
   * @remarks
   * The brackets *MUST* be percent-encoded, per the requirements in
   * [RFC 3986 § 3.4](https://tools.ietf.org/html/rfc3986#section-3.4).
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ids[]" })
  ids?: string[];

  /**
   * Limit the result to series owned by this network.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=network_id",
  })
  networkId?: string;

  /**
   * Select which page number to receive results for. Pages are numbered starting at 1.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[number]",
  })
  pageNumber?: number;

  /**
   * Indicate how many records to return per page. The maximum is 100.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page[size]",
  })
  pageSize?: number;

  /**
   * Limit the result to series with a title or slug containing this parameter in a case-insensitive way.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   * Specify how to sort the result. Please refer to either the top section or the
   *
   * @remarks
   * [JSON:API specification](https://jsonapi.org/format/#fetching-sorting) on how sorting works in general.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=sort" })
  sort?: GetSeriesSortEnum[];
}

/**
 * An object containing references to the source of the error, optionally including any of the following members.
 *
 * @remarks
 *
 */
export class GetSeries400ApplicationVndApiPlusJsonErrorsSource extends SpeakeasyBase {
  /**
   * A string indicating which URI query parameter caused the error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;

  /**
   * A JSON Pointer [RFC6901](https://tools.ietf.org/html/rfc6901) to the associated entity in the request document (e.g. `/data` for a primary data object, or `/data/attributes/title` for a specific attribute).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pointer" })
  pointer?: string;
}

export class GetSeries400ApplicationVndApiPlusJsonErrors extends SpeakeasyBase {
  /**
   * An application-specific error code, expressed as a string value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * A human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  /**
   * An object containing references to the source of the error, optionally including any of the following members.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => GetSeries400ApplicationVndApiPlusJsonErrorsSource)
  source?: GetSeries400ApplicationVndApiPlusJsonErrorsSource;

  /**
   * The HTTP status code applicable to this problem, expressed as a string value: 400
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the
   *
   * @remarks
   * problem, except for purposes of localization.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

/**
 * Bad Request
 *
 * @remarks
 *
 * Parameters requiring a specific format must adhere to that format.
 * Pagination must have a positive page number and a page size no larger than 100.
 *
 */
export class GetSeries400ApplicationVndApiPlusJson extends SpeakeasyBase {
  /**
   * An error object describing the problem. Please check out the
   *
   * @remarks
   * [JSON:API Error document reference](https://jsonapi.org/format/#error-objects) for a full
   * description of the returned object.
   *
   */
  @SpeakeasyMetadata({ elemType: GetSeries400ApplicationVndApiPlusJsonErrors })
  @Expose({ name: "errors" })
  @Type(() => GetSeries400ApplicationVndApiPlusJsonErrors)
  errors?: GetSeries400ApplicationVndApiPlusJsonErrors[];
}

/**
 * Success
 */
export class GetSeries200ApplicationVndApiPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Series })
  @Expose({ name: "data" })
  @Type(() => shared.Series)
  data?: shared.Series[];

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  @Type(() => shared.Links)
  links?: shared.Links;
}

export class GetSeriesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getSeries200ApplicationVndApiPlusJsonObject?: GetSeries200ApplicationVndApiPlusJson;

  /**
   * Bad Request
   *
   * @remarks
   *
   * Parameters requiring a specific format must adhere to that format.
   * Pagination must have a positive page number and a page size no larger than 100.
   *
   */
  @SpeakeasyMetadata()
  getSeries400ApplicationVndApiPlusJsonObject?: GetSeries400ApplicationVndApiPlusJson;
}
