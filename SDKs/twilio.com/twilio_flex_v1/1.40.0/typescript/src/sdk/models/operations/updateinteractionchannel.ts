/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateInteractionChannelServerList = [
  "https://flex-api.twilio.com",
] as const;

export class UpdateInteractionChannelSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateInteractionChannelUpdateInteractionChannelRequest extends SpeakeasyBase {
  /**
   * Optional. The state of associated tasks. If not specified, all tasks will be set to `wrapping`.
   */
  @SpeakeasyMetadata({ data: "form, name=Routing" })
  routing?: any;

  @SpeakeasyMetadata({ data: "form, name=Status" })
  status: shared.InteractionChannelEnumStatusEnum;
}

export class UpdateInteractionChannelRequest extends SpeakeasyBase {
  /**
   * The unique string created by Twilio to identify an Interaction resource, prefixed with KD.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=InteractionSid",
  })
  interactionSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateInteractionChannelUpdateInteractionChannelRequest;

  /**
   * The unique string created by Twilio to identify an Interaction Channel resource, prefixed with UO.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateInteractionChannelResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  flexV1InteractionInteractionChannel?: shared.FlexV1InteractionInteractionChannel;
}
