/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UsersUpdateOrgRoleSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The user's role in the organizatiion
 */
export enum UsersUpdateOrgRoleRequestBodyRoleEnum {
  Admin = "admin",
  Collaborator = "collaborator",
  Member = "member",
}

export class UsersUpdateOrgRoleRequestBody extends SpeakeasyBase {
  /**
   * The user's role in the organizatiion
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: UsersUpdateOrgRoleRequestBodyRoleEnum;
}

export class UsersUpdateOrgRoleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UsersUpdateOrgRoleRequestBody;

  /**
   * The organization's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=org_name",
  })
  orgName: string;

  /**
   * The slug name of the user
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=user_name",
  })
  userName: string;
}

export enum UsersUpdateOrgRoleDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class UsersUpdateOrgRoleDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: UsersUpdateOrgRoleDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class UsersUpdateOrgRoleDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => UsersUpdateOrgRoleDefaultApplicationJSONError)
  error: UsersUpdateOrgRoleDefaultApplicationJSONError;
}

/**
 * Success
 */
export class UsersUpdateOrgRole200ApplicationJSON extends SpeakeasyBase {
  /**
   * The full name of the user. Might for example be first and last name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The email address of the user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The date when the user joined the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "joined_at" })
  joinedAt: string;

  /**
   * The unique name that is used to identify the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The role the user has within the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role: string;
}

export class UsersUpdateOrgRoleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  usersUpdateOrgRole200ApplicationJSONObject?: UsersUpdateOrgRole200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  usersUpdateOrgRoleDefaultApplicationJSONObject?: UsersUpdateOrgRoleDefaultApplicationJSON;
}
