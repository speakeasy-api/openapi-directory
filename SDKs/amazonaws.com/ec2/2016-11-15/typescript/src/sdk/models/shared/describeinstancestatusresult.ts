/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The event code.
 */
export enum DescribeInstanceStatusResultInstanceStatusesEventsCodeEnum {
  InstanceReboot = "instance-reboot",
  SystemReboot = "system-reboot",
  SystemMaintenance = "system-maintenance",
  InstanceRetirement = "instance-retirement",
  InstanceStop = "instance-stop",
}

/**
 * Describes a scheduled event for an instance.
 */
export class DescribeInstanceStatusResultInstanceStatusesEvents extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: DescribeInstanceStatusResultInstanceStatusesEventsCodeEnum;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  instanceEventId?: string;

  @SpeakeasyMetadata()
  notAfter?: Date;

  @SpeakeasyMetadata()
  notBefore?: Date;

  @SpeakeasyMetadata()
  notBeforeDeadline?: Date;
}

/**
 * The current state of the instance.
 */
export enum DescribeInstanceStatusResultInstanceStatusesInstanceStateNameEnum {
  Pending = "pending",
  Running = "running",
  ShuttingDown = "shutting-down",
  Terminated = "terminated",
  Stopping = "stopping",
  Stopped = "stopped",
}

/**
 * The intended state of the instance. <a>DescribeInstanceStatus</a> requires that an instance be in the <code>running</code> state.
 */
export class DescribeInstanceStatusResultInstanceStatusesInstanceState extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: number;

  @SpeakeasyMetadata()
  name?: DescribeInstanceStatusResultInstanceStatusesInstanceStateNameEnum;
}

/**
 * The type of instance status.
 */
export enum DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsNameEnum {
  Reachability = "reachability",
}

/**
 * The status.
 */
export enum DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsStatusEnum {
  Passed = "passed",
  Failed = "failed",
  InsufficientData = "insufficient-data",
  Initializing = "initializing",
}

/**
 * Describes the instance status.
 */
export class DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  impairedSince?: Date;

  @SpeakeasyMetadata()
  name?: DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsNameEnum;

  @SpeakeasyMetadata()
  status?: DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetailsStatusEnum;
}

/**
 * The status.
 */
export enum DescribeInstanceStatusResultInstanceStatusesInstanceStatusStatusEnum {
  Ok = "ok",
  Impaired = "impaired",
  InsufficientData = "insufficient-data",
  NotApplicable = "not-applicable",
  Initializing = "initializing",
}

/**
 * Reports impaired functionality that stems from issues internal to the instance, such as impaired reachability.
 */
export class DescribeInstanceStatusResultInstanceStatusesInstanceStatus extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetails,
  })
  details?: DescribeInstanceStatusResultInstanceStatusesInstanceStatusDetails[];

  @SpeakeasyMetadata()
  status?: DescribeInstanceStatusResultInstanceStatusesInstanceStatusStatusEnum;
}

/**
 * The type of instance status.
 */
export enum DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsNameEnum {
  Reachability = "reachability",
}

/**
 * The status.
 */
export enum DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsStatusEnum {
  Passed = "passed",
  Failed = "failed",
  InsufficientData = "insufficient-data",
  Initializing = "initializing",
}

/**
 * Describes the instance status.
 */
export class DescribeInstanceStatusResultInstanceStatusesSystemStatusDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  impairedSince?: Date;

  @SpeakeasyMetadata()
  name?: DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsNameEnum;

  @SpeakeasyMetadata()
  status?: DescribeInstanceStatusResultInstanceStatusesSystemStatusDetailsStatusEnum;
}

/**
 * The status.
 */
export enum DescribeInstanceStatusResultInstanceStatusesSystemStatusStatusEnum {
  Ok = "ok",
  Impaired = "impaired",
  InsufficientData = "insufficient-data",
  NotApplicable = "not-applicable",
  Initializing = "initializing",
}

/**
 * Reports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.
 */
export class DescribeInstanceStatusResultInstanceStatusesSystemStatus extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeInstanceStatusResultInstanceStatusesSystemStatusDetails,
  })
  details?: DescribeInstanceStatusResultInstanceStatusesSystemStatusDetails[];

  @SpeakeasyMetadata()
  status?: DescribeInstanceStatusResultInstanceStatusesSystemStatusStatusEnum;
}

/**
 * Describes the status of an instance.
 */
export class DescribeInstanceStatusResultInstanceStatuses extends SpeakeasyBase {
  @SpeakeasyMetadata()
  availabilityZone?: string;

  @SpeakeasyMetadata({
    elemType: DescribeInstanceStatusResultInstanceStatusesEvents,
  })
  events?: DescribeInstanceStatusResultInstanceStatusesEvents[];

  @SpeakeasyMetadata()
  instanceId?: string;

  @SpeakeasyMetadata()
  instanceState?: DescribeInstanceStatusResultInstanceStatusesInstanceState;

  @SpeakeasyMetadata()
  instanceStatus?: DescribeInstanceStatusResultInstanceStatusesInstanceStatus;

  @SpeakeasyMetadata()
  outpostArn?: string;

  @SpeakeasyMetadata()
  systemStatus?: DescribeInstanceStatusResultInstanceStatusesSystemStatus;
}

/**
 * Success
 */
export class DescribeInstanceStatusResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DescribeInstanceStatusResultInstanceStatuses })
  instanceStatuses?: DescribeInstanceStatusResultInstanceStatuses[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
