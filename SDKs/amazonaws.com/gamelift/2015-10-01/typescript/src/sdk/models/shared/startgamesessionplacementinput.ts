/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DesiredPlayerSession } from "./desiredplayersession";
import { GameProperty } from "./gameproperty";
import { PlayerLatency } from "./playerlatency";
import { Expose, Type } from "class-transformer";

export class StartGameSessionPlacementInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DesiredPlayerSession })
  @Expose({ name: "DesiredPlayerSessions" })
  @Type(() => DesiredPlayerSession)
  desiredPlayerSessions?: DesiredPlayerSession[];

  @SpeakeasyMetadata({ elemType: GameProperty })
  @Expose({ name: "GameProperties" })
  @Type(() => GameProperty)
  gameProperties?: GameProperty[];

  @SpeakeasyMetadata()
  @Expose({ name: "GameSessionData" })
  gameSessionData?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GameSessionName" })
  gameSessionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GameSessionQueueName" })
  gameSessionQueueName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaximumPlayerSessionCount" })
  maximumPlayerSessionCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "PlacementId" })
  placementId: string;

  @SpeakeasyMetadata({ elemType: PlayerLatency })
  @Expose({ name: "PlayerLatencies" })
  @Type(() => PlayerLatency)
  playerLatencies?: PlayerLatency[];
}
