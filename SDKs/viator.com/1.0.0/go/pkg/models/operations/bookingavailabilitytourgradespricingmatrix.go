// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type BookingAvailabilityTourgradesPricingmatrixRequestBody struct {
	// **currency code** for the currency in which to display pricing details
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// **month of year** (as text) by which to filter results (must be in the future)
	Month *string `json:"month,omitempty"`
	// **alphanumeric identifier** of product about which to retrieve tour grade and pricing information
	ProductCode *string `json:"productCode,omitempty"`
	// **year** (as text) by which to filter results (must be in the future)
	Year *string `json:"year,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrixRequest struct {
	// Specifies the language into which the natural-language fields in the response from this service will be translated (see [Accept-Language header](#section/Appendices/Accept-Language-header) for available langage codes)
	//
	AcceptLanguage string                                                 `header:"style=simple,explode=false,name=Accept-Language"`
	RequestBody    *BookingAvailabilityTourgradesPricingmatrixRequestBody `request:"mediaType=application/json"`
}

type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPricesPrices struct {
	// **currency code** of the currency in which pricing details are displayed
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// **numeric merchant net rate** for *this* age band
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	MerchantNetPrice *float64 `json:"merchantNetPrice,omitempty"`
	// **currency-formatted merchant net rate** for *this* age band
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	MerchantNetPriceFormatted         *string `json:"merchantNetPriceFormatted,omitempty"`
	MinNoOfTravellersRequiredForPrice *int64  `json:"minNoOfTravellersRequiredForPrice,omitempty"`
	// **numeric suggested retail price** for *this* age band
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	Price *float64 `json:"price,omitempty"`
	// **currency-formatted suggested retail price** for *this* age band
	// - For more information, see: [Merchant pricing](#section/Merchant-APIs/Merchant-pricing)
	//
	PriceFormatted *string `json:"priceFormatted,omitempty"`
	// **sort order** *this* pricing detail object
	SortOrder *int64 `json:"sortOrder,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPrices struct {
	// **unique numeric identifier** for the age band
	// - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
	//
	BandID *int64 `json:"bandId,omitempty"`
	// **maximum number** of participants allowed for *this* tour grade
	MaximumCountRequired *int64 `json:"maximumCountRequired,omitempty"`
	// **minimum number** of participants required for *this* tour grade
	MinimumCountRequired *int64 `json:"minimumCountRequired,omitempty"`
	// **array** of pricing detail objects
	Prices []BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPricesPrices `json:"prices,omitempty"`
	// **sort order** for *this* tour grade
	SortOrder *int64 `json:"sortOrder,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrix struct {
	// **array** of pricing objects by age band
	AgeBandPrices []BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrixAgeBandPrices `json:"ageBandPrices,omitempty"`
	// **date** on which *this* product operates
	BookingDate *string `json:"bookingDate,omitempty"`
	// **natural-language description** of the pricing mode
	// - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information
	//
	PricingUnit *string `json:"pricingUnit,omitempty"`
	// **sort order** for *this* pricing object
	SortOrder *int64 `json:"sortOrder,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGrades struct {
	// **alphanumeric identifier** of the tour grade
	GradeCode *string `json:"gradeCode,omitempty"`
	// **title of tour grade**
	GradeTitle *string `json:"gradeTitle,omitempty"`
	// **array of pricing objects** for *this* tour grade
	PricingMatrix []BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGradesPricingMatrix `json:"pricingMatrix,omitempty"`
	// **sort order** for *this* tour grade pricing object
	SortOrder *int64 `json:"sortOrder,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDates struct {
	// **date** on which *this* product operates
	BookingDate *string `json:"bookingDate,omitempty"`
	// ignore (Viator only)
	CallForLastMinAvailability *bool `json:"callForLastMinAvailability,omitempty"`
	// **sort order** for *this* tour grade pricing object
	SortOrder *int64 `json:"sortOrder,omitempty"`
	// **array** of tour grade pricing information objects
	TourGrades []BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDatesTourGrades `json:"tourGrades,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONData struct {
	// **month of year** (as text) by which to filter results
	BookingMonth *string `json:"bookingMonth,omitempty"`
	// **array of tour grade pricing objects** each detailing availability on a single day
	Dates []BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONDataDates `json:"dates,omitempty"`
	// **natural-language label** for the pricing terms of this tour grade
	// - see [Understanding the pricingUnit field](#section/Using-the-API/Understanding-the-pricingUnit-field) for more information
	//
	PricingUnit *string `json:"pricingUnit,omitempty"`
}

// BookingAvailabilityTourgradesPricingmatrix200ApplicationJSON - Success
type BookingAvailabilityTourgradesPricingmatrix200ApplicationJSON struct {
	Data *BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONData `json:"data,omitempty"`
	// **timestamp** of *this* response
	DateStamp *string `json:"dateStamp,omitempty"`
	// **array** of error codes pertaining to *this* error
	// - See: [Viator API error codes](#section/Appendices/Viator-API-error-codes) for a list of possible error codes
	//
	ErrorCodes []string `json:"errorCodes,omitempty"`
	// **array** of error message strings
	ErrorMessage []interface{} `json:"errorMessage,omitempty"`
	// **array** of error message strings in plain text
	ErrorMessageText *string `json:"errorMessageText,omitempty"`
	// **name** of *this* type of error
	ErrorName *string `json:"errorName,omitempty"`
	// **reference number** of *this* error
	ErrorReference *string `json:"errorReference,omitempty"`
	// **code** specifying the type of error
	ErrorType *string `json:"errorType,omitempty"`
	// ignore (Viator only)
	ExtraInfo map[string]interface{} `json:"extraInfo,omitempty"`
	// ignore (Viator only)
	ExtraObject map[string]interface{} `json:"extraObject,omitempty"`
	// **boolean indicator** of *this* request's outcome
	// - `true`: the request was successful with no errors
	// - `false`: an error was encountered
	//
	Success *bool `json:"success,omitempty"`
	// **number** of results available for *this* service
	//
	TotalCount *int64 `json:"totalCount,omitempty"`
	// **unique numeric id** of the server that processed *this* request
	Vmid *string `json:"vmid,omitempty"`
}

type BookingAvailabilityTourgradesPricingmatrixResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	BookingAvailabilityTourgradesPricingmatrix200ApplicationJSONObject *BookingAvailabilityTourgradesPricingmatrix200ApplicationJSON
}
