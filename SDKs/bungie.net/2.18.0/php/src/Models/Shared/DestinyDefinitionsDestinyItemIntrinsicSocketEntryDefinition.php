<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition - Represents a socket that has a plug associated with it intrinsically. This is useful for situations where the weapon needs to have a visual plug/Mod on it, but that plug/Mod should never change.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinyDefinitionsDestinyItemIntrinsicSocketEntryDefinition
{
    /**
     * If true, then this socket is visible in the item's "default" state. If you have an instance, you should always check the runtime state, as that can override this visibility setting: but if you're looking at the item on a conceptual level, this property can be useful for hiding data such as legacy sockets - which remain defined on items for infrastructure purposes, but can be confusing for users to see.
     * 
     * @var ?bool $defaultVisible
     */
	
    public ?bool $defaultVisible = null;
    
    /**
     * Indicates the plug that is intrinsically inserted into this socket.
     * 
     * @var ?int $plugItemHash
     */
	
    public ?int $plugItemHash = null;
    
    /**
     * Indicates the type of this intrinsic socket.
     * 
     * @var ?int $socketTypeHash
     */
	
    public ?int $socketTypeHash = null;
    
	public function __construct()
	{
		$this->defaultVisible = null;
		$this->plugItemHash = null;
		$this->socketTypeHash = null;
	}
}
