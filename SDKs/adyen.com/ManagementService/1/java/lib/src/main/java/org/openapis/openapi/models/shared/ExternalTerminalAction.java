/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ExternalTerminalAction - OK - the request has succeeded.
 */
public class ExternalTerminalAction {
    /**
     * The type of terminal action: **InstallAndroidApp**, **UninstallAndroidApp**, **InstallAndroidCertificate**, or **UninstallAndroidCertificate**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionType")
    public String actionType;
    public ExternalTerminalAction withActionType(String actionType) {
        this.actionType = actionType;
        return this;
    }
    
    /**
     * Technical information about the terminal action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config")
    public String config;
    public ExternalTerminalAction withConfig(String config) {
        this.config = config;
        return this;
    }
    
    /**
     * The date and time when the action was carried out.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("confirmedAt")
    public OffsetDateTime confirmedAt;
    public ExternalTerminalAction withConfirmedAt(OffsetDateTime confirmedAt) {
        this.confirmedAt = confirmedAt;
        return this;
    }
    
    /**
     * The unique ID of the terminal action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ExternalTerminalAction withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The result message for the action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public String result;
    public ExternalTerminalAction withResult(String result) {
        this.result = result;
        return this;
    }
    
    /**
     * The date and time when the action was scheduled to happen.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledAt")
    public OffsetDateTime scheduledAt;
    public ExternalTerminalAction withScheduledAt(OffsetDateTime scheduledAt) {
        this.scheduledAt = scheduledAt;
        return this;
    }
    
    /**
     * The status of the terminal action: **pending**, **successful**, **failed**, **cancelled**, or **tryLater**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;
    public ExternalTerminalAction withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * The unique ID of the terminal that the action applies to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminalId")
    public String terminalId;
    public ExternalTerminalAction withTerminalId(String terminalId) {
        this.terminalId = terminalId;
        return this;
    }
    
}
