"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserAuthDataUpdateRequest:
    r"""User Authentication Data Update Request"""
    
    ad_config_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adConfigId'), 'exclude': lambda f: f is None }})
    r"""ID of the user's Active Directory."""  
    login: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('login'), 'exclude': lambda f: f is None }})
    r"""User login name"""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""Authentication method
    
    
    
    Authentication methods:
    
    * `basic`
    
    * `active_directory`
    
    * `radius`
    
    * `openid`
    """  
    oid_config_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oidConfigId'), 'exclude': lambda f: f is None }})
    r"""ID of the user's OIDC provider."""  
    