// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlayStopResponseMessageEnum - Response message
type PlayStopResponseMessageEnum string

const (
	PlayStopResponseMessageEnumPlayStopExecuted           PlayStopResponseMessageEnum = "PlayStop Executed"
	PlayStopResponseMessageEnumCallUUIDParameterMissing   PlayStopResponseMessageEnum = "CallUUID Parameter Missing"
	PlayStopResponseMessageEnumPlayStopFailedCallNotFound PlayStopResponseMessageEnum = "PlayStop Failed -- Call not found"
	PlayStopResponseMessageEnumPlayStopFailed             PlayStopResponseMessageEnum = "PlayStop Failed"
)

func (e PlayStopResponseMessageEnum) ToPointer() *PlayStopResponseMessageEnum {
	return &e
}

func (e *PlayStopResponseMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PlayStop Executed":
		fallthrough
	case "CallUUID Parameter Missing":
		fallthrough
	case "PlayStop Failed -- Call not found":
		fallthrough
	case "PlayStop Failed":
		*e = PlayStopResponseMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayStopResponseMessageEnum: %v", v)
	}
}

// PlayStopResponse - Response
type PlayStopResponse struct {
	// Response message
	Message PlayStopResponseMessageEnum `json:"Message"`
	// Whether the request was successful or not
	Success bool `json:"Success"`
}
