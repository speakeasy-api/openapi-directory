// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListAchTransfersRequest struct {
	AccountID           *string    `queryParam:"style=form,explode=true,name=account_id"`
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	ExternalAccountID   *string    `queryParam:"style=form,explode=true,name=external_account_id"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
}

type ListAchTransfersDefaultApplicationJSON13StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListAchTransfersDefaultApplicationJSON13StatusEnum = 429
)

func (e ListAchTransfersDefaultApplicationJSON13StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListAchTransfersDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON13TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON13TypeEnumRateLimitedError ListAchTransfersDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListAchTransfersDefaultApplicationJSON13TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListAchTransfersDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON13 struct {
	Detail     string                                             `json:"detail"`
	RetryAfter *int64                                             `json:"retry_after,omitempty"`
	Status     ListAchTransfersDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                             `json:"title"`
	Type       ListAchTransfersDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON12StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON12StatusEnumFourHundredAndThree ListAchTransfersDefaultApplicationJSON12StatusEnum = 403
)

func (e ListAchTransfersDefaultApplicationJSON12StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListAchTransfersDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON12TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON12TypeEnumPrivateFeatureError ListAchTransfersDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListAchTransfersDefaultApplicationJSON12TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListAchTransfersDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON12 struct {
	Detail string                                             `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON11StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON11StatusEnumFourHundredAndFour ListAchTransfersDefaultApplicationJSON11StatusEnum = 404
)

func (e ListAchTransfersDefaultApplicationJSON11StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListAchTransfersDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON11TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON11TypeEnumObjectNotFoundError ListAchTransfersDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListAchTransfersDefaultApplicationJSON11TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListAchTransfersDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON11 struct {
	Detail string                                             `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON10StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON10StatusEnumFourHundred ListAchTransfersDefaultApplicationJSON10StatusEnum = 400
)

func (e ListAchTransfersDefaultApplicationJSON10StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListAchTransfersDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON10TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON10TypeEnumMalformedRequestError ListAchTransfersDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListAchTransfersDefaultApplicationJSON10TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListAchTransfersDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON10 struct {
	Detail string                                             `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                             `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON9StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON9StatusEnumFourHundred ListAchTransfersDefaultApplicationJSON9StatusEnum = 400
)

func (e ListAchTransfersDefaultApplicationJSON9StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListAchTransfersDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON9TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON9TypeEnumInvalidParametersError ListAchTransfersDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListAchTransfersDefaultApplicationJSON9TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListAchTransfersDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                          `json:"errors"`
	Status ListAchTransfersDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON8StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON8StatusEnumFourHundredAndNine ListAchTransfersDefaultApplicationJSON8StatusEnum = 409
)

func (e ListAchTransfersDefaultApplicationJSON8StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListAchTransfersDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON8TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON8TypeEnumInvalidOperationError ListAchTransfersDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListAchTransfersDefaultApplicationJSON8TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListAchTransfersDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON8 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON7StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON7StatusEnumFourHundredAndOne ListAchTransfersDefaultApplicationJSON7StatusEnum = 401
)

func (e ListAchTransfersDefaultApplicationJSON7StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListAchTransfersDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON7TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListAchTransfersDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListAchTransfersDefaultApplicationJSON7TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListAchTransfersDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON7 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON6StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON6StatusEnumFiveHundred ListAchTransfersDefaultApplicationJSON6StatusEnum = 500
)

func (e ListAchTransfersDefaultApplicationJSON6StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListAchTransfersDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON6TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON6TypeEnumInternalServerError ListAchTransfersDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListAchTransfersDefaultApplicationJSON6TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListAchTransfersDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON6 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON5StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON5StatusEnumFourHundredAndThree ListAchTransfersDefaultApplicationJSON5StatusEnum = 403
)

func (e ListAchTransfersDefaultApplicationJSON5StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListAchTransfersDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON5TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListAchTransfersDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListAchTransfersDefaultApplicationJSON5TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListAchTransfersDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON5 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON4StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListAchTransfersDefaultApplicationJSON4StatusEnum = 422
)

func (e ListAchTransfersDefaultApplicationJSON4StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListAchTransfersDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON4TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListAchTransfersDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListAchTransfersDefaultApplicationJSON4TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListAchTransfersDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON4 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON3StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON3StatusEnumFourHundredAndNine ListAchTransfersDefaultApplicationJSON3StatusEnum = 409
)

func (e ListAchTransfersDefaultApplicationJSON3StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListAchTransfersDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON3TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListAchTransfersDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListAchTransfersDefaultApplicationJSON3TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListAchTransfersDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON3 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON2StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON2StatusEnumFourHundredAndThree ListAchTransfersDefaultApplicationJSON2StatusEnum = 403
)

func (e ListAchTransfersDefaultApplicationJSON2StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListAchTransfersDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON2TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListAchTransfersDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListAchTransfersDefaultApplicationJSON2TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListAchTransfersDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON2 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListAchTransfersDefaultApplicationJSON1StatusEnum int64

const (
	ListAchTransfersDefaultApplicationJSON1StatusEnumFourHundredAndFour ListAchTransfersDefaultApplicationJSON1StatusEnum = 404
)

func (e ListAchTransfersDefaultApplicationJSON1StatusEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListAchTransfersDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON1TypeEnum string

const (
	ListAchTransfersDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListAchTransfersDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListAchTransfersDefaultApplicationJSON1TypeEnum) ToPointer() *ListAchTransfersDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListAchTransfersDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListAchTransfersDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAchTransfersDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListAchTransfersDefaultApplicationJSON1 struct {
	Detail string                                            `json:"detail"`
	Status ListAchTransfersDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                            `json:"title"`
	Type   ListAchTransfersDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListAchTransfersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Transfer List
	AchTransferList *shared.AchTransferList
	// Error
	Error interface{}
}
