/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReferenceItem } from "./referenceitem";
import { SseConfig } from "./sseconfig";
import { StoreStatusEnum } from "./storestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A variant store.
 */
export class VariantStoreItem extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  @Type(() => ReferenceItem)
  reference: ReferenceItem;

  @SpeakeasyMetadata()
  @Expose({ name: "sseConfig" })
  @Type(() => SseConfig)
  sseConfig: SseConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: StoreStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusMessage" })
  statusMessage: string;

  @SpeakeasyMetadata()
  @Expose({ name: "storeArn" })
  storeArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "storeSizeBytes" })
  storeSizeBytes: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
