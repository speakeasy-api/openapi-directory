/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SourcePosition - Position in the `Source` content including its line, column number, and an index of the `File` in the `Source` message. Used for debug purposes.
 */
public class SourcePosition {
    /**
     * First column on the source line associated with the source fragment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("column")
    public Integer column;

    public SourcePosition withColumn(Integer column) {
        this.column = column;
        return this;
    }
    
    /**
     * Start position relative to the beginning of the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentOffset")
    public Integer currentOffset;

    public SourcePosition withCurrentOffset(Integer currentOffset) {
        this.currentOffset = currentOffset;
        return this;
    }
    
    /**
     * End position relative to the beginning of the file.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endOffset")
    public Integer endOffset;

    public SourcePosition withEndOffset(Integer endOffset) {
        this.endOffset = endOffset;
        return this;
    }
    
    /**
     * Name of the `File`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileName")
    public String fileName;

    public SourcePosition withFileName(String fileName) {
        this.fileName = fileName;
        return this;
    }
    
    /**
     * Line number of the source fragment. 1-based.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("line")
    public Integer line;

    public SourcePosition withLine(Integer line) {
        this.line = line;
        return this;
    }
    
    public SourcePosition(){}
}
