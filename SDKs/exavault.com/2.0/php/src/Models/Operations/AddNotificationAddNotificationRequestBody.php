<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class AddNotificationAddNotificationRequestBody
{
    /**
     * Type of action be notified about. Notifications will only be fired for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\AddNotificationAddNotificationRequestBodyActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AddNotificationAddNotificationRequestBodyActionEnum>')]
    public AddNotificationAddNotificationRequestBodyActionEnum $action;
    
    /**
     * Custom message to include in notification emails.
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Email addresses to send notification emails to. If not specified, sends to the current user's email address.
     * 
     * @var ?array<string> $recipients
     */
	#[\JMS\Serializer\Annotation\SerializedName('recipients')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $recipients = null;
    
    /**
     * Resources for this notification. See details on [how to specify resources](#section/Identifying-Resources) above.
     * 
     * @var string $resource
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resource;
    
    /**
     * Set to true if the user should be notified by email when the notification is triggered.
     * 
     * @var bool $sendEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('sendEmail')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $sendEmail;
    
    /**
     * What kind of notification you're making. Valid choices are:
     * 
     * 
     * - **file** to monitor activity for a file resource
     * - **folder** to monitor activity for a folder resource
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\AddNotificationAddNotificationRequestBodyTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AddNotificationAddNotificationRequestBodyTypeEnum>')]
    public AddNotificationAddNotificationRequestBodyTypeEnum $type;
    
    /**
     * Determines which users' actions should trigger the notification. 
     * 
     * 
     * Rather than listing  individual users, you can also use 3 special options:
     * 
     * - **notice\_user\_all** for activity by any user or share recipient
     * - **notice\_user\_all\_users** for activity only by user accounts
     * - **notice\_user\_all\_recipient** for activity only by share recipients
     * 
     * @var array<string> $usernames
     */
	#[\JMS\Serializer\Annotation\SerializedName('usernames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $usernames;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\AddNotificationAddNotificationRequestBodyActionEnum::UPLOAD;
		$this->message = null;
		$this->recipients = null;
		$this->resource = "";
		$this->sendEmail = false;
		$this->type = \OpenAPI\OpenAPI\Models\Operations\AddNotificationAddNotificationRequestBodyTypeEnum::FILE;
		$this->usernames = [];
	}
}
