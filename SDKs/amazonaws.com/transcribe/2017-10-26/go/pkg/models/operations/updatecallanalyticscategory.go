// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateCallAnalyticsCategoryXAmzTargetEnum
type UpdateCallAnalyticsCategoryXAmzTargetEnum string

const (
	UpdateCallAnalyticsCategoryXAmzTargetEnumTranscribeUpdateCallAnalyticsCategory UpdateCallAnalyticsCategoryXAmzTargetEnum = "Transcribe.UpdateCallAnalyticsCategory"
)

func (e *UpdateCallAnalyticsCategoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Transcribe.UpdateCallAnalyticsCategory":
		*e = UpdateCallAnalyticsCategoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateCallAnalyticsCategoryXAmzTargetEnum: %s", s)
	}
}

type UpdateCallAnalyticsCategoryRequest struct {
	UpdateCallAnalyticsCategoryRequest shared.UpdateCallAnalyticsCategoryRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         UpdateCallAnalyticsCategoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateCallAnalyticsCategoryResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalFailureException
	InternalFailureException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// Success
	UpdateCallAnalyticsCategoryResponse *shared.UpdateCallAnalyticsCategoryResponse
}
