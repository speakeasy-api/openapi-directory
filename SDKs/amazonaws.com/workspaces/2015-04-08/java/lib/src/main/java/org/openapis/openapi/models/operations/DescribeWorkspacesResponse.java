/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DescribeWorkspacesResponse {
    
    public String contentType;

    public DescribeWorkspacesResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.DescribeWorkspacesResult describeWorkspacesResult;

    public DescribeWorkspacesResponse withDescribeWorkspacesResult(org.openapis.openapi.models.shared.DescribeWorkspacesResult describeWorkspacesResult) {
        this.describeWorkspacesResult = describeWorkspacesResult;
        return this;
    }
    
    /**
     * InvalidParameterValuesException
     */
    
    public Object invalidParameterValuesException;

    public DescribeWorkspacesResponse withInvalidParameterValuesException(Object invalidParameterValuesException) {
        this.invalidParameterValuesException = invalidParameterValuesException;
        return this;
    }
    
    
    public Integer statusCode;

    public DescribeWorkspacesResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DescribeWorkspacesResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceUnavailableException
     */
    
    public Object resourceUnavailableException;

    public DescribeWorkspacesResponse withResourceUnavailableException(Object resourceUnavailableException) {
        this.resourceUnavailableException = resourceUnavailableException;
        return this;
    }
    
    public DescribeWorkspacesResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
