// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartAutomationExecutionXAmzTargetEnum
type StartAutomationExecutionXAmzTargetEnum string

const (
	StartAutomationExecutionXAmzTargetEnumAmazonSsmStartAutomationExecution StartAutomationExecutionXAmzTargetEnum = "AmazonSSM.StartAutomationExecution"
)

func (e StartAutomationExecutionXAmzTargetEnum) ToPointer() *StartAutomationExecutionXAmzTargetEnum {
	return &e
}

func (e *StartAutomationExecutionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonSSM.StartAutomationExecution":
		*e = StartAutomationExecutionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartAutomationExecutionXAmzTargetEnum: %v", v)
	}
}

type StartAutomationExecutionRequest struct {
	StartAutomationExecutionRequest shared.StartAutomationExecutionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      StartAutomationExecutionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartAutomationExecutionResponse struct {
	// AutomationDefinitionNotFoundException
	AutomationDefinitionNotFoundException interface{}
	// AutomationDefinitionVersionNotFoundException
	AutomationDefinitionVersionNotFoundException interface{}
	// AutomationExecutionLimitExceededException
	AutomationExecutionLimitExceededException interface{}
	ContentType                               string
	// IdempotentParameterMismatch
	IdempotentParameterMismatch interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidAutomationExecutionParametersException
	InvalidAutomationExecutionParametersException interface{}
	// InvalidTarget
	InvalidTarget interface{}
	// Success
	StartAutomationExecutionResult *shared.StartAutomationExecutionResult
	StatusCode                     int
	RawResponse                    *http.Response
}
