/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class StorageObjectsListQueryParams {
    /**
     * Data format for the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public StorageObjectsListQueryParams withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=delimiter")
    public String delimiter;
    public StorageObjectsListQueryParams withDelimiter(String delimiter) {
        this.delimiter = delimiter;
        return this;
    }
    
    /**
     * Filter results to objects whose names are lexicographically before endOffset. If startOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=endOffset")
    public String endOffset;
    public StorageObjectsListQueryParams withEndOffset(String endOffset) {
        this.endOffset = endOffset;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public StorageObjectsListQueryParams withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * If true, objects that end in exactly one instance of delimiter will have their metadata included in items in addition to prefixes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=includeTrailingDelimiter")
    public Boolean includeTrailingDelimiter;
    public StorageObjectsListQueryParams withIncludeTrailingDelimiter(Boolean includeTrailingDelimiter) {
        this.includeTrailingDelimiter = includeTrailingDelimiter;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public StorageObjectsListQueryParams withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Filter results to objects and prefixes that match this glob pattern.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=matchGlob")
    public String matchGlob;
    public StorageObjectsListQueryParams withMatchGlob(String matchGlob) {
        this.matchGlob = matchGlob;
        return this;
    }
    
    /**
     * Maximum number of items plus prefixes to return in a single page of responses. As duplicate prefixes are omitted, fewer total results may be returned than requested. The service will use this parameter or 1,000 items, whichever is smaller.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;
    public StorageObjectsListQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public StorageObjectsListQueryParams withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * A previously-returned page token representing part of the larger set of results to view.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageToken")
    public String pageToken;
    public StorageObjectsListQueryParams withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Filter results to objects whose names begin with this prefix.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prefix")
    public String prefix;
    public StorageObjectsListQueryParams withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public StorageObjectsListQueryParams withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Set of properties to return. Defaults to noAcl.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=projection")
    public StorageObjectsListProjectionEnum projection;
    public StorageObjectsListQueryParams withProjection(StorageObjectsListProjectionEnum projection) {
        this.projection = projection;
        return this;
    }
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public StorageObjectsListQueryParams withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Filter results to objects whose names are lexicographically equal to or after startOffset. If endOffset is also set, the objects listed will have names between startOffset (inclusive) and endOffset (exclusive).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=startOffset")
    public String startOffset;
    public StorageObjectsListQueryParams withStartOffset(String startOffset) {
        this.startOffset = startOffset;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "media", "multipart", "resumable").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public StorageObjectsListQueryParams withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Deprecated. Please use quotaUser instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userIp")
    public String userIp;
    public StorageObjectsListQueryParams withUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }
    
    /**
     * The project to be billed for this request. Required for Requester Pays buckets.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userProject")
    public String userProject;
    public StorageObjectsListQueryParams withUserProject(String userProject) {
        this.userProject = userProject;
        return this;
    }
    
    /**
     * If true, lists all versions of an object as distinct results. The default is false. For more information, see Object Versioning.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=versions")
    public Boolean versions;
    public StorageObjectsListQueryParams withVersions(Boolean versions) {
        this.versions = versions;
        return this;
    }
    
}
