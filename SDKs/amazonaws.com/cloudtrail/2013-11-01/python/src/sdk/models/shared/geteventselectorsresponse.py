"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import advancedeventselector as shared_advancedeventselector
from ..shared import eventselector as shared_eventselector
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetEventSelectorsResponse:
    r"""Success"""
    
    advanced_event_selectors: Optional[list[shared_advancedeventselector.AdvancedEventSelector]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdvancedEventSelectors'), 'exclude': lambda f: f is None }})  
    event_selectors: Optional[list[shared_eventselector.EventSelector]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventSelectors'), 'exclude': lambda f: f is None }})  
    trail_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrailARN'), 'exclude': lambda f: f is None }})  
    