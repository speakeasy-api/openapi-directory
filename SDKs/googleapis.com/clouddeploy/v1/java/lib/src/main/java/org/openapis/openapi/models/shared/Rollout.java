/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Rollout - A `Rollout` resource in the Google Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
 */
public class Rollout {
    /**
     * User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;
    public Rollout withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Output only. Approval state of the `Rollout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approvalState")
    public RolloutApprovalStateEnum approvalState;
    public Rollout withApprovalState(RolloutApprovalStateEnum approvalState) {
        this.approvalState = approvalState;
        return this;
    }
    
    /**
     * Output only. Time at which the `Rollout` was approved.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("approveTime")
    public String approveTime;
    public Rollout withApproveTime(String approveTime) {
        this.approveTime = approveTime;
        return this;
    }
    
    /**
     * Output only. Name of the `ControllerRollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controllerRollout")
    public String controllerRollout;
    public Rollout withControllerRollout(String controllerRollout) {
        this.controllerRollout = controllerRollout;
        return this;
    }
    
    /**
     * Output only. Time at which the `Rollout` was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Rollout withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. Time at which the `Rollout` finished deploying.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deployEndTime")
    public String deployEndTime;
    public Rollout withDeployEndTime(String deployEndTime) {
        this.deployEndTime = deployEndTime;
        return this;
    }
    
    /**
     * Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deployFailureCause")
    public RolloutDeployFailureCauseEnum deployFailureCause;
    public Rollout withDeployFailureCause(RolloutDeployFailureCauseEnum deployFailureCause) {
        this.deployFailureCause = deployFailureCause;
        return this;
    }
    
    /**
     * Output only. Time at which the `Rollout` started deploying.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deployStartTime")
    public String deployStartTime;
    public Rollout withDeployStartTime(String deployStartTime) {
        this.deployStartTime = deployStartTime;
        return this;
    }
    
    /**
     * Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deployingBuild")
    public String deployingBuild;
    public Rollout withDeployingBuild(String deployingBuild) {
        this.deployingBuild = deployingBuild;
        return this;
    }
    
    /**
     * Description of the `Rollout` for user purposes. Max length is 255 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Rollout withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. Time at which the `Rollout` was enqueued.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enqueueTime")
    public String enqueueTime;
    public Rollout withEnqueueTime(String enqueueTime) {
        this.enqueueTime = enqueueTime;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Rollout withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Output only. Additional information about the rollout failure, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureReason")
    public String failureReason;
    public Rollout withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    /**
     * Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Rollout withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Metadata includes information associated with a `Rollout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Metadata metadata;
    public Rollout withMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Optional. Name of the `Rollout`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/{release}/rollouts/a-z{0,62}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Rollout withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The phases that represent the workflows of this `Rollout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phases")
    public Phase[] phases;
    public Rollout withPhases(Phase[] phases) {
        this.phases = phases;
        return this;
    }
    
    /**
     * Output only. Current state of the `Rollout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public RolloutStateEnum state;
    public Rollout withState(RolloutStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Required. The ID of Target to which this `Rollout` is deploying.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetId")
    public String targetId;
    public Rollout withTargetId(String targetId) {
        this.targetId = targetId;
        return this;
    }
    
    /**
     * Output only. Unique identifier of the `Rollout`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;
    public Rollout withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
}
