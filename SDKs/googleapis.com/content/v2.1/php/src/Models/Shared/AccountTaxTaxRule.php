<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AccountTaxTaxRule - Tax calculation rule to apply in a state or province (US only).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AccountTaxTaxRule
{
    /**
     * Country code in which tax is applicable.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.
     * 
     * @var ?string $ratePercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('ratePercent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ratePercent = null;
    
    /**
     * If true, shipping charges are also taxed.
     * 
     * @var ?bool $shippingTaxed
     */
	#[\JMS\Serializer\Annotation\SerializedName('shippingTaxed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shippingTaxed = null;
    
    /**
     * Whether the tax rate is taken from a global tax table or specified explicitly.
     * 
     * @var ?bool $useGlobalRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('useGlobalRate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useGlobalRate = null;
    
	public function __construct()
	{
		$this->country = null;
		$this->locationId = null;
		$this->ratePercent = null;
		$this->shippingTaxed = null;
		$this->useGlobalRate = null;
	}
}
