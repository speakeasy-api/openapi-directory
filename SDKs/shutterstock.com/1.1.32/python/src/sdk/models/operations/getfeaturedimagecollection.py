"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import featuredcollection as shared_featuredcollection
from ..shared import security as shared_security
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetFeaturedImageCollectionSecurity:
    
    basic: Optional[shared_security.SchemeBasic] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    customer_access_code: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetFeaturedImageCollectionAssetHintEnum(str, Enum):
    r"""Cover image size"""
    ONEX = '1x'
    TWOX = '2x'

class GetFeaturedImageCollectionEmbedEnum(str, Enum):
    r"""Which sharing information to include in the response, such as a URL to the collection"""
    SHARE_URL = 'share_url'


@dataclasses.dataclass
class GetFeaturedImageCollectionRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Collection ID"""  
    asset_hint: Optional[GetFeaturedImageCollectionAssetHintEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'asset_hint', 'style': 'form', 'explode': True }})
    r"""Cover image size"""  
    embed: Optional[GetFeaturedImageCollectionEmbedEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'embed', 'style': 'form', 'explode': True }})
    r"""Which sharing information to include in the response, such as a URL to the collection"""  
    

@dataclasses.dataclass
class GetFeaturedImageCollectionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    featured_collection: Optional[shared_featuredcollection.FeaturedCollection] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    