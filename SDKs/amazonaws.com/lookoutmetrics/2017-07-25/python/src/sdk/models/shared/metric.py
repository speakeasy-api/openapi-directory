"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregationfunction_enum as shared_aggregationfunction_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Metric:
    r"""A calculation made by contrasting a measure and a dimension from your source data."""
    
    aggregation_function: shared_aggregationfunction_enum.AggregationFunctionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AggregationFunction') }})  
    metric_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetricName') }})  
    namespace: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Namespace'), 'exclude': lambda f: f is None }})  
    