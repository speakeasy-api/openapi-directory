/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataType } from "./datatype";
import { DataValue } from "./datavalue";
import { Expose, Type } from "class-transformer";

/**
 * An object that sets information about a property.
 */
export class PropertyDefinitionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  configuration?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "dataType" })
  @Type(() => DataType)
  dataType?: DataType;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultValue" })
  @Type(() => DataValue)
  defaultValue?: DataValue;

  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isExternalId" })
  isExternalId?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isRequiredInEntity" })
  isRequiredInEntity?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isStoredExternally" })
  isStoredExternally?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isTimeSeries" })
  isTimeSeries?: boolean;
}
