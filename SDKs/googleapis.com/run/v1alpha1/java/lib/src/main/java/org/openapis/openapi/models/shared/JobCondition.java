/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobCondition - JobCondition defines a readiness condition for a Revision.
 */
public class JobCondition {
    /**
     * Optional. Last time the condition transitioned from one status to another.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastTransitionTime")
    public String lastTransitionTime;

    public JobCondition withLastTransitionTime(String lastTransitionTime) {
        this.lastTransitionTime = lastTransitionTime;
        return this;
    }
    
    /**
     * Optional. Human readable message indicating details about the current status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;

    public JobCondition withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Optional. One-word CamelCase reason for the condition's last transition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public JobCondition withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * Optional. How to interpret failures of this condition, one of Error, Warning, Info
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public String severity;

    public JobCondition withSeverity(String severity) {
        this.severity = severity;
        return this;
    }
    
    /**
     * Required. Status of the condition, one of True, False, Unknown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public JobCondition withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Required. Type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types include: * "Completed": True when the Job has successfully completed. * "Started": True when the Job has successfully started running. * "ResourcesAvailable": True when underlying resources have been provisioned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public JobCondition withType(String type) {
        this.type = type;
        return this;
    }
    
    public JobCondition(){}
}
