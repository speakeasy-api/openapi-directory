/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionTypeEnum } from "./connectiontypeenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateEnvironmentEc2Request extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "automaticStopTimeMinutes" })
  automaticStopTimeMinutes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "clientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectionType" })
  connectionType?: ConnectionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dryRun" })
  dryRun?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "imageId" })
  imageId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ownerArn" })
  ownerArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subnetId" })
  subnetId?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
