/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ServingRestriction - Output only. A representation of the status of an ad in a specific context. A context here relates to where something ultimately serves (for example, a user or publisher geo, a platform, an HTTPS versus HTTP request, or the type of auction).
 */
public class ServingRestriction {
    /**
     * The contexts for the restriction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contexts")
    public ServingContext[] contexts;
    public ServingRestriction withContexts(ServingContext[] contexts) {
        this.contexts = contexts;
        return this;
    }
    
    /**
     * Output only. The reason and details for a disapproval.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disapproval")
    public Disapproval disapproval;
    public ServingRestriction withDisapproval(Disapproval disapproval) {
        this.disapproval = disapproval;
        return this;
    }
    
    /**
     * Any disapprovals bound to this restriction. Only present if status=DISAPPROVED. Can be used to filter the response of the creatives.list method. Deprecated; use disapproval field instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disapprovalReasons")
    public Disapproval[] disapprovalReasons;
    public ServingRestriction withDisapprovalReasons(Disapproval[] disapprovalReasons) {
        this.disapprovalReasons = disapprovalReasons;
        return this;
    }
    
    /**
     * The status of the creative in this context (for example, it has been explicitly disapproved or is pending review).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ServingRestrictionStatusEnum status;
    public ServingRestriction withStatus(ServingRestrictionStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
