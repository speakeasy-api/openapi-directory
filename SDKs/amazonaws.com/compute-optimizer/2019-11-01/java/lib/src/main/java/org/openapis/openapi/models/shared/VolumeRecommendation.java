/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * VolumeRecommendation - Describes an Amazon Elastic Block Store (Amazon EBS) volume recommendation.
 */
public class VolumeRecommendation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;

    public VolumeRecommendation withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentConfiguration")
    public VolumeConfiguration currentConfiguration;

    public VolumeRecommendation withCurrentConfiguration(VolumeConfiguration currentConfiguration) {
        this.currentConfiguration = currentConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentPerformanceRisk")
    public CurrentPerformanceRiskEnum currentPerformanceRisk;

    public VolumeRecommendation withCurrentPerformanceRisk(CurrentPerformanceRiskEnum currentPerformanceRisk) {
        this.currentPerformanceRisk = currentPerformanceRisk;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("finding")
    public EBSFindingEnum finding;

    public VolumeRecommendation withFinding(EBSFindingEnum finding) {
        this.finding = finding;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastRefreshTimestamp")
    public OffsetDateTime lastRefreshTimestamp;

    public VolumeRecommendation withLastRefreshTimestamp(OffsetDateTime lastRefreshTimestamp) {
        this.lastRefreshTimestamp = lastRefreshTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lookBackPeriodInDays")
    public Double lookBackPeriodInDays;

    public VolumeRecommendation withLookBackPeriodInDays(Double lookBackPeriodInDays) {
        this.lookBackPeriodInDays = lookBackPeriodInDays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utilizationMetrics")
    public EBSUtilizationMetric[] utilizationMetrics;

    public VolumeRecommendation withUtilizationMetrics(EBSUtilizationMetric[] utilizationMetrics) {
        this.utilizationMetrics = utilizationMetrics;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeArn")
    public String volumeArn;

    public VolumeRecommendation withVolumeArn(String volumeArn) {
        this.volumeArn = volumeArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeRecommendationOptions")
    public VolumeRecommendationOption[] volumeRecommendationOptions;

    public VolumeRecommendation withVolumeRecommendationOptions(VolumeRecommendationOption[] volumeRecommendationOptions) {
        this.volumeRecommendationOptions = volumeRecommendationOptions;
        return this;
    }
    
    public VolumeRecommendation(){}
}
