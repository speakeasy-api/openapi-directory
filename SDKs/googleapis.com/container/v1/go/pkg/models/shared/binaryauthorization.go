// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BinaryAuthorizationEvaluationModeEnum - Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.
type BinaryAuthorizationEvaluationModeEnum string

const (
	BinaryAuthorizationEvaluationModeEnumEvaluationModeUnspecified     BinaryAuthorizationEvaluationModeEnum = "EVALUATION_MODE_UNSPECIFIED"
	BinaryAuthorizationEvaluationModeEnumDisabled                      BinaryAuthorizationEvaluationModeEnum = "DISABLED"
	BinaryAuthorizationEvaluationModeEnumProjectSingletonPolicyEnforce BinaryAuthorizationEvaluationModeEnum = "PROJECT_SINGLETON_POLICY_ENFORCE"
)

func (e *BinaryAuthorizationEvaluationModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EVALUATION_MODE_UNSPECIFIED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "PROJECT_SINGLETON_POLICY_ENFORCE":
		*e = BinaryAuthorizationEvaluationModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BinaryAuthorizationEvaluationModeEnum: %s", s)
	}
}

// BinaryAuthorization - Configuration for Binary Authorization.
type BinaryAuthorization struct {
	// This field is deprecated. Leave this unset and instead configure BinaryAuthorization using evaluation_mode. If evaluation_mode is set to anything other than EVALUATION_MODE_UNSPECIFIED, this field is ignored.
	Enabled *bool `json:"enabled,omitempty"`
	// Mode of operation for binauthz policy evaluation. If unspecified, defaults to DISABLED.
	EvaluationMode *BinaryAuthorizationEvaluationModeEnum `json:"evaluationMode,omitempty"`
}
