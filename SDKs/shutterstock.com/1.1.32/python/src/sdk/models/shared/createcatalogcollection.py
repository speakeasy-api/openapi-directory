"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import createcatalogcollectionitem as shared_createcatalogcollectionitem
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreateCatalogCollectionVisibilityEnum(str, Enum):
    PRIVATE = 'private'
    PUBLIC = 'public'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateCatalogCollection:
    r"""Create a catalog collection and, optionally, add items."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    items: Optional[list[shared_createcatalogcollectionitem.CreateCatalogCollectionItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})  
    visibility: Optional[CreateCatalogCollectionVisibilityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('visibility'), 'exclude': lambda f: f is None }})  
    