/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProjectArtifacts - Information about the build output artifacts for the build project.
 */
public class ProjectArtifacts {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("artifactIdentifier")
    public String artifactIdentifier;

    public ProjectArtifacts withArtifactIdentifier(String artifactIdentifier) {
        this.artifactIdentifier = artifactIdentifier;
        return this;
    }
    
    /**
     * &lt;p&gt;Specifies the bucket owner's access for objects that another account uploads to their Amazon S3 bucket. By default, only the account that uploads the objects to the bucket has access to these objects. This property allows you to give the bucket owner access to these objects.&lt;/p&gt; &lt;note&gt; &lt;p&gt;To use this property, your CodeBuild service role must have the &lt;code&gt;s3:PutBucketAcl&lt;/code&gt; permission. This permission allows CodeBuild to modify the access control list for the bucket.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;This property can be one of the following values:&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;NONE&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;The bucket owner does not have access to the objects. This is the default.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;READ_ONLY&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;The bucket owner has read-only access to the objects. The uploading account retains ownership of the objects.&lt;/p&gt; &lt;/dd&gt; &lt;dt&gt;FULL&lt;/dt&gt; &lt;dd&gt; &lt;p&gt;The bucket owner has full access to the objects. Object ownership is determined by the following criteria:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;If the bucket is configured with the &lt;b&gt;Bucket owner preferred&lt;/b&gt; setting, the bucket owner owns the objects. The uploading account will have object access as specified by the bucket's policy.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Otherwise, the uploading account retains ownership of the objects.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;For more information about Amazon S3 object ownership, see &lt;a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html"&gt;Controlling ownership of uploaded objects using S3 Object Ownership&lt;/a&gt; in the &lt;i&gt;Amazon Simple Storage Service User Guide&lt;/i&gt;.&lt;/p&gt; &lt;/dd&gt; &lt;/dl&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bucketOwnerAccess")
    public BucketOwnerAccessEnum bucketOwnerAccess;

    public ProjectArtifacts withBucketOwnerAccess(BucketOwnerAccessEnum bucketOwnerAccess) {
        this.bucketOwnerAccess = bucketOwnerAccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionDisabled")
    public Boolean encryptionDisabled;

    public ProjectArtifacts withEncryptionDisabled(Boolean encryptionDisabled) {
        this.encryptionDisabled = encryptionDisabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public ProjectArtifacts withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ProjectArtifacts withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespaceType")
    public ArtifactNamespaceEnum namespaceType;

    public ProjectArtifacts withNamespaceType(ArtifactNamespaceEnum namespaceType) {
        this.namespaceType = namespaceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overrideArtifactName")
    public Boolean overrideArtifactName;

    public ProjectArtifacts withOverrideArtifactName(Boolean overrideArtifactName) {
        this.overrideArtifactName = overrideArtifactName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packaging")
    public ArtifactPackagingEnum packaging;

    public ProjectArtifacts withPackaging(ArtifactPackagingEnum packaging) {
        this.packaging = packaging;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public ProjectArtifacts withPath(String path) {
        this.path = path;
        return this;
    }
    
    @JsonProperty("type")
    public ArtifactsTypeEnum type;

    public ProjectArtifacts withType(ArtifactsTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public ProjectArtifacts(@JsonProperty("type") ArtifactsTypeEnum type) {
        this.type = type;
  }
}
