/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDatalabelingV1beta1EvaluationJobConfig - Configures specific details of how a continuous evaluation job works. Provide this configuration when you create an EvaluationJob.
 */
public class GoogleCloudDatalabelingV1beta1EvaluationJobConfig {
    /**
     * Required. Prediction keys that tell Data Labeling Service where to find the data for evaluation in your BigQuery table. When the service samples prediction input and output from your model version and saves it to BigQuery, the data gets stored as JSON strings in the BigQuery table. These keys tell Data Labeling Service how to parse the JSON. You can provide the following entries in this field: * `data_json_key`: the data key for prediction input. You must provide either this key or `reference_json_key`. * `reference_json_key`: the data reference key for prediction input. You must provide either this key or `data_json_key`. * `label_json_key`: the label key for prediction output. Required. * `label_score_json_key`: the score key for prediction output. Required. * `bounding_box_json_key`: the bounding box key for prediction output. Required if your model version perform image object detection. Learn [how to configure prediction keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bigqueryImportKeys")
    public java.util.Map<String, String> bigqueryImportKeys;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withBigqueryImportKeys(java.util.Map<String, String> bigqueryImportKeys) {
        this.bigqueryImportKeys = bigqueryImportKeys;
        return this;
    }
    
    /**
     * Config for image bounding poly (and bounding box) human labeling task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("boundingPolyConfig")
    public GoogleCloudDatalabelingV1beta1BoundingPolyConfig boundingPolyConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withBoundingPolyConfig(GoogleCloudDatalabelingV1beta1BoundingPolyConfig boundingPolyConfig) {
        this.boundingPolyConfig = boundingPolyConfig;
        return this;
    }
    
    /**
     * Configuration details used for calculating evaluation metrics and creating an Evaluation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evaluationConfig")
    public GoogleCloudDatalabelingV1beta1EvaluationConfig evaluationConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withEvaluationConfig(GoogleCloudDatalabelingV1beta1EvaluationConfig evaluationConfig) {
        this.evaluationConfig = evaluationConfig;
        return this;
    }
    
    /**
     * Provides details for how an evaluation job sends email alerts based on the results of a run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evaluationJobAlertConfig")
    public GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig evaluationJobAlertConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withEvaluationJobAlertConfig(GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig evaluationJobAlertConfig) {
        this.evaluationJobAlertConfig = evaluationJobAlertConfig;
        return this;
    }
    
    /**
     * Required. The maximum number of predictions to sample and save to BigQuery during each evaluation interval. This limit overrides `example_sample_percentage`: even if the service has not sampled enough predictions to fulfill `example_sample_perecentage` during an interval, it stops sampling predictions when it meets this limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exampleCount")
    public Integer exampleCount;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withExampleCount(Integer exampleCount) {
        this.exampleCount = exampleCount;
        return this;
    }
    
    /**
     * Required. Fraction of predictions to sample and save to BigQuery during each evaluation interval. For example, 0.1 means 10% of predictions served by your model version get saved to BigQuery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exampleSamplePercentage")
    public Double exampleSamplePercentage;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withExampleSamplePercentage(Double exampleSamplePercentage) {
        this.exampleSamplePercentage = exampleSamplePercentage;
        return this;
    }
    
    /**
     * Configuration for how human labeling task should be done.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("humanAnnotationConfig")
    public GoogleCloudDatalabelingV1beta1HumanAnnotationConfig humanAnnotationConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withHumanAnnotationConfig(GoogleCloudDatalabelingV1beta1HumanAnnotationConfig humanAnnotationConfig) {
        this.humanAnnotationConfig = humanAnnotationConfig;
        return this;
    }
    
    /**
     * Config for image classification human labeling task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageClassificationConfig")
    public GoogleCloudDatalabelingV1beta1ImageClassificationConfig imageClassificationConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withImageClassificationConfig(GoogleCloudDatalabelingV1beta1ImageClassificationConfig imageClassificationConfig) {
        this.imageClassificationConfig = imageClassificationConfig;
        return this;
    }
    
    /**
     * The configuration of input data, including data type, location, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputConfig")
    public GoogleCloudDatalabelingV1beta1InputConfig inputConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withInputConfig(GoogleCloudDatalabelingV1beta1InputConfig inputConfig) {
        this.inputConfig = inputConfig;
        return this;
    }
    
    /**
     * Config for text classification human labeling task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textClassificationConfig")
    public GoogleCloudDatalabelingV1beta1TextClassificationConfig textClassificationConfig;
    public GoogleCloudDatalabelingV1beta1EvaluationJobConfig withTextClassificationConfig(GoogleCloudDatalabelingV1beta1TextClassificationConfig textClassificationConfig) {
        this.textClassificationConfig = textClassificationConfig;
        return this;
    }
    
}
