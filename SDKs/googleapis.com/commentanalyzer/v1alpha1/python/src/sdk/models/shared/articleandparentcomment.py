"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import textentry as shared_textentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ArticleAndParentComment:
    r"""A type of context specific to a comment left on a single-threaded comment message board, where comments are either a top level comment or the child of a top level comment."""
    
    article: Optional[shared_textentry.TextEntry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('article'), 'exclude': lambda f: f is None }})
    r"""Represents a body of text."""  
    parent_comment: Optional[shared_textentry.TextEntry] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentComment'), 'exclude': lambda f: f is None }})
    r"""Represents a body of text."""  
    