/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class StoresListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class StoresListRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export class StoresList200ApplicationJSONIntuneDetailsAppCategory extends SpeakeasyBase {
  /**
   * ID for the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * display name for the app category
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class StoresList200ApplicationJSONIntuneDetailsTargetAudience extends SpeakeasyBase {
  /**
   * ID for the target audience/group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * display name for the target audience/group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Store details for intune
 */
export class StoresList200ApplicationJSONIntuneDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "app_category" })
  @Type(() => StoresList200ApplicationJSONIntuneDetailsAppCategory)
  appCategory?: StoresList200ApplicationJSONIntuneDetailsAppCategory;

  @SpeakeasyMetadata()
  @Expose({ name: "target_audience" })
  @Type(() => StoresList200ApplicationJSONIntuneDetailsTargetAudience)
  targetAudience?: StoresList200ApplicationJSONIntuneDetailsTargetAudience;
}

/**
 * Store track
 */
export enum StoresList200ApplicationJSONTrackEnum {
  Production = "production",
  Alpha = "alpha",
  Beta = "beta",
  TestflightInternal = "testflight-internal",
  TestflightExternal = "testflight-external",
}

/**
 * ExternalStoreResponse
 */
export class StoresList200ApplicationJSON extends SpeakeasyBase {
  /**
   * The ID of the principal that created the store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * The type of the principal that created the store.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by_principal_type" })
  createdByPrincipalType?: string;

  /**
   * Store id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Store details for intune
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intune_details" })
  @Type(() => StoresList200ApplicationJSONIntuneDetails)
  intuneDetails?: StoresList200ApplicationJSONIntuneDetails;

  /**
   * Store Name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Id for the shared service connection. In case of Apple / GooglePlay stores, this connection will be used to connect to the Apple / Google stores in App Center.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_connection_id" })
  serviceConnectionId?: string;

  /**
   * Store track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "track" })
  track?: StoresList200ApplicationJSONTrackEnum;

  /**
   * Store Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class StoresListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: StoresList200ApplicationJSON })
  storesList200ApplicationJSONObjects?: StoresList200ApplicationJSON[];
}
