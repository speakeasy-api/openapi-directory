// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type EventDistrictPointsPoints struct {
	// Points awarded for alliance selection
	AlliancePoints int64 `json:"alliance_points"`
	// Points awarded for event awards.
	AwardPoints int64 `json:"award_points"`
	// Points awarded for elimination match performance.
	ElimPoints int64 `json:"elim_points"`
	// Points awarded for qualification match performance.
	QualPoints int64 `json:"qual_points"`
	// Total points awarded at this event.
	Total int64 `json:"total"`
}

type EventDistrictPointsTiebreakers struct {
	HighestQualScores []int64 `json:"highest_qual_scores,omitempty"`
	QualWins          *int64  `json:"qual_wins,omitempty"`
}

// EventDistrictPoints - Successful response
type EventDistrictPoints struct {
	// Points gained for each team at the event. Stored as a key-value pair with the team key as the key, and an object describing the points as its value.
	Points map[string]EventDistrictPointsPoints `json:"points"`
	// Tiebreaker values for each team at the event. Stored as a key-value pair with the team key as the key, and an object describing the tiebreaker elements as its value.
	Tiebreakers map[string]EventDistrictPointsTiebreakers `json:"tiebreakers,omitempty"`
}
