/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Thing group properties.
 */
export class UpdateDynamicThingGroupRequestBodyThingGroupProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributePayload" })
  @Type(() => shared.AttributePayload)
  attributePayload?: shared.AttributePayload;

  @SpeakeasyMetadata()
  @Expose({ name: "thingGroupDescription" })
  thingGroupDescription?: string;
}

export class UpdateDynamicThingGroupRequestBody extends SpeakeasyBase {
  /**
   * The expected version of the dynamic thing group to update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedVersion" })
  expectedVersion?: number;

  /**
   * <p>The dynamic thing group index to update.</p> <note> <p>Currently one index is supported: <code>AWS_Things</code>.</p> </note>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "indexName" })
  indexName?: string;

  /**
   * The dynamic thing group search query string to update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryString" })
  queryString?: string;

  /**
   * <p>The dynamic thing group query version to update.</p> <note> <p>Currently one query version is supported: "2017-09-30". If not specified, the query version defaults to this value.</p> </note>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryVersion" })
  queryVersion?: string;

  /**
   * Thing group properties.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thingGroupProperties" })
  @Type(() => UpdateDynamicThingGroupRequestBodyThingGroupProperties)
  thingGroupProperties: UpdateDynamicThingGroupRequestBodyThingGroupProperties;
}

export class UpdateDynamicThingGroupRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateDynamicThingGroupRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The name of the dynamic thing group to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=thingGroupName",
  })
  thingGroupName: string;
}

export class UpdateDynamicThingGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidQueryException
   */
  @SpeakeasyMetadata()
  invalidQueryException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateDynamicThingGroupResponse?: shared.UpdateDynamicThingGroupResponse;

  /**
   * VersionConflictException
   */
  @SpeakeasyMetadata()
  versionConflictException?: any;
}
