/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionTypeId } from "./actiontypeid";
import { ArtifactDetail } from "./artifactdetail";
import { Expose, Type } from "class-transformer";

/**
 * Input information used for an action execution.
 */
export class ActionExecutionInput extends SpeakeasyBase {
  /**
   * Represents information about an action type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actionTypeId" })
  @Type(() => ActionTypeId)
  actionTypeId?: ActionTypeId;

  @SpeakeasyMetadata()
  @Expose({ name: "configuration" })
  configuration?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: ArtifactDetail })
  @Expose({ name: "inputArtifacts" })
  @Type(() => ArtifactDetail)
  inputArtifacts?: ArtifactDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "namespace" })
  namespace?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resolvedConfiguration" })
  resolvedConfiguration?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;
}
