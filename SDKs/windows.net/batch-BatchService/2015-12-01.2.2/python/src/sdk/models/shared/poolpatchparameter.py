"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applicationpackagereference as shared_applicationpackagereference
from ..shared import certificatereference as shared_certificatereference
from ..shared import metadataitem as shared_metadataitem
from ..shared import starttask as shared_starttask
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PoolPatchParameter:
    r"""Parameters for a CloudPoolOperations.Patch request."""
    
    application_package_references: Optional[list[shared_applicationpackagereference.ApplicationPackageReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applicationPackageReferences'), 'exclude': lambda f: f is None }})
    r"""Sets a list of application packages to be installed on each compute node in the pool. If omitted, any existing application package references are left unchanged."""  
    certificate_references: Optional[list[shared_certificatereference.CertificateReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('certificateReferences'), 'exclude': lambda f: f is None }})
    r"""Sets a list of certificates to be installed on each compute node in the pool. If omitted, any existing certificate references are left unchanged."""  
    metadata: Optional[list[shared_metadataitem.MetadataItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata'), 'exclude': lambda f: f is None }})
    r"""Sets a list of name-value pairs associated with the pool as metadata. If omitted, any existing metadata is left unchanged."""  
    start_task: Optional[shared_starttask.StartTask] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTask'), 'exclude': lambda f: f is None }})
    r"""A task defined on a pool and run by compute nodes when they join the pool."""  
    