<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ProjectsUpdateRequestBody
{
    /**
     * Body of the project
     * 
     * @var ?string $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $body = null;
    
    /**
     * Name of the project
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The baseline permission that all organization members have on this project
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ProjectsUpdateRequestBodyOrganizationPermissionEnum $organizationPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_permission')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ProjectsUpdateRequestBodyOrganizationPermissionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProjectsUpdateRequestBodyOrganizationPermissionEnum $organizationPermission = null;
    
    /**
     * Whether or not this project can be seen by everyone.
     * 
     * @var ?bool $private
     */
	#[\JMS\Serializer\Annotation\SerializedName('private')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $private = null;
    
    /**
     * State of the project; either 'open' or 'closed'
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
	public function __construct()
	{
		$this->body = null;
		$this->name = null;
		$this->organizationPermission = null;
		$this->private = null;
		$this->state = null;
	}
}
