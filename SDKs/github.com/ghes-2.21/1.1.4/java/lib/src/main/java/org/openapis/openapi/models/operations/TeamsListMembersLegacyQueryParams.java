/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class TeamsListMembersLegacyQueryParams {
    /**
     * Page number of the results to fetch.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public TeamsListMembersLegacyQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Results per page (max 100)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;
    public TeamsListMembersLegacyQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * Filters members returned by their role in the team. Can be one of:  
     * \* `member` - normal members of the team.  
     * \* `maintainer` - team maintainers.  
     * \* `all` - all members of the team.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=role")
    public TeamsListMembersLegacyRoleEnum role;
    public TeamsListMembersLegacyQueryParams withRole(TeamsListMembersLegacyRoleEnum role) {
        this.role = role;
        return this;
    }
    
}
