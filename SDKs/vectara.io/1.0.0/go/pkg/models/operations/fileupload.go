// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FileUploadSecurity struct {
	APIKeyAuth *shared.SchemeAPIKeyAuth `security:"scheme,type=apiKey,subtype=header"`
	OAuth      *shared.SchemeOAuth      `security:"scheme,type=oauth2"`
}

type FileUploadQueryParams struct {
	// Customer ID
	C int64 `queryParam:"style=form,explode=true,name=c"`
	// If true, the server returns the extracted document that was indexed
	D *bool `queryParam:"style=form,explode=true,name=d"`
	// Corpus ID
	O int64 `queryParam:"style=form,explode=true,name=o"`
}

type FileUploadRequestBodyFile struct {
	Content []byte `multipartForm:"content"`
	File    string `multipartForm:"name=file"`
}

type FileUploadRequestBody struct {
	// A JSON string of any additional metadata you want attached to the file.
	DocMetadata *string `multipartForm:"name=doc_metadata"`
	// The file to be indexed into Vectara.
	File *FileUploadRequestBodyFile `multipartForm:"file"`
}

type FileUploadRequest struct {
	QueryParams FileUploadQueryParams
	Request     *FileUploadRequestBody `request:"mediaType=multipart/form-data"`
	Security    FileUploadSecurity
}

// FileUpload400ApplicationJSON - An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.
type FileUpload400ApplicationJSON struct {
	// Returned HTTP code
	HTTPCode *int64 `json:"httpCode,omitempty"`
}

type FileUpload200ApplicationJSONResponseQuotaConsumed struct {
	// The number of characters Vectara indexed from the file uploaded.
	NumChars *string `json:"numChars,omitempty"`
	// The number of metadata characters Vectara indexed from the file uploaded.
	NumMetadataChars *string `json:"numMetadataChars,omitempty"`
}

type FileUpload200ApplicationJSONResponse struct {
	QuotaConsumed *FileUpload200ApplicationJSONResponseQuotaConsumed `json:"quotaConsumed,omitempty"`
	Status        map[string]interface{}                             `json:"status,omitempty"`
}

// FileUpload200ApplicationJSON - A successful response
type FileUpload200ApplicationJSON struct {
	Response *FileUpload200ApplicationJSONResponse `json:"response,omitempty"`
}

type FileUploadResponse struct {
	ContentType string
	// A successful response
	FileUpload200ApplicationJSONObject *FileUpload200ApplicationJSON
	// An invalid request was sent.  e.g. one or more parameters was missing, or the corpus does not exist.
	FileUpload400ApplicationJSONObject *FileUpload400ApplicationJSON
	StatusCode                         int
	RawResponse                        *http.Response
}
