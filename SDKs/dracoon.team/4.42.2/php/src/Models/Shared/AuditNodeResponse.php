<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AuditNodeResponse - Audit node report
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AuditNodeResponse
{
    /**
     * List of assigned users with permissions
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\AuditUserPermission> $auditUserPermissionList
     */
	#[\JMS\Serializer\Annotation\SerializedName('auditUserPermissionList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AuditUserPermission>')]
    public array $auditUserPermissionList;
    
    /**
     * Number of direct children
     * 
     * 
     * (no recursion; for rooms only)
     * 
     * @var int $nodeCntChildren
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeCntChildren')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $nodeCntChildren;
    
    /**
     * Creation date
     * 
     * @var ?\DateTime $nodeCreatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeCreatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $nodeCreatedAt = null;
    
    /**
     * User information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserInfo $nodeCreatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeCreatedBy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserInfo $nodeCreatedBy = null;
    
    /**
     * Is activities log active (for rooms only)
     * 
     * @var ?bool $nodeHasActivitiesLog
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeHasActivitiesLog')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nodeHasActivitiesLog = null;
    
    /**
     * &#128679; Deprecated since v4.10.0
     * 
     * 
     * Is recycle bin active (for rooms only)
     * 
     * Recycle bin is always on (disabling is not possible).
     * 
     * @var ?bool $nodeHasRecycleBin
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeHasRecycleBin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nodeHasRecycleBin = null;
    
    /**
     * Node ID
     * 
     * @var int $nodeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $nodeId;
    
    /**
     * Encryption state
     * 
     * @var ?bool $nodeIsEncrypted
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeIsEncrypted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $nodeIsEncrypted = null;
    
    /**
     * Node name
     * 
     * @var string $nodeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeName;
    
    /**
     * Parent node ID (room or folder)
     * 
     * @var ?int $nodeParentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeParentId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nodeParentId = null;
    
    /**
     * Parent node path
     * 
     * 
     * `/` if node is a root node (room)
     * 
     * @var string $nodeParentPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeParentPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeParentPath;
    
    /**
     * Quota in byte
     * 
     * @var ?int $nodeQuota
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeQuota')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nodeQuota = null;
    
    /**
     * Retention period for deleted nodes in days
     * 
     * @var ?int $nodeRecycleBinRetentionPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeRecycleBinRetentionPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nodeRecycleBinRetentionPeriod = null;
    
    /**
     * Node size in byte
     * 
     * @var ?int $nodeSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $nodeSize = null;
    
    /**
     * Modification date
     * 
     * @var ?\DateTime $nodeUpdatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeUpdatedAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $nodeUpdatedAt = null;
    
    /**
     * User information
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\UserInfo $nodeUpdatedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeUpdatedBy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UserInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UserInfo $nodeUpdatedBy = null;
    
	public function __construct()
	{
		$this->auditUserPermissionList = [];
		$this->nodeCntChildren = 0;
		$this->nodeCreatedAt = null;
		$this->nodeCreatedBy = null;
		$this->nodeHasActivitiesLog = null;
		$this->nodeHasRecycleBin = null;
		$this->nodeId = 0;
		$this->nodeIsEncrypted = null;
		$this->nodeName = "";
		$this->nodeParentId = null;
		$this->nodeParentPath = "";
		$this->nodeQuota = null;
		$this->nodeRecycleBinRetentionPeriod = null;
		$this->nodeSize = null;
		$this->nodeUpdatedAt = null;
		$this->nodeUpdatedBy = null;
	}
}
