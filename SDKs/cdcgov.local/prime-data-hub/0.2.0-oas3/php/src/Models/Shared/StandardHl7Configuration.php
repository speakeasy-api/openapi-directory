<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StandardHl7Configuration - A standard HL7 configuration
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StandardHl7Configuration
{
    /**
     * A comma delimited list of HL7 fields to convert to the yyyMMddHHmmss format
     * 
     * @var ?string $convertTimestampToDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('convertTimestampToDateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $convertTimestampToDateTime = null;
    
    /**
     * Default the AOE result to UNK
     * 
     * @var ?bool $defaultAoeToUnknown
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultAoeToUnknown')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $defaultAoeToUnknown = null;
    
    /**
     * Include the AOE
     * 
     * @var bool $includeAOE
     */
	#[\JMS\Serializer\Annotation\SerializedName('includeAOE')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $includeAOE;
    
    /**
     * The format to use for the file name generated by the translation
     * 
     * @var ?string $nameFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('nameFormat')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nameFormat = null;
    
    /**
     * How to format phone numbers (XTN fields)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StandardHl7ConfigurationPhoneNumberFormattingEnum $phoneNumberFormatting
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumberFormatting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StandardHl7ConfigurationPhoneNumberFormattingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StandardHl7ConfigurationPhoneNumberFormattingEnum $phoneNumberFormatting = null;
    
    /**
     * The receiving application name (needed for HL7 formats)
     * 
     * @var ?string $receivingApplicationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivingApplicationName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivingApplicationName = null;
    
    /**
     * The receiving application OID
     * 
     * @var ?string $receivingApplicationOID
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivingApplicationOID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivingApplicationOID = null;
    
    /**
     * The receiving facility name
     * 
     * @var ?string $receivingFacilityName
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivingFacilityName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivingFacilityName = null;
    
    /**
     * The receiving facility name
     * 
     * @var ?string $receivingFacilityOID
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivingFacilityOID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivingFacilityOID = null;
    
    /**
     * The name of the receiving organization in the message
     * 
     * @var ?string $receivingOrganization
     */
	#[\JMS\Serializer\Annotation\SerializedName('receivingOrganization')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $receivingOrganization = null;
    
    /**
     * The reporting facility id (if different from CDC PRIME's OID)
     * 
     * @var ?string $reportingFacilityId
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportingFacilityId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportingFacilityId = null;
    
    /**
     * The reporting facility id type (if different from OID)
     * 
     * @var ?string $reportingFacilityIdType
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportingFacilityIdType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportingFacilityIdType = null;
    
    /**
     * The reporting facility name (if different from CDC PRIME)
     * 
     * @var ?string $reportingFacilityName
     */
	#[\JMS\Serializer\Annotation\SerializedName('reportingFacilityName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reportingFacilityName = null;
    
    /**
     * Suppress the AOE OBX results
     * 
     * @var ?bool $suppressAoe
     */
	#[\JMS\Serializer\Annotation\SerializedName('suppressAoe')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $suppressAoe = null;
    
    /**
     * A comma delimited list of HL7 fields to suppress
     * 
     * @var ?string $suppressHl7Fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('suppressHl7Fields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $suppressHl7Fields = null;
    
    /**
     * Suppress QST component is AOE OBX segments
     * 
     * @var ?bool $suppressQstForAoe
     */
	#[\JMS\Serializer\Annotation\SerializedName('suppressQstForAoe')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $suppressQstForAoe = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('transport')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $transport;
    
    /**
     * Truncate the HD fields to HD_TRUNCATION_LIMIT
     * 
     * @var ?bool $truncateHDNamespaceIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('truncateHDNamespaceIds')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $truncateHDNamespaceIds = null;
    
    /**
     * The discrimenator
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * Use BHS and FHS header
     * 
     * @var bool $useBatchHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('useBatchHeaders')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $useBatchHeaders;
    
    /**
     * A comma delimited list of element names that should use blank instead of unknown
     * 
     * @var ?string $useBlankInsteadOfUnknown
     */
	#[\JMS\Serializer\Annotation\SerializedName('useBlankInsteadOfUnknown')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $useBlankInsteadOfUnknown = null;
    
    /**
     * Use the PID-14 field for patient email instead of the standard PID-13 field
     * 
     * @var ?bool $usePid14ForPatientEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('usePid14ForPatientEmail')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $usePid14ForPatientEmail = null;
    
    /**
     * Set a test process mode flag
     * 
     * @var ?bool $useTestProcessingMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('useTestProcessingMode')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useTestProcessingMode = null;
    
	public function __construct()
	{
		$this->convertTimestampToDateTime = null;
		$this->defaultAoeToUnknown = null;
		$this->includeAOE = false;
		$this->nameFormat = null;
		$this->phoneNumberFormatting = null;
		$this->receivingApplicationName = null;
		$this->receivingApplicationOID = null;
		$this->receivingFacilityName = null;
		$this->receivingFacilityOID = null;
		$this->receivingOrganization = null;
		$this->reportingFacilityId = null;
		$this->reportingFacilityIdType = null;
		$this->reportingFacilityName = null;
		$this->suppressAoe = null;
		$this->suppressHl7Fields = null;
		$this->suppressQstForAoe = null;
		$this->transport = null;
		$this->truncateHDNamespaceIds = null;
		$this->type = "";
		$this->useBatchHeaders = false;
		$this->useBlankInsteadOfUnknown = null;
		$this->usePid14ForPatientEmail = null;
		$this->useTestProcessingMode = null;
	}
}
