import { AxiosInstance } from "axios";
import { Association } from "./association";
import { Bioentity } from "./bioentity";
import { Bioentityset } from "./bioentityset";
import { BioentitysetHomologs } from "./bioentitysethomologs";
import { BioentitysetSlimmer } from "./bioentitysetslimmer";
import { Cam } from "./cam";
import { EvidenceGraph } from "./evidencegraph";
import { GenomeFeatures } from "./genomefeatures";
import { Graph } from "./graph";
import { IdentifierMapper } from "./identifiermapper";
import { IdentifierPrefixes } from "./identifierprefixes";
import { Individual } from "./individual";
import { Mart } from "./mart";
import { Metadata } from "./metadata";
import { NlpAnnotate } from "./nlpannotate";
import { Ontol } from "./ontol";
import { OntolLabeler } from "./ontollabeler";
import { Ontology } from "./ontology";
import { OwlOntology } from "./owlontology";
import { PairSim } from "./pairsim";
import { RelationUsage } from "./relationusage";
import { Search } from "./search";
import { Sim } from "./sim";
import { VariationSet } from "./variationset";
export declare const ServerList: readonly ["https://monarchinitiative.org/api"];
export type SDKProps = {
    defaultClient?: AxiosInstance;
    serverUrl?: string;
};
export declare class SDK {
    association: Association;
    bioentity: Bioentity;
    bioentityset: Bioentityset;
    bioentitysetHomologs: BioentitysetHomologs;
    bioentitysetSlimmer: BioentitysetSlimmer;
    cam: Cam;
    evidenceGraph: EvidenceGraph;
    genomeFeatures: GenomeFeatures;
    graph: Graph;
    identifierMapper: IdentifierMapper;
    identifierPrefixes: IdentifierPrefixes;
    individual: Individual;
    mart: Mart;
    metadata: Metadata;
    nlpAnnotate: NlpAnnotate;
    ontol: Ontol;
    ontolLabeler: OntolLabeler;
    ontology: Ontology;
    owlOntology: OwlOntology;
    pairSim: PairSim;
    relationUsage: RelationUsage;
    search: Search;
    sim: Sim;
    variationSet: VariationSet;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(props: SDKProps);
}
