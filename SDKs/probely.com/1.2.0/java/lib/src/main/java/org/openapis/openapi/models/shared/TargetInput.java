/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TargetInput {
    /**
     * Id of the connected target in a multi-environment targets.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connected_target")
    public String connectedTarget;
    public TargetInput withConnectedTarget(String connectedTarget) {
        this.connectedTarget = connectedTarget;
        return this;
    }
    
    /**
     * Multi-environment targets can identify environments using this property.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environment")
    public EnvironmentEnum environment;
    public TargetInput withEnvironment(EnvironmentEnum environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * User labels for the scope. (This feature is currently only available for certain accounts,
     * please contact our support if you are interested in using it)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public String[] labels;
    public TargetInput withLabels(String[] labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Custom name for the resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TargetInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * * default - default report, no extra information added
     * * owasp - adds table on OWASP Top 10 most critical web application risks
     * * pci - adds table on PCI requirements
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("report_type")
    public ReportTypeEnum reportType;
    public TargetInput withReportType(ReportTypeEnum reportType) {
        this.reportType = reportType;
        return this;
    }
    
    /**
     * * lightning - fast simple scan
     * * normal - default profile
     * * full - does everything the default profile does and adds boolean based
     * SQL injection tests
     * * safe - doesn't use any content changing methods (no POST, DELETE, etc)
     * and tries fewer payloads for SQL injection tests
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scan_profile")
    public ScanProfileEnum scanProfile;
    public TargetInput withScanProfile(ScanProfileEnum scanProfile) {
        this.scanProfile = scanProfile;
        return this;
    }
    
    /**
     * Main resource associated with a target
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("site")
    public SiteInput site;
    public TargetInput withSite(SiteInput site) {
        this.site = site;
        return this;
    }
    
    /**
     * The type of a target determines what the limitations imposed on a
     * target.
     * * free - Every account is allowed to have 5 free targets, these targets
     * do not need to be verified but can only perform lightning
     * scans.
     * * single - Single environment targets need to be verified but are
     * allowed to run any type of scan allowed by the plan.
     * * multi - Multi environment targets are used when you want
     * to scan the same application in different environments.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public TargetTypeEnum type;
    public TargetInput withType(TargetTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
