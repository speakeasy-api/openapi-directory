/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChoiceQuestion, ChoiceQuestionInput } from "./choicequestion";
import { DateQuestion } from "./datequestion";
import { FileUploadQuestion } from "./fileuploadquestion";
import { Grading } from "./grading";
import { RowQuestion } from "./rowquestion";
import { ScaleQuestion } from "./scalequestion";
import { TextQuestion } from "./textquestion";
import { TimeQuestion } from "./timequestion";
import { Expose, Type } from "class-transformer";

/**
 * Any question. The specific type of question is known by its `kind`.
 */
export class Question extends SpeakeasyBase {
  /**
   * A radio/checkbox/dropdown question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "choiceQuestion" })
  @Type(() => ChoiceQuestion)
  choiceQuestion?: ChoiceQuestion;

  /**
   * A date question. Date questions default to just month + day.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateQuestion" })
  @Type(() => DateQuestion)
  dateQuestion?: DateQuestion;

  /**
   * A file upload question. The API currently does not support creating file upload questions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileUploadQuestion" })
  @Type(() => FileUploadQuestion)
  fileUploadQuestion?: FileUploadQuestion;

  /**
   * Grading for a single question
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grading" })
  @Type(() => Grading)
  grading?: Grading;

  /**
   * Read only. The question ID. On creation, it can be provided but the ID must not be already used in the form. If not provided, a new ID is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "questionId" })
  questionId?: string;

  /**
   * Whether the question must be answered in order for a respondent to submit their response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * Configuration for a question that is part of a question group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rowQuestion" })
  @Type(() => RowQuestion)
  rowQuestion?: RowQuestion;

  /**
   * A scale question. The user has a range of numeric values to choose from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scaleQuestion" })
  @Type(() => ScaleQuestion)
  scaleQuestion?: ScaleQuestion;

  /**
   * A text-based question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textQuestion" })
  @Type(() => TextQuestion)
  textQuestion?: TextQuestion;

  /**
   * A time question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeQuestion" })
  @Type(() => TimeQuestion)
  timeQuestion?: TimeQuestion;
}

/**
 * Any question. The specific type of question is known by its `kind`.
 */
export class QuestionInput extends SpeakeasyBase {
  /**
   * A radio/checkbox/dropdown question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "choiceQuestion" })
  @Type(() => ChoiceQuestionInput)
  choiceQuestion?: ChoiceQuestionInput;

  /**
   * A date question. Date questions default to just month + day.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateQuestion" })
  @Type(() => DateQuestion)
  dateQuestion?: DateQuestion;

  /**
   * A file upload question. The API currently does not support creating file upload questions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileUploadQuestion" })
  @Type(() => FileUploadQuestion)
  fileUploadQuestion?: FileUploadQuestion;

  /**
   * Grading for a single question
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grading" })
  @Type(() => Grading)
  grading?: Grading;

  /**
   * Read only. The question ID. On creation, it can be provided but the ID must not be already used in the form. If not provided, a new ID is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "questionId" })
  questionId?: string;

  /**
   * Whether the question must be answered in order for a respondent to submit their response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required?: boolean;

  /**
   * Configuration for a question that is part of a question group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rowQuestion" })
  @Type(() => RowQuestion)
  rowQuestion?: RowQuestion;

  /**
   * A scale question. The user has a range of numeric values to choose from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scaleQuestion" })
  @Type(() => ScaleQuestion)
  scaleQuestion?: ScaleQuestion;

  /**
   * A text-based question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textQuestion" })
  @Type(() => TextQuestion)
  textQuestion?: TextQuestion;

  /**
   * A time question.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeQuestion" })
  @Type(() => TimeQuestion)
  timeQuestion?: TimeQuestion;
}
