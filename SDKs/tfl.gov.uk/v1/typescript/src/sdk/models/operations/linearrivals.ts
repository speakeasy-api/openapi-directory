/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Optional. The direction of travel. Can be inbound or outbound or all. If left blank, and destinationStopId is set, will default to all
 */
export enum LineArrivalsDirectionEnum {
  Inbound = "inbound",
  Outbound = "outbound",
  All = "all",
}

export class LineArrivalsRequest extends SpeakeasyBase {
  /**
   * Optional. Id of destination stop
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=destinationStationId",
  })
  destinationStationId?: string;

  /**
   * Optional. The direction of travel. Can be inbound or outbound or all. If left blank, and destinationStopId is set, will default to all
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: LineArrivalsDirectionEnum;

  /**
   * A comma-separated list of line ids e.g. victoria,circle,N133. Max. approx. 20 ids.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=ids" })
  ids: string[];

  /**
   * Optional. Id of stop to get arrival predictions for (station naptan code e.g. 940GZZLUASL, you can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=stopPointId",
  })
  stopPointId: string;
}

export class LineArrivalsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata({ elemType: shared.TflApiPresentationEntitiesPrediction })
  tflApiPresentationEntitiesPredictions?: shared.TflApiPresentationEntitiesPrediction[];
}
