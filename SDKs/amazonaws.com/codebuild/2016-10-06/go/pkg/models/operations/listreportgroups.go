// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListReportGroupsXAmzTargetEnum
type ListReportGroupsXAmzTargetEnum string

const (
	ListReportGroupsXAmzTargetEnumCodeBuild20161006ListReportGroups ListReportGroupsXAmzTargetEnum = "CodeBuild_20161006.ListReportGroups"
)

func (e ListReportGroupsXAmzTargetEnum) ToPointer() *ListReportGroupsXAmzTargetEnum {
	return &e
}

func (e *ListReportGroupsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.ListReportGroups":
		*e = ListReportGroupsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListReportGroupsXAmzTargetEnum: %v", v)
	}
}

type ListReportGroupsRequest struct {
	ListReportGroupsInput shared.ListReportGroupsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            ListReportGroupsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListReportGroupsResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListReportGroupsOutput *shared.ListReportGroupsOutput
	StatusCode             int
	RawResponse            *http.Response
}
