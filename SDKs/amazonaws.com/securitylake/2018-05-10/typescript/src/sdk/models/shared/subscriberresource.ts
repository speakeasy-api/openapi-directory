/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccessTypeEnum } from "./accesstypeenum";
import { EndpointProtocolEnum } from "./endpointprotocolenum";
import { SourceType } from "./sourcetype";
import { SubscriptionStatusEnum } from "./subscriptionstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides details about the Amazon Security Lake account subscription. Subscribers are notified of new objects for a source as the data is written to your Amazon S3 bucket for Security Lake.
 */
export class SubscriberResource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accessTypes" })
  accessTypes?: AccessTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceShareArn" })
  resourceShareArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceShareName" })
  resourceShareName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "s3BucketArn" })
  s3BucketArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "snsArn" })
  snsArn?: string;

  @SpeakeasyMetadata({ elemType: SourceType })
  @Expose({ name: "sourceTypes" })
  @Type(() => SourceType)
  sourceTypes: SourceType[];

  @SpeakeasyMetadata()
  @Expose({ name: "subscriberDescription" })
  subscriberDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriberName" })
  subscriberName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionEndpoint" })
  subscriptionEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionId" })
  subscriptionId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionProtocol" })
  subscriptionProtocol?: EndpointProtocolEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionStatus" })
  subscriptionStatus?: SubscriptionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
