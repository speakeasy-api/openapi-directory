<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAppsCardV1Widget - Each card is made up of widgets. A widget is a composite object that can represent one of text, images, buttons, and other object types.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAppsCardV1Widget
{
    /**
     * A list of buttons layed out horizontally.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1ButtonList $buttonList
     */
	#[\JMS\Serializer\Annotation\SerializedName('buttonList')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1ButtonList')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1ButtonList $buttonList = null;
    
    /**
     * Lets users specify a date, a time, or both a date and a time. Accepts text input from users, but features an interactive date and time selector that helps users enter correctly-formatted dates and times. If users enter a date or time incorrectly, the widget shows an error that prompts users to enter the correct format. Not supported by Chat apps. Support by Chat apps coming soon.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1DateTimePicker $dateTimePicker
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateTimePicker')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1DateTimePicker')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1DateTimePicker $dateTimePicker = null;
    
    /**
     * A widget that displays text with optional decorations such as a label above or below the text, an icon in front of the text, a selection widget or a button after the text.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1DecoratedText $decoratedText
     */
	#[\JMS\Serializer\Annotation\SerializedName('decoratedText')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1DecoratedText')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1DecoratedText $decoratedText = null;
    
    /**
     * Displays a divider between widgets, a horizontal line. For example, the following JSON creates a divider: ``` "divider": {} ```
     * 
     * @var ?array<string, mixed> $divider
     */
	#[\JMS\Serializer\Annotation\SerializedName('divider')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $divider = null;
    
    /**
     * Displays a grid with a collection of items. A grid supports any number of columns and items. The number of rows is determined by items divided by columns. A grid with 10 items and 2 columns has 5 rows. A grid with 11 items and 2 columns has 6 rows. For example, the following JSON creates a 2 column grid with a single item: ``` "grid": { "title": "A fine collection of items", "columnCount": 2, "borderStyle": { "type": "STROKE", "cornerRadius": 4 }, "items": [ { "image": { "imageUri": "https://www.example.com/image.png", "cropStyle": { "type": "SQUARE" }, "borderStyle": { "type": "STROKE" } }, "title": "An item", "textAlignment": "CENTER" } ], "onClick": { "openLink": { "url": "https://www.example.com" } } } ```
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Grid $grid
     */
	#[\JMS\Serializer\Annotation\SerializedName('grid')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Grid')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Grid $grid = null;
    
    /**
     * An image that is specified by a URL and can have an `onClick` action.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Image $image
     */
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Image')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Image $image = null;
    
    /**
     * A widget that creates one or more UI items that users can select. For example, a dropdown menu or checkboxes. You can use this widget to collect data that can be predicted or enumerated. Chat apps can process the value of items that users select or input. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs). To collect undefined or abstract data from users, use the TextInput widget.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1SelectionInput $selectionInput
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectionInput')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1SelectionInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1SelectionInput $selectionInput = null;
    
    /**
     * A field in which users can enter text. Supports suggestions and on-change actions. Chat apps receive and can process the value of entered text during form input events. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs). When you need to collect undefined or abstract data from users, use a text input. To collect defined or enumerated data from users, use the SelectionInput widget.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1TextInput $textInput
     */
	#[\JMS\Serializer\Annotation\SerializedName('textInput')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1TextInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1TextInput $textInput = null;
    
    /**
     * A paragraph of text that supports formatting. For more information about formatting text, see Formatting text in Google Chat apps and Formatting text in Google Workspace Add-ons.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1TextParagraph $textParagraph
     */
	#[\JMS\Serializer\Annotation\SerializedName('textParagraph')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1TextParagraph')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1TextParagraph $textParagraph = null;
    
	public function __construct()
	{
		$this->buttonList = null;
		$this->dateTimePicker = null;
		$this->decoratedText = null;
		$this->divider = null;
		$this->grid = null;
		$this->image = null;
		$this->selectionInput = null;
		$this->textInput = null;
		$this->textParagraph = null;
	}
}
