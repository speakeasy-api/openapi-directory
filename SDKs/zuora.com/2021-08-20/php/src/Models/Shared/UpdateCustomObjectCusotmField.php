<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UpdateCustomObjectCusotmField - A reference to a field.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UpdateCustomObjectCusotmField
{
    /**
     * The custom field definition in the custom object
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomObjectCustomFieldDefinitionUpdate $definition
     */
	#[\JMS\Serializer\Annotation\SerializedName('definition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomObjectCustomFieldDefinitionUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomObjectCustomFieldDefinitionUpdate $definition = null;
    
    /**
     * Indicates whether the field is filterable or not. Applicable to `addField` and `updateField` actions.
     * 
     * 
     * You can change a filterable field to non-filterable and vice versa. You can also add a filterable field. One custom object can have a maximum of 10 filterable fields.
     * 
     * Note that changing filterable fields triggers reindexing. It will take 12-24 hours before all your data are reindexed and available to query.
     * 
     * 
     * @var ?bool $filterable
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $filterable = null;
    
    /**
     * The name of the custom field to be updated
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Indicates whether the field is required or optional.
     * 
     * 
     * You can update a required field to optional. On the other hand, you can only update an optional field to required on the custom object with no records.
     * 
     * You can only add a required field to the custom object with no records.
     * 
     * 
     * @var ?bool $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $required = null;
    
    /**
     * Required if the `type` of the action is `renameField`
     * 
     * @var ?string $targetName
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetName = null;
    
	public function __construct()
	{
		$this->definition = null;
		$this->filterable = null;
		$this->name = null;
		$this->required = null;
		$this->targetName = null;
	}
}
