// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RestoreTableFromBackupXAmzTargetEnum
type RestoreTableFromBackupXAmzTargetEnum string

const (
	RestoreTableFromBackupXAmzTargetEnumDynamoDb20120810RestoreTableFromBackup RestoreTableFromBackupXAmzTargetEnum = "DynamoDB_20120810.RestoreTableFromBackup"
)

func (e RestoreTableFromBackupXAmzTargetEnum) ToPointer() *RestoreTableFromBackupXAmzTargetEnum {
	return &e
}

func (e *RestoreTableFromBackupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DynamoDB_20120810.RestoreTableFromBackup":
		*e = RestoreTableFromBackupXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RestoreTableFromBackupXAmzTargetEnum: %v", v)
	}
}

type RestoreTableFromBackupRequest struct {
	RestoreTableFromBackupInput shared.RestoreTableFromBackupInput   `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  RestoreTableFromBackupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RestoreTableFromBackupResponse struct {
	// BackupInUseException
	BackupInUseException interface{}
	// BackupNotFoundException
	BackupNotFoundException interface{}
	ContentType             string
	// InternalServerError
	InternalServerError interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	RestoreTableFromBackupOutput *shared.RestoreTableFromBackupOutput
	StatusCode                   int
	RawResponse                  *http.Response
	// TableAlreadyExistsException
	TableAlreadyExistsException interface{}
	// TableInUseException
	TableInUseException interface{}
}
