// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UsersRemoveFromOrgSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type UsersRemoveFromOrgRequest struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
	// The slug name of the user
	UserName string `pathParam:"style=simple,explode=false,name=user_name"`
}

type UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum string

const (
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumBadRequest          UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumConflict            UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "Conflict"
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumNotAcceptable       UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumNotFound            UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "NotFound"
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumInternalServerError UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumUnauthorized        UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnumTooManyRequests     UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum) ToPointer() *UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type UsersRemoveFromOrgDefaultApplicationJSONError struct {
	Code    UsersRemoveFromOrgDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                `json:"message"`
}

// UsersRemoveFromOrgDefaultApplicationJSON - Error
type UsersRemoveFromOrgDefaultApplicationJSON struct {
	Error UsersRemoveFromOrgDefaultApplicationJSONError `json:"error"`
}

type UsersRemoveFromOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	UsersRemoveFromOrgDefaultApplicationJSONObject *UsersRemoveFromOrgDefaultApplicationJSON
}
