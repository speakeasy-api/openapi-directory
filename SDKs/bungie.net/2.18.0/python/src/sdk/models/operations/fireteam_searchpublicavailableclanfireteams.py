"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import searchresultoffireteamsummary as shared_searchresultoffireteamsummary
from typing import Optional


@dataclasses.dataclass
class FireteamSearchPublicAvailableClanFireteamsSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class FireteamSearchPublicAvailableClanFireteamsRequest:
    
    activity_type: int = dataclasses.field(metadata={'path_param': { 'field_name': 'activityType', 'style': 'simple', 'explode': False }})
    r"""The activity type to filter by."""  
    date_range: int = dataclasses.field(metadata={'path_param': { 'field_name': 'dateRange', 'style': 'simple', 'explode': False }})
    r"""The date range to grab available fireteams."""  
    page: int = dataclasses.field(metadata={'path_param': { 'field_name': 'page', 'style': 'simple', 'explode': False }})
    r"""Zero based page"""  
    platform: int = dataclasses.field(metadata={'path_param': { 'field_name': 'platform', 'style': 'simple', 'explode': False }})
    r"""The platform filter."""  
    slot_filter: int = dataclasses.field(metadata={'path_param': { 'field_name': 'slotFilter', 'style': 'simple', 'explode': False }})
    r"""Filters based on available slots"""  
    exclude_immediate: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'excludeImmediate', 'style': 'form', 'explode': True }})
    r"""If you wish the result to exclude immediate fireteams, set this to true. Immediate-only can be forced using the dateRange enum."""  
    lang_filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'langFilter', 'style': 'form', 'explode': True }})
    r"""An optional language filter."""  
    

@dataclasses.dataclass
class FireteamSearchPublicAvailableClanFireteams200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[shared_searchresultoffireteamsummary.SearchResultOfFireteamSummary] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class FireteamSearchPublicAvailableClanFireteamsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    