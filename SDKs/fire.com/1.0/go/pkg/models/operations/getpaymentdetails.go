// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetPaymentDetailsPathParams struct {
	PaymentUUID string `pathParam:"style=simple,explode=false,name=paymentUuid"`
}

type GetPaymentDetailsRequest struct {
	PathParams GetPaymentDetailsPathParams
}

// GetPaymentDetailsPaymentRequestStatusEnum - The status of the transaction
type GetPaymentDetailsPaymentRequestStatusEnum string

const (
	GetPaymentDetailsPaymentRequestStatusEnumAwaitingAuthorisation      GetPaymentDetailsPaymentRequestStatusEnum = "AWAITING_AUTHORISATION"
	GetPaymentDetailsPaymentRequestStatusEnumAuthorised                 GetPaymentDetailsPaymentRequestStatusEnum = "AUTHORISED"
	GetPaymentDetailsPaymentRequestStatusEnumAwaitingMultiAuthorisation GetPaymentDetailsPaymentRequestStatusEnum = "AWAITING_MULTI_AUTHORISATION"
	GetPaymentDetailsPaymentRequestStatusEnumNotAuthorised              GetPaymentDetailsPaymentRequestStatusEnum = "NOT_AUTHORISED"
	GetPaymentDetailsPaymentRequestStatusEnumPaid                       GetPaymentDetailsPaymentRequestStatusEnum = "PAID"
	GetPaymentDetailsPaymentRequestStatusEnumRejected                   GetPaymentDetailsPaymentRequestStatusEnum = "REJECTED"
	GetPaymentDetailsPaymentRequestStatusEnumAccepted                   GetPaymentDetailsPaymentRequestStatusEnum = "ACCEPTED"
	GetPaymentDetailsPaymentRequestStatusEnumReceived                   GetPaymentDetailsPaymentRequestStatusEnum = "RECEIVED"
)

func (e *GetPaymentDetailsPaymentRequestStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWAITING_AUTHORISATION":
		fallthrough
	case "AUTHORISED":
		fallthrough
	case "AWAITING_MULTI_AUTHORISATION":
		fallthrough
	case "NOT_AUTHORISED":
		fallthrough
	case "PAID":
		fallthrough
	case "REJECTED":
		fallthrough
	case "ACCEPTED":
		fallthrough
	case "RECEIVED":
		*e = GetPaymentDetailsPaymentRequestStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPaymentDetailsPaymentRequestStatusEnum: %s", s)
	}
}

// GetPaymentDetailsPaymentRequestTransactionTypeEnum - The type of payment request payment
type GetPaymentDetailsPaymentRequestTransactionTypeEnum string

const (
	GetPaymentDetailsPaymentRequestTransactionTypeEnumRefundRequest GetPaymentDetailsPaymentRequestTransactionTypeEnum = "REFUND_REQUEST"
	GetPaymentDetailsPaymentRequestTransactionTypeEnumPayment       GetPaymentDetailsPaymentRequestTransactionTypeEnum = "PAYMENT"
)

func (e *GetPaymentDetailsPaymentRequestTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REFUND_REQUEST":
		fallthrough
	case "PAYMENT":
		*e = GetPaymentDetailsPaymentRequestTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPaymentDetailsPaymentRequestTransactionTypeEnum: %s", s)
	}
}

// GetPaymentDetailsPaymentRequestTypeEnum - The type of Fire Open Payment that was created
type GetPaymentDetailsPaymentRequestTypeEnum string

const (
	GetPaymentDetailsPaymentRequestTypeEnumOther GetPaymentDetailsPaymentRequestTypeEnum = "OTHER"
)

func (e *GetPaymentDetailsPaymentRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OTHER":
		*e = GetPaymentDetailsPaymentRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPaymentDetailsPaymentRequestTypeEnum: %s", s)
	}
}

// GetPaymentDetailsPaymentRequest - The Payment Request details object
type GetPaymentDetailsPaymentRequest struct {
	// These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
	AdditionalFields *string `json:"additionalFields,omitempty"`
	// The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).
	Amount *int64 `json:"amount,omitempty"`
	// For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
	CollectFields *string                                                                                                  `json:"collectFields,omitempty"`
	Currency      *shared.OneaccountsGetResponses200ContentApplication1jsonSchemaPropertiesAccountsItemsPropertiesCurrency `json:"currency,omitempty"`
	// A public facing description of the request. This will be shown to the user when they tap or scan the request.
	Description *string `json:"description,omitempty"`
	// This is the expiry of the payment request. After this time, the payment cannot be paid.
	Expiry *time.Time `json:"expiry,omitempty"`
	// The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
	IcanTo *int64 `json:"icanTo,omitempty"`
	// For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
	MandatoryFields *string `json:"mandatoryFields,omitempty"`
	// The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
	MaxNumberPayments *int64 `json:"maxNumberPayments,omitempty"`
	// An internal description of the request.
	MyRef        *string                                                                                      `json:"myRef,omitempty"`
	OrderDetails *shared.OnepaymentrequestsPostRequestBodyContentApplication1jsonSchemaPropertiesOrderDetails `json:"orderDetails,omitempty"`
	// The code that was returned when you created the payment request.
	PaymentRequestCode *string `json:"paymentRequestCode,omitempty"`
	// A unique id for the transaction.
	PaymentUUID *string `json:"paymentUuid,omitempty"`
	// The merchant return URL where the customer will be re-directed to with the result of the transaction.
	ReturnURL *string `json:"returnUrl,omitempty"`
	// The status of the transaction
	Status *GetPaymentDetailsPaymentRequestStatusEnum `json:"status,omitempty"`
	// The type of payment request payment
	TransactionType *GetPaymentDetailsPaymentRequestTransactionTypeEnum `json:"transactionType,omitempty"`
	// The type of Fire Open Payment that was created
	Type *GetPaymentDetailsPaymentRequestTypeEnum `json:"type,omitempty"`
	// A URL to be called in the background with the details of the payment after the payment is complete
	WebhookURL *string `json:"webhookUrl,omitempty"`
}

type GetPaymentDetailsResponse struct {
	ContentType string
	// The Payment Request details object
	PaymentRequest *GetPaymentDetailsPaymentRequest
	StatusCode     int
	RawResponse    *http.Response
}
