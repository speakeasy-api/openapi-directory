/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetPaymentDetailsPaymentRequest - The Payment Request details object
 */
public class GetPaymentDetailsPaymentRequest {
    /**
     * These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalFields")
    public String additionalFields;

    public GetPaymentDetailsPaymentRequest withAdditionalFields(String additionalFields) {
        this.additionalFields = additionalFields;
        return this;
    }
    
    /**
     * The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., \u00a31.00 = 100).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Long amount;

    public GetPaymentDetailsPaymentRequest withAmount(Long amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery\u2019, 'variableReference\u2019 or 'comment1\u2019 fields respectively.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectFields")
    public String collectFields;

    public GetPaymentDetailsPaymentRequest withCollectFields(String collectFields) {
        this.collectFields = collectFields;
        return this;
    }
    
    /**
     * The currency.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public GetPaymentDetailsPaymentRequestCurrency currency;

    public GetPaymentDetailsPaymentRequest withCurrency(GetPaymentDetailsPaymentRequestCurrency currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * A public facing description of the request. This will be shown to the user when they tap or scan the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GetPaymentDetailsPaymentRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * This is the expiry of the payment request. After this time, the payment cannot be paid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiry")
    public OffsetDateTime expiry;

    public GetPaymentDetailsPaymentRequest withExpiry(OffsetDateTime expiry) {
        this.expiry = expiry;
        return this;
    }
    
    /**
     * The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icanTo")
    public Long icanTo;

    public GetPaymentDetailsPaymentRequest withIcanTo(Long icanTo) {
        this.icanTo = icanTo;
        return this;
    }
    
    /**
     * For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery\u2019, 'variableReference\u2019 or 'comment1\u2019 fields respectively.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandatoryFields")
    public String mandatoryFields;

    public GetPaymentDetailsPaymentRequest withMandatoryFields(String mandatoryFields) {
        this.mandatoryFields = mandatoryFields;
        return this;
    }
    
    /**
     * The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxNumberPayments")
    public Long maxNumberPayments;

    public GetPaymentDetailsPaymentRequest withMaxNumberPayments(Long maxNumberPayments) {
        this.maxNumberPayments = maxNumberPayments;
        return this;
    }
    
    /**
     * An internal description of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("myRef")
    public String myRef;

    public GetPaymentDetailsPaymentRequest withMyRef(String myRef) {
        this.myRef = myRef;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orderDetails")
    public GetPaymentDetailsPaymentRequestOrderDetails orderDetails;

    public GetPaymentDetailsPaymentRequest withOrderDetails(GetPaymentDetailsPaymentRequestOrderDetails orderDetails) {
        this.orderDetails = orderDetails;
        return this;
    }
    
    /**
     * The code that was returned when you created the payment request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentRequestCode")
    public String paymentRequestCode;

    public GetPaymentDetailsPaymentRequest withPaymentRequestCode(String paymentRequestCode) {
        this.paymentRequestCode = paymentRequestCode;
        return this;
    }
    
    /**
     * A unique id for the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentUuid")
    public String paymentUuid;

    public GetPaymentDetailsPaymentRequest withPaymentUuid(String paymentUuid) {
        this.paymentUuid = paymentUuid;
        return this;
    }
    
    /**
     * The merchant return URL where the customer will be re-directed to with the result of the transaction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("returnUrl")
    public String returnUrl;

    public GetPaymentDetailsPaymentRequest withReturnUrl(String returnUrl) {
        this.returnUrl = returnUrl;
        return this;
    }
    
    /**
     * The status of the transaction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public GetPaymentDetailsPaymentRequestStatusEnum status;

    public GetPaymentDetailsPaymentRequest withStatus(GetPaymentDetailsPaymentRequestStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The type of payment request payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionType")
    public GetPaymentDetailsPaymentRequestTransactionTypeEnum transactionType;

    public GetPaymentDetailsPaymentRequest withTransactionType(GetPaymentDetailsPaymentRequestTransactionTypeEnum transactionType) {
        this.transactionType = transactionType;
        return this;
    }
    
    /**
     * The type of Fire Open Payment that was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GetPaymentDetailsPaymentRequestTypeEnum type;

    public GetPaymentDetailsPaymentRequest withType(GetPaymentDetailsPaymentRequestTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * A URL to be called in the background with the details of the payment after the payment is complete
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webhookUrl")
    public String webhookUrl;

    public GetPaymentDetailsPaymentRequest withWebhookUrl(String webhookUrl) {
        this.webhookUrl = webhookUrl;
        return this;
    }
    
    public GetPaymentDetailsPaymentRequest(){}
}
