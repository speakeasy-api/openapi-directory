// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PolicyComplianceStatusEnum - Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.
type PolicyComplianceStatusEnum string

const (
	PolicyComplianceStatusEnumStatusUnspecified   PolicyComplianceStatusEnum = "STATUS_UNSPECIFIED"
	PolicyComplianceStatusEnumPendingReview       PolicyComplianceStatusEnum = "PENDING_REVIEW"
	PolicyComplianceStatusEnumDisapproved         PolicyComplianceStatusEnum = "DISAPPROVED"
	PolicyComplianceStatusEnumApproved            PolicyComplianceStatusEnum = "APPROVED"
	PolicyComplianceStatusEnumCertificateRequired PolicyComplianceStatusEnum = "CERTIFICATE_REQUIRED"
)

func (e PolicyComplianceStatusEnum) ToPointer() *PolicyComplianceStatusEnum {
	return &e
}

func (e *PolicyComplianceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATUS_UNSPECIFIED":
		fallthrough
	case "PENDING_REVIEW":
		fallthrough
	case "DISAPPROVED":
		fallthrough
	case "APPROVED":
		fallthrough
	case "CERTIFICATE_REQUIRED":
		*e = PolicyComplianceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PolicyComplianceStatusEnum: %v", v)
	}
}

// PolicyCompliance - Policy compliance of the creative for a transaction type or a region.
type PolicyCompliance struct {
	// Serving status for the given transaction type (for example, open auction, deals) or region (for example, China, Russia). Can be used to filter the response of the creatives.list method.
	Status *PolicyComplianceStatusEnum `json:"status,omitempty"`
	// Topics related to the policy compliance for this transaction type (for example, open auction, deals) or region (for example, China, Russia). Topics may be present only if status is DISAPPROVED.
	Topics []PolicyTopicEntry `json:"topics,omitempty"`
}
