/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Defines the request schema for `/transfer/refund/create`
 */
export class TransferRefundCreateRequest extends SpeakeasyBase {
  /**
   * The amount of the refund (decimal string with two digits of precision e.g. "10.00").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: string;

  /**
   * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * A random key provided by the client, per unique refund. Maximum of 50 characters.
   *
   * @remarks
   *
   * The API supports idempotency for safely retrying requests without accidentally performing the same operation twice. For example, if a request to create a refund fails due to a network connection error, you can retry the request with the same idempotency key to guarantee that only a single refund is created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idempotency_key" })
  idempotencyKey: string;

  /**
   * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * The ID of the transfer to refund.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transfer_id" })
  transferId: string;
}
