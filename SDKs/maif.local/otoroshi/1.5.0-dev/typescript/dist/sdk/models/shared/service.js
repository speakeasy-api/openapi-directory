"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Service = void 0;
var utils_1 = require("../../../internal/utils");
var canary_1 = require("./canary");
var chaosconfig_1 = require("./chaosconfig");
var clientconfig_1 = require("./clientconfig");
var corssettings_1 = require("./corssettings");
var exposedapi_1 = require("./exposedapi");
var gzip_1 = require("./gzip");
var healthcheck_1 = require("./healthcheck");
var ipfiltering_1 = require("./ipfiltering");
var redirectionsettings_1 = require("./redirectionsettings");
var statsdconfig_1 = require("./statsdconfig");
var target_1 = require("./target");
var class_transformer_1 = require("class-transformer");
/**
 * An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism
 */
var Service = /** @class */ (function (_super) {
    __extends(Service, _super);
    function Service() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Canary" }),
        (0, class_transformer_1.Type)(function () { return canary_1.Canary; }),
        __metadata("design:type", canary_1.Canary)
    ], Service.prototype, "canary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "additionalHeaders" }),
        __metadata("design:type", Object)
    ], Service.prototype, "additionalHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "api" }),
        (0, class_transformer_1.Type)(function () { return exposedapi_1.ExposedApi; }),
        __metadata("design:type", exposedapi_1.ExposedApi)
    ], Service.prototype, "api", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authConfigRef" }),
        __metadata("design:type", String)
    ], Service.prototype, "authConfigRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "buildMode" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "buildMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "chaosConfig" }),
        (0, class_transformer_1.Type)(function () { return chaosconfig_1.ChaosConfig; }),
        __metadata("design:type", chaosconfig_1.ChaosConfig)
    ], Service.prototype, "chaosConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientConfig" }),
        (0, class_transformer_1.Type)(function () { return clientconfig_1.ClientConfig; }),
        __metadata("design:type", clientconfig_1.ClientConfig)
    ], Service.prototype, "clientConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientValidatorRef" }),
        __metadata("design:type", String)
    ], Service.prototype, "clientValidatorRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cors" }),
        (0, class_transformer_1.Type)(function () { return corssettings_1.CorsSettings; }),
        __metadata("design:type", corssettings_1.CorsSettings)
    ], Service.prototype, "cors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "domain" }),
        __metadata("design:type", String)
    ], Service.prototype, "domain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enforceSecureCommunication" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "enforceSecureCommunication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "env" }),
        __metadata("design:type", String)
    ], Service.prototype, "env", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "forceHttps" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "forceHttps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "groups" }),
        __metadata("design:type", Array)
    ], Service.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gzip" }),
        (0, class_transformer_1.Type)(function () { return gzip_1.Gzip; }),
        __metadata("design:type", gzip_1.Gzip)
    ], Service.prototype, "gzip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "headersVerification" }),
        __metadata("design:type", Object)
    ], Service.prototype, "headersVerification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "healthCheck" }),
        (0, class_transformer_1.Type)(function () { return healthcheck_1.HealthCheck; }),
        __metadata("design:type", healthcheck_1.HealthCheck)
    ], Service.prototype, "healthCheck", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Service.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipFiltering" }),
        (0, class_transformer_1.Type)(function () { return ipfiltering_1.IpFiltering; }),
        __metadata("design:type", ipfiltering_1.IpFiltering)
    ], Service.prototype, "ipFiltering", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "jwtVerifier" }),
        __metadata("design:type", Object)
    ], Service.prototype, "jwtVerifier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localHost" }),
        __metadata("design:type", String)
    ], Service.prototype, "localHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localScheme" }),
        __metadata("design:type", String)
    ], Service.prototype, "localScheme", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceMode" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "maintenanceMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "matchingHeaders" }),
        __metadata("design:type", Object)
    ], Service.prototype, "matchingHeaders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "matchingRoot" }),
        __metadata("design:type", String)
    ], Service.prototype, "matchingRoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        __metadata("design:type", Object)
    ], Service.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Service.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "overrideHost" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "overrideHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privateApp" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "privateApp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privatePatterns" }),
        __metadata("design:type", Array)
    ], Service.prototype, "privatePatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "publicPatterns" }),
        __metadata("design:type", Array)
    ], Service.prototype, "publicPatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redirectToLocal" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "redirectToLocal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redirection" }),
        (0, class_transformer_1.Type)(function () { return redirectionsettings_1.RedirectionSettings; }),
        __metadata("design:type", redirectionsettings_1.RedirectionSettings)
    ], Service.prototype, "redirection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "root" }),
        __metadata("design:type", String)
    ], Service.prototype, "root", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secComExcludedPatterns" }),
        __metadata("design:type", Array)
    ], Service.prototype, "secComExcludedPatterns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secComSettings" }),
        __metadata("design:type", Object)
    ], Service.prototype, "secComSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sendOtoroshiHeadersBack" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "sendOtoroshiHeadersBack", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statsdConfig" }),
        (0, class_transformer_1.Type)(function () { return statsdconfig_1.StatsdConfig; }),
        __metadata("design:type", statsdconfig_1.StatsdConfig)
    ], Service.prototype, "statsdConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subdomain" }),
        __metadata("design:type", String)
    ], Service.prototype, "subdomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: target_1.Target }),
        (0, class_transformer_1.Expose)({ name: "targets" }),
        (0, class_transformer_1.Type)(function () { return target_1.Target; }),
        __metadata("design:type", Array)
    ], Service.prototype, "targets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transformerRef" }),
        __metadata("design:type", String)
    ], Service.prototype, "transformerRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userFacing" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "userFacing", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "xForwardedHeaders" }),
        __metadata("design:type", Boolean)
    ], Service.prototype, "xForwardedHeaders", void 0);
    return Service;
}(utils_1.SpeakeasyBase));
exports.Service = Service;
