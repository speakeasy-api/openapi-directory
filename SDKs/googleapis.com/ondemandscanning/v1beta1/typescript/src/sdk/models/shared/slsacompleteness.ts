/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Indicates that the builder claims certain fields in this message to be complete.
 */
export class SlsaCompleteness extends SpeakeasyBase {
  /**
   * If true, the builder claims that recipe.arguments is complete, meaning that all external inputs are properly captured in the recipe.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "arguments" })
  arguments?: boolean;

  /**
   * If true, the builder claims that recipe.environment is claimed to be complete.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  environment?: boolean;

  /**
   * If true, the builder claims that materials are complete, usually through some controls to prevent network access. Sometimes called "hermetic".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "materials" })
  materials?: boolean;
}
