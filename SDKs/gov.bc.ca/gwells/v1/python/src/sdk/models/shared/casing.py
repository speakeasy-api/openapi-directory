"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CasingDriveShoeEnum(str, Enum):
    FALSE = 'false'
    TRUE = 'true'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Casing:
    
    diameter: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('diameter') }})  
    end: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end') }})  
    start: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start') }})  
    casing_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('casing_code'), 'exclude': lambda f: f is None }})  
    casing_material: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('casing_material'), 'exclude': lambda f: f is None }})  
    drive_shoe: Optional[CasingDriveShoeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drive_shoe'), 'exclude': lambda f: f is None }})  
    wall_thickness: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wall_thickness'), 'exclude': lambda f: f is None }})  
    