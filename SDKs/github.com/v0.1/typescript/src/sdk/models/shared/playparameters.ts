/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Call leg(s) for which the media will be played; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable.
 */
export enum PlayParametersLegsEnum {
  Aleg = "aleg",
  Bleg = "bleg",
  Both = "both",
}

/**
 * POST parameters
 */
export class PlayParameters extends SpeakeasyBase {
  /**
   * Unique identifier of the call to play media into
   */
  @SpeakeasyMetadata({ data: "form, name=CallUUID" })
  callUUID: string;

  /**
   * Call leg(s) for which the media will be played; `aleg` refers to the initial call leg, `bleg` refers to the bridged call leg, if applicable.
   */
  @SpeakeasyMetadata({ data: "form, name=Legs" })
  legs?: PlayParametersLegsEnum;

  /**
   * Maximum amount of time (in seconds) to playback the media
   */
  @SpeakeasyMetadata({ data: "form, name=Length" })
  length?: number;

  /**
   * Loops the media file(s) indefinitely
   */
  @SpeakeasyMetadata({ data: "form, name=Loop" })
  loop?: boolean;

  /**
   * Whether the media should be mixed with the call's audio stream
   */
  @SpeakeasyMetadata({ data: "form, name=Mix" })
  mix?: boolean;

  /**
   * Comma separated list of file paths/URIs to be played
   */
  @SpeakeasyMetadata({ data: "form, name=Sounds" })
  sounds: string;
}
