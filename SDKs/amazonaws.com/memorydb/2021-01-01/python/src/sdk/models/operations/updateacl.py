"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import updateaclrequest as shared_updateaclrequest
from ..shared import updateaclresponse as shared_updateaclresponse
from enum import Enum
from typing import Any, Optional

class UpdateACLXAmzTargetEnum(str, Enum):
    AMAZON_MEMORY_DB_UPDATE_ACL = 'AmazonMemoryDB.UpdateACL'


@dataclasses.dataclass
class UpdateACLRequest:
    
    update_acl_request: shared_updateaclrequest.UpdateACLRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: UpdateACLXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class UpdateACLResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    acl_not_found_fault: Optional[Any] = dataclasses.field(default=None)
    r"""ACLNotFoundFault"""  
    default_user_required: Optional[Any] = dataclasses.field(default=None)
    r"""DefaultUserRequired"""  
    duplicate_user_name_fault: Optional[Any] = dataclasses.field(default=None)
    r"""DuplicateUserNameFault"""  
    invalid_acl_state_fault: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidACLStateFault"""  
    invalid_parameter_combination_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidParameterCombinationException"""  
    invalid_parameter_value_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidParameterValueException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_acl_response: Optional[shared_updateaclresponse.UpdateACLResponse] = dataclasses.field(default=None)
    r"""Success"""  
    user_not_found_fault: Optional[Any] = dataclasses.field(default=None)
    r"""UserNotFoundFault"""  
    