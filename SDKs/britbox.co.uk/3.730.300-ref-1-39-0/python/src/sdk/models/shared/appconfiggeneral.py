"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppConfigGeneral:
    
    currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode'), 'exclude': lambda f: f is None }})
    r"""The currency code to target."""  
    custom_fields: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})
    r"""A map of custom configuration fields."""  
    default_time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultTimeZone'), 'exclude': lambda f: f is None }})
    r"""The default time zone of the site. e.g. \\"Etc/GMT\\" """  
    facebook_app_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('facebookAppId'), 'exclude': lambda f: f is None }})
    r"""The Facebook application id associated with an environment."""  
    ga_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gaToken'), 'exclude': lambda f: f is None }})
    r"""A Google Analytics token to track applicaton user events."""  
    item_image_types: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemImageTypes'), 'exclude': lambda f: f is None }})
    r"""A map of default item image types where the key is the item types."""  
    mandatory_sign_in: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mandatorySignIn'), 'exclude': lambda f: f is None }})
    r"""Whether to require sign in for customers to access content."""  
    max_user_rating: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxUserRating'), 'exclude': lambda f: f is None }})
    r"""The maximum value allowed for user ratings."""  
    stripe_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stripeKey'), 'exclude': lambda f: f is None }})
    r"""The public Stripe key to use for payment transactions."""  
    website_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('websiteUrl'), 'exclude': lambda f: f is None }})
    r"""The url of the primary website."""  
    