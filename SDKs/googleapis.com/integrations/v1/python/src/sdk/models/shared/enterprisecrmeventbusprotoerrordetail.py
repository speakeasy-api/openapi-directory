"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import crmlogerrorcode as shared_crmlogerrorcode
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnterpriseCrmEventbusProtoErrorDetailSeverityEnum(str, Enum):
    r"""The severity of the error: ERROR|WARN|INFO."""
    SEVERITY_UNSPECIFIED = 'SEVERITY_UNSPECIFIED'
    ERROR = 'ERROR'
    WARN = 'WARN'
    INFO = 'INFO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoErrorDetail:
    r"""An error, warning, or information message associated with a workflow."""
    
    error_code: Optional[shared_crmlogerrorcode.CrmlogErrorCode] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorCode'), 'exclude': lambda f: f is None }})
    r"""Registered ids for errors, as \\"oneof\\" enums. Each task or logical grouping of tasks may share the same enum."""  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})
    r"""The full text of the error message, including any parameters that were thrown along with the exception."""  
    severity: Optional[EnterpriseCrmEventbusProtoErrorDetailSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity'), 'exclude': lambda f: f is None }})
    r"""The severity of the error: ERROR|WARN|INFO."""  
    task_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taskNumber'), 'exclude': lambda f: f is None }})
    r"""The task try-number, in which, the error occurred. If zero, the error happened at the event level."""  
    