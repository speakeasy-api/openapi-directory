// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VideoAdSequenceSettingsMinimumDurationEnum - The minimum time interval before the same user sees this sequence again.
type VideoAdSequenceSettingsMinimumDurationEnum string

const (
	VideoAdSequenceSettingsMinimumDurationEnumVideoAdSequenceMinimumDurationUnspecified VideoAdSequenceSettingsMinimumDurationEnum = "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_UNSPECIFIED"
	VideoAdSequenceSettingsMinimumDurationEnumVideoAdSequenceMinimumDurationWeek        VideoAdSequenceSettingsMinimumDurationEnum = "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_WEEK"
	VideoAdSequenceSettingsMinimumDurationEnumVideoAdSequenceMinimumDurationMonth       VideoAdSequenceSettingsMinimumDurationEnum = "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_MONTH"
)

func (e *VideoAdSequenceSettingsMinimumDurationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_UNSPECIFIED":
		fallthrough
	case "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_WEEK":
		fallthrough
	case "VIDEO_AD_SEQUENCE_MINIMUM_DURATION_MONTH":
		*e = VideoAdSequenceSettingsMinimumDurationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VideoAdSequenceSettingsMinimumDurationEnum: %s", s)
	}
}

// VideoAdSequenceSettings - Settings related to VideoAdSequence.
type VideoAdSequenceSettings struct {
	// The minimum time interval before the same user sees this sequence again.
	MinimumDuration *VideoAdSequenceSettingsMinimumDurationEnum `json:"minimumDuration,omitempty"`
	// The steps of which the sequence consists.
	Steps []VideoAdSequenceStep `json:"steps,omitempty"`
}
