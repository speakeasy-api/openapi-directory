<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AddonsConfig - Configuration for the addons that can be automatically spun up in the cluster, enabling additional functionality.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AddonsConfig
{
    /**
     * Configuration options for the Cloud Run feature.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CloudRunConfig $cloudRunConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudRunConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CloudRunConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CloudRunConfig $cloudRunConfig = null;
    
    /**
     * Configuration options for the Config Connector add-on.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfigConnectorConfig $configConnectorConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('configConnectorConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ConfigConnectorConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfigConnectorConfig $configConnectorConfig = null;
    
    /**
     * Configuration for NodeLocal DNSCache
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DnsCacheConfig $dnsCacheConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsCacheConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DnsCacheConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DnsCacheConfig $dnsCacheConfig = null;
    
    /**
     * Configuration for the Compute Engine PD CSI driver.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GcePersistentDiskCsiDriverConfig $gcePersistentDiskCsiDriverConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('gcePersistentDiskCsiDriverConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GcePersistentDiskCsiDriverConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GcePersistentDiskCsiDriverConfig $gcePersistentDiskCsiDriverConfig = null;
    
    /**
     * Configuration for the GCP Filestore CSI driver.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GcpFilestoreCsiDriverConfig $gcpFilestoreCsiDriverConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('gcpFilestoreCsiDriverConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GcpFilestoreCsiDriverConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GcpFilestoreCsiDriverConfig $gcpFilestoreCsiDriverConfig = null;
    
    /**
     * Configuration for the Backup for GKE Agent.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GkeBackupAgentConfig $gkeBackupAgentConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('gkeBackupAgentConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GkeBackupAgentConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GkeBackupAgentConfig $gkeBackupAgentConfig = null;
    
    /**
     * Configuration options for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HorizontalPodAutoscaling $horizontalPodAutoscaling
     */
	#[\JMS\Serializer\Annotation\SerializedName('horizontalPodAutoscaling')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HorizontalPodAutoscaling')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HorizontalPodAutoscaling $horizontalPodAutoscaling = null;
    
    /**
     * Configuration options for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpLoadBalancing $httpLoadBalancing
     */
	#[\JMS\Serializer\Annotation\SerializedName('httpLoadBalancing')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpLoadBalancing')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpLoadBalancing $httpLoadBalancing = null;
    
    /**
     * Configuration for the Kubernetes Dashboard.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KubernetesDashboard $kubernetesDashboard
     */
	#[\JMS\Serializer\Annotation\SerializedName('kubernetesDashboard')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\KubernetesDashboard')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KubernetesDashboard $kubernetesDashboard = null;
    
    /**
     * Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NetworkPolicyConfig $networkPolicyConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkPolicyConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NetworkPolicyConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NetworkPolicyConfig $networkPolicyConfig = null;
    
	public function __construct()
	{
		$this->cloudRunConfig = null;
		$this->configConnectorConfig = null;
		$this->dnsCacheConfig = null;
		$this->gcePersistentDiskCsiDriverConfig = null;
		$this->gcpFilestoreCsiDriverConfig = null;
		$this->gkeBackupAgentConfig = null;
		$this->horizontalPodAutoscaling = null;
		$this->httpLoadBalancing = null;
		$this->kubernetesDashboard = null;
		$this->networkPolicyConfig = null;
	}
}
