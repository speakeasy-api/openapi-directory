// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type EntryForAPIContractArtistTypeEnum string

const (
	EntryForAPIContractArtistTypeEnumUnknown               EntryForAPIContractArtistTypeEnum = "Unknown"
	EntryForAPIContractArtistTypeEnumCircle                EntryForAPIContractArtistTypeEnum = "Circle"
	EntryForAPIContractArtistTypeEnumLabel                 EntryForAPIContractArtistTypeEnum = "Label"
	EntryForAPIContractArtistTypeEnumProducer              EntryForAPIContractArtistTypeEnum = "Producer"
	EntryForAPIContractArtistTypeEnumAnimator              EntryForAPIContractArtistTypeEnum = "Animator"
	EntryForAPIContractArtistTypeEnumIllustrator           EntryForAPIContractArtistTypeEnum = "Illustrator"
	EntryForAPIContractArtistTypeEnumLyricist              EntryForAPIContractArtistTypeEnum = "Lyricist"
	EntryForAPIContractArtistTypeEnumVocaloid              EntryForAPIContractArtistTypeEnum = "Vocaloid"
	EntryForAPIContractArtistTypeEnumUtau                  EntryForAPIContractArtistTypeEnum = "UTAU"
	EntryForAPIContractArtistTypeEnumCeVio                 EntryForAPIContractArtistTypeEnum = "CeVIO"
	EntryForAPIContractArtistTypeEnumOtherVoiceSynthesizer EntryForAPIContractArtistTypeEnum = "OtherVoiceSynthesizer"
	EntryForAPIContractArtistTypeEnumOtherVocalist         EntryForAPIContractArtistTypeEnum = "OtherVocalist"
	EntryForAPIContractArtistTypeEnumOtherGroup            EntryForAPIContractArtistTypeEnum = "OtherGroup"
	EntryForAPIContractArtistTypeEnumOtherIndividual       EntryForAPIContractArtistTypeEnum = "OtherIndividual"
	EntryForAPIContractArtistTypeEnumUtaite                EntryForAPIContractArtistTypeEnum = "Utaite"
	EntryForAPIContractArtistTypeEnumBand                  EntryForAPIContractArtistTypeEnum = "Band"
	EntryForAPIContractArtistTypeEnumVocalist              EntryForAPIContractArtistTypeEnum = "Vocalist"
	EntryForAPIContractArtistTypeEnumCharacter             EntryForAPIContractArtistTypeEnum = "Character"
	EntryForAPIContractArtistTypeEnumSynthesizerV          EntryForAPIContractArtistTypeEnum = "SynthesizerV"
)

func (e *EntryForAPIContractArtistTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Circle":
		fallthrough
	case "Label":
		fallthrough
	case "Producer":
		fallthrough
	case "Animator":
		fallthrough
	case "Illustrator":
		fallthrough
	case "Lyricist":
		fallthrough
	case "Vocaloid":
		fallthrough
	case "UTAU":
		fallthrough
	case "CeVIO":
		fallthrough
	case "OtherVoiceSynthesizer":
		fallthrough
	case "OtherVocalist":
		fallthrough
	case "OtherGroup":
		fallthrough
	case "OtherIndividual":
		fallthrough
	case "Utaite":
		fallthrough
	case "Band":
		fallthrough
	case "Vocalist":
		fallthrough
	case "Character":
		fallthrough
	case "SynthesizerV":
		*e = EntryForAPIContractArtistTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractArtistTypeEnum: %s", s)
	}
}

type EntryForAPIContractDefaultNameLanguageEnum string

const (
	EntryForAPIContractDefaultNameLanguageEnumUnspecified EntryForAPIContractDefaultNameLanguageEnum = "Unspecified"
	EntryForAPIContractDefaultNameLanguageEnumJapanese    EntryForAPIContractDefaultNameLanguageEnum = "Japanese"
	EntryForAPIContractDefaultNameLanguageEnumRomaji      EntryForAPIContractDefaultNameLanguageEnum = "Romaji"
	EntryForAPIContractDefaultNameLanguageEnumEnglish     EntryForAPIContractDefaultNameLanguageEnum = "English"
)

func (e *EntryForAPIContractDefaultNameLanguageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unspecified":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = EntryForAPIContractDefaultNameLanguageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractDefaultNameLanguageEnum: %s", s)
	}
}

type EntryForAPIContractDiscTypeEnum string

const (
	EntryForAPIContractDiscTypeEnumUnknown      EntryForAPIContractDiscTypeEnum = "Unknown"
	EntryForAPIContractDiscTypeEnumAlbum        EntryForAPIContractDiscTypeEnum = "Album"
	EntryForAPIContractDiscTypeEnumSingle       EntryForAPIContractDiscTypeEnum = "Single"
	EntryForAPIContractDiscTypeEnumEp           EntryForAPIContractDiscTypeEnum = "EP"
	EntryForAPIContractDiscTypeEnumSplitAlbum   EntryForAPIContractDiscTypeEnum = "SplitAlbum"
	EntryForAPIContractDiscTypeEnumCompilation  EntryForAPIContractDiscTypeEnum = "Compilation"
	EntryForAPIContractDiscTypeEnumVideo        EntryForAPIContractDiscTypeEnum = "Video"
	EntryForAPIContractDiscTypeEnumArtbook      EntryForAPIContractDiscTypeEnum = "Artbook"
	EntryForAPIContractDiscTypeEnumGame         EntryForAPIContractDiscTypeEnum = "Game"
	EntryForAPIContractDiscTypeEnumFanmade      EntryForAPIContractDiscTypeEnum = "Fanmade"
	EntryForAPIContractDiscTypeEnumInstrumental EntryForAPIContractDiscTypeEnum = "Instrumental"
	EntryForAPIContractDiscTypeEnumOther        EntryForAPIContractDiscTypeEnum = "Other"
)

func (e *EntryForAPIContractDiscTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "Album":
		fallthrough
	case "Single":
		fallthrough
	case "EP":
		fallthrough
	case "SplitAlbum":
		fallthrough
	case "Compilation":
		fallthrough
	case "Video":
		fallthrough
	case "Artbook":
		fallthrough
	case "Game":
		fallthrough
	case "Fanmade":
		fallthrough
	case "Instrumental":
		fallthrough
	case "Other":
		*e = EntryForAPIContractDiscTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractDiscTypeEnum: %s", s)
	}
}

type EntryForAPIContractEntryTypeEnum string

const (
	EntryForAPIContractEntryTypeEnumUndefined          EntryForAPIContractEntryTypeEnum = "Undefined"
	EntryForAPIContractEntryTypeEnumAlbum              EntryForAPIContractEntryTypeEnum = "Album"
	EntryForAPIContractEntryTypeEnumArtist             EntryForAPIContractEntryTypeEnum = "Artist"
	EntryForAPIContractEntryTypeEnumDiscussionTopic    EntryForAPIContractEntryTypeEnum = "DiscussionTopic"
	EntryForAPIContractEntryTypeEnumPv                 EntryForAPIContractEntryTypeEnum = "PV"
	EntryForAPIContractEntryTypeEnumReleaseEvent       EntryForAPIContractEntryTypeEnum = "ReleaseEvent"
	EntryForAPIContractEntryTypeEnumReleaseEventSeries EntryForAPIContractEntryTypeEnum = "ReleaseEventSeries"
	EntryForAPIContractEntryTypeEnumSong               EntryForAPIContractEntryTypeEnum = "Song"
	EntryForAPIContractEntryTypeEnumSongList           EntryForAPIContractEntryTypeEnum = "SongList"
	EntryForAPIContractEntryTypeEnumTag                EntryForAPIContractEntryTypeEnum = "Tag"
	EntryForAPIContractEntryTypeEnumUser               EntryForAPIContractEntryTypeEnum = "User"
	EntryForAPIContractEntryTypeEnumVenue              EntryForAPIContractEntryTypeEnum = "Venue"
)

func (e *EntryForAPIContractEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Undefined":
		fallthrough
	case "Album":
		fallthrough
	case "Artist":
		fallthrough
	case "DiscussionTopic":
		fallthrough
	case "PV":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "ReleaseEventSeries":
		fallthrough
	case "Song":
		fallthrough
	case "SongList":
		fallthrough
	case "Tag":
		fallthrough
	case "User":
		fallthrough
	case "Venue":
		*e = EntryForAPIContractEntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractEntryTypeEnum: %s", s)
	}
}

type EntryForAPIContractEventCategoryEnum string

const (
	EntryForAPIContractEventCategoryEnumUnspecified  EntryForAPIContractEventCategoryEnum = "Unspecified"
	EntryForAPIContractEventCategoryEnumAlbumRelease EntryForAPIContractEventCategoryEnum = "AlbumRelease"
	EntryForAPIContractEventCategoryEnumAnniversary  EntryForAPIContractEventCategoryEnum = "Anniversary"
	EntryForAPIContractEventCategoryEnumClub         EntryForAPIContractEventCategoryEnum = "Club"
	EntryForAPIContractEventCategoryEnumConcert      EntryForAPIContractEventCategoryEnum = "Concert"
	EntryForAPIContractEventCategoryEnumContest      EntryForAPIContractEventCategoryEnum = "Contest"
	EntryForAPIContractEventCategoryEnumConvention   EntryForAPIContractEventCategoryEnum = "Convention"
	EntryForAPIContractEventCategoryEnumOther        EntryForAPIContractEventCategoryEnum = "Other"
)

func (e *EntryForAPIContractEventCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unspecified":
		fallthrough
	case "AlbumRelease":
		fallthrough
	case "Anniversary":
		fallthrough
	case "Club":
		fallthrough
	case "Concert":
		fallthrough
	case "Contest":
		fallthrough
	case "Convention":
		fallthrough
	case "Other":
		*e = EntryForAPIContractEventCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractEventCategoryEnum: %s", s)
	}
}

type EntryForAPIContractSongListFeaturedCategoryEnum string

const (
	EntryForAPIContractSongListFeaturedCategoryEnumNothing         EntryForAPIContractSongListFeaturedCategoryEnum = "Nothing"
	EntryForAPIContractSongListFeaturedCategoryEnumConcerts        EntryForAPIContractSongListFeaturedCategoryEnum = "Concerts"
	EntryForAPIContractSongListFeaturedCategoryEnumVocaloidRanking EntryForAPIContractSongListFeaturedCategoryEnum = "VocaloidRanking"
	EntryForAPIContractSongListFeaturedCategoryEnumPools           EntryForAPIContractSongListFeaturedCategoryEnum = "Pools"
	EntryForAPIContractSongListFeaturedCategoryEnumOther           EntryForAPIContractSongListFeaturedCategoryEnum = "Other"
)

func (e *EntryForAPIContractSongListFeaturedCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Concerts":
		fallthrough
	case "VocaloidRanking":
		fallthrough
	case "Pools":
		fallthrough
	case "Other":
		*e = EntryForAPIContractSongListFeaturedCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractSongListFeaturedCategoryEnum: %s", s)
	}
}

type EntryForAPIContractSongTypeEnum string

const (
	EntryForAPIContractSongTypeEnumUnspecified  EntryForAPIContractSongTypeEnum = "Unspecified"
	EntryForAPIContractSongTypeEnumOriginal     EntryForAPIContractSongTypeEnum = "Original"
	EntryForAPIContractSongTypeEnumRemaster     EntryForAPIContractSongTypeEnum = "Remaster"
	EntryForAPIContractSongTypeEnumRemix        EntryForAPIContractSongTypeEnum = "Remix"
	EntryForAPIContractSongTypeEnumCover        EntryForAPIContractSongTypeEnum = "Cover"
	EntryForAPIContractSongTypeEnumArrangement  EntryForAPIContractSongTypeEnum = "Arrangement"
	EntryForAPIContractSongTypeEnumInstrumental EntryForAPIContractSongTypeEnum = "Instrumental"
	EntryForAPIContractSongTypeEnumMashup       EntryForAPIContractSongTypeEnum = "Mashup"
	EntryForAPIContractSongTypeEnumMusicPv      EntryForAPIContractSongTypeEnum = "MusicPV"
	EntryForAPIContractSongTypeEnumDramaPv      EntryForAPIContractSongTypeEnum = "DramaPV"
	EntryForAPIContractSongTypeEnumLive         EntryForAPIContractSongTypeEnum = "Live"
	EntryForAPIContractSongTypeEnumIllustration EntryForAPIContractSongTypeEnum = "Illustration"
	EntryForAPIContractSongTypeEnumOther        EntryForAPIContractSongTypeEnum = "Other"
)

func (e *EntryForAPIContractSongTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unspecified":
		fallthrough
	case "Original":
		fallthrough
	case "Remaster":
		fallthrough
	case "Remix":
		fallthrough
	case "Cover":
		fallthrough
	case "Arrangement":
		fallthrough
	case "Instrumental":
		fallthrough
	case "Mashup":
		fallthrough
	case "MusicPV":
		fallthrough
	case "DramaPV":
		fallthrough
	case "Live":
		fallthrough
	case "Illustration":
		fallthrough
	case "Other":
		*e = EntryForAPIContractSongTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractSongTypeEnum: %s", s)
	}
}

type EntryForAPIContractStatusEnum string

const (
	EntryForAPIContractStatusEnumDraft    EntryForAPIContractStatusEnum = "Draft"
	EntryForAPIContractStatusEnumFinished EntryForAPIContractStatusEnum = "Finished"
	EntryForAPIContractStatusEnumApproved EntryForAPIContractStatusEnum = "Approved"
	EntryForAPIContractStatusEnumLocked   EntryForAPIContractStatusEnum = "Locked"
)

func (e *EntryForAPIContractStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Finished":
		fallthrough
	case "Approved":
		fallthrough
	case "Locked":
		*e = EntryForAPIContractStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryForAPIContractStatusEnum: %s", s)
	}
}

type EntryForAPIContract struct {
	ActivityDate             *time.Time                                       `json:"activityDate,omitempty"`
	AdditionalNames          *string                                          `json:"additionalNames,omitempty"`
	ArtistString             *string                                          `json:"artistString,omitempty"`
	ArtistType               *EntryForAPIContractArtistTypeEnum               `json:"artistType,omitempty"`
	CreateDate               *time.Time                                       `json:"createDate,omitempty"`
	DefaultName              *string                                          `json:"defaultName,omitempty"`
	DefaultNameLanguage      *EntryForAPIContractDefaultNameLanguageEnum      `json:"defaultNameLanguage,omitempty"`
	Description              *string                                          `json:"description,omitempty"`
	DiscType                 *EntryForAPIContractDiscTypeEnum                 `json:"discType,omitempty"`
	EntryType                *EntryForAPIContractEntryTypeEnum                `json:"entryType,omitempty"`
	EventCategory            *EntryForAPIContractEventCategoryEnum            `json:"eventCategory,omitempty"`
	ID                       *int                                             `json:"id,omitempty"`
	MainPicture              *EntryThumbForAPIContract                        `json:"mainPicture,omitempty"`
	Name                     *string                                          `json:"name,omitempty"`
	Names                    []LocalizedStringContract                        `json:"names,omitempty"`
	PVs                      []PVContract                                     `json:"pVs,omitempty"`
	ReleaseEventSeriesName   *string                                          `json:"releaseEventSeriesName,omitempty"`
	SongListFeaturedCategory *EntryForAPIContractSongListFeaturedCategoryEnum `json:"songListFeaturedCategory,omitempty"`
	SongType                 *EntryForAPIContractSongTypeEnum                 `json:"songType,omitempty"`
	Status                   *EntryForAPIContractStatusEnum                   `json:"status,omitempty"`
	TagCategoryName          *string                                          `json:"tagCategoryName,omitempty"`
	Tags                     []TagUsageForAPIContract                         `json:"tags,omitempty"`
	URLSlug                  *string                                          `json:"urlSlug,omitempty"`
	Version                  *int                                             `json:"version,omitempty"`
	WebLinks                 []ArchivedWebLinkContract                        `json:"webLinks,omitempty"`
}
