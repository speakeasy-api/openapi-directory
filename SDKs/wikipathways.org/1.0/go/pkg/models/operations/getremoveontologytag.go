// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetRemoveOntologyTagFormatEnum
type GetRemoveOntologyTagFormatEnum string

const (
	GetRemoveOntologyTagFormatEnumJSON GetRemoveOntologyTagFormatEnum = "json"
	GetRemoveOntologyTagFormatEnumXML  GetRemoveOntologyTagFormatEnum = "xml"
	GetRemoveOntologyTagFormatEnumHTML GetRemoveOntologyTagFormatEnum = "html"
	GetRemoveOntologyTagFormatEnumDump GetRemoveOntologyTagFormatEnum = "dump"
	GetRemoveOntologyTagFormatEnumJpg  GetRemoveOntologyTagFormatEnum = "jpg"
	GetRemoveOntologyTagFormatEnumPdf  GetRemoveOntologyTagFormatEnum = "pdf"
)

func (e *GetRemoveOntologyTagFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetRemoveOntologyTagFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRemoveOntologyTagFormatEnum: %s", s)
	}
}

type GetRemoveOntologyTagRequest struct {
	// The authentication key
	Auth   string                          `queryParam:"style=form,explode=true,name=auth"`
	Format *GetRemoveOntologyTagFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The pathway identifier
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
	// The ontology term identifier in the ontology
	TermID string `queryParam:"style=form,explode=true,name=termId"`
	// The username
	User string `queryParam:"style=form,explode=true,name=user"`
}

type GetRemoveOntologyTagResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
