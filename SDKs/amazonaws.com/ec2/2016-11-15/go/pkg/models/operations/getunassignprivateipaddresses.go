// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUnassignPrivateIPAddressesActionEnum
type GETUnassignPrivateIPAddressesActionEnum string

const (
	GETUnassignPrivateIPAddressesActionEnumUnassignPrivateIPAddresses GETUnassignPrivateIPAddressesActionEnum = "UnassignPrivateIpAddresses"
)

func (e *GETUnassignPrivateIPAddressesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UnassignPrivateIpAddresses":
		*e = GETUnassignPrivateIPAddressesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUnassignPrivateIPAddressesActionEnum: %s", s)
	}
}

// GETUnassignPrivateIPAddressesVersionEnum
type GETUnassignPrivateIPAddressesVersionEnum string

const (
	GETUnassignPrivateIPAddressesVersionEnumTwoThousandAndSixteen1115 GETUnassignPrivateIPAddressesVersionEnum = "2016-11-15"
)

func (e *GETUnassignPrivateIPAddressesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETUnassignPrivateIPAddressesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUnassignPrivateIPAddressesVersionEnum: %s", s)
	}
}

type GETUnassignPrivateIPAddressesRequest struct {
	Action GETUnassignPrivateIPAddressesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The IPv4 prefixes to unassign from the network interface.
	Ipv4Prefix []string `queryParam:"style=form,explode=true,name=Ipv4Prefix"`
	// The ID of the network interface.
	NetworkInterfaceID string `queryParam:"style=form,explode=true,name=NetworkInterfaceId"`
	// The secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.
	PrivateIPAddress  []string                                 `queryParam:"style=form,explode=true,name=PrivateIpAddress"`
	Version           GETUnassignPrivateIPAddressesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUnassignPrivateIPAddressesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
