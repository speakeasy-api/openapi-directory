/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Dispute - Represents a dispute a cardholder initiated with their bank.
 */
public class Dispute {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_money")
    public Money amountMoney;

    public Dispute withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * The ID of the dispute in the card brand system, generated by the card brand.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brand_dispute_id")
    public String brandDisputeId;

    public Dispute withBrandDisputeId(String brandDisputeId) {
        this.brandDisputeId = brandDisputeId;
        return this;
    }
    
    /**
     * The card brand used in the disputed payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("card_brand")
    public String cardBrand;

    public Dispute withCardBrand(String cardBrand) {
        this.cardBrand = cardBrand;
        return this;
    }
    
    /**
     * The timestamp when the dispute was created, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    public String createdAt;

    public Dispute withCreatedAt(String createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The unique ID for this `Dispute`, generated by Square.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dispute_id")
    public String disputeId;

    public Dispute withDisputeId(String disputeId) {
        this.disputeId = disputeId;
        return this;
    }
    
    /**
     * The payment the cardholder disputed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disputed_payment")
    public DisputedPayment disputedPayment;

    public Dispute withDisputedPayment(DisputedPayment disputedPayment) {
        this.disputedPayment = disputedPayment;
        return this;
    }
    
    /**
     * The time when the next action is due, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("due_at")
    public String dueAt;

    public Dispute withDueAt(String dueAt) {
        this.dueAt = dueAt;
        return this;
    }
    
    /**
     * The IDs of the evidence associated with the dispute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evidence_ids")
    public String[] evidenceIds;

    public Dispute withEvidenceIds(String[] evidenceIds) {
        this.evidenceIds = evidenceIds;
        return this;
    }
    
    /**
     * The unique ID for this `Dispute`, generated by Square.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Dispute withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The ID of the location where the dispute originated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;

    public Dispute withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * The dispute reason why the cardholder initiated the dispute with their bank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public Dispute withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The timestamp when the dispute was reported, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reported_at")
    public String reportedAt;

    public Dispute withReportedAt(String reportedAt) {
        this.reportedAt = reportedAt;
        return this;
    }
    
    /**
     * The timestamp when the dispute was reported, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reported_date")
    public String reportedDate;

    public Dispute withReportedDate(String reportedDate) {
        this.reportedDate = reportedDate;
        return this;
    }
    
    /**
     * The current state of this dispute.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public Dispute withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * The timestamp when the dispute was last updated, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    public String updatedAt;

    public Dispute withUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The current version of the `Dispute`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Long version;

    public Dispute withVersion(Long version) {
        this.version = version;
        return this;
    }
    
    public Dispute(){}
}
