// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETGETAccountAuthorizationDetailsActionEnum
type GETGETAccountAuthorizationDetailsActionEnum string

const (
	GETGETAccountAuthorizationDetailsActionEnumGetAccountAuthorizationDetails GETGETAccountAuthorizationDetailsActionEnum = "GetAccountAuthorizationDetails"
)

func (e GETGETAccountAuthorizationDetailsActionEnum) ToPointer() *GETGETAccountAuthorizationDetailsActionEnum {
	return &e
}

func (e *GETGETAccountAuthorizationDetailsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetAccountAuthorizationDetails":
		*e = GETGETAccountAuthorizationDetailsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAccountAuthorizationDetailsActionEnum: %v", v)
	}
}

// GETGETAccountAuthorizationDetailsVersionEnum
type GETGETAccountAuthorizationDetailsVersionEnum string

const (
	GETGETAccountAuthorizationDetailsVersionEnumTwoThousandAndTen0508 GETGETAccountAuthorizationDetailsVersionEnum = "2010-05-08"
)

func (e GETGETAccountAuthorizationDetailsVersionEnum) ToPointer() *GETGETAccountAuthorizationDetailsVersionEnum {
	return &e
}

func (e *GETGETAccountAuthorizationDetailsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETGETAccountAuthorizationDetailsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETAccountAuthorizationDetailsVersionEnum: %v", v)
	}
}

type GETGETAccountAuthorizationDetailsRequest struct {
	Action GETGETAccountAuthorizationDetailsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>A list of entity types used to filter the results. Only the entities that match the types you specify are included in the output. Use the value <code>LocalManagedPolicy</code> to include customer managed policies.</p> <p>The format for this parameter is a comma-separated (if more than one) list of strings. Each string value in the list must be one of the valid values listed below.</p>
	Filter []shared.EntityTypeEnum `queryParam:"style=form,explode=true,name=Filter"`
	// Use this parameter only when paginating results and only after you receive a response indicating that the results are truncated. Set it to the value of the <code>Marker</code> element in the response that you received to indicate where the next call should start.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>Use this only when paginating results to indicate the maximum number of items you want in the response. If additional items exist beyond the maximum you specify, the <code>IsTruncated</code> response element is <code>true</code>.</p> <p>If you do not include this parameter, the number of items defaults to 100. Note that IAM might return fewer results, even when there are more results available. In that case, the <code>IsTruncated</code> response element returns <code>true</code>, and <code>Marker</code> contains a value to include in the subsequent call that tells the service where to continue from.</p>
	MaxItems          *int64                                       `queryParam:"style=form,explode=true,name=MaxItems"`
	Version           GETGETAccountAuthorizationDetailsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETAccountAuthorizationDetailsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
