// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetFollowersAlt1DirectionEnum - The sort direction of the results.
type GetFollowersAlt1DirectionEnum string

const (
	GetFollowersAlt1DirectionEnumAsc  GetFollowersAlt1DirectionEnum = "asc"
	GetFollowersAlt1DirectionEnumDesc GetFollowersAlt1DirectionEnum = "desc"
)

func (e *GetFollowersAlt1DirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetFollowersAlt1DirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFollowersAlt1DirectionEnum: %s", s)
	}
}

// GetFollowersAlt1SortEnum - The way to sort the results.
type GetFollowersAlt1SortEnum string

const (
	GetFollowersAlt1SortEnumAlphabetical GetFollowersAlt1SortEnum = "alphabetical"
	GetFollowersAlt1SortEnumDate         GetFollowersAlt1SortEnum = "date"
)

func (e *GetFollowersAlt1SortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		*e = GetFollowersAlt1SortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFollowersAlt1SortEnum: %s", s)
	}
}

type GetFollowersAlt1QueryParams struct {
	// The sort direction of the results.
	Direction *GetFollowersAlt1DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetFollowersAlt1SortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetFollowersAlt1Request struct {
	QueryParams GetFollowersAlt1QueryParams
}

type GetFollowersAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The user's followers were returned.
	Users []shared.User
}
