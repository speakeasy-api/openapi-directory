// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FunctionVersionEnumVisibilityEnum string

const (
	FunctionVersionEnumVisibilityEnumPublic    FunctionVersionEnumVisibilityEnum = "public"
	FunctionVersionEnumVisibilityEnumPrivate   FunctionVersionEnumVisibilityEnum = "private"
	FunctionVersionEnumVisibilityEnumProtected FunctionVersionEnumVisibilityEnum = "protected"
)

func (e FunctionVersionEnumVisibilityEnum) ToPointer() *FunctionVersionEnumVisibilityEnum {
	return &e
}

func (e *FunctionVersionEnumVisibilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "private":
		fallthrough
	case "protected":
		*e = FunctionVersionEnumVisibilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FunctionVersionEnumVisibilityEnum: %v", v)
	}
}
