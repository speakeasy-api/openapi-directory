"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetIosReopenAttributionResponse:
    r"""Response for iSDK to get reopen attribution for app universal link open deeplinking. This endpoint is meant for only iOS requests."""
    
    deep_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deepLink'), 'exclude': lambda f: f is None }})
    r"""The deep-link attributed the app universal link open. For both regular FDL links and invite FDL links."""  
    invitation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invitationId'), 'exclude': lambda f: f is None }})
    r"""Optional invitation ID, for only invite typed requested FDL links."""  
    ios_min_app_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iosMinAppVersion'), 'exclude': lambda f: f is None }})
    r"""FDL input value of the \\"&imv=\\" parameter, minimum app version to be returned to Google Firebase SDK running on iOS-9."""  
    resolved_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolvedLink'), 'exclude': lambda f: f is None }})
    r"""The entire FDL, expanded from a short link. It is the same as the requested_link, if it is long."""  
    utm_campaign: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utmCampaign'), 'exclude': lambda f: f is None }})
    r"""Scion campaign value to be propagated by iSDK to Scion at app-reopen."""  
    utm_content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utmContent'), 'exclude': lambda f: f is None }})
    r"""Scion content value to be propagated by iSDK to Scion at app-reopen."""  
    utm_medium: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utmMedium'), 'exclude': lambda f: f is None }})
    r"""Scion medium value to be propagated by iSDK to Scion at app-reopen."""  
    utm_source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utmSource'), 'exclude': lambda f: f is None }})
    r"""Scion source value to be propagated by iSDK to Scion at app-reopen."""  
    utm_term: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('utmTerm'), 'exclude': lambda f: f is None }})
    r"""Scion term value to be propagated by iSDK to Scion at app-reopen."""  
    