<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * AccountSettingsUpdateApplicationJSONUpdateAccountSettingsZoomRooms - Account Settings: Zoom Rooms.
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class AccountSettingsUpdateApplicationJSONUpdateAccountSettingsZoomRooms
{
    /**
     * Automatic start and stop for scheduled meetings.
     * 
     * @var ?bool $autoStartStopScheduledMeetings
     */
	#[\JMS\Serializer\Annotation\SerializedName('auto_start_stop_scheduled_meetings')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoStartStopScheduledMeetings = null;
    
    /**
     * Cloud recording for instant meetings.
     * 
     * @var ?bool $cmrForInstantMeeting
     */
	#[\JMS\Serializer\Annotation\SerializedName('cmr_for_instant_meeting')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cmrForInstantMeeting = null;
    
    /**
     * Shift all meetings to private.
     * 
     * @var ?bool $forcePrivateMeeting
     */
	#[\JMS\Serializer\Annotation\SerializedName('force_private_meeting')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $forcePrivateMeeting = null;
    
    /**
     * Hide host and meeting ID from private meetings.
     * 
     * @var ?bool $hideHostInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('hide_host_information')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hideHostInformation = null;
    
    /**
     * Display meeting list with calendar integration.
     * 
     * @var ?bool $listMeetingsWithCalendar
     */
	#[\JMS\Serializer\Annotation\SerializedName('list_meetings_with_calendar')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $listMeetingsWithCalendar = null;
    
    /**
     * Start AirPlay service manually.
     * 
     * @var ?bool $startAirplayManually
     */
	#[\JMS\Serializer\Annotation\SerializedName('start_airplay_manually')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $startAirplayManually = null;
    
    /**
     * Automatic direct sharing using an ultrasonic proximity signal.
     * 
     * @var ?bool $ultrasonic
     */
	#[\JMS\Serializer\Annotation\SerializedName('ultrasonic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ultrasonic = null;
    
    /**
     * Upcoming meeting alert.
     * 
     * @var ?bool $upcomingMeetingAlert
     */
	#[\JMS\Serializer\Annotation\SerializedName('upcoming_meeting_alert')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $upcomingMeetingAlert = null;
    
    /**
     * Weekly system restart.
     * 
     * @var ?bool $weeklySystemRestart
     */
	#[\JMS\Serializer\Annotation\SerializedName('weekly_system_restart')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $weeklySystemRestart = null;
    
    /**
     * Zoom Room post meeting feedback.
     * 
     * @var ?bool $zrPostMeetingFeedback
     */
	#[\JMS\Serializer\Annotation\SerializedName('zr_post_meeting_feedback')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $zrPostMeetingFeedback = null;
    
	public function __construct()
	{
		$this->autoStartStopScheduledMeetings = null;
		$this->cmrForInstantMeeting = null;
		$this->forcePrivateMeeting = null;
		$this->hideHostInformation = null;
		$this->listMeetingsWithCalendar = null;
		$this->startAirplayManually = null;
		$this->ultrasonic = null;
		$this->upcomingMeetingAlert = null;
		$this->weeklySystemRestart = null;
		$this->zrPostMeetingFeedback = null;
	}
}
