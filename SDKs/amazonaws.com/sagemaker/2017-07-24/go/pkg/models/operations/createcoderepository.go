// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateCodeRepositoryXAmzTargetEnum
type CreateCodeRepositoryXAmzTargetEnum string

const (
	CreateCodeRepositoryXAmzTargetEnumSageMakerCreateCodeRepository CreateCodeRepositoryXAmzTargetEnum = "SageMaker.CreateCodeRepository"
)

func (e CreateCodeRepositoryXAmzTargetEnum) ToPointer() *CreateCodeRepositoryXAmzTargetEnum {
	return &e
}

func (e *CreateCodeRepositoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.CreateCodeRepository":
		*e = CreateCodeRepositoryXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateCodeRepositoryXAmzTargetEnum: %v", v)
	}
}

type CreateCodeRepositoryRequest struct {
	CreateCodeRepositoryInput shared.CreateCodeRepositoryInput   `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                CreateCodeRepositoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateCodeRepositoryResponse struct {
	ContentType string
	// Success
	CreateCodeRepositoryOutput *shared.CreateCodeRepositoryOutput
	StatusCode                 int
	RawResponse                *http.Response
}
