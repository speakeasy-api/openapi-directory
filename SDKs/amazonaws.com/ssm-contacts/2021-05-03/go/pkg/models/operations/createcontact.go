// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateContactXAmzTargetEnum
type CreateContactXAmzTargetEnum string

const (
	CreateContactXAmzTargetEnumSsmContactsCreateContact CreateContactXAmzTargetEnum = "SSMContacts.CreateContact"
)

func (e CreateContactXAmzTargetEnum) ToPointer() *CreateContactXAmzTargetEnum {
	return &e
}

func (e *CreateContactXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SSMContacts.CreateContact":
		*e = CreateContactXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateContactXAmzTargetEnum: %v", v)
	}
}

type CreateContactRequest struct {
	CreateContactRequest shared.CreateContactRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           CreateContactXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateContactResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateContactResult *shared.CreateContactResult
	// DataEncryptionException
	DataEncryptionException interface{}
	// InternalServerException
	InternalServerException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
