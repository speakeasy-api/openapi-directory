"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Trigger:
    r"""Specifies how many time series must fail a predicate to trigger a condition. If not specified, then a {count: 1} trigger is used."""
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""The absolute number of time series that must fail the predicate for the condition to be triggered."""  
    percent: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percent'), 'exclude': lambda f: f is None }})
    r"""The percentage of time series that must fail the predicate for the condition to be triggered."""  
    