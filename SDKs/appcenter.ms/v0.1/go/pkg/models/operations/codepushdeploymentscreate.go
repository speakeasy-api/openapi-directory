// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CodePushDeploymentsCreateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type CodePushDeploymentsCreateRequestBodyLatestReleaseDiffPackageMap struct {
	Size float64 `json:"size"`
	URL  string  `json:"url"`
}

// CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum - The release method is unknown if unspecified
type CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum string

const (
	CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnumUpload   CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum = "Upload"
	CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnumPromote  CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum = "Promote"
	CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnumRollback CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum = "Rollback"
)

func (e CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum) ToPointer() *CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum {
	return &e
}

func (e *CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Upload":
		fallthrough
	case "Promote":
		fallthrough
	case "Rollback":
		*e = CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum: %v", v)
	}
}

type CodePushDeploymentsCreateRequestBodyLatestRelease struct {
	BlobURL        *string                                                                    `json:"blob_url,omitempty"`
	Description    *string                                                                    `json:"description,omitempty"`
	DiffPackageMap map[string]CodePushDeploymentsCreateRequestBodyLatestReleaseDiffPackageMap `json:"diff_package_map,omitempty"`
	IsDisabled     *bool                                                                      `json:"is_disabled,omitempty"`
	IsMandatory    *bool                                                                      `json:"is_mandatory,omitempty"`
	Label          *string                                                                    `json:"label,omitempty"`
	// Set on 'Promote'
	OriginalDeployment *string `json:"original_deployment,omitempty"`
	// Set on 'Promote' and 'Rollback'
	OriginalLabel *string `json:"original_label,omitempty"`
	PackageHash   *string `json:"package_hash,omitempty"`
	// The release method is unknown if unspecified
	ReleaseMethod     *CodePushDeploymentsCreateRequestBodyLatestReleaseReleaseMethodEnum `json:"release_method,omitempty"`
	ReleasedBy        *string                                                             `json:"released_by,omitempty"`
	Rollout           *int64                                                              `json:"rollout,omitempty"`
	Size              *float64                                                            `json:"size,omitempty"`
	TargetBinaryRange *string                                                             `json:"target_binary_range,omitempty"`
	UploadTime        *int64                                                              `json:"upload_time,omitempty"`
}

// CodePushDeploymentsCreateRequestBody - Deployment to be created
type CodePushDeploymentsCreateRequestBody struct {
	Key           *string                                            `json:"key,omitempty"`
	LatestRelease *CodePushDeploymentsCreateRequestBodyLatestRelease `json:"latest_release,omitempty"`
	Name          string                                             `json:"name"`
}

type CodePushDeploymentsCreateRequest struct {
	// Deployment to be created
	RequestBody CodePushDeploymentsCreateRequestBody `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// CodePushDeploymentsCreateDefaultApplicationJSON - Error
type CodePushDeploymentsCreateDefaultApplicationJSON struct {
	Message string `json:"message"`
}

type CodePushDeploymentsCreate201ApplicationJSONLatestReleaseDiffPackageMap struct {
	Size float64 `json:"size"`
	URL  string  `json:"url"`
}

// CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum - The release method is unknown if unspecified
type CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum string

const (
	CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnumUpload   CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum = "Upload"
	CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnumPromote  CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum = "Promote"
	CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnumRollback CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum = "Rollback"
)

func (e CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum) ToPointer() *CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum {
	return &e
}

func (e *CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Upload":
		fallthrough
	case "Promote":
		fallthrough
	case "Rollback":
		*e = CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum: %v", v)
	}
}

type CodePushDeploymentsCreate201ApplicationJSONLatestRelease struct {
	BlobURL        *string                                                                           `json:"blob_url,omitempty"`
	Description    *string                                                                           `json:"description,omitempty"`
	DiffPackageMap map[string]CodePushDeploymentsCreate201ApplicationJSONLatestReleaseDiffPackageMap `json:"diff_package_map,omitempty"`
	IsDisabled     *bool                                                                             `json:"is_disabled,omitempty"`
	IsMandatory    *bool                                                                             `json:"is_mandatory,omitempty"`
	Label          *string                                                                           `json:"label,omitempty"`
	// Set on 'Promote'
	OriginalDeployment *string `json:"original_deployment,omitempty"`
	// Set on 'Promote' and 'Rollback'
	OriginalLabel *string `json:"original_label,omitempty"`
	PackageHash   *string `json:"package_hash,omitempty"`
	// The release method is unknown if unspecified
	ReleaseMethod     *CodePushDeploymentsCreate201ApplicationJSONLatestReleaseReleaseMethodEnum `json:"release_method,omitempty"`
	ReleasedBy        *string                                                                    `json:"released_by,omitempty"`
	Rollout           *int64                                                                     `json:"rollout,omitempty"`
	Size              *float64                                                                   `json:"size,omitempty"`
	TargetBinaryRange *string                                                                    `json:"target_binary_range,omitempty"`
	UploadTime        *int64                                                                     `json:"upload_time,omitempty"`
}

// CodePushDeploymentsCreate201ApplicationJSON - Success
type CodePushDeploymentsCreate201ApplicationJSON struct {
	Key           *string                                                   `json:"key,omitempty"`
	LatestRelease *CodePushDeploymentsCreate201ApplicationJSONLatestRelease `json:"latest_release,omitempty"`
	Name          string                                                    `json:"name"`
}

type CodePushDeploymentsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	CodePushDeploymentsCreate201ApplicationJSONObject *CodePushDeploymentsCreate201ApplicationJSON
	// Error
	CodePushDeploymentsCreateDefaultApplicationJSONObject *CodePushDeploymentsCreateDefaultApplicationJSON
}
