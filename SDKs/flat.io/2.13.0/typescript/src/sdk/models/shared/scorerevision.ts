/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ScoreRevisionStatistics } from "./scorerevisionstatistics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A score revision metadata
 */
export class ScoreRevision extends SpeakeasyBase {
  /**
   * True if this revision was automatically generated by Flat and not on
   *
   * @remarks
   * purpose by the user.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autosave" })
  autosave?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborators" })
  collaborators?: string[];

  /**
   * The date when this revision was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  /**
   * A description associated to the revision
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The last event (action id) of the revision
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event?: string;

  /**
   * The unique identifier of the revision.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The statistics related to the score revision (additions and deletions)
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statistics" })
  @Type(() => ScoreRevisionStatistics)
  statistics?: ScoreRevisionStatistics;

  /**
   * The user identifier who created the revision
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}
