/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class IdentificationData {
    /**
     * The card number of the document that was issued (AU only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardNumber")
    public String cardNumber;

    public IdentificationData withCardNumber(String cardNumber) {
        this.cardNumber = cardNumber;
        return this;
    }
    
    /**
     * The expiry date of the document, in YYYY-MM-DD format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expiryDate")
    public String expiryDate;

    public IdentificationData withExpiryDate(String expiryDate) {
        this.expiryDate = expiryDate;
        return this;
    }
    
    /**
     * The two-character [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code where the document was issued. For example, **US**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuerCountry")
    public String issuerCountry;

    public IdentificationData withIssuerCountry(String issuerCountry) {
        this.issuerCountry = issuerCountry;
        return this;
    }
    
    /**
     * The state or province where the document was issued (AU only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuerState")
    public String issuerState;

    public IdentificationData withIssuerState(String issuerState) {
        this.issuerState = issuerState;
        return this;
    }
    
    /**
     * Applies only to individuals in the US. Set to **true** if the individual does not have an SSN. To verify their identity, Adyen will require them to upload an ID document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nationalIdExempt")
    public Boolean nationalIdExempt;

    public IdentificationData withNationalIdExempt(Boolean nationalIdExempt) {
        this.nationalIdExempt = nationalIdExempt;
        return this;
    }
    
    /**
     * The number in the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;

    public IdentificationData withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Type of document, used when providing an ID number or uploading a document. The possible values depend on the legal entity type.
     * 
     * When providing ID numbers:
     * * For **individual**, the `type` values can be **driversLicense**, **identityCard**, **nationalIdNumber**, or **passport**.
     * 
     * When uploading documents:
     * * For **organization**, the `type` values can be **proofOfAddress**, **registrationDocument**, **taxDocument**, **proofOfOwnership**, or **proofOfIndustry**. 
     * 
     * * For **individual**, the `type` values can be **identityCard**, **driversLicense**, **proofOfNationalIdNumber**, **proofOfResidency**, or **proofOfIndustry**.
     * 
     * * Use **bankStatement** to upload documents for a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id).
     */
    @JsonProperty("type")
    public IdentificationDataTypeEnum type;

    public IdentificationData withType(IdentificationDataTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public IdentificationData(@JsonProperty("type") IdentificationDataTypeEnum type) {
        this.type = type;
  }
}
