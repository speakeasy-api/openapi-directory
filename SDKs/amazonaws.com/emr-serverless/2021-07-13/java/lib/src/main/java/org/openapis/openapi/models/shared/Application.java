/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Application - Information about an application. EMR Serverless uses applications to run jobs.
 */
public class Application {
    @JsonProperty("applicationId")
    public String applicationId;
    public Application withApplicationId(String applicationId) {
        this.applicationId = applicationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("architecture")
    public ArchitectureEnum architecture;
    public Application withArchitecture(ArchitectureEnum architecture) {
        this.architecture = architecture;
        return this;
    }
    
    @JsonProperty("arn")
    public String arn;
    public Application withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoStartConfiguration")
    public AutoStartConfig autoStartConfiguration;
    public Application withAutoStartConfiguration(AutoStartConfig autoStartConfiguration) {
        this.autoStartConfiguration = autoStartConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoStopConfiguration")
    public AutoStopConfig autoStopConfiguration;
    public Application withAutoStopConfiguration(AutoStopConfig autoStopConfiguration) {
        this.autoStopConfiguration = autoStopConfiguration;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public Application withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageConfiguration")
    public ImageConfiguration imageConfiguration;
    public Application withImageConfiguration(ImageConfiguration imageConfiguration) {
        this.imageConfiguration = imageConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialCapacity")
    public java.util.Map<String, InitialCapacityConfig> initialCapacity;
    public Application withInitialCapacity(java.util.Map<String, InitialCapacityConfig> initialCapacity) {
        this.initialCapacity = initialCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumCapacity")
    public MaximumAllowedResources maximumCapacity;
    public Application withMaximumCapacity(MaximumAllowedResources maximumCapacity) {
        this.maximumCapacity = maximumCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Application withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfiguration")
    public NetworkConfiguration networkConfiguration;
    public Application withNetworkConfiguration(NetworkConfiguration networkConfiguration) {
        this.networkConfiguration = networkConfiguration;
        return this;
    }
    
    @JsonProperty("releaseLabel")
    public String releaseLabel;
    public Application withReleaseLabel(String releaseLabel) {
        this.releaseLabel = releaseLabel;
        return this;
    }
    
    @JsonProperty("state")
    public ApplicationStateEnum state;
    public Application withState(ApplicationStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateDetails")
    public String stateDetails;
    public Application withStateDetails(String stateDetails) {
        this.stateDetails = stateDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public Application withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonProperty("type")
    public String type;
    public Application withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public Application withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workerTypeSpecifications")
    public java.util.Map<String, WorkerTypeSpecification> workerTypeSpecifications;
    public Application withWorkerTypeSpecifications(java.util.Map<String, WorkerTypeSpecification> workerTypeSpecifications) {
        this.workerTypeSpecifications = workerTypeSpecifications;
        return this;
    }
    
}
