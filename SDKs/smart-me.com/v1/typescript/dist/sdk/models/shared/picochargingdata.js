"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PicoChargingData = exports.PicoChargingDataStateEnum = exports.PicoChargingDataLoadSheddingStateEnum = exports.PicoChargingDataLastWarningOrErrorEnum = exports.PicoChargingDataConnectionModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The mode how this station is connected to the cloud
 */
var PicoChargingDataConnectionModeEnum;
(function (PicoChargingDataConnectionModeEnum) {
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeNoConnection"] = "NetworkToCloudConnectionMode_NoConnection";
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeDirectWiFiConnection"] = "NetworkToCloudConnectionMode_DirectWiFiConnection";
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeGPRSConnection"] = "NetworkToCloudConnectionMode_GPRSConnection";
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeNBIotConnection"] = "NetworkToCloudConnectionMode_NBIotConnection";
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeLteCatM1Connection"] = "NetworkToCloudConnectionMode_LteCatM1Connection";
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeMeshWiFiConnection"] = "NetworkToCloudConnectionMode_MeshWiFiConnection";
    PicoChargingDataConnectionModeEnum["NetworkToCloudConnectionModeMeshMobileConnection"] = "NetworkToCloudConnectionMode_MeshMobileConnection";
})(PicoChargingDataConnectionModeEnum = exports.PicoChargingDataConnectionModeEnum || (exports.PicoChargingDataConnectionModeEnum = {}));
/**
 * The last warning or error of the station. This message is only shown if the warning or error happend in the last 5 minutes.
 */
var PicoChargingDataLastWarningOrErrorEnum;
(function (PicoChargingDataLastWarningOrErrorEnum) {
    PicoChargingDataLastWarningOrErrorEnum["MeterDataloggerEvent"] = "MeterDataloggerEvent";
    PicoChargingDataLastWarningOrErrorEnum["MeterRestart"] = "MeterRestart";
    PicoChargingDataLastWarningOrErrorEnum["PowerDown"] = "PowerDown";
    PicoChargingDataLastWarningOrErrorEnum["MissingPhaseL1"] = "MissingPhaseL1";
    PicoChargingDataLastWarningOrErrorEnum["MissingPhaseL2"] = "MissingPhaseL2";
    PicoChargingDataLastWarningOrErrorEnum["MissingPhaseL3"] = "MissingPhaseL3";
    PicoChargingDataLastWarningOrErrorEnum["TamperDetectionCover"] = "TamperDetectionCover";
    PicoChargingDataLastWarningOrErrorEnum["MagneticFieldDetection"] = "MagneticFieldDetection";
    PicoChargingDataLastWarningOrErrorEnum["ClockAdjusted"] = "ClockAdjusted";
    PicoChargingDataLastWarningOrErrorEnum["Overvoltage"] = "Overvoltage";
    PicoChargingDataLastWarningOrErrorEnum["Undervoltage"] = "Undervoltage";
    PicoChargingDataLastWarningOrErrorEnum["OvervoltageL1"] = "OvervoltageL1";
    PicoChargingDataLastWarningOrErrorEnum["OvervoltageL2"] = "OvervoltageL2";
    PicoChargingDataLastWarningOrErrorEnum["OvervoltageL3"] = "OvervoltageL3";
    PicoChargingDataLastWarningOrErrorEnum["ChargingTransaction"] = "ChargingTransaction";
    PicoChargingDataLastWarningOrErrorEnum["PicoErrorControllerPanic"] = "PicoErrorControllerPanic";
    PicoChargingDataLastWarningOrErrorEnum["PicoErrorMidServicePanic"] = "PicoErrorMidServicePanic";
    PicoChargingDataLastWarningOrErrorEnum["PicoWarningRcdTriggered"] = "PicoWarningRcdTriggered";
    PicoChargingDataLastWarningOrErrorEnum["PicoWarningCableLockError"] = "PicoWarningCableLockError";
    PicoChargingDataLastWarningOrErrorEnum["PicoWarningDiodeFailure"] = "PicoWarningDiodeFailure";
    PicoChargingDataLastWarningOrErrorEnum["PicoWarningOverload"] = "PicoWarningOverload";
    PicoChargingDataLastWarningOrErrorEnum["PicoWarningHighTemperature"] = "PicoWarningHighTemperature";
})(PicoChargingDataLastWarningOrErrorEnum = exports.PicoChargingDataLastWarningOrErrorEnum || (exports.PicoChargingDataLastWarningOrErrorEnum = {}));
/**
 * Max. dynamic current (e.g. set over API or Modbus TCP) of this station or the loadmanagement group of the station if the station is in a group. in A
 */
var PicoChargingDataLoadSheddingStateEnum;
(function (PicoChargingDataLoadSheddingStateEnum) {
    PicoChargingDataLoadSheddingStateEnum["MaxCurrent"] = "MaxCurrent";
    PicoChargingDataLoadSheddingStateEnum["HalfCurrent"] = "HalfCurrent";
    PicoChargingDataLoadSheddingStateEnum["MinCurrent"] = "MinCurrent";
    PicoChargingDataLoadSheddingStateEnum["NoCurrent"] = "NoCurrent";
})(PicoChargingDataLoadSheddingStateEnum = exports.PicoChargingDataLoadSheddingStateEnum || (exports.PicoChargingDataLoadSheddingStateEnum = {}));
/**
 * The state of the charging station
 */
var PicoChargingDataStateEnum;
(function (PicoChargingDataStateEnum) {
    PicoChargingDataStateEnum["Booting"] = "Booting";
    PicoChargingDataStateEnum["ReadyNoCarConnected"] = "ReadyNoCarConnected";
    PicoChargingDataStateEnum["ReadyCarConnected"] = "ReadyCarConnected";
    PicoChargingDataStateEnum["StartedWaitForCar"] = "StartedWaitForCar";
    PicoChargingDataStateEnum["Charging"] = "Charging";
    PicoChargingDataStateEnum["Installation"] = "Installation";
    PicoChargingDataStateEnum["Authorize"] = "Authorize";
    PicoChargingDataStateEnum["Offline"] = "Offline";
})(PicoChargingDataStateEnum = exports.PicoChargingDataStateEnum || (exports.PicoChargingDataStateEnum = {}));
/**
 * Container class for the pico charging station API
 */
var PicoChargingData = /** @class */ (function (_super) {
    __extends(PicoChargingData, _super);
    function PicoChargingData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ActiveChargingEnergy" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "activeChargingEnergy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ActiveChargingPower" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "activeChargingPower", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ConnectionMode" }),
        __metadata("design:type", String)
    ], PicoChargingData.prototype, "connectionMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Duration" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LastWarningOrError" }),
        __metadata("design:type", String)
    ], PicoChargingData.prototype, "lastWarningOrError", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LastWarningOrErrorMessage" }),
        __metadata("design:type", String)
    ], PicoChargingData.prototype, "lastWarningOrErrorMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LastWarningOrErrorTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], PicoChargingData.prototype, "lastWarningOrErrorTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LoadSheddingState" }),
        __metadata("design:type", String)
    ], PicoChargingData.prototype, "loadSheddingState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LoadmanagementGroupName" }),
        __metadata("design:type", String)
    ], PicoChargingData.prototype, "loadmanagementGroupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxAllowedChargingCurrent" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "maxAllowedChargingCurrent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxDynamicCurrent" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "maxDynamicCurrent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxLoadmanagementGroupCurrent" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "maxLoadmanagementGroupCurrent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxStationCurrent" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "maxStationCurrent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MinStationCurrent" }),
        __metadata("design:type", Number)
    ], PicoChargingData.prototype, "minStationCurrent", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "State" }),
        __metadata("design:type", String)
    ], PicoChargingData.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ValueDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], PicoChargingData.prototype, "valueDate", void 0);
    return PicoChargingData;
}(utils_1.SpeakeasyBase));
exports.PicoChargingData = PicoChargingData;
