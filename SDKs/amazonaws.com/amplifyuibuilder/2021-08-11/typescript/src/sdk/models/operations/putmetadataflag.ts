/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Stores the metadata information about a feature on a form or view.
 */
export class PutMetadataFlagRequestBodyBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "newValue" })
  newValue?: string;
}

export class PutMetadataFlagRequestBody extends SpeakeasyBase {
  /**
   * Stores the metadata information about a feature on a form or view.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  @Type(() => PutMetadataFlagRequestBodyBody)
  body: PutMetadataFlagRequestBodyBody;
}

export class PutMetadataFlagRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PutMetadataFlagRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The unique ID for the Amplify app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appId",
  })
  appId: string;

  /**
   * The name of the backend environment that is part of the Amplify app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=environmentName",
  })
  environmentName: string;

  /**
   * The name of the feature associated with the metadata.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=featureName",
  })
  featureName: string;
}

export class PutMetadataFlagResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;
}
