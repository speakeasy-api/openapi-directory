// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeDBLogFilesActionEnum
type GETDescribeDBLogFilesActionEnum string

const (
	GETDescribeDBLogFilesActionEnumDescribeDbLogFiles GETDescribeDBLogFilesActionEnum = "DescribeDBLogFiles"
)

func (e *GETDescribeDBLogFilesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeDBLogFiles":
		*e = GETDescribeDBLogFilesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDBLogFilesActionEnum: %s", s)
	}
}

// GETDescribeDBLogFilesVersionEnum
type GETDescribeDBLogFilesVersionEnum string

const (
	GETDescribeDBLogFilesVersionEnumTwoThousandAndThirteen0212 GETDescribeDBLogFilesVersionEnum = "2013-02-12"
)

func (e *GETDescribeDBLogFilesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-02-12":
		*e = GETDescribeDBLogFilesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeDBLogFilesVersionEnum: %s", s)
	}
}

type GETDescribeDBLogFilesRequest struct {
	Action               GETDescribeDBLogFilesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	DBInstanceIdentifier string                           `queryParam:"style=form,explode=true,name=DBInstanceIdentifier"`
	FileLastWritten      *int64                           `queryParam:"style=form,explode=true,name=FileLastWritten"`
	FileSize             *int64                           `queryParam:"style=form,explode=true,name=FileSize"`
	FilenameContains     *string                          `queryParam:"style=form,explode=true,name=FilenameContains"`
	Marker               *string                          `queryParam:"style=form,explode=true,name=Marker"`
	MaxRecords           *int64                           `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version              GETDescribeDBLogFilesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm        *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeDBLogFilesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
