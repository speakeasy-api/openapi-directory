// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type JDBCConnectionTypeEnum string

const (
	JDBCConnectionTypeEnumSqlserver  JDBCConnectionTypeEnum = "sqlserver"
	JDBCConnectionTypeEnumMysql      JDBCConnectionTypeEnum = "mysql"
	JDBCConnectionTypeEnumOracle     JDBCConnectionTypeEnum = "oracle"
	JDBCConnectionTypeEnumPostgresql JDBCConnectionTypeEnum = "postgresql"
	JDBCConnectionTypeEnumRedshift   JDBCConnectionTypeEnum = "redshift"
)

func (e *JDBCConnectionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "sqlserver":
		fallthrough
	case "mysql":
		fallthrough
	case "oracle":
		fallthrough
	case "postgresql":
		fallthrough
	case "redshift":
		*e = JDBCConnectionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for JDBCConnectionTypeEnum: %s", s)
	}
}
