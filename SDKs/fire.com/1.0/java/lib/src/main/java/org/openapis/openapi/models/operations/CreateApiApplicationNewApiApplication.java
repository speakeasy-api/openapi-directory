/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateApiApplicationNewApiApplication - Details of the new API Application
 */
public class CreateApiApplicationNewApiApplication {
    /**
     * A name for the API Application to help you identify it
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationName")
    public String applicationName;

    public CreateApiApplicationNewApiApplication withApplicationName(String applicationName) {
        this.applicationName = applicationName;
        return this;
    }
    
    /**
     * Whether or not this API Application can be used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public CreateApiApplicationNewApiApplication withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * The date that this API Application can no longer be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiry")
    public OffsetDateTime expiry;

    public CreateApiApplicationNewApiApplication withExpiry(OffsetDateTime expiry) {
        this.expiry = expiry;
        return this;
    }
    
    /**
     * The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ican")
    public Long ican;

    public CreateApiApplicationNewApiApplication withIcan(Long ican) {
        this.ican = ican;
        return this;
    }
    
    /**
     * Number of approvals required to create a payee in a batch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfPayeeApprovalsRequired")
    public Long numberOfPayeeApprovalsRequired;

    public CreateApiApplicationNewApiApplication withNumberOfPayeeApprovalsRequired(Long numberOfPayeeApprovalsRequired) {
        this.numberOfPayeeApprovalsRequired = numberOfPayeeApprovalsRequired;
        return this;
    }
    
    /**
     * Number of approvals required to process a payment in a batch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numberOfPaymentApprovalsRequired")
    public Long numberOfPaymentApprovalsRequired;

    public CreateApiApplicationNewApiApplication withNumberOfPaymentApprovalsRequired(Long numberOfPaymentApprovalsRequired) {
        this.numberOfPaymentApprovalsRequired = numberOfPaymentApprovalsRequired;
        return this;
    }
    
    /**
     * The list of permissions required
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public String[] permissions;

    public CreateApiApplicationNewApiApplication withPermissions(String[] permissions) {
        this.permissions = permissions;
        return this;
    }
    
    public CreateApiApplicationNewApiApplication(){}
}
