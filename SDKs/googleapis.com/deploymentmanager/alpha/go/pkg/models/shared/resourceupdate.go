// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceUpdateErrorErrors struct {
	// [Output Only] The error type identifier for this error.
	Code *string `json:"code,omitempty"`
	// [Output Only] Indicates the field in the request that caused the error. This property is optional.
	Location *string `json:"location,omitempty"`
	// [Output Only] An optional, human-readable error message.
	Message *string `json:"message,omitempty"`
}

// ResourceUpdateError - Output only. If errors are generated during update of the resource, this field will be populated.
type ResourceUpdateError struct {
	// [Output Only] The array of errors encountered while processing this operation.
	Errors []ResourceUpdateErrorErrors `json:"errors,omitempty"`
}

// ResourceUpdateIntentEnum - Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.
type ResourceUpdateIntentEnum string

const (
	ResourceUpdateIntentEnumCreateOrAcquire ResourceUpdateIntentEnum = "CREATE_OR_ACQUIRE"
	ResourceUpdateIntentEnumDelete          ResourceUpdateIntentEnum = "DELETE"
	ResourceUpdateIntentEnumAcquire         ResourceUpdateIntentEnum = "ACQUIRE"
	ResourceUpdateIntentEnumUpdate          ResourceUpdateIntentEnum = "UPDATE"
	ResourceUpdateIntentEnumAbandon         ResourceUpdateIntentEnum = "ABANDON"
	ResourceUpdateIntentEnumCreate          ResourceUpdateIntentEnum = "CREATE"
)

func (e *ResourceUpdateIntentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE_OR_ACQUIRE":
		fallthrough
	case "DELETE":
		fallthrough
	case "ACQUIRE":
		fallthrough
	case "UPDATE":
		fallthrough
	case "ABANDON":
		fallthrough
	case "CREATE":
		*e = ResourceUpdateIntentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceUpdateIntentEnum: %s", s)
	}
}

type ResourceUpdateRuntimePoliciesEnum string

const (
	ResourceUpdateRuntimePoliciesEnumCreate         ResourceUpdateRuntimePoliciesEnum = "CREATE"
	ResourceUpdateRuntimePoliciesEnumDelete         ResourceUpdateRuntimePoliciesEnum = "DELETE"
	ResourceUpdateRuntimePoliciesEnumUpdateOnChange ResourceUpdateRuntimePoliciesEnum = "UPDATE_ON_CHANGE"
	ResourceUpdateRuntimePoliciesEnumUpdateAlways   ResourceUpdateRuntimePoliciesEnum = "UPDATE_ALWAYS"
)

func (e *ResourceUpdateRuntimePoliciesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATE":
		fallthrough
	case "DELETE":
		fallthrough
	case "UPDATE_ON_CHANGE":
		fallthrough
	case "UPDATE_ALWAYS":
		*e = ResourceUpdateRuntimePoliciesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceUpdateRuntimePoliciesEnum: %s", s)
	}
}

// ResourceUpdateStateEnum - Output only. The state of the resource.
type ResourceUpdateStateEnum string

const (
	ResourceUpdateStateEnumPending    ResourceUpdateStateEnum = "PENDING"
	ResourceUpdateStateEnumInProgress ResourceUpdateStateEnum = "IN_PROGRESS"
	ResourceUpdateStateEnumInPreview  ResourceUpdateStateEnum = "IN_PREVIEW"
	ResourceUpdateStateEnumFailed     ResourceUpdateStateEnum = "FAILED"
	ResourceUpdateStateEnumAborted    ResourceUpdateStateEnum = "ABORTED"
)

func (e *ResourceUpdateStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "IN_PREVIEW":
		fallthrough
	case "FAILED":
		fallthrough
	case "ABORTED":
		*e = ResourceUpdateStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceUpdateStateEnum: %s", s)
	}
}

// ResourceUpdateWarningsCodeEnum - [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
type ResourceUpdateWarningsCodeEnum string

const (
	ResourceUpdateWarningsCodeEnumDeprecatedResourceUsed                 ResourceUpdateWarningsCodeEnum = "DEPRECATED_RESOURCE_USED"
	ResourceUpdateWarningsCodeEnumNoResultsOnPage                        ResourceUpdateWarningsCodeEnum = "NO_RESULTS_ON_PAGE"
	ResourceUpdateWarningsCodeEnumUnreachable                            ResourceUpdateWarningsCodeEnum = "UNREACHABLE"
	ResourceUpdateWarningsCodeEnumNextHopAddressNotAssigned              ResourceUpdateWarningsCodeEnum = "NEXT_HOP_ADDRESS_NOT_ASSIGNED"
	ResourceUpdateWarningsCodeEnumNextHopInstanceNotFound                ResourceUpdateWarningsCodeEnum = "NEXT_HOP_INSTANCE_NOT_FOUND"
	ResourceUpdateWarningsCodeEnumNextHopInstanceNotOnNetwork            ResourceUpdateWarningsCodeEnum = "NEXT_HOP_INSTANCE_NOT_ON_NETWORK"
	ResourceUpdateWarningsCodeEnumNextHopCannotIPForward                 ResourceUpdateWarningsCodeEnum = "NEXT_HOP_CANNOT_IP_FORWARD"
	ResourceUpdateWarningsCodeEnumNextHopNotRunning                      ResourceUpdateWarningsCodeEnum = "NEXT_HOP_NOT_RUNNING"
	ResourceUpdateWarningsCodeEnumInjectedKernelsDeprecated              ResourceUpdateWarningsCodeEnum = "INJECTED_KERNELS_DEPRECATED"
	ResourceUpdateWarningsCodeEnumRequiredTosAgreement                   ResourceUpdateWarningsCodeEnum = "REQUIRED_TOS_AGREEMENT"
	ResourceUpdateWarningsCodeEnumDiskSizeLargerThanImageSize            ResourceUpdateWarningsCodeEnum = "DISK_SIZE_LARGER_THAN_IMAGE_SIZE"
	ResourceUpdateWarningsCodeEnumResourceNotDeleted                     ResourceUpdateWarningsCodeEnum = "RESOURCE_NOT_DELETED"
	ResourceUpdateWarningsCodeEnumSingleInstancePropertyTemplate         ResourceUpdateWarningsCodeEnum = "SINGLE_INSTANCE_PROPERTY_TEMPLATE"
	ResourceUpdateWarningsCodeEnumNotCriticalError                       ResourceUpdateWarningsCodeEnum = "NOT_CRITICAL_ERROR"
	ResourceUpdateWarningsCodeEnumCleanupFailed                          ResourceUpdateWarningsCodeEnum = "CLEANUP_FAILED"
	ResourceUpdateWarningsCodeEnumFieldValueOverriden                    ResourceUpdateWarningsCodeEnum = "FIELD_VALUE_OVERRIDEN"
	ResourceUpdateWarningsCodeEnumResourceInUseByOtherResourceWarning    ResourceUpdateWarningsCodeEnum = "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING"
	ResourceUpdateWarningsCodeEnumMissingTypeDependency                  ResourceUpdateWarningsCodeEnum = "MISSING_TYPE_DEPENDENCY"
	ResourceUpdateWarningsCodeEnumExternalAPIWarning                     ResourceUpdateWarningsCodeEnum = "EXTERNAL_API_WARNING"
	ResourceUpdateWarningsCodeEnumSchemaValidationIgnored                ResourceUpdateWarningsCodeEnum = "SCHEMA_VALIDATION_IGNORED"
	ResourceUpdateWarningsCodeEnumUndeclaredProperties                   ResourceUpdateWarningsCodeEnum = "UNDECLARED_PROPERTIES"
	ResourceUpdateWarningsCodeEnumExperimentalTypeUsed                   ResourceUpdateWarningsCodeEnum = "EXPERIMENTAL_TYPE_USED"
	ResourceUpdateWarningsCodeEnumDeprecatedTypeUsed                     ResourceUpdateWarningsCodeEnum = "DEPRECATED_TYPE_USED"
	ResourceUpdateWarningsCodeEnumPartialSuccess                         ResourceUpdateWarningsCodeEnum = "PARTIAL_SUCCESS"
	ResourceUpdateWarningsCodeEnumLargeDeploymentWarning                 ResourceUpdateWarningsCodeEnum = "LARGE_DEPLOYMENT_WARNING"
	ResourceUpdateWarningsCodeEnumNextHopInstanceHasNoIpv6Interface      ResourceUpdateWarningsCodeEnum = "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE"
	ResourceUpdateWarningsCodeEnumInvalidHealthCheckForDynamicWieghtedLb ResourceUpdateWarningsCodeEnum = "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB"
)

func (e *ResourceUpdateWarningsCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEPRECATED_RESOURCE_USED":
		fallthrough
	case "NO_RESULTS_ON_PAGE":
		fallthrough
	case "UNREACHABLE":
		fallthrough
	case "NEXT_HOP_ADDRESS_NOT_ASSIGNED":
		fallthrough
	case "NEXT_HOP_INSTANCE_NOT_FOUND":
		fallthrough
	case "NEXT_HOP_INSTANCE_NOT_ON_NETWORK":
		fallthrough
	case "NEXT_HOP_CANNOT_IP_FORWARD":
		fallthrough
	case "NEXT_HOP_NOT_RUNNING":
		fallthrough
	case "INJECTED_KERNELS_DEPRECATED":
		fallthrough
	case "REQUIRED_TOS_AGREEMENT":
		fallthrough
	case "DISK_SIZE_LARGER_THAN_IMAGE_SIZE":
		fallthrough
	case "RESOURCE_NOT_DELETED":
		fallthrough
	case "SINGLE_INSTANCE_PROPERTY_TEMPLATE":
		fallthrough
	case "NOT_CRITICAL_ERROR":
		fallthrough
	case "CLEANUP_FAILED":
		fallthrough
	case "FIELD_VALUE_OVERRIDEN":
		fallthrough
	case "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING":
		fallthrough
	case "MISSING_TYPE_DEPENDENCY":
		fallthrough
	case "EXTERNAL_API_WARNING":
		fallthrough
	case "SCHEMA_VALIDATION_IGNORED":
		fallthrough
	case "UNDECLARED_PROPERTIES":
		fallthrough
	case "EXPERIMENTAL_TYPE_USED":
		fallthrough
	case "DEPRECATED_TYPE_USED":
		fallthrough
	case "PARTIAL_SUCCESS":
		fallthrough
	case "LARGE_DEPLOYMENT_WARNING":
		fallthrough
	case "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE":
		fallthrough
	case "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB":
		*e = ResourceUpdateWarningsCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceUpdateWarningsCodeEnum: %s", s)
	}
}

type ResourceUpdateWarningsData struct {
	// [Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
	Key *string `json:"key,omitempty"`
	// [Output Only] A warning data value corresponding to the key.
	Value *string `json:"value,omitempty"`
}

type ResourceUpdateWarnings struct {
	// [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
	Code *ResourceUpdateWarningsCodeEnum `json:"code,omitempty"`
	// [Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
	Data []ResourceUpdateWarningsData `json:"data,omitempty"`
	// [Output Only] A human-readable description of the warning code.
	Message *string `json:"message,omitempty"`
}

type ResourceUpdate struct {
	// The access controls set on the resource.
	AccessControl *ResourceAccessControl `json:"accessControl,omitempty"`
	// The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.
	Credential *Credential `json:"credential,omitempty"`
	// Output only. If errors are generated during update of the resource, this field will be populated.
	Error *ResourceUpdateError `json:"error,omitempty"`
	// Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML.
	FinalProperties *string `json:"finalProperties,omitempty"`
	// Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`.
	Intent *ResourceUpdateIntentEnum `json:"intent,omitempty"`
	// Output only. URL of the manifest representing the update configuration of this resource.
	Manifest *string `json:"manifest,omitempty"`
	// Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML.
	Properties *string `json:"properties,omitempty"`
	// Output only. In case this is an action, it will show the runtimePolicies that this action will have after updating the deployment.
	RuntimePolicies []ResourceUpdateRuntimePoliciesEnum `json:"runtimePolicies,omitempty"`
	// Output only. The state of the resource.
	State *ResourceUpdateStateEnum `json:"state,omitempty"`
	// Output only. If warning messages are generated during processing of this resource, this field will be populated.
	Warnings []ResourceUpdateWarnings `json:"warnings,omitempty"`
}
