/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum {
  LogActionUnspecified = "LOG_ACTION_UNSPECIFIED",
  DontLog = "DONT_LOG",
  Log = "LOG",
}

export enum EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum {
  LogTypeUnspecified = "LOG_TYPE_UNSPECIFIED",
  Gws = "GWS",
  Gts = "GTS",
  All = "ALL",
}

export enum EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum {
  ShortenerTypeUnspecified = "SHORTENER_TYPE_UNSPECIFIED",
  Shorten = "SHORTEN",
  Hash = "HASH",
  ShortenWithHash = "SHORTEN_WITH_HASH",
  ShortenEmail = "SHORTEN_EMAIL",
  ShortenEmailWithHash = "SHORTEN_EMAIL_WITH_HASH",
  ShortenDomain = "SHORTEN_DOMAIN",
}

/**
 * Describes string and array limits when writing to logs. When a limit is exceeded the *shortener_type* describes how to shorten the field. next_id: 6
 */
export class EnterpriseCrmLoggingGwsFieldLimits extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "logAction" })
  logAction?: EnterpriseCrmLoggingGwsFieldLimitsLogActionEnum;

  /**
   * To which type(s) of logs the limits apply.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logType" })
  logType?: EnterpriseCrmLoggingGwsFieldLimitsLogTypeEnum[];

  /**
   * maximum array size. If the array exceds this size, the field (list) is truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxArraySize" })
  maxArraySize?: number;

  /**
   * maximum string length. If the field exceeds this amount the field is shortened.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxStringLength" })
  maxStringLength?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "shortenerType" })
  shortenerType?: EnterpriseCrmLoggingGwsFieldLimitsShortenerTypeEnum;
}
