/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The current billing period.
 */
export class APIBillingPeriodUsageOut extends SpeakeasyBase {
  /**
   * User API Key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "apiKey" })
  apiKey?: string;

  /**
   * Current period billing status ex OPEN.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "billingStatus" })
  billingStatus?: string;

  /**
   * Current period hard limit (reaching the limit sends an email notification and blocks the API Key).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hardLimit" })
  hardLimit?: number;

  /**
   * Datetime when the the plan's current period endend.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodEnded" })
  periodEnded?: number;

  /**
   * Datetime when the the plan's current period started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodStarted" })
  periodStarted?: number;

  /**
   * Current period soft limit (reaching the limit sends an email notification).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "softLimit" })
  softLimit?: number;

  /**
   * Datetime when the the plan's current period endend (in Stripe). Internal and Stripe periodicity should ~coincide.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stripeCurrentPeriodEnd" })
  stripeCurrentPeriodEnd?: number;

  /**
   * Datetime when the the plan's current period started (in Stripe). Internal and Stripe periodicity should ~coincide.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stripeCurrentPeriodStart" })
  stripeCurrentPeriodStart?: number;

  /**
   * Datetime when the user subscribed to the plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionStarted" })
  subscriptionStarted?: number;

  /**
   * Current period usage in units (NB some API endpoints use more than one unit).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: number;
}
