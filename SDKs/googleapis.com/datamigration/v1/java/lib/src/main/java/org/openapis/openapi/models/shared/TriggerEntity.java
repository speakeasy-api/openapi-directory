/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TriggerEntity - Trigger is not used as an independent entity, it is retrieved as part of a Table entity.
 */
public class TriggerEntity {
    /**
     * Custom engine specific features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customFeatures")
    public java.util.Map<String, Object> customFeatures;
    public TriggerEntity withCustomFeatures(java.util.Map<String, Object> customFeatures) {
        this.customFeatures = customFeatures;
        return this;
    }
    
    /**
     * The name of the trigger.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TriggerEntity withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The SQL code which creates the trigger.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sqlCode")
    public String sqlCode;
    public TriggerEntity withSqlCode(String sqlCode) {
        this.sqlCode = sqlCode;
        return this;
    }
    
    /**
     * Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerType")
    public String triggerType;
    public TriggerEntity withTriggerType(String triggerType) {
        this.triggerType = triggerType;
        return this;
    }
    
    /**
     * The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggeringEvents")
    public String[] triggeringEvents;
    public TriggerEntity withTriggeringEvents(String[] triggeringEvents) {
        this.triggeringEvents = triggeringEvents;
        return this;
    }
    
}
