/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { VideoParticipantSummaryEnumCodecEnum } from "./videoparticipantsummaryenumcodecenum";
import { VideoParticipantSummaryEnumEdgeLocationEnum } from "./videoparticipantsummaryenumedgelocationenum";
import { VideoParticipantSummaryEnumRoomStatusEnum } from "./videoparticipantsummaryenumroomstatusenum";
import { VideoParticipantSummaryEnumTwilioRealmEnum } from "./videoparticipantsummaryenumtwiliorealmenum";
import { Expose, Transform } from "class-transformer";

/**
 * OK
 */
export class InsightsV1VideoRoomSummaryVideoParticipantSummary extends SpeakeasyBase {
  /**
   * Account SID associated with the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * Codecs detected from the participant. Can be `VP8`, `H264`, or `VP9`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codecs" })
  codecs?: VideoParticipantSummaryEnumCodecEnum[];

  /**
   * Amount of time in seconds the participant was in the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration_sec" })
  durationSec?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "edge_location" })
  edgeLocation?: VideoParticipantSummaryEnumEdgeLocationEnum;

  /**
   * Reason the participant left the room. See [the list of possible values here](https://www.twilio.com/docs/video/video-log-analyzer/video-log-analyzer-api#end_reason).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_reason" })
  endReason?: string;

  /**
   * Errors encountered by the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: number;

  /**
   * Twilio error code dictionary link.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code_url" })
  errorCodeUrl?: string;

  /**
   * When the participant joined the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "join_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  joinTime?: Date;

  /**
   * When the participant left the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leave_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  leaveTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "media_region" })
  mediaRegion?: VideoParticipantSummaryEnumTwilioRealmEnum;

  /**
   * The application-defined string that uniquely identifies the participant within a Room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participant_identity" })
  participantIdentity?: string;

  /**
   * Unique identifier for the participant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participant_sid" })
  participantSid?: string;

  /**
   * Object containing information about the participant's data from the room. See [below](https://www.twilio.com/docs/video/video-log-analyzer/video-log-analyzer-api#properties) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: any;

  /**
   * Object containing information about the SDK name and version. See [below](https://www.twilio.com/docs/video/video-log-analyzer/video-log-analyzer-api#publisher_info) for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisher_info" })
  publisherInfo?: any;

  /**
   * Unique identifier for the room.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_sid" })
  roomSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: VideoParticipantSummaryEnumRoomStatusEnum;

  /**
   * URL of the participant resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
