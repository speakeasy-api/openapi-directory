<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PostPortfolioConstructionInvestableRequestBody
{
    /**
     * The number of assets
     * 
     * @var int $assets
     */
	#[\JMS\Serializer\Annotation\SerializedName('assets')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $assets;
    
    /**
     * $assetsGroups
     * 
     * @var ?array<array<int>> $assetsGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsGroups')]
    #[\JMS\Serializer\Annotation\Type('array<array<int>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsGroups = null;
    
    /**
     * assetsGroupsWeights[i] is the desired weight of the assets group k in the portfolio, in percentage (can be null to indicate no specific desire); requires assetsGroups to be present
     * 
     * @var ?array<float> $assetsGroupsWeights
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsGroupsWeights')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsGroupsWeights = null;
    
    /**
     * assetsMinimumNotionalValues[i] is the minimum monetary value that the position in the asset i is required to represent when the asset i is included in the portfolio
     * 
     * @var ?array<float> $assetsMinimumNotionalValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsMinimumNotionalValues')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsMinimumNotionalValues = null;
    
    /**
     * assetsMinimumPositions[i] is the minimum number of shares of the asset i that is required to purchase when the asset i is included in the portfolio (usual values are the same as for assetsSizeLots)
     * 
     * @var ?array<float> $assetsMinimumPositions
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsMinimumPositions')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsMinimumPositions = null;
    
    /**
     * assetsPrices[i] is the price of the asset i
     * 
     * @var array<float> $assetsPrices
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsPrices')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    public array $assetsPrices;
    
    /**
     * assetsSizeLots[i] is the number of shares by which it is required to purchase the asset i (usual values are 1 if the asset needs to be purchased share by share, 100 if the asset needs to be purchased by an integer multiple of 100 shares, and 1/1000000 - e.g. for Robinhood broker - if the asset can be purchased by fractional shares)
     * 
     * @var ?array<float> $assetsSizeLots
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsSizeLots')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsSizeLots = null;
    
    /**
     * assetsWeights[i] is the desired weight of the asset i in the portfolio, in percentage (can be null to indicate no specific desire)
     * 
     * @var ?array<float> $assetsWeights
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetsWeights')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $assetsWeights = null;
    
    /**
     * maximumAssetsGroupsWeights[k] is the maximum desired weight of the assets group k in the portfolio, in percentage (can be null to indicate no specific desire); requires assetsGroups to be present
     * 
     * @var ?array<float> $maximumAssetsGroupsWeights
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumAssetsGroupsWeights')]
    #[\JMS\Serializer\Annotation\Type('array<float>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $maximumAssetsGroupsWeights = null;
    
    /**
     * The monetary value of the portfolio
     * 
     * @var float $portfolioValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('portfolioValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $portfolioValue;
    
	public function __construct()
	{
		$this->assets = 0;
		$this->assetsGroups = null;
		$this->assetsGroupsWeights = null;
		$this->assetsMinimumNotionalValues = null;
		$this->assetsMinimumPositions = null;
		$this->assetsPrices = [];
		$this->assetsSizeLots = null;
		$this->assetsWeights = null;
		$this->maximumAssetsGroupsWeights = null;
		$this->portfolioValue = 0;
	}
}
