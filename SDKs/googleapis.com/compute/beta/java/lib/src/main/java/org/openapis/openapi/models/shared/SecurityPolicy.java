/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SecurityPolicy - Represents a Google Cloud Armor security policy resource. Only external backend services that use load balancers can reference a security policy. For more information, see Google Cloud Armor security policy overview.
 */
public class SecurityPolicy {
    /**
     * Configuration options for Cloud Armor Adaptive Protection (CAAP).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adaptiveProtectionConfig")
    public SecurityPolicyAdaptiveProtectionConfig adaptiveProtectionConfig;
    public SecurityPolicy withAdaptiveProtectionConfig(SecurityPolicyAdaptiveProtectionConfig adaptiveProtectionConfig) {
        this.adaptiveProtectionConfig = adaptiveProtectionConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advancedOptionsConfig")
    public SecurityPolicyAdvancedOptionsConfig advancedOptionsConfig;
    public SecurityPolicy withAdvancedOptionsConfig(SecurityPolicyAdvancedOptionsConfig advancedOptionsConfig) {
        this.advancedOptionsConfig = advancedOptionsConfig;
        return this;
    }
    
    /**
     * A list of associations that belong to this policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associations")
    public SecurityPolicyAssociation[] associations;
    public SecurityPolicy withAssociations(SecurityPolicyAssociation[] associations) {
        this.associations = associations;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;
    public SecurityPolicy withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ddosProtectionConfig")
    public SecurityPolicyDdosProtectionConfig ddosProtectionConfig;
    public SecurityPolicy withDdosProtectionConfig(SecurityPolicyDdosProtectionConfig ddosProtectionConfig) {
        this.ddosProtectionConfig = ddosProtectionConfig;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public SecurityPolicy withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * User-provided name of the Organization security plicy. The name should be unique in the organization in which the security policy is created. This should only be used when SecurityPolicyType is FIREWALL. The name must be 1-63 characters long, and comply with https://www.ietf.org/rfc/rfc1035.txt. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public SecurityPolicy withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Specifies a fingerprint for this resource, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make get() request to the security policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public SecurityPolicy withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public SecurityPolicy withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output only] Type of the resource. Always compute#securityPolicyfor security policies
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public SecurityPolicy withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * A fingerprint for the labels being applied to this security policy, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the security policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelFingerprint")
    public String labelFingerprint;
    public SecurityPolicy withLabelFingerprint(String labelFingerprint) {
        this.labelFingerprint = labelFingerprint;
        return this;
    }
    
    /**
     * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public SecurityPolicy withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public SecurityPolicy withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * [Output Only] The parent of the security policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parent")
    public String parent;
    public SecurityPolicy withParent(String parent) {
        this.parent = parent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recaptchaOptionsConfig")
    public SecurityPolicyRecaptchaOptionsConfig recaptchaOptionsConfig;
    public SecurityPolicy withRecaptchaOptionsConfig(SecurityPolicyRecaptchaOptionsConfig recaptchaOptionsConfig) {
        this.recaptchaOptionsConfig = recaptchaOptionsConfig;
        return this;
    }
    
    /**
     * [Output Only] URL of the region where the regional security policy resides. This field is not applicable to global security policies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public SecurityPolicy withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Total count of all security policy rule tuples. A security policy can not exceed a set number of tuples.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleTupleCount")
    public Integer ruleTupleCount;
    public SecurityPolicy withRuleTupleCount(Integer ruleTupleCount) {
        this.ruleTupleCount = ruleTupleCount;
        return this;
    }
    
    /**
     * A list of rules that belong to this policy. There must always be a default rule which is a rule with priority 2147483647 and match all condition (for the match condition this means match "*" for srcIpRanges and for the networkMatch condition every field must be either match "*" or not set). If no rules are provided when creating a security policy, a default rule with action "allow" will be added.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rules")
    public SecurityPolicyRule[] rules;
    public SecurityPolicy withRules(SecurityPolicyRule[] rules) {
        this.rules = rules;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public SecurityPolicy withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;
    public SecurityPolicy withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * The type indicates the intended use of the security policy. - CLOUD_ARMOR: Cloud Armor backend security policies can be configured to filter incoming HTTP requests targeting backend services. They filter requests before they hit the origin servers. - CLOUD_ARMOR_EDGE: Cloud Armor edge security policies can be configured to filter incoming HTTP requests targeting backend services (including Cloud CDN-enabled) as well as backend buckets (Cloud Storage). They filter requests before the request is served from Google's cache. - CLOUD_ARMOR_INTERNAL_SERVICE: Cloud Armor internal service policies can be configured to filter HTTP requests targeting services managed by Traffic Director in a service mesh. They filter requests before the request is served from the application. - CLOUD_ARMOR_NETWORK: Cloud Armor network policies can be configured to filter packets targeting network load balancing resources such as backend services, target pools, target instances, and instances with external IPs. They filter requests before the request is served from the application. This field can be set only at resource creation time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public SecurityPolicyTypeEnum type;
    public SecurityPolicy withType(SecurityPolicyTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
