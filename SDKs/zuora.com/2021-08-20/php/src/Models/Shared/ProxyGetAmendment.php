<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProxyGetAmendment - Container for custom fields of an Amendment object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProxyGetAmendment
{
    /**
     *  Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. **Required:** For amendment of type TermsAndConditions when changing the automatic renewal status of a subscription.
     * 
     * **Values**: true, false 
     * 
     * @var ?bool $autoRenew
     */
	#[\JMS\Serializer\Annotation\SerializedName('AutoRenew')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoRenew = null;
    
    /**
     *  A unique alphanumeric string that identifies the amendment.
     * 
     * **Character limit**: 50 **Values**: one of the following:
     * 
     * - `null` generates a value automatically
     * - A string
     * 
     * 
     * @var ?string $code
     */
	#[\JMS\Serializer\Annotation\SerializedName('Code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;
    
    /**
     *  The date when the amendment's changes become effective for billing purposes.
     * 
     * **Version notes**: -- 
     * 
     * @var ?\DateTime $contractEffectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ContractEffectiveDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $contractEffectiveDate = null;
    
    /**
     *  The user ID of the person who created the amendment.
     * 
     * **Character limit**: 32 **Values**: automatically generated 
     * 
     * @var ?string $createdById
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdById = null;
    
    /**
     *  The date when the amendment was created.
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     *  The length of the period for the current subscription term. This field can be updated when Status is `Draft`.
     * 
     * **Required**: Only if the value of the Type field is set to `TermsAndConditions` and TermType is set to `TERMED`. This field is not required if TermType is set to `EVERGREEN`.
     * **Character limit**: **Values**: a valid number 
     * 
     * @var ?int $currentTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrentTerm')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $currentTerm = null;
    
    /**
     *  The period type for the current subscription term. **Values**:
     * 
     * 
     * - `Month` (default)
     * - `Year`
     * - `Day`
     * - `Week`
     * **Note**:
     * 
     * - This field can be updated when Status is `Draft`.
     * - This field is used with the CurrentTerm field to specify the current subscription term.
     * 
     * 
     * @var ?string $currentTermPeriodType
     */
	#[\JMS\Serializer\Annotation\SerializedName('CurrentTermPeriodType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentTermPeriodType = null;
    
    /**
     * The date when the customer accepts the amendment's changes to the subscription.
     * 
     * 
     * This field is only required if [Zuora is configured to require customer acceptance in Z-Billing](https://knowledgecenter.zuora.com/CB_Billing/W_Billing_and_Payments_Settings/Define_Default_Subscription_Settings) and the subscription is currently in the Pending Acceptance status (the value of the `Status` field is currently `PendingAcceptance`).
     * 
     * 
     * @var ?\DateTime $customerAcceptanceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('CustomerAcceptanceDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $customerAcceptanceDate = null;
    
    /**
     *  A description of the amendment.
     * 
     * **Character limit**: 500 **Values**: maximum 500 characters 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     *  The date when the amendment's changes take effective. This field validates that the amendment's changes are within valid ranges of products and product rate plans.
     * 
     * **Required**: For the cancellation amendments. Optional for other types of amendments.
     * **Version notes**: -- 
     * 
     * @var ?\DateTime $effectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('EffectiveDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $effectiveDate = null;
    
    /**
     * Object identifier.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     *  The name of the amendment.
     * 
     * **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     *  Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.
     * 
     * **Required**: If TermType is Termed **Values**: RENEW_WITH_SPECIFIC_TERM (default), RENEW_TO_EVERGREEN 
     * 
     * @var ?string $renewalSetting
     */
	#[\JMS\Serializer\Annotation\SerializedName('RenewalSetting')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $renewalSetting = null;
    
    /**
     *  The term of renewal for the amended subscription. This field can be updated when Status is `Draft`.
     * 
     * **Required**: Only if the value of the Type field is set to `TermsAndConditions`.
     * **Character limit**: **Values:** a valid number 
     * 
     * @var ?int $renewalTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('RenewalTerm')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $renewalTerm = null;
    
    /**
     *  The period type for the subscription renewal term. This field can be updated when Status is `Draft`.
     * 
     * **Required**: Only if the value of the Type field is set to `TermsAndConditions`. This field is used with the RenewalTerm field to specify the subscription renewal term.
     * **Values**:
     * 
     * - `Month` (default)
     * - `Year`
     * - `Day`
     * - `Week`
     * 
     * 
     * @var ?string $renewalTermPeriodType
     */
	#[\JMS\Serializer\Annotation\SerializedName('RenewalTermPeriodType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $renewalTermPeriodType = null;
    
    /**
     * The date when service is activated.
     * 
     * 
     * This field is only required if [Zuora is configured to require service activation in Z-Billing](https://knowledgecenter.zuora.com/CB_Billing/W_Billing_and_Payments_Settings/Define_Default_Subscription_Settings) and the subscription is currently in the Pending Activation status (the value of the `Status` field is currently `PendingActivation`).
     * 
     * 
     * @var ?\DateTime $serviceActivationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ServiceActivationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $serviceActivationDate = null;
    
    /**
     *  The date when the UpdateProduct amendment takes effect. This field is only applicable if there is already a future-dated UpdateProduct amendment on the subscription.
     * 
     * **Required**: Only for the UpdateProduct amendments if there is already a future-dated UpdateProduct amendment on the subscription.
     * **Version notes**: -- 
     * 
     * @var ?\DateTime $specificUpdateDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('SpecificUpdateDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $specificUpdateDate = null;
    
    /**
     *  The status of the amendment. Type: string (enum) **Character limit**: 17 **Values**: one of the following:
     * 
     * 
     * - Draft (default, if left null)
     * - Pending Activation
     * - Pending Acceptance
     * - Completed
     * 
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     *  The ID of the subscription that the amendment changes.
     * 
     * **Character limit**: 32 **Values**: a valid subscription ID 
     * 
     * @var ?string $subscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('SubscriptionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionId = null;
    
    /**
     *  The date when the new terms and conditions take effect.
     * 
     * 
     * 
     * **Version notes**: -- 
     * 
     * @var ?\DateTime $termStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('TermStartDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $termStartDate = null;
    
    /**
     *  Indicates if the subscription isTERMED or EVERGREEN.
     * 
     * 
     * - A TERMED subscription has an expiration date, and must be manually renewed.
     * - An EVERGREEN subscription doesn't have an expiration date, and must be manually ended.
     * 
     * **Required**: Only when as part of an amendment of type TermsAndConditions &#65279;to change the term type of a subscription. Type: string **Character limit**: 9 **Values**: TERMED, EVERGREEN 
     * 
     * @var ?string $termType
     */
	#[\JMS\Serializer\Annotation\SerializedName('TermType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $termType = null;
    
    /**
     *  The type of amendment.
     * 
     * **Character limit**: 18 **Values**: one of the following:
     * 
     * - Cancellation
     * - NewProduct
     * - OwnerTransfer
     * - RemoveProduct
     * - Renewal
     * - UpdateProduct
     * - TermsAndConditions
     * - SuspendSubscription
     * - ResumeSubscription
     * 
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     *  The ID of the user who last updated the amendment.
     * 
     * **Character limit**: 32 **Values**: automatically generated 
     * 
     * @var ?string $updatedById
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedById = null;
    
    /**
     *  The date when the amendment was last updated.
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $updatedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedDate = null;
    
	public function __construct()
	{
		$this->autoRenew = null;
		$this->code = null;
		$this->contractEffectiveDate = null;
		$this->createdById = null;
		$this->createdDate = null;
		$this->currentTerm = null;
		$this->currentTermPeriodType = null;
		$this->customerAcceptanceDate = null;
		$this->description = null;
		$this->effectiveDate = null;
		$this->id = null;
		$this->name = null;
		$this->renewalSetting = null;
		$this->renewalTerm = null;
		$this->renewalTermPeriodType = null;
		$this->serviceActivationDate = null;
		$this->specificUpdateDate = null;
		$this->status = null;
		$this->subscriptionId = null;
		$this->termStartDate = null;
		$this->termType = null;
		$this->type = null;
		$this->updatedById = null;
		$this->updatedDate = null;
	}
}
