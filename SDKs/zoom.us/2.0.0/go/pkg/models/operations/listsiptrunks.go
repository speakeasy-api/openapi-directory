// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type ListSIPTrunksPathParams struct {
	// Unique Identifier of the Account. To retrieve SIP trunks assigned to a sub account, provide the account ID of the sub account in the as the value of this field. To retrieve SIP trunks of a master account, provide `me` as the value of this field.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
}

type ListSIPTrunksRequest struct {
	PathParams ListSIPTrunksPathParams
}

type ListSIPTrunks200ApplicationXMLSIPTrunks struct {
	// DNIS of the SIP trunk.
	Dnis *string
	// Unique identifier of the sip trunk.
	ID *string
	// Name assigned to the SIP trunk.
	Name *string
	// Prefix of the SIP Connected Audio phone number.
	NumberPrefix *string
	// Outbound caller Id assigned to the trunk.
	OutboundCallerID *string
	// IP address or domain of the SIP trunk.
	SipServerAddress *string
}

// ListSIPTrunks200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// List of SIP Trunks returned.
type ListSIPTrunks200ApplicationXML struct {
	SipTrunks []ListSIPTrunks200ApplicationXMLSIPTrunks
	// Total number of records returned.
	TotalRecords *int64
}

type ListSIPTrunks200ApplicationJSONSIPTrunks struct {
	// DNIS of the SIP trunk.
	Dnis *string `json:"dnis,omitempty"`
	// Unique identifier of the sip trunk.
	ID *string `json:"id,omitempty"`
	// Name assigned to the SIP trunk.
	Name *string `json:"name,omitempty"`
	// Prefix of the SIP Connected Audio phone number.
	NumberPrefix *string `json:"number_prefix,omitempty"`
	// Outbound caller Id assigned to the trunk.
	OutboundCallerID *string `json:"outbound_caller_id,omitempty"`
	// IP address or domain of the SIP trunk.
	SipServerAddress *string `json:"sip_server_address,omitempty"`
}

// ListSIPTrunks200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// List of SIP Trunks returned.
type ListSIPTrunks200ApplicationJSON struct {
	SipTrunks []ListSIPTrunks200ApplicationJSONSIPTrunks `json:"sip_trunks,omitempty"`
	// Total number of records returned.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type ListSIPTrunksResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// List of SIP Trunks returned.
	ListSIPTrunks200ApplicationJSONObject *ListSIPTrunks200ApplicationJSON
}
