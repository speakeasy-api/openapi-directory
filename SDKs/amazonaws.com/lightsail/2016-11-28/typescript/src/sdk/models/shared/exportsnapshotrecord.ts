/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationInfo } from "./destinationinfo";
import { ExportSnapshotRecordSourceInfo } from "./exportsnapshotrecordsourceinfo";
import { RecordStateEnum } from "./recordstateenum";
import { ResourceLocation } from "./resourcelocation";
import { ResourceTypeEnum } from "./resourcetypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes an export snapshot record.
 */
export class ExportSnapshotRecord extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationInfo" })
  @Type(() => DestinationInfo)
  destinationInfo?: DestinationInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => ResourceLocation)
  location?: ResourceLocation;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceType" })
  resourceType?: ResourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceInfo" })
  @Type(() => ExportSnapshotRecordSourceInfo)
  sourceInfo?: ExportSnapshotRecordSourceInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: RecordStateEnum;
}
