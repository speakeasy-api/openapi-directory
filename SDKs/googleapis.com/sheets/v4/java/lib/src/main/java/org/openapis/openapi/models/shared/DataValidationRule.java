/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataValidationRule - A data validation rule.
 */
public class DataValidationRule {
    /**
     * A condition that can evaluate to true or false. BooleanConditions are used by conditional formatting, data validation, and the criteria in filters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public BooleanCondition condition;
    public DataValidationRule withCondition(BooleanCondition condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * A message to show the user when adding data to the cell.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputMessage")
    public String inputMessage;
    public DataValidationRule withInputMessage(String inputMessage) {
        this.inputMessage = inputMessage;
        return this;
    }
    
    /**
     * True if the UI should be customized based on the kind of condition. If true, "List" conditions will show a dropdown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCustomUi")
    public Boolean showCustomUi;
    public DataValidationRule withShowCustomUi(Boolean showCustomUi) {
        this.showCustomUi = showCustomUi;
        return this;
    }
    
    /**
     * True if invalid data should be rejected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strict")
    public Boolean strict;
    public DataValidationRule withStrict(Boolean strict) {
        this.strict = strict;
        return this;
    }
    
}
