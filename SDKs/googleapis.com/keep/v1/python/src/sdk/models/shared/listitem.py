"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import textcontent as shared_textcontent
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListItem:
    r"""A single list item in a note's list."""
    
    checked: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('checked'), 'exclude': lambda f: f is None }})
    r"""Whether this item has been checked off or not."""  
    child_list_items: Optional[list[ListItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('childListItems'), 'exclude': lambda f: f is None }})
    r"""If set, list of list items nested under this list item. Only one level of nesting is allowed."""  
    text: Optional[shared_textcontent.TextContent] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""The block of text for a single text section or list item."""  
    