"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dynamiclistener as shared_dynamiclistener
from ..shared import staticlistener as shared_staticlistener
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListenersConfigDump:
    r"""Envoy's listener manager fills this message with all currently known listeners. Listener configuration information can be used to recreate an Envoy configuration by populating all listeners as static listeners or by returning them in a LDS response."""
    
    dynamic_listeners: Optional[list[shared_dynamiclistener.DynamicListener]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dynamicListeners'), 'exclude': lambda f: f is None }})
    r"""State for any warming, active, or draining listeners."""  
    static_listeners: Optional[list[shared_staticlistener.StaticListener]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('staticListeners'), 'exclude': lambda f: f is None }})
    r"""The statically loaded listener configs."""  
    version_info: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionInfo'), 'exclude': lambda f: f is None }})
    r"""This is the :ref:`version_info ` in the last processed LDS discovery response. If there are only static bootstrap listeners, this field will be \\"\\"."""  
    