// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NoteCreatorRoleEnum - Output only. The role who created the note.
type NoteCreatorRoleEnum string

const (
	NoteCreatorRoleEnumBuyerSellerRoleUnspecified NoteCreatorRoleEnum = "BUYER_SELLER_ROLE_UNSPECIFIED"
	NoteCreatorRoleEnumBuyer                      NoteCreatorRoleEnum = "BUYER"
	NoteCreatorRoleEnumSeller                     NoteCreatorRoleEnum = "SELLER"
)

func (e *NoteCreatorRoleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BUYER_SELLER_ROLE_UNSPECIFIED":
		fallthrough
	case "BUYER":
		fallthrough
	case "SELLER":
		*e = NoteCreatorRoleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NoteCreatorRoleEnum: %s", s)
	}
}

// Note - A text note attached to the proposal to facilitate the communication between buyers and sellers.
type Note struct {
	// Output only. When this note was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The role who created the note.
	CreatorRole *NoteCreatorRoleEnum `json:"creatorRole,omitempty"`
	// The text of the note. Maximum length is 1024 characters.
	Note *string `json:"note,omitempty"`
}

// NoteInput - A text note attached to the proposal to facilitate the communication between buyers and sellers.
type NoteInput struct {
	// The text of the note. Maximum length is 1024 characters.
	Note *string `json:"note,omitempty"`
}
