"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import amount as shared_amount
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CustomNotification:
    
    amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})  
    event_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventCode'), 'exclude': lambda f: f is None }})
    r"""The event that caused the notification to be sent.Currently supported values:
    * **AUTHORISATION**
    * **CANCELLATION**
    * **REFUND**
    * **CAPTURE**
    * **DEACTIVATE_RECURRING**
    * **REPORT_AVAILABLE**
    * **CHARGEBACK**
    * **REQUEST_FOR_INFORMATION**
    * **NOTIFICATION_OF_CHARGEBACK**
    * **NOTIFICATIONTEST**
    * **ORDER_OPENED**
    * **ORDER_CLOSED**
    * **CHARGEBACK_REVERSED**
    * **REFUNDED_REVERSED**
    * **REFUND_WITH_DATA**
    """  
    event_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The time of the event. Format: [ISO 8601](http://www.w3.org/TR/NOTE-datetime), YYYY-MM-DDThh:mm:ssTZD."""  
    merchant_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantReference'), 'exclude': lambda f: f is None }})
    r"""Your reference for the custom test notification."""  
    payment_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentMethod'), 'exclude': lambda f: f is None }})
    r"""The payment method for the payment that the notification is about. Possible values:
    * **amex**
    * **visa**
    * **mc**
    * **maestro**
    * **bcmc**
    * **paypal**
     * **sms**
     * **bankTransfer_NL**
    * **bankTransfer_DE**
    * **bankTransfer_BE**
    * **ideal**
    * **elv**
    * **sepadirectdebit**
    """  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""A descripton of what caused the notification."""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""The outcome of the event which the notification is about. Set to either **true** or **false**."""  
    