// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FirebasedatabaseProjectsLocationsInstancesListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasedatabaseProjectsLocationsInstancesListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasedatabaseProjectsLocationsInstancesListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasedatabaseProjectsLocationsInstancesListSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type FirebasedatabaseProjectsLocationsInstancesListSecurity struct {
	Option1 *FirebasedatabaseProjectsLocationsInstancesListSecurityOption1 `security:"option"`
	Option2 *FirebasedatabaseProjectsLocationsInstancesListSecurityOption2 `security:"option"`
	Option3 *FirebasedatabaseProjectsLocationsInstancesListSecurityOption3 `security:"option"`
	Option4 *FirebasedatabaseProjectsLocationsInstancesListSecurityOption4 `security:"option"`
}

type FirebasedatabaseProjectsLocationsInstancesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of database instances to return in the response. The server may return fewer than this at its discretion. If no value is specified (or too large a value is specified), then the server will impose its own limit.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Token returned from a previous call to `ListDatabaseInstances` indicating where in the set of database instances to resume listing.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Required. The parent project for which to list database instances, in the form: `projects/{project-number}/locations/{location-id}` To list across all locations, use a parent in the form: `projects/{project-number}/locations/-`
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Indicate that DatabaseInstances in the `DELETED` state should also be returned.
	ShowDeleted *bool `queryParam:"style=form,explode=true,name=showDeleted"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type FirebasedatabaseProjectsLocationsInstancesListResponse struct {
	ContentType string
	// Successful response
	ListDatabaseInstancesResponse *shared.ListDatabaseInstancesResponse
	StatusCode                    int
	RawResponse                   *http.Response
}
