<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * NHItem - A JSON object describing the item.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class NHItem
{
    /**
     * Where the clothing may be obtained from (could be multiple sources). `from` is a brief description of the source; `note`, when provided, provides additional details.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NHItemAvailability> $availability
     */
	#[\JMS\Serializer\Annotation\SerializedName('availability')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NHItemAvailability>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $availability = null;
    
    /**
     * An array of prices, for when the interior may be purchased with Bells, Nook Miles, etc..
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NHItemBuy> $buy
     */
	#[\JMS\Serializer\Annotation\SerializedName('buy')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NHItemBuy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $buy = null;
    
    /**
     * Whether the item is edible or not.
     * 
     * @var ?bool $edible
     */
	#[\JMS\Serializer\Annotation\SerializedName('edible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $edible = null;
    
    /**
     * The base value that the item provides to a player's Happy Home Academy score when placed in their home.
     * 
     * @var ?int $hhaBase
     */
	#[\JMS\Serializer\Annotation\SerializedName('hha_base')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $hhaBase = null;
    
    /**
     * Image of the interior. dodo.ac is Nookipedia's CDN server.
     * 
     * @var ?string $imageUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('image_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $imageUrl = null;
    
    /**
     * Whether or not the item is a fence or not.
     * 
     * @var ?bool $isFence
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_fence')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFence = null;
    
    /**
     * (WIP)
     * 
     * @var ?int $materialNameSort
     */
	#[\JMS\Serializer\Annotation\SerializedName('material_name_sort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $materialNameSort = null;
    
    /**
     * (WIP)
     * 
     * @var ?string $materialSeasonality
     */
	#[\JMS\Serializer\Annotation\SerializedName('material_seasonality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $materialSeasonality = null;
    
    /**
     * (WIP)
     * 
     * @var ?int $materialSeasonalitySort
     */
	#[\JMS\Serializer\Annotation\SerializedName('material_seasonality_sort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $materialSeasonalitySort = null;
    
    /**
     * (WIP)
     * 
     * @var ?int $materialSort
     */
	#[\JMS\Serializer\Annotation\SerializedName('material_sort')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $materialSort = null;
    
    /**
     * (WIP)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NHItemMaterialTypeEnum $materialType
     */
	#[\JMS\Serializer\Annotation\SerializedName('material_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NHItemMaterialTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NHItemMaterialTypeEnum $materialType = null;
    
    /**
     * The name of the item.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Any additional miscellaneous information about the item, such as a name change from a past update.
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * (WIP)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NHItemPlantTypeEnum $plantType
     */
	#[\JMS\Serializer\Annotation\SerializedName('plant_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\NHItemPlantTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NHItemPlantTypeEnum $plantType = null;
    
    /**
     * The number of bells the item can be sold to Nook's store for.
     * 
     * @var ?int $sell
     */
	#[\JMS\Serializer\Annotation\SerializedName('sell')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $sell = null;
    
    /**
     * How much the item can stack up to in a single inventory slot.
     * 
     * @var ?int $stack
     */
	#[\JMS\Serializer\Annotation\SerializedName('stack')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $stack = null;
    
    /**
     * Whether the item is available through legitimate gameplay. Some items are added to the game files in an update, but aren't actually made available until a subsequent update unlocks them.
     * 
     * @var ?bool $unlocked
     */
	#[\JMS\Serializer\Annotation\SerializedName('unlocked')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $unlocked = null;
    
    /**
     * Link to the respective Nookipedia article.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * The version of *New Horizons* that the item was added. Items that were included at the game's launch have version "1.0.0".
     * 
     * @var ?string $versionAdded
     */
	#[\JMS\Serializer\Annotation\SerializedName('version_added')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $versionAdded = null;
    
	public function __construct()
	{
		$this->availability = null;
		$this->buy = null;
		$this->edible = null;
		$this->hhaBase = null;
		$this->imageUrl = null;
		$this->isFence = null;
		$this->materialNameSort = null;
		$this->materialSeasonality = null;
		$this->materialSeasonalitySort = null;
		$this->materialSort = null;
		$this->materialType = null;
		$this->name = null;
		$this->notes = null;
		$this->plantType = null;
		$this->sell = null;
		$this->stack = null;
		$this->unlocked = null;
		$this->url = null;
		$this->versionAdded = null;
	}
}
