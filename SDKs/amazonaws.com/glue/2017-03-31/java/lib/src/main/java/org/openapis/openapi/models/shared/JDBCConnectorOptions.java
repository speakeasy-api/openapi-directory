/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JDBCConnectorOptions - Additional connection options for the connector.
 */
public class JDBCConnectorOptions {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataTypeMapping")
    public java.util.Map<String, GlueRecordTypeEnum> dataTypeMapping;

    public JDBCConnectorOptions withDataTypeMapping(java.util.Map<String, GlueRecordTypeEnum> dataTypeMapping) {
        this.dataTypeMapping = dataTypeMapping;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FilterPredicate")
    public String filterPredicate;

    public JDBCConnectorOptions withFilterPredicate(String filterPredicate) {
        this.filterPredicate = filterPredicate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobBookmarkKeys")
    public String[] jobBookmarkKeys;

    public JDBCConnectorOptions withJobBookmarkKeys(String[] jobBookmarkKeys) {
        this.jobBookmarkKeys = jobBookmarkKeys;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("JobBookmarkKeysSortOrder")
    public String jobBookmarkKeysSortOrder;

    public JDBCConnectorOptions withJobBookmarkKeysSortOrder(String jobBookmarkKeysSortOrder) {
        this.jobBookmarkKeysSortOrder = jobBookmarkKeysSortOrder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LowerBound")
    public Long lowerBound;

    public JDBCConnectorOptions withLowerBound(Long lowerBound) {
        this.lowerBound = lowerBound;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumPartitions")
    public Long numPartitions;

    public JDBCConnectorOptions withNumPartitions(Long numPartitions) {
        this.numPartitions = numPartitions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PartitionColumn")
    public String partitionColumn;

    public JDBCConnectorOptions withPartitionColumn(String partitionColumn) {
        this.partitionColumn = partitionColumn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpperBound")
    public Long upperBound;

    public JDBCConnectorOptions withUpperBound(Long upperBound) {
        this.upperBound = upperBound;
        return this;
    }
    
    public JDBCConnectorOptions(){}
}
