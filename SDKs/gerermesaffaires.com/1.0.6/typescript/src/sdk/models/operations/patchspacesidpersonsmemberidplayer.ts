/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchSpacesIdPersonsMemberIdPlayerRequestBodyClientManagementEnum {
  No = "no",
  Manager = "manager",
  Adn = "adn",
}

export enum PatchSpacesIdPersonsMemberIdPlayerRequestBodyPlayerEnum {
  Guest = "guest",
  Owner = "owner",
  Manager = "manager",
  Assistant = "assistant",
  Collaborator = "collaborator",
}

/**
 * Person to modify
 */
export class PatchSpacesIdPersonsMemberIdPlayerRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientManagement" })
  clientManagement?: PatchSpacesIdPersonsMemberIdPlayerRequestBodyClientManagementEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IsAdmin" })
  isAdmin?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Player" })
  player: PatchSpacesIdPersonsMemberIdPlayerRequestBodyPlayerEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PlayerEnd" })
  playerEnd?: string;
}

export class PatchSpacesIdPersonsMemberIdPlayerRequest extends SpeakeasyBase {
  /**
   * Person to modify
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchSpacesIdPersonsMemberIdPlayerRequestBody;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * memberId of the person
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=memberId",
  })
  memberId: string;
}

export class PatchSpacesIdPersonsMemberIdPlayerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
