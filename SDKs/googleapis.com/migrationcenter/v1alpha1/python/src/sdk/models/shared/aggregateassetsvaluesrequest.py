"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregation as shared_aggregation
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AggregateAssetsValuesRequest:
    r"""A request to aggregate one or more values."""
    
    aggregations: Optional[list[shared_aggregation.Aggregation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregations'), 'exclude': lambda f: f is None }})
    r"""Array of aggregations to perform. Up to 25 aggregations can be defined."""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})
    r"""The aggregation will be performed on assets that match the provided filter."""  
    