/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CloudassetBatchGetAssetsHistorySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2c: string;
}

/**
 * Optional. The content type.
 */
export enum CloudassetBatchGetAssetsHistoryContentTypeEnum {
  ContentTypeUnspecified = "CONTENT_TYPE_UNSPECIFIED",
  Resource = "RESOURCE",
  IamPolicy = "IAM_POLICY",
  OrgPolicy = "ORG_POLICY",
  AccessPolicy = "ACCESS_POLICY",
  OsInventory = "OS_INVENTORY",
  Relationship = "RELATIONSHIP",
}

export class CloudassetBatchGetAssetsHistoryRequest extends SpeakeasyBase {
  /**
   * V1 error format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=$.xgafv",
  })
  dollarXgafv?: shared.XgafvEnum;

  /**
   * OAuth access token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=access_token",
  })
  accessToken?: string;

  /**
   * Data format for response.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=alt" })
  alt?: shared.AltEnum;

  /**
   * A list of the full names of the assets. See: https://cloud.google.com/asset-inventory/docs/resource-name-format Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. The request becomes a no-op if the asset name list is empty, and the max size of the asset name list is 100 in one request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=assetNames",
  })
  assetNames?: string[];

  /**
   * JSONP
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=callback",
  })
  callback?: string;

  /**
   * Optional. The content type.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=contentType",
  })
  contentType?: CloudassetBatchGetAssetsHistoryContentTypeEnum;

  /**
   * Selector specifying which fields to include in a partial response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * OAuth 2.0 token for the current user.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=oauth_token",
  })
  oauthToken?: string;

  /**
   * Required. The relative name of the root asset. It can only be an organization number (such as "organizations/123"), a project ID (such as "projects/my-project-id")", or a project number (such as "projects/12345").
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=parent",
  })
  parent: string;

  /**
   * Returns response with indentations and line breaks.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=prettyPrint",
  })
  prettyPrint?: boolean;

  /**
   * Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=quotaUser",
  })
  quotaUser?: string;

  /**
   * End time of the time window (inclusive). If not specified, the current timestamp is used instead.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=readTimeWindow.endTime",
  })
  readTimeWindowEndTime?: string;

  /**
   * Start time of the time window (exclusive).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=readTimeWindow.startTime",
  })
  readTimeWindowStartTime?: string;

  /**
   * Optional. A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationships' history on the [asset_names]. It returns an error if any of the [relationship_types] doesn't belong to the supported relationship types of the [asset_names] or if any of the [asset_names]'s types doesn't belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships' history on the [asset_names] or returns an error if any of the [asset_names]'s types has no relationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=relationshipTypes",
  })
  relationshipTypes?: string[];

  /**
   * Legacy upload protocol for media (e.g. "media", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=uploadType",
  })
  uploadType?: string;

  /**
   * Upload protocol for media (e.g. "raw", "multipart").
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=upload_protocol",
  })
  uploadProtocol?: string;
}

export class CloudassetBatchGetAssetsHistoryResponse extends SpeakeasyBase {
  /**
   * Successful response
   */
  @SpeakeasyMetadata()
  batchGetAssetsHistoryResponse?: shared.BatchGetAssetsHistoryResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
