/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlarmConfiguration } from "./alarmconfiguration";
import { AlarmStateInformation } from "./alarmstateinformation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Includes information about the specified association.
 */
export class AssociationExecution extends SpeakeasyBase {
  /**
   * The details for the CloudWatch alarm you want to apply to an automation or command.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AlarmConfiguration" })
  @Type(() => AlarmConfiguration)
  alarmConfiguration?: AlarmConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationVersion" })
  associationVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DetailedStatus" })
  detailedStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionId" })
  executionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastExecutionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastExecutionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceCountByStatus" })
  resourceCountByStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;

  @SpeakeasyMetadata({ elemType: AlarmStateInformation })
  @Expose({ name: "TriggeredAlarms" })
  @Type(() => AlarmStateInformation)
  triggeredAlarms?: AlarmStateInformation[];
}
