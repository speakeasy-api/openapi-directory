/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CalendarHoursViewModel } from "./calendarhoursviewmodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class ScheduleViewModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "availability" })
  @Type(() => CalendarHoursViewModel)
  availability?: CalendarHoursViewModel;

  @SpeakeasyMetadata()
  @Expose({ name: "bookingsPerSlot" })
  bookingsPerSlot?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "deletedStatus" })
  deletedStatus?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "deletedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deletedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "interval" })
  interval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "object" })
  object?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "resourceGroupId" })
  resourceGroupId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
