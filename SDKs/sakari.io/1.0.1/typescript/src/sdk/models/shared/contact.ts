/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Tag } from "./tag";
import { Updated } from "./updated";
import { Expose, Type } from "class-transformer";

export class ContactMobile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;
}

export class Contact extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Type(() => Updated)
  created?: Updated;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mobile" })
  @Type(() => ContactMobile)
  mobile?: ContactMobile;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Type(() => Updated)
  updated?: Updated;

  @SpeakeasyMetadata()
  @Expose({ name: "valid" })
  valid?: boolean;
}
