<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UserDTO - The UserDTO Class.
 * 
 * Contains relevant fields of User DTO by masking actual User entity's fields in application.
 *             
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UserDTO
{
    /**
     * Account number of the user.It can be any stakeholder of the application.even can be a gym.
     * 
     *             
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * Entity number that make a relationship with BOX API DB.
     * 
     *             
     * 
     * @var ?string $externalEntityNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalEntityNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalEntityNumber = null;
    
    /**
     * Gaurdian of the this user if he/she is under 18 years old.
     * 
     *             
     * 
     * @var ?int $guardian
     */
	#[\JMS\Serializer\Annotation\SerializedName('guardian')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $guardian = null;
    
    /**
     * If this user is a gym, then the gym number.
     * 
     *             
     * 
     * @var ?string $gymNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('gymNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gymNumber = null;
    
    /**
     * If Someone introduced this user to the system, then that user's UserId.
     * 
     *             
     * 
     * @var ?int $introduceBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('introduceBy')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $introduceBy = null;
    
    /**
     * Name of the user.
     * 
     *             
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Unique number maintain by application to idenify user.
     * 
     *             
     * 
     * @var ?string $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $number = null;
    
    /**
     * Type of the user.
     * 
     *             
     * 
     * @var ?int $typeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('typeId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $typeId = null;
    
    /**
     * Indentity number(primary key) for user object. Generated in DB table when inserting a record.
     * 
     *             
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('userId')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
	public function __construct()
	{
		$this->accountNumber = null;
		$this->externalEntityNumber = null;
		$this->guardian = null;
		$this->gymNumber = null;
		$this->introduceBy = null;
		$this->name = null;
		$this->number = null;
		$this->typeId = null;
		$this->userId = null;
	}
}
