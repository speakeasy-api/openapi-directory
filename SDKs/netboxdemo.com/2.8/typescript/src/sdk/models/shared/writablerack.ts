/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum WritableRackOuterUnitEnum {
  Mm = "mm",
  In = "in",
}

export enum WritableRackStatusEnum {
  Reserved = "reserved",
  Available = "available",
  Planned = "planned",
  Active = "active",
  Deprecated = "deprecated",
}

export enum WritableRackTypeEnum {
  TwoPostFrame = "2-post-frame",
  FourPostFrame = "4-post-frame",
  FourPostCabinet = "4-post-cabinet",
  WallFrame = "wall-frame",
  WallCabinet = "wall-cabinet",
}

/**
 * Rail-to-rail width
 */
export enum WritableRackWidthEnum {
  Ten = "10",
  Nineteen = "19",
  TwentyOne = "21",
  TwentyThree = "23",
}

export class WritableRackInput extends SpeakeasyBase {
  /**
   * A unique tag used to identify this rack
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asset_tag" })
  assetTag?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  /**
   * Units are numbered top-to-bottom
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desc_units" })
  descUnits?: boolean;

  /**
   * Locally-assigned identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "facility_id" })
  facilityId?: string;

  /**
   * Assigned group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Outer dimension of rack (depth)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outer_depth" })
  outerDepth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "outer_unit" })
  outerUnit?: WritableRackOuterUnitEnum;

  /**
   * Outer dimension of rack (width)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "outer_width" })
  outerWidth?: number;

  /**
   * Functional role
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  site: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WritableRackStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: WritableRackTypeEnum;

  /**
   * Height in rack units
   */
  @SpeakeasyMetadata()
  @Expose({ name: "u_height" })
  uHeight?: number;

  /**
   * Rail-to-rail width
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: WritableRackWidthEnum;
}
