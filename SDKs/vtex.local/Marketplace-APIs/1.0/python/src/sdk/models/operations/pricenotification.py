"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class PriceNotificationRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand."""  
    account_name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'accountName', 'style': 'form', 'explode': True }})
    r"""Name of the VTEX account that belongs to the marketplace. The notification will be posted into this account."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    environment: str = dataclasses.field(metadata={'query_param': { 'field_name': 'environment', 'style': 'form', 'explode': True }})
    r"""Environment to use. Used as part of the URL."""  
    seller_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'sellerId', 'style': 'simple', 'explode': False }})
    r"""A string that identifies the seller in the marketplace. This ID must be created by the marketplace and informed to the seller before the integration is built."""  
    sku_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'skuId', 'style': 'simple', 'explode': False }})
    r"""A string that identifies the seller's SKU that suffered the change. This is the ID that the marketplace will use for all  references to this SKU, such as price and inventory notifications."""  
    

@dataclasses.dataclass
class PriceNotificationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    