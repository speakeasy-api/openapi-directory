// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// FaxV1FaxDirectionEnum - The direction of the fax
type FaxV1FaxDirectionEnum string

const (
	FaxV1FaxDirectionEnumInbound  FaxV1FaxDirectionEnum = "inbound"
	FaxV1FaxDirectionEnumOutbound FaxV1FaxDirectionEnum = "outbound"
)

func (e FaxV1FaxDirectionEnum) ToPointer() *FaxV1FaxDirectionEnum {
	return &e
}

func (e *FaxV1FaxDirectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inbound":
		fallthrough
	case "outbound":
		*e = FaxV1FaxDirectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FaxV1FaxDirectionEnum: %v", v)
	}
}

// FaxV1FaxQualityEnum - The quality of the fax
type FaxV1FaxQualityEnum string

const (
	FaxV1FaxQualityEnumStandard  FaxV1FaxQualityEnum = "standard"
	FaxV1FaxQualityEnumFine      FaxV1FaxQualityEnum = "fine"
	FaxV1FaxQualityEnumSuperfine FaxV1FaxQualityEnum = "superfine"
)

func (e FaxV1FaxQualityEnum) ToPointer() *FaxV1FaxQualityEnum {
	return &e
}

func (e *FaxV1FaxQualityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "standard":
		fallthrough
	case "fine":
		fallthrough
	case "superfine":
		*e = FaxV1FaxQualityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FaxV1FaxQualityEnum: %v", v)
	}
}

// FaxV1FaxStatusEnum - The status of the fax
type FaxV1FaxStatusEnum string

const (
	FaxV1FaxStatusEnumQueued     FaxV1FaxStatusEnum = "queued"
	FaxV1FaxStatusEnumProcessing FaxV1FaxStatusEnum = "processing"
	FaxV1FaxStatusEnumSending    FaxV1FaxStatusEnum = "sending"
	FaxV1FaxStatusEnumDelivered  FaxV1FaxStatusEnum = "delivered"
	FaxV1FaxStatusEnumReceiving  FaxV1FaxStatusEnum = "receiving"
	FaxV1FaxStatusEnumReceived   FaxV1FaxStatusEnum = "received"
	FaxV1FaxStatusEnumNoAnswer   FaxV1FaxStatusEnum = "no-answer"
	FaxV1FaxStatusEnumBusy       FaxV1FaxStatusEnum = "busy"
	FaxV1FaxStatusEnumFailed     FaxV1FaxStatusEnum = "failed"
	FaxV1FaxStatusEnumCanceled   FaxV1FaxStatusEnum = "canceled"
)

func (e FaxV1FaxStatusEnum) ToPointer() *FaxV1FaxStatusEnum {
	return &e
}

func (e *FaxV1FaxStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "queued":
		fallthrough
	case "processing":
		fallthrough
	case "sending":
		fallthrough
	case "delivered":
		fallthrough
	case "receiving":
		fallthrough
	case "received":
		fallthrough
	case "no-answer":
		fallthrough
	case "busy":
		fallthrough
	case "failed":
		fallthrough
	case "canceled":
		*e = FaxV1FaxStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FaxV1FaxStatusEnum: %v", v)
	}
}

// FaxV1Fax - OK
type FaxV1Fax struct {
	// The SID of the Account that created the resource
	AccountSid *string `json:"account_sid,omitempty"`
	// The API version used to transmit the fax
	APIVersion *string `json:"api_version,omitempty"`
	// The ISO 8601 formatted date and time in GMT when the resource was created
	DateCreated *time.Time `json:"date_created,omitempty"`
	// The ISO 8601 formatted date and time in GMT when the resource was last updated
	DateUpdated *time.Time `json:"date_updated,omitempty"`
	// The direction of the fax
	Direction *FaxV1FaxDirectionEnum `json:"direction,omitempty"`
	// The time it took to transmit the fax
	Duration *int64 `json:"duration,omitempty"`
	// The number the fax was sent from
	From *string `json:"from,omitempty"`
	// The URLs of the fax's related resources
	Links map[string]interface{} `json:"links,omitempty"`
	// The SID of the FaxMedia resource that is associated with the Fax
	MediaSid *string `json:"media_sid,omitempty"`
	// The Twilio-hosted URL that can be used to download fax media
	MediaURL *string `json:"media_url,omitempty"`
	// The number of pages contained in the fax document
	NumPages *int64 `json:"num_pages,omitempty"`
	// The fax transmission price
	Price *float64 `json:"price,omitempty"`
	// The ISO 4217 currency used for billing
	PriceUnit *string `json:"price_unit,omitempty"`
	// The quality of the fax
	Quality *FaxV1FaxQualityEnum `json:"quality,omitempty"`
	// The unique string that identifies the resource
	Sid *string `json:"sid,omitempty"`
	// The status of the fax
	Status *FaxV1FaxStatusEnum `json:"status,omitempty"`
	// The phone number that received the fax
	To *string `json:"to,omitempty"`
	// The absolute URL of the fax resource
	URL *string `json:"url,omitempty"`
}
