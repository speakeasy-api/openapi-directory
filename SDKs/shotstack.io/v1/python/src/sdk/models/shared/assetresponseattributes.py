"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AssetResponseAttributesStatusEnum(str, Enum):
    r"""The status of the asset. <ul>
      <li>`importing` - the asset is being copied to the hosting service</li>
      <li>`ready` - the asset is ready to be served to users</li>
      <li>`failed` - the asset failed to copy or delete</li>
      <li>`deleted` - the asset has been deleted</li>
    </ul>
    """
    IMPORTING = 'importing'
    READY = 'ready'
    FAILED = 'failed'
    DELETED = 'deleted'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssetResponseAttributes:
    r"""The list of asset attributes and their values."""
    
    created: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'exclude': lambda f: f is None }})
    r"""The time the asset was created."""  
    filename: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename'), 'exclude': lambda f: f is None }})
    r"""The asset file name."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique id of the hosted asset in UUID format."""  
    owner: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner'), 'exclude': lambda f: f is None }})
    r"""The owner id of the render task."""  
    region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""The region the asset is hosted, currently only `au` (Australia)."""  
    render_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('renderId'), 'exclude': lambda f: f is None }})
    r"""The original render id that created the asset in UUID format. Multiple assets can share the same render id."""  
    status: Optional[AssetResponseAttributesStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the asset. <ul>
      <li>`importing` - the asset is being copied to the hosting service</li>
      <li>`ready` - the asset is ready to be served to users</li>
      <li>`failed` - the asset failed to copy or delete</li>
      <li>`deleted` - the asset has been deleted</li>
    </ul>
    """  
    updated: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated'), 'exclude': lambda f: f is None }})
    r"""The time the asset status was last updated."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The asset file name."""  
    